<Type Name="HtmlInputText" FullName="System.Web.UI.HtmlControls.HtmlInputText">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1b08a5d44b33968e5e149487b4e7f9d48268ff56" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69130695" /></Metadata><TypeSignature Language="C#" Value="public class HtmlInputText : System.Web.UI.HtmlControls.HtmlInputControl, System.Web.UI.IPostBackDataHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HtmlInputText extends System.Web.UI.HtmlControls.HtmlInputControl implements class System.Web.UI.IPostBackDataHandler" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.HtmlControls.HtmlInputText" />
  <TypeSignature Language="VB.NET" Value="Public Class HtmlInputText&#xA;Inherits HtmlInputControl&#xA;Implements IPostBackDataHandler" />
  <TypeSignature Language="C++ CLI" Value="public ref class HtmlInputText : System::Web::UI::HtmlControls::HtmlInputControl, System::Web::UI::IPostBackDataHandler" />
  <TypeSignature Language="F#" Value="type HtmlInputText = class&#xA;    inherit HtmlInputControl&#xA;    interface IPostBackDataHandler" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.HtmlControls.HtmlInputControl</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.IPostBackDataHandler</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("ServerChange")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Web.UI.SupportsEventValidation</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ValidationProperty("Value")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Разрешает программный доступ к элементам HTML <see langword="&lt;input type= text&gt;" /> и <see langword="&lt;input type= password&gt;" /> на сервере.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlInputText> Используйте элемент управления, чтобы создать однострочное текстовое поле, позволяющее пользователю вводить текст или пароль. <xref:System.Web.UI.HtmlControls.HtmlInputText.MaxLength%2A> Свойство определяет максимальное число символов, которые могут быть указаны в текстовом поле. <xref:System.Web.UI.HtmlControls.HtmlInputText.Size%2A> Свойство позволяет указать ширину текстового поля. Чтобы определить значение, указанное пользователем в текстовом поле, используйте <xref:System.Web.UI.HtmlControls.HtmlInputText.Value%2A> свойство. Элемент управления предоставляет событие, которое возникает, когда свойствоизменяетзначениямеждуотправкаминасервер.<xref:System.Web.UI.HtmlControls.HtmlInputText.Value%2A> <xref:System.Web.UI.HtmlControls.HtmlInputText.ServerChange> <xref:System.Web.UI.HtmlControls.HtmlInputText> Это позволяет создать обработчик событий, который выполняет пользовательский набор инструкций при каждом возникновении события.  
  
> [!NOTE]
>  <xref:System.Web.UI.HtmlControls.HtmlInputText> Элемент управления не предоставляет встроенного способа обратной передачи на сервер. Необходимо предоставить другой элемент управления на веб-странице, поддерживающей публикацию на сервере, например <xref:System.Web.UI.HtmlControls.HtmlButton> элемент управления, чтобы отправить значение элемента управления обратно на сервер.  
  
 Чтобы создать многострочное текстовое поле, используйте <xref:System.Web.UI.HtmlControls.HtmlTextArea> элемент управления.  
  
 Список начальных значений свойств для экземпляра <xref:System.Web.UI.HtmlControls.HtmlInputText>см. в <xref:System.Web.UI.HtmlControls.HtmlInputText.%23ctor%2A> разделе Конструктор.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать <xref:System.Web.UI.HtmlControls.HtmlInputText> элемент управления для получения вводимых пользователем данных.  
  
 [!code-aspx-csharp[HtmlInputText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlInputText/CS/htmlinputtextcs.aspx#1)]
 [!code-aspx-vb[HtmlInputText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlInputText/VB/htmlinputtextvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.HtmlControls.HtmlTextArea" />
    <altmember cref="T:System.Web.UI.HtmlControls.HtmlInputPassword" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.UI.HtmlControls.HtmlInputText" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HtmlInputText ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlInputText.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HtmlInputText();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.UI.HtmlControls.HtmlInputText" />, используя значения по умолчанию.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте этот конструктор для создания и инициализации нового экземпляра <xref:System.Web.UI.HtmlControls.HtmlInputText> элемента управления, используя значения по умолчанию. Он создает `text` элемент управления текстового поля типа.  
  
 В следующей таблице показано начальное значение свойства для экземпляра <xref:System.Web.UI.HtmlControls.HtmlInputText>.  
  
|Свойство.|Начальное значение|  
|--------------|-------------------|  
|<xref:System.Web.UI.HtmlControls.HtmlInputControl.Type%2A>|Строка литерала "Text".|  
  
   
  
## Examples  
 [!code-aspx-csharp[HtmlInputTextCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlInputTextCtor/CS/htmlinputtextctorcs.aspx#1)]
 [!code-aspx-vb[HtmlInputTextCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlInputTextCtor/VB/htmlinputtextctorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlControls.HtmlInputPassword" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HtmlInputText (string type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlInputText.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (type As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HtmlInputText(System::String ^ type);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.HtmlControls.HtmlInputText : string -&gt; System.Web.UI.HtmlControls.HtmlInputText" Usage="new System.Web.UI.HtmlControls.HtmlInputText type" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="type" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">Тип элемента управления вводом.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.UI.HtmlControls.HtmlInputText" /> с помощью указанного типа элемента управления вводом.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте этот конструктор для создания и инициализации нового экземпляра <xref:System.Web.UI.HtmlControls.HtmlInputText> элемента управления, используя указанный тип элемента управления вводом. Он позволяет создать конкретный тип элемента управления текстового поля, например `password`. В настоящее время `text` поддерживается только тип или.`password` Этот конструктор предназначен для создания других типов текстовых полей, если они становятся доступными.  
  
 В следующей таблице показано начальное значение свойства для экземпляра <xref:System.Web.UI.HtmlControls.HtmlInputText>.  
  
|Свойство.|Начальное значение|  
|--------------|-------------------|  
|<xref:System.Web.UI.HtmlControls.HtmlInputControl.Type%2A>|Значение параметра `type`.|  
  
> [!NOTE]
>  Хотя этот конструктор можно использовать для создания `text` элемента управления текстового поля типа, вместо него обычно используется конструктор без параметров.  
  
   
  
## Examples  
 [!code-aspx-csharp[HtmlInputTextCtor2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlInputTextCtor2/CS/htmlinputtextctor2cs.aspx#1)]
 [!code-aspx-vb[HtmlInputTextCtor2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlInputTextCtor2/VB/htmlinputtextctor2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlControls.HtmlInputPassword" />
      </Docs>
    </Member>
    <Member MemberName="LoadPostData">
      <MemberSignature Language="C#" Value="protected virtual bool LoadPostData (string postDataKey, System.Collections.Specialized.NameValueCollection postCollection);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LoadPostData(string postDataKey, class System.Collections.Specialized.NameValueCollection postCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlInputText.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LoadPostData (postDataKey As String, postCollection As NameValueCollection) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LoadPostData(System::String ^ postDataKey, System::Collections::Specialized::NameValueCollection ^ postCollection);" />
      <MemberSignature Language="F#" Value="abstract member LoadPostData : string * System.Collections.Specialized.NameValueCollection -&gt; bool&#xA;override this.LoadPostData : string * System.Collections.Specialized.NameValueCollection -&gt; bool" Usage="htmlInputText.LoadPostData (postDataKey, postCollection)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackDataHandler.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="postDataKey" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="postCollection" Type="System.Collections.Specialized.NameValueCollection" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="postDataKey">Идентификатор ключа элемента управления.</param>
        <param name="postCollection">Коллекция всех входящих значений имен.</param>
        <summary>Обрабатывает данные обратной передачи для элемента управления <see cref="T:System.Web.UI.HtmlControls.HtmlInputText" />.</summary>
        <returns>Значение <see langword="true" />, если состояние элемента управления <see cref="T:System.Web.UI.HtmlControls.HtmlInputText" /> изменилось в результате обратной передачи. В противном случае — значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод проверяет, отличается ли значение <xref:System.Web.UI.HtmlControls.HtmlInputText> обратной передачи элемента управления от предыдущего значения, и, если это так, возвращает `true`. <xref:System.Web.UI.HtmlControls.HtmlInputText.LoadPostData%2A>  
  
 Метод используется преимущественно разработчиками элементов управления, <xref:System.Web.UI.HtmlControls.HtmlInputText> которые расширяют функциональные возможности элемента управления. <xref:System.Web.UI.HtmlControls.HtmlInputText.LoadPostData%2A>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxLength">
      <MemberSignature Language="C#" Value="public int MaxLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxLength" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlInputText.MaxLength" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxLength { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxLength : int with get, set" Usage="System.Web.UI.HtmlControls.HtmlInputText.MaxLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает наибольшее количество знаков, которое можно ввести в данное текстовое поле.</summary>
        <value>Наибольшее число знаков, которое можно ввести в данное текстовое поле.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlInputText.MaxLength%2A> Используйте свойство, чтобы указать или определить максимальное число символов, которые могут быть указаны в текстовом поле.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать <xref:System.Web.UI.HtmlControls.HtmlInputText.MaxLength%2A> свойство для указания максимального числа символов, которые могут быть указаны в текстовом поле.  
  
 [!code-aspx-csharp[HtmlInputText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlInputText/CS/htmlinputtextcs.aspx#1)]
 [!code-aspx-vb[HtmlInputText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlInputText/VB/htmlinputtextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlInputText.Size" />
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected internal override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlInputText.OnPreRender(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnPreRender (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnPreRender(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPreRender : EventArgs -&gt; unit" Usage="htmlInputText.OnPreRender e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Объект класса <see cref="T:System.EventArgs" />, содержащий данные события.</param>
        <summary>Создает событие <see cref="E:System.Web.UI.Control.PreRender" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод вызывается непосредственно перед <xref:System.Web.UI.HtmlControls.HtmlInputText> отрисовкой элемента управления. <xref:System.Web.UI.HtmlControls.HtmlInputText.OnPreRender%2A> Метод используется преимущественно разработчиками элементов управления, <xref:System.Web.UI.HtmlControls.HtmlInputText> которые расширяют функциональные возможности элемента управления. <xref:System.Web.UI.HtmlControls.HtmlInputText.OnPreRender%2A>  
  
   
  
## Examples  
 В следующем примере кода показано, как переопределить <xref:System.Web.UI.HtmlControls.HtmlInputText.OnPreRender%2A> метод таким образом, чтобы <xref:System.Web.UI.HtmlControls.HtmlInputText.MaxLength%2A> свойство задается в качестве значения 30 символов <xref:System.Web.UI.HtmlControls.HtmlInputText> в пользовательском элементе управления сервера.  
  
 [!code-aspx-csharp[CustomHtmlInputTextOnPreRender#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomHtmlInputTextOnPreRender/CS/custom_htmlinputtext_onprerendercs.aspx#1)]
 [!code-aspx-vb[CustomHtmlInputTextOnPreRender#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomHtmlInputTextOnPreRender/VB/custom_htmlinputtext_onprerendervb.aspx#1)]  
  
 [!code-csharp[CustomHtmlInputTextOnPreRender#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomHtmlInputTextOnPreRender/CS/custom_htmlinputtext_onprerender.cs#2)]
 [!code-vb[CustomHtmlInputTextOnPreRender#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomHtmlInputTextOnPreRender/VB/custom_htmlinputtext_onprerender.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnServerChange">
      <MemberSignature Language="C#" Value="protected virtual void OnServerChange (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnServerChange(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlInputText.OnServerChange(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnServerChange (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnServerChange(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnServerChange : EventArgs -&gt; unit&#xA;override this.OnServerChange : EventArgs -&gt; unit" Usage="htmlInputText.OnServerChange e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Объект <see cref="T:System.EventArgs" />, содержащий данные событий.</param>
        <summary>Вызывает событие <see cref="E:System.Web.UI.HtmlControls.HtmlInputText.ServerChange" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Событие возникает при изменении <xref:System.Web.UI.HtmlControls.HtmlInputText.Value%2A>Свойстванасервере. <xref:System.Web.UI.HtmlControls.HtmlInputText.ServerChange>  
  
> [!NOTE]
>  Чтобы <xref:System.Web.UI.HtmlControls.HtmlInputText.ServerChange> событие работало правильно, для этого элемента управления должно быть включено состояние представления.  
  
 При возникновении события через делегат вызывается обработчик события. Дополнительные сведения см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
 Метод <xref:System.Web.UI.HtmlControls.HtmlInputText.OnServerChange%2A> также позволяет производным классам обрабатывать событие, не присоединяя делегат. Это предпочтительная методика обработки событий в производном классе.  
  
   
  
## Examples  
 В следующем примере кода показано, как задать и закодировать обработчик для <xref:System.Web.UI.HtmlControls.HtmlInputText.ServerChange> события. Обработчик настраиваемых событий обновляет метку на веб-странице, чтобы отобразить значение текста, указанного в `<input type=text>` элементе HTML.  
  
 [!code-aspx-csharp[HtmlInputTextServerChange#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlInputTextServerChange/CS/htmlinputtextserverchangecs.aspx#1)]
 [!code-aspx-vb[HtmlInputTextServerChange#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlInputTextServerChange/VB/htmlinputtextserverchangevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>При переопределении метода <see cref="M:System.Web.UI.HtmlControls.HtmlInputText.OnServerChange(System.EventArgs)" /> в производном классе нужно убедиться, что вызывается метод <see cref="M:System.Web.UI.HtmlControls.HtmlInputText.OnServerChange(System.EventArgs)" /> базового класса, чтобы зарегистрированные делегаты получили событие.</para></block>
        <altmember cref="E:System.Web.UI.HtmlControls.HtmlInputText.ServerChange" />
      </Docs>
    </Member>
    <Member MemberName="RaisePostDataChangedEvent">
      <MemberSignature Language="C#" Value="protected virtual void RaisePostDataChangedEvent ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RaisePostDataChangedEvent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlInputText.RaisePostDataChangedEvent" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RaisePostDataChangedEvent ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RaisePostDataChangedEvent();" />
      <MemberSignature Language="F#" Value="abstract member RaisePostDataChangedEvent : unit -&gt; unit&#xA;override this.RaisePostDataChangedEvent : unit -&gt; unit" Usage="htmlInputText.RaisePostDataChangedEvent " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Вызывает метод <see cref="M:System.Web.UI.HtmlControls.HtmlInputText.OnServerChange(System.EventArgs)" />, чтобы сообщить элементу управления <see cref="T:System.Web.UI.HtmlControls.HtmlInputText" /> об изменении состояния элемента управления.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод используется преимущественно разработчиками элементов управления, <xref:System.Web.UI.HtmlControls.HtmlInputText> которые расширяют функциональные возможности элемента управления. <xref:System.Web.UI.HtmlControls.HtmlInputText.RaisePostDataChangedEvent%2A>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>При переопределении <see cref="M:System.Web.UI.HtmlControls.HtmlInputText.RaisePostDataChangedEvent" /> метода в производном классе обязательно вызовите <see cref="M:System.Web.UI.HtmlControls.HtmlInputText.RaisePostDataChangedEvent" /> метод базового класса, чтобы <see cref="E:System.Web.UI.HtmlControls.HtmlInputText.ServerChange" /> событие было правильно вызвано.</para></block>
        <altmember cref="M:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent" />
        <altmember cref="M:System.Web.UI.HtmlControls.HtmlInputText.OnServerChange(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="RenderAttributes">
      <MemberSignature Language="C#" Value="protected override void RenderAttributes (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RenderAttributes(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlInputText.RenderAttributes(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub RenderAttributes (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void RenderAttributes(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderAttributes : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="htmlInputText.RenderAttributes writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Объект <see cref="T:System.Web.UI.HtmlTextWriter" />, содержащий поток выходных данных для визуализации на клиенте.</param>
        <summary>Преобразует для просмотра атрибуты элемента управления <see cref="T:System.Web.UI.HtmlControls.HtmlInputText" /> в указанный объект <see cref="T:System.Web.UI.HtmlTextWriter" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ServerChange">
      <MemberSignature Language="C#" Value="public event EventHandler ServerChange;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ServerChange" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.HtmlControls.HtmlInputText.ServerChange" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ServerChange As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ServerChange;" />
      <MemberSignature Language="F#" Value="member this.ServerChange : EventHandler " Usage="member this.ServerChange : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит при изменении свойства <see cref="P:System.Web.UI.HtmlControls.HtmlInputText.Value" /> на сервере.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Событие возникает при изменении <xref:System.Web.UI.HtmlControls.HtmlInputText.Value%2A>Свойстванасервере. <xref:System.Web.UI.HtmlControls.HtmlInputText.ServerChange>  
  
> [!NOTE]
>  Чтобы <xref:System.Web.UI.HtmlControls.HtmlInputText.ServerChange> событие работало правильно, для этого элемента управления должно быть включено состояние представления.  
  
 Дополнительные сведения об обработке событий см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 В следующем примере кода показано, как задать и закодировать обработчик для <xref:System.Web.UI.HtmlControls.HtmlInputText.ServerChange> события. Обработчик настраиваемых событий обновляет метку на веб-странице, чтобы отобразить значение текста, указанного в `<input type=text>` элементе HTML.  
  
 [!code-aspx-csharp[HtmlInputTextServerChange#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlInputTextServerChange/CS/htmlinputtextserverchangecs.aspx#1)]
 [!code-aspx-vb[HtmlInputTextServerChange#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlInputTextServerChange/VB/htmlinputtextserverchangevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.HtmlControls.HtmlInputText.OnServerChange(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="Size">
      <MemberSignature Language="C#" Value="public int Size { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Size" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlInputText.Size" />
      <MemberSignature Language="VB.NET" Value="Public Property Size As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Size { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Size : int with get, set" Usage="System.Web.UI.HtmlControls.HtmlInputText.Size" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает ширину текстового поля.</summary>
        <value>Ширина текстового поля в знаках.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlInputText.Size%2A> Используйте свойство, чтобы указать или определить ширину текстового поля в символах.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать <xref:System.Web.UI.HtmlControls.HtmlInputText.Size%2A> свойство для указания ширины текстового поля.  
  
 [!code-aspx-csharp[HtmlInputText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlInputText/CS/htmlinputtextcs.aspx#1)]
 [!code-aspx-vb[HtmlInputText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlInputText/VB/htmlinputtextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlInputText.MaxLength" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackDataHandler.LoadPostData">
      <MemberSignature Language="C#" Value="bool IPostBackDataHandler.LoadPostData (string postDataKey, System.Collections.Specialized.NameValueCollection postCollection);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Web.UI.IPostBackDataHandler.LoadPostData(string postDataKey, class System.Collections.Specialized.NameValueCollection postCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlInputText.System#Web#UI#IPostBackDataHandler#LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Function LoadPostData (postDataKey As String, postCollection As NameValueCollection) As Boolean Implements IPostBackDataHandler.LoadPostData" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Web.UI.IPostBackDataHandler.LoadPostData(System::String ^ postDataKey, System::Collections::Specialized::NameValueCollection ^ postCollection) = System::Web::UI::IPostBackDataHandler::LoadPostData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackDataHandler.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="postDataKey" Type="System.String" />
        <Parameter Name="postCollection" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="postDataKey">Идентификатор ключа элемента управления.</param>
        <param name="postCollection">Коллекция всех входящих значений имен.</param>
        <summary>Реализует метод интерфейса <see cref="M:System.Web.UI.IPostBackDataHandler.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" /> посредством вызова метода <see cref="M:System.Web.UI.HtmlControls.HtmlInputText.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />.</summary>
        <returns>Значение <see langword="true" />, если состояние элемента управления <see cref="T:System.Web.UI.HtmlControls.HtmlInputText" /> изменилось в результате обратной передачи. В противном случае — значение <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent">
      <MemberSignature Language="C#" Value="void IPostBackDataHandler.RaisePostDataChangedEvent ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlInputText.System#Web#UI#IPostBackDataHandler#RaisePostDataChangedEvent" />
      <MemberSignature Language="VB.NET" Value="Sub RaisePostDataChangedEvent () Implements IPostBackDataHandler.RaisePostDataChangedEvent" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent() = System::Web::UI::IPostBackDataHandler::RaisePostDataChangedEvent;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Реализует метод интерфейса <see cref="M:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent" /> посредством вызова метода <see cref="M:System.Web.UI.HtmlControls.HtmlInputText.RaisePostDataChangedEvent" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public override string Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Value" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlInputText.Value" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Value As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Value { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Value : string with get, set" Usage="System.Web.UI.HtmlControls.HtmlInputText.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает содержимое текстового поля.</summary>
        <value>Текст, содержащийся в текстовом поле. Значение по умолчанию — пустая строка ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlInputText.Value%2A> Свойство используется для программного определения текста, вводимых пользователем, в текстовое поле. Это свойство также можно использовать для предоставления текста по умолчанию для текстового поля.  
  
> [!NOTE]
>  Если указать значение для `password` типа <xref:System.Web.UI.HtmlControls.HtmlInputText> элемента управления, это значение не будет отображаться в текстовом поле.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать <xref:System.Web.UI.HtmlControls.HtmlInputText.Value%2A> свойство для программного определения текста, вводимых пользователем в текстовом поле.  
  
 [!code-aspx-csharp[HtmlInputText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlInputText/CS/htmlinputtextcs.aspx#1)]
 [!code-aspx-vb[HtmlInputText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlInputText/VB/htmlinputtextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlControls.HtmlInputPassword" />
      </Docs>
    </Member>
  </Members>
</Type>
