<Type Name="HtmlInputPassword" FullName="System.Web.UI.HtmlControls.HtmlInputPassword">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8deff9987aa2898ada599a84774708d0245f5b0c" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70496280" /></Metadata><TypeSignature Language="C#" Value="public class HtmlInputPassword : System.Web.UI.HtmlControls.HtmlInputText" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HtmlInputPassword extends System.Web.UI.HtmlControls.HtmlInputText implements class System.Web.UI.IPostBackDataHandler" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.HtmlControls.HtmlInputPassword" />
  <TypeSignature Language="VB.NET" Value="Public Class HtmlInputPassword&#xA;Inherits HtmlInputText" />
  <TypeSignature Language="C++ CLI" Value="public ref class HtmlInputPassword : System::Web::UI::HtmlControls::HtmlInputText" />
  <TypeSignature Language="F#" Value="type HtmlInputPassword = class&#xA;    inherit HtmlInputText&#xA;    interface IPostBackDataHandler" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.HtmlControls.HtmlInputText</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.IPostBackDataHandler</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("ServerChange")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.SupportsEventValidation</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ValidationProperty("Value")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Обеспечивает программный доступ к элементу HTML <see langword="&lt;input type= password&gt;" /> на сервере.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Класс является производным <xref:System.Web.UI.HtmlControls.HtmlInputText> от класса и используется для создания однострочного текстового поля, позволяющего пользователю ввести пароль. <xref:System.Web.UI.HtmlControls.HtmlInputPassword> При использовании <xref:System.Web.UI.HtmlControls.HtmlInputPassword> элемента управления <xref:System.Web.UI.HtmlControls.HtmlInputText.Value%2A> свойство отправляется на сервер каждый раз при отправке формы. <xref:System.Web.UI.HtmlControls.HtmlInputText.Value%2A> Свойство <xref:System.Web.UI.HtmlControls.HtmlInputPassword>  для элемента управления не сохраняется в состоянии представления.  
  
 <xref:System.Web.UI.HtmlControls.HtmlInputText.MaxLength%2A> Свойство определяет максимальное число символов, которые могут быть указаны в текстовом поле. <xref:System.Web.UI.HtmlControls.HtmlInputText.Size%2A> Свойство позволяет указать ширину текстового поля. <xref:System.Web.UI.HtmlControls.HtmlInputText.Value%2A> Используйте свойство, чтобы определить значение, указанное пользователем в текстовом поле. Элемент управления предоставляет событие, которое возникает, когда свойство изменяет значения между отправками на сервер. <xref:System.Web.UI.HtmlControls.HtmlInputText.Value%2A>  <xref:System.Web.UI.HtmlControls.HtmlInputText.ServerChange> <xref:System.Web.UI.HtmlControls.HtmlInputPassword> Это позволяет создать обработчик событий, который выполняет пользовательский набор инструкций при каждом возникновении события.  
  
> [!NOTE]
>  <xref:System.Web.UI.HtmlControls.HtmlInputPassword> Элемент управления не предоставляет встроенного способа обратной передачи на сервер. Необходимо предоставить другой элемент управления на веб-странице, который поддерживает обратную передачу на сервер, например <xref:System.Web.UI.HtmlControls.HtmlButton> <xref:System.Web.UI.HtmlControls.HtmlInputSubmit> элемент управления или.  
  
 Список начальных значений свойств для экземпляра <xref:System.Web.UI.HtmlControls.HtmlInputPassword>см. в <xref:System.Web.UI.HtmlControls.HtmlInputPassword.%23ctor%2A> разделе Конструктор.  
  
   
  
## Examples  
 В следующем примере кода показано `<input type=text>`, как декларативно использовать элементы управления HTML, `<input type=password>`и `<input type=submit>` на странице веб-форм.  
  
 [!code-aspx-csharp[System.Web.UI.HtmlControls.HtmlInput_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlControls.HtmlInput_1/CS/htmlinputcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.HtmlControls.HtmlInput_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlControls.HtmlInput_1/VB/htmlinputvb.aspx#1)]  
  
 В следующем примере кода показано, как программным способом добавить одни и те же элементы управления HTML `Page_Load` во время вызова метода.  
  
 [!code-aspx-csharp[System.Web.UI.HtmlControls.HtmlInput_2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlControls.HtmlInput_2/CS/htmlinput2cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.HtmlControls.HtmlInput_2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlControls.HtmlInput_2/VB/htmlinput2vb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.HtmlControls.HtmlInputText" />
    <altmember cref="T:System.Web.UI.HtmlControls.HtmlTextArea" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HtmlInputPassword ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlInputPassword.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HtmlInputPassword();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.UI.HtmlControls.HtmlInputPassword" />, используя значения по умолчанию.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте этот конструктор для создания и инициализации нового экземпляра <xref:System.Web.UI.HtmlControls.HtmlInputPassword> элемента управления, используя значения по умолчанию. Он создает `password` элемент управления текстового поля типа.  
  
 В следующей таблице показано начальное значение свойства для экземпляра <xref:System.Web.UI.HtmlControls.HtmlInputPassword>.  
  
|Свойство.|Начальное значение|  
|--------------|-------------------|  
|<xref:System.Web.UI.HtmlControls.HtmlInputControl.Type%2A>|Строка литерала "Password".|  
  
   
  
## Examples  
 В следующем примере кода показано, как программным <xref:System.Web.UI.HtmlControls.HtmlInputText>образом <xref:System.Web.UI.HtmlControls.HtmlInputPassword>добавить элементы <xref:System.Web.UI.HtmlControls.HtmlInputSubmit> управления, и на страницу веб-форм с помощью конструкторов по умолчанию, чтобы создать простой экран входа.  
  
 [!code-aspx-csharp[System.Web.UI.HtmlControls.HtmlInput_2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlControls.HtmlInput_2/CS/htmlinput2cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.HtmlControls.HtmlInput_2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlControls.HtmlInput_2/VB/htmlinput2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderAttributes">
      <MemberSignature Language="C#" Value="protected override void RenderAttributes (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RenderAttributes(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlInputPassword.RenderAttributes(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub RenderAttributes (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void RenderAttributes(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderAttributes : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="htmlInputPassword.RenderAttributes writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Объект <see cref="T:System.Web.UI.HtmlTextWriter" />, получающий преобразованное содержимое.</param>
        <summary>Отображает атрибуты элемента управления <see cref="T:System.Web.UI.HtmlControls.HtmlInputPassword" /> в указанный объект <see cref="T:System.Web.UI.HtmlTextWriter" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод удаляет атрибут из коллекции состояния представления, чтобы предотвратить его визуализацию, а затем <xref:System.Web.UI.HtmlControls.HtmlInputControl.RenderAttributes%2A> вызывает метод базового класса. `Value` <xref:System.Web.UI.HtmlControls.HtmlInputPassword.RenderAttributes%2A>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
