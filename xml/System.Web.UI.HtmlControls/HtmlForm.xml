<Type Name="HtmlForm" FullName="System.Web.UI.HtmlControls.HtmlForm">
  <Metadata><Meta Name="ms.openlocfilehash" Value="dd1c7a21e8d552f971b992a4273e6034ed920c40" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69043234" /></Metadata><TypeSignature Language="C#" Value="public class HtmlForm : System.Web.UI.HtmlControls.HtmlContainerControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HtmlForm extends System.Web.UI.HtmlControls.HtmlContainerControl" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.HtmlControls.HtmlForm" />
  <TypeSignature Language="VB.NET" Value="Public Class HtmlForm&#xA;Inherits HtmlContainerControl" />
  <TypeSignature Language="C++ CLI" Value="public ref class HtmlForm : System::Web::UI::HtmlControls::HtmlContainerControl" />
  <TypeSignature Language="F#" Value="type HtmlForm = class&#xA;    inherit HtmlContainerControl" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.HtmlControls.HtmlContainerControl</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Обеспечивает программный доступ к элементу HTML <see langword="&lt;form&gt;" /> на сервере.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlForm> Элемент управления представляет собой контейнер для серверных элементов управления на странице веб-форм. Все серверные элементы управления, которые отменяют обратную передачу на сервер, должны быть помещены <xref:System.Web.UI.HtmlControls.HtmlForm> между открывающим и закрывающим тегами элемента управления.  
  
> [!NOTE]
>  ASP.NET позволяет активно использовать только <xref:System.Web.UI.HtmlControls.HtmlForm> один элемент управления на странице веб-форм. Если на странице веб-форм имеется <xref:System.Web.UI.HtmlControls.HtmlForm> более одного активного элемента управления, среда CLR <xref:System.Web.HttpException?displayProperty=nameWithType> выдаст исключение при запросе страницы. Однако можно использовать <xref:System.Web.UI.WebControls.MultiView> элемент управления, в котором каждый <xref:System.Web.UI.WebControls.View> объект содержит один <xref:System.Web.UI.HtmlControls.HtmlForm> элемент управления, поскольку в любой <xref:System.Web.UI.WebControls.View> конкретный момент времени активен только один из них.  
  
 Поведением <xref:System.Web.UI.HtmlControls.HtmlForm> элемента управления можно управлять, задав его свойства. Чтобы указать тип кодировки для данных формы, задайте <xref:System.Web.UI.HtmlControls.HtmlForm.Enctype%2A> свойство. Метод (`GET` или `POST`), используемый браузером для отправки данных формы на сервер для обработки, задается путем установки <xref:System.Web.UI.HtmlControls.HtmlForm.Method%2A> свойства.  
  
> [!CAUTION]
>  По умолчанию свойство <xref:System.Web.UI.HtmlControls.HtmlForm.Method%2A> имеет значение `POST`. Значение этого свойства можно изменить на `GET`, но это может привести к нарушению встроенных служб состояния и обратной передачи, предоставляемых инфраструктурой страниц ASP.NET.  
  
 Можно настроить элементы управления, которые реализуют <xref:System.Web.UI.WebControls.IButtonControl> интерфейс, для публикации на другой целевой странице. Это называется межстраничной разностью. Дополнительные сведения см. в разделе межстраничная [Передача данных в веб-формах ASP.NET](https://msdn.microsoft.com/library/fedf234e-b7c4-4644-a9e8-c1c0870b043b).  
  
 Список начальных значений свойств для экземпляра <xref:System.Web.UI.HtmlControls.HtmlForm>см. в <xref:System.Web.UI.HtmlControls.HtmlForm.%23ctor%2A> разделе Конструктор.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать <xref:System.Web.UI.HtmlControls.HtmlForm> класс для создания простой формы.  
  
 [!code-aspx-csharp[HtmlForm#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlForm/CS/htmlformcs.aspx#1)]
 [!code-aspx-vb[HtmlForm#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlForm/VB/htmlformvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.HtmlControls.HtmlContainerControl" />
    <altmember cref="P:System.Web.UI.HtmlControls.HtmlForm.Enctype" />
    <altmember cref="P:System.Web.UI.HtmlControls.HtmlForm.Method" />
    <related type="Article" href="https://msdn.microsoft.com/library/fedf234e-b7c4-4644-a9e8-c1c0870b043b">Межстраничная передача на веб-странице ASP.NET</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HtmlForm ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlForm.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HtmlForm();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.UI.HtmlControls.HtmlForm" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте этот конструктор для создания и инициализации нового экземпляра <xref:System.Web.UI.HtmlControls.HtmlForm> класса.  
  
 В следующей таблице показано начальное значение свойства для экземпляра <xref:System.Web.UI.HtmlControls.HtmlForm>.  
  
|Свойство.|Начальное значение|  
|--------------|-------------------|  
|<xref:System.Web.UI.HtmlControls.HtmlControl.TagName%2A>|Строка литерала "Form".|  
  
   
  
## Examples  
 В следующем примере кода показано, как создать новый экземпляр <xref:System.Web.UI.HtmlControls.HtmlForm> элемента управления и поместить его на веб-странице.  
  
 [!code-aspx-csharp[HtmlFormCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlFormCtor/CS/htmlformctorcs.aspx#1)]
 [!code-aspx-vb[HtmlFormCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlFormCtor/VB/htmlformctorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlControl.TagName" />
      </Docs>
    </Member>
    <Member MemberName="Action">
      <MemberSignature Language="C#" Value="public string Action { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Action" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlForm.Action" />
      <MemberSignature Language="VB.NET" Value="Public Property Action As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Action { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Action : string with get, set" Usage="System.Web.UI.HtmlControls.HtmlForm.Action" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает атрибут действия HTML-формы.</summary>
        <value>Атрибут действия HTML-формы. Значение по умолчанию — <see cref="F:System.String.Empty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlForm.Action%2A> Свойство используется при перезаписи URL-адреса исходного запроса, но необходимо сохранить исходный URL-адрес для атрибута действия в HTML-форме. Задайте для <xref:System.Web.UI.HtmlControls.HtmlForm.Action%2A> свойства значение URL-адреса, который необходимо хранить.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpContext.RewritePath(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ClientID">
      <MemberSignature Language="C#" Value="public override string ClientID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ClientID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlForm.ClientID" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ClientID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ClientID { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ClientID : string" Usage="System.Web.UI.HtmlControls.HtmlForm.ClientID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает идентификатор элемента управления, созданный [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] для элемента управления <see cref="T:System.Web.UI.HtmlControls.HtmlForm" />.</summary>
        <value>Идентификатор элемента управления, [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] созданный <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> для элемента управления.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Чтобы избежать конфликтов именования при подготовке к просмотру нескольких экземпляров элемента [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] управления, автоматически создает <xref:System.Web.UI.HtmlControls.HtmlForm.ClientID%2A> уникальное значение для каждого элемента управления на странице. Дополнительные сведения см. в описании свойства <xref:System.Web.UI.Control.ClientID%2A?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/45a8c3ef-5ac7-48f1-862a-0cd5073742e7">Идентификация элемента управления ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="CreateControlCollection">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.ControlCollection CreateControlCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.ControlCollection CreateControlCollection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlForm.CreateControlCollection" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateControlCollection () As ControlCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::ControlCollection ^ CreateControlCollection();" />
      <MemberSignature Language="F#" Value="override this.CreateControlCollection : unit -&gt; System.Web.UI.ControlCollection" Usage="htmlForm.CreateControlCollection " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Создает новую коллекцию <see cref="T:System.Web.UI.ControlCollection" /> для элемента управления <see cref="T:System.Web.UI.HtmlControls.HtmlForm" />.</summary>
        <returns>Коллекция <see cref="T:System.Web.UI.ControlCollection" />, содержащая дочерние серверные элементы управления для элемента управления <see cref="T:System.Web.UI.HtmlControls.HtmlForm" />.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.ControlCollection" />
      </Docs>
    </Member>
    <Member MemberName="DefaultButton">
      <MemberSignature Language="C#" Value="public string DefaultButton { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultButton" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlForm.DefaultButton" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultButton As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DefaultButton { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultButton : string with get, set" Usage="System.Web.UI.HtmlControls.HtmlForm.DefaultButton" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает дочерний элемент управления, принадлежащий элементу управления <see cref="T:System.Web.UI.HtmlControls.HtmlForm" />, который вызывает обратную передачу данных, когда нажимается клавиша ENTER.</summary>
        <value>Свойство <see cref="P:System.Web.UI.Control.ID" /> элемента управления "кнопка" для отображения в виде кнопки по умолчанию при загрузке объекта <see cref="T:System.Web.UI.HtmlControls.HtmlForm" />. Значением по умолчанию является пустая строка ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlForm.DefaultButton%2A> Свойство позволяет указать, что пользователи могут вызвать обратную передачу, нажав клавишу ВВОД в элементе управления вводом в форме (например, в текстовом поле). Можно указать в качестве кнопки по умолчанию любой элемент управления, производный <xref:System.Web.UI.WebControls.IButtonControl> от интерфейса, <xref:System.Web.UI.WebControls.LinkButton> Кроме элемента управления. Если элемент управления, на который ссылается <xref:System.Web.UI.HtmlControls.HtmlForm.DefaultButton%2A> свойство, не является производным от <xref:System.Web.UI.WebControls.IButtonControl>, <xref:System.InvalidOperationException> создается исключение.  
  
 Если вы используете главные страницы и задаете <xref:System.Web.UI.HtmlControls.HtmlForm.DefaultButton%2A> свойство на странице содержимого, <xref:System.Web.UI.Control.UniqueID%2A> используйте свойство <xref:System.Web.UI.WebControls.IButtonControl> кнопки. Дополнительные сведения о главных страницах см. в разделе [ASP.NET Master Pages](https://msdn.microsoft.com/library/4e53eedf-8304-4e7a-aed1-691a2623b28b).  
  
 <xref:System.Web.UI.HtmlControls.HtmlForm.DefaultButton%2A> Свойство может не вызывать обратную передачу в следующих сценариях:  
  
-   Нажатие клавиши ВВОД, если фокус находится за пределами элементов управления вводом в форме. Действие обратной передачи по умолчанию не гарантирует срабатывание.  
  
-   Нажмите клавишу ВВОД, когда фокус находится внутри многострочного текстового поля. В многострочном текстовом поле ожидаемое поведение заключается в том, что нажатие клавиши ВВОД создает новую строку в текстовом поле. В некоторых браузерах при нажатии клавиши Ввод внутри многострочного текстового поля активируется обратная передача. В этом случае, если нужно создать новую строку вместо этого, можно присоединить функцию JavaScript к элементу управления вводом. Скрипт должен записать клавишу ВВОД и прерывать обратную передачу. Например, можно использовать <xref:System.Web.UI.WebControls.WebControl.Attributes%2A> коллекцию свойств, чтобы добавить клиентский скрипт `onKeyPress` для события.  
  
-   <xref:System.Web.UI.WebControls.LinkButton> Указание элемента управления в качестве кнопки по умолчанию. <xref:System.Web.UI.WebControls.Button> Поддерживаются <xref:System.Web.UI.WebControls.ImageButton> только элементы управления и.  
  
-   Программное <xref:System.Web.UI.HtmlControls.HtmlForm.DefaultButton%2A> изменение свойства во время асинхронной обратной передачи. Асинхронные обратные передачи можно включить на странице, добавив на страницу один <xref:System.Web.UI.UpdatePanel> или несколько элементов управления. Дополнительные сведения см. в разделе [Общие сведения об элементе управления UpdatePanel](https://msdn.microsoft.com/library/29a2265d-9674-4c19-b70e-e5560ee9689a) и [Общие сведения о частичной отрисовке страниц](https://msdn.microsoft.com/library/5c12736d-d9e9-464a-9388-3fe0f9f49e49).  
  
   
  
## Examples  
 В следующем примере показано, как задать <xref:System.Web.UI.HtmlControls.HtmlForm.DefaultButton%2A> свойство, чтобы задать элемент управления по умолчанию, который вызывает обратную передачу.  
  
 [!code-aspx-csharp[HtmlForm.DefaultButton#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlForm.DefaultButton/CS/htmlform.defaultbuttoncs.aspx#1)]
 [!code-aspx-vb[HtmlForm.DefaultButton#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlForm.DefaultButton/VB/htmlform.defaultbuttonvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Элемент управления, упоминаемый как "кнопка", не принадлежит типу <see cref="T:System.Web.UI.WebControls.IButtonControl" />.</exception>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlForm.DefaultFocus" />
        <altmember cref="P:System.Web.UI.Control.ID" />
        <altmember cref="M:System.Web.UI.HtmlControls.HtmlForm.RenderAttributes(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="T:System.Web.UI.WebControls.IButtonControl" />
        <related type="Article" href="https://msdn.microsoft.com/library/4e53eedf-8304-4e7a-aed1-691a2623b28b">Общие сведения о главных страницах ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="DefaultFocus">
      <MemberSignature Language="C#" Value="public string DefaultFocus { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultFocus" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlForm.DefaultFocus" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultFocus As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DefaultFocus { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultFocus : string with get, set" Usage="System.Web.UI.HtmlControls.HtmlForm.DefaultFocus" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает на форме элемент управления для отображения в качестве элемента управления с фокусом ввода при загрузке элемента управления <see cref="T:System.Web.UI.HtmlControls.HtmlForm" />.</summary>
        <value>Свойство <see cref="P:System.Web.UI.Control.ClientID" /> элемента управления на форме, чтобы отобразить в качестве элемента управления с фокусом ввода при загрузке элемента управления <see cref="T:System.Web.UI.HtmlControls.HtmlForm" />. Значением по умолчанию является пустая строка ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте свойство для доступа к элементу управления в форме, который отображается как элемент управления с фокусом ввода <xref:System.Web.UI.HtmlControls.HtmlForm> при загрузке элемента управления. <xref:System.Web.UI.HtmlControls.HtmlForm.DefaultFocus%2A> Элементы управления, которые могут быть выбраны, отображаются с визуальной подсказкой, указывающей на то, что они имеют фокус. Например, <xref:System.Web.UI.WebControls.TextBox> элемент управления с фокусом отображается с точкой вставки, расположенной внутри него.  
  
 Элемент управления с фокусом также можно задать с помощью <xref:System.Web.UI.Control.Focus%2A> методов <xref:System.Web.UI.Page.SetFocus%2A> или. Эти методы имеют приоритет над <xref:System.Web.UI.HtmlControls.HtmlForm.DefaultFocus%2A> свойством. Если один из этих методов вызывается для установки фокуса на элемент управления, значение <xref:System.Web.UI.HtmlControls.HtmlForm.DefaultFocus%2A> свойства игнорируется.  
  
   
  
## Examples  
 В следующем примере кода показано, как задать <xref:System.Web.UI.HtmlControls.HtmlForm.DefaultFocus%2A> свойство для отображения указанного элемента управления в форме в качестве элемента управления с фокусом ввода при загрузке формы. При `Form1` подготовке к просмотру Обратите внимание, что точка вставки располагается в `TextBox1`, `TextBox1` указывая, что — это элемент управления с фокусом.  
  
 [!code-aspx-csharp[HtmlForm.DefaultButton#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlForm.DefaultButton/CS/htmlform.defaultbuttoncs.aspx#1)]
 [!code-aspx-vb[HtmlForm.DefaultButton#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlForm.DefaultButton/VB/htmlform.defaultbuttonvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlForm.DefaultButton" />
        <altmember cref="P:System.Web.UI.Control.ID" />
        <altmember cref="M:System.Web.UI.Control.Focus" />
        <altmember cref="M:System.Web.UI.Page.SetFocus(System.Web.UI.Control)" />
      </Docs>
    </Member>
    <Member MemberName="Enctype">
      <MemberSignature Language="C#" Value="public string Enctype { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Enctype" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlForm.Enctype" />
      <MemberSignature Language="VB.NET" Value="Public Property Enctype As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Enctype { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Enctype : string with get, set" Usage="System.Web.UI.HtmlControls.HtmlForm.Enctype" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает тип кодировки, используемой браузером при отправке данных формы на сервер.</summary>
        <value>Строка, содержащая тип кодировки. По умолчанию свойство содержит пустую строку (""), показывающую, что в браузере используется тип содержимого по умолчанию.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlForm.Enctype%2A> Используйте свойство, чтобы указать тип кодировки, которую браузер использует для передачи данных обратно на сервер.  
  
 В следующей таблице показаны распространенные типы кодировки.  
  
|Тип кодировки|Описание|  
|-------------------|-----------------|  
|application/x-www-form-urlencoded|Данные формы кодируются как пары "имя-значение". Это стандартный формат кодирования.|  
|multipart/form-data|Данные формы кодируются как сообщение с отдельной частью для каждого элемента управления на странице.|  
|text/plain|Данные формы кодируются в виде обычного текста без каких-либо элементов управления или символов форматирования.|  
  
 Дополнительные сведения о типах кодировок см. на [веб-сайте консорциум W3C (W3C](https://go.microsoft.com/fwlink/?linkid=37125)).  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать <xref:System.Web.UI.HtmlControls.HtmlForm.Enctype%2A> свойство для указания типа кодировки, используемой браузером для отправки данных обратно на сервер.  
  
 [!code-aspx-csharp[HtmlForm#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlForm/CS/htmlformcs.aspx#1)]
 [!code-aspx-vb[HtmlForm#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlForm/VB/htmlformvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlForm.Method" />
      </Docs>
    </Member>
    <Member MemberName="Method">
      <MemberSignature Language="C#" Value="public string Method { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Method" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlForm.Method" />
      <MemberSignature Language="VB.NET" Value="Public Property Method As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Method { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Method : string with get, set" Usage="System.Web.UI.HtmlControls.HtmlForm.Method" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, показывающее, как браузер отправляет данные формы на сервер для обработки.</summary>
        <value>Строка, показывающая, как браузер отправляет данные формы на сервер. Значение по умолчанию — <see langword="POST" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это свойство используется для указания способа, которым браузер отправляет данные формы на сервер для обработки. Двумя распространенными методами, поддерживаемыми всеми `GET` браузерами, являются и `POST`.  
  
> [!CAUTION]
>  Можно переопределить значение по умолчанию этого свойства и использовать `GET` метод `POST`вместо. Однако, поскольку `GET` запросы ограничены объемом данных, которые они могут включать, `GET` использование метода может, в некоторых случаях, привести к сбою функций обратной передачи и управления состоянием, предоставляемых инфраструктурой ASP.NET Page.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать <xref:System.Web.UI.HtmlControls.HtmlForm.Method%2A> свойство, чтобы указать, что данные формы отправляются обратно на сервер.  
  
 [!code-aspx-csharp[HtmlForm#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlForm/CS/htmlformcs.aspx#1)]
 [!code-aspx-vb[HtmlForm#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlForm/VB/htmlformvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlForm.Enctype" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public virtual string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlForm.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Web.UI.HtmlControls.HtmlForm.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает имя идентификатора для элемента управления <see cref="T:System.Web.UI.HtmlControls.HtmlForm" />.</summary>
        <value>Строка, содержащая имя идентификатора для элемента управления <see cref="T:System.Web.UI.HtmlControls.HtmlForm" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте свойство, чтобы определить уникальное имя идентификатора <xref:System.Web.UI.HtmlControls.HtmlForm> для элемента управления. <xref:System.Web.UI.HtmlControls.HtmlForm.Name%2A> В этой реализации получение этого свойства возвращает значение <xref:System.Web.UI.HtmlControls.HtmlForm.UniqueID%2A> свойства. Однако установка свойства не приводит к присвоению значения свойству. Установка свойства не присваивать этому свойству значение, так как <xref:System.Web.UI.HtmlControls.HtmlForm.Name%2A> свойство должно иметь то же значение, <xref:System.Web.UI.HtmlControls.HtmlForm.UniqueID%2A> что и свойство.  
  
> [!NOTE]
>  Атрибут не является совместимым с XHTML атрибутом и не подготавливается к просмотру ASP.NET независимо `xhtmlConformance` от параметра. `name`  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlForm.UniqueID" />
        <related type="Article" href="https://msdn.microsoft.com/library/1b78d416-66bb-43a5-ac77-c703aab55b97">Соответствие ASP.NET и XHTML</related>
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlForm.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnInit : EventArgs -&gt; unit" Usage="htmlForm.OnInit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Объект <see cref="T:System.EventArgs" />, содержащий данные события.</param>
        <summary>Создает событие <see cref="E:System.Web.UI.Control.Init" /> элемента управления <see cref="T:System.Web.UI.HtmlControls.HtmlForm" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При уведомлении от <xref:System.Web.UI.HtmlControls.HtmlForm.OnInit%2A> метода элементы управления веб-сервера должны выполнить все шаги инициализации, необходимые для создания и настройки экземпляра служб. На этом этапе жизненного цикла серверного элемента управления состояние представления элемента управления еще заполнено. Кроме того, при вызове этого метода доступ к другим серверным элементам управления невозможен, независимо от того, является ли он дочерним или родительским для этого элемента управления. Не гарантируется, что другие серверные элементы управления будут созданы и готовы к доступу.  
  
 При возникновении события через делегат вызывается обработчик события. Дополнительные сведения см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
 Метод <xref:System.Web.UI.WebControls.GridView.OnInit%2A> также позволяет производным классам обрабатывать событие, не присоединяя делегат. Это предпочтительная методика обработки событий в производном классе.  
  
 Метод используется преимущественно разработчиками элементов управления, <xref:System.Web.UI.HtmlControls.HtmlForm> которые расширяют функциональные возможности элемента управления. <xref:System.Web.UI.HtmlControls.HtmlForm.OnInit%2A>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>При переопределении <see cref="M:System.Web.UI.HtmlControls.HtmlForm.OnInit(System.EventArgs)" /> метода в производном классе обязательно вызовите <see cref="M:System.Web.UI.HtmlControls.HtmlForm.OnInit(System.EventArgs)" /> метод базового класса, чтобы зарегистрированные делегаты получили событие. Кроме того, вызов <see cref="M:System.Web.UI.HtmlControls.HtmlForm.OnInit(System.EventArgs)" /> метода базового класса обеспечивает <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> правильную настройку элемента управления в качестве формы веб-страницы и сохранение состояния представления страницы.</para></block>
        <altmember cref="M:System.Web.UI.Page.RegisterViewStateHandler" />
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected internal override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlForm.OnPreRender(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnPreRender (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnPreRender(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPreRender : EventArgs -&gt; unit" Usage="htmlForm.OnPreRender e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e">Объект класса <see cref="T:System.EventArgs" />, содержащий данные события.</param>
        <summary>Создает событие <see cref="E:System.Web.UI.Control.PreRender" /> элемента управления <see cref="T:System.Web.UI.HtmlControls.HtmlForm" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод вызывается непосредственно перед <xref:System.Web.UI.HtmlControls.HtmlForm> отрисовкой элемента управления. <xref:System.Web.UI.HtmlControls.HtmlForm.OnPreRender%2A> Если свойство имеет `true`значение, <xref:System.Web.UI.HtmlControls.HtmlForm.OnPreRender%2A> метод регистрирует ссылку на файл скрипта смарт-навигации, чтобы она отображалась. <xref:System.Web.UI.Page.SmartNavigation%2A?displayProperty=nameWithType>  
  
> [!NOTE]
>  <xref:System.Web.UI.Page.SmartNavigation%2A?displayProperty=nameWithType> Свойство было объявлено устаревшим в ASP.NET версии 2,0.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Page.SmartNavigation" />
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected internal override void Render (System.Web.UI.HtmlTextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlForm.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Render (output As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ output);" />
      <MemberSignature Language="F#" Value="override this.Render : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="htmlForm.Render output" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="output" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="output">Объект <see cref="T:System.Web.UI.HtmlTextWriter" />, получающий преобразованное содержимое.</param>
        <summary>Выполняет визуализацию элемента управления <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> в указанный объект <see cref="T:System.Web.UI.HtmlTextWriter" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод визуализирует элемент HTML `<iframe>` , если <xref:System.Web.UI.Page.SmartNavigation%2A> свойство имеет значение `true`. <xref:System.Web.UI.HtmlControls.HtmlForm.Render%2A> Метод вызывает базовый <xref:System.Web.UI.Control.Render%2A>метод. <xref:System.Web.UI.HtmlControls.HtmlForm.Render%2A>  
  
 Метод используется преимущественно разработчиками элементов управления, <xref:System.Web.UI.HtmlControls.HtmlForm> которые расширяют функциональные возможности элемента управления. <xref:System.Web.UI.HtmlControls.HtmlForm.Render%2A>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Элемент управления <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> не визуализируется без ссылки на экземпляр <see cref="T:System.Web.UI.Page" />.</exception>
        <block subset="none" type="overrides"><para>При переопределении <see cref="M:System.Web.UI.HtmlControls.HtmlForm.Render(System.Web.UI.HtmlTextWriter)" /> метода в производном классе обязательно вызовите <see cref="M:System.Web.UI.HtmlControls.HtmlForm.Render(System.Web.UI.HtmlTextWriter)" /> метод базового класса, чтобы <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> дочерние элементы управления были правильно визуализированы.</para></block>
        <altmember cref="T:System.Web.HttpException" />
        <altmember cref="P:System.Web.UI.Page.SmartNavigation" />
        <altmember cref="M:System.Web.UI.Control.Render(System.Web.UI.HtmlTextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="RenderAttributes">
      <MemberSignature Language="C#" Value="protected override void RenderAttributes (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RenderAttributes(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlForm.RenderAttributes(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub RenderAttributes (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void RenderAttributes(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderAttributes : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="htmlForm.RenderAttributes writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Объект <see cref="T:System.Web.UI.HtmlTextWriter" />, получающий преобразованное содержимое.</param>
        <summary>Преобразует для просмотра атрибуты элемента управления <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> в указанный объект <see cref="T:System.Web.UI.HtmlTextWriter" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод использует метод для проверки <xref:System.Web.UI.HtmlControls.HtmlForm> атрибутов элемента управления, чтобы убедиться, что они могут `<form>` быть отображены в открывающем теге HTML-элемента. <xref:System.Web.UI.HtmlTextWriter.IsValidFormAttribute%2A> <xref:System.Web.UI.HtmlControls.HtmlForm.RenderAttributes%2A>  
  
 Кроме того, <xref:System.Web.UI.HtmlControls.HtmlForm.RenderAttributes%2A> метод визуализирует `method`атрибуты `action` `onsubmit`,и элементауправления.<xref:System.Web.UI.HtmlControls.HtmlForm> Если идентификатор элемента управления, заданный <xref:System.Web.UI.HtmlControls.HtmlForm.DefaultButton%2A> в свойстве, не <xref:System.Web.UI.WebControls.IButtonControl> реализует интерфейс, <xref:System.InvalidOperationException> возникает исключение.  
  
 Метод используется преимущественно разработчиками элементов управления, <xref:System.Web.UI.HtmlControls.HtmlForm> которые расширяют функциональные возможности элемента управления. <xref:System.Web.UI.HtmlControls.HtmlForm.RenderAttributes%2A>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Идентификатор (ID) элемента управления, заданный в свойстве <see cref="P:System.Web.UI.HtmlControls.HtmlForm.DefaultButton" />, не относится к типу <see cref="T:System.Web.UI.WebControls.IButtonControl" />.</exception>
        <block subset="none" type="overrides"><para>При переопределении <see cref="M:System.Web.UI.HtmlControls.HtmlForm.RenderAttributes(System.Web.UI.HtmlTextWriter)" /> метода в производном классе обязательно вызовите <see cref="M:System.Web.UI.HtmlControls.HtmlForm.RenderAttributes(System.Web.UI.HtmlTextWriter)" /> метод базового класса, чтобы <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> правильно отобразить атрибуты элемента управления.</para></block>
        <altmember cref="M:System.Web.UI.HtmlControls.HtmlControl.RenderAttributes(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.IsValidFormAttribute(System.String)" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlForm.DefaultButton" />
        <altmember cref="T:System.Web.UI.WebControls.IButtonControl" />
        <altmember cref="T:System.InvalidOperationException" />
      </Docs>
    </Member>
    <Member MemberName="RenderChildren">
      <MemberSignature Language="C#" Value="protected internal override void RenderChildren (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void RenderChildren(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlForm.RenderChildren(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub RenderChildren (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void RenderChildren(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderChildren : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="htmlForm.RenderChildren writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Объект <see cref="T:System.Web.UI.HtmlTextWriter" />, получающий преобразованное содержимое.</param>
        <summary>Визуализирует дочерние элементы управления, относящиеся к элементу управления <see cref="T:System.Web.UI.HtmlControls.HtmlForm" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод визуализирует клиентский скрипт, чтобы убедиться, что фокус браузера установлен на элемент управления, указанный <xref:System.Web.UI.HtmlControls.HtmlForm.DefaultFocus%2A> в свойстве. <xref:System.Web.UI.HtmlControls.HtmlForm.RenderChildren%2A>  
  
> [!NOTE]
>  Элемент управления, заданный <xref:System.Web.UI.Page.SetFocus%2A?displayProperty=nameWithType> свойством, имеет приоритет над элементом управления <xref:System.Web.UI.HtmlControls.HtmlForm.DefaultFocus%2A> , заданным свойством.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Веб-страница имеет несколько тегов <see langword="&lt;form&gt;" />, принадлежащих серверной стороне.</exception>
        <block subset="none" type="overrides"><para>При переопределении <see cref="M:System.Web.UI.HtmlControls.HtmlForm.RenderChildren(System.Web.UI.HtmlTextWriter)" /> метода в производном классе обязательно вызовите <see cref="M:System.Web.UI.HtmlControls.HtmlForm.RenderChildren(System.Web.UI.HtmlTextWriter)" /> метод базового класса, чтобы <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> дочерние элементы управления были правильно визуализированы.</para></block>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlForm.DefaultFocus" />
        <altmember cref="M:System.Web.UI.Page.SetFocus(System.Web.UI.Control)" />
        <altmember cref="M:System.Web.UI.Control.Focus" />
      </Docs>
    </Member>
    <Member MemberName="RenderControl">
      <MemberSignature Language="C#" Value="public override void RenderControl (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void RenderControl(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlForm.RenderControl(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub RenderControl (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void RenderControl(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderControl : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="htmlForm.RenderControl writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="writer">Объект <see cref="T:System.Web.UI.HtmlTextWriter" />, получающий содержимое элемента управления формы.</param>
        <summary>Выполняет визуализацию элемента управления <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> в указанный объект <see cref="T:System.Web.UI.HtmlTextWriter" />.</summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para>При переопределении <see cref="M:System.Web.UI.HtmlControls.HtmlForm.RenderControl(System.Web.UI.HtmlTextWriter)" /> метода в производном классе обязательно вызовите <see cref="M:System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter)" /> метод базового класса, чтобы <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> элемент управления отображался правильно.</para></block>
        <altmember cref="P:System.Web.UI.Control.DesignMode" />
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
      </Docs>
    </Member>
    <Member MemberName="SubmitDisabledControls">
      <MemberSignature Language="C#" Value="public virtual bool SubmitDisabledControls { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SubmitDisabledControls" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlForm.SubmitDisabledControls" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SubmitDisabledControls As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SubmitDisabledControls { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SubmitDisabledControls : bool with get, set" Usage="System.Web.UI.HtmlControls.HtmlForm.SubmitDisabledControls" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает логическое значение, показывающее, инициируется ли принудительно отправка значений элементов управления, отключенных на клиенте, которая позволяет им сохранить свои значения после передачи страницы обратно на сервер.</summary>
        <value>Значение <see langword="true" />, если элементы управления, отключенные на клиенте, принуждаются к отправке своих значений; в противном случае — значение <see langword="false" />. Значение по умолчанию — <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlForm.SubmitDisabledControls%2A> Используйте свойство, чтобы указать, следует ли принудительно отключать элементы управления на клиенте для отправки их значений при обратной записи страницы. Это позволяет отключенным элементам управления сохранять свои значения после того, как страница отправляется обратно на сервер. Если свойство имеет значение, элементы управления в форме, которые были отключены с помощью клиентского скрипта, не будут отправляться на сервер при следующей обратной передаче страницы. `false` <xref:System.Web.UI.HtmlControls.HtmlForm.SubmitDisabledControls%2A> В результате теряются все значения, хранящиеся в отключенных элементах управления. Чтобы разрешить отключенным элементам управления сохранять значения после обратной передачи страницы на сервер, присвойте <xref:System.Web.UI.HtmlControls.HtmlForm.SubmitDisabledControls%2A> `true`свойству значение.  
  
   
  
## Examples  
 В следующем примере кода показано, как задать <xref:System.Web.UI.HtmlControls.HtmlForm.SubmitDisabledControls%2A> свойство в `true` форме, чтобы элементы управления, отключенные клиентским скриптом, поддерживали их значения после обратной передачи страницы на сервер. В этом примере, если задать <xref:System.Web.UI.HtmlControls.HtmlForm.SubmitDisabledControls%2A> для `false` свойства значение, а затем нажать кнопку **обратной передачи** , текст в текстовом поле HTML будет потерян, а флажок HTML больше не будет выбран.  
  
 [!code-aspx-csharp[HtmlForm.SubmitDisabledControls#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlForm.SubmitDisabledControls/CS/htmlform.submitdisabledcontrolscs.aspx#1)]
 [!code-aspx-vb[HtmlForm.SubmitDisabledControls#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlForm.SubmitDisabledControls/VB/htmlform.submitdisabledcontrolsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Target">
      <MemberSignature Language="C#" Value="public string Target { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Target" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlForm.Target" />
      <MemberSignature Language="VB.NET" Value="Public Property Target As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Target { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Target : string with get, set" Usage="System.Web.UI.HtmlControls.HtmlForm.Target" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает фрейм или окно, в котором производится отрисовка информации, переданной на сервер.</summary>
        <value>Окно или фрейм браузера, в котором отображается информация, переданная на сервер. По умолчанию значение содержит пустую строку (""), которая обновляет окно или фрейм, устанавливая в них фокус.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlForm.Target%2A> Используйте свойство, чтобы указать целевое окно или кадр, в котором отображаются результаты сведений, отправляемых на сервер. Перенаправление результатов информации, опубликованной на сервере, является сложной задачей. Использовать это свойство просто для обратной передачи не рекомендуется.  
  
> [!NOTE]
>  <xref:System.Web.UI.HtmlControls.HtmlForm.Target%2A> Свойство отображается`target` как атрибут. `target` Атрибут в`form` элементах не разрешен в XHTML 1,1. Таким образом, если визуализированная разметка должна соответствовать стандартам XHTML или должна соответствовать стандартам специальных возможностей, не устанавливайте <xref:System.Web.UI.HtmlControls.HtmlForm.Target%2A> свойство. Дополнительные сведения см. в статьях [стандарты XHTML в Visual Studio и ASP.NET](https://msdn.microsoft.com/library/1b78d416-66bb-43a5-ac77-c703aab55b97) и [Специальные возможности в visual Studio и ASP.NET](https://msdn.microsoft.com/library/7e3ce9c4-6b7d-4fb1-94b5-72cf2a44fe13).  
  
 <xref:System.Web.UI.HtmlControls.HtmlForm.Target%2A> Значение должно начинаться с буквы в диапазоне от a до Z (без учета регистра), за исключением следующих специальных значений, начинающихся с символа подчеркивания.  
  
|Целевое значение|Описание:|  
|------------------|-----------------|  
|`_blank`|Отображает содержимое в новом окне без фреймов.|  
|`_parent`|Отрисовывает содержимое в непосредственно родительском элементе набора фреймов.|  
|`_search`|Отображает содержимое в панели поиска.|  
|`_self`|Отображает содержимое во фрейме с фокусировкой.|  
|`_top`|Отображает содержимое в окне без фреймов.|  
  
> [!NOTE]
>  Чтобы выяснить, поддерживается ли значение `_search`, следует обратиться к документации браузера.  Например, Microsoft Internet Explorer 5.0 или более поздней версии поддерживает целевое значение `_search`.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать <xref:System.Web.UI.HtmlControls.HtmlForm.Target%2A> свойство, чтобы указать новое нерамкное окно для отображения результатов передачи данных на сервер.  
  
 [!code-aspx-csharp[HtmlFormTarget#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlFormTarget/CS/htmlformtargetcs.aspx#1)]
 [!code-aspx-vb[HtmlFormTarget#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlFormTarget/VB/htmlformtargetvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/1b78d416-66bb-43a5-ac77-c703aab55b97">Соответствие ASP.NET и XHTML</related>
        <related type="Article" href="https://msdn.microsoft.com/library/7e3ce9c4-6b7d-4fb1-94b5-72cf2a44fe13">Специальные возможности в Visual Studio 2010 и ASP.NET 4</related>
      </Docs>
    </Member>
    <Member MemberName="UniqueID">
      <MemberSignature Language="C#" Value="public override string UniqueID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UniqueID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlForm.UniqueID" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property UniqueID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ UniqueID { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UniqueID : string" Usage="System.Web.UI.HtmlControls.HtmlForm.UniqueID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает уникальный программный идентификатор, назначенный элементу управления <see cref="T:System.Web.UI.HtmlControls.HtmlForm" />.</summary>
        <value>Уникальный программный идентификатор, назначенный элементу управления <see cref="T:System.Web.UI.HtmlControls.HtmlForm" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте свойство, чтобы получить уникальный программный идентификатор, назначенный <xref:System.Web.UI.HtmlControls.HtmlForm> элементу управления. <xref:System.Web.UI.HtmlControls.HtmlForm.UniqueID%2A> Это свойство переопределяет базовую реализацию, чтобы возвратить постоянное значение, если элемент управления содержится <xref:System.Web.UI.INamingContainer>в объекте, отличном от страницы, например в пользовательском серверном элементе управления. Если контейнер именования является страницей, возвращается значение <xref:System.Web.UI.HtmlControls.HtmlForm> <xref:System.Web.UI.Control.ID%2A> свойства элемента управления.  
  
 <xref:System.Web.UI.HtmlControls.HtmlForm.UniqueID%2A> Свойство<xref:System.Web.UI.HtmlControls.HtmlForm.Name%2A> и свойство всегда возвращают одно и то же значение. Это полезно, когда <xref:System.Web.UI.HtmlControls.HtmlForm> элемент управления подготавливается к просмотру в браузере, который <xref:System.Web.UI.HtmlControls.HtmlForm.UniqueID%2A> <xref:System.Web.UI.HtmlControls.HtmlForm> требует <xref:System.Web.UI.HtmlControls.HtmlForm.Name%2A> , чтобы свойства элемента управления и совпадали. Чтобы синхронизировать эти свойства, <xref:System.Web.UI.HtmlControls.HtmlForm.Name%2A> свойство всегда возвращает значение <xref:System.Web.UI.HtmlControls.HtmlForm.UniqueID%2A> свойства.  
  
> [!NOTE]
>  `name` Атрибут не является совместимым с XHTML атрибутом, и по умолчанию не подготавливается к просмотру с помощью ASP.NET.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать <xref:System.Web.UI.HtmlControls.HtmlForm.UniqueID%2A> свойство для получения уникального идентификатора <xref:System.Web.UI.HtmlControls.HtmlForm> элемента управления.  
  
 [!code-aspx-csharp[HtmlForm.UniqueID#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlForm.UniqueID/CS/htmlform.uniqueidcs.aspx#1)]
 [!code-aspx-vb[HtmlForm.UniqueID#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlForm.UniqueID/VB/htmlform.uniqueidvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlForm.Name" />
        <related type="Article" href="https://msdn.microsoft.com/library/1b78d416-66bb-43a5-ac77-c703aab55b97">Соответствие ASP.NET и XHTML</related>
      </Docs>
    </Member>
  </Members>
</Type>
