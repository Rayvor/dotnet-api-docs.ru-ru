<Type Name="ZipFileExtensions" FullName="System.IO.Compression.ZipFileExtensions">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b903f29f873d3097e7b51b577603fad8733c4384" /><Meta Name="ms.sourcegitcommit" Value="81ab118287bf69d10df7204c332592eac20b1b60" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="12/11/2019" /><Meta Name="ms.locfileid" Value="74235018" /></Metadata><TypeSignature Language="C#" Value="public static class ZipFileExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ZipFileExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IO.Compression.ZipFileExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module ZipFileExtensions" />
  <TypeSignature Language="C++ CLI" Value="public ref class ZipFileExtensions abstract sealed" />
  <TypeSignature Language="F#" Value="type ZipFileExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>System.IO.Compression.ZipFile</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
    <AssemblyVersion>4.0.4.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.IO.Compression.FileSystem</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netstandard-2.0;netcore-2.2;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
      <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netstandard-1.3;netstandard-1.4;netstandard-1.6">
      <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Предоставляет методы расширения для классов <see cref="T:System.IO.Compression.ZipArchive" /> и <see cref="T:System.IO.Compression.ZipArchiveEntry" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Класс <xref:System.IO.Compression.ZipFileExtensions> содержит только статические методы, расширяющие классы <xref:System.IO.Compression.ZipArchive> и <xref:System.IO.Compression.ZipArchiveEntry>. Не создается экземпляр класса <xref:System.IO.Compression.ZipFileExtensions>. Вместо этого эти методы используются из экземпляров <xref:System.IO.Compression.ZipArchive> или <xref:System.IO.Compression.ZipArchiveEntry>.  
  
 Чтобы использовать методы расширения, необходимо сослаться на сборку `System.IO.Compression.FileSystem` в проекте. `System.IO.Compression.FileSystem` сборка недоступна в [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] приложениях. Таким образом, классы <xref:System.IO.Compression.ZipFileExtensions> и <xref:System.IO.Compression.ZipFile> (оба из которых находятся в `System.IO.Compression.FileSystem` сборке) недоступны в приложениях [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)]. В [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] приложениях работа с сжатыми файлами осуществляется с помощью методов <xref:System.IO.Compression.ZipArchive>, <xref:System.IO.Compression.ZipArchiveEntry>, <xref:System.IO.Compression.DeflateStream>и <xref:System.IO.Compression.GZipStream>.  
  
 Класс <xref:System.IO.Compression.ZipFileExtensions> содержит четыре метода, которые расширяют <xref:System.IO.Compression.ZipArchive>:  
  
-   <xref:System.IO.Compression.ZipFileExtensions.CreateEntryFromFile%28System.IO.Compression.ZipArchive%2CSystem.String%2CSystem.String%29>  
  
-   <xref:System.IO.Compression.ZipFileExtensions.CreateEntryFromFile%28System.IO.Compression.ZipArchive%2CSystem.String%2CSystem.String%2CSystem.IO.Compression.CompressionLevel%29>  
  
-   <xref:System.IO.Compression.ZipFileExtensions.ExtractToDirectory%28System.IO.Compression.ZipArchive%2CSystem.String%29>  

-   <xref:System.IO.Compression.ZipFileExtensions.ExtractToDirectory%28System.IO.Compression.ZipArchive%2CSystem.String%2CSystem.Boolean%29>  

 Класс <xref:System.IO.Compression.ZipFileExtensions> содержит два метода, которые расширяют <xref:System.IO.Compression.ZipArchiveEntry>:  
  
-   <xref:System.IO.Compression.ZipFileExtensions.ExtractToFile%28System.IO.Compression.ZipArchiveEntry%2CSystem.String%29>  
  
-   <xref:System.IO.Compression.ZipFileExtensions.ExtractToFile%28System.IO.Compression.ZipArchiveEntry%2CSystem.String%2CSystem.Boolean%29>  
  
   
  
## Examples  
 В следующем примере показано, как создать новую запись в ZIP-архиве на основе существующего файла и извлечь содержимое архива в каталог.  
  
 [!code-csharp[System.IO.Compression.ZipArchive#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.ziparchive/cs/program3.cs#3)]
 [!code-vb[System.IO.Compression.ZipArchive#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.ziparchive/vb/program3.vb#3)]  
  
 В следующем примере показано, как выполнить итерацию по содержимому ZIP-архива и извлечь файлы с расширением txt.  
  
 [!code-csharp[System.IO.Compression.ZipArchive#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.ziparchive/cs/program1.cs#1)]
 [!code-vb[System.IO.Compression.ZipArchive#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.ziparchive/vb/program1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="CreateEntryFromFile">
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.ZipFile</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Архивирует файл, сжимая его и добавляя его в ZIP-архив.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateEntryFromFile">
      <MemberSignature Language="C#" Value="public static System.IO.Compression.ZipArchiveEntry CreateEntryFromFile (this System.IO.Compression.ZipArchive destination, string sourceFileName, string entryName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Compression.ZipArchiveEntry CreateEntryFromFile(class System.IO.Compression.ZipArchive destination, string sourceFileName, string entryName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.ZipFileExtensions.CreateEntryFromFile(System.IO.Compression.ZipArchive,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CreateEntryFromFile (destination As ZipArchive, sourceFileName As String, entryName As String) As ZipArchiveEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::IO::Compression::ZipArchiveEntry ^ CreateEntryFromFile(System::IO::Compression::ZipArchive ^ destination, System::String ^ sourceFileName, System::String ^ entryName);" />
      <MemberSignature Language="F#" Value="static member CreateEntryFromFile : System.IO.Compression.ZipArchive * string * string -&gt; System.IO.Compression.ZipArchiveEntry" Usage="System.IO.Compression.ZipFileExtensions.CreateEntryFromFile (destination, sourceFileName, entryName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.ZipFile</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.FileSystem</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Compression.ZipArchiveEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.IO.Compression.ZipArchive" RefType="this" />
        <Parameter Name="sourceFileName" Type="System.String" />
        <Parameter Name="entryName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="destination">ZIP-архив, в который добавляется файл.</param>
        <param name="sourceFileName">Путь к файлу, который необходимо заархивировать. Можно указать относительный или абсолютный путь. Относительный путь интерпретируется относительно текущего рабочего каталога.</param>
        <param name="entryName">Имя записи, которую требуется создать в ZIP-архиве.</param>
        <summary>Архивирует файл, сжимая его и добавляя его в ZIP-архив.</summary>
        <returns>Программа-оболочка для новой записи в ZIP-архиве.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Новая запись в архиве содержит содержимое файла, указанного параметром `sourceFileName`. Если запись с указанным именем (`entryName`) уже существует в архиве, то создается вторая запись с идентичным именем. Для свойства <xref:System.IO.Compression.ZipArchiveEntry.LastWriteTime%2A> записи задается время последнего изменения файла в файловой системе.  
  
 При наличии `ZipArchiveMode.Update` предельный размер записи ограничен <xref:System.Int32.MaxValue?displayProperty=nameWithType>. Это ограничение связано с тем, что режим обновления использует <xref:System.IO.MemoryStream> внутренне, чтобы разрешить поиск, необходимый при обновлении архива, и <xref:System.IO.MemoryStream> имеет максимальный размер, равный значению типа int.  
   
  
## Examples  
 В следующем примере показано, как создать новую запись в ZIP-архиве из существующего файла.  
  
 [!code-csharp[System.IO.Compression.ZipArchive#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.ziparchive/cs/program3.cs#3)]
 [!code-vb[System.IO.Compression.ZipArchive#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.ziparchive/vb/program3.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="sourceFileName" /> имеет значение <see cref="F:System.String.Empty" />, содержит только пробел или по крайней мере один недопустимый символ.  
  
-или- 
 Свойство <paramref name="entryName" /> имеет значение <see cref="F:System.String.Empty" />.</exception>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="sourceFileName" /> или <paramref name="entryName" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.IO.PathTooLongException">В <paramref name="sourceFileName" /> длина указанного пути, имени файла или обоих параметров превышает установленное в системе максимальное значение.</exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">Недопустимый <paramref name="sourceFileName" /> (например, он ведет на несопоставленный диск).</exception>
        <exception cref="T:System.IO.IOException">Файл, указанный в <paramref name="sourceFileName" />, не может быть открыт или слишком большой для изменения (текущий предел: <see cref="F:System.Int32.MaxValue" />).</exception>
        <exception cref="T:System.UnauthorizedAccessException">Параметр <paramref name="sourceFileName" /> задает каталог.  
  
-или- 
У вызывающего объекта отсутствует разрешение на доступ к файлу, указанному параметром <paramref name="sourceFileName" />.</exception>
        <exception cref="T:System.IO.FileNotFoundException">Файл, заданный параметром <paramref name="sourceFileName" />, не найден.</exception>
        <exception cref="T:System.NotSupportedException">Параметр <paramref name="sourceFileName" /> имеет недопустимый формат.  
  
-или- 
ZIP-архив не поддерживает запись.</exception>
        <exception cref="T:System.ObjectDisposedException">ZIP-архив был удален.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateEntryFromFile">
      <MemberSignature Language="C#" Value="public static System.IO.Compression.ZipArchiveEntry CreateEntryFromFile (this System.IO.Compression.ZipArchive destination, string sourceFileName, string entryName, System.IO.Compression.CompressionLevel compressionLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Compression.ZipArchiveEntry CreateEntryFromFile(class System.IO.Compression.ZipArchive destination, string sourceFileName, string entryName, valuetype System.IO.Compression.CompressionLevel compressionLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.ZipFileExtensions.CreateEntryFromFile(System.IO.Compression.ZipArchive,System.String,System.String,System.IO.Compression.CompressionLevel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::IO::Compression::ZipArchiveEntry ^ CreateEntryFromFile(System::IO::Compression::ZipArchive ^ destination, System::String ^ sourceFileName, System::String ^ entryName, System::IO::Compression::CompressionLevel compressionLevel);" />
      <MemberSignature Language="F#" Value="static member CreateEntryFromFile : System.IO.Compression.ZipArchive * string * string * System.IO.Compression.CompressionLevel -&gt; System.IO.Compression.ZipArchiveEntry" Usage="System.IO.Compression.ZipFileExtensions.CreateEntryFromFile (destination, sourceFileName, entryName, compressionLevel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.ZipFile</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.FileSystem</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Compression.ZipArchiveEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.IO.Compression.ZipArchive" RefType="this" />
        <Parameter Name="sourceFileName" Type="System.String" />
        <Parameter Name="entryName" Type="System.String" />
        <Parameter Name="compressionLevel" Type="System.IO.Compression.CompressionLevel" />
      </Parameters>
      <Docs>
        <param name="destination">ZIP-архив, в который добавляется файл.</param>
        <param name="sourceFileName">Путь к файлу, который необходимо заархивировать. Можно указать относительный или абсолютный путь. Относительный путь интерпретируется относительно текущего рабочего каталога.</param>
        <param name="entryName">Имя записи, которую требуется создать в ZIP-архиве.</param>
        <param name="compressionLevel">Одно из значений перечисления, указывающее, акцентировать ли внимание на скорости или эффективности сжатия при создании записи.</param>
        <summary>Архивирует файл, сжимая его с использованием заданного уровня сжатия и добавляя его в ZIP-архив.</summary>
        <returns>Программа-оболочка для новой записи в ZIP-архиве.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Новая запись в архиве содержит содержимое файла, указанного параметром `sourceFileName`. Если запись с указанным именем (`entryName`) уже существует в архиве, то создается вторая запись с идентичным именем. Для свойства <xref:System.IO.Compression.ZipArchiveEntry.LastWriteTime%2A> записи задается время последнего изменения файла в файловой системе.  
  
 При наличии `ZipArchiveMode.Update` предельный размер записи ограничен <xref:System.Int32.MaxValue?displayProperty=nameWithType>. Это ограничение связано с тем, что режим обновления использует <xref:System.IO.MemoryStream> внутренне, чтобы разрешить поиск, необходимый при обновлении архива, и <xref:System.IO.MemoryStream> имеет максимальный размер, равный значению типа int.  
  
## Examples  
 В следующем примере показано, как создать новую запись в ZIP-архиве на основе существующего файла и указать уровень сжатия.  
  
 [!code-csharp[System.IO.Compression.ZipArchive#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.ziparchive/cs/program4.cs#4)]
 [!code-vb[System.IO.Compression.ZipArchive#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.ziparchive/vb/program4.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="sourceFileName" /> имеет значение <see cref="F:System.String.Empty" />, содержит только пробел или по крайней мере один недопустимый символ.  
  
-или- 
 Свойство <paramref name="entryName" /> имеет значение <see cref="F:System.String.Empty" />.</exception>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="sourceFileName" /> или <paramref name="entryName" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">Недопустимый <paramref name="sourceFileName" /> (например, он ведет на несопоставленный диск).</exception>
        <exception cref="T:System.IO.PathTooLongException">В <paramref name="sourceFileName" /> длина указанного пути, имени файла или обоих параметров превышает установленное в системе максимальное значение.</exception>
        <exception cref="T:System.IO.IOException">Файл, указанный в <paramref name="sourceFileName" />, не может быть открыт или слишком большой для изменения (текущий предел: <see cref="F:System.Int32.MaxValue" />).</exception>
        <exception cref="T:System.UnauthorizedAccessException">Параметр <paramref name="sourceFileName" /> задает каталог.  
  
-или- 
У вызывающего объекта отсутствует разрешение на доступ к файлу, указанному параметром <paramref name="sourceFileName" />.</exception>
        <exception cref="T:System.IO.FileNotFoundException">Файл, заданный параметром <paramref name="sourceFileName" />, не найден.</exception>
        <exception cref="T:System.NotSupportedException">Параметр <paramref name="sourceFileName" /> имеет недопустимый формат.  
  
-или- 
ZIP-архив не поддерживает запись.</exception>
        <exception cref="T:System.ObjectDisposedException">ZIP-архив был удален.</exception>
      </Docs>
    </Member>
    <Member MemberName="ExtractToDirectory">
      <MemberSignature Language="C#" Value="public static void ExtractToDirectory (this System.IO.Compression.ZipArchive source, string destinationDirectoryName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ExtractToDirectory(class System.IO.Compression.ZipArchive source, string destinationDirectoryName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.ZipFileExtensions.ExtractToDirectory(System.IO.Compression.ZipArchive,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub ExtractToDirectory (source As ZipArchive, destinationDirectoryName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void ExtractToDirectory(System::IO::Compression::ZipArchive ^ source, System::String ^ destinationDirectoryName);" />
      <MemberSignature Language="F#" Value="static member ExtractToDirectory : System.IO.Compression.ZipArchive * string -&gt; unit" Usage="System.IO.Compression.ZipFileExtensions.ExtractToDirectory (source, destinationDirectoryName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.ZipFile</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.FileSystem</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.IO.Compression.ZipArchive" RefType="this" />
        <Parameter Name="destinationDirectoryName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source">ZIP-архив, из которого нужно извлечь файлы.</param>
        <param name="destinationDirectoryName">Путь к каталогу, в который нужно поместить извлеченные файлы. Можно указать относительный или абсолютный путь. Относительный путь интерпретируется относительно текущего рабочего каталога.</param>
        <summary>Извлекает все файлы из ZIP-архива в каталог в файловой системе.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод создает каталог, заданный `destinationDirectoryName`. Если целевой каталог уже существует, этот метод не перезаписывает его. Он вызывает исключение <xref:System.IO.IOException>. Этот метод также создает подкаталоги, отражающие иерархию в ZIP-архиве. Если во время извлечения возникает ошибка, архив остается частично извлеченным. Каждый извлеченный файл имеет тот же относительный путь к каталогу, заданному `destinationDirectoryName`, так как его исходная запись находится в корне архива.  
  
   
  
## Examples  
 В следующем примере показано, как создать новую запись в ZIP-архиве на основе существующего файла и извлечь архив в новый каталог. Для компилятора этого примера кода необходимо сослаться на сборки `System.IO.Compression` и `System.IO.Compression.FileSystem` в проекте.  
  
 [!code-csharp[System.IO.Compression.ZipArchive#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.ziparchive/cs/program3.cs#3)]
 [!code-vb[System.IO.Compression.ZipArchive#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.ziparchive/vb/program3.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="destinationDirectoryName" /> имеет значение <see cref="F:System.String.Empty" />, содержит только пробел или по крайней мере один недопустимый символ.</exception>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="destinationDirectoryName" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.IO.PathTooLongException">Длина указанного пути превышает максимальную длину, определенную в системе.</exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">Указан недопустимый путь (например, он ведет на несопоставленный диск).</exception>
        <exception cref="T:System.IO.IOException">Каталог, указанный в параметре <paramref name="destinationDirectoryName" />, уже существует.  
  
-или- 
Имя записи в архиве имеет значение <see cref="F:System.String.Empty" />, содержит только пробел или по крайней мере один недопустимый символ.  
  
-или- 
При извлечении записи из архива будет создан файл, который находится вне каталога, заданного параметром <paramref name="destinationDirectoryName" />. (Это может произойти, например, если имя записи содержит методы доступа к родительскому каталогу.) 
-или- 
Две или несколько записей в архиве имеют одинаковые имена.</exception>
        <exception cref="T:System.UnauthorizedAccessException">У вызывающего объекта нет необходимого разрешения для записи в каталог назначения.</exception>
        <exception cref="T:System.NotSupportedException"><paramref name="destinationDirectoryName" /> содержит недопустимый формат.</exception>
        <exception cref="T:System.IO.InvalidDataException">Запись архива не найдена или повреждена.  
  
 -или-  
  
 Запись архива была сжата с помощью неподдерживаемого метода сжатия.</exception>
      </Docs>
    </Member>
    <Member MemberName="ExtractToDirectory">
      <MemberSignature Language="C#" Value="public static void ExtractToDirectory (this System.IO.Compression.ZipArchive source, string destinationDirectoryName, bool overwriteFiles);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ExtractToDirectory(class System.IO.Compression.ZipArchive source, string destinationDirectoryName, bool overwriteFiles) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.ZipFileExtensions.ExtractToDirectory(System.IO.Compression.ZipArchive,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub ExtractToDirectory (source As ZipArchive, destinationDirectoryName As String, overwriteFiles As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void ExtractToDirectory(System::IO::Compression::ZipArchive ^ source, System::String ^ destinationDirectoryName, bool overwriteFiles);" />
      <MemberSignature Language="F#" Value="static member ExtractToDirectory : System.IO.Compression.ZipArchive * string * bool -&gt; unit" Usage="System.IO.Compression.ZipFileExtensions.ExtractToDirectory (source, destinationDirectoryName, overwriteFiles)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.ZipFile</AssemblyName>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.FileSystem</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.IO.Compression.ZipArchive" RefType="this" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="destinationDirectoryName" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="overwriteFiles" Type="System.Boolean" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="source">Извлекаемый <see cref="T:System.IO.Compression.ZipArchive" />.</param>
        <param name="destinationDirectoryName">Путь к целевому каталогу в файловой системе. Путь может быть как относительным, так и абсолютным. Относительный путь интерпретируется относительно текущего рабочего каталога.</param>
        <param name="overwriteFiles"><see langword="true" /> указывает, что существующие файлы должны быть перезаписаны; в противном случае — <see langword="false" />.</param>
        <summary>Извлекает все файлы в архиве в каталог в файловой системе.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[
## Remarks
 Указанный каталог может уже существовать. При необходимости этот метод создаст указанный каталог и все подкаталоги.

 Если при извлечении архива возникла ошибка, архив будет извлечен частично.
 
 Каждая запись будет извлечена таким образом, что извлеченный файл имеет тот же относительный путь к `destinationDirectoryName`, что и запись, в корневую папку архива.
 
 Если файл для архивации имеет неверное время последнего изменения, то будет использоваться первая дата и время, представленные в формате метки времени ZIP (полночь 1 января 1980).
 
          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="destinationArchiveFileName" /> представляет собой строку нулевой длины, содержащую только пробелы или один или несколько недопустимых символов, заданных методом <see cref="F:System.IO.Path.InvalidPathChars" />.</exception>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="destinationArchiveFileName" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.IO.PathTooLongException">Указанный путь, имя файла или оба значения превышают максимальную длину, заданную в системе.</exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">Указан недопустимый путь (например, он ведет на несопоставленный диск).</exception>
        <exception cref="T:System.IO.IOException">Имя <see cref="T:System.IO.Compression.ZipArchiveEntry" /> имеет нулевую длину, содержит только пробелы или один или несколько недопустимых символов, заданных методом <see cref="F:System.IO.Path.InvalidPathChars" />.

-или-

Извлечение объекта <see cref="T:System.IO.Compression.ZipArchiveEntry" /> привело бы к тому, что целевой файл оказался бы за пределами <paramref name="destinationArchiveFileName" /> (например, если имя записи содержит методы доступа к родительскому каталогу).

-или-

<see cref="T:System.IO.Compression.ZipArchiveEntry" /> имеет то же имя, что и уже извлеченная запись из того же архива.</exception>
        <exception cref="T:System.UnauthorizedAccessException">У вызывающего кода отсутствуют необходимые разрешения.</exception>
        <exception cref="T:System.NotSupportedException">Параметр <paramref name="destinationArchiveFileName" /> задан в недопустимом формате.</exception>
        <exception cref="T:System.IO.InvalidDataException"><see cref="T:System.IO.Compression.ZipArchiveEntry" /> поврежден или не может быть найден.

-или-

<see cref="T:System.IO.Compression.ZipArchiveEntry" /> сжат с помощью неподдерживаемого метода сжатия.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ExtractToFile">
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.ZipFile</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Извлекает запись в ZIP-архиве в файл.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ExtractToFile">
      <MemberSignature Language="C#" Value="public static void ExtractToFile (this System.IO.Compression.ZipArchiveEntry source, string destinationFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ExtractToFile(class System.IO.Compression.ZipArchiveEntry source, string destinationFileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.ZipFileExtensions.ExtractToFile(System.IO.Compression.ZipArchiveEntry,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub ExtractToFile (source As ZipArchiveEntry, destinationFileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void ExtractToFile(System::IO::Compression::ZipArchiveEntry ^ source, System::String ^ destinationFileName);" />
      <MemberSignature Language="F#" Value="static member ExtractToFile : System.IO.Compression.ZipArchiveEntry * string -&gt; unit" Usage="System.IO.Compression.ZipFileExtensions.ExtractToFile (source, destinationFileName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.ZipFile</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.FileSystem</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.IO.Compression.ZipArchiveEntry" RefType="this" />
        <Parameter Name="destinationFileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source">ZIP-архив, из которого извлекается файл.</param>
        <param name="destinationFileName">Путь к файлу, создаваемому из содержимого записи. Можно указать относительный или абсолютный путь. Относительный путь интерпретируется относительно текущего рабочего каталога.</param>
        <summary>Извлекает запись в ZIP-архиве в файл.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если конечный файл уже существует, этот метод не перезаписывает его. Он вызывает исключение <xref:System.IO.IOException>. Чтобы перезаписать существующий файл, используйте вместо этого перегрузку метода <xref:System.IO.Compression.ZipFileExtensions.ExtractToFile%28System.IO.Compression.ZipArchiveEntry%2CSystem.String%2CSystem.Boolean%29>.  
  
 Время последней записи файла задается в момент последнего изменения записи в ZIP-архиве. Это значение хранится в свойстве <xref:System.IO.Compression.ZipArchiveEntry.LastWriteTime%2A>.  
  
 Этот метод нельзя использовать для извлечения каталога. Вместо этого используйте метод <xref:System.IO.Compression.ZipFileExtensions.ExtractToDirectory%2A>.  
  
   
  
## Examples  
 В следующем примере показано, как выполнить итерацию содержимого файла ZIP-архива и извлечь файлы с расширением txt.  
  
 [!code-csharp[System.IO.Compression.ZipArchive#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.ziparchive/cs/program1.cs#1)]
 [!code-vb[System.IO.Compression.ZipArchive#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.ziparchive/vb/program1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="destinationFileName" /> представляет собой строку нулевой длины, содержащую только пробелы или один или несколько недопустимых символов, заданных методом <see cref="F:System.IO.Path.InvalidPathChars" />.  
  
-или- 
 Параметр <paramref name="destinationFileName" /> задает каталог.</exception>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="destinationFileName" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.IO.PathTooLongException">Указанный путь, имя файла или оба значения превышают максимальную длину, заданную в системе.</exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">Указан недопустимый путь (например, он ведет на несопоставленный диск).</exception>
        <exception cref="T:System.IO.IOException"><paramref name="destinationFileName" /> уже существует.  
  
-или- 
Ошибка ввода/вывода.  
  
-или- 
Запись в текущий момент открыта для записи.  
  
-или- 
Запись была удалена из архива.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Вызывающий объект не имеет необходимых разрешений на создание нового файла.</exception>
        <exception cref="T:System.IO.InvalidDataException">Запись в архиве отсутствует либо была повреждена и ее невозможно прочитать.  
  
 -или-  
  
 Запись была сжата с использованием неподдерживаемого метода сжатия.</exception>
        <exception cref="T:System.ObjectDisposedException">ZIP-архив, которому принадлежит эта запись, был удален.</exception>
        <exception cref="T:System.NotSupportedException">Параметр <paramref name="destinationFileName" /> задан в недопустимом формате.  
  
-или- 
ZIP-архив для этой записи был открыт в режиме <see cref="F:System.IO.Compression.ZipArchiveMode.Create" />, который не разрешает получение записей.</exception>
      </Docs>
    </Member>
    <Member MemberName="ExtractToFile">
      <MemberSignature Language="C#" Value="public static void ExtractToFile (this System.IO.Compression.ZipArchiveEntry source, string destinationFileName, bool overwrite);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ExtractToFile(class System.IO.Compression.ZipArchiveEntry source, string destinationFileName, bool overwrite) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.ZipFileExtensions.ExtractToFile(System.IO.Compression.ZipArchiveEntry,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub ExtractToFile (source As ZipArchiveEntry, destinationFileName As String, overwrite As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void ExtractToFile(System::IO::Compression::ZipArchiveEntry ^ source, System::String ^ destinationFileName, bool overwrite);" />
      <MemberSignature Language="F#" Value="static member ExtractToFile : System.IO.Compression.ZipArchiveEntry * string * bool -&gt; unit" Usage="System.IO.Compression.ZipFileExtensions.ExtractToFile (source, destinationFileName, overwrite)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.ZipFile</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.FileSystem</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.IO.Compression.ZipArchiveEntry" RefType="this" />
        <Parameter Name="destinationFileName" Type="System.String" />
        <Parameter Name="overwrite" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="source">ZIP-архив, из которого извлекается файл.</param>
        <param name="destinationFileName">Путь к файлу, создаваемому из содержимого записи. Можно указать относительный или абсолютный путь. Относительный путь интерпретируется относительно текущего рабочего каталога.</param>
        <param name="overwrite">Значение <see langword="true" />, чтобы перезаписывался существующий файл с тем же именем, что и файл назначения; в противном случае — значение <see langword="false" />.</param>
        <summary>Извлекает запись из ZIP-архива в файл и при необходимости перезаписывает существующий файл с тем же именем.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Время последней записи файла задается в момент последнего изменения записи в ZIP-архиве. Это значение хранится в свойстве <xref:System.IO.Compression.ZipArchiveEntry.LastWriteTime%2A>.  
  
 Этот метод нельзя использовать для извлечения каталога. Вместо этого используйте метод <xref:System.IO.Compression.ZipFileExtensions.ExtractToDirectory%2A>.  
  
   
  
## Examples  
 В следующем примере показано, как выполнить итерацию содержимого файла ZIP-архива и извлечь файлы с расширением txt. Он перезаписывает существующий файл с тем же именем в папке назначения. Для компилятора этого примера кода необходимо сослаться на сборки `System.IO.Compression` и `System.IO.Compression.FileSystem` в проекте.  
  
 [!code-csharp[System.IO.Compression.ZipArchive#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.ziparchive/cs/program2.cs#2)]
 [!code-vb[System.IO.Compression.ZipArchive#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.ziparchive/vb/program2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="destinationFileName" /> представляет собой строку нулевой длины, содержащую только пробелы или один или несколько недопустимых символов, заданных методом <see cref="F:System.IO.Path.InvalidPathChars" />.  
  
-или- 
 Параметр <paramref name="destinationFileName" /> задает каталог.</exception>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="destinationFileName" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.IO.PathTooLongException">Указанный путь, имя файла или оба значения превышают максимальную длину, заданную в системе.</exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">Указан недопустимый путь (например, он ведет на несопоставленный диск).</exception>
        <exception cref="T:System.IO.IOException">Имя, заданное в параметре <paramref name="destinationFileName" />, уже существует, а параметр <paramref name="overwrite" /> имеет значение <see langword="false" />.  
  
-или- 
Ошибка ввода/вывода.  
  
-или- 
Запись в текущий момент открыта для записи.  
  
-или- 
Запись была удалена из архива.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Вызывающий объект не имеет необходимых разрешений на создание нового файла.</exception>
        <exception cref="T:System.IO.InvalidDataException">Запись в архиве отсутствует или была повреждена, и ее невозможно прочитать.  
  
 -или-  
  
 Запись была сжата с использованием неподдерживаемого метода сжатия.</exception>
        <exception cref="T:System.ObjectDisposedException">ZIP-архив, которому принадлежит эта запись, был удален.</exception>
        <exception cref="T:System.NotSupportedException">Параметр <paramref name="destinationFileName" /> задан в недопустимом формате.  
  
-или- 
ZIP-архив для этой записи был открыт в режиме <see cref="F:System.IO.Compression.ZipArchiveMode.Create" />, который не разрешает получение записей.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
