<Type Name="BrotliStream" FullName="System.IO.Compression.BrotliStream">
  <Metadata><Meta Name="ms.openlocfilehash" Value="04399adbebf9f8fa6ffa3f7858e29ddbf89455fe" /><Meta Name="ms.sourcegitcommit" Value="71cd9c2de2cd52bd5b71424de92feb029aa2818b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="10/09/2019" /><Meta Name="ms.locfileid" Value="72185962" /></Metadata><TypeSignature Language="C#" Value="public sealed class BrotliStream : System.IO.Stream" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit BrotliStream extends System.IO.Stream" />
  <TypeSignature Language="DocId" Value="T:System.IO.Compression.BrotliStream" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class BrotliStream&#xA;Inherits Stream" />
  <TypeSignature Language="C++ CLI" Value="public ref class BrotliStream sealed : System::IO::Stream" />
  <TypeSignature Language="F#" Value="type BrotliStream = class&#xA;    inherit Stream" />
  <AssemblyInfo>
    <AssemblyName>System.IO.Compression.Brotli</AssemblyName>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IO.Stream</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="a7a0d-101">Предоставляет методы и свойства, используемые для сжатия и распаковки потоков с использованием спецификации формата Brotli.</span><span class="sxs-lookup"><span data-stu-id="a7a0d-101">Provides methods and properties used to compress and decompress streams by using the Brotli data format specification.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BrotliStream (System.IO.Stream stream, System.IO.Compression.CompressionLevel compressionLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream, valuetype System.IO.Compression.CompressionLevel compressionLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.BrotliStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BrotliStream(System::IO::Stream ^ stream, System::IO::Compression::CompressionLevel compressionLevel);" />
      <MemberSignature Language="F#" Value="new System.IO.Compression.BrotliStream : System.IO.Stream * System.IO.Compression.CompressionLevel -&gt; System.IO.Compression.BrotliStream" Usage="new System.IO.Compression.BrotliStream (stream, compressionLevel)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.Brotli</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="compressionLevel" Type="System.IO.Compression.CompressionLevel" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="a7a0d-102">Поток для сжатия.</span><span class="sxs-lookup"><span data-stu-id="a7a0d-102">The stream to compress.</span></span></param>
        <param name="compressionLevel"><span data-ttu-id="a7a0d-103">Одно из значений перечисления, указывающее, чему отдается приоритет при сжатии потока: скорости или эффективности сжатия.</span><span class="sxs-lookup"><span data-stu-id="a7a0d-103">One of the enumeration values that indicates whether to emphasize speed or compression efficiency when compressing the stream.</span></span></param>
        <summary><span data-ttu-id="a7a0d-104">Инициализирует новый экземпляр класса <see cref="T:System.IO.Compression.BrotliStream" /> с использованием указанного потока и уровня сжатия.</span><span class="sxs-lookup"><span data-stu-id="a7a0d-104">Initializes a new instance of the <see cref="T:System.IO.Compression.BrotliStream" /> class by using the specified stream and compression level.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BrotliStream (System.IO.Stream stream, System.IO.Compression.CompressionMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream, valuetype System.IO.Compression.CompressionMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.BrotliStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BrotliStream(System::IO::Stream ^ stream, System::IO::Compression::CompressionMode mode);" />
      <MemberSignature Language="F#" Value="new System.IO.Compression.BrotliStream : System.IO.Stream * System.IO.Compression.CompressionMode -&gt; System.IO.Compression.BrotliStream" Usage="new System.IO.Compression.BrotliStream (stream, mode)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.Brotli</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="mode" Type="System.IO.Compression.CompressionMode" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="a7a0d-105">Поток для сжатия.</span><span class="sxs-lookup"><span data-stu-id="a7a0d-105">The stream to compress.</span></span></param>
        <param name="mode"><span data-ttu-id="a7a0d-106">Одно из значений перечисления, указывающее, нужно ли выполнить сжатие или распаковку потока.</span><span class="sxs-lookup"><span data-stu-id="a7a0d-106">One of the enumeration values that indicates whether to compress or decompress the stream.</span></span></param>
        <summary><span data-ttu-id="a7a0d-107">Инициализирует новый экземпляр класса <see cref="T:System.IO.Compression.BrotliStream" /> с использованием указанного потока и режима сжатия.</span><span class="sxs-lookup"><span data-stu-id="a7a0d-107">Initializes a new instance of the <see cref="T:System.IO.Compression.BrotliStream" /> class by using the specified stream and compression mode.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BrotliStream (System.IO.Stream stream, System.IO.Compression.CompressionLevel compressionLevel, bool leaveOpen);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream, valuetype System.IO.Compression.CompressionLevel compressionLevel, bool leaveOpen) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.BrotliStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BrotliStream(System::IO::Stream ^ stream, System::IO::Compression::CompressionLevel compressionLevel, bool leaveOpen);" />
      <MemberSignature Language="F#" Value="new System.IO.Compression.BrotliStream : System.IO.Stream * System.IO.Compression.CompressionLevel * bool -&gt; System.IO.Compression.BrotliStream" Usage="new System.IO.Compression.BrotliStream (stream, compressionLevel, leaveOpen)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.Brotli</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="compressionLevel" Type="System.IO.Compression.CompressionLevel" />
        <Parameter Name="leaveOpen" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="a7a0d-108">Поток для сжатия.</span><span class="sxs-lookup"><span data-stu-id="a7a0d-108">The stream to compress.</span></span></param>
        <param name="compressionLevel"><span data-ttu-id="a7a0d-109">Одно из значений перечисления, указывающее, чему отдается приоритет при сжатии потока: скорости или эффективности сжатия.</span><span class="sxs-lookup"><span data-stu-id="a7a0d-109">One of the enumeration values that indicates whether to emphasize speed or compression efficiency when compressing the stream.</span></span></param>
        <param name="leaveOpen"><span data-ttu-id="a7a0d-110">Значение <see langword="true" />, чтобы оставить поток открытым после удаления объекта <see cref="T:System.IO.Compression.BrotliStream" />; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a7a0d-110"><see langword="true" /> to leave the stream open after disposing the <see cref="T:System.IO.Compression.BrotliStream" /> object; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="a7a0d-111">Инициализирует новый экземпляр класса <see cref="T:System.IO.Compression.BrotliStream" /> с помощью указанного потока и уровня сжатия, а также при необходимости оставляет поток открытым.</span><span class="sxs-lookup"><span data-stu-id="a7a0d-111">Initializes a new instance of the <see cref="T:System.IO.Compression.BrotliStream" /> class by using the specified stream and compression level, and optionally leaves the stream open.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BrotliStream (System.IO.Stream stream, System.IO.Compression.CompressionMode mode, bool leaveOpen);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream, valuetype System.IO.Compression.CompressionMode mode, bool leaveOpen) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.BrotliStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BrotliStream(System::IO::Stream ^ stream, System::IO::Compression::CompressionMode mode, bool leaveOpen);" />
      <MemberSignature Language="F#" Value="new System.IO.Compression.BrotliStream : System.IO.Stream * System.IO.Compression.CompressionMode * bool -&gt; System.IO.Compression.BrotliStream" Usage="new System.IO.Compression.BrotliStream (stream, mode, leaveOpen)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.Brotli</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="mode" Type="System.IO.Compression.CompressionMode" />
        <Parameter Name="leaveOpen" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="a7a0d-112">Поток для сжатия.</span><span class="sxs-lookup"><span data-stu-id="a7a0d-112">The stream to compress.</span></span></param>
        <param name="mode"><span data-ttu-id="a7a0d-113">Одно из значений перечисления, указывающее, нужно ли выполнить сжатие или распаковку потока.</span><span class="sxs-lookup"><span data-stu-id="a7a0d-113">One of the enumeration values that indicates whether to compress or decompress the stream.</span></span></param>
        <param name="leaveOpen"><span data-ttu-id="a7a0d-114">Значение <see langword="true" />, чтобы оставить поток открытым после удаления объекта <see cref="T:System.IO.Compression.BrotliStream" />; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a7a0d-114"><see langword="true" /> to leave the stream open after the <see cref="T:System.IO.Compression.BrotliStream" /> object is disposed; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="a7a0d-115">Инициализирует новый экземпляр класса <see cref="T:System.IO.Compression.BrotliStream" /> с помощью указанного потока и режима сжатия, а также при необходимости оставляет поток открытым.</span><span class="sxs-lookup"><span data-stu-id="a7a0d-115">Initializes a new instance of the <see cref="T:System.IO.Compression.BrotliStream" /> class by using the specified stream and compression mode, and optionally leaves the stream open.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream BaseStream { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Stream BaseStream" />
      <MemberSignature Language="DocId" Value="P:System.IO.Compression.BrotliStream.BaseStream" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BaseStream As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Stream ^ BaseStream { System::IO::Stream ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BaseStream : System.IO.Stream" Usage="System.IO.Compression.BrotliStream.BaseStream" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.Brotli</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a7a0d-116">Возвращает ссылку на основной поток.</span><span class="sxs-lookup"><span data-stu-id="a7a0d-116">Gets a reference to the underlying stream.</span></span></summary>
        <value><span data-ttu-id="a7a0d-117">Объект потока, представляющий основной поток.</span><span class="sxs-lookup"><span data-stu-id="a7a0d-117">A stream object that represents the underlying stream.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="a7a0d-118">Основной поток закрыт.</span><span class="sxs-lookup"><span data-stu-id="a7a0d-118">The underlying stream is closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BeginRead">
      <MemberSignature Language="C#" Value="public override IAsyncResult BeginRead (byte[] buffer, int offset, int count, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IAsyncResult BeginRead(unsigned int8[] buffer, int32 offset, int32 count, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.BrotliStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override IAsyncResult ^ BeginRead(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="override this.BeginRead : byte[] * int * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="brotliStream.BeginRead (buffer, offset, count, asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.Brotli</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="a7a0d-119">Буфер, из которого будут считываться данные.</span><span class="sxs-lookup"><span data-stu-id="a7a0d-119">The buffer from which data will be read.</span></span></param>
        <param name="offset"><span data-ttu-id="a7a0d-120">Смещение байтов в <paramref name="array" />, с которого начинается чтение данных из потока.</span><span class="sxs-lookup"><span data-stu-id="a7a0d-120">The byte offset in <paramref name="array" /> at which to begin reading data from the stream.</span></span></param>
        <param name="count"><span data-ttu-id="a7a0d-121">Максимальное число байтов, предназначенных для чтения.</span><span class="sxs-lookup"><span data-stu-id="a7a0d-121">To maximum number of bytes to read.</span></span></param>
        <param name="asyncCallback"><span data-ttu-id="a7a0d-122">Дополнительный асинхронный ответный вызов по завершении операции чтения.</span><span class="sxs-lookup"><span data-stu-id="a7a0d-122">An optional asynchronous callback, to be called when the read operation is complete.</span></span></param>
        <param name="asyncState"><span data-ttu-id="a7a0d-123">Предоставляемый пользователем объект, являющийся отличительным признаком данного конкретного запроса на асинхронное чтение от других запросов.</span><span class="sxs-lookup"><span data-stu-id="a7a0d-123">A user-provided object that distinguishes this particular asynchronous read request from other requests.</span></span></param>
        <summary><span data-ttu-id="a7a0d-124">Начинает операцию асинхронного чтения.</span><span class="sxs-lookup"><span data-stu-id="a7a0d-124">Begins an asynchronous read operation.</span></span> <span data-ttu-id="a7a0d-125">(Вместо него рекомендуется использовать метод <see cref="M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)" />.)</span><span class="sxs-lookup"><span data-stu-id="a7a0d-125">(Consider using the <see cref="M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)" /> method instead.)</span></span></summary>
        <returns><span data-ttu-id="a7a0d-126">Объект, представляющий асинхронную операцию чтения, которая может все еще быть отложена.</span><span class="sxs-lookup"><span data-stu-id="a7a0d-126">An object that represents the asynchronous read operation, which could still be pending.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="a7a0d-127">Метод пытался в асинхронном режиме выполнить чтение за пределами потока, или произошла ошибка диска.</span><span class="sxs-lookup"><span data-stu-id="a7a0d-127">The method tried to read asynchronously past the end of the stream, or a disk error occurred.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a7a0d-128">Один или несколько аргументов являются недопустимыми.</span><span class="sxs-lookup"><span data-stu-id="a7a0d-128">One or more of the arguments is invalid.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="a7a0d-129">Методы были вызваны после закрытия потока.</span><span class="sxs-lookup"><span data-stu-id="a7a0d-129">Methods were called after the stream was closed.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="a7a0d-130">Текущая реализация класса <see cref="T:System.IO.Compression.BrotliStream" /> не поддерживает операцию чтения.</span><span class="sxs-lookup"><span data-stu-id="a7a0d-130">The current <see cref="T:System.IO.Compression.BrotliStream" /> implementation does not support the read operation.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a7a0d-131">Этот вызов не может быть завершен.</span><span class="sxs-lookup"><span data-stu-id="a7a0d-131">This call cannot be completed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BeginWrite">
      <MemberSignature Language="C#" Value="public override IAsyncResult BeginWrite (byte[] buffer, int offset, int count, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IAsyncResult BeginWrite(unsigned int8[] buffer, int32 offset, int32 count, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.BrotliStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override IAsyncResult ^ BeginWrite(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="override this.BeginWrite : byte[] * int * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="brotliStream.BeginWrite (buffer, offset, count, asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.Brotli</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="a7a0d-132">Буфер, из которого будут записываться данные.</span><span class="sxs-lookup"><span data-stu-id="a7a0d-132">The buffer from which data will be written.</span></span></param>
        <param name="offset"><span data-ttu-id="a7a0d-133">Смещение байтов в <paramref name="array" />, с которого начинается запись данных из потока.</span><span class="sxs-lookup"><span data-stu-id="a7a0d-133">The byte offset in <paramref name="array" /> at which to begin writing data from the stream.</span></span></param>
        <param name="count"><span data-ttu-id="a7a0d-134">Максимальное число байтов для записи.</span><span class="sxs-lookup"><span data-stu-id="a7a0d-134">The maximum number of bytes to write.</span></span></param>
        <param name="asyncCallback"><span data-ttu-id="a7a0d-135">Дополнительный асинхронный обратный вызов по завершении операции записи.</span><span class="sxs-lookup"><span data-stu-id="a7a0d-135">An optional asynchronous callback, to be called when the write operation is complete.</span></span></param>
        <param name="asyncState"><span data-ttu-id="a7a0d-136">Предоставляемый пользователем объект, являющийся отличительным признаком данного конкретного запроса на асинхронную запись от других запросов.</span><span class="sxs-lookup"><span data-stu-id="a7a0d-136">A user-provided object that distinguishes this particular asynchronous write request from other requests.</span></span></param>
        <summary><span data-ttu-id="a7a0d-137">Начинает операцию асинхронной записи.</span><span class="sxs-lookup"><span data-stu-id="a7a0d-137">Begins an asynchronous write operation.</span></span> <span data-ttu-id="a7a0d-138">(Вместо него рекомендуется использовать метод <see cref="M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)" />.)</span><span class="sxs-lookup"><span data-stu-id="a7a0d-138">(Consider using the <see cref="M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)" /> method instead.)</span></span></summary>
        <returns><span data-ttu-id="a7a0d-139">Объект, представляющий асинхронную операцию записи, которая может все еще быть отложена.</span><span class="sxs-lookup"><span data-stu-id="a7a0d-139">An object that represents the asynchronous write operation, which could still be pending.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="a7a0d-140">Метод пытался в асинхронном режиме выполнить запись за пределами потока, или произошла ошибка диска.</span><span class="sxs-lookup"><span data-stu-id="a7a0d-140">The method tried to write asynchronously past the end of the stream, or a disk error occurred.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a7a0d-141">Один или несколько аргументов являются недопустимыми.</span><span class="sxs-lookup"><span data-stu-id="a7a0d-141">One or more of the arguments is invalid.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="a7a0d-142">Методы были вызваны после закрытия потока.</span><span class="sxs-lookup"><span data-stu-id="a7a0d-142">Methods were called after the stream was closed.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="a7a0d-143">Текущая реализация класса <see cref="T:System.IO.Compression.BrotliStream" /> не поддерживает операцию записи.</span><span class="sxs-lookup"><span data-stu-id="a7a0d-143">The current <see cref="T:System.IO.Compression.BrotliStream" /> implementation does not support the write operation.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a7a0d-144">Операция записи не может быть выполнена, поскольку поток закрыт.</span><span class="sxs-lookup"><span data-stu-id="a7a0d-144">The write operation cannot be performed because the stream is closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CanRead">
      <MemberSignature Language="C#" Value="public override bool CanRead { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRead" />
      <MemberSignature Language="DocId" Value="P:System.IO.Compression.BrotliStream.CanRead" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanRead As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanRead { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanRead : bool" Usage="System.IO.Compression.BrotliStream.CanRead" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.Brotli</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a7a0d-145">Возвращает значение, указывающее, поддерживает ли поток чтение во время распаковки файла.</span><span class="sxs-lookup"><span data-stu-id="a7a0d-145">Gets a value indicating whether the stream supports reading while decompressing a file.</span></span></summary>
        <value><span data-ttu-id="a7a0d-146">Значение <see langword="true" />, если значение <see cref="T:System.IO.Compression.CompressionMode" /> равно <see langword="Decompress," />, и основной поток поддерживает чтение и не закрыт; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a7a0d-146"><see langword="true" /> if the <see cref="T:System.IO.Compression.CompressionMode" /> value is <see langword="Decompress," /> and the underlying stream supports reading and is not closed; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanSeek">
      <MemberSignature Language="C#" Value="public override bool CanSeek { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanSeek" />
      <MemberSignature Language="DocId" Value="P:System.IO.Compression.BrotliStream.CanSeek" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanSeek As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanSeek { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanSeek : bool" Usage="System.IO.Compression.BrotliStream.CanSeek" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.Brotli</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a7a0d-147">Возвращает значение, указывающее, поддерживает ли поток поиск.</span><span class="sxs-lookup"><span data-stu-id="a7a0d-147">Gets a value indicating whether the stream supports seeking.</span></span></summary>
        <value><span data-ttu-id="a7a0d-148">Значение <see langword="false" /> во всех случаях.</span><span class="sxs-lookup"><span data-stu-id="a7a0d-148"><see langword="false" /> in all cases.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanWrite">
      <MemberSignature Language="C#" Value="public override bool CanWrite { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanWrite" />
      <MemberSignature Language="DocId" Value="P:System.IO.Compression.BrotliStream.CanWrite" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanWrite As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanWrite { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanWrite : bool" Usage="System.IO.Compression.BrotliStream.CanWrite" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.Brotli</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a7a0d-149">Возвращает значение, определяющее, поддерживает ли поток операции записи.</span><span class="sxs-lookup"><span data-stu-id="a7a0d-149">Gets a value indicating whether the stream supports writing.</span></span></summary>
        <value><span data-ttu-id="a7a0d-150">Значение <see langword="true" />, если значение <see cref="T:System.IO.Compression.CompressionMode" /> равно <see langword="Compress" />, и основной поток поддерживает запись и не закрыт; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a7a0d-150"><see langword="true" /> if the <see cref="T:System.IO.Compression.CompressionMode" /> value is <see langword="Compress" />, and the underlying stream supports writing and is not closed; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.BrotliStream.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="brotliStream.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.Brotli</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="a7a0d-151">Значение <see langword="true" /> позволяет освободить управляемые и неуправляемые ресурсы; значение <see langword="false" /> позволяет освободить только неуправляемые ресурсы.</span><span class="sxs-lookup"><span data-stu-id="a7a0d-151"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="a7a0d-152">Освобождает неуправляемые ресурсы, используемые объектом <see cref="T:System.IO.Compression.BrotliStream" />, а при необходимости освобождает также управляемые ресурсы.</span><span class="sxs-lookup"><span data-stu-id="a7a0d-152">Releases the unmanaged resources used by the <see cref="T:System.IO.Compression.BrotliStream" /> and optionally releases the managed resources.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisposeAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.ValueTask DisposeAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Threading.Tasks.ValueTask DisposeAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.BrotliStream.DisposeAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function DisposeAsync () As ValueTask" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::ValueTask DisposeAsync();" />
      <MemberSignature Language="F#" Value="override this.DisposeAsync : unit -&gt; System.Threading.Tasks.ValueTask" Usage="brotliStream.DisposeAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.Brotli</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a7a0d-153">Асинхронно освобождает неуправляемые ресурсы, используемые классом <see cref="T:System.IO.Compression.BrotliStream" />.</span><span class="sxs-lookup"><span data-stu-id="a7a0d-153">Asynchronously releases the unmanaged resources used by the <see cref="T:System.IO.Compression.BrotliStream" />.</span></span></summary>
        <returns><span data-ttu-id="a7a0d-154">Задача, представляющая асинхронную операцию закрытия.</span><span class="sxs-lookup"><span data-stu-id="a7a0d-154">A task that represents the asynchronous dispose operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="a7a0d-155">Метод `DisposeAsync` позволяет выполнять ресурсоемкие операции удаления без блокировки основного потока.</span><span class="sxs-lookup"><span data-stu-id="a7a0d-155">The `DisposeAsync` method lets you perform a resource-intensive dispose operation without blocking the main thread.</span></span> <span data-ttu-id="a7a0d-156">Это соображение, связанное с производительностью, особенно важно в приложениях [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] и [!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)] , где длительная потоковая операция может блокировать поток пользовательского интерфейса и создавать впечатление, что приложение не работает.</span><span class="sxs-lookup"><span data-stu-id="a7a0d-156">This performance consideration is particularly important in a [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] app or [!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)] app where a time-consuming stream operation can block the UI thread and make your app appear as if it is not working.</span></span> <span data-ttu-id="a7a0d-157">Асинхронные методы используются в сочетании с ключевыми словами `async` и `await` в Visual Basic и C#.</span><span class="sxs-lookup"><span data-stu-id="a7a0d-157">The async methods are used in conjunction with the `async` and `await` keywords in Visual Basic and C#.</span></span> 

<span data-ttu-id="a7a0d-158">Этот метод уничтожает поток Brotli, записывая изменения в резервном хранилище и закрывая поток для освобождения ресурсов.</span><span class="sxs-lookup"><span data-stu-id="a7a0d-158">This method disposes the Brotli stream by writing any changes to the backing store and closing the stream to release resources.</span></span>   

<span data-ttu-id="a7a0d-159">Вызов `DisposeAsync` позволяет перераспределить ресурсы, используемые <xref:System.IO.Compression.BrotliStream>, для других целей.</span><span class="sxs-lookup"><span data-stu-id="a7a0d-159">Calling `DisposeAsync` allows the resources used by the <xref:System.IO.Compression.BrotliStream> to be reallocated for other purposes.</span></span> <span data-ttu-id="a7a0d-160">Дополнительные сведения см. в разделе [Очистка неуправляемых ресурсов](~/docs/standard/garbage-collection/unmanaged.md).</span><span class="sxs-lookup"><span data-stu-id="a7a0d-160">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</span></span>  

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndRead">
      <MemberSignature Language="C#" Value="public override int EndRead (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 EndRead(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.BrotliStream.EndRead(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function EndRead (asyncResult As IAsyncResult) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int EndRead(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="override this.EndRead : IAsyncResult -&gt; int" Usage="brotliStream.EndRead asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.Brotli</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="a7a0d-161">Ссылка на отложенный асинхронный запрос, который необходимо завершить.</span><span class="sxs-lookup"><span data-stu-id="a7a0d-161">The reference to the pending asynchronous request to finish.</span></span></param>
        <summary><span data-ttu-id="a7a0d-162">Ожидает завершения отложенного асинхронного чтения.</span><span class="sxs-lookup"><span data-stu-id="a7a0d-162">Waits for the pending asynchronous read to complete.</span></span> <span data-ttu-id="a7a0d-163">(Вместо него рекомендуется использовать метод <see cref="M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)" />.)</span><span class="sxs-lookup"><span data-stu-id="a7a0d-163">(Consider using the <see cref="M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)" /> method instead.)</span></span></summary>
        <returns><span data-ttu-id="a7a0d-164">Количество байтов, считанных из потока, от нуля (0) до количества запрошенных байтов.</span><span class="sxs-lookup"><span data-stu-id="a7a0d-164">The number of bytes read from the stream, between 0 (zero) and the number of bytes you requested.</span></span> <span data-ttu-id="a7a0d-165">Объект <see cref="T:System.IO.Compression.BrotliStream" /> возвращает 0 только в конце потока; в противном случае он блокируется, пока доступен хотя бы один байт.</span><span class="sxs-lookup"><span data-stu-id="a7a0d-165"><see cref="T:System.IO.Compression.BrotliStream" /> returns 0 only at the end of the stream; otherwise, it blocks until at least one byte is available.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a7a0d-166">Свойство <paramref name="asyncResult" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a7a0d-166"><paramref name="asyncResult" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a7a0d-167"><paramref name="asyncResult" /> не происходит из метода <see cref="M:System.IO.Compression.BrotliStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> в текущем потоке.</span><span class="sxs-lookup"><span data-stu-id="a7a0d-167"><paramref name="asyncResult" /> did not originate from a <see cref="M:System.IO.Compression.BrotliStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> method on the current stream.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a7a0d-168">Операция окончания не может быть выполнена, поскольку поток закрыт.</span><span class="sxs-lookup"><span data-stu-id="a7a0d-168">The end operation cannot be performed because the stream is closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EndWrite">
      <MemberSignature Language="C#" Value="public override void EndWrite (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void EndWrite(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.BrotliStream.EndWrite(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub EndWrite (asyncResult As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void EndWrite(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="override this.EndWrite : IAsyncResult -&gt; unit" Usage="brotliStream.EndWrite asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.Brotli</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="a7a0d-169">Объект, который представляет асинхронный вызов.</span><span class="sxs-lookup"><span data-stu-id="a7a0d-169">The object that represents the asynchronous call.</span></span></param>
        <summary><span data-ttu-id="a7a0d-170">Обрабатывает завершение операции асинхронной записи.</span><span class="sxs-lookup"><span data-stu-id="a7a0d-170">Handles the end of an asynchronous write operation.</span></span> <span data-ttu-id="a7a0d-171">(Вместо него рекомендуется использовать метод <see cref="M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)" />.)</span><span class="sxs-lookup"><span data-stu-id="a7a0d-171">(Consider using the <see cref="M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)" /> method instead.)</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a7a0d-172">Основной поток закрыт или имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a7a0d-172">The underlying stream is closed or <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public override void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.BrotliStream.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Flush();" />
      <MemberSignature Language="F#" Value="override this.Flush : unit -&gt; unit" Usage="brotliStream.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.Brotli</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a7a0d-173">Текущая реализация этого метода не функциональна.</span><span class="sxs-lookup"><span data-stu-id="a7a0d-173">The current implementation of this method has no functionality.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FlushAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task FlushAsync (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task FlushAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.BrotliStream.FlushAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ FlushAsync(System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.FlushAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="brotliStream.FlushAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.Brotli</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="0" FrameworkAlternate="netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"><span data-ttu-id="a7a0d-174">Токен для отслеживания запросов отмены.</span><span class="sxs-lookup"><span data-stu-id="a7a0d-174">The token to monitor for cancellation requests.</span></span> <span data-ttu-id="a7a0d-175">Значение по умолчанию — <see cref="P:System.Threading.CancellationToken.None" />.</span><span class="sxs-lookup"><span data-stu-id="a7a0d-175">The default value is <see cref="P:System.Threading.CancellationToken.None" />.</span></span></param>
        <summary><span data-ttu-id="a7a0d-176">Асинхронно очищает все буферы данного потока Brotli, вызывает запись буферизованных данных в базовое устройство и отслеживает запросы отмены.</span><span class="sxs-lookup"><span data-stu-id="a7a0d-176">Asynchronously clears all buffers for this Brotli stream, causes any buffered data to be written to the underlying device, and monitors cancellation requests.</span></span></summary>
        <returns><span data-ttu-id="a7a0d-177">Задача, представляющая асинхронную операцию очистки.</span><span class="sxs-lookup"><span data-stu-id="a7a0d-177">A task that represents the asynchronous flush operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="a7a0d-178">Если операция отменяется до ее завершения, возвращаемая задача содержит значение <xref:System.Threading.Tasks.TaskStatus.Canceled?displayProperty=nameWithType> для свойства <xref:System.Threading.Tasks.Task.Status?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="a7a0d-178">If the operation is canceled before it completes, the returned task contains the <xref:System.Threading.Tasks.TaskStatus.Canceled?displayProperty=nameWithType> value for the <xref:System.Threading.Tasks.Task.Status?displayProperty=nameWithType> property.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public override long Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Length" />
      <MemberSignature Language="DocId" Value="P:System.IO.Compression.BrotliStream.Length" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Length As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long Length { long get(); };" />
      <MemberSignature Language="F#" Value="member this.Length : int64" Usage="System.IO.Compression.BrotliStream.Length" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.Brotli</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a7a0d-179">Это свойство не поддерживается и всегда вызывает исключение <see cref="T:System.NotSupportedException" />.</span><span class="sxs-lookup"><span data-stu-id="a7a0d-179">This property is not supported and always throws a <see cref="T:System.NotSupportedException" />.</span></span></summary>
        <value><span data-ttu-id="a7a0d-180">Значение типа long.</span><span class="sxs-lookup"><span data-stu-id="a7a0d-180">A long value.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="a7a0d-181">Для данного потока это свойство не поддерживается.</span><span class="sxs-lookup"><span data-stu-id="a7a0d-181">This property is not supported on this stream.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Position">
      <MemberSignature Language="C#" Value="public override long Position { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Position" />
      <MemberSignature Language="DocId" Value="P:System.IO.Compression.BrotliStream.Position" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Position As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long Position { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.Position : int64 with get, set" Usage="System.IO.Compression.BrotliStream.Position" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.Brotli</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a7a0d-182">Это свойство не поддерживается и всегда вызывает исключение <see cref="T:System.NotSupportedException" />.</span><span class="sxs-lookup"><span data-stu-id="a7a0d-182">This property is not supported and always throws a <see cref="T:System.NotSupportedException" />.</span></span></summary>
        <value><span data-ttu-id="a7a0d-183">Значение типа long.</span><span class="sxs-lookup"><span data-stu-id="a7a0d-183">A long value.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="a7a0d-184">Для данного потока это свойство не поддерживается.</span><span class="sxs-lookup"><span data-stu-id="a7a0d-184">This property is not supported on this stream.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override int Read (Span&lt;byte&gt; buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Read(valuetype System.Span`1&lt;unsigned int8&gt; buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.BrotliStream.Read(System.Span{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read (buffer As Span(Of Byte)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int Read(Span&lt;System::Byte&gt; buffer);" />
      <MemberSignature Language="F#" Value="override this.Read : Span&lt;byte&gt; -&gt; int" Usage="brotliStream.Read buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.Brotli</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Span&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="a7a0d-185">Область памяти.</span><span class="sxs-lookup"><span data-stu-id="a7a0d-185">A region of memory.</span></span> <span data-ttu-id="a7a0d-186">При возвращении данного метода содержимое этой области заменяется байтами, считанными из текущего источника.</span><span class="sxs-lookup"><span data-stu-id="a7a0d-186">When this method returns, the contents of this region are replaced by the bytes read from the current source.</span></span></param>
        <summary><span data-ttu-id="a7a0d-187">Считывает последовательность байтов из текущего потока Brotli в диапазон байтов и перемещает позицию внутри потока Brotli на число считанных байтов.</span><span class="sxs-lookup"><span data-stu-id="a7a0d-187">Reads a sequence of bytes from the current Brotli stream to a byte span and advances the position within the Brotli stream by the number of bytes read.</span></span></summary>
        <returns><span data-ttu-id="a7a0d-188">Общее количество байтов, считанных в буфер.</span><span class="sxs-lookup"><span data-stu-id="a7a0d-188">The total number of bytes read into the buffer.</span></span> <span data-ttu-id="a7a0d-189">Это число может быть меньше количества выделенных в буфере байтов, если столько байтов в настоящее время недоступно, а также равняться нулю (0), если был достигнут конец потока.</span><span class="sxs-lookup"><span data-stu-id="a7a0d-189">This can be less than the number of bytes allocated in the buffer if that many bytes are not currently available, or zero (0) if the end of the stream has been reached.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="a7a0d-190">Используйте свойство <xref:System.IO.Compression.BrotliStream.CanRead%2A>, чтобы определить, поддерживает ли текущий экземпляр чтение.</span><span class="sxs-lookup"><span data-stu-id="a7a0d-190">Use the <xref:System.IO.Compression.BrotliStream.CanRead%2A> property to determine whether the current instance supports reading.</span></span> <span data-ttu-id="a7a0d-191">Используйте метод <xref:System.IO.Compression.BrotliStream.ReadAsync%2A> для асинхронного чтения из текущего потока.</span><span class="sxs-lookup"><span data-stu-id="a7a0d-191">Use the <xref:System.IO.Compression.BrotliStream.ReadAsync%2A> method to read asynchronously from the current stream.</span></span>

<span data-ttu-id="a7a0d-192">Этот метод считывает максимум `buffer.Length` байт из текущего потока и сохраняет их в `buffer`.</span><span class="sxs-lookup"><span data-stu-id="a7a0d-192">This method read a maximum of `buffer.Length` bytes from the current stream and store them in `buffer`.</span></span> <span data-ttu-id="a7a0d-193">Текущая координата в потоке Brotli увеличивается на число считанных байтов; Однако при возникновении исключения текущее место в потоке Brotli остается неизменным.</span><span class="sxs-lookup"><span data-stu-id="a7a0d-193">The current position within the Brotli stream is advanced by the number of bytes read; however, if an exception occurs, the current position within the Brotli stream remains unchanged.</span></span> <span data-ttu-id="a7a0d-194">Этот метод блокируется до тех пор, пока не будет прочитан хотя бы один байт данных в случае, если данные недоступны.</span><span class="sxs-lookup"><span data-stu-id="a7a0d-194">This method will block until at least one byte of data can be read, in the event that no data is available.</span></span> <span data-ttu-id="a7a0d-195">`Read` возвращает 0, только если в потоке больше нет данных и что больше не ожидается (например, закрытый сокет или конец файла).</span><span class="sxs-lookup"><span data-stu-id="a7a0d-195">`Read` returns 0 only when there is no more data in the stream and no more is expected (such as a closed socket or end of file).</span></span> <span data-ttu-id="a7a0d-196">Метод может возвращать меньшее количество байтов, чем было запрошено, даже если конец потока не был достигнут.</span><span class="sxs-lookup"><span data-stu-id="a7a0d-196">The method is free to return fewer bytes than requested even if the end of the stream has not been reached.</span></span>

 <span data-ttu-id="a7a0d-197">Для чтения примитивных типов данных используйте <xref:System.IO.BinaryReader>.</span><span class="sxs-lookup"><span data-stu-id="a7a0d-197">Use <xref:System.IO.BinaryReader> for reading primitive data types.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override int Read (byte[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Read(unsigned int8[] buffer, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.BrotliStream.Read(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read (buffer As Byte(), offset As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int Read(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count);" />
      <MemberSignature Language="F#" Value="override this.Read : byte[] * int * int -&gt; int" Usage="brotliStream.Read (buffer, offset, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.Brotli</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="a7a0d-198">Массив, используемый для хранения распакованных байтов.</span><span class="sxs-lookup"><span data-stu-id="a7a0d-198">The array used to store decompressed bytes.</span></span></param>
        <param name="offset"><span data-ttu-id="a7a0d-199">Смещение в байтах в массиве <paramref name="buffer" />, в который будут помещены считанные байты.</span><span class="sxs-lookup"><span data-stu-id="a7a0d-199">The byte offset in <paramref name="buffer" /> at which the read bytes will be placed.</span></span></param>
        <param name="count"><span data-ttu-id="a7a0d-200">Максимальное число распакованных байтов для считывания.</span><span class="sxs-lookup"><span data-stu-id="a7a0d-200">The maximum number of decompressed bytes to read.</span></span></param>
        <summary><span data-ttu-id="a7a0d-201">Считывает число распакованных байтов в указанный массив байтов.</span><span class="sxs-lookup"><span data-stu-id="a7a0d-201">Reads a number of decompressed bytes into the specified byte array.</span></span></summary>
        <returns><span data-ttu-id="a7a0d-202">Число байтов, которые были распакованы в массив байтов.</span><span class="sxs-lookup"><span data-stu-id="a7a0d-202">The number of bytes that were decompressed into the byte array.</span></span> <span data-ttu-id="a7a0d-203">Если достигнут конец потока, возвращаемое значение представляет собой число считанных байтов или же равно нулю.</span><span class="sxs-lookup"><span data-stu-id="a7a0d-203">If the end of the stream has been reached, zero or the number of bytes read is returned.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a7a0d-204"><paramref name="buffer" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a7a0d-204"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a7a0d-205">Значение <see cref="T:System.IO.Compression.CompressionMode" /> было <see langword="Compress" /> при создании объекта или уже существует активная асинхронная операция для этого потока.</span><span class="sxs-lookup"><span data-stu-id="a7a0d-205">The <see cref="T:System.IO.Compression.CompressionMode" /> value was <see langword="Compress" /> when the object was created, or there is already an active asynchronous operation on this stream.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="a7a0d-206">Значение параметра <paramref name="offset" /> или <paramref name="count" /> меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="a7a0d-206"><paramref name="offset" /> or <paramref name="count" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a7a0d-207">Длина <paramref name="buffer" /> минус начальная точка индекса меньше чем <paramref name="count" />.</span><span class="sxs-lookup"><span data-stu-id="a7a0d-207">The <paramref name="buffer" /> length minus the index starting point is less than <paramref name="count" />.</span></span></exception>
        <exception cref="T:System.IO.InvalidDataException"><span data-ttu-id="a7a0d-208">Недопустимый формат данных.</span><span class="sxs-lookup"><span data-stu-id="a7a0d-208">The data is in an invalid format.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="a7a0d-209">Базовый поток закрыт или его значение равно нулю.</span><span class="sxs-lookup"><span data-stu-id="a7a0d-209">The underlying stream is null or closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.ValueTask&lt;int&gt; ReadAsync (Memory&lt;byte&gt; buffer, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Threading.Tasks.ValueTask`1&lt;int32&gt; ReadAsync(valuetype System.Memory`1&lt;unsigned int8&gt; buffer, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.BrotliStream.ReadAsync(System.Memory{System.Byte},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="override this.ReadAsync : Memory&lt;byte&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;int&gt;" Usage="brotliStream.ReadAsync (buffer, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.Brotli</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Memory&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-3.0;netstandard-2.1" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="a7a0d-210">Область памяти, в которую будут записываться данные.</span><span class="sxs-lookup"><span data-stu-id="a7a0d-210">The region of memory to write the data into.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="a7a0d-211">Токен для отслеживания запросов отмены.</span><span class="sxs-lookup"><span data-stu-id="a7a0d-211">The token to monitor for cancellation requests.</span></span> <span data-ttu-id="a7a0d-212">Значение по умолчанию — <see cref="P:System.Threading.CancellationToken.None" />.</span><span class="sxs-lookup"><span data-stu-id="a7a0d-212">The default value is <see cref="P:System.Threading.CancellationToken.None" />.</span></span></param>
        <summary><span data-ttu-id="a7a0d-213">Асинхронно считывает последовательность байтов из текущего потока Brotli, записывает их в диапазон памяти байтов, перемещает позицию в потоке Brotli на число считанных байтов и отслеживает запросы отмены.</span><span class="sxs-lookup"><span data-stu-id="a7a0d-213">Asynchronously reads a sequence of bytes from the current Brotli stream, writes them to a byte memory range, advances the position within the Brotli stream by the number of bytes read, and monitors cancellation requests.</span></span></summary>
        <returns><span data-ttu-id="a7a0d-214">Задача, которая представляет асинхронную операцию чтения, которая переносит общее число считанных байтов в буфер.</span><span class="sxs-lookup"><span data-stu-id="a7a0d-214">A task that represents the asynchronous read operation, which wraps the total number of bytes read into the buffer.</span></span> <span data-ttu-id="a7a0d-215">Итоговое значение может быть меньше количества выделенных в буфере байтов, если столько байтов в настоящее время недоступно, или оно может равняться нулю (0), если был достигнут конец потока Brotli.</span><span class="sxs-lookup"><span data-stu-id="a7a0d-215">The result value can be less than the number of bytes allocated in the buffer if that many bytes are not currently available, or it can be 0 (zero) if the end of the Brotli stream has been reached.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="a7a0d-216">Метод `ReadAsync` позволяет выполнять ресурсоемкие операции ввода-вывода, не блокируя основной поток.</span><span class="sxs-lookup"><span data-stu-id="a7a0d-216">The `ReadAsync` method enables you to perform resource-intensive I/O operations without blocking the main thread.</span></span> <span data-ttu-id="a7a0d-217">Это соображение, связанное с производительностью, особенно важно в приложениях [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] и [!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)] , где длительная потоковая операция может блокировать поток пользовательского интерфейса и создавать впечатление, что приложение не работает.</span><span class="sxs-lookup"><span data-stu-id="a7a0d-217">This performance consideration is particularly important in a [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] app or [!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)] app where a time-consuming stream operation can block the UI thread and make your app appear as if it is not working.</span></span> <span data-ttu-id="a7a0d-218">Асинхронные методы используются в сочетании с ключевыми словами `async` и `await` в Visual Basic и C#.</span><span class="sxs-lookup"><span data-stu-id="a7a0d-218">The async methods are used in conjunction with the `async` and `await` keywords in Visual Basic and C#.</span></span>

<span data-ttu-id="a7a0d-219">Используйте свойство <xref:System.IO.Compression.BrotliStream.CanRead%2A>, чтобы определить, поддерживает ли текущий экземпляр чтение.</span><span class="sxs-lookup"><span data-stu-id="a7a0d-219">Use the <xref:System.IO.Compression.BrotliStream.CanRead%2A> property to determine whether the current instance supports reading.</span></span>

<span data-ttu-id="a7a0d-220">Если операция отменяется до ее завершения, возвращаемая задача содержит значение <xref:System.Threading.Tasks.TaskStatus.Canceled?displayProperty=nameWithType> для свойства <xref:System.Threading.Tasks.Task.Status?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="a7a0d-220">If the operation is canceled before it completes, the returned task contains the <xref:System.Threading.Tasks.TaskStatus.Canceled?displayProperty=nameWithType> value for the <xref:System.Threading.Tasks.Task.Status?displayProperty=nameWithType> property.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;int&gt; ReadAsync (byte[] buffer, int offset, int count, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;int32&gt; ReadAsync(unsigned int8[] buffer, int32 offset, int32 count, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.BrotliStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task&lt;int&gt; ^ ReadAsync(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.ReadAsync : byte[] * int * int * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;int&gt;" Usage="brotliStream.ReadAsync (buffer, offset, count, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.Brotli</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="a7a0d-221">Буфер, в который записываются данные.</span><span class="sxs-lookup"><span data-stu-id="a7a0d-221">The buffer to write the data into.</span></span></param>
        <param name="offset"><span data-ttu-id="a7a0d-222">Смещение байтов в <paramref name="buffer" />, с которого начинается запись данных из потока Brotli.</span><span class="sxs-lookup"><span data-stu-id="a7a0d-222">The byte offset in <paramref name="buffer" /> at which to begin writing data from the Brotli stream.</span></span></param>
        <param name="count"><span data-ttu-id="a7a0d-223">Максимальное число байтов, предназначенных для чтения.</span><span class="sxs-lookup"><span data-stu-id="a7a0d-223">The maximum number of bytes to read.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="a7a0d-224">Токен для отслеживания запросов отмены.</span><span class="sxs-lookup"><span data-stu-id="a7a0d-224">The token to monitor for cancellation requests.</span></span> <span data-ttu-id="a7a0d-225">Значение по умолчанию — <see cref="P:System.Threading.CancellationToken.None" />.</span><span class="sxs-lookup"><span data-stu-id="a7a0d-225">The default value is <see cref="P:System.Threading.CancellationToken.None" />.</span></span></param>
        <summary><span data-ttu-id="a7a0d-226">Асинхронно считывает последовательность байтов из текущего потока Brotli, записывает их в массив байтов по указанному индексу, перемещает позицию в потоке Brotli на число считанных байтов и отслеживает запросы отмены.</span><span class="sxs-lookup"><span data-stu-id="a7a0d-226">Asynchronously reads a sequence of bytes from the current Brotli stream, writes them to a byte array starting at a specified index, advances the position within the Brotli stream by the number of bytes read, and monitors cancellation requests.</span></span></summary>
        <returns><span data-ttu-id="a7a0d-227">Задача, которая представляет асинхронную операцию чтения, которая переносит общее число считанных байтов в <paramref name="buffer" />.</span><span class="sxs-lookup"><span data-stu-id="a7a0d-227">A task that represents the asynchronous read operation, which wraps the total number of bytes read into the <paramref name="buffer" />.</span></span> <span data-ttu-id="a7a0d-228">Значение результата может быть меньше запрошенного числа байтов, если число доступных в данный момент байтов меньше запрошенного числа, или результат может быть равен 0 (нулю), если был достигнут конец потока Brotli.</span><span class="sxs-lookup"><span data-stu-id="a7a0d-228">The result value can be less than the number of bytes requested if the number of bytes currently available is less than the requested number, or it can be 0 (zero) if the end of the Brotli stream has been reached.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[
  
## Remarks

<span data-ttu-id="a7a0d-229">Метод `ReadAsync` позволяет выполнять ресурсоемкие операции ввода-вывода, не блокируя основной поток.</span><span class="sxs-lookup"><span data-stu-id="a7a0d-229">The `ReadAsync` method enables you to perform resource-intensive I/O operations without blocking the main thread.</span></span> <span data-ttu-id="a7a0d-230">Это соображение, связанное с производительностью, особенно важно в приложениях [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] и [!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)] , где длительная потоковая операция может блокировать поток пользовательского интерфейса и создавать впечатление, что приложение не работает.</span><span class="sxs-lookup"><span data-stu-id="a7a0d-230">This performance consideration is particularly important in a [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] app or [!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)] app where a time-consuming stream operation can block the UI thread and make your app appear as if it is not working.</span></span> <span data-ttu-id="a7a0d-231">Асинхронные методы используются в сочетании с ключевыми словами `async` и `await` в Visual Basic и C#.</span><span class="sxs-lookup"><span data-stu-id="a7a0d-231">The async methods are used in conjunction with the `async` and `await` keywords in Visual Basic and C#.</span></span>

<span data-ttu-id="a7a0d-232">Используйте свойство <xref:System.IO.Compression.BrotliStream.CanRead%2A>, чтобы определить, поддерживает ли текущий экземпляр чтение.</span><span class="sxs-lookup"><span data-stu-id="a7a0d-232">Use the <xref:System.IO.Compression.BrotliStream.CanRead%2A> property to determine whether the current instance supports reading.</span></span>

<span data-ttu-id="a7a0d-233">Если операция отменяется до ее завершения, возвращаемая задача содержит значение <xref:System.Threading.Tasks.TaskStatus.Canceled?displayProperty=nameWithType> для свойства <xref:System.Threading.Tasks.Task.Status?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="a7a0d-233">If the operation is canceled before it completes, the returned task contains the <xref:System.Threading.Tasks.TaskStatus.Canceled?displayProperty=nameWithType> value for the <xref:System.Threading.Tasks.Task.Status?displayProperty=nameWithType> property.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Seek">
      <MemberSignature Language="C#" Value="public override long Seek (long offset, System.IO.SeekOrigin origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 Seek(int64 offset, valuetype System.IO.SeekOrigin origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.BrotliStream.Seek(System.Int64,System.IO.SeekOrigin)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Seek (offset As Long, origin As SeekOrigin) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override long Seek(long offset, System::IO::SeekOrigin origin);" />
      <MemberSignature Language="F#" Value="override this.Seek : int64 * System.IO.SeekOrigin -&gt; int64" Usage="brotliStream.Seek (offset, origin)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.Brotli</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int64" />
        <Parameter Name="origin" Type="System.IO.SeekOrigin" />
      </Parameters>
      <Docs>
        <param name="offset"><span data-ttu-id="a7a0d-234">Расположение в потоке.</span><span class="sxs-lookup"><span data-stu-id="a7a0d-234">The location in the stream.</span></span></param>
        <param name="origin"><span data-ttu-id="a7a0d-235">Одно из значений перечисления <see cref="T:System.IO.SeekOrigin" />.</span><span class="sxs-lookup"><span data-stu-id="a7a0d-235">One of the <see cref="T:System.IO.SeekOrigin" /> values.</span></span></param>
        <summary><span data-ttu-id="a7a0d-236">Это свойство не поддерживается и всегда вызывает исключение <see cref="T:System.NotSupportedException" />.</span><span class="sxs-lookup"><span data-stu-id="a7a0d-236">This property is not supported and always throws a <see cref="T:System.NotSupportedException" />.</span></span></summary>
        <returns><span data-ttu-id="a7a0d-237">Значение типа long.</span><span class="sxs-lookup"><span data-stu-id="a7a0d-237">A long value.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="a7a0d-238">Для данного потока это свойство не поддерживается.</span><span class="sxs-lookup"><span data-stu-id="a7a0d-238">This property is not supported on this stream.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetLength">
      <MemberSignature Language="C#" Value="public override void SetLength (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SetLength(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.BrotliStream.SetLength(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub SetLength (value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void SetLength(long value);" />
      <MemberSignature Language="F#" Value="override this.SetLength : int64 -&gt; unit" Usage="brotliStream.SetLength value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.Brotli</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="a7a0d-239">Длина потока.</span><span class="sxs-lookup"><span data-stu-id="a7a0d-239">The length of the stream.</span></span></param>
        <summary><span data-ttu-id="a7a0d-240">Это свойство не поддерживается и всегда вызывает исключение <see cref="T:System.NotSupportedException" />.</span><span class="sxs-lookup"><span data-stu-id="a7a0d-240">This property is not supported and always throws a <see cref="T:System.NotSupportedException" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (ReadOnlySpan&lt;byte&gt; buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.BrotliStream.Write(System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (buffer As ReadOnlySpan(Of Byte))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(ReadOnlySpan&lt;System::Byte&gt; buffer);" />
      <MemberSignature Language="F#" Value="override this.Write : ReadOnlySpan&lt;byte&gt; -&gt; unit" Usage="brotliStream.Write buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.Brotli</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ReadOnlySpan&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="a7a0d-241">Область памяти.</span><span class="sxs-lookup"><span data-stu-id="a7a0d-241">A region of memory.</span></span> <span data-ttu-id="a7a0d-242">Этот метод копирует содержимое данной области в текущий поток Brotli.</span><span class="sxs-lookup"><span data-stu-id="a7a0d-242">This method copies the contents of this region to the current Brotli stream.</span></span></param>
        <summary><span data-ttu-id="a7a0d-243">Записывает последовательность байтов в текущий поток Brotli из диапазона байтов только для чтения и перемещает текущую позицию внутри потока Brotli на число записанных байтов.</span><span class="sxs-lookup"><span data-stu-id="a7a0d-243">Writes a sequence of bytes to the current Brotli stream from a read-only byte span and advances the current position within this Brotli stream by the number of bytes written.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="a7a0d-244">Используйте свойство <xref:System.IO.Compression.BrotliStream.CanWrite%2A>, чтобы определить, поддерживает ли текущий экземпляр запись.</span><span class="sxs-lookup"><span data-stu-id="a7a0d-244">Use the <xref:System.IO.Compression.BrotliStream.CanWrite%2A> property to determine whether the current instance supports writing.</span></span> <span data-ttu-id="a7a0d-245">Используйте метод <xref:System.IO.Compression.BrotliStream.WriteAsync%2A> для асинхронной записи в текущий поток.</span><span class="sxs-lookup"><span data-stu-id="a7a0d-245">Use the <xref:System.IO.Compression.BrotliStream.WriteAsync%2A> method to write asynchronously to the current stream.</span></span>

<span data-ttu-id="a7a0d-246">Если операция записи выполнена успешно, то позицию в потоке Brotli увеличивается на число записанных байтов.</span><span class="sxs-lookup"><span data-stu-id="a7a0d-246">If the write operation is successful, the position within the Brotli stream advances by the number of bytes written.</span></span> <span data-ttu-id="a7a0d-247">При возникновении исключения расположение в потоке Brotli остается неизменным.</span><span class="sxs-lookup"><span data-stu-id="a7a0d-247">If an exception occurs, the position within the Brotli stream remains unchanged.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (byte[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(unsigned int8[] buffer, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.BrotliStream.Write(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (buffer As Byte(), offset As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count);" />
      <MemberSignature Language="F#" Value="override this.Write : byte[] * int * int -&gt; unit" Usage="brotliStream.Write (buffer, offset, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.Brotli</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="a7a0d-248">Буфер, содержащий данные для сжатия.</span><span class="sxs-lookup"><span data-stu-id="a7a0d-248">The buffer containing the data to compress.</span></span></param>
        <param name="offset"><span data-ttu-id="a7a0d-249">Смещение байтов в <paramref name="array" />, из которого будут считываться байты.</span><span class="sxs-lookup"><span data-stu-id="a7a0d-249">The byte offset in <paramref name="array" /> from which the bytes will be read.</span></span></param>
        <param name="count"><span data-ttu-id="a7a0d-250">Максимальное число байтов для записи.</span><span class="sxs-lookup"><span data-stu-id="a7a0d-250">The maximum number of bytes to write.</span></span></param>
        <summary><span data-ttu-id="a7a0d-251">Записывает сжатые байты в основной поток из указанного массива байтов.</span><span class="sxs-lookup"><span data-stu-id="a7a0d-251">Writes compressed bytes to the underlying stream from the specified byte array.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="a7a0d-252">Операция записи не может быть выполнена, поскольку поток закрыт.</span><span class="sxs-lookup"><span data-stu-id="a7a0d-252">The write operation cannot be performed because the stream is closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.ValueTask WriteAsync (ReadOnlyMemory&lt;byte&gt; buffer, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Threading.Tasks.ValueTask WriteAsync(valuetype System.ReadOnlyMemory`1&lt;unsigned int8&gt; buffer, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.BrotliStream.WriteAsync(System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="override this.WriteAsync : ReadOnlyMemory&lt;byte&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask" Usage="brotliStream.WriteAsync (buffer, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.Brotli</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ReadOnlyMemory&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-3.0;netstandard-2.1" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="a7a0d-253">Область памяти, из которой записываются данные.</span><span class="sxs-lookup"><span data-stu-id="a7a0d-253">The memory region to write data from.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="a7a0d-254">Токен для отслеживания запросов отмены.</span><span class="sxs-lookup"><span data-stu-id="a7a0d-254">The token to monitor for cancellation requests.</span></span> <span data-ttu-id="a7a0d-255">Значение по умолчанию — <see cref="P:System.Threading.CancellationToken.None" />.</span><span class="sxs-lookup"><span data-stu-id="a7a0d-255">The default value is <see cref="P:System.Threading.CancellationToken.None" />.</span></span></param>
        <summary><span data-ttu-id="a7a0d-256">Асинхронно записывает сжатые байты в базовый поток Brotli из указанного диапазона памяти байтов.</span><span class="sxs-lookup"><span data-stu-id="a7a0d-256">Asynchronously writes compressed bytes to the underlying Brotli stream from the specified byte memory range.</span></span></summary>
        <returns><span data-ttu-id="a7a0d-257">Задача, представляющая асинхронную операцию записи.</span><span class="sxs-lookup"><span data-stu-id="a7a0d-257">A task that represents the asynchronous write operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="a7a0d-258">Метод `WriteAsync` позволяет выполнять ресурсоемкие операции ввода-вывода, не блокируя основной поток.</span><span class="sxs-lookup"><span data-stu-id="a7a0d-258">The `WriteAsync` method enables you to perform resource-intensive I/O operations without blocking the main thread.</span></span> <span data-ttu-id="a7a0d-259">Это соображение, связанное с производительностью, особенно важно в приложениях [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] и [!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)] , где длительная потоковая операция может блокировать поток пользовательского интерфейса и создавать впечатление, что приложение не работает.</span><span class="sxs-lookup"><span data-stu-id="a7a0d-259">This performance consideration is particularly important in a [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] app or [!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)] app where a time-consuming stream operation can block the UI thread and make your app appear as if it is not working.</span></span> <span data-ttu-id="a7a0d-260">Асинхронные методы используются в сочетании с ключевыми словами `async` и `await` в Visual Basic и C#.</span><span class="sxs-lookup"><span data-stu-id="a7a0d-260">The async methods are used in conjunction with the `async` and `await` keywords in Visual Basic and C#.</span></span>

<span data-ttu-id="a7a0d-261">Используйте свойство <xref:System.IO.Compression.BrotliStream.CanWrite%2A>, чтобы определить, поддерживает ли текущий экземпляр запись.</span><span class="sxs-lookup"><span data-stu-id="a7a0d-261">Use the <xref:System.IO.Compression.BrotliStream.CanWrite%2A> property to determine whether the current instance supports writing.</span></span>

<span data-ttu-id="a7a0d-262">Если операция отменяется до ее завершения, возвращаемая задача содержит значение <xref:System.Threading.Tasks.TaskStatus.Canceled?displayProperty=nameWithType> для свойства <xref:System.Threading.Tasks.Task.Status?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="a7a0d-262">If the operation is canceled before it completes, the returned task contains the <xref:System.Threading.Tasks.TaskStatus.Canceled?displayProperty=nameWithType> value for the <xref:System.Threading.Tasks.Task.Status?displayProperty=nameWithType> property.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task WriteAsync (byte[] buffer, int offset, int count, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task WriteAsync(unsigned int8[] buffer, int32 offset, int32 count, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.BrotliStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ WriteAsync(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.WriteAsync : byte[] * int * int * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="brotliStream.WriteAsync (buffer, offset, count, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.Brotli</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="a7a0d-263">Буфер, содержащий данные для сжатия.</span><span class="sxs-lookup"><span data-stu-id="a7a0d-263">The buffer that contains the data to compress.</span></span></param>
        <param name="offset"><span data-ttu-id="a7a0d-264">Смещение байтов (начиная с нуля) в объекте <paramref name="buffer" />, с которого начинается копирование байтов в поток Brotli.</span><span class="sxs-lookup"><span data-stu-id="a7a0d-264">The zero-based byte offset in <paramref name="buffer" /> from which to begin copying bytes to the Brotli stream.</span></span></param>
        <param name="count"><span data-ttu-id="a7a0d-265">Максимальное число байтов для записи.</span><span class="sxs-lookup"><span data-stu-id="a7a0d-265">The maximum number of bytes to write.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="a7a0d-266">Токен для отслеживания запросов отмены.</span><span class="sxs-lookup"><span data-stu-id="a7a0d-266">The token to monitor for cancellation requests.</span></span> <span data-ttu-id="a7a0d-267">Значение по умолчанию — <see cref="P:System.Threading.CancellationToken.None" />.</span><span class="sxs-lookup"><span data-stu-id="a7a0d-267">The default value is <see cref="P:System.Threading.CancellationToken.None" />.</span></span></param>
        <summary><span data-ttu-id="a7a0d-268">Асинхронно записывает сжатые байты в основной поток Brotli из указанного массива байтов.</span><span class="sxs-lookup"><span data-stu-id="a7a0d-268">Asynchronously writes compressed bytes to the underlying Brotli stream from the specified byte array.</span></span></summary>
        <returns><span data-ttu-id="a7a0d-269">Задача, представляющая асинхронную операцию записи.</span><span class="sxs-lookup"><span data-stu-id="a7a0d-269">A task that represents the asynchronous write operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="a7a0d-270">Метод `WriteAsync` позволяет выполнять ресурсоемкие операции ввода-вывода, не блокируя основной поток.</span><span class="sxs-lookup"><span data-stu-id="a7a0d-270">The `WriteAsync` method enables you to perform resource-intensive I/O operations without blocking the main thread.</span></span> <span data-ttu-id="a7a0d-271">Это соображение, связанное с производительностью, особенно важно в приложениях [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] и [!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)] , где длительная потоковая операция может блокировать поток пользовательского интерфейса и создавать впечатление, что приложение не работает.</span><span class="sxs-lookup"><span data-stu-id="a7a0d-271">This performance consideration is particularly important in a [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] app or [!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)] app where a time-consuming stream operation can block the UI thread and make your app appear as if it is not working.</span></span> <span data-ttu-id="a7a0d-272">Асинхронные методы используются в сочетании с ключевыми словами `async` и `await` в Visual Basic и C#.</span><span class="sxs-lookup"><span data-stu-id="a7a0d-272">The async methods are used in conjunction with the `async` and `await` keywords in Visual Basic and C#.</span></span>

<span data-ttu-id="a7a0d-273">Используйте свойство <xref:System.IO.Compression.BrotliStream.CanWrite%2A>, чтобы определить, поддерживает ли текущий экземпляр запись.</span><span class="sxs-lookup"><span data-stu-id="a7a0d-273">Use the <xref:System.IO.Compression.BrotliStream.CanWrite%2A> property to determine whether the current instance supports writing.</span></span>

<span data-ttu-id="a7a0d-274">Если операция отменяется до ее завершения, возвращаемая задача содержит значение <xref:System.Threading.Tasks.TaskStatus.Canceled?displayProperty=nameWithType> для свойства <xref:System.Threading.Tasks.Task.Status?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="a7a0d-274">If the operation is canceled before it completes, the returned task contains the <xref:System.Threading.Tasks.TaskStatus.Canceled?displayProperty=nameWithType> value for the <xref:System.Threading.Tasks.Task.Status?displayProperty=nameWithType> property.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
