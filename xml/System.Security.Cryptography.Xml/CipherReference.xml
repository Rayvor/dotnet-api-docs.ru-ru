<Type Name="CipherReference" FullName="System.Security.Cryptography.Xml.CipherReference">
  <Metadata><Meta Name="ms.openlocfilehash" Value="909df8d381f9a4f9e2dfe25f5e865417a5007be0" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69262711" /></Metadata><TypeSignature Language="C#" Value="public sealed class CipherReference : System.Security.Cryptography.Xml.EncryptedReference" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit CipherReference extends System.Security.Cryptography.Xml.EncryptedReference" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.Xml.CipherReference" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class CipherReference&#xA;Inherits EncryptedReference" />
  <TypeSignature Language="C++ CLI" Value="public ref class CipherReference sealed : System::Security::Cryptography::Xml::EncryptedReference" />
  <TypeSignature Language="F#" Value="type CipherReference = class&#xA;    inherit EncryptedReference" />
  <AssemblyInfo>
    <AssemblyName>System.Security</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Cryptography.Xml.EncryptedReference</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Представляет элемент <see langword="&lt;CipherReference&gt;" /> в XML-шифровании. Этот класс не наследуется.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот класс представляет `<CipherReference>` элемент в XML-шифровании. Он определяет источник, который при обработке передает зашифрованные данные.  
  
 Фактические зашифрованные данные, на `<CipherReference>` которые ссылается объект, получаются следующим процессом. `<CipherReference> URI` Свойство содержит универсальный код ресурса (URI), который разыменован. `<CipherReference>` Если элемент также содержит цепочку преобразований, то данные, полученные при разыменовании URI, преобразуются, как указано для получения зашифрованных данных. Например, если зашифрованные данные кодируются в кодировке Base64 в XML-документе, то в преобразованиях будет указано выражение XPath, за которым следует декодирование Base64, поэтому зашифрованные данные можно извлечь.  
  
 Синтаксис URI и преобразований подобен формату цифровых подписей XML.  Однако в цифровых подписях XML процесс создания и проверки начинается с одних и тех же исходных данных и выполняет это преобразование в том же порядке. При шифровании XML приложение расшифровки имеет только зашифрованные данные и указанные преобразования. Преобразования перечисляются в порядке, необходимом для получения зашифрованных данных.  
  
 **Примечание** . По умолчанию невозможно разыменование ссылок шифра из документов с неизвестными источниками, такими как файлы с веб-сайта <xref:System.Security.Cryptography.Xml.EncryptedXml.DocumentEvidence%2A> , поскольку свойство имеет **значение NULL**. Например, при попытке расшифрования файла, содержащего `<CipherReference>` элемент, который ссылается на файл в Интернете <xref:System.Security.SecurityException> , создается исключение, даже если запрос выполняется полностью доверенной сборкой.  
  
 Если вы уверены, что документы, которые вы расшифровываете, могут быть доверенными, вы можете изменить это поведение для полностью доверенных приложений, используя следующий код:  
  
```  
Evidence ev = new Evidence();  
ev.AddHost (new Zone(SecurityZone.MyComputer));  
EncryptedXml exml = new EncryptedXml(doc, ev);  
```  
  
   
  
## Examples  
 В следующем примере кода создается новый экземпляр <xref:System.Security.Cryptography.Xml.CipherReference>.  
  
 [!code-cpp[cryptography.Xml.CipherReference#1](~/samples/snippets/cpp/VS_Snippets_CLR/cryptography.Xml.CipherReference/CPP/example.cpp#1)]
 [!code-csharp[cryptography.Xml.CipherReference#1](~/samples/snippets/csharp/VS_Snippets_CLR/cryptography.Xml.CipherReference/CS/example.cs#1)]
 [!code-vb[cryptography.Xml.CipherReference#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/cryptography.Xml.CipherReference/VB/example.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Security.Cryptography.Xml.CipherReference" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот конструктор создает <xref:System.Security.Cryptography.Xml.CipherReference> объект, предоставляющий справочную информацию <xref:System.Security.Cryptography.Xml.CipherData> для объекта. В справочной информации содержатся сведения о расположении зашифрованных данных.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CipherReference ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.CipherReference.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CipherReference();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Security.Cryptography.Xml.CipherReference" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот конструктор создает <xref:System.Security.Cryptography.Xml.CipherReference> объект, предоставляющий справочную информацию <xref:System.Security.Cryptography.Xml.CipherData> для объекта.  
  
   
  
## Examples  
 В следующем примере кода создается новый экземпляр <xref:System.Security.Cryptography.Xml.CipherReference>.  
  
 [!code-cpp[cryptography.Xml.CipherReference#1](~/samples/snippets/cpp/VS_Snippets_CLR/cryptography.Xml.CipherReference/CPP/example.cpp#1)]
 [!code-csharp[cryptography.Xml.CipherReference#1](~/samples/snippets/csharp/VS_Snippets_CLR/cryptography.Xml.CipherReference/CS/example.cs#1)]
 [!code-vb[cryptography.Xml.CipherReference#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/cryptography.Xml.CipherReference/VB/example.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CipherReference (string uri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.CipherReference.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (uri As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CipherReference(System::String ^ uri);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.Xml.CipherReference : string -&gt; System.Security.Cryptography.Xml.CipherReference" Usage="new System.Security.Cryptography.Xml.CipherReference uri" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="uri" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uri">Код URI, указывающий на зашифрованные данные.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Security.Cryptography.Xml.CipherReference" /> с помощью указанного универсального кода ресурса (URI).</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот конструктор создает <xref:System.Security.Cryptography.Xml.CipherReference> объект, используя универсальный код ресурса (URI), указывающий на зашифрованные данные. Затем объект используется для предоставления справочных сведений <xref:System.Security.Cryptography.Xml.CipherData> об объекте.  
  
 Универсальный код ресурса (URI) можно использовать для обозначения XML-файла, содержащего зашифрованные данные. Например:  
  
 `String uri = "http://www.woodgrovebank.com/document.xml";`  
  
 Кроме того, можно использовать частичный URI, чтобы указать, что будет зашифрована только часть XML-документа. Например, предположим, что XML-документ с именем document. XML содержит `MyForm` два элемента, как показано в следующем примере кода XML:  
  
 `<MyForm Id='Form1'>`  
  
 `<! -- Form data here -->`  
  
 `</MyForm>`  
  
 `<MyForm Id='Form2'>`  
  
 `<! -- Form data here -->`  
  
 `</MyForm>`  
  
 Вы можете зашифровать только содержимое `Form2` с помощью URI, как показано ниже:  
  
 `String uri = "http://www.woodgrovebank.com/document.xml#Form2";`  
  
   
  
## Examples  
 В следующем примере кода создается новый экземпляр <xref:System.Security.Cryptography.Xml.CipherReference>.  
  
 [!code-cpp[cryptography.Xml.CipherReference#1](~/samples/snippets/cpp/VS_Snippets_CLR/cryptography.Xml.CipherReference/CPP/example.cpp#1)]
 [!code-csharp[cryptography.Xml.CipherReference#1](~/samples/snippets/csharp/VS_Snippets_CLR/cryptography.Xml.CipherReference/CS/example.cs#1)]
 [!code-vb[cryptography.Xml.CipherReference#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/cryptography.Xml.CipherReference/VB/example.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CipherReference (string uri, System.Security.Cryptography.Xml.TransformChain transformChain);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string uri, class System.Security.Cryptography.Xml.TransformChain transformChain) cil managed" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CipherReference(System::String ^ uri, System::Security::Cryptography::Xml::TransformChain ^ transformChain);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
      <MemberSignature Language="C#" Value="public CipherReference (string uri, System.Security.Cryptography.Xml.TransformChain tc);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string uri, class System.Security.Cryptography.Xml.TransformChain tc) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (uri As String, tc As TransformChain)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CipherReference(System::String ^ uri, System::Security::Cryptography::Xml::TransformChain ^ tc);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (uri As String, tc As TransformChain)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.CipherReference.#ctor(System.String,System.Security.Cryptography.Xml.TransformChain)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.Xml.CipherReference : string * System.Security.Cryptography.Xml.TransformChain -&gt; System.Security.Cryptography.Xml.CipherReference" Usage="new System.Security.Cryptography.Xml.CipherReference (uri, tc)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.CipherReference.#ctor(System.String,System.Security.Cryptography.Xml.TransformChain)" FrameworkAlternate="xamarinmac-3.0;netcore-3.0" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.Xml.CipherReference : string * System.Security.Cryptography.Xml.TransformChain -&gt; System.Security.Cryptography.Xml.CipherReference" Usage="new System.Security.Cryptography.Xml.CipherReference (uri, tc)" FrameworkAlternate="xamarinmac-3.0;netcore-3.0" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="uri" Type="System.String" Index="0" />
        <Parameter Name="transformChain" Type="System.Security.Cryptography.Xml.TransformChain" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="tc" Type="System.Security.Cryptography.Xml.TransformChain" Index="1" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="uri">Код URI, указывающий на зашифрованные данные.</param>
        <param name="transformChain">Объект <see cref="T:System.Security.Cryptography.Xml.TransformChain" />, описывающий преобразования, которые применяются к зашифрованным данным.</param>
        <param name="tc">To be added.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Security.Cryptography.Xml.CipherReference" /> указанным URI и сведениями о цепочке преобразований.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот конструктор создает <xref:System.Security.Cryptography.Xml.CipherReference> объект, используя универсальный код ресурса (URI) и цепочку преобразований для указания зашифрованных данных. Затем объект используется для предоставления справочных сведений <xref:System.Security.Cryptography.Xml.CipherData> об объекте.  
  
   
  
## Examples  
 В следующем примере кода создается новый экземпляр <xref:System.Security.Cryptography.Xml.CipherReference>.  
  
 [!code-cpp[cryptography.Xml.CipherReference#1](~/samples/snippets/cpp/VS_Snippets_CLR/cryptography.Xml.CipherReference/CPP/example.cpp#1)]
 [!code-csharp[cryptography.Xml.CipherReference#1](~/samples/snippets/csharp/VS_Snippets_CLR/cryptography.Xml.CipherReference/CS/example.cs#1)]
 [!code-vb[cryptography.Xml.CipherReference#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/cryptography.Xml.CipherReference/VB/example.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetXml">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlElement GetXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Xml.XmlElement GetXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.CipherReference.GetXml" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetXml () As XmlElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Xml::XmlElement ^ GetXml();" />
      <MemberSignature Language="F#" Value="override this.GetXml : unit -&gt; System.Xml.XmlElement" Usage="cipherReference.GetXml " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает XML-представление объекта <see cref="T:System.Security.Cryptography.Xml.CipherReference" />.</summary>
        <returns>Объект <see cref="T:System.Xml.XmlElement" />, представляющий элемент <see langword="&lt;CipherReference&gt;" /> в XML-шифровании.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод используется для вывода `<CipherReference>` элемента в формате XML.  
  
   
  
## Examples  
 В следующем примере кода показан один из способов использования <xref:System.Security.Cryptography.Xml.CipherReference.GetXml%2A> метода.  
  
 [!code-cpp[CipherReference2#1](~/samples/snippets/cpp/VS_Snippets_CLR/CipherReference2/CPP/example.cpp#1)]
 [!code-csharp[CipherReference2#1](~/samples/snippets/csharp/VS_Snippets_CLR/CipherReference2/CS/example.cs#1)]
 [!code-vb[CipherReference2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CipherReference2/VB/example.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">Значение <see cref="T:System.Security.Cryptography.Xml.CipherReference" /> равно <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="LoadXml">
      <MemberSignature Language="C#" Value="public override void LoadXml (System.Xml.XmlElement value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void LoadXml(class System.Xml.XmlElement value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.CipherReference.LoadXml(System.Xml.XmlElement)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub LoadXml (value As XmlElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void LoadXml(System::Xml::XmlElement ^ value);" />
      <MemberSignature Language="F#" Value="override this.LoadXml : System.Xml.XmlElement -&gt; unit" Usage="cipherReference.LoadXml value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Xml.XmlElement" />
      </Parameters>
      <Docs>
        <param name="value">Объект <see cref="T:System.Xml.XmlElement" />, который представляет XML-элемент, используемый в качестве ссылки.</param>
        <summary>Загружает сведения XML в элемент <see langword="&lt;CipherReference&gt;" /> при XML-шифровании.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод используется для загрузки существующего XML-элемента в <xref:System.Security.Cryptography.Xml.CipherReference> объект.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Предоставленное значение параметра <paramref name="value" /> равно <see langword="null" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
