<Type Name="SettingsProvider" FullName="System.Configuration.SettingsProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f773aea0c0bceef846d415a8f231cf6b2d837353" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75143519" /></Metadata><TypeSignature Language="C#" Value="public abstract class SettingsProvider : System.Configuration.Provider.ProviderBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SettingsProvider extends System.Configuration.Provider.ProviderBase" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.SettingsProvider" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SettingsProvider&#xA;Inherits ProviderBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class SettingsProvider abstract : System::Configuration::Provider::ProviderBase" />
  <TypeSignature Language="F#" Value="type SettingsProvider = class&#xA;    inherit ProviderBase" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.Provider.ProviderBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Действует как базовый класс для извлечения поставщиков пользовательских параметров в архитектуре параметров приложения.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Поставщик параметров определяет механизм хранения данных конфигурации, используемых в архитектуре параметров приложения. .NET Framework содержит один поставщик параметров по умолчанию, <xref:System.Configuration.LocalFileSettingsProvider>, который хранит данные конфигурации в локальной файловой системе. Однако можно создать альтернативные механизмы хранения, производные от абстрактного <xref:System.Configuration.SettingsProvider> класса. Поставщик, используемый классом-оболочкой, определяется путем оформления класса-оболочки <xref:System.Configuration.SettingsProviderAttribute>. Если этот атрибут не указан, используется значение по умолчанию <xref:System.Configuration.LocalFileSettingsProvider>.  
  
 При создании поставщика настраиваемых параметров, как минимум, необходимо предоставить реализации трех методов этого класса: <xref:System.Configuration.SettingsProvider.GetPropertyValues%2A>, <xref:System.Configuration.SettingsProvider.SetPropertyValues%2A> и <xref:System.Configuration.SettingsProvider.ApplicationName%2A>.  
  
 Для клиентских приложений можно добавить более стандартизированную функциональность в пользовательский поставщик, также реализовав интерфейс <xref:System.Configuration.IApplicationSettingsProvider>. Этот интерфейс отражает методы, найденные в классе <xref:System.Configuration.ApplicationSettingsBase>, который в основном включает поддержку управления версиями.  
  
 Как правило, следует проектировать поставщики параметров для одного экземпляра, чтобы избежать состязаний за ресурсы хранилища. Поставщики также должны быть потокобезопасными, так как их можно вызывать одновременно из нескольких экземпляров оболочки в одном домене приложения или из нескольких приложений в разных доменах.  
  
 Как минимум поставщик параметров должен распознать три атрибута — <xref:System.Configuration.ApplicationScopedSettingAttribute>, <xref:System.Configuration.UserScopedSettingAttribute>и <xref:System.Configuration.DefaultSettingValueAttribute>. Полный список атрибутов, которые можно применить к параметрам приложения, см. в разделе [атрибуты параметров приложения](~/docs/framework/winforms/advanced/application-settings-attributes.md). Поставщик настраиваемых параметров должен разрешать атрибуты, применяемые к свойствам параметров, следующим образом.  
  
1.  Если поставщик может выполнить запрос, подразумеваемый атрибутом, очевидно, он должен сделать это.  
  
2.  Если поставщик не может выполнить запрос, он должен игнорировать его автоматически.  
  
3.  При конфликте двух или более свойств; Например, свойство дополняется как <xref:System.Configuration.ApplicationScopedSettingAttribute>, так и <xref:System.Configuration.UserScopedSettingAttribute>; Поставщик должен вызвать исключение <xref:System.Configuration.ConfigurationException>.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Configuration.IApplicationSettingsProvider" />
    <altmember cref="T:System.Configuration.LocalFileSettingsProvider" />
    <altmember cref="T:System.Configuration.SettingsProviderAttribute" />
    <altmember cref="T:System.Configuration.ApplicationSettingsBase" />
    <altmember cref="T:System.Configuration.ConfigurationException" />
    <related type="Article" href="https://msdn.microsoft.com/library/c8eb2ad0-fac6-4ea2-9140-675a4a44d562">Архитектура параметров приложения</related>
    <related type="Article" href="https://msdn.microsoft.com/library/53caa66c-a9fb-43a5-953c-ad092590098d">Атрибуты параметров приложения</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SettingsProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.SettingsProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SettingsProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Инициализирует экземпляр класса <see cref="T:System.Configuration.SettingsProvider" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это защищенный конструктор по умолчанию для этого абстрактного класса. Производные поставщики настраиваемых параметров не обязательно должны предоставлять явный конструктор, так как метод <xref:System.Configuration.Provider.ProviderBase.Initialize%2A> обычно выполняет всю инициализацию.  
  
 Клиентский код обычно не создает напрямую поставщик параметров. Вместо этого для поиска поставщика параметров для конкретного свойства параметров используется следующая процедура:  
  
1.  Вызовите метод <xref:System.ComponentModel.Component.GetService%2A> для текущего <xref:System.ComponentModel.Component> или <xref:System.ComponentModel.ISite>, чтобы получить ссылку на текущий <xref:System.Configuration.ISettingsProviderService>.  
  
2.  Вызовите метод <xref:System.Configuration.ISettingsProviderService.GetSettingsProvider%2A> <xref:System.Configuration.ISettingsProviderService>, полученного на первом шаге, чтобы вернуть поставщик параметров.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.Provider.ProviderBase.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" />
        <altmember cref="T:System.Configuration.ISettingsProviderService" />
        <altmember cref="M:System.Configuration.ISettingsProviderService.GetSettingsProvider(System.Configuration.SettingsProperty)" />
      </Docs>
    </Member>
    <Member MemberName="ApplicationName">
      <MemberSignature Language="C#" Value="public abstract string ApplicationName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ApplicationName" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.SettingsProvider.ApplicationName" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Property ApplicationName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ ApplicationName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationName : string with get, set" Usage="System.Configuration.SettingsProvider.ApplicationName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает имя работающего в данный момент приложения.</summary>
        <value><see cref="T:System.String" />, содержащая сокращенное имя приложения, которое не содержит полный путь или расширение, например <c>симплеаппсеттингс</c>.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Свойства <xref:System.Configuration.SettingsProvider.ApplicationName%2A> и <xref:System.Configuration.Provider.ProviderBase.Name%2A> помогают устранить неоднозначность именованных свойств параметров в разных приложениях.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Configuration.Provider.ProviderBase.Name" />
      </Docs>
    </Member>
    <Member MemberName="GetPropertyValues">
      <MemberSignature Language="C#" Value="public abstract System.Configuration.SettingsPropertyValueCollection GetPropertyValues (System.Configuration.SettingsContext context, System.Configuration.SettingsPropertyCollection collection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Configuration.SettingsPropertyValueCollection GetPropertyValues(class System.Configuration.SettingsContext context, class System.Configuration.SettingsPropertyCollection collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.SettingsProvider.GetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetPropertyValues (context As SettingsContext, collection As SettingsPropertyCollection) As SettingsPropertyValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Configuration::SettingsPropertyValueCollection ^ GetPropertyValues(System::Configuration::SettingsContext ^ context, System::Configuration::SettingsPropertyCollection ^ collection);" />
      <MemberSignature Language="F#" Value="abstract member GetPropertyValues : System.Configuration.SettingsContext * System.Configuration.SettingsPropertyCollection -&gt; System.Configuration.SettingsPropertyValueCollection" Usage="settingsProvider.GetPropertyValues (context, collection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.SettingsPropertyValueCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Configuration.SettingsContext" />
        <Parameter Name="collection" Type="System.Configuration.SettingsPropertyCollection" />
      </Parameters>
      <Docs>
        <param name="context">Объект <see cref="T:System.Configuration.SettingsContext" />, описывающий текущее использование приложения.</param>
        <param name="collection"><see cref="T:System.Configuration.SettingsPropertyCollection" />, содержащий группу свойств параметров, значения которых необходимо извлечь.</param>
        <summary>Возвращает коллекцию значений свойства параметров для указанного экземпляра приложения и группы свойств параметров.</summary>
        <returns>Объект <see cref="T:System.Configuration.SettingsPropertyValueCollection" />, содержащий значения для указанной группы свойств параметров.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод <xref:System.Configuration.SettingsProvider.GetPropertyValues%2A> должен быть реализован для управления специальными параметрами, помеченными <xref:System.Configuration.SpecialSettingAttribute>, а также для согласования параметров приложения и пользователя.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.SettingsProvider.SetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyValueCollection)" />
        <altmember cref="T:System.Configuration.SpecialSettingAttribute" />
      </Docs>
    </Member>
    <Member MemberName="SetPropertyValues">
      <MemberSignature Language="C#" Value="public abstract void SetPropertyValues (System.Configuration.SettingsContext context, System.Configuration.SettingsPropertyValueCollection collection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetPropertyValues(class System.Configuration.SettingsContext context, class System.Configuration.SettingsPropertyValueCollection collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.SettingsProvider.SetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub SetPropertyValues (context As SettingsContext, collection As SettingsPropertyValueCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void SetPropertyValues(System::Configuration::SettingsContext ^ context, System::Configuration::SettingsPropertyValueCollection ^ collection);" />
      <MemberSignature Language="F#" Value="abstract member SetPropertyValues : System.Configuration.SettingsContext * System.Configuration.SettingsPropertyValueCollection -&gt; unit" Usage="settingsProvider.SetPropertyValues (context, collection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Configuration.SettingsContext" />
        <Parameter Name="collection" Type="System.Configuration.SettingsPropertyValueCollection" />
      </Parameters>
      <Docs>
        <param name="context">Объект <see cref="T:System.Configuration.SettingsContext" />, описывающий текущее использование приложения.</param>
        <param name="collection">Объект <see cref="T:System.Configuration.SettingsPropertyValueCollection" />, представляющий группу параметров свойств, которые необходимо задать.</param>
        <summary>Задает значения указанной группы параметров свойств.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Configuration.ApplicationSettingsBase> содержит метод <xref:System.Configuration.ApplicationSettingsBase.Save%2A>, который вызывается для сохранения значений всех свойств его параметров. Этот метод выполняет перечисление всех поставщиков параметров, связанных со свойствами параметров, и вызывает метод <xref:System.Configuration.SettingsProvider.SetPropertyValues%2A> для каждого <xref:System.Configuration.SettingsProvider> для выполнения фактической операции сериализации.  
  
 Метод <xref:System.Configuration.SettingsProvider.SetPropertyValues%2A> должен быть реализован с учетом требований безопасности:  
  
-   Только полностью доверенный код должен быть разрешен для обновления параметров приложения. Частично доверенный код должен иметь разрешение на обновление только пользовательских параметров приложения. Ненадежный код обычно не может обновлять параметры приложения.  
  
-   Квоты на использование следует рассматривать для защиты от атак с использованием ресурсов частично доверенными приложениями.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.SettingsProvider.GetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Save" />
      </Docs>
    </Member>
  </Members>
</Type>
