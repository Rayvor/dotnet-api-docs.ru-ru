<Type Name="LongValidator" FullName="System.Configuration.LongValidator">
  <Metadata><Meta Name="ms.openlocfilehash" Value="81e526bba709c7572c135eea25b9c23d5ac26612" /><Meta Name="ms.sourcegitcommit" Value="1bb00d2f4343e73ae8d58668f02297a3cf10a4c1" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="06/15/2019" /><Meta Name="ms.locfileid" Value="63865235" /></Metadata><TypeSignature Language="C#" Value="public class LongValidator : System.Configuration.ConfigurationValidatorBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit LongValidator extends System.Configuration.ConfigurationValidatorBase" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.LongValidator" />
  <TypeSignature Language="VB.NET" Value="Public Class LongValidator&#xA;Inherits ConfigurationValidatorBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class LongValidator : System::Configuration::ConfigurationValidatorBase" />
  <TypeSignature Language="F#" Value="type LongValidator = class&#xA;    inherit ConfigurationValidatorBase" />
  <AssemblyInfo>
    <AssemblyName>System.Configuration</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.ConfigurationValidatorBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Выполняет проверку значения <see cref="T:System.Int64" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Configuration.LongValidator> Используется для обеспечения `long` (64-разрядное знаковое целое число) определенным условиям. Для проверки критериев устанавливается в том случае, когда экземпляр <xref:System.Configuration.LongValidator> создается класс. <xref:System.Configuration.LongValidator.%23ctor%28System.Int64%2CSystem.Int64%29> Конструктор гарантирует, что `long` значение, которое проверяется в данный момент следует как минимум, так и максимальной длиной. <xref:System.Configuration.LongValidator.%23ctor%28System.Int64%2CSystem.Int64%2CSystem.Boolean%29> Конструктор проверяет минимального и максимального <xref:System.Int64> значения, а также является ли диапазон проверки является эксклюзивным. <xref:System.Configuration.LongValidator.%23ctor%28System.Int64%2CSystem.Int64%2CSystem.Boolean%2CSystem.Int64%29> Конструктор проверяет предыдущие три параметра, а также проверяет, является ли <xref:System.Int64> значение равно значению определенного разрешения.  
  
 <xref:System.Configuration.LongValidator.CanValidate%2A> Метод определяет, совпадает ли тип объекта проверяемой ожидаемого типа. Проверяемый объект передается как параметр <xref:System.Configuration.LongValidator.Validate%2A> метод.  
  
   
  
## Examples  
 В следующем примере кода демонстрируется использование <xref:System.Configuration.LongValidator> типа.  
  
 [!code-csharp[System.Configuration.LongValidator#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.LongValidator/CS/LongValidator.cs#1)]
 [!code-vb[System.Configuration.LongValidator#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.LongValidator/VB/LongValidator.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Configuration.ConfigurationValidatorBase" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.LongValidator" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LongValidator (long minValue, long maxValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int64 minValue, int64 maxValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.LongValidator.#ctor(System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (minValue As Long, maxValue As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LongValidator(long minValue, long maxValue);" />
      <MemberSignature Language="F#" Value="new System.Configuration.LongValidator : int64 * int64 -&gt; System.Configuration.LongValidator" Usage="new System.Configuration.LongValidator (minValue, maxValue)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="minValue" Type="System.Int64" />
        <Parameter Name="maxValue" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="minValue">Значение <see cref="T:System.Int64" />, указывающее минимальную длину значения <see langword="long" />.</param>
        <param name="maxValue">Значение <see cref="T:System.Int64" />, указывающее максимальную длину значения <see langword="long" />.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.LongValidator" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Configuration.LongValidator.%23ctor%2A> Конструктор гарантирует, что выполняется проверка длинное целое значение соответствует минимальная и максимальная длина.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LongValidator (long minValue, long maxValue, bool rangeIsExclusive);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int64 minValue, int64 maxValue, bool rangeIsExclusive) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.LongValidator.#ctor(System.Int64,System.Int64,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (minValue As Long, maxValue As Long, rangeIsExclusive As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LongValidator(long minValue, long maxValue, bool rangeIsExclusive);" />
      <MemberSignature Language="F#" Value="new System.Configuration.LongValidator : int64 * int64 * bool -&gt; System.Configuration.LongValidator" Usage="new System.Configuration.LongValidator (minValue, maxValue, rangeIsExclusive)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="minValue" Type="System.Int64" />
        <Parameter Name="maxValue" Type="System.Int64" />
        <Parameter Name="rangeIsExclusive" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="minValue">Значение <see cref="T:System.Int64" />, указывающее минимальную длину значения <see langword="long" />.</param>
        <param name="maxValue">Значение <see cref="T:System.Int64" />, указывающее максимальную длину значения <see langword="long" />.</param>
        <param name="rangeIsExclusive">Значение <see cref="T:System.Boolean" />, указывающее, является ли диапазон проверки эксклюзивным.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.LongValidator" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Когда <xref:System.Configuration.LongValidator.%23ctor%2A> конструктор используется, он проверяет, минимального и максимального <xref:System.Int64> значения, а также является ли диапазон проверки является эксклюзивным. Когда `rangeIsExclusive` параметр имеет значение `true`, <xref:System.Int64> значение не должно быть между `minValue` и `maxValue`.  
  
   
  
## Examples  
 В следующем примере кода демонстрируется использование <xref:System.Configuration.LongValidator.%23ctor%2A> конструктор. Данный пример кода является частью большего примера для <xref:System.Configuration.LongValidator> класса.  
  
 [!code-csharp[System.Configuration.LongValidator#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.LongValidator/CS/LongValidator.cs#2)]
 [!code-vb[System.Configuration.LongValidator#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.LongValidator/VB/LongValidator.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LongValidator (long minValue, long maxValue, bool rangeIsExclusive, long resolution);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int64 minValue, int64 maxValue, bool rangeIsExclusive, int64 resolution) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.LongValidator.#ctor(System.Int64,System.Int64,System.Boolean,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (minValue As Long, maxValue As Long, rangeIsExclusive As Boolean, resolution As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LongValidator(long minValue, long maxValue, bool rangeIsExclusive, long resolution);" />
      <MemberSignature Language="F#" Value="new System.Configuration.LongValidator : int64 * int64 * bool * int64 -&gt; System.Configuration.LongValidator" Usage="new System.Configuration.LongValidator (minValue, maxValue, rangeIsExclusive, resolution)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="minValue" Type="System.Int64" />
        <Parameter Name="maxValue" Type="System.Int64" />
        <Parameter Name="rangeIsExclusive" Type="System.Boolean" />
        <Parameter Name="resolution" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="minValue">Значение <see cref="T:System.Int64" />, указывающее минимальную длину значения <see langword="long" />.</param>
        <param name="maxValue">Значение <see cref="T:System.Int64" />, указывающее максимальную длину значения <see langword="long" />.</param>
        <param name="rangeIsExclusive">Значение <see cref="T:System.Boolean" />, указывающее, является ли диапазон проверки эксклюзивным.</param>
        <param name="resolution">Значение <see cref="T:System.Int64" />, указывающее определенное значение для соответствия.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Configuration.LongValidator" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При указании `resolution`, <xref:System.Int64> проверяемое значение должно быть равно это значение, чтобы пройти проверку.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="resolution" /> равно или меньше <see langword="0" />.  
  
-или- 
 Значение <paramref name="maxValue" /> меньше <paramref name="minValue" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="CanValidate">
      <MemberSignature Language="C#" Value="public override bool CanValidate (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanValidate(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.LongValidator.CanValidate(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanValidate(Type ^ type);" />
      <MemberSignature Language="F#" Value="override this.CanValidate : Type -&gt; bool" Usage="longValidator.CanValidate type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">Тип объекта.</param>
        <summary>Определяет, можно ли проверить тип объекта.</summary>
        <returns><see langword="true" />, если параметр <paramref name="type" /> соответствует значению <see cref="T:System.Int64" />; в противном случае — <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере кода показано, как использовать метод <xref:System.Configuration.LongValidator.CanValidate%2A>. Данный пример кода является частью большего примера для <xref:System.Configuration.LongValidator> класса.  
  
 [!code-csharp[System.Configuration.LongValidator#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.LongValidator/CS/LongValidator.cs#3)]
 [!code-vb[System.Configuration.LongValidator#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.LongValidator/VB/LongValidator.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public override void Validate (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Validate(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.LongValidator.Validate(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Validate (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Validate(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.Validate : obj -&gt; unit" Usage="longValidator.Validate value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Значение объекта.</param>
        <summary>Определяет, является ли значение объекта допустимым.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Configuration.LongValidator> Класс содержит правила, необходимые для проверки <xref:System.Int64> объекта. Правила устанавливаются при создании экземпляра класса <xref:System.Configuration.LongValidator> создается класс. Проверяемый объект передается как параметр <xref:System.Configuration.LongValidator.Validate%2A> метод.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать метод <xref:System.Configuration.LongValidator.Validate%2A>. Данный пример кода является частью большего примера для <xref:System.Configuration.LongValidator> класса.  
  
 [!code-csharp[System.Configuration.LongValidator#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.LongValidator/CS/LongValidator.cs#4)]
 [!code-vb[System.Configuration.LongValidator#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.LongValidator/VB/LongValidator.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Configuration.ConfigurationValidatorBase" />
      </Docs>
    </Member>
  </Members>
</Type>