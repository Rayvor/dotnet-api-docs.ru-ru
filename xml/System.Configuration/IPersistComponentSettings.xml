<Type Name="IPersistComponentSettings" FullName="System.Configuration.IPersistComponentSettings">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7334668a390ddea282822d40a701007c04e22340" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70530195" /></Metadata><TypeSignature Language="C#" Value="public interface IPersistComponentSettings" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IPersistComponentSettings" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.IPersistComponentSettings" />
  <TypeSignature Language="VB.NET" Value="Public Interface IPersistComponentSettings" />
  <TypeSignature Language="C++ CLI" Value="public interface class IPersistComponentSettings" />
  <TypeSignature Language="F#" Value="type IPersistComponentSettings = interface" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Определяет стандартную функциональность для элементов управления или библиотек, которые хранят и извлекают параметры приложения.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Как правило, в приложение можно добавить поддержку параметров приложения, создав класс-оболочку параметров, производный от <xref:System.Configuration.ApplicationSettingsBase>, а затем добавив в этот класс специальные свойства. Однако этот подход не является достаточно инкапсулировать параметры приложения для элемента управления, чтобы его контейнер был экранирован от сведений. <xref:System.Configuration.IPersistComponentSettings> Интерфейс предоставляет приложение со стандартным интерфейсом для передачи запросов на изменение состояния параметров приложения элементу управления, компоненту или модулю библиотеки. Средства времени разработки также зависят от этого интерфейса, чтобы правильно управлять элементами управления и компонентами.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Configuration.ApplicationSettingsBase" />
    <related type="Article" href="https://msdn.microsoft.com/library/f44afb74-76cc-44f2-890a-44b7cdc211a1">Параметры приложения для пользовательских элементов управления</related>
  </Docs>
  <Members>
    <Member MemberName="LoadComponentSettings">
      <MemberSignature Language="C#" Value="public void LoadComponentSettings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LoadComponentSettings() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.IPersistComponentSettings.LoadComponentSettings" />
      <MemberSignature Language="VB.NET" Value="Public Sub LoadComponentSettings ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LoadComponentSettings();" />
      <MemberSignature Language="F#" Value="abstract member LoadComponentSettings : unit -&gt; unit" Usage="iPersistComponentSettings.LoadComponentSettings " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Считывает параметры приложения элемента управления в их соответствующие свойства и обновляет состояние элемента управления.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Как правило, <xref:System.Configuration.IPersistComponentSettings.LoadComponentSettings%2A> метод выполняет две основные операции:  
  
-   Это приводит к тому, что каждый экземпляр параметров приложения, содержащийся в элементе управления, обновляет значения свойств параметров приложения, как <xref:System.Configuration.ApplicationSettingsBase.Reload%2A> правило, путем вызова их методов.  
  
-   При необходимости он обновляет общие свойства, зависящие от этих перезагруженных свойств параметров. Например, если класс параметров содержит `location` свойство Settings, <xref:System.Configuration.IPersistComponentSettings.LoadComponentSettings%2A> должно <xref:System.Windows.Forms.Control.Location%2A> обеспечить обновление свойства элемента управления для отражения этой перезагруженной настройки.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.IPersistComponentSettings.SaveComponentSettings" />
        <altmember cref="M:System.Configuration.IPersistComponentSettings.ResetComponentSettings" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Reload" />
      </Docs>
    </Member>
    <Member MemberName="ResetComponentSettings">
      <MemberSignature Language="C#" Value="public void ResetComponentSettings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ResetComponentSettings() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.IPersistComponentSettings.ResetComponentSettings" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetComponentSettings ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetComponentSettings();" />
      <MemberSignature Language="F#" Value="abstract member ResetComponentSettings : unit -&gt; unit" Usage="iPersistComponentSettings.ResetComponentSettings " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Повторно загружает свойства параметров приложения элемента управления относительно значений по умолчанию.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Реализация <xref:System.Configuration.IPersistComponentSettings.ResetComponentSettings%2A> метода обычно <xref:System.Configuration.ApplicationSettingsBase.Reset%2A> вызывает метод для каждого экземпляра класса параметров приложения, который он содержит.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.IPersistComponentSettings.LoadComponentSettings" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Reset" />
      </Docs>
    </Member>
    <Member MemberName="SaveComponentSettings">
      <MemberSignature Language="C#" Value="public void SaveComponentSettings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SaveComponentSettings() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.IPersistComponentSettings.SaveComponentSettings" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveComponentSettings ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SaveComponentSettings();" />
      <MemberSignature Language="F#" Value="abstract member SaveComponentSettings : unit -&gt; unit" Usage="iPersistComponentSettings.SaveComponentSettings " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Сохраняет свойства параметров приложения элемента управления.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Configuration.IPersistComponentSettings.SaveComponentSettings%2A> Метод записывает значения свойств параметров приложения элемента управления в связанное хранилище данных. Метод хранилища данных и сериализации, используемый методом, определяется поставщиком параметров, связанным с каждым классом параметров через <xref:System.Configuration.SettingsProviderAttribute>. Вы можете переопределить выбранный поставщик параметров с помощью <xref:System.Configuration.ISettingsProviderService> интерфейса.  
  
> [!NOTE]
>  Если свойство имеет `true`значение, элемент управления должен вызвать <xref:System.Configuration.IPersistComponentSettings.SaveComponentSettings%2A> в своем собственном <xref:System.Windows.Forms.Control.Dispose%2A> методе, чтобы данные конфигурации элемента управления сохранялись автоматически перед завершением приложения. <xref:System.Configuration.IPersistComponentSettings.SaveSettings%2A>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Configuration.IPersistComponentSettings.SaveSettings" />
        <altmember cref="M:System.Configuration.IPersistComponentSettings.LoadComponentSettings" />
        <altmember cref="M:System.Configuration.IPersistComponentSettings.ResetComponentSettings" />
        <altmember cref="T:System.Configuration.SettingsProvider" />
        <altmember cref="T:System.Configuration.LocalFileSettingsProvider" />
        <altmember cref="T:System.Configuration.SettingsProviderAttribute" />
        <altmember cref="T:System.Configuration.ISettingsProviderService" />
      </Docs>
    </Member>
    <Member MemberName="SaveSettings">
      <MemberSignature Language="C#" Value="public bool SaveSettings { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SaveSettings" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.IPersistComponentSettings.SaveSettings" />
      <MemberSignature Language="VB.NET" Value="Public Property SaveSettings As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SaveSettings { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SaveSettings : bool with get, set" Usage="System.Configuration.IPersistComponentSettings.SaveSettings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, указывающее на то, должен ли элемент управления автоматически сохранять свойства параметров приложения.</summary>
        <value><see langword="true" />, если элемент управления должен автоматически сохранять свое состояние, иначе <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если элемент управления содержит данные конфигурации, он обычно сохраняет эти данные в ответ на явный вызов <xref:System.Configuration.IPersistComponentSettings.SaveComponentSettings%2A> метода или иногда неявно при вызове <xref:System.Windows.Forms.Control.Dispose%2A> метода элемента управления. <xref:System.Configuration.IPersistComponentSettings.SaveSettings%2A> Свойство определяет, будет ли элемент управления автоматически сохранять свои данные конфигурации при удалении.  
  
 Значение по умолчанию <xref:System.Configuration.IPersistComponentSettings.SaveSettings%2A> зависит от реализации элемента управления. Документация для элемента управления должна указывать, используются ли параметры приложения, какие данные сохраняются и какое значение <xref:System.Configuration.IPersistComponentSettings.SaveSettings%2A> свойства по умолчанию равно.  
  
   
  
## Examples  
 В следующем примере кода показан правильный способ проверки значения <xref:System.Configuration.IPersistComponentSettings.SaveSettings%2A> свойства элементом управления перед попыткой автоматически сохранить данные конфигурации.  
  
 `protected override void Dispose( bool disposing ) {`  
  
 `if(disposing) {`  
  
 `try {`  
  
 `if (SaveSettings) {`  
  
 `SaveComponentSettings();`  
  
 `}`  
  
 `}`  
  
 `finally {`  
  
 `//...`  
  
 `}`  
  
 `}`  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.IPersistComponentSettings.SaveComponentSettings" />
        <altmember cref="M:System.Configuration.SettingsBase.Save" />
      </Docs>
    </Member>
    <Member MemberName="SettingsKey">
      <MemberSignature Language="C#" Value="public string SettingsKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SettingsKey" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.IPersistComponentSettings.SettingsKey" />
      <MemberSignature Language="VB.NET" Value="Public Property SettingsKey As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SettingsKey { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SettingsKey : string with get, set" Usage="System.Configuration.IPersistComponentSettings.SettingsKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение ключа параметров приложения для текущего экземпляра элемента управления.</summary>
        <value>Строка <see cref="T:System.String" />, содержащая ключ параметров для текущего экземпляра элемента управления.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Configuration.IPersistComponentSettings.SettingsKey%2A> Используйте свойство для устранения неоднозначности групп свойств параметров приложения при наличии нескольких экземпляров одного и того же класса-оболочки. Например, если элемент управления содержит связанный класс-оболочку, то размещение нескольких экземпляров одного и того же элемента управления в одном приложении обычно приведет к созданию нескольких экземпляров класса-оболочки. Ключ параметров требуется только в том случае, если данные конфигурации различаются на уровне каждого экземпляра. Например, расположение динамически позиционированных элементов управления.  
  
 Следующие общие правила применяются к использованию <xref:System.Configuration.IPersistComponentSettings.SettingsKey%2A>:  
  
-   Элемент управления, как и любой класс, может содержать ноль или более классов параметров приложения, производных от <xref:System.Configuration.ApplicationSettingsBase>. Каждый класс параметров содержит собственное <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A?displayProperty=nameWithType> свойство, которое помогает устранить неоднозначность нескольких экземпляров этого класса.  
  
-   Элемент управления должен отделить данные каждого экземпляра и его общие данные с различными классами параметров.  
  
-   Для элемента управления с любыми данными `get` конфигурации для каждого экземпляра метод доступа <xref:System.Configuration.IPersistComponentSettings.SettingsKey%2A> свойства должен по умолчанию иметь значение <xref:System.Windows.Forms.Control.Name%2A> элемента управления. В большинстве случаев имя элемента управления будет уникальным в пределах приложения. Если элемент управления содержит только общие данные конфигурации, `get` то `null`по умолчанию должен иметь значение.  
  
-   `set` Метод доступа для этого свойства должен быть реализован для различения классов параметров, содержащих данные конфигурации для каждого экземпляра и общих данных. Для каждого класса параметров, содержащего данные для каждого экземпляра `set` , следует просто передать его <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A?displayProperty=nameWithType> свойству класса Settings. Для классов параметров, содержащих общие данные `set` , не следует предпринимать никаких действий для этого класса параметров.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.IPersistComponentSettings.SaveComponentSettings" />
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.SettingsKey" />
        <related type="Article" href="https://msdn.microsoft.com/library/f44afb74-76cc-44f2-890a-44b7cdc211a1">Параметры приложения для пользовательских элементов управления</related>
      </Docs>
    </Member>
  </Members>
</Type>
