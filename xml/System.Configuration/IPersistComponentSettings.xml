<Type Name="IPersistComponentSettings" FullName="System.Configuration.IPersistComponentSettings">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7334668a390ddea282822d40a701007c04e22340" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70530195" /></Metadata><TypeSignature Language="C#" Value="public interface IPersistComponentSettings" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IPersistComponentSettings" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.IPersistComponentSettings" />
  <TypeSignature Language="VB.NET" Value="Public Interface IPersistComponentSettings" />
  <TypeSignature Language="C++ CLI" Value="public interface class IPersistComponentSettings" />
  <TypeSignature Language="F#" Value="type IPersistComponentSettings = interface" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="fd908-101">Определяет стандартную функциональность для элементов управления или библиотек, которые хранят и извлекают параметры приложения.</span><span class="sxs-lookup"><span data-stu-id="fd908-101">Defines standard functionality for controls or libraries that store and retrieve application settings.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd908-102">Как правило, в приложение можно добавить поддержку параметров приложения, создав класс-оболочку параметров, производный от <xref:System.Configuration.ApplicationSettingsBase>, а затем добавив в этот класс специальные свойства.</span><span class="sxs-lookup"><span data-stu-id="fd908-102">Typically, you can add application settings support to an application by creating a settings wrapper class, which is derived from <xref:System.Configuration.ApplicationSettingsBase>, and then add special properties to this class.</span></span> <span data-ttu-id="fd908-103">Однако этот подход не является достаточно инкапсулировать параметры приложения для элемента управления, чтобы его контейнер был экранирован от сведений.</span><span class="sxs-lookup"><span data-stu-id="fd908-103">However, this approach does not sufficiently encapsulate application settings for a control so that its container is shielded from the details.</span></span> <span data-ttu-id="fd908-104"><xref:System.Configuration.IPersistComponentSettings> Интерфейс предоставляет приложение со стандартным интерфейсом для передачи запросов на изменение состояния параметров приложения элементу управления, компоненту или модулю библиотеки.</span><span class="sxs-lookup"><span data-stu-id="fd908-104">The <xref:System.Configuration.IPersistComponentSettings> interface provides an application with a standard interface for communicating application settings state change requests to a control, component, or library module.</span></span> <span data-ttu-id="fd908-105">Средства времени разработки также зависят от этого интерфейса, чтобы правильно управлять элементами управления и компонентами.</span><span class="sxs-lookup"><span data-stu-id="fd908-105">Design-time tools also depend on this interface to properly manage controls and components.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Configuration.ApplicationSettingsBase" />
    <related type="Article" href="https://msdn.microsoft.com/library/f44afb74-76cc-44f2-890a-44b7cdc211a1"><span data-ttu-id="fd908-106">Параметры приложения для пользовательских элементов управления</span><span class="sxs-lookup"><span data-stu-id="fd908-106">Application Settings for Custom Controls</span></span></related>
  </Docs>
  <Members>
    <Member MemberName="LoadComponentSettings">
      <MemberSignature Language="C#" Value="public void LoadComponentSettings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LoadComponentSettings() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.IPersistComponentSettings.LoadComponentSettings" />
      <MemberSignature Language="VB.NET" Value="Public Sub LoadComponentSettings ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LoadComponentSettings();" />
      <MemberSignature Language="F#" Value="abstract member LoadComponentSettings : unit -&gt; unit" Usage="iPersistComponentSettings.LoadComponentSettings " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fd908-107">Считывает параметры приложения элемента управления в их соответствующие свойства и обновляет состояние элемента управления.</span><span class="sxs-lookup"><span data-stu-id="fd908-107">Reads the control's application settings into their corresponding properties and updates the control's state.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd908-108">Как правило, <xref:System.Configuration.IPersistComponentSettings.LoadComponentSettings%2A> метод выполняет две основные операции:</span><span class="sxs-lookup"><span data-stu-id="fd908-108">In general, the <xref:System.Configuration.IPersistComponentSettings.LoadComponentSettings%2A> method performs two essential operations:</span></span>  
  
-   <span data-ttu-id="fd908-109">Это приводит к тому, что каждый экземпляр параметров приложения, содержащийся в элементе управления, обновляет значения свойств параметров приложения, как <xref:System.Configuration.ApplicationSettingsBase.Reload%2A> правило, путем вызова их методов.</span><span class="sxs-lookup"><span data-stu-id="fd908-109">It causes each application settings instance contained by the control to refresh the values of its application settings properties, typically by calling their <xref:System.Configuration.ApplicationSettingsBase.Reload%2A> methods.</span></span>  
  
-   <span data-ttu-id="fd908-110">При необходимости он обновляет общие свойства, зависящие от этих перезагруженных свойств параметров.</span><span class="sxs-lookup"><span data-stu-id="fd908-110">As required, it updates those general properties that depend on these reloaded settings properties.</span></span> <span data-ttu-id="fd908-111">Например, если класс параметров содержит `location` свойство Settings, <xref:System.Configuration.IPersistComponentSettings.LoadComponentSettings%2A> должно <xref:System.Windows.Forms.Control.Location%2A> обеспечить обновление свойства элемента управления для отражения этой перезагруженной настройки.</span><span class="sxs-lookup"><span data-stu-id="fd908-111">For example, if the settings class contained a `location` settings property, <xref:System.Configuration.IPersistComponentSettings.LoadComponentSettings%2A> should ensure that the control's <xref:System.Windows.Forms.Control.Location%2A> property is updated to reflect this reloaded setting.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.IPersistComponentSettings.SaveComponentSettings" />
        <altmember cref="M:System.Configuration.IPersistComponentSettings.ResetComponentSettings" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Reload" />
      </Docs>
    </Member>
    <Member MemberName="ResetComponentSettings">
      <MemberSignature Language="C#" Value="public void ResetComponentSettings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ResetComponentSettings() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.IPersistComponentSettings.ResetComponentSettings" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetComponentSettings ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetComponentSettings();" />
      <MemberSignature Language="F#" Value="abstract member ResetComponentSettings : unit -&gt; unit" Usage="iPersistComponentSettings.ResetComponentSettings " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fd908-112">Повторно загружает свойства параметров приложения элемента управления относительно значений по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="fd908-112">Resets the control's application settings properties to their default values.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd908-113">Реализация <xref:System.Configuration.IPersistComponentSettings.ResetComponentSettings%2A> метода обычно <xref:System.Configuration.ApplicationSettingsBase.Reset%2A> вызывает метод для каждого экземпляра класса параметров приложения, который он содержит.</span><span class="sxs-lookup"><span data-stu-id="fd908-113">The implementation of the <xref:System.Configuration.IPersistComponentSettings.ResetComponentSettings%2A> method typically calls the <xref:System.Configuration.ApplicationSettingsBase.Reset%2A> method on each instance of an application settings class it contains.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.IPersistComponentSettings.LoadComponentSettings" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Reset" />
      </Docs>
    </Member>
    <Member MemberName="SaveComponentSettings">
      <MemberSignature Language="C#" Value="public void SaveComponentSettings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SaveComponentSettings() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.IPersistComponentSettings.SaveComponentSettings" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveComponentSettings ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SaveComponentSettings();" />
      <MemberSignature Language="F#" Value="abstract member SaveComponentSettings : unit -&gt; unit" Usage="iPersistComponentSettings.SaveComponentSettings " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fd908-114">Сохраняет свойства параметров приложения элемента управления.</span><span class="sxs-lookup"><span data-stu-id="fd908-114">Persists the control's application settings properties.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd908-115"><xref:System.Configuration.IPersistComponentSettings.SaveComponentSettings%2A> Метод записывает значения свойств параметров приложения элемента управления в связанное хранилище данных.</span><span class="sxs-lookup"><span data-stu-id="fd908-115">The <xref:System.Configuration.IPersistComponentSettings.SaveComponentSettings%2A> method writes the values of the control's application settings properties to the associated data store.</span></span> <span data-ttu-id="fd908-116">Метод хранилища данных и сериализации, используемый методом, определяется поставщиком параметров, связанным с каждым классом параметров через <xref:System.Configuration.SettingsProviderAttribute>.</span><span class="sxs-lookup"><span data-stu-id="fd908-116">The data store and serialization technique the method uses is determined by the settings provider associated with each settings class through the <xref:System.Configuration.SettingsProviderAttribute>.</span></span> <span data-ttu-id="fd908-117">Вы можете переопределить выбранный поставщик параметров с помощью <xref:System.Configuration.ISettingsProviderService> интерфейса.</span><span class="sxs-lookup"><span data-stu-id="fd908-117">You can override the choice of the settings provider by using the <xref:System.Configuration.ISettingsProviderService> interface.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fd908-118">Если свойство имеет `true`значение, элемент управления должен вызвать <xref:System.Configuration.IPersistComponentSettings.SaveComponentSettings%2A> в своем собственном <xref:System.Windows.Forms.Control.Dispose%2A> методе, чтобы данные конфигурации элемента управления сохранялись автоматически перед завершением приложения. <xref:System.Configuration.IPersistComponentSettings.SaveSettings%2A></span><span class="sxs-lookup"><span data-stu-id="fd908-118">If the <xref:System.Configuration.IPersistComponentSettings.SaveSettings%2A> property is `true`, the control should call <xref:System.Configuration.IPersistComponentSettings.SaveComponentSettings%2A> in its own <xref:System.Windows.Forms.Control.Dispose%2A> method so that the control's configuration data is stored automatically before the application ends.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Configuration.IPersistComponentSettings.SaveSettings" />
        <altmember cref="M:System.Configuration.IPersistComponentSettings.LoadComponentSettings" />
        <altmember cref="M:System.Configuration.IPersistComponentSettings.ResetComponentSettings" />
        <altmember cref="T:System.Configuration.SettingsProvider" />
        <altmember cref="T:System.Configuration.LocalFileSettingsProvider" />
        <altmember cref="T:System.Configuration.SettingsProviderAttribute" />
        <altmember cref="T:System.Configuration.ISettingsProviderService" />
      </Docs>
    </Member>
    <Member MemberName="SaveSettings">
      <MemberSignature Language="C#" Value="public bool SaveSettings { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SaveSettings" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.IPersistComponentSettings.SaveSettings" />
      <MemberSignature Language="VB.NET" Value="Public Property SaveSettings As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SaveSettings { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SaveSettings : bool with get, set" Usage="System.Configuration.IPersistComponentSettings.SaveSettings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fd908-119">Возвращает или задает значение, указывающее на то, должен ли элемент управления автоматически сохранять свойства параметров приложения.</span><span class="sxs-lookup"><span data-stu-id="fd908-119">Gets or sets a value indicating whether the control should automatically persist its application settings properties.</span></span></summary>
        <value><span data-ttu-id="fd908-120"><see langword="true" />, если элемент управления должен автоматически сохранять свое состояние, иначе <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="fd908-120"><see langword="true" /> if the control should automatically persist its state; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd908-121">Если элемент управления содержит данные конфигурации, он обычно сохраняет эти данные в ответ на явный вызов <xref:System.Configuration.IPersistComponentSettings.SaveComponentSettings%2A> метода или иногда неявно при вызове <xref:System.Windows.Forms.Control.Dispose%2A> метода элемента управления.</span><span class="sxs-lookup"><span data-stu-id="fd908-121">If a control contains configuration data, it will typically persist this data in response to an explicit call to the <xref:System.Configuration.IPersistComponentSettings.SaveComponentSettings%2A> method or sometimes implicitly when the control's <xref:System.Windows.Forms.Control.Dispose%2A> method is invoked.</span></span> <span data-ttu-id="fd908-122"><xref:System.Configuration.IPersistComponentSettings.SaveSettings%2A> Свойство определяет, будет ли элемент управления автоматически сохранять свои данные конфигурации при удалении.</span><span class="sxs-lookup"><span data-stu-id="fd908-122">The <xref:System.Configuration.IPersistComponentSettings.SaveSettings%2A> property determines whether a control automatically persists its configuration data when it is disposed.</span></span>  
  
 <span data-ttu-id="fd908-123">Значение по умолчанию <xref:System.Configuration.IPersistComponentSettings.SaveSettings%2A> зависит от реализации элемента управления.</span><span class="sxs-lookup"><span data-stu-id="fd908-123">The default value of <xref:System.Configuration.IPersistComponentSettings.SaveSettings%2A> depends on the implementation of the control.</span></span> <span data-ttu-id="fd908-124">Документация для элемента управления должна указывать, используются ли параметры приложения, какие данные сохраняются и какое значение <xref:System.Configuration.IPersistComponentSettings.SaveSettings%2A> свойства по умолчанию равно.</span><span class="sxs-lookup"><span data-stu-id="fd908-124">The documentation for the control should indicate whether it uses application settings, what data is persisted, and what the default value of the <xref:System.Configuration.IPersistComponentSettings.SaveSettings%2A> property is.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fd908-125">В следующем примере кода показан правильный способ проверки значения <xref:System.Configuration.IPersistComponentSettings.SaveSettings%2A> свойства элементом управления перед попыткой автоматически сохранить данные конфигурации.</span><span class="sxs-lookup"><span data-stu-id="fd908-125">The following code example shows the proper way for a control to check the value of the <xref:System.Configuration.IPersistComponentSettings.SaveSettings%2A> property before it attempts to automatically persist its configuration data.</span></span>  
  
 `protected override void Dispose( bool disposing ) {`  
  
 `if(disposing) {`  
  
 `try {`  
  
 `if (SaveSettings) {`  
  
 `SaveComponentSettings();`  
  
 `}`  
  
 `}`  
  
 `finally {`  
  
 `//...`  
  
 `}`  
  
 `}`  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.IPersistComponentSettings.SaveComponentSettings" />
        <altmember cref="M:System.Configuration.SettingsBase.Save" />
      </Docs>
    </Member>
    <Member MemberName="SettingsKey">
      <MemberSignature Language="C#" Value="public string SettingsKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SettingsKey" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.IPersistComponentSettings.SettingsKey" />
      <MemberSignature Language="VB.NET" Value="Public Property SettingsKey As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SettingsKey { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SettingsKey : string with get, set" Usage="System.Configuration.IPersistComponentSettings.SettingsKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fd908-126">Возвращает или задает значение ключа параметров приложения для текущего экземпляра элемента управления.</span><span class="sxs-lookup"><span data-stu-id="fd908-126">Gets or sets the value of the application settings key for the current instance of the control.</span></span></summary>
        <value><span data-ttu-id="fd908-127">Строка <see cref="T:System.String" />, содержащая ключ параметров для текущего экземпляра элемента управления.</span><span class="sxs-lookup"><span data-stu-id="fd908-127">A <see cref="T:System.String" /> containing the settings key for the current instance of the control.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd908-128"><xref:System.Configuration.IPersistComponentSettings.SettingsKey%2A> Используйте свойство для устранения неоднозначности групп свойств параметров приложения при наличии нескольких экземпляров одного и того же класса-оболочки.</span><span class="sxs-lookup"><span data-stu-id="fd908-128">Use the <xref:System.Configuration.IPersistComponentSettings.SettingsKey%2A> property to disambiguate groups of application settings properties when there are multiple instances of the same wrapper class.</span></span> <span data-ttu-id="fd908-129">Например, если элемент управления содержит связанный класс-оболочку, то размещение нескольких экземпляров одного и того же элемента управления в одном приложении обычно приведет к созданию нескольких экземпляров класса-оболочки.</span><span class="sxs-lookup"><span data-stu-id="fd908-129">For example, if a control contains an associated wrapper class, then placing multiple instances of the same control in the same application will typically result in multiple instances of the wrapper class.</span></span> <span data-ttu-id="fd908-130">Ключ параметров требуется только в том случае, если данные конфигурации различаются на уровне каждого экземпляра. Например, расположение динамически позиционированных элементов управления.</span><span class="sxs-lookup"><span data-stu-id="fd908-130">A settings key is required only when the configuration data differs on a per-instance basis; for example, the location of dynamically positioned controls.</span></span>  
  
 <span data-ttu-id="fd908-131">Следующие общие правила применяются к использованию <xref:System.Configuration.IPersistComponentSettings.SettingsKey%2A>:</span><span class="sxs-lookup"><span data-stu-id="fd908-131">The following general rules apply to the use of <xref:System.Configuration.IPersistComponentSettings.SettingsKey%2A>:</span></span>  
  
-   <span data-ttu-id="fd908-132">Элемент управления, как и любой класс, может содержать ноль или более классов параметров приложения, производных от <xref:System.Configuration.ApplicationSettingsBase>.</span><span class="sxs-lookup"><span data-stu-id="fd908-132">A control, like any class, may contain zero or more application settings classes, derived from <xref:System.Configuration.ApplicationSettingsBase>.</span></span> <span data-ttu-id="fd908-133">Каждый класс параметров содержит собственное <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A?displayProperty=nameWithType> свойство, которое помогает устранить неоднозначность нескольких экземпляров этого класса.</span><span class="sxs-lookup"><span data-stu-id="fd908-133">Each settings class contains its own <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A?displayProperty=nameWithType> property, which helps disambiguate multiple instances of that class.</span></span>  
  
-   <span data-ttu-id="fd908-134">Элемент управления должен отделить данные каждого экземпляра и его общие данные с различными классами параметров.</span><span class="sxs-lookup"><span data-stu-id="fd908-134">A control should separate its per-instance data and its shared data into different settings classes.</span></span>  
  
-   <span data-ttu-id="fd908-135">Для элемента управления с любыми данными `get` конфигурации для каждого экземпляра метод доступа <xref:System.Configuration.IPersistComponentSettings.SettingsKey%2A> свойства должен по умолчанию иметь значение <xref:System.Windows.Forms.Control.Name%2A> элемента управления.</span><span class="sxs-lookup"><span data-stu-id="fd908-135">For a control with any per-instance configuration data, the `get` accessor of the <xref:System.Configuration.IPersistComponentSettings.SettingsKey%2A> property should default to the <xref:System.Windows.Forms.Control.Name%2A> of the control.</span></span> <span data-ttu-id="fd908-136">В большинстве случаев имя элемента управления будет уникальным в пределах приложения.</span><span class="sxs-lookup"><span data-stu-id="fd908-136">In most cases the name of the control will be unique within an application.</span></span> <span data-ttu-id="fd908-137">Если элемент управления содержит только общие данные конфигурации, `get` то `null`по умолчанию должен иметь значение.</span><span class="sxs-lookup"><span data-stu-id="fd908-137">If the control contains only shared configuration data, `get` should default to `null`.</span></span>  
  
-   <span data-ttu-id="fd908-138">`set` Метод доступа для этого свойства должен быть реализован для различения классов параметров, содержащих данные конфигурации для каждого экземпляра и общих данных.</span><span class="sxs-lookup"><span data-stu-id="fd908-138">The `set` accessor for this property should be implemented to distinguish between settings classes containing per-instance and shared configuration data.</span></span> <span data-ttu-id="fd908-139">Для каждого класса параметров, содержащего данные для каждого экземпляра `set` , следует просто передать его <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A?displayProperty=nameWithType> свойству класса Settings.</span><span class="sxs-lookup"><span data-stu-id="fd908-139">For each settings class containing per-instance data, `set` should just pass-through to the <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A?displayProperty=nameWithType> property of the settings class.</span></span> <span data-ttu-id="fd908-140">Для классов параметров, содержащих общие данные `set` , не следует предпринимать никаких действий для этого класса параметров.</span><span class="sxs-lookup"><span data-stu-id="fd908-140">For settings classes containing shared data, `set` should perform no action for that settings class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.IPersistComponentSettings.SaveComponentSettings" />
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.SettingsKey" />
        <related type="Article" href="https://msdn.microsoft.com/library/f44afb74-76cc-44f2-890a-44b7cdc211a1"><span data-ttu-id="fd908-141">Параметры приложения для пользовательских элементов управления</span><span class="sxs-lookup"><span data-stu-id="fd908-141">Application Settings for Custom Controls</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
