<Type Name="ElementInformation" FullName="System.Configuration.ElementInformation">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6ca0d9a72a728f062de3ba3b629056fee2be8276" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69378373" /></Metadata><TypeSignature Language="C#" Value="public sealed class ElementInformation" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ElementInformation extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.ElementInformation" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ElementInformation" />
  <TypeSignature Language="C++ CLI" Value="public ref class ElementInformation sealed" />
  <TypeSignature Language="F#" Value="type ElementInformation = class" />
  <AssemblyInfo>
    <AssemblyName>System.Configuration</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Содержит метаинформацию об индивидуальном элементе в пределах конфигурации. Этот класс не наследуется.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Configuration.ElementInformation> Объект содержит метаданные об отдельном элементе в пределах конфигурации. Этот объект может использоваться при проверке и изменении свойств отдельного элемента.  
  
   
  
## Examples  
 В следующем примере показано, как получить <xref:System.Configuration.ElementInformation> <xref:System.Configuration.ConfigurationElement> объект, связанный с объектом.  
  
 [!code-csharp[System.Configuration.ConfigurationElement#80](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/CS/ElementInformation.cs#80)]
 [!code-vb[System.Configuration.ConfigurationElement#80](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/VB/ElementInformation.vb#80)]  
  
 В следующем фрагменте показана конфигурация, используемая в предыдущем примере кода.  
  
```xml  
<?xml version="1.0" encoding="utf-8"?>  
<configuration>  
  <configSections>  
    <section name="MyUrls" type="Samples.AspNet.UrlsSection,  
      ConfigurationElement, Version=1.0.0.0, Culture=neutral,  
      PublicKeyToken=null" allowDefinition="Everywhere"  
      allowExeDefinition="MachineToApplication"  
      restartOnExternalChanges="true" />  
  </configSections>  
  <MyUrls name="MyFavorites">  
    <simple name="Contoso" url="http://www.contoso.com" port="8080" />  
    <urls>  
      <clear />  
      <add name="Microsoft" url="http://www.microsoft.com" port="0" />  
    </urls>  
  </MyUrls>  
</configuration>  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Configuration.ConfigurationElement" />
  </Docs>
  <Members>
    <Member MemberName="Errors">
      <MemberSignature Language="C#" Value="public System.Collections.ICollection Errors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection Errors" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ElementInformation.Errors" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Errors As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ICollection ^ Errors { System::Collections::ICollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Errors : System.Collections.ICollection" Usage="System.Configuration.ElementInformation.Errors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает ошибки для связанного элемента и подэлементов.</summary>
        <value>Коллекция, содержащая ошибки для связанного элемента и подэлементов.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере показано, как использовать <xref:System.Configuration.ElementInformation.Errors%2A> коллекцию.  
  
 [!code-csharp[System.Configuration.ConfigurationElement#89](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/CS/ElementInformation.cs#89)]
 [!code-vb[System.Configuration.ConfigurationElement#89](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/VB/ElementInformation.vb#89)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCollection">
      <MemberSignature Language="C#" Value="public bool IsCollection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCollection" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ElementInformation.IsCollection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsCollection As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsCollection { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsCollection : bool" Usage="System.Configuration.ElementInformation.IsCollection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает значение, указывающее, является ли связанный объект <see cref="T:System.Configuration.ConfigurationElement" /> коллекцией <see cref="T:System.Configuration.ConfigurationElementCollection" />.</summary>
        <value><see langword="true" />, если связанный объект <see cref="T:System.Configuration.ConfigurationElement" /> является коллекцией <see cref="T:System.Configuration.ConfigurationElementCollection" />, иначе <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере показано, как использовать свойство <xref:System.Configuration.ElementInformation.IsCollection%2A>.  
  
 [!code-csharp[System.Configuration.ConfigurationElement#81](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/CS/ElementInformation.cs#81)]
 [!code-vb[System.Configuration.ConfigurationElement#81](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/VB/ElementInformation.vb#81)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLocked">
      <MemberSignature Language="C#" Value="public bool IsLocked { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsLocked" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ElementInformation.IsLocked" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsLocked As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsLocked { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsLocked : bool" Usage="System.Configuration.ElementInformation.IsLocked" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает значение, определяющее, можно ли изменять связанный объект <see cref="T:System.Configuration.ConfigurationElement" />.</summary>
        <value><see langword="true" />, если связанный объект <see cref="T:System.Configuration.ConfigurationElement" /> не может быть изменен, иначе <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Configuration.ConfigurationElement.LockAllAttributesExcept%2A> <xref:System.Configuration.SectionInformation.AllowDefinition%2A> <xref:System.Configuration.SectionInformation.AllowOverride%2A>Свойство возвращает `true` , если связанный элемент заблокирован свойством, или. <xref:System.Configuration.ElementInformation.IsLocked%2A>  
  
   
  
## Examples  
 В следующем примере показано, как использовать свойство <xref:System.Configuration.ElementInformation.IsLocked%2A>.  
  
 [!code-csharp[System.Configuration.ConfigurationElement#82](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/CS/ElementInformation.cs#82)]
 [!code-vb[System.Configuration.ConfigurationElement#82](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/VB/ElementInformation.vb#82)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPresent">
      <MemberSignature Language="C#" Value="public bool IsPresent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPresent" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ElementInformation.IsPresent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsPresent As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPresent { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsPresent : bool" Usage="System.Configuration.ElementInformation.IsPresent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает значение, указывающее, находится ли связанный объект <see cref="T:System.Configuration.ConfigurationElement" /> в файле конфигурации.</summary>
        <value><see langword="true" />, если связанный объект <see cref="T:System.Configuration.ConfigurationElement" /> находится в файле конфигурации, в противном случае — <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере показано, как использовать свойство <xref:System.Configuration.ElementInformation.IsPresent%2A>.  
  
 [!code-csharp[System.Configuration.ConfigurationElement#83](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/CS/ElementInformation.cs#83)]
 [!code-vb[System.Configuration.ConfigurationElement#83](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/VB/ElementInformation.vb#83)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LineNumber">
      <MemberSignature Language="C#" Value="public int LineNumber { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LineNumber" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ElementInformation.LineNumber" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LineNumber As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LineNumber { int get(); };" />
      <MemberSignature Language="F#" Value="member this.LineNumber : int" Usage="System.Configuration.ElementInformation.LineNumber" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает номер строки в файле конфигурации, в котором определен связанный объект <see cref="T:System.Configuration.ConfigurationElement" />.</summary>
        <value>Номер строки в файле конфигурации, в котором определен связанный объект <see cref="T:System.Configuration.ConfigurationElement" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере показано, как использовать свойство <xref:System.Configuration.ElementInformation.LineNumber%2A>.  
  
 [!code-csharp[System.Configuration.ConfigurationElement#84](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/CS/ElementInformation.cs#84)]
 [!code-vb[System.Configuration.ConfigurationElement#84](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/VB/ElementInformation.vb#84)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="public System.Configuration.PropertyInformationCollection Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.PropertyInformationCollection Properties" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ElementInformation.Properties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Properties As PropertyInformationCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Configuration::PropertyInformationCollection ^ Properties { System::Configuration::PropertyInformationCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Properties : System.Configuration.PropertyInformationCollection" Usage="System.Configuration.ElementInformation.Properties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.PropertyInformationCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает коллекцию свойств <see cref="T:System.Configuration.PropertyInformationCollection" /> в связанном объекте <see cref="T:System.Configuration.ConfigurationElement" />.</summary>
        <value>Коллекция свойств <see cref="T:System.Configuration.PropertyInformationCollection" /> в связанном объекте <see cref="T:System.Configuration.ConfigurationElement" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Свойства <xref:System.Configuration.ConfigurationElement> объекта — это атрибуты и подэлементы, связанные с этим элементом конфигурации в файле конфигурации.  
  
   
  
## Examples  
 В следующем примере показано, как получить <xref:System.Configuration.ElementInformation.Properties%2A> коллекцию.  
  
 [!code-csharp[System.Configuration.ConfigurationElement#85](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/CS/ElementInformation.cs#85)]
 [!code-vb[System.Configuration.ConfigurationElement#85](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/VB/ElementInformation.vb#85)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Source">
      <MemberSignature Language="C#" Value="public string Source { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Source" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ElementInformation.Source" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Source As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Source { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Source : string" Usage="System.Configuration.ElementInformation.Source" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает исходный файл, в котором порожден связанный объект <see cref="T:System.Configuration.ConfigurationElement" />.</summary>
        <value>Исходный файл, в котором порожден связанный объект <see cref="T:System.Configuration.ConfigurationElement" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Объект может быть создан в состоянии по умолчанию, в этом случае это свойство возвращает `null`значение. <xref:System.Configuration.ConfigurationElement>  
  
   
  
## Examples  
 В следующем примере показано, как использовать свойство <xref:System.Configuration.ElementInformation.Source%2A>.  
  
 [!code-csharp[System.Configuration.ConfigurationElement#86](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/CS/ElementInformation.cs#86)]
 [!code-vb[System.Configuration.ConfigurationElement#86](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/VB/ElementInformation.vb#86)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public Type Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type Type" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ElementInformation.Type" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Type As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ Type { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Type : Type" Usage="System.Configuration.ElementInformation.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает тип связанного объекта <see cref="T:System.Configuration.ConfigurationElement" />.</summary>
        <value>Тип связанного объекта <see cref="T:System.Configuration.ConfigurationElement" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере показано, как использовать свойство <xref:System.Configuration.ElementInformation.Type%2A>.  
  
 [!code-csharp[System.Configuration.ConfigurationElement#87](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/CS/ElementInformation.cs#87)]
 [!code-vb[System.Configuration.ConfigurationElement#87](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/VB/ElementInformation.vb#87)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Validator">
      <MemberSignature Language="C#" Value="public System.Configuration.ConfigurationValidatorBase Validator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.ConfigurationValidatorBase Validator" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.ElementInformation.Validator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Validator As ConfigurationValidatorBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Configuration::ConfigurationValidatorBase ^ Validator { System::Configuration::ConfigurationValidatorBase ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Validator : System.Configuration.ConfigurationValidatorBase" Usage="System.Configuration.ElementInformation.Validator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationValidatorBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает объект, использовавшийся для проверки связанного объекта <see cref="T:System.Configuration.ConfigurationElement" />.</summary>
        <value>Объект, использовавшийся для проверки связанного объекта <see cref="T:System.Configuration.ConfigurationElement" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Объект проверяющего элемента управления не требуется, и это свойство может `null`возвращать значение.  
  
   
  
## Examples  
 В следующем примере показано, как использовать свойство <xref:System.Configuration.ElementInformation.Validator%2A>.  
  
 [!code-csharp[System.Configuration.ConfigurationElement#88](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/CS/ElementInformation.cs#88)]
 [!code-vb[System.Configuration.ConfigurationElement#88](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationElement/VB/ElementInformation.vb#88)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
