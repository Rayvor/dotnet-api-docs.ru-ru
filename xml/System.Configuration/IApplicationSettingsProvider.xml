<Type Name="IApplicationSettingsProvider" FullName="System.Configuration.IApplicationSettingsProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5ecfb55d491aebcffec9c2baaded2fdfaea35a7b" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75144468" /></Metadata><TypeSignature Language="C#" Value="public interface IApplicationSettingsProvider" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IApplicationSettingsProvider" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.IApplicationSettingsProvider" />
  <TypeSignature Language="VB.NET" Value="Public Interface IApplicationSettingsProvider" />
  <TypeSignature Language="C++ CLI" Value="public interface class IApplicationSettingsProvider" />
  <TypeSignature Language="F#" Value="type IApplicationSettingsProvider = interface" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Определяет расширенные возможности для поставщиков установок для клиентских приложений.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Архитектура параметров приложения позволяет предоставить пользовательский механизм хранения для параметров приложения, создав поставщик настраиваемых параметров, который является классом, производным от <xref:System.Configuration.SettingsProvider>. Такой класс содержит базовую функциональность для хранения и извлечения свойств. Однако можно добавить дополнительные стандартизованные функции, реализовав интерфейс <xref:System.Configuration.IApplicationSettingsProvider> в поставщике пользовательских параметров. Этот интерфейс содержит три метода, которые в основном позволяют поставщику параметров более разумно управлять изменениями версий приложения. Как правило, поставщик параметров хранит параметры приложения для различных версий приложения отдельно, чтобы предвидеть следующие обстоятельства.  
  
-   Параллельное выполнение различных версий приложения.  
  
-   Сохраняйте параметры приложения при обновлении приложения.  
  
-   Сброс параметров приложения к значениям по умолчанию для текущей используемой версии.  
  
 Класс <xref:System.Configuration.LocalFileSettingsProvider> реализует интерфейс <xref:System.Configuration.IApplicationSettingsProvider>. Один и тот же набор методов, содержащихся в <xref:System.Configuration.IApplicationSettingsProvider>, также находится в классе <xref:System.Configuration.ApplicationSettingsBase>, что позволяет устанавливать стандартный коммуникационный канал между оболочкой параметров приложения и поставщиком его параметров.  
  
> [!NOTE]
>  Этот параметр является необязательным. Если поставщик не реализует этот интерфейс, инфраструктура параметров завершится ошибкой без уведомления, если она попытается получить доступ к любому из методов, определенных этим интерфейсом.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Configuration.SettingsProvider" />
    <altmember cref="T:System.Configuration.ApplicationSettingsBase" />
    <related type="Article" href="https://msdn.microsoft.com/library/c8eb2ad0-fac6-4ea2-9140-675a4a44d562">Архитектура параметров приложения</related>
  </Docs>
  <Members>
    <Member MemberName="GetPreviousVersion">
      <MemberSignature Language="C#" Value="public System.Configuration.SettingsPropertyValue GetPreviousVersion (System.Configuration.SettingsContext context, System.Configuration.SettingsProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Configuration.SettingsPropertyValue GetPreviousVersion(class System.Configuration.SettingsContext context, class System.Configuration.SettingsProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.IApplicationSettingsProvider.GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPreviousVersion (context As SettingsContext, property As SettingsProperty) As SettingsPropertyValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Configuration::SettingsPropertyValue ^ GetPreviousVersion(System::Configuration::SettingsContext ^ context, System::Configuration::SettingsProperty ^ property);" />
      <MemberSignature Language="F#" Value="abstract member GetPreviousVersion : System.Configuration.SettingsContext * System.Configuration.SettingsProperty -&gt; System.Configuration.SettingsPropertyValue" Usage="iApplicationSettingsProvider.GetPreviousVersion (context, property)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.SettingsPropertyValue</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Configuration.SettingsContext" />
        <Parameter Name="property" Type="System.Configuration.SettingsProperty" />
      </Parameters>
      <Docs>
        <param name="context">Объект <see cref="T:System.Configuration.SettingsContext" />, описывающий текущее использование приложения.</param>
        <param name="property"><see cref="T:System.Configuration.SettingsProperty" />, значение которого должно быть возвращено.</param>
        <summary>Возвращает значение указанного свойства установок для предыдущей версии того же приложения.</summary>
        <returns>Объект <see cref="T:System.Configuration.SettingsPropertyValue" />, содержащий значение указанного свойства установок, в том виде, как они были в последний раз установлены в предыдущей версии приложения; или <see langword="null" />, если установки не удается найти.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Можно использовать метод <xref:System.Configuration.IApplicationSettingsProvider.GetPreviousVersion%2A> в сочетании с методом <xref:System.Configuration.IApplicationSettingsProvider.Upgrade%2A> для переноса параметров приложения во время или после установки новой версии приложения.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityException">Для <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /> разрешения.</permission>
        <altmember cref="M:System.Configuration.IApplicationSettingsProvider.Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.GetPreviousVersion(System.String)" />
        <related type="Article" href="https://msdn.microsoft.com/library/649f1342-766b-49e6-a90d-5b019a751e11">Параллельное выполнение</related>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset (System.Configuration.SettingsContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset(class System.Configuration.SettingsContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.IApplicationSettingsProvider.Reset(System.Configuration.SettingsContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset (context As SettingsContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reset(System::Configuration::SettingsContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member Reset : System.Configuration.SettingsContext -&gt; unit" Usage="iApplicationSettingsProvider.Reset context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Configuration.SettingsContext" />
      </Parameters>
      <Docs>
        <param name="context">Объект <see cref="T:System.Configuration.SettingsContext" />, описывающий текущее использование приложения.</param>
        <summary>Возвращает установки, связанные с указанным приложением к значениям по умолчанию.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод <xref:System.Configuration.IApplicationSettingsProvider.Reset%2A> повторно инициализирует сохраненные значения указанной группы параметров приложения. В отличие от этого, <xref:System.Configuration.DefaultSettingValueAttribute> предоставляет значение по умолчанию для одного свойства параметров во время инициализации свойства, если оно не имеет сохраненного значения.  
  
 Поставщик параметров определяет, какие разумные значения по умолчанию относятся к указанной группе параметров приложения. Например, реализация в <xref:System.Configuration.LocalFileSettingsProvider> сбрасывает параметры области пользователя с их общими значениями в файле `application.exe.config`; в отличие от этого, параметры области приложения остаются без изменений.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityException">Для <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /> разрешения.</permission>
        <altmember cref="T:System.Configuration.DefaultSettingValueAttribute" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Reset" />
      </Docs>
    </Member>
    <Member MemberName="Upgrade">
      <MemberSignature Language="C#" Value="public void Upgrade (System.Configuration.SettingsContext context, System.Configuration.SettingsPropertyCollection properties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Upgrade(class System.Configuration.SettingsContext context, class System.Configuration.SettingsPropertyCollection properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.IApplicationSettingsProvider.Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Upgrade (context As SettingsContext, properties As SettingsPropertyCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Upgrade(System::Configuration::SettingsContext ^ context, System::Configuration::SettingsPropertyCollection ^ properties);" />
      <MemberSignature Language="F#" Value="abstract member Upgrade : System.Configuration.SettingsContext * System.Configuration.SettingsPropertyCollection -&gt; unit" Usage="iApplicationSettingsProvider.Upgrade (context, properties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Configuration.SettingsContext" />
        <Parameter Name="properties" Type="System.Configuration.SettingsPropertyCollection" />
      </Parameters>
      <Docs>
        <param name="context">Объект <see cref="T:System.Configuration.SettingsContext" />, описывающий текущее использование приложения.</param>
        <param name="properties"><see cref="T:System.Configuration.SettingsPropertyCollection" />, содержащий группу свойств параметров, значения которых необходимо извлечь.</param>
        <summary>Указывает поставщику, что приложение было модернизировано. Это дает поставщику возможность обновлять хранимые параметры подходящим образом.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 .NET Framework обеспечивает параллельную установку и выполнение различных версий одного и того же приложения. Поставщик параметров приложения хранит параметры приложения для каждой версии приложения отдельно, чтобы обеспечить изоляцию. Однако может потребоваться перенести параметры из предыдущей версии приложения в текущую. Чтобы обеспечить эту функцию миграции, используйте метод <xref:System.Configuration.IApplicationSettingsProvider.Upgrade%2A>, реализованный в классе, производном от <xref:System.Configuration.SettingsProvider>.  
  
 Можно использовать метод <xref:System.Configuration.IApplicationSettingsProvider.Upgrade%2A> в сочетании с методом <xref:System.Configuration.IApplicationSettingsProvider.GetPreviousVersion%2A> для переноса параметров приложения во время или после установки новой версии приложения.  
  
 Этот метод следует подавлять для каждого параметра приложения, к которому применяется <xref:System.Configuration.NoSettingsVersionUpgradeAttribute>, или для всего класса-оболочки параметров, производного от <xref:System.Configuration.ApplicationSettingsBase>.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityException">Для <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /> разрешения.</permission>
        <altmember cref="M:System.Configuration.IApplicationSettingsProvider.GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Upgrade" />
        <altmember cref="T:System.Configuration.NoSettingsVersionUpgradeAttribute" />
        <related type="Article" href="https://msdn.microsoft.com/library/649f1342-766b-49e6-a90d-5b019a751e11">Параллельное выполнение</related>
      </Docs>
    </Member>
  </Members>
</Type>
