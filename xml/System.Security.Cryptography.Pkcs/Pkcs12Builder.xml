<Type Name="Pkcs12Builder" FullName="System.Security.Cryptography.Pkcs.Pkcs12Builder">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f99c0113cace64b2e523bfedd5d6cfb1a9812658" /><Meta Name="ms.sourcegitcommit" Value="0084afad1b3b1cb2c8ad2c142ae3597d08bad4a7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="10/31/2019" /><Meta Name="ms.locfileid" Value="73353076" /></Metadata><TypeSignature Language="C#" Value="public sealed class Pkcs12Builder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Pkcs12Builder extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.Pkcs.Pkcs12Builder" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Pkcs12Builder" />
  <TypeSignature Language="C++ CLI" Value="public ref class Pkcs12Builder sealed" />
  <TypeSignature Language="F#" Value="type Pkcs12Builder = class" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
    <AssemblyVersion>4.0.4.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Активирует создание значений данных PKCS#12 PFX. Этот класс не наследуется.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Pkcs12Builder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.Pkcs12Builder.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Pkcs12Builder();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новое значение класса <see cref="T:System.Security.Cryptography.Pkcs.Pkcs12Builder" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddSafeContentsEncrypted">
      <MemberSignature Language="C#" Value="public void AddSafeContentsEncrypted (System.Security.Cryptography.Pkcs.Pkcs12SafeContents safeContents, byte[] passwordBytes, System.Security.Cryptography.PbeParameters pbeParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddSafeContentsEncrypted(class System.Security.Cryptography.Pkcs.Pkcs12SafeContents safeContents, unsigned int8[] passwordBytes, class System.Security.Cryptography.PbeParameters pbeParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.Pkcs12Builder.AddSafeContentsEncrypted(System.Security.Cryptography.Pkcs.Pkcs12SafeContents,System.Byte[],System.Security.Cryptography.PbeParameters)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddSafeContentsEncrypted(System::Security::Cryptography::Pkcs::Pkcs12SafeContents ^ safeContents, cli::array &lt;System::Byte&gt; ^ passwordBytes, System::Security::Cryptography::PbeParameters ^ pbeParameters);" />
      <MemberSignature Language="F#" Value="member this.AddSafeContentsEncrypted : System.Security.Cryptography.Pkcs.Pkcs12SafeContents * byte[] * System.Security.Cryptography.PbeParameters -&gt; unit" Usage="pkcs12Builder.AddSafeContentsEncrypted (safeContents, passwordBytes, pbeParameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="safeContents" Type="System.Security.Cryptography.Pkcs.Pkcs12SafeContents" />
        <Parameter Name="passwordBytes" Type="System.Byte[]" />
        <Parameter Name="pbeParameters" Type="System.Security.Cryptography.PbeParameters" />
      </Parameters>
      <Docs>
        <param name="safeContents">Содержимое, добавляемое в PFX-файл.</param>
        <param name="passwordBytes">Массив байтов, используемый в качестве пароля при шифровании содержимого.</param>
        <param name="pbeParameters">Параметры шифрования на основе пароля (PBE), используемые при шифровании содержимого.</param>
        <summary>Добавляет содержимое в PFX-файл в пакете, зашифрованном с помощью байтового пароля из массива байтов.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Байты паролей передаются непосредственно в функцию формирования ключа (ПОДПРОГРАММ), используемую алгоритмом, указанным в `pbeParameters`.
Это обеспечивает совместимость с другими системами, использующими кодировку текста, отличную от UTF-8, при обработке паролей с помощью PBKDF2 (функция наследования ключа на основе пароля 2).

 Содержимое `safeContents` считывается во время вызова этого метода, шифруется и сохраняется внутренне как зашифрованное содержимое.
Любые изменения <xref:System.Security.Cryptography.Pkcs.Pkcs12SafeContents> или любые <xref:System.Security.Cryptography.Pkcs.Pkcs12SafeBag>, на которые он ссылается после вызова этого метода, не отражаются в окончательном выводе.

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="safeContents" /> или параметра <paramref name="pbeParameters" /> — <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Значение параметра <paramref name="safeContents" /> уже зашифровано.</exception>
        <exception cref="T:System.InvalidOperationException">PFX-файл уже запечатан (<see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Builder.IsSealed" /> является <see langword="true" />).</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><paramref name="pbeParameters" /> указывает, что следует использовать <see cref="F:System.Security.Cryptography.PbeEncryptionAlgorithm.TripleDes3KeyPkcs12" />: это требует паролей на основе <see cref="T:System.Char" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddSafeContentsEncrypted">
      <MemberSignature Language="C#" Value="public void AddSafeContentsEncrypted (System.Security.Cryptography.Pkcs.Pkcs12SafeContents safeContents, ReadOnlySpan&lt;byte&gt; passwordBytes, System.Security.Cryptography.PbeParameters pbeParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddSafeContentsEncrypted(class System.Security.Cryptography.Pkcs.Pkcs12SafeContents safeContents, valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; passwordBytes, class System.Security.Cryptography.PbeParameters pbeParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.Pkcs12Builder.AddSafeContentsEncrypted(System.Security.Cryptography.Pkcs.Pkcs12SafeContents,System.ReadOnlySpan{System.Byte},System.Security.Cryptography.PbeParameters)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddSafeContentsEncrypted(System::Security::Cryptography::Pkcs::Pkcs12SafeContents ^ safeContents, ReadOnlySpan&lt;System::Byte&gt; passwordBytes, System::Security::Cryptography::PbeParameters ^ pbeParameters);" />
      <MemberSignature Language="F#" Value="member this.AddSafeContentsEncrypted : System.Security.Cryptography.Pkcs.Pkcs12SafeContents * ReadOnlySpan&lt;byte&gt; * System.Security.Cryptography.PbeParameters -&gt; unit" Usage="pkcs12Builder.AddSafeContentsEncrypted (safeContents, passwordBytes, pbeParameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="safeContents" Type="System.Security.Cryptography.Pkcs.Pkcs12SafeContents" />
        <Parameter Name="passwordBytes" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="pbeParameters" Type="System.Security.Cryptography.PbeParameters" />
      </Parameters>
      <Docs>
        <param name="safeContents">Содержимое, добавляемое в PFX-файл.</param>
        <param name="passwordBytes">Диапазон байтов, используемый в качестве пароля при шифровании содержимого.</param>
        <param name="pbeParameters">Параметры шифрования на основе пароля (PBE), используемые при шифровании содержимого.</param>
        <summary>Добавляет содержимое в PFX-файл в пакете, зашифрованном с помощью байтового пароля из диапазона.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Байты паролей передаются непосредственно в функцию формирования ключа (ПОДПРОГРАММ), используемую алгоритмом, указанным в `pbeParameters`.
Это обеспечивает совместимость с другими системами, использующими кодировку текста, отличную от UTF-8, при обработке паролей с помощью PBKDF2 (функция наследования ключа на основе пароля 2).

 Содержимое `safeContents` считывается во время вызова этого метода, шифруется и сохраняется внутренне как зашифрованное содержимое.
Любые изменения <xref:System.Security.Cryptography.Pkcs.Pkcs12SafeContents> или любые <xref:System.Security.Cryptography.Pkcs.Pkcs12SafeBag>, на которые он ссылается после вызова этого метода, не отражаются в окончательном выводе.

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="safeContents" /> или параметра <paramref name="pbeParameters" /> — <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Значение параметра <paramref name="safeContents" /> уже зашифровано.</exception>
        <exception cref="T:System.InvalidOperationException">PFX-файл уже запечатан (<see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Builder.IsSealed" /> является <see langword="true" />).</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><paramref name="pbeParameters" /> указывает, что следует использовать <see cref="F:System.Security.Cryptography.PbeEncryptionAlgorithm.TripleDes3KeyPkcs12" />: это требует паролей на основе <see cref="T:System.Char" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddSafeContentsEncrypted">
      <MemberSignature Language="C#" Value="public void AddSafeContentsEncrypted (System.Security.Cryptography.Pkcs.Pkcs12SafeContents safeContents, ReadOnlySpan&lt;char&gt; password, System.Security.Cryptography.PbeParameters pbeParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddSafeContentsEncrypted(class System.Security.Cryptography.Pkcs.Pkcs12SafeContents safeContents, valuetype System.ReadOnlySpan`1&lt;char&gt; password, class System.Security.Cryptography.PbeParameters pbeParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.Pkcs12Builder.AddSafeContentsEncrypted(System.Security.Cryptography.Pkcs.Pkcs12SafeContents,System.ReadOnlySpan{System.Char},System.Security.Cryptography.PbeParameters)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddSafeContentsEncrypted(System::Security::Cryptography::Pkcs::Pkcs12SafeContents ^ safeContents, ReadOnlySpan&lt;char&gt; password, System::Security::Cryptography::PbeParameters ^ pbeParameters);" />
      <MemberSignature Language="F#" Value="member this.AddSafeContentsEncrypted : System.Security.Cryptography.Pkcs.Pkcs12SafeContents * ReadOnlySpan&lt;char&gt; * System.Security.Cryptography.PbeParameters -&gt; unit" Usage="pkcs12Builder.AddSafeContentsEncrypted (safeContents, password, pbeParameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="safeContents" Type="System.Security.Cryptography.Pkcs.Pkcs12SafeContents" />
        <Parameter Name="password" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="pbeParameters" Type="System.Security.Cryptography.PbeParameters" />
      </Parameters>
      <Docs>
        <param name="safeContents">Содержимое, добавляемое в PFX-файл.</param>
        <param name="password">Диапазон, используемый в качестве пароля при шифровании содержимого.</param>
        <param name="pbeParameters">Параметры шифрования на основе пароля (PBE), используемые при шифровании содержимого.</param>
        <summary>Добавляет содержимое в PFX-файл в пакете, зашифрованном с помощью символьного пароля из диапазона.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если `pbeParameters` указывает алгоритм, использующий PBKDF2 (функция формирования ключа на основе пароля 2), то пароль преобразуется в байты через кодировку UTF-8.

 Содержимое `safeContents` считывается во время вызова этого метода, шифруется и сохраняется внутренне как зашифрованное содержимое.
Любые изменения <xref:System.Security.Cryptography.Pkcs.Pkcs12SafeContents> или любые <xref:System.Security.Cryptography.Pkcs.Pkcs12SafeBag>, на которые он ссылается после вызова этого метода, не отражаются в окончательном выводе.

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="safeContents" /> или параметра <paramref name="pbeParameters" /> — <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Значение параметра <paramref name="safeContents" /> уже зашифровано.</exception>
        <exception cref="T:System.InvalidOperationException">PFX-файл уже запечатан (<see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Builder.IsSealed" /> является <see langword="true" />).</exception>
      </Docs>
    </Member>
    <Member MemberName="AddSafeContentsEncrypted">
      <MemberSignature Language="C#" Value="public void AddSafeContentsEncrypted (System.Security.Cryptography.Pkcs.Pkcs12SafeContents safeContents, string password, System.Security.Cryptography.PbeParameters pbeParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddSafeContentsEncrypted(class System.Security.Cryptography.Pkcs.Pkcs12SafeContents safeContents, string password, class System.Security.Cryptography.PbeParameters pbeParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.Pkcs12Builder.AddSafeContentsEncrypted(System.Security.Cryptography.Pkcs.Pkcs12SafeContents,System.String,System.Security.Cryptography.PbeParameters)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddSafeContentsEncrypted(System::Security::Cryptography::Pkcs::Pkcs12SafeContents ^ safeContents, System::String ^ password, System::Security::Cryptography::PbeParameters ^ pbeParameters);" />
      <MemberSignature Language="F#" Value="member this.AddSafeContentsEncrypted : System.Security.Cryptography.Pkcs.Pkcs12SafeContents * string * System.Security.Cryptography.PbeParameters -&gt; unit" Usage="pkcs12Builder.AddSafeContentsEncrypted (safeContents, password, pbeParameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="safeContents" Type="System.Security.Cryptography.Pkcs.Pkcs12SafeContents" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="pbeParameters" Type="System.Security.Cryptography.PbeParameters" />
      </Parameters>
      <Docs>
        <param name="safeContents">Содержимое, добавляемое в PFX-файл.</param>
        <param name="password">Строка, используемая в качестве пароля при шифровании содержимого.</param>
        <param name="pbeParameters">Параметры шифрования на основе пароля (PBE), используемые при шифровании содержимого.</param>
        <summary>Добавляет содержимое в PFX-файл в пакете, зашифрованном с помощью символьного пароля из строки.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если `pbeParameters` указывает алгоритм, использующий PBKDF2 (функция формирования ключа на основе пароля 2), то пароль преобразуется в байты через кодировку UTF-8.

 Содержимое `safeContents` считывается во время вызова этого метода, шифруется и сохраняется внутренне как зашифрованное содержимое.
Любые изменения <xref:System.Security.Cryptography.Pkcs.Pkcs12SafeContents> или любые <xref:System.Security.Cryptography.Pkcs.Pkcs12SafeBag>, на которые он ссылается после вызова этого метода, не отражаются в окончательном выводе.

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="safeContents" /> или параметра <paramref name="pbeParameters" /> — <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Значение параметра <paramref name="safeContents" /> уже зашифровано.</exception>
        <exception cref="T:System.InvalidOperationException">PFX-файл уже запечатан (<see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Builder.IsSealed" /> является <see langword="true" />).</exception>
      </Docs>
    </Member>
    <Member MemberName="AddSafeContentsUnencrypted">
      <MemberSignature Language="C#" Value="public void AddSafeContentsUnencrypted (System.Security.Cryptography.Pkcs.Pkcs12SafeContents safeContents);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddSafeContentsUnencrypted(class System.Security.Cryptography.Pkcs.Pkcs12SafeContents safeContents) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.Pkcs12Builder.AddSafeContentsUnencrypted(System.Security.Cryptography.Pkcs.Pkcs12SafeContents)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddSafeContentsUnencrypted (safeContents As Pkcs12SafeContents)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddSafeContentsUnencrypted(System::Security::Cryptography::Pkcs::Pkcs12SafeContents ^ safeContents);" />
      <MemberSignature Language="F#" Value="member this.AddSafeContentsUnencrypted : System.Security.Cryptography.Pkcs.Pkcs12SafeContents -&gt; unit" Usage="pkcs12Builder.AddSafeContentsUnencrypted safeContents" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="safeContents" Type="System.Security.Cryptography.Pkcs.Pkcs12SafeContents" />
      </Parameters>
      <Docs>
        <param name="safeContents">Содержимое, добавляемое в PFX-файл.</param>
        <summary>Добавляет содержимое в PFX-файл без шифрования.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если `safeContents` значение уже зашифровано, этот метод добавляет его в PFX "как есть".

 Содержимое `safeContents` считывается во время вызова этого метода и сохраняется внутренне как закодированная форма содержимого.
Любые изменения <xref:System.Security.Cryptography.Pkcs.Pkcs12SafeContents> или любые <xref:System.Security.Cryptography.Pkcs.Pkcs12SafeBag>, на которые он ссылается после вызова этого метода, не отражаются в окончательном выводе.

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="safeContents" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">PFX-файл уже запечатан (<see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Builder.IsSealed" /> является <see langword="true" />).</exception>
      </Docs>
    </Member>
    <Member MemberName="Encode">
      <MemberSignature Language="C#" Value="public byte[] Encode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] Encode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.Pkcs12Builder.Encode" />
      <MemberSignature Language="VB.NET" Value="Public Function Encode () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ Encode();" />
      <MemberSignature Language="F#" Value="member this.Encode : unit -&gt; byte[]" Usage="pkcs12Builder.Encode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Кодирует содержимое запечатанного PFX-файла и возвращает его в виде массива байтов.</summary>
        <returns>Массив байтов, представляющий закодированную форму PFX.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="Overload:System.Security.Cryptography.Pkcs.Pkcs12Builder.SealWithMac" />
        <altmember cref="M:System.Security.Cryptography.Pkcs.Pkcs12Builder.SealWithoutIntegrity" />
        <exception cref="T:System.InvalidOperationException">PFX-файл не запечатан (<see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Builder.IsSealed" /> имеет значение <see langword="false" />).</exception>
      </Docs>
    </Member>
    <Member MemberName="IsSealed">
      <MemberSignature Language="C#" Value="public bool IsSealed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSealed" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Pkcs.Pkcs12Builder.IsSealed" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSealed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSealed { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSealed : bool" Usage="System.Security.Cryptography.Pkcs.Pkcs12Builder.IsSealed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает значение, указывающее, были ли запечатаны данные PFX.</summary>
        <value>Значение, указывающее, были ли запечатаны данные PFX.</value>
        <remarks>To be added.</remarks>
        <altmember cref="Overload:System.Security.Cryptography.Pkcs.Pkcs12Builder.SealWithMac" />
        <altmember cref="M:System.Security.Cryptography.Pkcs.Pkcs12Builder.SealWithoutIntegrity" />
      </Docs>
    </Member>
    <Member MemberName="SealWithMac">
      <MemberSignature Language="C#" Value="public void SealWithMac (ReadOnlySpan&lt;char&gt; password, System.Security.Cryptography.HashAlgorithmName hashAlgorithm, int iterationCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SealWithMac(valuetype System.ReadOnlySpan`1&lt;char&gt; password, valuetype System.Security.Cryptography.HashAlgorithmName hashAlgorithm, int32 iterationCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.Pkcs12Builder.SealWithMac(System.ReadOnlySpan{System.Char},System.Security.Cryptography.HashAlgorithmName,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SealWithMac (password As ReadOnlySpan(Of Char), hashAlgorithm As HashAlgorithmName, iterationCount As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SealWithMac(ReadOnlySpan&lt;char&gt; password, System::Security::Cryptography::HashAlgorithmName hashAlgorithm, int iterationCount);" />
      <MemberSignature Language="F#" Value="member this.SealWithMac : ReadOnlySpan&lt;char&gt; * System.Security.Cryptography.HashAlgorithmName * int -&gt; unit" Usage="pkcs12Builder.SealWithMac (password, hashAlgorithm, iterationCount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="password" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="hashAlgorithm" Type="System.Security.Cryptography.HashAlgorithmName" />
        <Parameter Name="iterationCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="password">Пароль, используемый в качестве ключа для вычисления MAC.</param>
        <param name="hashAlgorithm">Хэш-алгоритм, используемый при вычислении MAC.</param>
        <param name="iterationCount">Число итераций для функции формирования ключа (KDF), используемой при вычислении MAC.</param>
        <summary>Запечатывает данные PFX во избежание дальнейших изменений, применяя к содержимому код проверки подлинности сообщения (MAC) на основе пароля из диапазона.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

 Любой алгоритм хэширования, принимаемый этим методом, может обрабатываться классом <xref:System.Security.Cryptography.Pkcs.Pkcs12Info>.
Некоторые варианты алгоритма хэширования могут вызвать сбои в <xref:System.Security.Cryptography.X509Certificates.X509Certificate2.%23ctor%2A> или <xref:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Import%2A?displayProperty=nameWithType> в некоторых операционных системах, так как эти методы зависят от системных библиотек для поддержки.

 Хэш-алгоритм, используемый в новой установке Windows 7 при экспорте с помощью <xref:System.Security.Cryptography.X509Certificates.X509Certificate.Export%2A?displayProperty=nameWithtype> в качестве PFX-файла PKCS # 12, <xref:System.Security.Cryptography.HashAlgorithmName.SHA1> с числом итераций 2000.
Из-за проблем с алгоритмом SHA1 Корпорация Майкрософт рекомендует использовать модель безопасности на основе SHA256 или более высокого уровня. Однако некоторые модули чтения PFX могут поддерживать только SHA1.

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="iterationCount" /> не больше нуля.</exception>
        <exception cref="T:System.InvalidOperationException">PFX-файл уже запечатан (<see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Builder.IsSealed" /> является <see langword="true" />).</exception>
      </Docs>
    </Member>
    <Member MemberName="SealWithMac">
      <MemberSignature Language="C#" Value="public void SealWithMac (string password, System.Security.Cryptography.HashAlgorithmName hashAlgorithm, int iterationCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SealWithMac(string password, valuetype System.Security.Cryptography.HashAlgorithmName hashAlgorithm, int32 iterationCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.Pkcs12Builder.SealWithMac(System.String,System.Security.Cryptography.HashAlgorithmName,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SealWithMac (password As String, hashAlgorithm As HashAlgorithmName, iterationCount As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SealWithMac(System::String ^ password, System::Security::Cryptography::HashAlgorithmName hashAlgorithm, int iterationCount);" />
      <MemberSignature Language="F#" Value="member this.SealWithMac : string * System.Security.Cryptography.HashAlgorithmName * int -&gt; unit" Usage="pkcs12Builder.SealWithMac (password, hashAlgorithm, iterationCount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="hashAlgorithm" Type="System.Security.Cryptography.HashAlgorithmName" />
        <Parameter Name="iterationCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="password">Пароль, используемый в качестве ключа для вычисления MAC.</param>
        <param name="hashAlgorithm">Хэш-алгоритм, используемый при вычислении MAC.</param>
        <param name="iterationCount">Число итераций для функции формирования ключа (KDF), используемой при вычислении MAC.</param>
        <summary>Запечатывает PFX во избежание дальнейших изменений, применяя к содержимому код проверки подлинности сообщения (MAC) на основе пароля из строки.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

 Любой алгоритм хэширования, принимаемый этим методом, может обрабатываться классом <xref:System.Security.Cryptography.Pkcs.Pkcs12Info>.
Некоторые варианты алгоритма хэширования могут вызвать сбои в <xref:System.Security.Cryptography.X509Certificates.X509Certificate2.%23ctor%2A> или <xref:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Import%2A?displayProperty=nameWithType> в некоторых операционных системах, так как эти методы зависят от системных библиотек для поддержки.

 Хэш-алгоритм, используемый в новой установке Windows 7 при экспорте с помощью <xref:System.Security.Cryptography.X509Certificates.X509Certificate.Export%2A?displayProperty=nameWithType> в качестве PFX-файла PKCS # 12, <xref:System.Security.Cryptography.HashAlgorithmName.SHA1> с числом итераций 2000.
Из-за проблем с алгоритмом SHA1 Корпорация Майкрософт рекомендует использовать модель безопасности на основе SHA256 или более высокого уровня. Однако некоторые модули чтения PFX могут поддерживать только SHA1.

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="iterationCount" /> не больше нуля.</exception>
        <exception cref="T:System.InvalidOperationException">PFX-файл уже запечатан (<see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Builder.IsSealed" /> является <see langword="true" />).</exception>
      </Docs>
    </Member>
    <Member MemberName="SealWithoutIntegrity">
      <MemberSignature Language="C#" Value="public void SealWithoutIntegrity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SealWithoutIntegrity() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.Pkcs12Builder.SealWithoutIntegrity" />
      <MemberSignature Language="VB.NET" Value="Public Sub SealWithoutIntegrity ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SealWithoutIntegrity();" />
      <MemberSignature Language="F#" Value="member this.SealWithoutIntegrity : unit -&gt; unit" Usage="pkcs12Builder.SealWithoutIntegrity " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Запечатывает PFX во избежание внесения дальнейших изменений без применения защиты от изменения.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

 Этот метод существует для совместимости с спецификацией PKCS # 12, но его использование не рекомендуется в целях, отличных от тестирования.
При создании PFX, который может использоваться перегрузками <xref:System.Security.Cryptography.X509Certificates.X509Certificate2.%23ctor%2A> или <xref:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Import%2A?displayProperty=nameWithType>, которые не принимают параметр пароля, используйте метод <xref:System.Security.Cryptography.Pkcs.Pkcs12Builder.SealWithMac(System.String,System.Security.Cryptography.HashAlgorithmName,System.Int32)> с <xref:System.String.Empty?displayProperty=nameWithType> в качестве пароля.

 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">PFX-файл уже запечатан (<see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Builder.IsSealed" /> является <see langword="true" />).</exception>
      </Docs>
    </Member>
    <Member MemberName="TryEncode">
      <MemberSignature Language="C#" Value="public bool TryEncode (Span&lt;byte&gt; destination, out int bytesWritten);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryEncode(valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesWritten) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.Pkcs12Builder.TryEncode(System.Span{System.Byte},System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryEncode (destination As Span(Of Byte), ByRef bytesWritten As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryEncode(Span&lt;System::Byte&gt; destination, [Runtime::InteropServices::Out] int % bytesWritten);" />
      <MemberSignature Language="F#" Value="member this.TryEncode : Span&lt;byte&gt; * int -&gt; bool" Usage="pkcs12Builder.TryEncode (destination, bytesWritten)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="destination">Диапазон байтов для получения данных PKCS#12 PFX.</param>
        <param name="bytesWritten">При возврате метода содержит значение, которое показывает количество байтов, записанных в <paramref name="destination" />. Этот параметр обрабатывается как неинициализированный.</param>
        <summary>Пытается закодировать содержимое запечатанного PFX-файла в предоставленный буфер.</summary>
        <returns><see langword="true" />, если размер <paramref name="destination" /> достаточно велик, чтобы вместить выходные данные; в противном случае — <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">PFX-файл не запечатан (<see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Builder.IsSealed" /> имеет значение <see langword="false" />).</exception>
      </Docs>
    </Member>
  </Members>
</Type>
