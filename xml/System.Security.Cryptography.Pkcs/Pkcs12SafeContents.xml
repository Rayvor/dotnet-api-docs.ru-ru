<Type Name="Pkcs12SafeContents" FullName="System.Security.Cryptography.Pkcs.Pkcs12SafeContents">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9d793b9f9dada59a0ceefe92a49d06d18d7bfee3" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69263656" /></Metadata><TypeSignature Language="C#" Value="public sealed class Pkcs12SafeContents" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Pkcs12SafeContents extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.Pkcs.Pkcs12SafeContents" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Pkcs12SafeContents" />
  <TypeSignature Language="C++ CLI" Value="public ref class Pkcs12SafeContents sealed" />
  <TypeSignature Language="F#" Value="type Pkcs12SafeContents = class" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
    <AssemblyVersion>4.0.4.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Представляет значение PKCS#12 SafeContents. Этот класс не наследуется.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Pkcs12SafeContents ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Pkcs12SafeContents();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Security.Cryptography.Pkcs.Pkcs12SafeContents" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddCertificate">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.Pkcs.Pkcs12CertBag AddCertificate (System.Security.Cryptography.X509Certificates.X509Certificate2 certificate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.Cryptography.Pkcs.Pkcs12CertBag AddCertificate(class System.Security.Cryptography.X509Certificates.X509Certificate2 certificate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.AddCertificate(System.Security.Cryptography.X509Certificates.X509Certificate2)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddCertificate (certificate As X509Certificate2) As Pkcs12CertBag" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::Cryptography::Pkcs::Pkcs12CertBag ^ AddCertificate(System::Security::Cryptography::X509Certificates::X509Certificate2 ^ certificate);" />
      <MemberSignature Language="F#" Value="member this.AddCertificate : System.Security.Cryptography.X509Certificates.X509Certificate2 -&gt; System.Security.Cryptography.Pkcs.Pkcs12CertBag" Usage="pkcs12SafeContents.AddCertificate certificate" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Pkcs.Pkcs12CertBag</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate2" />
      </Parameters>
      <Docs>
        <param name="certificate">Добавляемый сертификат.</param>
        <summary>Добавляет в SafeContents сертификат с помощью нового класса <see cref="T:System.Security.Cryptography.Pkcs.Pkcs12CertBag" /> и возвращает созданный экземпляр контейнера.</summary>
        <returns>Экземпляр контейнера, который был добавлен в SafeContents.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="certificate" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Этот экземпляр доступен только для чтения.</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">Параметр <paramref name="certificate" /> находится в недопустимом состоянии.</exception>
        <altmember cref="P:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.IsReadOnly" />
      </Docs>
    </Member>
    <Member MemberName="AddKeyUnencrypted">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.Pkcs.Pkcs12KeyBag AddKeyUnencrypted (System.Security.Cryptography.AsymmetricAlgorithm key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.Cryptography.Pkcs.Pkcs12KeyBag AddKeyUnencrypted(class System.Security.Cryptography.AsymmetricAlgorithm key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.AddKeyUnencrypted(System.Security.Cryptography.AsymmetricAlgorithm)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddKeyUnencrypted (key As AsymmetricAlgorithm) As Pkcs12KeyBag" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::Cryptography::Pkcs::Pkcs12KeyBag ^ AddKeyUnencrypted(System::Security::Cryptography::AsymmetricAlgorithm ^ key);" />
      <MemberSignature Language="F#" Value="member this.AddKeyUnencrypted : System.Security.Cryptography.AsymmetricAlgorithm -&gt; System.Security.Cryptography.Pkcs.Pkcs12KeyBag" Usage="pkcs12SafeContents.AddKeyUnencrypted key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Pkcs.Pkcs12KeyBag</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Security.Cryptography.AsymmetricAlgorithm" />
      </Parameters>
      <Docs>
        <param name="key">Добавляемый асимметричный закрытый ключ.</param>
        <summary>Добавляет в SafeContents асимметричный закрытый ключ с помощью нового класса <see cref="T:System.Security.Cryptography.Pkcs.Pkcs12KeyBag" /> и возвращает созданный экземпляр контейнера.</summary>
        <returns>Экземпляр контейнера, который был добавлен в SafeContents.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="key" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Этот экземпляр доступен только для чтения.</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">Не удалось выполнить экспорт ключа.</exception>
        <altmember cref="P:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.IsReadOnly" />
        <altmember cref="Overload:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.AddShroudedKey" />
        <altmember cref="M:System.Security.Cryptography.AsymmetricAlgorithm.ExportPkcs8PrivateKey()" />
      </Docs>
    </Member>
    <Member MemberName="AddNestedContents">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.Pkcs.Pkcs12SafeContentsBag AddNestedContents (System.Security.Cryptography.Pkcs.Pkcs12SafeContents safeContents);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.Cryptography.Pkcs.Pkcs12SafeContentsBag AddNestedContents(class System.Security.Cryptography.Pkcs.Pkcs12SafeContents safeContents) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.AddNestedContents(System.Security.Cryptography.Pkcs.Pkcs12SafeContents)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddNestedContents (safeContents As Pkcs12SafeContents) As Pkcs12SafeContentsBag" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::Cryptography::Pkcs::Pkcs12SafeContentsBag ^ AddNestedContents(System::Security::Cryptography::Pkcs::Pkcs12SafeContents ^ safeContents);" />
      <MemberSignature Language="F#" Value="member this.AddNestedContents : System.Security.Cryptography.Pkcs.Pkcs12SafeContents -&gt; System.Security.Cryptography.Pkcs.Pkcs12SafeContentsBag" Usage="pkcs12SafeContents.AddNestedContents safeContents" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Pkcs.Pkcs12SafeContentsBag</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="safeContents" Type="System.Security.Cryptography.Pkcs.Pkcs12SafeContents" />
      </Parameters>
      <Docs>
        <param name="safeContents">Вложенное содержимое, добавляемое в SafeContents.</param>
        <summary>Добавляет в SafeContents вложенное содержимое SafeContents с помощью нового класса <see cref="T:System.Security.Cryptography.Pkcs.Pkcs12SafeContentsBag" /> и возвращает созданный экземпляр контейнера.</summary>
        <returns>Экземпляр контейнера, который был добавлен в SafeContents.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

 Этот метод обрабатывает содержимое `safeContents` параметра в новом экземпляре, доступном только для чтения.
Любые изменения значения, переданного в качестве `safeContents` параметра после вызова этого метода, не будут влиять на этот экземпляр.
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="safeContents" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Параметр <paramref name="safeContents" /> зашифрован.</exception>
        <exception cref="T:System.InvalidOperationException">Этот экземпляр доступен только для чтения.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddSafeBag">
      <MemberSignature Language="C#" Value="public void AddSafeBag (System.Security.Cryptography.Pkcs.Pkcs12SafeBag safeBag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddSafeBag(class System.Security.Cryptography.Pkcs.Pkcs12SafeBag safeBag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.AddSafeBag(System.Security.Cryptography.Pkcs.Pkcs12SafeBag)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddSafeBag (safeBag As Pkcs12SafeBag)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddSafeBag(System::Security::Cryptography::Pkcs::Pkcs12SafeBag ^ safeBag);" />
      <MemberSignature Language="F#" Value="member this.AddSafeBag : System.Security.Cryptography.Pkcs.Pkcs12SafeBag -&gt; unit" Usage="pkcs12SafeContents.AddSafeBag safeBag" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="safeBag" Type="System.Security.Cryptography.Pkcs.Pkcs12SafeBag" />
      </Parameters>
      <Docs>
        <param name="safeBag">Добавляемое значение SafeBag.</param>
        <summary>Добавляет в SafeContents контейнер SafeBag.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 В отличие от других методов, которые добавляют Сафебаг в Сафеконтентс, этот метод добавляет контейнер "Live" и последующие изменения входного параметра отражаются в окончательно закодированном выходных данных.
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="safeBag" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Этот экземпляр доступен только для чтения.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddSecret">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.Pkcs.Pkcs12SecretBag AddSecret (System.Security.Cryptography.Oid secretType, ReadOnlyMemory&lt;byte&gt; secretValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.Cryptography.Pkcs.Pkcs12SecretBag AddSecret(class System.Security.Cryptography.Oid secretType, valuetype System.ReadOnlyMemory`1&lt;unsigned int8&gt; secretValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.AddSecret(System.Security.Cryptography.Oid,System.ReadOnlyMemory{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Function AddSecret (secretType As Oid, secretValue As ReadOnlyMemory(Of Byte)) As Pkcs12SecretBag" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::Cryptography::Pkcs::Pkcs12SecretBag ^ AddSecret(System::Security::Cryptography::Oid ^ secretType, ReadOnlyMemory&lt;System::Byte&gt; secretValue);" />
      <MemberSignature Language="F#" Value="member this.AddSecret : System.Security.Cryptography.Oid * ReadOnlyMemory&lt;byte&gt; -&gt; System.Security.Cryptography.Pkcs.Pkcs12SecretBag" Usage="pkcs12SafeContents.AddSecret (secretType, secretValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Pkcs.Pkcs12SecretBag</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="secretType" Type="System.Security.Cryptography.Oid" />
        <Parameter Name="secretValue" Type="System.ReadOnlyMemory&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="secretType">Идентификатор объекта (OID), который определяет тип данных секретного значения.</param>
        <param name="secretValue">Значение в BER-кодировке, представляющее секрет, который нужно добавить.</param>
        <summary>Добавляет в SafeContents значение в ASN.1 BER-кодировке с указанным идентификатором типа с помощью нового класса <see cref="T:System.Security.Cryptography.Pkcs.Pkcs12SecretBag" /> и возвращает созданный экземпляр контейнера.</summary>
        <returns>Экземпляр контейнера, который был добавлен в SafeContents.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="secretType" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Этот экземпляр доступен только для чтения.</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">Параметр <paramref name="secretValue" /> не представляет одиночное значение в кодировке ASN.1 BER.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddShroudedKey">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.Pkcs.Pkcs12ShroudedKeyBag AddShroudedKey (System.Security.Cryptography.AsymmetricAlgorithm key, byte[] passwordBytes, System.Security.Cryptography.PbeParameters pbeParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.Cryptography.Pkcs.Pkcs12ShroudedKeyBag AddShroudedKey(class System.Security.Cryptography.AsymmetricAlgorithm key, unsigned int8[] passwordBytes, class System.Security.Cryptography.PbeParameters pbeParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.AddShroudedKey(System.Security.Cryptography.AsymmetricAlgorithm,System.Byte[],System.Security.Cryptography.PbeParameters)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::Cryptography::Pkcs::Pkcs12ShroudedKeyBag ^ AddShroudedKey(System::Security::Cryptography::AsymmetricAlgorithm ^ key, cli::array &lt;System::Byte&gt; ^ passwordBytes, System::Security::Cryptography::PbeParameters ^ pbeParameters);" />
      <MemberSignature Language="F#" Value="member this.AddShroudedKey : System.Security.Cryptography.AsymmetricAlgorithm * byte[] * System.Security.Cryptography.PbeParameters -&gt; System.Security.Cryptography.Pkcs.Pkcs12ShroudedKeyBag" Usage="pkcs12SafeContents.AddShroudedKey (key, passwordBytes, pbeParameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Pkcs.Pkcs12ShroudedKeyBag</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Security.Cryptography.AsymmetricAlgorithm" />
        <Parameter Name="passwordBytes" Type="System.Byte[]" />
        <Parameter Name="pbeParameters" Type="System.Security.Cryptography.PbeParameters" />
      </Parameters>
      <Docs>
        <param name="key">Добавляемый асимметричный закрытый ключ.</param>
        <param name="passwordBytes">Байты, используемые в качестве пароля при шифровании материала ключа.</param>
        <param name="pbeParameters">Параметры шифрования на основе пароля (PBE), используемые при шифровании материала ключа.</param>
        <summary>Добавляет в SafeContents зашифрованный асимметричный закрытый ключ из байтового пароля в массиве с помощью нового класса <see cref="T:System.Security.Cryptography.Pkcs.Pkcs12ShroudedKeyBag" /> и возвращает созданный экземпляр контейнера.</summary>
        <returns>Экземпляр контейнера, который был добавлен в SafeContents.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="key" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Этот экземпляр доступен только для чтения.</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">Не удалось выполнить экспорт ключа.</exception>
        <altmember cref="P:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.IsReadOnly" />
        <altmember cref="Overload:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.AddShroudedKey" />
        <altmember cref="M:System.Security.Cryptography.AsymmetricAlgorithm.ExportEncryptedPkcs8PrivateKey(System.ReadOnlySpan{System.Byte}, System.Security.Cryptography.PbeParameters)" />
      </Docs>
    </Member>
    <Member MemberName="AddShroudedKey">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.Pkcs.Pkcs12ShroudedKeyBag AddShroudedKey (System.Security.Cryptography.AsymmetricAlgorithm key, ReadOnlySpan&lt;byte&gt; passwordBytes, System.Security.Cryptography.PbeParameters pbeParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.Cryptography.Pkcs.Pkcs12ShroudedKeyBag AddShroudedKey(class System.Security.Cryptography.AsymmetricAlgorithm key, valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; passwordBytes, class System.Security.Cryptography.PbeParameters pbeParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.AddShroudedKey(System.Security.Cryptography.AsymmetricAlgorithm,System.ReadOnlySpan{System.Byte},System.Security.Cryptography.PbeParameters)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::Cryptography::Pkcs::Pkcs12ShroudedKeyBag ^ AddShroudedKey(System::Security::Cryptography::AsymmetricAlgorithm ^ key, ReadOnlySpan&lt;System::Byte&gt; passwordBytes, System::Security::Cryptography::PbeParameters ^ pbeParameters);" />
      <MemberSignature Language="F#" Value="member this.AddShroudedKey : System.Security.Cryptography.AsymmetricAlgorithm * ReadOnlySpan&lt;byte&gt; * System.Security.Cryptography.PbeParameters -&gt; System.Security.Cryptography.Pkcs.Pkcs12ShroudedKeyBag" Usage="pkcs12SafeContents.AddShroudedKey (key, passwordBytes, pbeParameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Pkcs.Pkcs12ShroudedKeyBag</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Security.Cryptography.AsymmetricAlgorithm" />
        <Parameter Name="passwordBytes" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="pbeParameters" Type="System.Security.Cryptography.PbeParameters" />
      </Parameters>
      <Docs>
        <param name="key">Добавляемый асимметричный закрытый ключ.</param>
        <param name="passwordBytes">Байты, используемые в качестве пароля при шифровании материала ключа.</param>
        <param name="pbeParameters">Параметры шифрования на основе пароля (PBE), используемые при шифровании материала ключа.</param>
        <summary>Добавляет в SafeContents зашифрованный асимметричный закрытый ключ из байтового пароля в диапазоне с помощью нового класса <see cref="T:System.Security.Cryptography.Pkcs.Pkcs12ShroudedKeyBag" /> и возвращает созданный экземпляр контейнера.</summary>
        <returns>Экземпляр контейнера, который был добавлен в SafeContents.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="key" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Этот экземпляр доступен только для чтения.</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">Не удалось выполнить экспорт ключа.</exception>
        <altmember cref="P:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.IsReadOnly" />
        <altmember cref="Overload:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.AddShroudedKey" />
        <altmember cref="M:System.Security.Cryptography.AsymmetricAlgorithm.ExportEncryptedPkcs8PrivateKey(System.ReadOnlySpan{System.Byte}, System.Security.Cryptography.PbeParameters)" />
      </Docs>
    </Member>
    <Member MemberName="AddShroudedKey">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.Pkcs.Pkcs12ShroudedKeyBag AddShroudedKey (System.Security.Cryptography.AsymmetricAlgorithm key, ReadOnlySpan&lt;char&gt; password, System.Security.Cryptography.PbeParameters pbeParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.Cryptography.Pkcs.Pkcs12ShroudedKeyBag AddShroudedKey(class System.Security.Cryptography.AsymmetricAlgorithm key, valuetype System.ReadOnlySpan`1&lt;char&gt; password, class System.Security.Cryptography.PbeParameters pbeParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.AddShroudedKey(System.Security.Cryptography.AsymmetricAlgorithm,System.ReadOnlySpan{System.Char},System.Security.Cryptography.PbeParameters)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::Cryptography::Pkcs::Pkcs12ShroudedKeyBag ^ AddShroudedKey(System::Security::Cryptography::AsymmetricAlgorithm ^ key, ReadOnlySpan&lt;char&gt; password, System::Security::Cryptography::PbeParameters ^ pbeParameters);" />
      <MemberSignature Language="F#" Value="member this.AddShroudedKey : System.Security.Cryptography.AsymmetricAlgorithm * ReadOnlySpan&lt;char&gt; * System.Security.Cryptography.PbeParameters -&gt; System.Security.Cryptography.Pkcs.Pkcs12ShroudedKeyBag" Usage="pkcs12SafeContents.AddShroudedKey (key, password, pbeParameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Pkcs.Pkcs12ShroudedKeyBag</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Security.Cryptography.AsymmetricAlgorithm" />
        <Parameter Name="password" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="pbeParameters" Type="System.Security.Cryptography.PbeParameters" />
      </Parameters>
      <Docs>
        <param name="key">Добавляемый асимметричный закрытый ключ.</param>
        <param name="password">Пароль, используемый при шифровании материала ключа.</param>
        <param name="pbeParameters">Параметры шифрования на основе пароля (PBE), используемые при шифровании материала ключа.</param>
        <summary>Добавляет в SafeContents зашифрованный асимметричный закрытый ключ из символьного пароля в диапазоне с помощью нового класса <see cref="T:System.Security.Cryptography.Pkcs.Pkcs12ShroudedKeyBag" /> и возвращает созданный экземпляр контейнера.</summary>
        <returns>Экземпляр контейнера, который был добавлен в SafeContents.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="key" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Этот экземпляр доступен только для чтения.</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">Не удалось выполнить экспорт ключа.</exception>
        <altmember cref="P:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.IsReadOnly" />
        <altmember cref="Overload:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.AddShroudedKey" />
        <altmember cref="M:System.Security.Cryptography.AsymmetricAlgorithm.ExportEncryptedPkcs8PrivateKey(System.ReadOnlySpan{System.Char}, System.Security.Cryptography.PbeParameters)" />
      </Docs>
    </Member>
    <Member MemberName="AddShroudedKey">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.Pkcs.Pkcs12ShroudedKeyBag AddShroudedKey (System.Security.Cryptography.AsymmetricAlgorithm key, string password, System.Security.Cryptography.PbeParameters pbeParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.Cryptography.Pkcs.Pkcs12ShroudedKeyBag AddShroudedKey(class System.Security.Cryptography.AsymmetricAlgorithm key, string password, class System.Security.Cryptography.PbeParameters pbeParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.AddShroudedKey(System.Security.Cryptography.AsymmetricAlgorithm,System.String,System.Security.Cryptography.PbeParameters)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::Cryptography::Pkcs::Pkcs12ShroudedKeyBag ^ AddShroudedKey(System::Security::Cryptography::AsymmetricAlgorithm ^ key, System::String ^ password, System::Security::Cryptography::PbeParameters ^ pbeParameters);" />
      <MemberSignature Language="F#" Value="member this.AddShroudedKey : System.Security.Cryptography.AsymmetricAlgorithm * string * System.Security.Cryptography.PbeParameters -&gt; System.Security.Cryptography.Pkcs.Pkcs12ShroudedKeyBag" Usage="pkcs12SafeContents.AddShroudedKey (key, password, pbeParameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Pkcs.Pkcs12ShroudedKeyBag</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Security.Cryptography.AsymmetricAlgorithm" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="pbeParameters" Type="System.Security.Cryptography.PbeParameters" />
      </Parameters>
      <Docs>
        <param name="key">Добавляемый асимметричный закрытый ключ.</param>
        <param name="password">Пароль, используемый при шифровании материала ключа.</param>
        <param name="pbeParameters">Параметры шифрования на основе пароля (PBE), используемые при шифровании материала ключа.</param>
        <summary>Добавляет в SafeContents зашифрованный асимметричный закрытый ключ из символьного пароля в строке с помощью нового класса <see cref="T:System.Security.Cryptography.Pkcs.Pkcs12ShroudedKeyBag" /> и возвращает созданный экземпляр контейнера.</summary>
        <returns>Экземпляр контейнера, который был добавлен в SafeContents.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="key" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Этот экземпляр доступен только для чтения.</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">Не удалось выполнить экспорт ключа.</exception>
        <altmember cref="P:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.IsReadOnly" />
        <altmember cref="Overload:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.AddShroudedKey" />
        <altmember cref="M:System.Security.Cryptography.AsymmetricAlgorithm.ExportEncryptedPkcs8PrivateKey(System.ReadOnlySpan{System.Char}, System.Security.Cryptography.PbeParameters)" />
      </Docs>
    </Member>
    <Member MemberName="ConfidentialityMode">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.Pkcs.Pkcs12ConfidentialityMode ConfidentialityMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Cryptography.Pkcs.Pkcs12ConfidentialityMode ConfidentialityMode" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.ConfidentialityMode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConfidentialityMode As Pkcs12ConfidentialityMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::Pkcs::Pkcs12ConfidentialityMode ConfidentialityMode { System::Security::Cryptography::Pkcs::Pkcs12ConfidentialityMode get(); };" />
      <MemberSignature Language="F#" Value="member this.ConfidentialityMode : System.Security.Cryptography.Pkcs.Pkcs12ConfidentialityMode" Usage="System.Security.Cryptography.Pkcs.Pkcs12SafeContents.ConfidentialityMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Pkcs.Pkcs12ConfidentialityMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает значение, указывающее тип шифрования, применяемого к содержимому.</summary>
        <value>Одно из значений перечисления, указывающее тип шифрования, применяемого к содержимому. Значение по умолчанию — <see cref="F:System.Security.Cryptography.Pkcs.Pkcs12ConfidentialityMode.None" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Decrypt">
      <MemberSignature Language="C#" Value="public void Decrypt (byte[] passwordBytes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Decrypt(unsigned int8[] passwordBytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.Decrypt(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub Decrypt (passwordBytes As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Decrypt(cli::array &lt;System::Byte&gt; ^ passwordBytes);" />
      <MemberSignature Language="F#" Value="member this.Decrypt : byte[] -&gt; unit" Usage="pkcs12SafeContents.Decrypt passwordBytes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="passwordBytes" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="passwordBytes">Байты, используемые в качестве пароля для расшифровки зашифрованного содержимого.</param>
        <summary>Расшифровывает содержимое этого значения SafeContents, используя байтовый пароль из массива.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Байты паролей передаются непосредственно в функцию формирования ключа (ПОДПРОГРАММ), используемую алгоритмом, указанным в зашифрованном содержимом.
Это обеспечивает совместимость с другими системами, использующими кодировку текста, отличную от UTF-8, при обработке паролей с помощью PBKDF2 (функция наследования ключа на основе пароля 2).

 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Свойство <see cref="P:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.ConfidentialityMode" /> не равно <see cref="F:System.Security.Cryptography.Pkcs.Pkcs12ConfidentialityMode.Password" />.</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">Неправильный пароль.

- или -

Содержимое не было успешно расшифровано.</exception>
      </Docs>
    </Member>
    <Member MemberName="Decrypt">
      <MemberSignature Language="C#" Value="public void Decrypt (ReadOnlySpan&lt;byte&gt; passwordBytes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Decrypt(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; passwordBytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.Decrypt(System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Sub Decrypt (passwordBytes As ReadOnlySpan(Of Byte))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Decrypt(ReadOnlySpan&lt;System::Byte&gt; passwordBytes);" />
      <MemberSignature Language="F#" Value="member this.Decrypt : ReadOnlySpan&lt;byte&gt; -&gt; unit" Usage="pkcs12SafeContents.Decrypt passwordBytes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="passwordBytes" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="passwordBytes">Байты, используемые в качестве пароля для расшифровки зашифрованного содержимого.</param>
        <summary>Расшифровывает содержимое этого значения SafeContents, используя байтовый пароль из диапазона.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Байты паролей передаются непосредственно в функцию формирования ключа (ПОДПРОГРАММ), используемую алгоритмом, указанным в зашифрованном содержимом.
Это обеспечивает совместимость с другими системами, использующими кодировку текста, отличную от UTF-8, при обработке паролей с помощью PBKDF2 (функция наследования ключа на основе пароля 2).

 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Свойство <see cref="P:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.ConfidentialityMode" /> не равно <see cref="F:System.Security.Cryptography.Pkcs.Pkcs12ConfidentialityMode.Password" />.</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">Неправильный пароль.

- или -

Содержимое не было успешно расшифровано.</exception>
      </Docs>
    </Member>
    <Member MemberName="Decrypt">
      <MemberSignature Language="C#" Value="public void Decrypt (ReadOnlySpan&lt;char&gt; password);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Decrypt(valuetype System.ReadOnlySpan`1&lt;char&gt; password) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.Decrypt(System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Sub Decrypt (password As ReadOnlySpan(Of Char))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Decrypt(ReadOnlySpan&lt;char&gt; password);" />
      <MemberSignature Language="F#" Value="member this.Decrypt : ReadOnlySpan&lt;char&gt; -&gt; unit" Usage="pkcs12SafeContents.Decrypt password" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="password" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="password">Пароль, используемый для расшифровки зашифрованного содержимого.</param>
        <summary>Расшифровывает содержимое этого значения SafeContents, используя символьный пароль из диапазона.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если зашифрованное содержимое указывает на алгоритм, использующий PBKDF1 (функцию формирования ключа на основе пароля 1) или PBKDF2 (функция формирования ключа на основе пароля 2), пароль преобразуется в байты через кодировку UTF-8.

 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Свойство <see cref="P:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.ConfidentialityMode" /> не равно <see cref="F:System.Security.Cryptography.Pkcs.Pkcs12ConfidentialityMode.Password" />.</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">Неправильный пароль.

- или -

Содержимое не было успешно расшифровано.</exception>
      </Docs>
    </Member>
    <Member MemberName="Decrypt">
      <MemberSignature Language="C#" Value="public void Decrypt (string password);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Decrypt(string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.Decrypt(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Decrypt (password As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Decrypt(System::String ^ password);" />
      <MemberSignature Language="F#" Value="member this.Decrypt : string -&gt; unit" Usage="pkcs12SafeContents.Decrypt password" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="password">Пароль, используемый для расшифровки зашифрованного содержимого.</param>
        <summary>Расшифровывает содержимое этого значения SafeContents, используя символьный пароль из строки.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если зашифрованное содержимое указывает на алгоритм, использующий PBKDF1 (функцию формирования ключа на основе пароля 1) или PBKDF2 (функция формирования ключа на основе пароля 2), пароль преобразуется в байты через кодировку UTF-8.

 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Свойство <see cref="P:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.ConfidentialityMode" /> не равно <see cref="F:System.Security.Cryptography.Pkcs.Pkcs12ConfidentialityMode.Password" />.</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">Неправильный пароль.

-или-

Содержимое не было успешно расшифровано.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetBags">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Security.Cryptography.Pkcs.Pkcs12SafeBag&gt; GetBags ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.Security.Cryptography.Pkcs.Pkcs12SafeBag&gt; GetBags() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.GetBags" />
      <MemberSignature Language="VB.NET" Value="Public Function GetBags () As IEnumerable(Of Pkcs12SafeBag)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::Security::Cryptography::Pkcs::Pkcs12SafeBag ^&gt; ^ GetBags();" />
      <MemberSignature Language="F#" Value="member this.GetBags : unit -&gt; seq&lt;System.Security.Cryptography.Pkcs.Pkcs12SafeBag&gt;" Usage="pkcs12SafeContents.GetBags " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Security.Cryptography.Pkcs.Pkcs12SafeBag&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает перечислимую форму значений SafeBag, содержащихся в SafeContents.</summary>
        <returns>Перечислимая форма значений SafeBag, содержащихся в SafeContents.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">Содержимое шифруется.</exception>
        <altmember cref="P:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.ConfidentialityMode" />
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Security.Cryptography.Pkcs.Pkcs12SafeContents.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает значение, указывающее, находится ли данный экземпляр в состоянии, доступном только для чтения.</summary>
        <value><see langword="true" />, если это значение находится в состоянии "только для чтения"; в противном случае —. <see langword="false" /> Значение по умолчанию — <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

Объект <xref:System.Security.Cryptography.Pkcs.Pkcs12SafeContents> доступен только для чтения, если значение создается для представления ранее закодированных значений, таких как FROM <xref:System.Security.Cryptography.Pkcs.Pkcs12Info.Decode%2A> или операция кодирования, внутренняя для <xref:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.AddNestedContents%2A>.

 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
