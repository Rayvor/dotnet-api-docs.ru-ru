<Type Name="Pkcs8PrivateKeyInfo" FullName="System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0562a4e0cc885c88fd2cf17c1086a058bd79dc8d" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69263640" /></Metadata><TypeSignature Language="C#" Value="public sealed class Pkcs8PrivateKeyInfo" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Pkcs8PrivateKeyInfo extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Pkcs8PrivateKeyInfo" />
  <TypeSignature Language="C++ CLI" Value="public ref class Pkcs8PrivateKeyInfo sealed" />
  <TypeSignature Language="F#" Value="type Pkcs8PrivateKeyInfo = class" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
    <AssemblyVersion>4.0.4.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="5c48d-101">Активирует проверку и создание значений PKCS#8 PrivateKeyInfo и EncryptedPrivateKeyInfo.</span><span class="sxs-lookup"><span data-stu-id="5c48d-101">Enables the inspection of and creation of PKCS#8 PrivateKeyInfo and EncryptedPrivateKeyInfo values.</span></span> <span data-ttu-id="5c48d-102">Этот класс не наследуется.</span><span class="sxs-lookup"><span data-stu-id="5c48d-102">This class cannot be inherited.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Pkcs8PrivateKeyInfo (System.Security.Cryptography.Oid algorithmId, Nullable&lt;ReadOnlyMemory&lt;byte&gt;&gt; algorithmParameters, ReadOnlyMemory&lt;byte&gt; privateKey, bool skipCopies = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Cryptography.Oid algorithmId, valuetype System.Nullable`1&lt;valuetype System.ReadOnlyMemory`1&lt;unsigned int8&gt;&gt; algorithmParameters, valuetype System.ReadOnlyMemory`1&lt;unsigned int8&gt; privateKey, bool skipCopies) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.#ctor(System.Security.Cryptography.Oid,System.Nullable{System.ReadOnlyMemory{System.Byte}},System.ReadOnlyMemory{System.Byte},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (algorithmId As Oid, algorithmParameters As Nullable(Of ReadOnlyMemory(Of Byte)), privateKey As ReadOnlyMemory(Of Byte), Optional skipCopies As Boolean = false)" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo : System.Security.Cryptography.Oid * Nullable&lt;ReadOnlyMemory&lt;byte&gt;&gt; * ReadOnlyMemory&lt;byte&gt; * bool -&gt; System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo" Usage="new System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo (algorithmId, algorithmParameters, privateKey, skipCopies)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="algorithmId" Type="System.Security.Cryptography.Oid" />
        <Parameter Name="algorithmParameters" Type="System.Nullable&lt;System.ReadOnlyMemory&lt;System.Byte&gt;&gt;" />
        <Parameter Name="privateKey" Type="System.ReadOnlyMemory&lt;System.Byte&gt;" />
        <Parameter Name="skipCopies" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="algorithmId"><span data-ttu-id="5c48d-103">Идентификатор объекта (OID), определяющий асимметричный алгоритм, для которого предназначен этот ключ.</span><span class="sxs-lookup"><span data-stu-id="5c48d-103">The Object Identifier (OID) identifying the asymmetric algorithm this key is for.</span></span></param>
        <param name="algorithmParameters"><span data-ttu-id="5c48d-104">Параметры алгоритма в BER-кодировке, связанные с этим ключом, или значение <see langword="null" />, чтобы исключить параметры алгоритма при кодировании.</span><span class="sxs-lookup"><span data-stu-id="5c48d-104">The BER-encoded algorithm parameters associated with this key, or <see langword="null" /> to omit algorithm parameters when encoding.</span></span></param>
        <param name="privateKey"><span data-ttu-id="5c48d-105">Закодированный в конкретном алгоритме закрытый ключ.</span><span class="sxs-lookup"><span data-stu-id="5c48d-105">The algorithm-specific encoded private key.</span></span></param>
        <param name="skipCopies"><span data-ttu-id="5c48d-106">Значение <see langword="true" /> для хранения <paramref name="algorithmParameters" /> и <paramref name="privateKey" /> без создания защитной копии. В противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="5c48d-106"><see langword="true" /> to store <paramref name="algorithmParameters" /> and <paramref name="privateKey" /> without making a defensive copy; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="5c48d-107">Значение по умолчанию — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="5c48d-107">The default is <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="5c48d-108">Инициализирует новый экземпляр класса <see cref="T:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo" />.</span><span class="sxs-lookup"><span data-stu-id="5c48d-108">Initializes a new instance of the <see cref="T:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="5c48d-109">Проверка `privateKey` параметра не выполняется; не все алгоритмы должны иметь значение, закодированное личество.</span><span class="sxs-lookup"><span data-stu-id="5c48d-109">No validation is done on the `privateKey` parameter; not all algorithms require a BER-encoded value.</span></span>

<span data-ttu-id="5c48d-110">Поведение этого конструктора по умолчанию заключается в том, чтобы создать защитную копию `algorithmParameters` `privateKey` параметров и.</span><span class="sxs-lookup"><span data-stu-id="5c48d-110">The default behavior of this constructor is to make a defensive copy of both the `algorithmParameters` and the `privateKey` parameters.</span></span>
<span data-ttu-id="5c48d-111">Если параметр имеет `true`значение, эта защитная копия пропускается. `skipCopies`</span><span class="sxs-lookup"><span data-stu-id="5c48d-111">When the `skipCopies` parameter is `true`, this defensive copy is skipped.</span></span>
<span data-ttu-id="5c48d-112">Если защитная копия пропускается и содержимое либо `algorithmParameters` `privateKey` изменяется в течение времени существования возвращаемого значения или любого объекта, созданного его методами или свойствами, то методы и свойства этих объектов могут создавать серьезные результаты или вызывают исключения из-за поврежденного состояния.</span><span class="sxs-lookup"><span data-stu-id="5c48d-112">If the defensive copy is skipped and the contents of either `algorithmParameters` or `privateKey` change during the lifetime of the returned value or of any object produced by its methods or properties, then methods and properties on those objects may produce nonsense results or throw exceptions due to the corrupted state.</span></span>
<span data-ttu-id="5c48d-113">Таким образом, вызывающим объектам рекомендуется использовать `true` значение для параметра только в `skipCopies` том случае, если они могут быть уверены в том, что данные останутся неизменными.</span><span class="sxs-lookup"><span data-stu-id="5c48d-113">Callers are therefore advised to only use a `true` value for the `skipCopies` parameter when they can be reasonably assured that the data will stay intact.</span></span>
    
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="5c48d-114">Параметр <paramref name="algorithmId" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="5c48d-114">The <paramref name="algorithmId" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="5c48d-115">Параметр <paramref name="algorithmParameters" /> не имеет значения <see langword="null" />, пуст или является одиночным значением в BER-кодировке.</span><span class="sxs-lookup"><span data-stu-id="5c48d-115">The <paramref name="algorithmParameters" /> parameter is not <see langword="null" />, empty, or a single BER-encoded value.</span></span></exception>
        <altmember cref="M:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.Create(System.Security.Cryptography.AsymmetricAlgorithm)" />
        <altmember cref="Overload:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.Decode" />
        <altmember cref="Overload:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.DecryptAndDecode" />
      </Docs>
    </Member>
    <Member MemberName="AlgorithmId">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.Oid AlgorithmId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.Oid AlgorithmId" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.AlgorithmId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AlgorithmId As Oid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::Oid ^ AlgorithmId { System::Security::Cryptography::Oid ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AlgorithmId : System.Security.Cryptography.Oid" Usage="System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.AlgorithmId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Oid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5c48d-116">Получает значение идентификатора объекта (OID), определяющее алгоритм, для которого предназначен этот ключ.</span><span class="sxs-lookup"><span data-stu-id="5c48d-116">Gets the Object Identifier (OID) value identifying the algorithm this key is for.</span></span></summary>
        <value><span data-ttu-id="5c48d-117">Значение идентификатора объекта (OID), определяющее алгоритм, для которого предназначен этот ключ.</span><span class="sxs-lookup"><span data-stu-id="5c48d-117">The Object Identifier (OID) value identifying the algorithm this key is for.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AlgorithmParameters">
      <MemberSignature Language="C#" Value="public Nullable&lt;ReadOnlyMemory&lt;byte&gt;&gt; AlgorithmParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.ReadOnlyMemory`1&lt;unsigned int8&gt;&gt; AlgorithmParameters" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.AlgorithmParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AlgorithmParameters As Nullable(Of ReadOnlyMemory(Of Byte))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;ReadOnlyMemory&lt;System::Byte&gt;&gt; AlgorithmParameters { Nullable&lt;ReadOnlyMemory&lt;System::Byte&gt;&gt; get(); };" />
      <MemberSignature Language="F#" Value="member this.AlgorithmParameters : Nullable&lt;ReadOnlyMemory&lt;byte&gt;&gt;" Usage="System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.AlgorithmParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.ReadOnlyMemory&lt;System.Byte&gt;&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5c48d-118">Получает значение памяти, содержащее параметры алгоритма в BER-кодировке, связанные с этим ключом.</span><span class="sxs-lookup"><span data-stu-id="5c48d-118">Gets a memory value containing the BER-encoded algorithm parameters associated with this key.</span></span></summary>
        <value><span data-ttu-id="5c48d-119">Значение памяти, содержащее параметры алгоритма, закодированные с помощью личество, связанные с этим <see langword="null" /> ключом, или, если параметры не заданы.</span><span class="sxs-lookup"><span data-stu-id="5c48d-119">A memory value containing the BER-encoded algorithm parameters associated with this key, or <see langword="null" /> if no parameters were present.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.CryptographicAttributeObjectCollection Attributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.CryptographicAttributeObjectCollection Attributes" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.Attributes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Attributes As CryptographicAttributeObjectCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::CryptographicAttributeObjectCollection ^ Attributes { System::Security::Cryptography::CryptographicAttributeObjectCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Attributes : System.Security.Cryptography.CryptographicAttributeObjectCollection" Usage="System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.Attributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.CryptographicAttributeObjectCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5c48d-120">Получает изменяемую коллекцию атрибутов для этого закрытого ключа.</span><span class="sxs-lookup"><span data-stu-id="5c48d-120">Gets the modifiable collection of attributes for this private key.</span></span></summary>
        <value><span data-ttu-id="5c48d-121">Изменяемая коллекция атрибутов, которую необходимо закодировать с помощью закрытого ключа.</span><span class="sxs-lookup"><span data-stu-id="5c48d-121">The modifiable collection of attributes to encode with the private key.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo Create (System.Security.Cryptography.AsymmetricAlgorithm privateKey);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo Create(class System.Security.Cryptography.AsymmetricAlgorithm privateKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.Create(System.Security.Cryptography.AsymmetricAlgorithm)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (privateKey As AsymmetricAlgorithm) As Pkcs8PrivateKeyInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Cryptography::Pkcs::Pkcs8PrivateKeyInfo ^ Create(System::Security::Cryptography::AsymmetricAlgorithm ^ privateKey);" />
      <MemberSignature Language="F#" Value="static member Create : System.Security.Cryptography.AsymmetricAlgorithm -&gt; System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo" Usage="System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.Create privateKey" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="privateKey" Type="System.Security.Cryptography.AsymmetricAlgorithm" />
      </Parameters>
      <Docs>
        <param name="privateKey"><span data-ttu-id="5c48d-122">Закрытый ключ для представления в PKCS#8 PrivateKeyInfo.</span><span class="sxs-lookup"><span data-stu-id="5c48d-122">The private key to represent in a PKCS#8 PrivateKeyInfo.</span></span></param>
        <summary><span data-ttu-id="5c48d-123">Экспортирует указанный ключ как PKCS#8 PrivateKeyInfo и возвращает его декодированную интерпретацию.</span><span class="sxs-lookup"><span data-stu-id="5c48d-123">Exports a specified key as a PKCS#8 PrivateKeyInfo and returns its decoded interpretation.</span></span></summary>
        <returns><span data-ttu-id="5c48d-124">Декодированная интерпретация экспортированного значения PKCS#8 PrivateKeyInfo.</span><span class="sxs-lookup"><span data-stu-id="5c48d-124">The decoded interpretation of the exported PKCS#8 PrivateKeyInfo.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="5c48d-125">Параметр <paramref name="privateKey" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="5c48d-125">The <paramref name="privateKey" /> parameter is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Security.Cryptography.AsymmetricAlgorithm.ExportPkcs8PrivateKey" />
        <altmember cref="Overload:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.Decode" />
      </Docs>
    </Member>
    <Member MemberName="Decode">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo Decode (ReadOnlyMemory&lt;byte&gt; source, out int bytesRead, bool skipCopy = false);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo Decode(valuetype System.ReadOnlyMemory`1&lt;unsigned int8&gt; source, [out] int32&amp; bytesRead, bool skipCopy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.Decode(System.ReadOnlyMemory{System.Byte},System.Int32@,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Decode (source As ReadOnlyMemory(Of Byte), ByRef bytesRead As Integer, Optional skipCopy As Boolean = false) As Pkcs8PrivateKeyInfo" />
      <MemberSignature Language="F#" Value="static member Decode : ReadOnlyMemory&lt;byte&gt; *  * bool -&gt; System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo" Usage="System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.Decode (source, bytesRead, skipCopy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlyMemory&lt;System.Byte&gt;" />
        <Parameter Name="bytesRead" Type="System.Int32" RefType="out" />
        <Parameter Name="skipCopy" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="5c48d-126">Данные, интерпретируемые как значение PKCS#8 PrivateKeyInfo.</span><span class="sxs-lookup"><span data-stu-id="5c48d-126">The data to interpret as a PKCS#8 PrivateKeyInfo value.</span></span></param>
        <param name="bytesRead"><span data-ttu-id="5c48d-127">При возврате метода содержит значение, которое показывает количество символов, считанных из <paramref name="source" />.</span><span class="sxs-lookup"><span data-stu-id="5c48d-127">When this method returns, contains a value that indicates the number of bytes read from <paramref name="source" />.</span></span> <span data-ttu-id="5c48d-128">Этот параметр обрабатывается как неинициализированный.</span><span class="sxs-lookup"><span data-stu-id="5c48d-128">This parameter is treated as uninitialized.</span></span></param>
        <param name="skipCopy"><span data-ttu-id="5c48d-129"><see langword="true" /> для хранения <paramref name="source" /> без защитной копии; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="5c48d-129"><see langword="true" /> to store <paramref name="source" /> without making a defensive copy; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="5c48d-130">Значение по умолчанию — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="5c48d-130">The default is <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="5c48d-131">Считывает предоставленные данные в виде PKCS#8 PrivateKeyInfo и возвращает представление объекта содержимого.</span><span class="sxs-lookup"><span data-stu-id="5c48d-131">Reads the provided data as a PKCS#8 PrivateKeyInfo and returns an object view of the contents.</span></span></summary>
        <returns><span data-ttu-id="5c48d-132">Представление объекта содержимого, декодированного как PKCS#8 PrivateKeyInfo.</span><span class="sxs-lookup"><span data-stu-id="5c48d-132">An object view of the contents decoded as a PKCS#8 PrivateKeyInfo.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks
 <span data-ttu-id="5c48d-133">Поведение этого метода по умолчанию заключается в создании защитной копии первых `bytesConsumed` байтов из. `source`</span><span class="sxs-lookup"><span data-stu-id="5c48d-133">The default behavior of this method is to make a defensive copy of the first `bytesConsumed` bytes from `source`.</span></span>
<span data-ttu-id="5c48d-134">Если параметр имеет `true`значение, эта защитная копия пропускается. `skipCopy`</span><span class="sxs-lookup"><span data-stu-id="5c48d-134">When the `skipCopy` parameter is `true`, this defensive copy is skipped.</span></span>
<span data-ttu-id="5c48d-135">Если защитная копия пропускается и содержимое первых `bytesConsumed` `source` байтов изменяется в течение времени существования возвращаемого значения или любого объекта, созданного его методами или свойствами, то методы и свойства этих объектов могут создать серьезные результаты или создают исключения из-за поврежденного состояния.</span><span class="sxs-lookup"><span data-stu-id="5c48d-135">If the defensive copy is skipped and the contents of the first `bytesConsumed` bytes of `source` change during the lifetime of the returned value or of any object produced by its methods or properties, then methods and properties on those objects may produce nonsense results or throw exceptions due to the corrupted state.</span></span>
<span data-ttu-id="5c48d-136">Таким образом, вызывающим объектам рекомендуется использовать `true` значение для параметра только в `skipCopy` том случае, если они могут быть уверены в том, что данные останутся неизменными.</span><span class="sxs-lookup"><span data-stu-id="5c48d-136">Callers are therefore advised to only use a `true` value for the `skipCopy` parameter when they can be reasonably assured that the data will stay intact.</span></span>
 
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="5c48d-137">Содержимое параметра <paramref name="source" /> не было успешно декодировано как PKCS#8 PrivateKeyInfo.</span><span class="sxs-lookup"><span data-stu-id="5c48d-137">The contents of the <paramref name="source" /> parameter were not successfully decoded as a PKCS#8 PrivateKeyInfo.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DecryptAndDecode">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo DecryptAndDecode (ReadOnlySpan&lt;byte&gt; passwordBytes, ReadOnlyMemory&lt;byte&gt; source, out int bytesRead);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo DecryptAndDecode(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; passwordBytes, valuetype System.ReadOnlyMemory`1&lt;unsigned int8&gt; source, [out] int32&amp; bytesRead) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.DecryptAndDecode(System.ReadOnlySpan{System.Byte},System.ReadOnlyMemory{System.Byte},System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DecryptAndDecode (passwordBytes As ReadOnlySpan(Of Byte), source As ReadOnlyMemory(Of Byte), ByRef bytesRead As Integer) As Pkcs8PrivateKeyInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Cryptography::Pkcs::Pkcs8PrivateKeyInfo ^ DecryptAndDecode(ReadOnlySpan&lt;System::Byte&gt; passwordBytes, ReadOnlyMemory&lt;System::Byte&gt; source, [Runtime::InteropServices::Out] int % bytesRead);" />
      <MemberSignature Language="F#" Value="static member DecryptAndDecode : ReadOnlySpan&lt;byte&gt; * ReadOnlyMemory&lt;byte&gt; *  -&gt; System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo" Usage="System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.DecryptAndDecode (passwordBytes, source, bytesRead)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="passwordBytes" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="source" Type="System.ReadOnlyMemory&lt;System.Byte&gt;" />
        <Parameter Name="bytesRead" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="passwordBytes"><span data-ttu-id="5c48d-138">Байты, используемые в качестве пароля при расшифровке материала ключа.</span><span class="sxs-lookup"><span data-stu-id="5c48d-138">The bytes to use as a password when decrypting the key material.</span></span></param>
        <param name="source"><span data-ttu-id="5c48d-139">Данные для чтения в виде структуры PKCS#8 EncryptedPrivateKeyInfo в кодировке ASN.1-BER.</span><span class="sxs-lookup"><span data-stu-id="5c48d-139">The data to read as a PKCS#8 EncryptedPrivateKeyInfo structure in the ASN.1-BER encoding.</span></span></param>
        <param name="bytesRead"><span data-ttu-id="5c48d-140">При возврате метода содержит значение, которое показывает количество символов, считанных из <paramref name="source" />.</span><span class="sxs-lookup"><span data-stu-id="5c48d-140">When this method returns, contains a value that indicates the number of bytes read from <paramref name="source" />.</span></span> <span data-ttu-id="5c48d-141">Этот параметр обрабатывается как неинициализированный.</span><span class="sxs-lookup"><span data-stu-id="5c48d-141">This parameter is treated as uninitialized.</span></span></param>
        <summary><span data-ttu-id="5c48d-142">Расшифровывает предоставленные данные, используя указанный байтовый пароль, и декодирует выходные данные в представление объекта PKCS#8 PrivateKeyInfo.</span><span class="sxs-lookup"><span data-stu-id="5c48d-142">Decrypts the provided data using the provided byte-based password and decodes the output into an object view of the PKCS#8 PrivateKeyInfo.</span></span></summary>
        <returns><span data-ttu-id="5c48d-143">Представление объекта расшифрованного содержимого, декодированного как PKCS#8 PrivateKeyInfo.</span><span class="sxs-lookup"><span data-stu-id="5c48d-143">An object view of the contents decrypted decoded as a PKCS#8 PrivateKeyInfo.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c48d-144">Байты паролей передаются непосредственно в функцию формирования ключа (ПОДПРОГРАММ), используемую алгоритмом, `pbeParameters`указанным.</span><span class="sxs-lookup"><span data-stu-id="5c48d-144">The password bytes are passed directly into the Key Derivation Function (KDF) used by the algorithm indicated by `pbeParameters`.</span></span>
<span data-ttu-id="5c48d-145">Это обеспечивает совместимость с другими системами, использующими кодировку текста, отличную от UTF-8, при обработке паролей с помощью PBKDF2 (функция наследования ключа на основе пароля 2).</span><span class="sxs-lookup"><span data-stu-id="5c48d-145">This enables compatibility with other systems which use a text encoding other than UTF-8 when processing passwords with PBKDF2 (Password-Based Key Derivation Function 2).</span></span>

 <span data-ttu-id="5c48d-146">Этот метод поддерживает только двоичную (ЛИЧЕСТВО/CER/DER) кодировку Енкриптедприватекэйинфо.</span><span class="sxs-lookup"><span data-stu-id="5c48d-146">This method only supports the binary (BER/CER/DER) encoding of EncryptedPrivateKeyInfo.</span></span>
<span data-ttu-id="5c48d-147">Если значение в кодировке Base64 или в текстовом формате PEM, вызывающий объект должен в Base64-декодировать содержимое перед вызовом этого метода.</span><span class="sxs-lookup"><span data-stu-id="5c48d-147">If the value is Base64-encoded or in the PEM text format, the caller must Base64-decode the contents before calling this method.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="5c48d-148">Неправильный пароль.</span><span class="sxs-lookup"><span data-stu-id="5c48d-148">The password is incorrect.</span></span>

<span data-ttu-id="5c48d-149">-или-</span><span class="sxs-lookup"><span data-stu-id="5c48d-149">-or-</span></span>

<span data-ttu-id="5c48d-150">Содержимое <paramref name="source" />, указывающее, что как функцию формирования ключа (KDF) следует использовать устаревшую версию PKCS#12 KDF, которая требует пароли на основе <see cref="T:System.Char" />.</span><span class="sxs-lookup"><span data-stu-id="5c48d-150">The contents of <paramref name="source" /> indicate the Key Derivation Function (KDF) to apply is the legacy PKCS#12 KDF, which requires <see cref="T:System.Char" />-based passwords.</span></span>

<span data-ttu-id="5c48d-151">- или -</span><span class="sxs-lookup"><span data-stu-id="5c48d-151">-or-</span></span>

<span data-ttu-id="5c48d-152">Содержимое <paramref name="source" /> не представляет структуру PKCS#8 EncryptedPrivateKeyInfo в кодировке ASN.1-BER.</span><span class="sxs-lookup"><span data-stu-id="5c48d-152">The contents of <paramref name="source" /> do not represent an ASN.1-BER-encoded PKCS#8 EncryptedPrivateKeyInfo structure.</span></span></exception>
      </Docs>
      <altmember cref="M:System.Security.Cryptography.AsymmetricAlgorithm.ImportPkcs8PrivateKey" />
    </Member>
    <Member MemberName="DecryptAndDecode">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo DecryptAndDecode (ReadOnlySpan&lt;char&gt; password, ReadOnlyMemory&lt;byte&gt; source, out int bytesRead);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo DecryptAndDecode(valuetype System.ReadOnlySpan`1&lt;char&gt; password, valuetype System.ReadOnlyMemory`1&lt;unsigned int8&gt; source, [out] int32&amp; bytesRead) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.DecryptAndDecode(System.ReadOnlySpan{System.Char},System.ReadOnlyMemory{System.Byte},System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DecryptAndDecode (password As ReadOnlySpan(Of Char), source As ReadOnlyMemory(Of Byte), ByRef bytesRead As Integer) As Pkcs8PrivateKeyInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Cryptography::Pkcs::Pkcs8PrivateKeyInfo ^ DecryptAndDecode(ReadOnlySpan&lt;char&gt; password, ReadOnlyMemory&lt;System::Byte&gt; source, [Runtime::InteropServices::Out] int % bytesRead);" />
      <MemberSignature Language="F#" Value="static member DecryptAndDecode : ReadOnlySpan&lt;char&gt; * ReadOnlyMemory&lt;byte&gt; *  -&gt; System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo" Usage="System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.DecryptAndDecode (password, source, bytesRead)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="password" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="source" Type="System.ReadOnlyMemory&lt;System.Byte&gt;" />
        <Parameter Name="bytesRead" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="password"><span data-ttu-id="5c48d-153">Пароль, используемый при расшифровке материала ключа.</span><span class="sxs-lookup"><span data-stu-id="5c48d-153">The password to use when decrypting the key material.</span></span></param>
        <param name="source"><span data-ttu-id="5c48d-154">Байты структуры PKCS#8 EncryptedPrivateKeyInfo в кодировке ASN.1-BER.</span><span class="sxs-lookup"><span data-stu-id="5c48d-154">The bytes of a PKCS#8 EncryptedPrivateKeyInfo structure in the ASN.1-BER encoding.</span></span></param>
        <param name="bytesRead"><span data-ttu-id="5c48d-155">При возврате метода содержит значение, которое показывает количество символов, считанных из <paramref name="source" />.</span><span class="sxs-lookup"><span data-stu-id="5c48d-155">When this method returns, contains a value that indicates the number of bytes read from <paramref name="source" />.</span></span> <span data-ttu-id="5c48d-156">Этот параметр обрабатывается как неинициализированный.</span><span class="sxs-lookup"><span data-stu-id="5c48d-156">This parameter is treated as uninitialized.</span></span></param>
        <summary><span data-ttu-id="5c48d-157">Расшифровывает предоставленные данные, используя указанный символьный пароль, и декодирует выходные данные в представление объекта PKCS#8 PrivateKeyInfo.</span><span class="sxs-lookup"><span data-stu-id="5c48d-157">Decrypts the provided data using the provided character-based password and decodes the output into an object view of the PKCS#8 PrivateKeyInfo.</span></span></summary>
        <returns><span data-ttu-id="5c48d-158">Представление объекта расшифрованного содержимого, декодированного как PKCS#8 PrivateKeyInfo.</span><span class="sxs-lookup"><span data-stu-id="5c48d-158">An object view of the contents decrypted decoded as a PKCS#8 PrivateKeyInfo.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c48d-159">Если содержимое `source` указывает алгоритм, использующий PBKDF1 (функция формирования ключа на основе пароля 1) или PBKDF2 (функция формирования ключа на основе пароля 2), то пароль преобразуется в байты через кодировку UTF-8.</span><span class="sxs-lookup"><span data-stu-id="5c48d-159">When the contents of `source` indicate an algorithm that uses PBKDF1 (Password-Based Key Derivation Function 1) or PBKDF2 (Password-Based Key Derivation Function 2), the password is converted to bytes via the UTF-8 encoding.</span></span>

 <span data-ttu-id="5c48d-160">Этот метод поддерживает только двоичную (ЛИЧЕСТВО/CER/DER) кодировку Енкриптедприватекэйинфо.</span><span class="sxs-lookup"><span data-stu-id="5c48d-160">This method only supports the binary (BER/CER/DER) encoding of EncryptedPrivateKeyInfo.</span></span>
<span data-ttu-id="5c48d-161">Если значение в кодировке Base64 или в текстовом формате PEM, вызывающий объект должен в Base64-декодировать содержимое перед вызовом этого метода.</span><span class="sxs-lookup"><span data-stu-id="5c48d-161">If the value is Base64-encoded or in the PEM text format, the caller must Base64-decode the contents before calling this method.</span></span>

 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Security.Cryptography.AsymmetricAlgorithm.ImportEncryptedPkcs8PrivateKey" />
      </Docs>
    </Member>
    <Member MemberName="Encode">
      <MemberSignature Language="C#" Value="public byte[] Encode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] Encode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.Encode" />
      <MemberSignature Language="VB.NET" Value="Public Function Encode () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ Encode();" />
      <MemberSignature Language="F#" Value="member this.Encode : unit -&gt; byte[]" Usage="pkcs8PrivateKeyInfo.Encode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5c48d-162">Кодирует данные свойств этого экземпляра в виде PKCS#8 PrivateKeyInfo и возвращает кодировку в виде массива байтов.</span><span class="sxs-lookup"><span data-stu-id="5c48d-162">Encodes the property data of this instance as a PKCS#8 PrivateKeyInfo and returns the encoding as a byte array.</span></span></summary>
        <returns><span data-ttu-id="5c48d-163">Массив байтов, представляющий закодированную форму PKCS#8 PrivateKeyInfo.</span><span class="sxs-lookup"><span data-stu-id="5c48d-163">A byte array representing the encoded form of the PKCS#8 PrivateKeyInfo.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="Overload:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.TryEncode" />
      </Docs>
    </Member>
    <Member MemberName="Encrypt">
      <MemberSignature Language="C#" Value="public byte[] Encrypt (ReadOnlySpan&lt;byte&gt; passwordBytes, System.Security.Cryptography.PbeParameters pbeParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] Encrypt(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; passwordBytes, class System.Security.Cryptography.PbeParameters pbeParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.Encrypt(System.ReadOnlySpan{System.Byte},System.Security.Cryptography.PbeParameters)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ Encrypt(ReadOnlySpan&lt;System::Byte&gt; passwordBytes, System::Security::Cryptography::PbeParameters ^ pbeParameters);" />
      <MemberSignature Language="F#" Value="member this.Encrypt : ReadOnlySpan&lt;byte&gt; * System.Security.Cryptography.PbeParameters -&gt; byte[]" Usage="pkcs8PrivateKeyInfo.Encrypt (passwordBytes, pbeParameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="passwordBytes" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="pbeParameters" Type="System.Security.Cryptography.PbeParameters" />
      </Parameters>
      <Docs>
        <param name="passwordBytes"><span data-ttu-id="5c48d-164">Байты, используемые в качестве пароля при шифровании материала ключа.</span><span class="sxs-lookup"><span data-stu-id="5c48d-164">The bytes to use as a password when encrypting the key material.</span></span></param>
        <param name="pbeParameters"><span data-ttu-id="5c48d-165">Параметры шифрования на основе пароля (PBE), используемые при шифровании материала ключа.</span><span class="sxs-lookup"><span data-stu-id="5c48d-165">The password-based encryption (PBE) parameters to use when encrypting the key material.</span></span></param>
        <summary><span data-ttu-id="5c48d-166">Создает значение PKCS#8 EncryptedPrivateKeyInfo из содержимого свойств этого объекта после шифрования с указанным байтовым паролем и параметрами шифрования.</span><span class="sxs-lookup"><span data-stu-id="5c48d-166">Produces a PKCS#8 EncryptedPrivateKeyInfo from the property contents of this object after encrypting with the specified byte-based password and encryption parameters.</span></span></summary>
        <returns><span data-ttu-id="5c48d-167">Массив байтов, содержащий закодированную форму PKCS#8 EncryptedPrivateKeyInfo.</span><span class="sxs-lookup"><span data-stu-id="5c48d-167">A byte array containing the encoded form of the PKCS#8 EncryptedPrivateKeyInfo.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c48d-168">Байты паролей передаются непосредственно в функцию формирования ключа (ПОДПРОГРАММ), используемую алгоритмом, `pbeParameters`указанным.</span><span class="sxs-lookup"><span data-stu-id="5c48d-168">The password bytes are passed directly into the Key Derivation Function (KDF) used by the algorithm indicated by `pbeParameters`.</span></span>
<span data-ttu-id="5c48d-169">Это обеспечивает совместимость с другими системами, использующими кодировку текста, отличную от UTF-8, при обработке паролей с помощью PBKDF2 (функция наследования ключа на основе пароля 2).</span><span class="sxs-lookup"><span data-stu-id="5c48d-169">This enables compatibility with other systems which use a text encoding other than UTF-8 when processing passwords with PBKDF2 (Password-Based Key Derivation Function 2).</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="5c48d-170"><paramref name="pbeParameters" /> указывает, что следует использовать <see cref="F:System.Security.Cryptography.PbeEncryptionAlgorithm.TripleDes3KeyPkcs12" />: это требует паролей на основе <see cref="T:System.Char" />.</span><span class="sxs-lookup"><span data-stu-id="5c48d-170"><paramref name="pbeParameters" /> indicates that <see cref="F:System.Security.Cryptography.PbeEncryptionAlgorithm.TripleDes3KeyPkcs12" /> should be used, which requires <see cref="T:System.Char" />-based passwords.</span></span></exception>
        <altmember cref="Overload:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.TryEncrypt" />
      </Docs>
    </Member>
    <Member MemberName="Encrypt">
      <MemberSignature Language="C#" Value="public byte[] Encrypt (ReadOnlySpan&lt;char&gt; password, System.Security.Cryptography.PbeParameters pbeParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] Encrypt(valuetype System.ReadOnlySpan`1&lt;char&gt; password, class System.Security.Cryptography.PbeParameters pbeParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.Encrypt(System.ReadOnlySpan{System.Char},System.Security.Cryptography.PbeParameters)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ Encrypt(ReadOnlySpan&lt;char&gt; password, System::Security::Cryptography::PbeParameters ^ pbeParameters);" />
      <MemberSignature Language="F#" Value="member this.Encrypt : ReadOnlySpan&lt;char&gt; * System.Security.Cryptography.PbeParameters -&gt; byte[]" Usage="pkcs8PrivateKeyInfo.Encrypt (password, pbeParameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="password" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="pbeParameters" Type="System.Security.Cryptography.PbeParameters" />
      </Parameters>
      <Docs>
        <param name="password"><span data-ttu-id="5c48d-171">Пароль, используемый при шифровании материала ключа.</span><span class="sxs-lookup"><span data-stu-id="5c48d-171">The password to use when encrypting the key material.</span></span></param>
        <param name="pbeParameters"><span data-ttu-id="5c48d-172">Параметры шифрования на основе пароля (PBE), используемые при шифровании материала ключа.</span><span class="sxs-lookup"><span data-stu-id="5c48d-172">The password-based encryption (PBE) parameters to use when encrypting the key material.</span></span></param>
        <summary><span data-ttu-id="5c48d-173">Создает значение PKCS#8 EncryptedPrivateKeyInfo из содержимого свойств этого объекта после шифрования с указанным символьным паролем и параметрами шифрования.</span><span class="sxs-lookup"><span data-stu-id="5c48d-173">Produces a PKCS#8 EncryptedPrivateKeyInfo from the property contents of this object after encrypting with the specified character-based password and encryption parameters.</span></span></summary>
        <returns><span data-ttu-id="5c48d-174">Массив байтов, содержащий закодированную форму PKCS#8 EncryptedPrivateKeyInfo.</span><span class="sxs-lookup"><span data-stu-id="5c48d-174">A byte array containing the encoded form of the PKCS#8 EncryptedPrivateKeyInfo.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c48d-175">Когда `pbeParameters` указывает алгоритм, использующий PBKDF2 (функция формирования ключа на основе пароля 2), пароль преобразуется в байты через кодировку UTF-8.</span><span class="sxs-lookup"><span data-stu-id="5c48d-175">When `pbeParameters` indicates an algorithm that uses PBKDF2 (Password-Based Key Derivation Function 2), the password is converted to bytes via the UTF-8 encoding.</span></span>

 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.TryEncrypt" />
      </Docs>
    </Member>
    <Member MemberName="PrivateKeyBytes">
      <MemberSignature Language="C#" Value="public ReadOnlyMemory&lt;byte&gt; PrivateKeyBytes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ReadOnlyMemory`1&lt;unsigned int8&gt; PrivateKeyBytes" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.PrivateKeyBytes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PrivateKeyBytes As ReadOnlyMemory(Of Byte)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property ReadOnlyMemory&lt;System::Byte&gt; PrivateKeyBytes { ReadOnlyMemory&lt;System::Byte&gt; get(); };" />
      <MemberSignature Language="F#" Value="member this.PrivateKeyBytes : ReadOnlyMemory&lt;byte&gt;" Usage="System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.PrivateKeyBytes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ReadOnlyMemory&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5c48d-176">Получает значение памяти, представляющее закодированный в конкретном алгоритме закрытый ключ.</span><span class="sxs-lookup"><span data-stu-id="5c48d-176">Gets a memory value that represents the algorithm-specific encoded private key.</span></span></summary>
        <value><span data-ttu-id="5c48d-177">Значение памяти, представляющее закодированный в конкретном алгоритме закрытый ключ.</span><span class="sxs-lookup"><span data-stu-id="5c48d-177">A memory value that represents the algorithm-specific encoded private key.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryEncode">
      <MemberSignature Language="C#" Value="public bool TryEncode (Span&lt;byte&gt; destination, out int bytesWritten);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryEncode(valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesWritten) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.TryEncode(System.Span{System.Byte},System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryEncode (destination As Span(Of Byte), ByRef bytesWritten As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryEncode(Span&lt;System::Byte&gt; destination, [Runtime::InteropServices::Out] int % bytesWritten);" />
      <MemberSignature Language="F#" Value="member this.TryEncode : Span&lt;byte&gt; *  -&gt; bool" Usage="pkcs8PrivateKeyInfo.TryEncode (destination, bytesWritten)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="destination"><span data-ttu-id="5c48d-178">Диапазон байтов для получения данных PKCS#8 PrivateKeyInfo.</span><span class="sxs-lookup"><span data-stu-id="5c48d-178">The byte span to receive the PKCS#8 PrivateKeyInfo data.</span></span></param>
        <param name="bytesWritten"><span data-ttu-id="5c48d-179">При возврате метода содержит значение, которое показывает количество байтов, записанных в <paramref name="destination" />.</span><span class="sxs-lookup"><span data-stu-id="5c48d-179">When this method returns, contains a value that indicates the number of bytes written to <paramref name="destination" />.</span></span> <span data-ttu-id="5c48d-180">Этот параметр обрабатывается как неинициализированный.</span><span class="sxs-lookup"><span data-stu-id="5c48d-180">This parameter is treated as uninitialized.</span></span></param>
        <summary><span data-ttu-id="5c48d-181">Пытается закодировать данные свойств этого экземпляра в виде PKCS#8 PrivateKeyInfo, записывая результаты в предоставленный буфер.</span><span class="sxs-lookup"><span data-stu-id="5c48d-181">Attempts to encode the property data of this instance as a PKCS#8 PrivateKeyInfo, writing the results into a provided buffer.</span></span></summary>
        <returns><span data-ttu-id="5c48d-182"><see langword="true" />, если размер <paramref name="destination" /> достаточно велик, чтобы вместить выходные данные; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="5c48d-182"><see langword="true" /> if <paramref name="destination" /> is big enough to receive the output; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.Encode" />
      </Docs>
    </Member>
    <Member MemberName="TryEncrypt">
      <MemberSignature Language="C#" Value="public bool TryEncrypt (ReadOnlySpan&lt;byte&gt; passwordBytes, System.Security.Cryptography.PbeParameters pbeParameters, Span&lt;byte&gt; destination, out int bytesWritten);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryEncrypt(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; passwordBytes, class System.Security.Cryptography.PbeParameters pbeParameters, valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesWritten) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.TryEncrypt(System.ReadOnlySpan{System.Byte},System.Security.Cryptography.PbeParameters,System.Span{System.Byte},System.Int32@)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryEncrypt(ReadOnlySpan&lt;System::Byte&gt; passwordBytes, System::Security::Cryptography::PbeParameters ^ pbeParameters, Span&lt;System::Byte&gt; destination, [Runtime::InteropServices::Out] int % bytesWritten);" />
      <MemberSignature Language="F#" Value="member this.TryEncrypt : ReadOnlySpan&lt;byte&gt; * System.Security.Cryptography.PbeParameters * Span&lt;byte&gt; *  -&gt; bool" Usage="pkcs8PrivateKeyInfo.TryEncrypt (passwordBytes, pbeParameters, destination, bytesWritten)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="passwordBytes" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="pbeParameters" Type="System.Security.Cryptography.PbeParameters" />
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="passwordBytes"><span data-ttu-id="5c48d-183">Байты, используемые в качестве пароля при шифровании материала ключа.</span><span class="sxs-lookup"><span data-stu-id="5c48d-183">The bytes to use as a password when encrypting the key material.</span></span></param>
        <param name="pbeParameters"><span data-ttu-id="5c48d-184">Параметры шифрования на основе пароля (PBE), используемые при шифровании материала ключа.</span><span class="sxs-lookup"><span data-stu-id="5c48d-184">The password-based encryption (PBE) parameters to use when encrypting the key material.</span></span></param>
        <param name="destination"><span data-ttu-id="5c48d-185">Диапазон байтов для получения данных PKCS#8 EncryptedPrivateKeyInfo.</span><span class="sxs-lookup"><span data-stu-id="5c48d-185">The byte span to receive the PKCS#8 EncryptedPrivateKeyInfo data.</span></span></param>
        <param name="bytesWritten"><span data-ttu-id="5c48d-186">При возврате метода содержит значение, которое показывает количество байтов, записанных в <paramref name="destination" />.</span><span class="sxs-lookup"><span data-stu-id="5c48d-186">When this method returns, contains a value that indicates the number of bytes written to <paramref name="destination" />.</span></span> <span data-ttu-id="5c48d-187">Этот параметр обрабатывается как неинициализированный.</span><span class="sxs-lookup"><span data-stu-id="5c48d-187">This parameter is treated as uninitialized.</span></span></param>
        <summary><span data-ttu-id="5c48d-188">Пытается создать значение PKCS#8 EncryptedPrivateKeyInfo из содержимого свойств этого объекта после шифрования с указанным байтовым паролем и параметрами шифрования, записывая результаты в предоставленный буфер.</span><span class="sxs-lookup"><span data-stu-id="5c48d-188">Attempts to produce a PKCS#8 EncryptedPrivateKeyInfo from the property contents of this object after encrypting with the specified byte-based password and encryption parameters, writing the results into a provided buffer.</span></span></summary>
        <returns><span data-ttu-id="5c48d-189"><see langword="true" />, если размер <paramref name="destination" /> достаточно велик, чтобы вместить выходные данные; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="5c48d-189"><see langword="true" /> if <paramref name="destination" /> is big enough to receive the output; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c48d-190">Байты паролей передаются непосредственно в функцию формирования ключа (ПОДПРОГРАММ), используемую алгоритмом, `pbeParameters`указанным.</span><span class="sxs-lookup"><span data-stu-id="5c48d-190">The password bytes are passed directly into the Key Derivation Function (KDF) used by the algorithm indicated by `pbeParameters`.</span></span>
<span data-ttu-id="5c48d-191">Это обеспечивает совместимость с другими системами, использующими кодировку текста, отличную от UTF-8, при обработке паролей с помощью PBKDF2 (функция наследования ключа на основе пароля 2).</span><span class="sxs-lookup"><span data-stu-id="5c48d-191">This enables compatibility with other systems which use a text encoding other than UTF-8 when processing passwords with PBKDF2 (Password-Based Key Derivation Function 2).</span></span>

 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.Encrypt" />
      </Docs>
    </Member>
    <Member MemberName="TryEncrypt">
      <MemberSignature Language="C#" Value="public bool TryEncrypt (ReadOnlySpan&lt;char&gt; password, System.Security.Cryptography.PbeParameters pbeParameters, Span&lt;byte&gt; destination, out int bytesWritten);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryEncrypt(valuetype System.ReadOnlySpan`1&lt;char&gt; password, class System.Security.Cryptography.PbeParameters pbeParameters, valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesWritten) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.TryEncrypt(System.ReadOnlySpan{System.Char},System.Security.Cryptography.PbeParameters,System.Span{System.Byte},System.Int32@)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryEncrypt(ReadOnlySpan&lt;char&gt; password, System::Security::Cryptography::PbeParameters ^ pbeParameters, Span&lt;System::Byte&gt; destination, [Runtime::InteropServices::Out] int % bytesWritten);" />
      <MemberSignature Language="F#" Value="member this.TryEncrypt : ReadOnlySpan&lt;char&gt; * System.Security.Cryptography.PbeParameters * Span&lt;byte&gt; *  -&gt; bool" Usage="pkcs8PrivateKeyInfo.TryEncrypt (password, pbeParameters, destination, bytesWritten)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Pkcs</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="password" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="pbeParameters" Type="System.Security.Cryptography.PbeParameters" />
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="password"><span data-ttu-id="5c48d-192">Пароль, используемый при шифровании материала ключа.</span><span class="sxs-lookup"><span data-stu-id="5c48d-192">The password to use when encrypting the key material.</span></span></param>
        <param name="pbeParameters"><span data-ttu-id="5c48d-193">Параметры шифрования на основе пароля (PBE), используемые при шифровании материала ключа.</span><span class="sxs-lookup"><span data-stu-id="5c48d-193">The password-based encryption (PBE) parameters to use when encrypting the key material.</span></span></param>
        <param name="destination"><span data-ttu-id="5c48d-194">Диапазон байтов для получения данных PKCS#8 EncryptedPrivateKeyInfo.</span><span class="sxs-lookup"><span data-stu-id="5c48d-194">The byte span to receive the PKCS#8 EncryptedPrivateKeyInfo data.</span></span></param>
        <param name="bytesWritten"><span data-ttu-id="5c48d-195">При возврате метода содержит значение, которое показывает количество байтов, записанных в <paramref name="destination" />.</span><span class="sxs-lookup"><span data-stu-id="5c48d-195">When this method returns, contains a value that indicates the number of bytes written to <paramref name="destination" />.</span></span> <span data-ttu-id="5c48d-196">Этот параметр обрабатывается как неинициализированный.</span><span class="sxs-lookup"><span data-stu-id="5c48d-196">This parameter is treated as uninitialized.</span></span></param>
        <summary><span data-ttu-id="5c48d-197">Пытается создать значение PKCS#8 EncryptedPrivateKeyInfo из содержимого свойств этого объекта после шифрования с указанным символьным паролем и параметрами шифрования, записывая результат в предоставленный буфер.</span><span class="sxs-lookup"><span data-stu-id="5c48d-197">Attempts to produce a PKCS#8 EncryptedPrivateKeyInfo from the property contents of this object after encrypting with the specified character-based password and encryption parameters, writing the result into a provided buffer.</span></span></summary>
        <returns><span data-ttu-id="5c48d-198"><see langword="true" />, если размер <paramref name="destination" /> достаточно велик, чтобы вместить выходные данные; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="5c48d-198"><see langword="true" /> if <paramref name="destination" /> is big enough to receive the output; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c48d-199">Когда `pbeParameters` указывает алгоритм, использующий PBKDF2 (функция формирования ключа на основе пароля 2), пароль преобразуется в байты через кодировку UTF-8.</span><span class="sxs-lookup"><span data-stu-id="5c48d-199">When `pbeParameters` indicates an algorithm that uses PBKDF2 (Password-Based Key Derivation Function 2), the password is converted to bytes via the UTF-8 encoding.</span></span>

 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.Encrypt" />
      </Docs>
    </Member>
  </Members>
</Type>
