<Type Name="InvokeMethodOptions" FullName="System.Management.InvokeMethodOptions">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1993d4caa6bcdd8717534f5825e61f6f6bfa64e9" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69116826" /></Metadata><TypeSignature Language="C#" Value="public class InvokeMethodOptions : System.Management.ManagementOptions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit InvokeMethodOptions extends System.Management.ManagementOptions" />
  <TypeSignature Language="DocId" Value="T:System.Management.InvokeMethodOptions" />
  <TypeSignature Language="VB.NET" Value="Public Class InvokeMethodOptions&#xA;Inherits ManagementOptions" />
  <TypeSignature Language="C++ CLI" Value="public ref class InvokeMethodOptions : System::Management::ManagementOptions" />
  <TypeSignature Language="F#" Value="type InvokeMethodOptions = class&#xA;    inherit ManagementOptions" />
  <AssemblyInfo>
    <AssemblyName>System.Management</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Management.ManagementOptions</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Задает параметры для вызова управляющего метода.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере вызывается метод **Win32_Process:: Create** для запуска нового процесса Calc. exe. <xref:System.Management.InvokeMethodOptions> Класс используется для вызова метода.  
  
 [!code-csharp[wminet_InvokeMethodOptions#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_InvokeMethodOptions/cs/InvokeMethodOptions.cs#1)]
 [!code-vb[wminet_InvokeMethodOptions#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_InvokeMethodOptions/vb/InvokeMethodOptions.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Management.InvokeMethodOptions" /> для операции вызова.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InvokeMethodOptions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.InvokeMethodOptions.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InvokeMethodOptions();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Management.InvokeMethodOptions" /> для работы метода <see cref="M:System.Management.ManagementObject.InvokeMethod(System.String,System.Object[])" /> с использованием стандартных значений. Это конструктор без параметров.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a>Безопасность платформы .NET Framework  
 Полное доверие для непосредственно вызывающего метода. Этот член не может быть использован частично доверенным кодом. Дополнительные сведения см. в разделе [Использование библиотек из частично доверенного кода](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).  
  
   
  
## Examples  
 В следующем примере вызывается метод **Win32_Process:: Create** для запуска нового процесса Calc. exe. Используется конструктор <xref:System.Management.InvokeMethodOptions> без параметров класса.  
  
 [!code-csharp[wminet_InvokeMethodOptions-1#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_InvokeMethodOptions-1/cs/InvokeMethodOptions-1.cs#1)]
 [!code-vb[wminet_InvokeMethodOptions-1#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_InvokeMethodOptions-1/vb/InvokeMethodOptions-1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InvokeMethodOptions (System.Management.ManagementNamedValueCollection context, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Management.ManagementNamedValueCollection context, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.InvokeMethodOptions.#ctor(System.Management.ManagementNamedValueCollection,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (context As ManagementNamedValueCollection, timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InvokeMethodOptions(System::Management::ManagementNamedValueCollection ^ context, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="new System.Management.InvokeMethodOptions : System.Management.ManagementNamedValueCollection * TimeSpan -&gt; System.Management.InvokeMethodOptions" Usage="new System.Management.InvokeMethodOptions (context, timeout)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="context" Type="System.Management.ManagementNamedValueCollection" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="context">Объект в виде пары именованных значений, зависящих от поставщика, который необходимо передать этому поставщику.</param>
        <param name="timeout">Период, в течение которого операция может выполняться до завершения времени ожидания. Значение по умолчанию — <see cref="F:System.TimeSpan.MaxValue" />. Установка этого параметра вызовет операцию в полусинхронном режиме.</param>
        <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Management.InvokeMethodOptions" /> для операции вызова с помощью заданных значений.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a>Безопасность платформы .NET Framework  
 Полное доверие для непосредственно вызывающего метода. Этот член не может быть использован частично доверенным кодом. Дополнительные сведения см. в разделе [Использование библиотек из частично доверенного кода](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).  
  
   
  
## Examples  
 В следующем примере вызывается метод **Win32_Process:: Create** для запуска нового процесса Calc. exe. <xref:System.Management.InvokeMethodOptions> Класс используется для вызова метода.  
  
 [!code-csharp[wminet_InvokeMethodOptions-2#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_InvokeMethodOptions-2/cs/InvokeMethodOptions-2.cs#1)]
 [!code-vb[wminet_InvokeMethodOptions-2#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_InvokeMethodOptions-2/vb/InvokeMethodOptions-2.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public override object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.InvokeMethodOptions.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ Clone();" />
      <MemberSignature Language="F#" Value="override this.Clone : unit -&gt; obj" Usage="invokeMethodOptions.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает копию объекта.</summary>
        <returns>Клонированный объект.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a>Безопасность платформы .NET Framework  
 Полное доверие для непосредственно вызывающего метода. Этот член не может быть использован частично доверенным кодом. Дополнительные сведения см. в разделе [Использование библиотек из частично доверенного кода](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ICloneable.Clone" />
      </Docs>
    </Member>
  </Members>
</Type>
