<Type Name="ManagementClass" FullName="System.Management.ManagementClass">
  <Metadata><Meta Name="ms.openlocfilehash" Value="698a850f5c312c07f09a2b35c503e549c590e337" /><Meta Name="ms.sourcegitcommit" Value="e7974886b08aa83a8fb461e8550f31a7d4331ee3" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="07/23/2019" /><Meta Name="ms.locfileid" Value="68396759" /></Metadata><TypeSignature Language="C#" Value="public class ManagementClass : System.Management.ManagementObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit ManagementClass extends System.Management.ManagementObject" />
  <TypeSignature Language="DocId" Value="T:System.Management.ManagementClass" />
  <TypeSignature Language="VB.NET" Value="Public Class ManagementClass&#xA;Inherits ManagementObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class ManagementClass : System::Management::ManagementObject" />
  <TypeSignature Language="F#" Value="type ManagementClass = class&#xA;    inherit ManagementObject" />
  <AssemblyInfo>
    <AssemblyName>System.Management</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Management.ManagementObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Представляет класс управления CIM. Класс управления — это класс WMI, например, такой как **Win32_LogicalDisk**, который может представлять дисковый накопитель, или **Win32_Process**, который может представлять процесс, например Notepad.exe. Элементы этого класса позволяют осуществлять доступ к данным WMI с помощью определенного пути WMI. Дополнительные сведения см. в разделе "Классы Win32" документации по инструментарию управления Windows (WMI) в библиотеке MSDN по адресу http://msdn.microsoft.com/library.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Management.ManagementClass" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a>Безопасность платформы .NET Framework  
 Полное доверие для непосредственно вызывающего метода. Этот член не может быть использован частично доверенным кодом. Дополнительные сведения см. в разделе [Использование библиотек из частично доверенного кода](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManagementClass ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementClass.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ManagementClass();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Management.ManagementClass" />. Это конструктор без параметров.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a>Безопасность платформы .NET Framework  
 Полное доверие для непосредственно вызывающего метода. Этот член не может быть использован частично доверенным кодом. Дополнительные сведения см. в разделе [Использование библиотек из частично доверенного кода](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).  
  
   
  
## Examples  
 В следующем примере показано, как инициализировать <xref:System.Management.ManagementClass> переменную <xref:System.Management.ManagementClass> с помощью конструктора без параметров. В примере перечисляются методы, свойства и квалификаторы для созданного класса.  
  
 [!code-csharp[wminet_ManagementClass#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementClass/cs/ManagementClass.cs#1)]
 [!code-vb[wminet_ManagementClass#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementClass/vb/ManagementClass.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManagementClass (System.Management.ManagementPath path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Management.ManagementPath path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementClass.#ctor(System.Management.ManagementPath)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As ManagementPath)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ManagementClass(System::Management::ManagementPath ^ path);" />
      <MemberSignature Language="F#" Value="new System.Management.ManagementClass : System.Management.ManagementPath -&gt; System.Management.ManagementClass" Usage="new System.Management.ManagementClass path" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.Management.ManagementPath" />
      </Parameters>
      <Docs>
        <param name="path"><see cref="T:System.Management.ManagementPath" /> задает WMI-класс, к которому необходимо установить привязку. Параметр должен задавать путь к классу WMI. Класс представляет класс управления CIM из числа классов WMI. Классы CIM представляют сведения об управлении оборудованием, программным обеспечением, процессами и т. д. Дополнительные сведения о классах CIM, доступных в Windows, см. в разделе "Классы Win32" в документации по инструментарию управления Windows (WMI) в библиотеке MSDN по адресу http://msdn.microsoft.com/library.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Management.ManagementClass" />. Этот класс представляет класс управления модели CIM — один из таких классов WMI, как **Win32_LogicalDisk**, который может представлять дисковый накопитель, или **Win32_Process**, который может представлять процесс, например Notepad.exe. Дополнительные сведения см. в разделе "Классы Win32" документации по инструментарию управления Windows (WMI) в библиотеке MSDN по адресу http://msdn.microsoft.com/library.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `path` Параметр должен указывать путь к классу WMI.  
  
## <a name="net-framework-security"></a>Безопасность платформы .NET Framework  
 Полное доверие для непосредственно вызывающего метода. Этот член не может быть использован частично доверенным кодом. Дополнительные сведения см. в разделе [Использование библиотек из частично доверенного кода](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).  
  
   
  
## Examples  
 В следующем примере показано, как инициализировать <xref:System.Management.ManagementClass> переменную <xref:System.Management.ManagementClass> с помощью конструктора. В примере перечисляются методы, свойства и квалификаторы для созданного класса.  
  
 [!code-csharp[wminet_ManagementClass-M#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementClass-M/cs/ManagementClass-M.cs#1)]
 [!code-vb[wminet_ManagementClass-M#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementClass-M/vb/ManagementClass-M.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManagementClass (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementClass.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ManagementClass(System::String ^ path);" />
      <MemberSignature Language="F#" Value="new System.Management.ManagementClass : string -&gt; System.Management.ManagementClass" Usage="new System.Management.ManagementClass path" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">Путь к классу WMI. Класс представляет класс управления CIM из числа классов WMI. Классы CIM представляют сведения об управлении оборудованием, программным обеспечением, процессами и т. д. Дополнительные сведения о классах CIM, доступных в Windows, см. в разделе "Классы Win32" в документации по инструментарию управления Windows (WMI) в библиотеке MSDN по адресу http://msdn.microsoft.com/library.</param>
        <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Management.ManagementClass" />, инициализируемого по данному пути. Этот класс представляет класс управления модели CIM — один из таких классов WMI, как **Win32_LogicalDisk**, который может представлять дисковый накопитель, или **Win32_Process**, который может представлять процесс, например Notepad.exe. Дополнительные сведения см. в разделе "Классы Win32" документации по инструментарию управления Windows (WMI) в библиотеке MSDN по адресу http://msdn.microsoft.com/library.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a>Безопасность платформы .NET Framework  
 Полное доверие для непосредственно вызывающего метода. Этот член не может быть использован частично доверенным кодом. Дополнительные сведения см. в разделе [Использование библиотек из частично доверенного кода](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).  
  
   
  
## Examples  
 В следующем примере показано, как инициализировать <xref:System.Management.ManagementClass> переменную <xref:System.Management.ManagementClass> с помощью конструктора. В примере перечисляются методы, свойства и квалификаторы для созданного класса.  
  
 [!code-csharp[wminet_ManagementClass-S#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementClass-S/cs/ManagementClass-S.cs#1)]
 [!code-vb[wminet_ManagementClass-S#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementClass-S/vb/ManagementClass-S.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManagementClass (System.Management.ManagementPath path, System.Management.ObjectGetOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Management.ManagementPath path, class System.Management.ObjectGetOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementClass.#ctor(System.Management.ManagementPath,System.Management.ObjectGetOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As ManagementPath, options As ObjectGetOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ManagementClass(System::Management::ManagementPath ^ path, System::Management::ObjectGetOptions ^ options);" />
      <MemberSignature Language="F#" Value="new System.Management.ManagementClass : System.Management.ManagementPath * System.Management.ObjectGetOptions -&gt; System.Management.ManagementClass" Usage="new System.Management.ManagementClass (path, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.Management.ManagementPath" />
        <Parameter Name="options" Type="System.Management.ObjectGetOptions" />
      </Parameters>
      <Docs>
        <param name="path">Экземпляр <see cref="T:System.Management.ManagementPath" /> представляет путь к классу WMI. Класс представляет класс управления CIM из числа классов WMI. Классы CIM представляют сведения об управлении оборудованием, программным обеспечением, процессами и т. д. Дополнительные сведения о классах CIM, доступных в Windows, см. в разделе "Классы Win32" в документации по инструментарию управления Windows (WMI) в библиотеке MSDN по адресу http://msdn.microsoft.com/library.</param>
        <param name="options"><see cref="T:System.Management.ObjectGetOptions" /> представляет параметры, используемые при извлечении этого класса.</param>
        <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Management.ManagementClass" />, инициализируемого по пути данного класса WMI с использованием заданных параметров. Этот класс представляет класс управления модели CIM — один из таких классов WMI, как **Win32_LogicalDisk**, который может представлять дисковый накопитель, или **Win32_Process**, который может представлять процесс, например Notepad.exe. Дополнительные сведения см. в разделе "Классы Win32" документации по инструментарию управления Windows (WMI) в библиотеке MSDN по адресу http://msdn.microsoft.com/library.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a>Безопасность платформы .NET Framework  
 Полное доверие для непосредственно вызывающего метода. Этот член не может быть использован частично доверенным кодом. Дополнительные сведения см. в разделе [Использование библиотек из частично доверенного кода](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).  
  
   
  
## Examples  
 В следующем примере показано, как инициализировать <xref:System.Management.ManagementClass> переменную <xref:System.Management.ManagementClass> с помощью конструктора. В примере перечисляются методы, свойства и квалификаторы (включая измененные квалификаторы) для созданного класса.  
  
 [!code-csharp[wminet_ManagementClass-M_O#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementClass-M_O/cs/ManagementClass-M_O.cs#1)]
 [!code-vb[wminet_ManagementClass-M_O#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementClass-M_O/vb/ManagementClass-M_O.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ManagementClass (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementClass.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ManagementClass(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new System.Management.ManagementClass : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; System.Management.ManagementClass" Usage="new System.Management.ManagementClass (info, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="info">Экземпляр класса <see cref="T:System.Runtime.Serialization.SerializationInfo" /> содержит сведения, необходимые для сериализации нового <see cref="T:System.Management.ManagementClass" />.</param>
        <param name="context">Экземпляр класса <see cref="T:System.Runtime.Serialization.StreamingContext" /> содержит источник сериализованного потока, связанного с новым <see cref="T:System.Management.ManagementClass" />.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Management.ManagementClass" /> на основе указанных экземпляров классов <see cref="T:System.Runtime.Serialization.SerializationInfo" /> и <see cref="T:System.Runtime.Serialization.StreamingContext" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a>Безопасность платформы .NET Framework  
 Полное доверие для непосредственно вызывающего метода. Этот член не может быть использован частично доверенным кодом. Дополнительные сведения см. в разделе [Использование библиотек из частично доверенного кода](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManagementClass (string path, System.Management.ObjectGetOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path, class System.Management.ObjectGetOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementClass.#ctor(System.String,System.Management.ObjectGetOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String, options As ObjectGetOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ManagementClass(System::String ^ path, System::Management::ObjectGetOptions ^ options);" />
      <MemberSignature Language="F#" Value="new System.Management.ManagementClass : string * System.Management.ObjectGetOptions -&gt; System.Management.ManagementClass" Usage="new System.Management.ManagementClass (path, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="options" Type="System.Management.ObjectGetOptions" />
      </Parameters>
      <Docs>
        <param name="path">Путь к классу WMI. Класс представляет класс управления CIM из числа классов WMI. Классы CIM представляют сведения об управлении оборудованием, программным обеспечением, процессами и т. д. Дополнительные сведения о классах CIM, доступных в Windows, см. в разделе "Классы Win32" в документации по инструментарию управления Windows (WMI) в библиотеке MSDN по адресу http://msdn.microsoft.com/library.</param>
        <param name="options"><see cref="T:System.Management.ObjectGetOptions" /> представляет параметры, используемые при извлечении класса WMI.</param>
        <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Management.ManagementClass" />, инициализируемого по пути данного класса WMI с использованием заданных параметров. Этот класс представляет класс управления модели CIM — один из таких классов WMI, как **Win32_LogicalDisk**, который может представлять дисковый накопитель, или **Win32_Process**, который может представлять процесс, например Notepad.exe. Дополнительные сведения см. в разделе "Классы Win32" документации по инструментарию управления Windows (WMI) в библиотеке MSDN по адресу http://msdn.microsoft.com/library.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a>Безопасность платформы .NET Framework  
 Полное доверие для непосредственно вызывающего метода. Этот член не может быть использован частично доверенным кодом. Дополнительные сведения см. в разделе [Использование библиотек из частично доверенного кода](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).  
  
   
  
## Examples  
 В следующем примере показано, как инициализировать <xref:System.Management.ManagementClass> переменную <xref:System.Management.ManagementClass> с помощью конструктора. В примере перечисляются методы, свойства и квалификаторы (включая измененные квалификаторы) для созданного класса.  
  
 [!code-csharp[wminet_ManagementClass-S_O#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementClass-S_O/cs/ManagementClass-S_O.cs#1)]
 [!code-vb[wminet_ManagementClass-S_O#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementClass-S_O/vb/ManagementClass-S_O.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManagementClass (System.Management.ManagementScope scope, System.Management.ManagementPath path, System.Management.ObjectGetOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Management.ManagementScope scope, class System.Management.ManagementPath path, class System.Management.ObjectGetOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementClass.#ctor(System.Management.ManagementScope,System.Management.ManagementPath,System.Management.ObjectGetOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (scope As ManagementScope, path As ManagementPath, options As ObjectGetOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ManagementClass(System::Management::ManagementScope ^ scope, System::Management::ManagementPath ^ path, System::Management::ObjectGetOptions ^ options);" />
      <MemberSignature Language="F#" Value="new System.Management.ManagementClass : System.Management.ManagementScope * System.Management.ManagementPath * System.Management.ObjectGetOptions -&gt; System.Management.ManagementClass" Usage="new System.Management.ManagementClass (scope, path, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="scope" Type="System.Management.ManagementScope" />
        <Parameter Name="path" Type="System.Management.ManagementPath" />
        <Parameter Name="options" Type="System.Management.ObjectGetOptions" />
      </Parameters>
      <Docs>
        <param name="scope"><see cref="T:System.Management.ManagementScope" /> задает область (сервер и пространство имен), в которой располагается класс WMI.</param>
        <param name="path"><see cref="T:System.Management.ManagementPath" /> представляет путь к классу WMI в заданной области. Класс представляет класс управления CIM из числа классов WMI. Классы CIM представляют сведения об управлении оборудованием, программным обеспечением, процессами и т. д. Дополнительные сведения о классах CIM, доступных в Windows, см. в разделе "Классы Win32" в документации по инструментарию управления Windows (WMI) в библиотеке MSDN по адресу http://msdn.microsoft.com/library.</param>
        <param name="options"><see cref="T:System.Management.ObjectGetOptions" /> представляет параметры, используемые при извлечении класса WMI.</param>
        <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Management.ManagementClass" /> для заданного класса WMI в заданной области и с заданными параметрами. Этот класс представляет класс управления модели CIM — один из таких классов WMI, как **Win32_LogicalDisk**, который может представлять дисковый накопитель, или **Win32_Process**, который может представлять процесс, например Notepad.exe. Дополнительные сведения см. в разделе "Классы Win32" документации по инструментарию управления Windows (WMI) в библиотеке MSDN по адресу http://msdn.microsoft.com/library.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Путь можно указать в виде полного пути (включая сервер и пространство имен). Однако если указана область, то она будет переопределять первую часть полного пути.  
  
## <a name="net-framework-security"></a>Безопасность платформы .NET Framework  
 Полное доверие для непосредственно вызывающего метода. Этот член не может быть использован частично доверенным кодом. Дополнительные сведения см. в разделе [Использование библиотек из частично доверенного кода](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).  
  
   
  
## Examples  
 В следующем примере показано, как инициализировать <xref:System.Management.ManagementClass> переменную <xref:System.Management.ManagementClass> с помощью конструктора. В примере перечисляются методы, свойства и квалификаторы (включая измененные квалификаторы) для созданного класса. Необходимо изменить область (пространство имен) в коде, чтобы пример выполнялся правильно на компьютере.  
  
 [!code-csharp[wminet_ManagementClass-M_M_O#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementClass-M_M_O/cs/ManagementClass-M_M_O.cs#1)]
 [!code-vb[wminet_ManagementClass-M_M_O#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementClass-M_M_O/vb/ManagementClass-M_M_O.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManagementClass (string scope, string path, System.Management.ObjectGetOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string scope, string path, class System.Management.ObjectGetOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementClass.#ctor(System.String,System.String,System.Management.ObjectGetOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (scope As String, path As String, options As ObjectGetOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ManagementClass(System::String ^ scope, System::String ^ path, System::Management::ObjectGetOptions ^ options);" />
      <MemberSignature Language="F#" Value="new System.Management.ManagementClass : string * string * System.Management.ObjectGetOptions -&gt; System.Management.ManagementClass" Usage="new System.Management.ManagementClass (scope, path, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="scope" Type="System.String" />
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="options" Type="System.Management.ObjectGetOptions" />
      </Parameters>
      <Docs>
        <param name="scope">Область, в которой располагается класс WMI.</param>
        <param name="path">Путь к классу WMI в пределах заданной области. Класс представляет класс управления CIM из числа классов WMI. Классы CIM представляют сведения об управлении оборудованием, программным обеспечением, процессами и т. д. Дополнительные сведения о классах CIM, доступных в Windows, см. в разделе "Классы Win32" в документации по инструментарию управления Windows (WMI) в библиотеке MSDN по адресу http://msdn.microsoft.com/library.</param>
        <param name="options"><see cref="T:System.Management.ObjectGetOptions" /> представляет параметры, используемые при извлечении класса WMI.</param>
        <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.Management.ManagementClass" /> для заданного класса WMI в заданной области и с заданными параметрами. Этот класс представляет класс управления модели CIM — один из таких классов WMI, как **Win32_LogicalDisk**, который может представлять дисковый накопитель, или **Win32_Process**, который может представлять процесс, например Notepad.exe. Дополнительные сведения см. в разделе "Классы Win32" документации по инструментарию управления Windows (WMI) в библиотеке MSDN по адресу http://msdn.microsoft.com/library.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Путь можно указать в виде полного пути (включая сервер и пространство имен). Однако если указана область, то она будет переопределять первую часть полного пути.  
  
## <a name="net-framework-security"></a>Безопасность платформы .NET Framework  
 Полное доверие для непосредственно вызывающего метода. Этот член не может быть использован частично доверенным кодом. Дополнительные сведения см. в разделе [Использование библиотек из частично доверенного кода](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).  
  
   
  
## Examples  
 В следующем примере показано, как инициализировать <xref:System.Management.ManagementClass> переменную <xref:System.Management.ManagementClass> с помощью конструктора. В примере перечисляются методы, свойства и квалификаторы (включая измененные квалификаторы) для созданного класса. Необходимо изменить область (пространство имен) в коде, чтобы пример выполнялся правильно на компьютере.  
  
 [!code-csharp[wminet_ManagementClass-S_S_O#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementClass-S_S_O/cs/ManagementClass-S_S_O.cs#1)]
 [!code-vb[wminet_ManagementClass-S_S_O#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementClass-S_S_O/vb/ManagementClass-S_S_O.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public override object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementClass.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ Clone();" />
      <MemberSignature Language="F#" Value="override this.Clone : unit -&gt; obj" Usage="managementClass.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает копию объекта.</summary>
        <returns>Клонированный объект.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Обратите внимание, что при этом не создается копия класса WMI. создается только дополнительное представление.  
  
## <a name="net-framework-security"></a>Безопасность платформы .NET Framework  
 Полное доверие для непосредственно вызывающего метода. Этот член не может быть использован частично доверенным кодом. Дополнительные сведения см. в разделе [Использование библиотек из частично доверенного кода](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public System.Management.ManagementObject CreateInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Management.ManagementObject CreateInstance() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementClass.CreateInstance" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateInstance () As ManagementObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Management::ManagementObject ^ CreateInstance();" />
      <MemberSignature Language="F#" Value="member this.CreateInstance : unit -&gt; System.Management.ManagementObject" Usage="managementClass.CreateInstance " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.ManagementObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Выполняет инициализацию нового экземпляра класса WMI.</summary>
        <returns><see cref="T:System.Management.ManagementObject" /> представляет новый экземпляр класса WMI.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Обратите внимание, что новый экземпляр не фиксируется <xref:System.Management.ManagementObject.Put%2A>, пока не будет вызван метод (). Перед фиксацией необходимо указать ключевые свойства.  
  
## <a name="net-framework-security"></a>Безопасность платформы .NET Framework  
 Полное доверие для непосредственно вызывающего метода. Этот член не может быть использован частично доверенным кодом. Дополнительные сведения см. в разделе [Использование библиотек из частично доверенного кода](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).  
  
   
  
## Examples  
 В следующем примере показано, как инициализировать <xref:System.Management.ManagementClass> переменную <xref:System.Management.ManagementClass> с помощью конструктора, а затем создать новый экземпляр класса WMI.  
  
 [!code-csharp[wminet_ManagementClass_CreateInstance#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementClass_CreateInstance/cs/ManagementClass_CreateInstance.cs#1)]
 [!code-vb[wminet_ManagementClass_CreateInstance#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementClass_CreateInstance/vb/ManagementClass_CreateInstance.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Derivation">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.StringCollection Derivation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.StringCollection Derivation" />
      <MemberSignature Language="DocId" Value="P:System.Management.ManagementClass.Derivation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Derivation As StringCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::StringCollection ^ Derivation { System::Collections::Specialized::StringCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Derivation : System.Collections.Specialized.StringCollection" Usage="System.Management.ManagementClass.Derivation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.StringCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает массив, содержащий все классы WMI в иерархии наследования, начиная с этого класса до самого верхнего класса иерархии.</summary>
        <value>Коллекция строк, в которой содержатся имена всех классов WMI в иерархии наследования этого класса.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это свойство доступно только для чтения.  
  
## <a name="net-framework-security"></a>Безопасность платформы .NET Framework  
 Полное доверие для непосредственно вызывающего метода. Этот член не может быть использован частично доверенным кодом. Дополнительные сведения см. в разделе [Использование библиотек из частично доверенного кода](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).  
  
   
  
## Examples  
 В следующем примере показано, как инициализировать <xref:System.Management.ManagementClass> переменную <xref:System.Management.ManagementClass> с помощью конструктора, а затем получить все классы в иерархии наследования от класса WMI, переданного в конструктор, в верхнюю часть иерархии.  
  
 [!code-csharp[wminet_ManagementClass_Derivation#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementClass_Derivation/cs/ManagementClass_Derivation.cs#1)]
 [!code-vb[wminet_ManagementClass_Derivation#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementClass_Derivation/vb/ManagementClass_Derivation.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Derive">
      <MemberSignature Language="C#" Value="public System.Management.ManagementClass Derive (string newClassName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Management.ManagementClass Derive(string newClassName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementClass.Derive(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Derive (newClassName As String) As ManagementClass" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Management::ManagementClass ^ Derive(System::String ^ newClassName);" />
      <MemberSignature Language="F#" Value="member this.Derive : string -&gt; System.Management.ManagementClass" Usage="managementClass.Derive newClassName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.ManagementClass</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newClassName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="newClassName">Имя нового производного класса.</param>
        <summary>Создает производный класс для данного класса.</summary>
        <returns>Новый <see cref="T:System.Management.ManagementClass" />, который представляет новый класс WMI, производный от исходного класса.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Обратите внимание, что вновь возвращаемый класс не был зафиксирован <xref:System.Management.ManagementObject.Put%2A>, пока не будет явно вызван метод ().  
  
## <a name="net-framework-security"></a>Безопасность платформы .NET Framework  
 Полное доверие для непосредственно вызывающего метода. Этот член не может быть использован частично доверенным кодом. Дополнительные сведения см. в разделе [Использование библиотек из частично доверенного кода](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).  
  
   
  
## Examples  
 В следующем примере показано, как инициализировать <xref:System.Management.ManagementClass> переменную <xref:System.Management.ManagementClass> с помощью конструктора, а затем создать производный экземпляр класса WMI.  
  
 [!code-csharp[wminet_ManagementClass_Derive#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementClass_Derive/cs/ManagementClass_Derive.cs#1)]
 [!code-vb[wminet_ManagementClass_Derive#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementClass_Derive/vb/ManagementClass_Derive.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetInstances">
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Возвращает коллекцию всех экземпляров класса.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a>Безопасность платформы .NET Framework  
 Полное доверие для непосредственно вызывающего метода. Этот член не может быть использован частично доверенным кодом. Дополнительные сведения см. в разделе [Использование библиотек из частично доверенного кода](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetInstances">
      <MemberSignature Language="C#" Value="public System.Management.ManagementObjectCollection GetInstances ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Management.ManagementObjectCollection GetInstances() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementClass.GetInstances" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInstances () As ManagementObjectCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Management::ManagementObjectCollection ^ GetInstances();" />
      <MemberSignature Language="F#" Value="member this.GetInstances : unit -&gt; System.Management.ManagementObjectCollection" Usage="managementClass.GetInstances " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.ManagementObjectCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает коллекцию всех экземпляров класса.</summary>
        <returns>Коллекция объектов <see cref="T:System.Management.ManagementObject" />, представляющих экземпляры класса.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a>Безопасность платформы .NET Framework  
 Полное доверие для непосредственно вызывающего метода. Этот член не может быть использован частично доверенным кодом. Дополнительные сведения см. в разделе [Использование библиотек из частично доверенного кода](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).  
  
   
  
## Examples  
 В следующем примере показано, как инициализировать <xref:System.Management.ManagementClass> переменную <xref:System.Management.ManagementClass> с помощью конструктора, а затем получить все экземпляры класса WMI.  
  
 [!code-csharp[wminet_ManagementClass_GetInstances#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementClass_GetInstances/cs/ManagementClass_GetInstances.cs#1)]
 [!code-vb[wminet_ManagementClass_GetInstances#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementClass_GetInstances/vb/ManagementClass_GetInstances.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInstances">
      <MemberSignature Language="C#" Value="public System.Management.ManagementObjectCollection GetInstances (System.Management.EnumerationOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Management.ManagementObjectCollection GetInstances(class System.Management.EnumerationOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementClass.GetInstances(System.Management.EnumerationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInstances (options As EnumerationOptions) As ManagementObjectCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Management::ManagementObjectCollection ^ GetInstances(System::Management::EnumerationOptions ^ options);" />
      <MemberSignature Language="F#" Value="member this.GetInstances : System.Management.EnumerationOptions -&gt; System.Management.ManagementObjectCollection" Usage="managementClass.GetInstances options" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.ManagementObjectCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.Management.EnumerationOptions" />
      </Parameters>
      <Docs>
        <param name="options">Дополнительные параметры операции.</param>
        <summary>Возвращает коллекцию всех экземпляров класса в соответствии с заданными параметрами.</summary>
        <returns>Коллекция объектов <see cref="T:System.Management.ManagementObject" />, представляющих экземпляры класса в соответствии с заданными параметрами.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a>Безопасность платформы .NET Framework  
 Полное доверие для непосредственно вызывающего метода. Этот член не может быть использован частично доверенным кодом. Дополнительные сведения см. в разделе [Использование библиотек из частично доверенного кода](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).  
  
   
  
## Examples  
 В следующем примере показано, как инициализировать <xref:System.Management.ManagementClass> переменную <xref:System.Management.ManagementClass> с помощью конструктора, а затем получить все экземпляры класса WMI и его подклассов.  
  
 [!code-csharp[wminet_ManagementClass_GetInstances-E#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementClass_GetInstances-E/cs/ManagementClass_GetInstances-E.cs#1)]
 [!code-vb[wminet_ManagementClass_GetInstances-E#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementClass_GetInstances-E/vb/ManagementClass_GetInstances-E.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInstances">
      <MemberSignature Language="C#" Value="public void GetInstances (System.Management.ManagementOperationObserver watcher);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GetInstances(class System.Management.ManagementOperationObserver watcher) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementClass.GetInstances(System.Management.ManagementOperationObserver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetInstances (watcher As ManagementOperationObserver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetInstances(System::Management::ManagementOperationObserver ^ watcher);" />
      <MemberSignature Language="F#" Value="member this.GetInstances : System.Management.ManagementOperationObserver -&gt; unit" Usage="managementClass.GetInstances watcher" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="watcher" Type="System.Management.ManagementOperationObserver" />
      </Parameters>
      <Docs>
        <param name="watcher">Объект, предназначенный для управления асинхронной операцией.</param>
        <summary>Возвращает коллекцию всех экземпляров класса в асинхронном режиме.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a>Безопасность платформы .NET Framework  
 Полное доверие для непосредственно вызывающего метода. Этот член не может быть использован частично доверенным кодом. Дополнительные сведения см. в разделе [Использование библиотек из частично доверенного кода](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).  
  
   
  
## Examples  
 В следующем примере показано, как инициализировать <xref:System.Management.ManagementClass> переменную <xref:System.Management.ManagementClass> с помощью конструктора, а затем асинхронно получить все экземпляры класса WMI.  
  
 [!code-csharp[wminet_ManagementClass_GetInstances-M#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementClass_GetInstances-M/cs/ManagementClass_GetInstances-M.cs#1)]
 [!code-vb[wminet_ManagementClass_GetInstances-M#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementClass_GetInstances-M/vb/ManagementClass_GetInstances-M.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInstances">
      <MemberSignature Language="C#" Value="public void GetInstances (System.Management.ManagementOperationObserver watcher, System.Management.EnumerationOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GetInstances(class System.Management.ManagementOperationObserver watcher, class System.Management.EnumerationOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementClass.GetInstances(System.Management.ManagementOperationObserver,System.Management.EnumerationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetInstances (watcher As ManagementOperationObserver, options As EnumerationOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetInstances(System::Management::ManagementOperationObserver ^ watcher, System::Management::EnumerationOptions ^ options);" />
      <MemberSignature Language="F#" Value="member this.GetInstances : System.Management.ManagementOperationObserver * System.Management.EnumerationOptions -&gt; unit" Usage="managementClass.GetInstances (watcher, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="watcher" Type="System.Management.ManagementOperationObserver" />
        <Parameter Name="options" Type="System.Management.EnumerationOptions" />
      </Parameters>
      <Docs>
        <param name="watcher">Объект, предназначенный для управления асинхронной операцией.</param>
        <param name="options">Заданные дополнительные параметры получения экземпляров.</param>
        <summary>Возвращает коллекцию всех экземпляров класса в соответствии с заданными параметрами в асинхронном режиме.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a>Безопасность платформы .NET Framework  
 Полное доверие для непосредственно вызывающего метода. Этот член не может быть использован частично доверенным кодом. Дополнительные сведения см. в разделе [Использование библиотек из частично доверенного кода](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="protected override void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementClass.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="override this.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="managementClass.GetObjectData (info, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="info">Объект, для которого будут заполнены сведения о сериализации.</param>
        <param name="context">Местоположение, где будут храниться и откуда будут извлекаться сериализованные данные.</param>
        <summary>Заполняет <see cref="T:System.Runtime.Serialization.SerializationInfo" /> данными, которые необходимы для десериализации поля, представленного данным экземпляром.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a>Безопасность платформы .NET Framework  
 Полное доверие для непосредственно вызывающего метода. Этот член не может быть использован частично доверенным кодом. Дополнительные сведения см. в разделе [Использование библиотек из частично доверенного кода](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetRelatedClasses">
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Извлекает классы, связанные с классом WMI.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a>Безопасность платформы .NET Framework  
 Полное доверие для непосредственно вызывающего метода. Этот член не может быть использован частично доверенным кодом. Дополнительные сведения см. в разделе [Использование библиотек из частично доверенного кода](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetRelatedClasses">
      <MemberSignature Language="C#" Value="public System.Management.ManagementObjectCollection GetRelatedClasses ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Management.ManagementObjectCollection GetRelatedClasses() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementClass.GetRelatedClasses" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRelatedClasses () As ManagementObjectCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Management::ManagementObjectCollection ^ GetRelatedClasses();" />
      <MemberSignature Language="F#" Value="member this.GetRelatedClasses : unit -&gt; System.Management.ManagementObjectCollection" Usage="managementClass.GetRelatedClasses " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.ManagementObjectCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Извлекает классы, связанные с классом WMI.</summary>
        <returns>Коллекция объектов <see cref="T:System.Management.ManagementClass" /> или <see cref="T:System.Management.ManagementObject" />, представляющая классы WMI или экземпляры, связанные с классом WMI.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод запрашивает схему WMI для всех возможных связей, которые класс WMI может использовать с другими классами, или в редких случаях для экземпляров. Дополнительные сведения о связанных классах см. в разделе "СОЕДИНИТЕЛи оператора" в документации по инструментарий управления Windows (WMI) в библиотеке MSDN по http://msdn.microsoft.com/libraryадресу.  
  
## <a name="net-framework-security"></a>Безопасность платформы .NET Framework  
 Полное доверие для непосредственно вызывающего метода. Этот член не может быть использован частично доверенным кодом. Дополнительные сведения см. в разделе [Использование библиотек из частично доверенного кода](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).  
  
   
  
## Examples  
 В следующем примере показано, как инициализировать <xref:System.Management.ManagementClass> переменную <xref:System.Management.ManagementClass> с помощью конструктора, а затем вывести список всех классов, связанных с классом WMI, переданным в конструктор.  
  
 [!code-csharp[wminet_ManagementClass_GetRelatedClasses#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementClass_GetRelatedClasses/cs/ManagementClass_GetRelatedClasses.cs#1)]
 [!code-vb[wminet_ManagementClass_GetRelatedClasses#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementClass_GetRelatedClasses/vb/ManagementClass_GetRelatedClasses.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRelatedClasses">
      <MemberSignature Language="C#" Value="public void GetRelatedClasses (System.Management.ManagementOperationObserver watcher);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GetRelatedClasses(class System.Management.ManagementOperationObserver watcher) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementClass.GetRelatedClasses(System.Management.ManagementOperationObserver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetRelatedClasses (watcher As ManagementOperationObserver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetRelatedClasses(System::Management::ManagementOperationObserver ^ watcher);" />
      <MemberSignature Language="F#" Value="member this.GetRelatedClasses : System.Management.ManagementOperationObserver -&gt; unit" Usage="managementClass.GetRelatedClasses watcher" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="watcher" Type="System.Management.ManagementOperationObserver" />
      </Parameters>
      <Docs>
        <param name="watcher">Объект, предназначенный для управления асинхронной операцией.</param>
        <summary>Извлекает классы, связанные с классом WMI, в асинхронном режиме.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a>Безопасность платформы .NET Framework  
 Полное доверие для непосредственно вызывающего метода. Этот член не может быть использован частично доверенным кодом. Дополнительные сведения см. в разделе [Использование библиотек из частично доверенного кода](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRelatedClasses">
      <MemberSignature Language="C#" Value="public System.Management.ManagementObjectCollection GetRelatedClasses (string relatedClass);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Management.ManagementObjectCollection GetRelatedClasses(string relatedClass) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementClass.GetRelatedClasses(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRelatedClasses (relatedClass As String) As ManagementObjectCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Management::ManagementObjectCollection ^ GetRelatedClasses(System::String ^ relatedClass);" />
      <MemberSignature Language="F#" Value="member this.GetRelatedClasses : string -&gt; System.Management.ManagementObjectCollection" Usage="managementClass.GetRelatedClasses relatedClass" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.ManagementObjectCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relatedClass" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="relatedClass">Класс, на основе которого необходимо создать производные результирующие классы.</param>
        <summary>Извлекает классы, связанные с классом WMI.</summary>
        <returns>Коллекция классов, связанных с данным классом.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a>Безопасность платформы .NET Framework  
 Полное доверие для непосредственно вызывающего метода. Этот член не может быть использован частично доверенным кодом. Дополнительные сведения см. в разделе [Использование библиотек из частично доверенного кода](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRelatedClasses">
      <MemberSignature Language="C#" Value="public void GetRelatedClasses (System.Management.ManagementOperationObserver watcher, string relatedClass);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GetRelatedClasses(class System.Management.ManagementOperationObserver watcher, string relatedClass) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementClass.GetRelatedClasses(System.Management.ManagementOperationObserver,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetRelatedClasses (watcher As ManagementOperationObserver, relatedClass As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetRelatedClasses(System::Management::ManagementOperationObserver ^ watcher, System::String ^ relatedClass);" />
      <MemberSignature Language="F#" Value="member this.GetRelatedClasses : System.Management.ManagementOperationObserver * string -&gt; unit" Usage="managementClass.GetRelatedClasses (watcher, relatedClass)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="watcher" Type="System.Management.ManagementOperationObserver" />
        <Parameter Name="relatedClass" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="watcher">Объект, предназначенный для управления асинхронной операцией.</param>
        <param name="relatedClass">Имя связанного класса.</param>
        <summary>Извлекает классы, связанные с классом WMI, по имени связанного класса в асинхронном режиме.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a>Безопасность платформы .NET Framework  
 Полное доверие для непосредственно вызывающего метода. Этот член не может быть использован частично доверенным кодом. Дополнительные сведения см. в разделе [Использование библиотек из частично доверенного кода](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRelatedClasses">
      <MemberSignature Language="C#" Value="public System.Management.ManagementObjectCollection GetRelatedClasses (string relatedClass, string relationshipClass, string relationshipQualifier, string relatedQualifier, string relatedRole, string thisRole, System.Management.EnumerationOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Management.ManagementObjectCollection GetRelatedClasses(string relatedClass, string relationshipClass, string relationshipQualifier, string relatedQualifier, string relatedRole, string thisRole, class System.Management.EnumerationOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementClass.GetRelatedClasses(System.String,System.String,System.String,System.String,System.String,System.String,System.Management.EnumerationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRelatedClasses (relatedClass As String, relationshipClass As String, relationshipQualifier As String, relatedQualifier As String, relatedRole As String, thisRole As String, options As EnumerationOptions) As ManagementObjectCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Management::ManagementObjectCollection ^ GetRelatedClasses(System::String ^ relatedClass, System::String ^ relationshipClass, System::String ^ relationshipQualifier, System::String ^ relatedQualifier, System::String ^ relatedRole, System::String ^ thisRole, System::Management::EnumerationOptions ^ options);" />
      <MemberSignature Language="F#" Value="member this.GetRelatedClasses : string * string * string * string * string * string * System.Management.EnumerationOptions -&gt; System.Management.ManagementObjectCollection" Usage="managementClass.GetRelatedClasses (relatedClass, relationshipClass, relationshipQualifier, relatedQualifier, relatedRole, thisRole, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.ManagementObjectCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relatedClass" Type="System.String" />
        <Parameter Name="relationshipClass" Type="System.String" />
        <Parameter Name="relationshipQualifier" Type="System.String" />
        <Parameter Name="relatedQualifier" Type="System.String" />
        <Parameter Name="relatedRole" Type="System.String" />
        <Parameter Name="thisRole" Type="System.String" />
        <Parameter Name="options" Type="System.Management.EnumerationOptions" />
      </Parameters>
      <Docs>
        <param name="relatedClass">Класс, на основе которого необходимо создать производные результирующие классы.</param>
        <param name="relationshipClass">Тип отношения, который необходимо установить между результирующими классами и исходным классом.</param>
        <param name="relationshipQualifier">Этот квалификатор должен присутствовать в отношении.</param>
        <param name="relatedQualifier">Этот квалификатор должен присутствовать в результирующих классах.</param>
        <param name="relatedRole">Результирующие классы должны играть эту роль в отношении.</param>
        <param name="thisRole">Исходный класс должен играть эту роль в отношении.</param>
        <param name="options">Параметры извлечения результирующих классов.</param>
        <summary>Извлекает классы, связанные с классом WMI, в соответствии с заданными параметрами.</summary>
        <returns>Коллекция классов, связанных с данным классом.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a>Безопасность платформы .NET Framework  
 Полное доверие для непосредственно вызывающего метода. Этот член не может быть использован частично доверенным кодом. Дополнительные сведения см. в разделе [Использование библиотек из частично доверенного кода](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).  
  
   
  
## Examples  
 В следующем примере <xref:System.Management.ManagementClass.GetRelatedClasses%2A> метод используется для перечисления связанных классов в класс **CIM_LogicalDisk** . Дополнительные сведения см. в разделе «CIM_LogicalDisk» документации по инструментарий управления Windows (WMI) в библиотеке MSDN по адресу http://msdn.microsoft.com/library.  
  
 [!code-csharp[wminet_ManagementClass_GetRelatedClasses-7#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementClass_GetRelatedClasses-7/cs/ManagementClass_GetRelatedClasses-7.cs#1)]
 [!code-vb[wminet_ManagementClass_GetRelatedClasses-7#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementClass_GetRelatedClasses-7/vb/ManagementClass_GetRelatedClasses-7.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRelatedClasses">
      <MemberSignature Language="C#" Value="public void GetRelatedClasses (System.Management.ManagementOperationObserver watcher, string relatedClass, string relationshipClass, string relationshipQualifier, string relatedQualifier, string relatedRole, string thisRole, System.Management.EnumerationOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GetRelatedClasses(class System.Management.ManagementOperationObserver watcher, string relatedClass, string relationshipClass, string relationshipQualifier, string relatedQualifier, string relatedRole, string thisRole, class System.Management.EnumerationOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementClass.GetRelatedClasses(System.Management.ManagementOperationObserver,System.String,System.String,System.String,System.String,System.String,System.String,System.Management.EnumerationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetRelatedClasses (watcher As ManagementOperationObserver, relatedClass As String, relationshipClass As String, relationshipQualifier As String, relatedQualifier As String, relatedRole As String, thisRole As String, options As EnumerationOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetRelatedClasses(System::Management::ManagementOperationObserver ^ watcher, System::String ^ relatedClass, System::String ^ relationshipClass, System::String ^ relationshipQualifier, System::String ^ relatedQualifier, System::String ^ relatedRole, System::String ^ thisRole, System::Management::EnumerationOptions ^ options);" />
      <MemberSignature Language="F#" Value="member this.GetRelatedClasses : System.Management.ManagementOperationObserver * string * string * string * string * string * string * System.Management.EnumerationOptions -&gt; unit" Usage="managementClass.GetRelatedClasses (watcher, relatedClass, relationshipClass, relationshipQualifier, relatedQualifier, relatedRole, thisRole, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="watcher" Type="System.Management.ManagementOperationObserver" />
        <Parameter Name="relatedClass" Type="System.String" />
        <Parameter Name="relationshipClass" Type="System.String" />
        <Parameter Name="relationshipQualifier" Type="System.String" />
        <Parameter Name="relatedQualifier" Type="System.String" />
        <Parameter Name="relatedRole" Type="System.String" />
        <Parameter Name="thisRole" Type="System.String" />
        <Parameter Name="options" Type="System.Management.EnumerationOptions" />
      </Parameters>
      <Docs>
        <param name="watcher">Обработчик процесса и результатов асинхронной операции.</param>
        <param name="relatedClass">Класс, на основе которого необходимо создать производные результирующие классы.</param>
        <param name="relationshipClass">Тип отношения, который необходимо установить между результирующими классами и исходным классом.</param>
        <param name="relationshipQualifier">Этот квалификатор должен присутствовать в отношении.</param>
        <param name="relatedQualifier">Этот квалификатор должен присутствовать в результирующих классах.</param>
        <param name="relatedRole">Результирующие классы должны играть эту роль в отношении.</param>
        <param name="thisRole">Исходный класс должен играть эту роль в отношении.</param>
        <param name="options">Параметры извлечения результирующих классов.</param>
        <summary>Извлекает классы, связанные с WMI-классом, в асинхронном режиме в соответствии с заданными параметрами.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a>Безопасность платформы .NET Framework  
 Полное доверие для непосредственно вызывающего метода. Этот член не может быть использован частично доверенным кодом. Дополнительные сведения см. в разделе [Использование библиотек из частично доверенного кода](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetRelationshipClasses">
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Извлекает классы отношений, которые связывают данный класс с другими.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a>Безопасность платформы .NET Framework  
 Полное доверие для непосредственно вызывающего метода. Этот член не может быть использован частично доверенным кодом. Дополнительные сведения см. в разделе [Использование библиотек из частично доверенного кода](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetRelationshipClasses">
      <MemberSignature Language="C#" Value="public System.Management.ManagementObjectCollection GetRelationshipClasses ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Management.ManagementObjectCollection GetRelationshipClasses() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementClass.GetRelationshipClasses" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRelationshipClasses () As ManagementObjectCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Management::ManagementObjectCollection ^ GetRelationshipClasses();" />
      <MemberSignature Language="F#" Value="member this.GetRelationshipClasses : unit -&gt; System.Management.ManagementObjectCollection" Usage="managementClass.GetRelationshipClasses " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.ManagementObjectCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Извлекает классы отношений, которые связывают данный класс с другими.</summary>
        <returns>Коллекция *классов сопоставлений*, которые связывают данный класс с каким-либо другим классом.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a>Безопасность платформы .NET Framework  
 Полное доверие для непосредственно вызывающего метода. Этот член не может быть использован частично доверенным кодом. Дополнительные сведения см. в разделе [Использование библиотек из частично доверенного кода](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).  
  
   
  
## Examples  
 В следующем примере <xref:System.Management.ManagementClass.GetRelationshipClasses%2A> метод используется для перечисления классов отношений в класс **CIM_LogicalDisk** . Дополнительные сведения см. в разделе «CIM_LogicalDisk» документации по инструментарий управления Windows (WMI) в библиотеке MSDN по адресу http://msdn.microsoft.com/library.  
  
 [!code-csharp[wminet_ManagementClass_GetRelationshipClasses#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementClass_GetRelationshipClasses/cs/ManagementClass_GetRelationshipClasses.cs#1)]
 [!code-vb[wminet_ManagementClass_GetRelationshipClasses#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementClass_GetRelationshipClasses/vb/ManagementClass_GetRelationshipClasses.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRelationshipClasses">
      <MemberSignature Language="C#" Value="public void GetRelationshipClasses (System.Management.ManagementOperationObserver watcher);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GetRelationshipClasses(class System.Management.ManagementOperationObserver watcher) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementClass.GetRelationshipClasses(System.Management.ManagementOperationObserver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetRelationshipClasses (watcher As ManagementOperationObserver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetRelationshipClasses(System::Management::ManagementOperationObserver ^ watcher);" />
      <MemberSignature Language="F#" Value="member this.GetRelationshipClasses : System.Management.ManagementOperationObserver -&gt; unit" Usage="managementClass.GetRelationshipClasses watcher" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="watcher" Type="System.Management.ManagementOperationObserver" />
      </Parameters>
      <Docs>
        <param name="watcher">Объект, предназначенный для управления асинхронной операцией.</param>
        <summary>Извлекает классы отношений, которые связывают данный класс с другими, в асинхронном режиме.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a>Безопасность платформы .NET Framework  
 Полное доверие для непосредственно вызывающего метода. Этот член не может быть использован частично доверенным кодом. Дополнительные сведения см. в разделе [Использование библиотек из частично доверенного кода](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRelationshipClasses">
      <MemberSignature Language="C#" Value="public System.Management.ManagementObjectCollection GetRelationshipClasses (string relationshipClass);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Management.ManagementObjectCollection GetRelationshipClasses(string relationshipClass) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementClass.GetRelationshipClasses(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRelationshipClasses (relationshipClass As String) As ManagementObjectCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Management::ManagementObjectCollection ^ GetRelationshipClasses(System::String ^ relationshipClass);" />
      <MemberSignature Language="F#" Value="member this.GetRelationshipClasses : string -&gt; System.Management.ManagementObjectCollection" Usage="managementClass.GetRelationshipClasses relationshipClass" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.ManagementObjectCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationshipClass" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="relationshipClass">Конечный класс для всех возвращенных классов отношений.</param>
        <summary>Извлекает классы отношений, которые связывают данный класс с другими, в случае, если заданный класс является конечным классом.</summary>
        <returns>Коллекция *классов сопоставлений*, которые связывают данный класс с другим заданным классом. Дополнительные сведения о классах отношений см. в разделе "Инструкция ASSOCIATORS OF" в документации по инструментарию управления Windows (WMI) по адресу http://msdn.microsoft.com/library.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a>Безопасность платформы .NET Framework  
 Полное доверие для непосредственно вызывающего метода. Этот член не может быть использован частично доверенным кодом. Дополнительные сведения см. в разделе [Использование библиотек из частично доверенного кода](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRelationshipClasses">
      <MemberSignature Language="C#" Value="public void GetRelationshipClasses (System.Management.ManagementOperationObserver watcher, string relationshipClass);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GetRelationshipClasses(class System.Management.ManagementOperationObserver watcher, string relationshipClass) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementClass.GetRelationshipClasses(System.Management.ManagementOperationObserver,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetRelationshipClasses (watcher As ManagementOperationObserver, relationshipClass As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetRelationshipClasses(System::Management::ManagementOperationObserver ^ watcher, System::String ^ relationshipClass);" />
      <MemberSignature Language="F#" Value="member this.GetRelationshipClasses : System.Management.ManagementOperationObserver * string -&gt; unit" Usage="managementClass.GetRelationshipClasses (watcher, relationshipClass)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="watcher" Type="System.Management.ManagementOperationObserver" />
        <Parameter Name="relationshipClass" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="watcher">Объект, предназначенный для управления асинхронной операцией.</param>
        <param name="relationshipClass">Класс WMI, на который должны указывать все возвращенные отношения.</param>
        <summary>Извлекает классы отношений, которые связывают данный класс с указанным WMI-классом, в асинхронном режиме.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Дополнительные сведения о классах отношений см. в подразделе «СОЕДИНИТЕЛи оператора» документации по инструментарий управления Windows (WMI) в библиотеке MSDN по http://msdn.microsoft.com/libraryадресу.  
  
## <a name="net-framework-security"></a>Безопасность платформы .NET Framework  
 Полное доверие для непосредственно вызывающего метода. Этот член не может быть использован частично доверенным кодом. Дополнительные сведения см. в разделе [Использование библиотек из частично доверенного кода](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRelationshipClasses">
      <MemberSignature Language="C#" Value="public System.Management.ManagementObjectCollection GetRelationshipClasses (string relationshipClass, string relationshipQualifier, string thisRole, System.Management.EnumerationOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Management.ManagementObjectCollection GetRelationshipClasses(string relationshipClass, string relationshipQualifier, string thisRole, class System.Management.EnumerationOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementClass.GetRelationshipClasses(System.String,System.String,System.String,System.Management.EnumerationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRelationshipClasses (relationshipClass As String, relationshipQualifier As String, thisRole As String, options As EnumerationOptions) As ManagementObjectCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Management::ManagementObjectCollection ^ GetRelationshipClasses(System::String ^ relationshipClass, System::String ^ relationshipQualifier, System::String ^ thisRole, System::Management::EnumerationOptions ^ options);" />
      <MemberSignature Language="F#" Value="member this.GetRelationshipClasses : string * string * string * System.Management.EnumerationOptions -&gt; System.Management.ManagementObjectCollection" Usage="managementClass.GetRelationshipClasses (relationshipClass, relationshipQualifier, thisRole, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.ManagementObjectCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationshipClass" Type="System.String" />
        <Parameter Name="relationshipQualifier" Type="System.String" />
        <Parameter Name="thisRole" Type="System.String" />
        <Parameter Name="options" Type="System.Management.EnumerationOptions" />
      </Parameters>
      <Docs>
        <param name="relationshipClass">Все производные результирующие классы отношений должны создаваться на основе этого класса.</param>
        <param name="relationshipQualifier">Результирующие классы отношений должны содержать этот квалификатор.</param>
        <param name="thisRole">Исходный класс должен играть эту роль в результирующих классах отношений.</param>
        <param name="options">Задает параметры извлечения результатов.</param>
        <summary>Извлекает классы отношений, которые связывают данный класс с другими, в соответствии с заданными параметрами, в асинхронном режиме.</summary>
        <returns>Коллекция *классов сопоставлений*, которые связывают данный класс с другими в соответствии с заданными параметрами. Дополнительные сведения о классах отношений см. в разделе "Инструкция ASSOCIATORS OF" в документации по инструментарию управления Windows (WMI) по адресу http://msdn.microsoft.com/library.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a>Безопасность платформы .NET Framework  
 Полное доверие для непосредственно вызывающего метода. Этот член не может быть использован частично доверенным кодом. Дополнительные сведения см. в разделе [Использование библиотек из частично доверенного кода](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRelationshipClasses">
      <MemberSignature Language="C#" Value="public void GetRelationshipClasses (System.Management.ManagementOperationObserver watcher, string relationshipClass, string relationshipQualifier, string thisRole, System.Management.EnumerationOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GetRelationshipClasses(class System.Management.ManagementOperationObserver watcher, string relationshipClass, string relationshipQualifier, string thisRole, class System.Management.EnumerationOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementClass.GetRelationshipClasses(System.Management.ManagementOperationObserver,System.String,System.String,System.String,System.Management.EnumerationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetRelationshipClasses (watcher As ManagementOperationObserver, relationshipClass As String, relationshipQualifier As String, thisRole As String, options As EnumerationOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetRelationshipClasses(System::Management::ManagementOperationObserver ^ watcher, System::String ^ relationshipClass, System::String ^ relationshipQualifier, System::String ^ thisRole, System::Management::EnumerationOptions ^ options);" />
      <MemberSignature Language="F#" Value="member this.GetRelationshipClasses : System.Management.ManagementOperationObserver * string * string * string * System.Management.EnumerationOptions -&gt; unit" Usage="managementClass.GetRelationshipClasses (watcher, relationshipClass, relationshipQualifier, thisRole, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="watcher" Type="System.Management.ManagementOperationObserver" />
        <Parameter Name="relationshipClass" Type="System.String" />
        <Parameter Name="relationshipQualifier" Type="System.String" />
        <Parameter Name="thisRole" Type="System.String" />
        <Parameter Name="options" Type="System.Management.EnumerationOptions" />
      </Parameters>
      <Docs>
        <param name="watcher">Обработчик хода выполнения и результатов асинхронной операции.</param>
        <param name="relationshipClass">Класс, от которого должны наследоваться все последующие классы отношений.</param>
        <param name="relationshipQualifier">Квалификатор, необходимый для последующих классов отношений.</param>
        <param name="thisRole">Роль класса источника в последующих классах отношений.</param>
        <param name="options">Параметры для извлечения результатов.</param>
        <summary>Извлекает классы отношений, связывающие класс в соответствии с указанными параметрами. Этот процесс выполняется асинхронно.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a>Безопасность платформы .NET Framework  
 Полное доверие для непосредственно вызывающего метода. Этот член не может быть использован частично доверенным кодом. Дополнительные сведения см. в разделе [Использование библиотек из частично доверенного кода](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetStronglyTypedClassCode">
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Создает строго типизированный класс для заданного класса WMI.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a>Безопасность платформы .NET Framework  
 Полное доверие для непосредственно вызывающего метода. Этот член не может быть использован частично доверенным кодом. Дополнительные сведения см. в разделе [Использование библиотек из частично доверенного кода](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetStronglyTypedClassCode">
      <MemberSignature Language="C#" Value="public System.CodeDom.CodeTypeDeclaration GetStronglyTypedClassCode (bool includeSystemClassInClassDef, bool systemPropertyClass);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.CodeDom.CodeTypeDeclaration GetStronglyTypedClassCode(bool includeSystemClassInClassDef, bool systemPropertyClass) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementClass.GetStronglyTypedClassCode(System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetStronglyTypedClassCode (includeSystemClassInClassDef As Boolean, systemPropertyClass As Boolean) As CodeTypeDeclaration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::CodeDom::CodeTypeDeclaration ^ GetStronglyTypedClassCode(bool includeSystemClassInClassDef, bool systemPropertyClass);" />
      <MemberSignature Language="F#" Value="member this.GetStronglyTypedClassCode : bool * bool -&gt; System.CodeDom.CodeTypeDeclaration" Usage="managementClass.GetStronglyTypedClassCode (includeSystemClassInClassDef, systemPropertyClass)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeTypeDeclaration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includeSystemClassInClassDef" Type="System.Boolean" />
        <Parameter Name="systemPropertyClass" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="includeSystemClassInClassDef">Чтобы включить класс для управления системными свойствами, установите значение <see langword="true" />; в противном случае установите значение <see langword="false" />.</param>
        <param name="systemPropertyClass">Чтобы создаваемый класс управлял системными свойствами, установите значение <see langword="true" />; в противном случае установите значение <see langword="false" />.</param>
        <summary>Создает строго типизированный класс для заданного класса WMI.</summary>
        <returns><see cref="T:System.CodeDom.CodeTypeDeclaration" />, представляет объявление для строго типизированного класса.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a>Безопасность платформы .NET Framework  
 Полное доверие для непосредственно вызывающего метода. Этот член не может быть использован частично доверенным кодом. Дополнительные сведения см. в разделе [Использование библиотек из частично доверенного кода](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).  
  
   
  
## Examples  
 В следующем примере создается класс со строгой типизацией для класса **Win32_LogicalDisk** . Созданный код создается в C# среде или Visual Basic .NET.  
  
 [!code-csharp[wminet_ManagementClass_GetStronglyTypedClassCode-2#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementClass_GetStronglyTypedClassCode-2/cs/ManagementClass_GetStronglyTypedClassCode-2.cs#1)]
 [!code-vb[wminet_ManagementClass_GetStronglyTypedClassCode-2#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementClass_GetStronglyTypedClassCode-2/vb/ManagementClass_GetStronglyTypedClassCode-2.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStronglyTypedClassCode">
      <MemberSignature Language="C#" Value="public bool GetStronglyTypedClassCode (System.Management.CodeLanguage lang, string filePath, string classNamespace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetStronglyTypedClassCode(valuetype System.Management.CodeLanguage lang, string filePath, string classNamespace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementClass.GetStronglyTypedClassCode(System.Management.CodeLanguage,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetStronglyTypedClassCode (lang As CodeLanguage, filePath As String, classNamespace As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetStronglyTypedClassCode(System::Management::CodeLanguage lang, System::String ^ filePath, System::String ^ classNamespace);" />
      <MemberSignature Language="F#" Value="member this.GetStronglyTypedClassCode : System.Management.CodeLanguage * string * string -&gt; bool" Usage="managementClass.GetStronglyTypedClassCode (lang, filePath, classNamespace)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lang" Type="System.Management.CodeLanguage" />
        <Parameter Name="filePath" Type="System.String" />
        <Parameter Name="classNamespace" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="lang">Язык создаваемого программного кода. Язык кода извлекается из перечисления <see cref="T:System.Management.CodeLanguage" />.</param>
        <param name="filePath">Путь для записи файла кода.</param>
        <param name="classNamespace">Пространство имен .NET, в котором необходимо создать класс. Если этот параметр оставить пустым, пространство имен будет создано из пространства имен WMI.</param>
        <summary>Создает строго типизированный класс для заданного класса WMI. В зависимости от входных параметров эта функция создает программный код для Visual Basic, C#, JScript, J# или С++.</summary>
        <returns>Значение <see langword="true" />, если метод выполнен успешно; в противном случае — значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a>Безопасность платформы .NET Framework  
 Полное доверие для непосредственно вызывающего метода. Этот член не может быть использован частично доверенным кодом. Дополнительные сведения см. в разделе [Использование библиотек из частично доверенного кода](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).  
  
   
  
## Examples  
 В следующем примере создается класс со строгой типизацией для класса **Win32_LogicalDisk** . Созданный код находится в C# C# примере и Visual Basic .NET для примера Visual Basic .NET.  
  
 [!code-csharp[wminet_ManagementClass_GetStronglyTypedClassCode-3#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementClass_GetStronglyTypedClassCode-3/cs/ManagementClass_GetStronglyTypedClassCode-3.cs#1)]
 [!code-vb[wminet_ManagementClass_GetStronglyTypedClassCode-3#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementClass_GetStronglyTypedClassCode-3/vb/ManagementClass_GetStronglyTypedClassCode-3.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetSubclasses">
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Возвращает коллекцию всех производных классов данного класса.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a>Безопасность платформы .NET Framework  
 Полное доверие для непосредственно вызывающего метода. Этот член не может быть использован частично доверенным кодом. Дополнительные сведения см. в разделе [Использование библиотек из частично доверенного кода](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetSubclasses">
      <MemberSignature Language="C#" Value="public System.Management.ManagementObjectCollection GetSubclasses ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Management.ManagementObjectCollection GetSubclasses() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementClass.GetSubclasses" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSubclasses () As ManagementObjectCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Management::ManagementObjectCollection ^ GetSubclasses();" />
      <MemberSignature Language="F#" Value="member this.GetSubclasses : unit -&gt; System.Management.ManagementObjectCollection" Usage="managementClass.GetSubclasses " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.ManagementObjectCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает коллекцию всех подклассов данного класса.</summary>
        <returns>Коллекция объектов <see cref="T:System.Management.ManagementObject" />, представляющих подклассы класса WMI.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a>Безопасность платформы .NET Framework  
 Полное доверие для непосредственно вызывающего метода. Этот член не может быть использован частично доверенным кодом. Дополнительные сведения см. в разделе [Использование библиотек из частично доверенного кода](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).  
  
   
  
## Examples  
 В следующем примере <xref:System.Management.ManagementClass.GetSubclasses%2A> метод используется для перечисления подклассов в класс **CIM_LogicalDisk** . Дополнительные сведения см. в разделе «CIM_LogicalDisk» документации по инструментарий управления Windows (WMI) в библиотеке MSDN по адресу http://msdn.microsoft.com/library.  
  
 [!code-csharp[wminet_ManagementClass_GetSubClasses()#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementClass_GetSubClasses/cs/ManagementClass_GetSubclasses.cs#1)]
 [!code-vb[wminet_ManagementClass_GetSubClasses()#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementClass_GetSubClasses/vb/ManagementClass_GetSubclasses.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSubclasses">
      <MemberSignature Language="C#" Value="public System.Management.ManagementObjectCollection GetSubclasses (System.Management.EnumerationOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Management.ManagementObjectCollection GetSubclasses(class System.Management.EnumerationOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementClass.GetSubclasses(System.Management.EnumerationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSubclasses (options As EnumerationOptions) As ManagementObjectCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Management::ManagementObjectCollection ^ GetSubclasses(System::Management::EnumerationOptions ^ options);" />
      <MemberSignature Language="F#" Value="member this.GetSubclasses : System.Management.EnumerationOptions -&gt; System.Management.ManagementObjectCollection" Usage="managementClass.GetSubclasses options" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.ManagementObjectCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.Management.EnumerationOptions" />
      </Parameters>
      <Docs>
        <param name="options">Заданные дополнительные параметры извлечения подклассов класса.</param>
        <summary>Извлекает подклассы класса в соответствии с заданными параметрами.</summary>
        <returns>Коллекция объектов <see cref="T:System.Management.ManagementObject" />, представляющих подклассы класса WMI в соответствии с заданными параметрами.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a>Безопасность платформы .NET Framework  
 Полное доверие для непосредственно вызывающего метода. Этот член не может быть использован частично доверенным кодом. Дополнительные сведения см. в разделе [Использование библиотек из частично доверенного кода](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).  
  
   
  
## Examples  
 В следующем примере показано, как инициализировать <xref:System.Management.ManagementClass> переменную <xref:System.Management.ManagementClass> с помощью конструктора, а затем получить подклассы класса WMI, переданного в конструктор.  
  
 [!code-csharp[wminet_ManagementClass_GetSubClasses(E)#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementClass_GetSubClasses-E/cs/ManagementClass_GetSubclasses-E.cs#1)]
 [!code-vb[wminet_ManagementClass_GetSubClasses(E)#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementClass_GetSubClasses-E/vb/ManagementClass_GetSubclasses-E.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSubclasses">
      <MemberSignature Language="C#" Value="public void GetSubclasses (System.Management.ManagementOperationObserver watcher);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GetSubclasses(class System.Management.ManagementOperationObserver watcher) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementClass.GetSubclasses(System.Management.ManagementOperationObserver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetSubclasses (watcher As ManagementOperationObserver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetSubclasses(System::Management::ManagementOperationObserver ^ watcher);" />
      <MemberSignature Language="F#" Value="member this.GetSubclasses : System.Management.ManagementOperationObserver -&gt; unit" Usage="managementClass.GetSubclasses watcher" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="watcher" Type="System.Management.ManagementOperationObserver" />
      </Parameters>
      <Docs>
        <param name="watcher">Объект, предназначенный для управления асинхронной операцией.</param>
        <summary>Возвращает коллекцию всех производных классов, созданных на основе данного класса, в асинхронном режиме.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a>Безопасность платформы .NET Framework  
 Полное доверие для непосредственно вызывающего метода. Этот член не может быть использован частично доверенным кодом. Дополнительные сведения см. в разделе [Использование библиотек из частично доверенного кода](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSubclasses">
      <MemberSignature Language="C#" Value="public void GetSubclasses (System.Management.ManagementOperationObserver watcher, System.Management.EnumerationOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GetSubclasses(class System.Management.ManagementOperationObserver watcher, class System.Management.EnumerationOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.ManagementClass.GetSubclasses(System.Management.ManagementOperationObserver,System.Management.EnumerationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetSubclasses (watcher As ManagementOperationObserver, options As EnumerationOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetSubclasses(System::Management::ManagementOperationObserver ^ watcher, System::Management::EnumerationOptions ^ options);" />
      <MemberSignature Language="F#" Value="member this.GetSubclasses : System.Management.ManagementOperationObserver * System.Management.EnumerationOptions -&gt; unit" Usage="managementClass.GetSubclasses (watcher, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="watcher" Type="System.Management.ManagementOperationObserver" />
        <Parameter Name="options" Type="System.Management.EnumerationOptions" />
      </Parameters>
      <Docs>
        <param name="watcher">Объект, предназначенный для управления асинхронной операцией.</param>
        <param name="options">Заданные дополнительные параметры для извлечения производных классов.</param>
        <summary>Извлекает все производные классы, созданные на основе данного класса, в асинхронном режиме в соответствии с заданными параметрами.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a>Безопасность платформы .NET Framework  
 Полное доверие для непосредственно вызывающего метода. Этот член не может быть использован частично доверенным кодом. Дополнительные сведения см. в разделе [Использование библиотек из частично доверенного кода](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Methods">
      <MemberSignature Language="C#" Value="public System.Management.MethodDataCollection Methods { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Management.MethodDataCollection Methods" />
      <MemberSignature Language="DocId" Value="P:System.Management.ManagementClass.Methods" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Methods As MethodDataCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Management::MethodDataCollection ^ Methods { System::Management::MethodDataCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Methods : System.Management.MethodDataCollection" Usage="System.Management.ManagementClass.Methods" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.MethodDataCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает коллекцию объектов <see cref="T:System.Management.MethodData" />, представляющих методы, определенные в классе WMI.</summary>
        <value><see cref="T:System.Management.MethodDataCollection" /> представляет методы, определенные в классе WMI.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a>Безопасность платформы .NET Framework  
 Полное доверие для непосредственно вызывающего метода. Этот член не может быть использован частично доверенным кодом. Дополнительные сведения см. в разделе [Использование библиотек из частично доверенного кода](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).  
  
   
  
## Examples  
 В следующем примере показано, как инициализировать <xref:System.Management.ManagementClass> переменную <xref:System.Management.ManagementClass> с помощью конструктора, а затем получить все методы класса WMI, переданные в конструктор.  
  
 [!code-csharp[wminet_ManagementClass_Methods#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementClass_Methods/cs/ManagementClass_Methods.cs#1)]
 [!code-vb[wminet_ManagementClass_Methods#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementClass_Methods/vb/ManagementClass_Methods.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public override System.Management.ManagementPath Path { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Management.ManagementPath Path" />
      <MemberSignature Language="DocId" Value="P:System.Management.ManagementClass.Path" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Path As ManagementPath" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Management::ManagementPath ^ Path { System::Management::ManagementPath ^ get(); void set(System::Management::ManagementPath ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Path : System.Management.ManagementPath with get, set" Usage="System.Management.ManagementClass.Path" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Management</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.ManagementPath</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает путь класса WMI, к которому привязан объект <see cref="T:System.Management.ManagementClass" />.</summary>
        <value>Путь к классу объекта.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если для свойства задано новое значение, <xref:System.Management.ManagementClass> компонент будет отключен от любого ранее привязанного класса WMI. Повторно подключитесь к новому пути к классу WMI.  
  
## <a name="net-framework-security"></a>Безопасность платформы .NET Framework  
 Полное доверие для непосредственно вызывающего метода. Этот член не может быть использован частично доверенным кодом. Дополнительные сведения см. в разделе [Использование библиотек из частично доверенного кода](~/docs/framework/misc/using-libraries-from-partially-trusted-code.md).  
  
   
  
## Examples  
 В следующем примере показано, как инициализировать <xref:System.Management.ManagementClass> переменную <xref:System.Management.ManagementClass> с помощью конструктора, а затем получить все методы класса WMI, переданные в конструктор.  
  
 [!code-csharp[wminet_ManagementClass_Path#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_ManagementClass_Path/cs/ManagementClass_Path.cs#1)]
 [!code-vb[wminet_ManagementClass_Path#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_ManagementClass_Path/vb/ManagementClass_Path.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>