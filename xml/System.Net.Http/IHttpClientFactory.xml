<Type Name="IHttpClientFactory" FullName="System.Net.Http.IHttpClientFactory">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4f7b1b40949e84b5a814866ad982f8787291cf3c" /><Meta Name="ms.sourcegitcommit" Value="0084afad1b3b1cb2c8ad2c142ae3597d08bad4a7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="10/31/2019" /><Meta Name="ms.locfileid" Value="73412020" /></Metadata><TypeSignature Language="C#" Value="public interface IHttpClientFactory" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IHttpClientFactory" />
  <TypeSignature Language="DocId" Value="T:System.Net.Http.IHttpClientFactory" />
  <TypeSignature Language="VB.NET" Value="Public Interface IHttpClientFactory" />
  <TypeSignature Language="C++ CLI" Value="public interface class IHttpClientFactory" />
  <TypeSignature Language="F#" Value="type IHttpClientFactory = interface" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.Http</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.2.0.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="d383b-101">Абстракция фабрики для компонента, который может создавать экземпляры <see cref="T:System.Net.Http.HttpClient" /> с пользовательской конфигурацией для заданного логического имени.</span><span class="sxs-lookup"><span data-stu-id="d383b-101">A factory abstraction for a component that can create <see cref="T:System.Net.Http.HttpClient" /> instances with custom configuration for a given logical name.</span></span></summary>
    <remarks><span data-ttu-id="d383b-102">Значение по умолчанию <see cref="T:System.Net.Http.IHttpClientFactory" /> можно зарегистрировать в <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />, вызвав <see cref="M:Microsoft.Extensions.DependencyInjection.HttpClientFactoryServiceCollectionExtensions.AddHttpClient(Microsoft.Extensions.DependencyInjection.IServiceCollection)" />.</span><span class="sxs-lookup"><span data-stu-id="d383b-102">A default <see cref="T:System.Net.Http.IHttpClientFactory" /> can be registered in an <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> by calling <see cref="M:Microsoft.Extensions.DependencyInjection.HttpClientFactoryServiceCollectionExtensions.AddHttpClient(Microsoft.Extensions.DependencyInjection.IServiceCollection)" />.</span></span>
<span data-ttu-id="d383b-103">Значение по умолчанию <see cref="T:System.Net.Http.IHttpClientFactory" /> будет зарегистрировано в коллекции служб как singleton.</span><span class="sxs-lookup"><span data-stu-id="d383b-103">The default <see cref="T:System.Net.Http.IHttpClientFactory" /> will be registered in the service collection as a singleton.</span></span></remarks>
  </Docs>
  <Members>
    <Member MemberName="CreateClient">
      <MemberSignature Language="C#" Value="public System.Net.Http.HttpClient CreateClient (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Net.Http.HttpClient CreateClient(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.IHttpClientFactory.CreateClient(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateClient (name As String) As HttpClient" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::Http::HttpClient ^ CreateClient(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member CreateClient : string -&gt; System.Net.Http.HttpClient" Usage="iHttpClientFactory.CreateClient name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Http</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Http.HttpClient</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="d383b-104">Логическое имя создаваемого клиента.</span><span class="sxs-lookup"><span data-stu-id="d383b-104">The logical name of the client to create.</span></span></param>
        <summary><span data-ttu-id="d383b-105">Создает и настраивает экземпляр <see cref="T:System.Net.Http.HttpClient" /> с использованием конфигурации, которая соответствует логическому имени, указанному в параметре <paramref name="name" />.</span><span class="sxs-lookup"><span data-stu-id="d383b-105">Creates and configures an <see cref="T:System.Net.Http.HttpClient" /> instance using the configuration that corresponds to the logical name specified by <paramref name="name" />.</span></span></summary>
        <returns><span data-ttu-id="d383b-106">Новый экземпляр <see cref="T:System.Net.Http.HttpClient" />.</span><span class="sxs-lookup"><span data-stu-id="d383b-106">A new <see cref="T:System.Net.Http.HttpClient" /> instance.</span></span></returns>
        <remarks><para>
<span data-ttu-id="d383b-107">Каждый вызов <see cref="M:System.Net.Http.IHttpClientFactory.CreateClient(System.String)" /> гарантирует возврат нового экземпляра <see cref="T:System.Net.Http.HttpClient" />.</span><span class="sxs-lookup"><span data-stu-id="d383b-107">Each call to <see cref="M:System.Net.Http.IHttpClientFactory.CreateClient(System.String)" /> is guaranteed to return a new <see cref="T:System.Net.Http.HttpClient" /> instance.</span></span> <span data-ttu-id="d383b-108">Вызывающие объекты могут кэшировать возвращенный <see cref="T:System.Net.Http.HttpClient" />ный экземпляр на неопределенное время или заключить его в блок <langword>using</langword> , чтобы освободить его при необходимости.</span><span class="sxs-lookup"><span data-stu-id="d383b-108">Callers may cache the returned <see cref="T:System.Net.Http.HttpClient" /> instance indefinitely or surround its use in a <langword>using</langword> block to dispose it when desired.</span></span>
            </para>
          <para>
<span data-ttu-id="d383b-109">Реализация <see cref="T:System.Net.Http.IHttpClientFactory" /> по умолчанию может кэшировать базовые экземпляры <see cref="T:System.Net.Http.HttpMessageHandler" /> для повышения производительности.</span><span class="sxs-lookup"><span data-stu-id="d383b-109">The default <see cref="T:System.Net.Http.IHttpClientFactory" /> implementation may cache the underlying <see cref="T:System.Net.Http.HttpMessageHandler" /> instances to improve performance.</span></span>
            </para>
          <para>
<span data-ttu-id="d383b-110">Кроме того, вызывающие объекты позволяют изменять возвращенные открытые свойства экземпляра <see cref="T:System.Net.Http.HttpClient" /> по мере необходимости.</span><span class="sxs-lookup"><span data-stu-id="d383b-110">Callers are also free to mutate the returned <see cref="T:System.Net.Http.HttpClient" /> instance's public properties as desired.</span></span>
            </para></remarks>
      </Docs>
    </Member>
  </Members>
</Type>
