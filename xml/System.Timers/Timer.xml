<Type Name="Timer" FullName="System.Timers.Timer">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9cc59ace9aec449d4419a4b242c58dbbaf76179a" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70631866" /></Metadata><TypeSignature Language="C#" Value="public class Timer : System.ComponentModel.Component, System.ComponentModel.ISupportInitialize" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Timer extends System.ComponentModel.Component implements class System.ComponentModel.ISupportInitialize" />
  <TypeSignature Language="DocId" Value="T:System.Timers.Timer" />
  <TypeSignature Language="VB.NET" Value="Public Class Timer&#xA;Inherits Component&#xA;Implements ISupportInitialize" />
  <TypeSignature Language="C++ CLI" Value="public ref class Timer : System::ComponentModel::Component, System::ComponentModel::ISupportInitialize" />
  <TypeSignature Language="F#" Value="type Timer = class&#xA;    inherit Component&#xA;    interface ISupportInitialize" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.ISupportInitialize</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-3.0;netstandard-2.1">
      <AttributeName>System.ComponentModel.DefaultEvent("Elapsed")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-3.0;netstandard-2.1">
      <AttributeName>System.ComponentModel.DefaultProperty("Interval")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="ceb7e-101">Создает событие после заданного интервала с возможностью создания повторяющихся событий.</span><span class="sxs-lookup"><span data-stu-id="ceb7e-101">Generates an event after a set interval, with an option to generate recurring events.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ceb7e-102">Компонент является серверным таймером, который <xref:System.Timers.Timer.Elapsed> вызывает событие в приложении после истечения числа миллисекунд в <xref:System.Timers.Timer.Interval%2A> свойстве. <xref:System.Timers.Timer></span><span class="sxs-lookup"><span data-stu-id="ceb7e-102">The <xref:System.Timers.Timer> component is a server-based timer that raises an <xref:System.Timers.Timer.Elapsed> event in your application after the number of milliseconds in the <xref:System.Timers.Timer.Interval%2A> property has elapsed.</span></span> <span data-ttu-id="ceb7e-103">Можно настроить <xref:System.Timers.Timer> объект для вызова события только один раз или многократно <xref:System.Timers.Timer.AutoReset%2A> с помощью свойства.</span><span class="sxs-lookup"><span data-stu-id="ceb7e-103">You can configure the <xref:System.Timers.Timer> object to raise the event just once or repeatedly using the <xref:System.Timers.Timer.AutoReset%2A> property.</span></span> <span data-ttu-id="ceb7e-104">Как правило, <xref:System.Timers.Timer> объект объявляется на уровне класса, чтобы он оставался в области, пока он необходим.</span><span class="sxs-lookup"><span data-stu-id="ceb7e-104">Typically, a <xref:System.Timers.Timer> object is declared at the class level so that it stays in scope as long as it is needed.</span></span> <span data-ttu-id="ceb7e-105">Затем можно обработать <xref:System.Timers.Timer.Elapsed> событие, чтобы обеспечить нормальную обработку.</span><span class="sxs-lookup"><span data-stu-id="ceb7e-105">You can then handle its <xref:System.Timers.Timer.Elapsed> event to provide regular processing.</span></span> <span data-ttu-id="ceb7e-106">Например, предположим, что имеется важный сервер, который должен храниться 24 часа в день, 7 дней в неделю.</span><span class="sxs-lookup"><span data-stu-id="ceb7e-106">For example, suppose you have a critical server that must be kept running 24 hours a day, 7 days a week.</span></span> <span data-ttu-id="ceb7e-107">Можно создать службу, которая использует <xref:System.Timers.Timer> объект для периодической проверки сервера и обеспечения работоспособности системы.</span><span class="sxs-lookup"><span data-stu-id="ceb7e-107">You could create a service that uses a <xref:System.Timers.Timer> object to periodically check the server and ensure that the system is up and running.</span></span> <span data-ttu-id="ceb7e-108">Если система не отвечает, служба может попытаться перезапустить сервер или уведомить администратора.</span><span class="sxs-lookup"><span data-stu-id="ceb7e-108">If the system is not responding, the service could attempt to restart the server or notify an administrator.</span></span>  
  
> [!IMPORTANT]
> <span data-ttu-id="ceb7e-109"><xref:System.Timers.Timer> Класс доступен не для всех реализаций и версий .NET, например .NET Standard 1,6 и более ранних версий.</span><span class="sxs-lookup"><span data-stu-id="ceb7e-109">The <xref:System.Timers.Timer> class is not available for all .NET implementations and versions, such as .NET Standard 1.6 and lower versions.</span></span>
> <span data-ttu-id="ceb7e-110">В этих случаях вместо этого можно использовать <xref:System.Threading.Timer?displayProperty=nameWithType> класс.</span><span class="sxs-lookup"><span data-stu-id="ceb7e-110">In these cases, you can use the <xref:System.Threading.Timer?displayProperty=nameWithType> class instead.</span></span>
  
 <span data-ttu-id="ceb7e-111">Этот тип реализует интерфейс <xref:System.IDisposable>.</span><span class="sxs-lookup"><span data-stu-id="ceb7e-111">This type implements the <xref:System.IDisposable> interface.</span></span> <span data-ttu-id="ceb7e-112">По окончании использования выдаленную ему память следует прямо или косвенно освободить.</span><span class="sxs-lookup"><span data-stu-id="ceb7e-112">When you have finished using the type, you should dispose of it either directly or indirectly.</span></span> <span data-ttu-id="ceb7e-113">Чтобы сделать это прямо, вызовите его метод <xref:System.IDisposable.Dispose%2A> в блоке `try`/`catch`.</span><span class="sxs-lookup"><span data-stu-id="ceb7e-113">To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block.</span></span> <span data-ttu-id="ceb7e-114">Чтобы сделать это косвенно, используйте языковые конструкции, такие как `using` (в C#) или `Using` (в Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="ceb7e-114">To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic).</span></span> <span data-ttu-id="ceb7e-115">Дополнительные сведения см. в разделе "Использование объекта, реализующего IDisposable" в статье об интерфейсе <xref:System.IDisposable>.</span><span class="sxs-lookup"><span data-stu-id="ceb7e-115">For more information, see the "Using an Object that Implements IDisposable" section in the <xref:System.IDisposable> interface topic.</span></span>  
  
 <span data-ttu-id="ceb7e-116">Серверный <xref:System.Timers.Timer?displayProperty=nameWithType> класс предназначен для использования с рабочими потоками в многопоточной среде.</span><span class="sxs-lookup"><span data-stu-id="ceb7e-116">The server-based <xref:System.Timers.Timer?displayProperty=nameWithType> class is designed for use with worker threads in a multithreaded environment.</span></span> <span data-ttu-id="ceb7e-117">Серверные таймеры могут перемещаться между потоками для <xref:System.Timers.Timer.Elapsed> решения возникшего события, что приводит к большей точности, чем таймеры Windows при возникновении события вовремя.</span><span class="sxs-lookup"><span data-stu-id="ceb7e-117">Server timers can move among threads to handle the raised <xref:System.Timers.Timer.Elapsed> event, resulting in more accuracy than Windows timers in raising the event on time.</span></span>  
  
 <span data-ttu-id="ceb7e-118">Компонент создает событие на основе значения (в <xref:System.Timers.Timer.Interval%2A> миллисекундах) свойства. <xref:System.Timers.Timer.Elapsed> <xref:System.Timers.Timer?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="ceb7e-118">The <xref:System.Timers.Timer?displayProperty=nameWithType> component raises the <xref:System.Timers.Timer.Elapsed> event, based on the value (in milliseconds) of the <xref:System.Timers.Timer.Interval%2A> property.</span></span> <span data-ttu-id="ceb7e-119">Это событие можно обработать для выполнения необходимой обработки.</span><span class="sxs-lookup"><span data-stu-id="ceb7e-119">You can handle this event to perform the processing you need.</span></span> <span data-ttu-id="ceb7e-120">Например, предположим, что у вас есть интерактивное приложение для продаж, которое постоянно отправляет заказы на продажу в базу данных.</span><span class="sxs-lookup"><span data-stu-id="ceb7e-120">For example, suppose that you have an online sales application that continuously posts sales orders to a database.</span></span> <span data-ttu-id="ceb7e-121">Служба, которая компилирует инструкции для доставки, работает с пакетом заказов, вместо того чтобы обрабатывать каждый заказ по отдельности.</span><span class="sxs-lookup"><span data-stu-id="ceb7e-121">The service that compiles the instructions for shipping operates on a batch of orders rather than processing each order individually.</span></span> <span data-ttu-id="ceb7e-122"><xref:System.Timers.Timer> Для запуска пакетной обработки каждые 30 минут можно использовать.</span><span class="sxs-lookup"><span data-stu-id="ceb7e-122">You could use a <xref:System.Timers.Timer> to start the batch processing every 30 minutes.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="ceb7e-123">Класс System. Timers. Timer имеет то же разрешение, что и системные часы.</span><span class="sxs-lookup"><span data-stu-id="ceb7e-123">The System.Timers.Timer class has the same resolution as the system clock.</span></span> <span data-ttu-id="ceb7e-124">Это означает, что <xref:System.Timers.Timer.Elapsed> событие будет срабатывать через интервал, определенный разрешением системных часов, <xref:System.Timers.Timer.Interval%2A> если свойство меньше, чем разрешение системных часов.</span><span class="sxs-lookup"><span data-stu-id="ceb7e-124">This means that the <xref:System.Timers.Timer.Elapsed> event will fire at an interval defined by the resolution of the system clock if the <xref:System.Timers.Timer.Interval%2A> property is less than the resolution of the system clock.</span></span> <span data-ttu-id="ceb7e-125">Дополнительные сведения см. в описании свойства <xref:System.Timers.Timer.Interval%2A>.</span><span class="sxs-lookup"><span data-stu-id="ceb7e-125">For more information, see the <xref:System.Timers.Timer.Interval%2A> property.</span></span>  
  
 <span data-ttu-id="ceb7e-126">Если <xref:System.Timers.Timer.AutoReset%2A> <xref:System.Timers.Timer?displayProperty=nameWithType> для `false`задано значение <xref:System.Timers.Timer.Interval%2A> , объект создает событие только один раз после первого прохождения. <xref:System.Timers.Timer.Elapsed></span><span class="sxs-lookup"><span data-stu-id="ceb7e-126">When <xref:System.Timers.Timer.AutoReset%2A> is set to `false`, a <xref:System.Timers.Timer?displayProperty=nameWithType> object raises the <xref:System.Timers.Timer.Elapsed> event only once, after the first <xref:System.Timers.Timer.Interval%2A> has elapsed.</span></span> <span data-ttu-id="ceb7e-127">Чтобы регулярно вызывать <xref:System.Timers.Timer.Elapsed> событие через интервал, определенный <xref:System.Timers.Timer.Interval%2A>параметром, задайте <xref:System.Timers.Timer.AutoReset%2A> для `true`значение, которое является значением по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="ceb7e-127">To keep raising the <xref:System.Timers.Timer.Elapsed> event regularly at the interval defined by the <xref:System.Timers.Timer.Interval%2A>, set <xref:System.Timers.Timer.AutoReset%2A> to `true`, which is the default value.</span></span>  
  
 <span data-ttu-id="ceb7e-128">Компонент перехватывает и подавляет все исключения, вызываемые обработчиками событий <xref:System.Timers.Timer.Elapsed> для события. <xref:System.Timers.Timer></span><span class="sxs-lookup"><span data-stu-id="ceb7e-128">The <xref:System.Timers.Timer> component catches and suppresses all exceptions thrown by event handlers for the <xref:System.Timers.Timer.Elapsed> event.</span></span> <span data-ttu-id="ceb7e-129">Это поведение может быть изменено в будущих выпусках .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="ceb7e-129">This behavior is subject to change in future releases of the .NET Framework.</span></span> <span data-ttu-id="ceb7e-130">Однако обратите внимание, что это не относится к `await` обработчикам событий, которые выполняются асинхронно и включают оператор (в C#) или `Await` оператор (в Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="ceb7e-130">Note, however, that this is not true of event handlers that execute asynchronously and include the `await` operator (in C#)  or the `Await` operator (in Visual Basic).</span></span> <span data-ttu-id="ceb7e-131">Исключения, возникающие в этих обработчиках событий, передаются обратно в вызывающий поток, как показано в следующем примере.</span><span class="sxs-lookup"><span data-stu-id="ceb7e-131">Exceptions thrown in these event handlers are propagated back to the calling thread, as the following example illustrates.</span></span> <span data-ttu-id="ceb7e-132">Дополнительные сведения об исключениях, возникающих в асинхронных методах, см. в разделе [обработка исключений](~/docs/standard/parallel-programming/exception-handling-task-parallel-library.md).</span><span class="sxs-lookup"><span data-stu-id="ceb7e-132">For more information on exceptions thrown in asynchronous methods, see   [Exception Handling](~/docs/standard/parallel-programming/exception-handling-task-parallel-library.md).</span></span>  
  
 [!code-csharp[System.Timers.Timer#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timers.timer/cs/AsyncHandlerEx1.cs#3)]
 [!code-vb[System.Timers.Timer#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timers.timer/vb/AsyncHandlerEx1.vb#3)]  
  
 <span data-ttu-id="ceb7e-133">Если свойство имеет `null`значение, <xref:System.Timers.Timer.Elapsed> событие вызывается в <xref:System.Threading.ThreadPool> потоке. <xref:System.Timers.Timer.SynchronizingObject%2A></span><span class="sxs-lookup"><span data-stu-id="ceb7e-133">If the <xref:System.Timers.Timer.SynchronizingObject%2A> property is `null`, the <xref:System.Timers.Timer.Elapsed> event is raised on a <xref:System.Threading.ThreadPool> thread.</span></span> <span data-ttu-id="ceb7e-134">Если обработка <xref:System.Timers.Timer.Elapsed> события длится <xref:System.Timers.Timer.Interval%2A>дольше, это событие может возникать снова в другом <xref:System.Threading.ThreadPool> потоке.</span><span class="sxs-lookup"><span data-stu-id="ceb7e-134">If processing of the <xref:System.Timers.Timer.Elapsed> event lasts longer than <xref:System.Timers.Timer.Interval%2A>, the event might be raised again on another <xref:System.Threading.ThreadPool> thread.</span></span> <span data-ttu-id="ceb7e-135">В этом случае обработчик событий должен быть повторным.</span><span class="sxs-lookup"><span data-stu-id="ceb7e-135">In this situation, the event handler should be reentrant.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ceb7e-136">Метод обработки событий может выполняться в одном потоке в то же время, когда другой поток вызывает <xref:System.Timers.Timer.Stop%2A> метод или <xref:System.Timers.Timer.Enabled%2A> устанавливает свойство в `false`значение.</span><span class="sxs-lookup"><span data-stu-id="ceb7e-136">The event-handling method might run on one thread at the same time that another thread calls the <xref:System.Timers.Timer.Stop%2A> method or sets the <xref:System.Timers.Timer.Enabled%2A> property to `false`.</span></span> <span data-ttu-id="ceb7e-137">Это может привести к <xref:System.Timers.Timer.Elapsed> возникновению события после остановки таймера.</span><span class="sxs-lookup"><span data-stu-id="ceb7e-137">This might result in the <xref:System.Timers.Timer.Elapsed> event being raised after the timer is stopped.</span></span> <span data-ttu-id="ceb7e-138">В примере кода для <xref:System.Timers.Timer.Stop%2A> метода показан один из способов избежать этого состояния гонки.</span><span class="sxs-lookup"><span data-stu-id="ceb7e-138">The example code for the <xref:System.Timers.Timer.Stop%2A> method shows one way to avoid this race condition.</span></span>  
  
 <span data-ttu-id="ceb7e-139">Даже если <xref:System.Timers.Timer.SynchronizingObject%2A> <xref:System.Timers.Timer.Stop%2A> <xref:System.Timers.Timer.Enabled%2A> <xref:System.Timers.Timer.Dispose%2A> параметр не равен <xref:System.Timers.Timer.Elapsed> `false`, события могут происходить после вызова метода или после того, как свойство имеет значение, поскольку сигнал для вызова `null`  <xref:System.Timers.Timer.Elapsed> событие всегда находится в очереди на выполнение в потоке пула потоков.</span><span class="sxs-lookup"><span data-stu-id="ceb7e-139">Even if <xref:System.Timers.Timer.SynchronizingObject%2A> is not `null`, <xref:System.Timers.Timer.Elapsed> events can occur after the <xref:System.Timers.Timer.Dispose%2A> or <xref:System.Timers.Timer.Stop%2A> method has been called or after the <xref:System.Timers.Timer.Enabled%2A> property has been set to `false`, because the signal to raise the <xref:System.Timers.Timer.Elapsed> event is always queued for execution on a thread pool thread.</span></span> <span data-ttu-id="ceb7e-140">Одним из способов разрешения этого состояния гонки является установка флага, сообщающего обработчику событий о <xref:System.Timers.Timer.Elapsed> пропуске последующих событий.</span><span class="sxs-lookup"><span data-stu-id="ceb7e-140">One way to resolve this race condition is to set a flag that tells the event handler for the <xref:System.Timers.Timer.Elapsed> event to ignore subsequent events.</span></span>  
  
 <span data-ttu-id="ceb7e-141">Если <xref:System.Timers.Timer?displayProperty=nameWithType> класс используется с элементом пользовательского интерфейса, таким как форма или элемент управления, без помещения таймера в этот элемент пользовательского интерфейса, назначьте форму или элемент управления, <xref:System.Timers.Timer> содержащий <xref:System.Timers.Timer.SynchronizingObject%2A> свойство, так, чтобы событие было равно упаковано в поток пользовательского интерфейса.</span><span class="sxs-lookup"><span data-stu-id="ceb7e-141">If you use the <xref:System.Timers.Timer?displayProperty=nameWithType> class with a user interface element, such as a form or control, without placing the timer on that user interface element, assign the form or control that contains the <xref:System.Timers.Timer> to the <xref:System.Timers.Timer.SynchronizingObject%2A> property, so that the event is marshaled to the user interface thread.</span></span>  
  
 <span data-ttu-id="ceb7e-142">Список значений свойств по умолчанию для экземпляра <xref:System.Timers.Timer>см. в <xref:System.Timers.Timer.%23ctor%2A> разделе Конструктор.</span><span class="sxs-lookup"><span data-stu-id="ceb7e-142">For a list of default property values for an instance of <xref:System.Timers.Timer>, see the <xref:System.Timers.Timer.%23ctor%2A> constructor.</span></span>  
  
> [!TIP]
>  <span data-ttu-id="ceb7e-143">Имейте в виду, что в .NET есть `Timer`четыре класса с именами, каждый из которых предлагает различные функциональные возможности:</span><span class="sxs-lookup"><span data-stu-id="ceb7e-143">Be aware that .NET includes four classes named `Timer`, each of which offers different functionality:</span></span>  
>   
> - <span data-ttu-id="ceb7e-144"><xref:System.Timers.Timer?displayProperty=nameWithType>(в этом разделе): запускает событие через регулярные интервалы.</span><span class="sxs-lookup"><span data-stu-id="ceb7e-144"><xref:System.Timers.Timer?displayProperty=nameWithType> (this topic): fires an event at regular intervals.</span></span> <span data-ttu-id="ceb7e-145">Класс предназначен для использования в качестве серверного компонента или компонент службы в многопоточной среде. Он не имеет пользовательского интерфейса и не отображается во время выполнения.</span><span class="sxs-lookup"><span data-stu-id="ceb7e-145">The class is intended for use as a server-based or service component in a multithreaded environment; it has no user interface and is not visible at runtime.</span></span>  
> - <span data-ttu-id="ceb7e-146"><xref:System.Threading.Timer?displayProperty=nameWithType>: выполняет один метод обратного вызова в потоке пула потоков через регулярные интервалы.</span><span class="sxs-lookup"><span data-stu-id="ceb7e-146"><xref:System.Threading.Timer?displayProperty=nameWithType>: executes a single callback method on a thread pool thread at regular intervals.</span></span> <span data-ttu-id="ceb7e-147">Метод обратного вызова определяется при создании экземпляра таймера и не может быть изменен.</span><span class="sxs-lookup"><span data-stu-id="ceb7e-147">The callback method is defined when the timer is instantiated and cannot be changed.</span></span> <span data-ttu-id="ceb7e-148">Как и <xref:System.Timers.Timer?displayProperty=nameWithType> класс, этот класс предназначен для использования в качестве серверного компонента или компонент службы в многопоточной среде; он не имеет пользовательского интерфейса и не отображается во время выполнения.</span><span class="sxs-lookup"><span data-stu-id="ceb7e-148">Like the <xref:System.Timers.Timer?displayProperty=nameWithType> class, this class is intended for use as a server-based or service component in a multithreaded environment; it has no user interface and is not visible at runtime.</span></span>  
> - <span data-ttu-id="ceb7e-149"><xref:System.Windows.Forms.Timer?displayProperty=nameWithType>(Только .NET Framework): компонент Windows Forms, который запускает событие через регулярные интервалы.</span><span class="sxs-lookup"><span data-stu-id="ceb7e-149"><xref:System.Windows.Forms.Timer?displayProperty=nameWithType> (.NET Framework only): a Windows Forms component that fires an event at regular intervals.</span></span> <span data-ttu-id="ceb7e-150">У этого компонента нет интерфейса пользователя. Он предназначен для однопоточной среды.</span><span class="sxs-lookup"><span data-stu-id="ceb7e-150">The component has no user interface and is designed for use in a single-threaded environment.</span></span>  
> - <span data-ttu-id="ceb7e-151"><xref:System.Web.UI.Timer?displayProperty=nameWithType>(Только .NET Framework): компонент ASP.NET, который выполняет асинхронные или синхронные обратные передачи веб-страниц через равные промежутки времени.</span><span class="sxs-lookup"><span data-stu-id="ceb7e-151"><xref:System.Web.UI.Timer?displayProperty=nameWithType> (.NET Framework only): an ASP.NET component that performs asynchronous or synchronous web page postbacks at a regular interval.</span></span>  

## Examples  
 <span data-ttu-id="ceb7e-152">В следующем примере создается экземпляр `System.Timers.Timer` объекта, который <xref:System.Timers.Timer.Elapsed?displayProperty=nameWithType> запускает событие каждые две секунды (2 000 миллисекунд), настраивает обработчик событий для события и запускает таймер.</span><span class="sxs-lookup"><span data-stu-id="ceb7e-152">The following example instantiates a `System.Timers.Timer` object that fires its <xref:System.Timers.Timer.Elapsed?displayProperty=nameWithType> event every two seconds (2,000 milliseconds), sets up an event handler for the  event, and starts the timer.</span></span> <span data-ttu-id="ceb7e-153">Обработчик событий отображает значение <xref:System.Timers.ElapsedEventArgs.SignalTime%2A?displayProperty=nameWithType> свойства при каждом его возникновении.</span><span class="sxs-lookup"><span data-stu-id="ceb7e-153">The event handler displays the value of the <xref:System.Timers.ElapsedEventArgs.SignalTime%2A?displayProperty=nameWithType> property each time it is raised.</span></span>  
  
 [!code-csharp[System.Timers.Timer#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timers.timer/cs/timer2a.cs#2)]
 [!code-vb[System.Timers.Timer#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timers.timer/vb/timer2a.vb#2)]  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="ceb7e-154">Все открытые <see langword="static" /> члены этого типа являются потокобезопасными.</span><span class="sxs-lookup"><span data-stu-id="ceb7e-154">Any public <see langword="static" /> members of this type are thread safe.</span></span> <span data-ttu-id="ceb7e-155">Потокобезопасность членов экземпляров не гарантируется.</span><span class="sxs-lookup"><span data-stu-id="ceb7e-155">Any instance members are not guaranteed to be thread safe.</span></span></threadsafe>
    <altmember cref="P:System.Timers.Timer.AutoReset" />
    <altmember cref="P:System.Timers.Timer.Interval" />
    <altmember cref="E:System.Timers.Timer.Elapsed" />
    <altmember cref="M:System.Timers.Timer.#ctor" />
    <altmember cref="T:System.Threading.Timer" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ceb7e-156">Инициализирует новый экземпляр класса <see cref="T:System.Timers.Timer" />.</span><span class="sxs-lookup"><span data-stu-id="ceb7e-156">Initializes a new instance of the <see cref="T:System.Timers.Timer" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Timer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Timers.Timer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Timer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ceb7e-157">Инициализирует новый экземпляр класса <see cref="T:System.Timers.Timer" /> и задает всем свойствам начальные значения.</span><span class="sxs-lookup"><span data-stu-id="ceb7e-157">Initializes a new instance of the <see cref="T:System.Timers.Timer" /> class, and sets all the properties to their initial values.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ceb7e-158">В следующей таблице показаны начальные значения свойств для экземпляра <xref:System.Timers.Timer>.</span><span class="sxs-lookup"><span data-stu-id="ceb7e-158">The following table shows initial property values for an instance of <xref:System.Timers.Timer>.</span></span>  
  
|<span data-ttu-id="ceb7e-159">Свойство.</span><span class="sxs-lookup"><span data-stu-id="ceb7e-159">Property</span></span>|<span data-ttu-id="ceb7e-160">Исходное значение</span><span class="sxs-lookup"><span data-stu-id="ceb7e-160">Initial value</span></span>|  
|--------------|-------------------|  
|<xref:System.Timers.Timer.AutoReset%2A>|`true`|  
|<xref:System.Timers.Timer.Enabled%2A>|`false`|  
|<xref:System.Timers.Timer.Interval%2A>|<span data-ttu-id="ceb7e-161">100 мс</span><span class="sxs-lookup"><span data-stu-id="ceb7e-161">100 milliseconds</span></span>|  
|<xref:System.Timers.Timer.SynchronizingObject%2A>|<span data-ttu-id="ceb7e-162">Пустая ссылка (`Nothing` в Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="ceb7e-162">A null reference (`Nothing` in Visual Basic).</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="ceb7e-163">В следующем примере создается экземпляр <xref:System.Timers.Timer> объекта, который <xref:System.Timers.Timer.Elapsed?displayProperty=nameWithType> запускает событие каждые две секунды (2000 миллисекунд), настраивает обработчик событий для события и запускает таймер.</span><span class="sxs-lookup"><span data-stu-id="ceb7e-163">The following example instantiates a <xref:System.Timers.Timer> object that fires its <xref:System.Timers.Timer.Elapsed?displayProperty=nameWithType> event every two seconds (2000 milliseconds), sets up an event handler for the event, and starts the timer.</span></span> <span data-ttu-id="ceb7e-164">Обработчик событий отображает значение <xref:System.Timers.ElapsedEventArgs.SignalTime%2A?displayProperty=nameWithType> свойства при каждом его возникновении.</span><span class="sxs-lookup"><span data-stu-id="ceb7e-164">The event handler displays the value of the <xref:System.Timers.ElapsedEventArgs.SignalTime%2A?displayProperty=nameWithType> property each time it is raised.</span></span>  
  
 [!code-cpp[System.Timers.Timer#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.timers.timer/cpp/timer1.cpp#1)]
 [!code-csharp[System.Timers.Timer#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timers.timer/cs/timer1.cs#1)]
 [!code-vb[System.Timers.Timer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timers.timer/vb/timer1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Timers.Timer.AutoReset" />
        <altmember cref="P:System.Timers.Timer.Enabled" />
        <altmember cref="P:System.Timers.Timer.Interval" />
        <altmember cref="P:System.Timers.Timer.SynchronizingObject" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Timer (double interval);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float64 interval) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Timers.Timer.#ctor(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (interval As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Timer(double interval);" />
      <MemberSignature Language="F#" Value="new System.Timers.Timer : double -&gt; System.Timers.Timer" Usage="new System.Timers.Timer interval" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="interval" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="interval"><span data-ttu-id="ceb7e-165">Время между событиями в миллисекундах.</span><span class="sxs-lookup"><span data-stu-id="ceb7e-165">The time, in milliseconds, between events.</span></span> <span data-ttu-id="ceb7e-166">Значение должно быть больше нуля и меньше или равно <see cref="F:System.Int32.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="ceb7e-166">The value must be greater than zero and less than or equal to <see cref="F:System.Int32.MaxValue" />.</span></span></param>
        <summary><span data-ttu-id="ceb7e-167">Инициализирует новый экземпляр класса <see cref="T:System.Timers.Timer" /> и задает свойству <see cref="P:System.Timers.Timer.Interval" /> указанное значение в миллисекундах.</span><span class="sxs-lookup"><span data-stu-id="ceb7e-167">Initializes a new instance of the <see cref="T:System.Timers.Timer" /> class, and sets the <see cref="P:System.Timers.Timer.Interval" /> property to the specified number of milliseconds.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ceb7e-168">Этот конструктор задает <xref:System.Timers.Timer.Interval%2A> свойство нового экземпляра Timer, но не включает таймер.</span><span class="sxs-lookup"><span data-stu-id="ceb7e-168">This constructor sets the <xref:System.Timers.Timer.Interval%2A> property of the new timer instance, but does not enable the timer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ceb7e-169">В следующем примере создается экземпляр <xref:System.Timers.Timer> объекта, который <xref:System.Timers.Timer.Elapsed?displayProperty=nameWithType> запускает событие каждые две секунды (2000 миллисекунд), настраивает обработчик событий для события и запускает таймер.</span><span class="sxs-lookup"><span data-stu-id="ceb7e-169">The following example instantiates a <xref:System.Timers.Timer> object that fires its <xref:System.Timers.Timer.Elapsed?displayProperty=nameWithType> event every two seconds (2000 milliseconds), sets up an event handler for the event, and starts the timer.</span></span> <span data-ttu-id="ceb7e-170">Обработчик событий отображает значение <xref:System.Timers.ElapsedEventArgs.SignalTime%2A?displayProperty=nameWithType> свойства при каждом его возникновении.</span><span class="sxs-lookup"><span data-stu-id="ceb7e-170">The event handler displays the value of the <xref:System.Timers.ElapsedEventArgs.SignalTime%2A?displayProperty=nameWithType> property each time it is raised.</span></span>  
  
 [!code-csharp[System.Timers.Timer#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timers.timer/cs/AsyncHandlerEx1.cs#3)]
 [!code-vb[System.Timers.Timer#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timers.timer/vb/AsyncHandlerEx1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ceb7e-171">Значение параметра <paramref name="interval" /> меньше или равно нулю, или больше <see cref="F:System.Int32.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="ceb7e-171">The value of the <paramref name="interval" /> parameter is less than or equal to zero, or greater than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
        <altmember cref="P:System.Timers.Timer.Interval" />
      </Docs>
    </Member>
    <Member MemberName="AutoReset">
      <MemberSignature Language="C#" Value="public bool AutoReset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoReset" />
      <MemberSignature Language="DocId" Value="P:System.Timers.Timer.AutoReset" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoReset As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoReset { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoReset : bool with get, set" Usage="System.Timers.Timer.AutoReset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netstandard-2.1">
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netstandard-2.1">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Timers.TimersDescription("Indicates whether the timer will be restarted when it is enabled.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;netframework-4.8;netstandard-2.1">
          <AttributeName>System.Timers.TimersDescription("TimerAutoReset")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ceb7e-172">Возвращает или задает логическое значение, определяющее, должен ли объект <see cref="T:System.Timers.Timer" /> вызывать событие <see cref="E:System.Timers.Timer.Elapsed" /> один раз (<see langword="false" />) или неоднократно (<see langword="true" />).</span><span class="sxs-lookup"><span data-stu-id="ceb7e-172">Gets or sets a Boolean indicating whether the <see cref="T:System.Timers.Timer" /> should raise the <see cref="E:System.Timers.Timer.Elapsed" /> event only once (<see langword="false" />) or repeatedly (<see langword="true" />).</span></span></summary>
        <value><span data-ttu-id="ceb7e-173">Значение <see langword="true" />, если объект <see cref="T:System.Timers.Timer" /> должен вызывать событие <see cref="E:System.Timers.Timer.Elapsed" /> каждый раз по истечении интервала времени; <see langword="false" />, если событие <see cref="E:System.Timers.Timer.Elapsed" /> следует вызвать только один раз, когда пройдет указанное время.</span><span class="sxs-lookup"><span data-stu-id="ceb7e-173"><see langword="true" /> if the <see cref="T:System.Timers.Timer" /> should raise the <see cref="E:System.Timers.Timer.Elapsed" /> event each time the interval elapses; <see langword="false" /> if it should raise the <see cref="E:System.Timers.Timer.Elapsed" /> event only once, after the first time the interval elapses.</span></span> <span data-ttu-id="ceb7e-174">Значение по умолчанию — <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="ceb7e-174">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ceb7e-175">Если параметр <xref:System.Timers.Timer> уже включен <xref:System.Timers.Timer.Start%2A> при вызове метода, интервал сбрасывается.</span><span class="sxs-lookup"><span data-stu-id="ceb7e-175">If the <xref:System.Timers.Timer> is already enabled when the <xref:System.Timers.Timer.Start%2A> method is called, the interval is reset.</span></span> <span data-ttu-id="ceb7e-176">Если <xref:System.Timers.Timer.AutoReset%2A> параметр `false`имеет значение <xref:System.Timers.Timer.Start%2A> , метод должен быть вызван для повторного запуска счетчика.</span><span class="sxs-lookup"><span data-stu-id="ceb7e-176">If <xref:System.Timers.Timer.AutoReset%2A> is `false`, the <xref:System.Timers.Timer.Start%2A> method must be called in order to start the count again.</span></span>  
  
 <span data-ttu-id="ceb7e-177">Сброс интервала влияет на время <xref:System.Timers.Timer.Elapsed> возникновения события.</span><span class="sxs-lookup"><span data-stu-id="ceb7e-177">Resetting the interval affects when the <xref:System.Timers.Timer.Elapsed> event is raised.</span></span> <span data-ttu-id="ceb7e-178">Например, если задать для интервала значение 5 секунд, а затем задать <xref:System.Timers.Timer.Enabled%2A> для `true`свойства значение, счетчик начнется в заданное <xref:System.Timers.Timer.Enabled%2A> время.</span><span class="sxs-lookup"><span data-stu-id="ceb7e-178">For example, if you set the interval to 5 seconds and then set the <xref:System.Timers.Timer.Enabled%2A> property to `true`, the count starts at the time <xref:System.Timers.Timer.Enabled%2A> is set.</span></span> <span data-ttu-id="ceb7e-179">Если задать для интервала значение 10 секунд, когда значение счетчика равно 3 секундам, <xref:System.Timers.Timer.Elapsed> событие будет вызвано в первый раз за 13 секунд <xref:System.Timers.Timer.Enabled%2A> после того, `true`как свойство было установлено в значение.</span><span class="sxs-lookup"><span data-stu-id="ceb7e-179">If you reset the interval to 10 seconds when the count is 3 seconds, the <xref:System.Timers.Timer.Elapsed> event is raised for the first time 13 seconds after the <xref:System.Timers.Timer.Enabled%2A> property was set to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ceb7e-180">В следующем примере создается <xref:System.Timers.Timer> <xref:System.Timers.Timer.Elapsed> событие, которое срабатывает после 1,5 секунд.</span><span class="sxs-lookup"><span data-stu-id="ceb7e-180">The following example creates a <xref:System.Timers.Timer> whose <xref:System.Timers.Timer.Elapsed> event fires after 1.5 seconds.</span></span> <span data-ttu-id="ceb7e-181">Его обработчик событий затем отображает "Hello World!"</span><span class="sxs-lookup"><span data-stu-id="ceb7e-181">Its event handler then displays "Hello World!"</span></span> <span data-ttu-id="ceb7e-182">в консоли.</span><span class="sxs-lookup"><span data-stu-id="ceb7e-182">on the console.</span></span>  
  
 [!code-cpp[Classic Timer.Timer1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Timer.Timer1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Timer.Timer1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Timer.Timer1 Example/CS/source.cs#1)]
 [!code-vb[Classic Timer.Timer1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Timer.Timer1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Timers.Timer.Interval" />
        <altmember cref="P:System.Timers.Timer.Enabled" />
        <altmember cref="M:System.Timers.Timer.Start" />
        <altmember cref="E:System.Timers.Timer.Elapsed" />
      </Docs>
    </Member>
    <Member MemberName="BeginInit">
      <MemberSignature Language="C#" Value="public void BeginInit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Timers.Timer.BeginInit" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginInit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void BeginInit();" />
      <MemberSignature Language="F#" Value="abstract member BeginInit : unit -&gt; unit&#xA;override this.BeginInit : unit -&gt; unit" Usage="timer.BeginInit " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.ISupportInitialize.BeginInit</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ceb7e-183">Начинает во время выполнения инициализацию класса <see cref="T:System.Timers.Timer" />, используемого в форме или другим компонентом.</span><span class="sxs-lookup"><span data-stu-id="ceb7e-183">Begins the run-time initialization of a <see cref="T:System.Timers.Timer" /> that is used on a form or by another component.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ceb7e-184">Среда [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)] разработки использует этот метод для запуска инициализации компонента, используемого в форме или другим компонентом.</span><span class="sxs-lookup"><span data-stu-id="ceb7e-184">The [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)] design environment uses this method to start the initialization of a component that is used on a form or by another component.</span></span> <span data-ttu-id="ceb7e-185"><xref:System.Timers.Timer.EndInit%2A> Метод завершает инициализацию.</span><span class="sxs-lookup"><span data-stu-id="ceb7e-185">The <xref:System.Timers.Timer.EndInit%2A> method ends the initialization.</span></span> <span data-ttu-id="ceb7e-186">Использование методов <xref:System.Timers.Timer.EndInit%2A> и предотвращает использование элемента управления перед его полной инициализацией. <xref:System.Timers.Timer.BeginInit%2A></span><span class="sxs-lookup"><span data-stu-id="ceb7e-186">Using the <xref:System.Timers.Timer.BeginInit%2A> and <xref:System.Timers.Timer.EndInit%2A> methods prevents the control from being used before it is fully initialized.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Timers.Timer.Enabled" />
        <altmember cref="M:System.Timers.Timer.EndInit" />
        <altmember cref="P:System.Timers.Timer.Interval" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Timers.Timer.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberSignature Language="F#" Value="member this.Close : unit -&gt; unit" Usage="timer.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ceb7e-187">Освобождает ресурсы, используемые объектом <see cref="T:System.Timers.Timer" />.</span><span class="sxs-lookup"><span data-stu-id="ceb7e-187">Releases the resources used by the <see cref="T:System.Timers.Timer" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ceb7e-188">Метод, в свою очередь, `Dispose` вызывает метод. <xref:System.Timers.Timer.Close%2A></span><span class="sxs-lookup"><span data-stu-id="ceb7e-188">The <xref:System.Timers.Timer.Close%2A> method in turn calls the `Dispose` method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Timers.Timer.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="timer.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="ceb7e-189">Значение <see langword="true" /> позволяет освободить управляемые и неуправляемые ресурсы; значение <see langword="false" /> позволяет освободить только неуправляемые ресурсы.</span><span class="sxs-lookup"><span data-stu-id="ceb7e-189"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="ceb7e-190">Освобождает все ресурсы, используемые текущим объектом <see cref="T:System.Timers.Timer" />.</span><span class="sxs-lookup"><span data-stu-id="ceb7e-190">Releases all resources used by the current <see cref="T:System.Timers.Timer" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Elapsed">
      <MemberSignature Language="C#" Value="public event System.Timers.ElapsedEventHandler Elapsed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Timers.ElapsedEventHandler Elapsed" />
      <MemberSignature Language="DocId" Value="E:System.Timers.Timer.Elapsed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Elapsed As ElapsedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Timers::ElapsedEventHandler ^ Elapsed;" />
      <MemberSignature Language="F#" Value="member this.Elapsed : System.Timers.ElapsedEventHandler " Usage="member this.Elapsed : System.Timers.ElapsedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netstandard-2.1">
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Timers.TimersDescription("Occurs when the Interval has elapsed.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;netframework-4.8;netstandard-2.1">
          <AttributeName>System.Timers.TimersDescription("TimerIntervalElapsed")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Timers.ElapsedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ceb7e-191">Происходит по истечении интервала времени.</span><span class="sxs-lookup"><span data-stu-id="ceb7e-191">Occurs when the interval elapses.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ceb7e-192">Событие возникает, <xref:System.Timers.Timer.Enabled%2A> если свойство имеет `true` значение и интервал времени <xref:System.Timers.Timer.Interval%2A> (в миллисекундах), определенный свойством, истекает. <xref:System.Timers.Timer.Elapsed></span><span class="sxs-lookup"><span data-stu-id="ceb7e-192">The <xref:System.Timers.Timer.Elapsed> event is raised if the <xref:System.Timers.Timer.Enabled%2A> property is `true` and the time interval (in milliseconds) defined by the <xref:System.Timers.Timer.Interval%2A> property elapses.</span></span> <span data-ttu-id="ceb7e-193">Если свойство имеет `true`значение, событие вызывается несколько раз с интервалом, определенным <xref:System.Timers.Timer.Interval%2A> свойством; в противном случае событие <xref:System.Timers.Timer.Interval%2A> вызывается только один раз, когда истечет первое время. <xref:System.Timers.Timer.AutoReset%2A></span><span class="sxs-lookup"><span data-stu-id="ceb7e-193">If the <xref:System.Timers.Timer.AutoReset%2A> property is `true`, the event is raised repeatedly at an interval defined by the <xref:System.Timers.Timer.Interval%2A> property; otherwise, the event is raised only once, the first time the <xref:System.Timers.Timer.Interval%2A> value elapses.</span></span>  
  
 <span data-ttu-id="ceb7e-194">Если <xref:System.Timers.Timer.Interval%2A> параметр задан <xref:System.Timers.Timer> после начала работы, счетчик сбрасывается.</span><span class="sxs-lookup"><span data-stu-id="ceb7e-194">If <xref:System.Timers.Timer.Interval%2A> is set after the <xref:System.Timers.Timer> has started, the count is reset.</span></span> <span data-ttu-id="ceb7e-195">Например, если задать для интервала значение 5 секунд, а затем задать <xref:System.Timers.Timer.Enabled%2A> `true`значение, счетчик начнется в заданное <xref:System.Timers.Timer.Enabled%2A> время.</span><span class="sxs-lookup"><span data-stu-id="ceb7e-195">For example, if you set the interval to 5 seconds and then set <xref:System.Timers.Timer.Enabled%2A> to `true`, the count starts at the time <xref:System.Timers.Timer.Enabled%2A> is set.</span></span> <span data-ttu-id="ceb7e-196">Если интервал равен 10 секундам при значении счетчика 3 секунды, <xref:System.Timers.Timer.Elapsed> событие будет вызвано в первый раз за 13 секунд после <xref:System.Timers.Timer.Enabled%2A> установки значения. `true`</span><span class="sxs-lookup"><span data-stu-id="ceb7e-196">If you reset the interval to 10 seconds when count is 3 seconds, the <xref:System.Timers.Timer.Elapsed> event is raised for the first time 13 seconds after <xref:System.Timers.Timer.Enabled%2A> was set to `true`.</span></span>  
  
 <span data-ttu-id="ceb7e-197">Если свойство имеет `null`значение, <xref:System.Timers.Timer.Elapsed> событие вызывается в <xref:System.Threading.ThreadPool> потоке. <xref:System.Timers.Timer.SynchronizingObject%2A></span><span class="sxs-lookup"><span data-stu-id="ceb7e-197">If the <xref:System.Timers.Timer.SynchronizingObject%2A> property is `null`,the <xref:System.Timers.Timer.Elapsed> event is raised on a <xref:System.Threading.ThreadPool> thread.</span></span> <span data-ttu-id="ceb7e-198">Если обработка <xref:System.Timers.Timer.Elapsed> события длится <xref:System.Timers.Timer.Interval%2A>дольше, это событие может быть вновь вызвано в другом <xref:System.Threading.ThreadPool> потоке.</span><span class="sxs-lookup"><span data-stu-id="ceb7e-198">If the processing of the <xref:System.Timers.Timer.Elapsed> event lasts longer than <xref:System.Timers.Timer.Interval%2A>, the event might be raised again on another <xref:System.Threading.ThreadPool> thread.</span></span> <span data-ttu-id="ceb7e-199">В этом случае обработчик событий должен быть повторным.</span><span class="sxs-lookup"><span data-stu-id="ceb7e-199">In this situation, the event handler should be reentrant.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ceb7e-200">Метод обработки событий может выполняться в одном потоке в то же время, когда другой поток вызывает <xref:System.Timers.Timer.Stop%2A> метод или <xref:System.Timers.Timer.Enabled%2A> устанавливает свойство в `false`значение.</span><span class="sxs-lookup"><span data-stu-id="ceb7e-200">The event-handling method might run on one thread at the same time that another thread calls the <xref:System.Timers.Timer.Stop%2A> method or sets the <xref:System.Timers.Timer.Enabled%2A> property to `false`.</span></span> <span data-ttu-id="ceb7e-201">Это может привести к <xref:System.Timers.Timer.Elapsed> возникновению события после остановки таймера.</span><span class="sxs-lookup"><span data-stu-id="ceb7e-201">This might result in the <xref:System.Timers.Timer.Elapsed> event being raised after the timer is stopped.</span></span> <span data-ttu-id="ceb7e-202">В примере кода для <xref:System.Timers.Timer.Stop%2A> метода показан один из способов избежать этого состояния гонки.</span><span class="sxs-lookup"><span data-stu-id="ceb7e-202">The example code for the <xref:System.Timers.Timer.Stop%2A> method shows one way to avoid this race condition.</span></span>  
  
 <span data-ttu-id="ceb7e-203">Даже если <xref:System.Timers.Timer.SynchronizingObject%2A> <xref:System.Timers.Timer.Stop%2A> <xref:System.Timers.Timer.Enabled%2A> <xref:System.Timers.Timer.Dispose%2A> параметр не равен <xref:System.Timers.Timer.Elapsed> `false`, события могут происходить после вызова метода или после того, как свойство имеет значение, поскольку сигнал для вызова `null`  <xref:System.Timers.Timer.Elapsed> событие всегда находится в очереди на выполнение в потоке пула потоков.</span><span class="sxs-lookup"><span data-stu-id="ceb7e-203">Even if <xref:System.Timers.Timer.SynchronizingObject%2A> is not `null`, <xref:System.Timers.Timer.Elapsed> events can occur after the <xref:System.Timers.Timer.Dispose%2A> or <xref:System.Timers.Timer.Stop%2A> method has been called or after the <xref:System.Timers.Timer.Enabled%2A> property has been set to `false`, because the signal to raise the <xref:System.Timers.Timer.Elapsed> event is always queued for execution on a thread pool thread.</span></span> <span data-ttu-id="ceb7e-204">Одним из способов разрешения этого состояния гонки является установка флага, сообщающего обработчику событий о <xref:System.Timers.Timer.Elapsed> пропуске последующих событий.</span><span class="sxs-lookup"><span data-stu-id="ceb7e-204">One way to resolve this race condition is to set a flag that tells the event handler for the <xref:System.Timers.Timer.Elapsed> event to ignore subsequent events.</span></span>  
  
 <span data-ttu-id="ceb7e-205">Компонент перехватывает и подавляет все исключения, вызываемые обработчиками событий <xref:System.Timers.Timer.Elapsed> для события. <xref:System.Timers.Timer></span><span class="sxs-lookup"><span data-stu-id="ceb7e-205">The <xref:System.Timers.Timer> component catches and suppresses all exceptions thrown by event handlers for the <xref:System.Timers.Timer.Elapsed> event.</span></span> <span data-ttu-id="ceb7e-206">Это поведение может быть изменено в будущих выпусках .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="ceb7e-206">This behavior is subject to change in future releases of the .NET Framework.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ceb7e-207">В следующем примере создается экземпляр <xref:System.Timers.Timer> объекта, который <xref:System.Timers.Timer.Elapsed?displayProperty=nameWithType> запускает событие каждые две секунды (2000 миллисекунд), настраивает обработчик событий для события и запускает таймер.</span><span class="sxs-lookup"><span data-stu-id="ceb7e-207">The following example instantiates a <xref:System.Timers.Timer> object that fires its <xref:System.Timers.Timer.Elapsed?displayProperty=nameWithType> event every two seconds (2000 milliseconds), sets up an event handler for the event, and starts the timer.</span></span> <span data-ttu-id="ceb7e-208">Обработчик событий отображает значение <xref:System.Timers.ElapsedEventArgs.SignalTime%2A?displayProperty=nameWithType> свойства при каждом его возникновении.</span><span class="sxs-lookup"><span data-stu-id="ceb7e-208">The event handler displays the value of the <xref:System.Timers.ElapsedEventArgs.SignalTime%2A?displayProperty=nameWithType> property each time it is raised.</span></span>  
  
 [!code-cpp[System.Timers.Timer#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.timers.timer/cpp/timer1.cpp#1)]
 [!code-csharp[System.Timers.Timer#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timers.timer/cs/timer1.cs#1)]
 [!code-vb[System.Timers.Timer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timers.timer/vb/timer1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Timers.Timer.Interval" />
        <altmember cref="P:System.Timers.Timer.AutoReset" />
        <altmember cref="E:System.Timers.Timer.Elapsed" />
        <altmember cref="T:System.Timers.ElapsedEventArgs" />
        <altmember cref="T:System.Timers.ElapsedEventHandler" />
        <altmember cref="P:System.Timers.Timer.Enabled" />
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public bool Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enabled" />
      <MemberSignature Language="DocId" Value="P:System.Timers.Timer.Enabled" />
      <MemberSignature Language="VB.NET" Value="Public Property Enabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Enabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Enabled : bool with get, set" Usage="System.Timers.Timer.Enabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netstandard-2.1">
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netstandard-2.1">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Timers.TimersDescription("Indicates whether the timer is enabled to fire events at a defined interval.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;netframework-4.8;netstandard-2.1">
          <AttributeName>System.Timers.TimersDescription("TimerEnabled")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ceb7e-209">Возвращает или задает значение, определяющее, должен ли объект <see cref="T:System.Timers.Timer" /> вызывать событие <see cref="E:System.Timers.Timer.Elapsed" />.</span><span class="sxs-lookup"><span data-stu-id="ceb7e-209">Gets or sets a value indicating whether the <see cref="T:System.Timers.Timer" /> should raise the <see cref="E:System.Timers.Timer.Elapsed" /> event.</span></span></summary>
        <value><span data-ttu-id="ceb7e-210">Значение <see langword="true" />, если объект <see cref="T:System.Timers.Timer" /> должен вызывать событие <see cref="E:System.Timers.Timer.Elapsed" />; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="ceb7e-210"><see langword="true" /> if the <see cref="T:System.Timers.Timer" /> should raise the <see cref="E:System.Timers.Timer.Elapsed" /> event; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="ceb7e-211">Значение по умолчанию — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="ceb7e-211">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ceb7e-212"><xref:System.Timers.Timer.Enabled%2A> <xref:System.Timers.Timer.Start%2A> <xref:System.Timers.Timer.Enabled%2A> <xref:System.Timers.Timer.Stop%2A>Параметр имеет то же значение, что и `false`  вызов, тогда как параметр равен вызову. `true`</span><span class="sxs-lookup"><span data-stu-id="ceb7e-212">Setting <xref:System.Timers.Timer.Enabled%2A> to `true` is the same as calling <xref:System.Timers.Timer.Start%2A>, while setting <xref:System.Timers.Timer.Enabled%2A> to `false` is the same as calling <xref:System.Timers.Timer.Stop%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ceb7e-213">Сигнал для вызова <xref:System.Timers.Timer.Elapsed> события всегда находится в очереди на выполнение <xref:System.Threading.ThreadPool> в потоке.</span><span class="sxs-lookup"><span data-stu-id="ceb7e-213">The signal to raise the <xref:System.Timers.Timer.Elapsed> event is always queued for execution on a <xref:System.Threading.ThreadPool> thread.</span></span> <span data-ttu-id="ceb7e-214">Это может привести к <xref:System.Timers.Timer.Elapsed> возникновению события после того, <xref:System.Timers.Timer.Enabled%2A> как свойство имеет значение. `false`</span><span class="sxs-lookup"><span data-stu-id="ceb7e-214">This might result in the <xref:System.Timers.Timer.Elapsed> event being raised after the <xref:System.Timers.Timer.Enabled%2A> property is set to `false`.</span></span> <span data-ttu-id="ceb7e-215">В примере кода для <xref:System.Timers.Timer.Stop%2A> метода показан один из способов обхода этого состояния гонки.</span><span class="sxs-lookup"><span data-stu-id="ceb7e-215">The code example for the <xref:System.Timers.Timer.Stop%2A> method shows one way to work around this race condition.</span></span>  
  
 <span data-ttu-id="ceb7e-216">Если <xref:System.Timers.Timer.Enabled%2A> параметр имеет `true` значение и <xref:System.Timers.Timer.AutoReset%2A> имеет значение `false`, то <xref:System.Timers.Timer> <xref:System.Timers.Timer.Elapsed> событие вызывается только один раз, когда истечет интервал времени.</span><span class="sxs-lookup"><span data-stu-id="ceb7e-216">If <xref:System.Timers.Timer.Enabled%2A> is set to `true` and <xref:System.Timers.Timer.AutoReset%2A> is set to `false`, the <xref:System.Timers.Timer> raises the <xref:System.Timers.Timer.Elapsed> event only once, the first time the interval elapses.</span></span>  
  
 <span data-ttu-id="ceb7e-217">Если интервал установлен после <xref:System.Timers.Timer> начала, счетчик сбрасывается.</span><span class="sxs-lookup"><span data-stu-id="ceb7e-217">If the interval is set after the <xref:System.Timers.Timer> has started, the count is reset.</span></span> <span data-ttu-id="ceb7e-218">Например, если задать для интервала значение 5 секунд, а затем задать <xref:System.Timers.Timer.Enabled%2A> для `true`свойства значение, счетчик начнется в заданное <xref:System.Timers.Timer.Enabled%2A> время.</span><span class="sxs-lookup"><span data-stu-id="ceb7e-218">For example, if you set the interval to 5 seconds and then set the <xref:System.Timers.Timer.Enabled%2A> property to `true`, the count starts at the time <xref:System.Timers.Timer.Enabled%2A> is set.</span></span> <span data-ttu-id="ceb7e-219">Если интервал равен 10 секундам при значении счетчика 3 секунды, <xref:System.Timers.Timer.Elapsed> событие будет вызвано в первый раз за 13 секунд после <xref:System.Timers.Timer.Enabled%2A> установки значения. `true`</span><span class="sxs-lookup"><span data-stu-id="ceb7e-219">If you reset the interval to 10 seconds when count is 3 seconds, the <xref:System.Timers.Timer.Elapsed> event is raised for the first time 13 seconds after <xref:System.Timers.Timer.Enabled%2A> was set to `true`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ceb7e-220">Некоторые визуальные конструкторы, например, в Microsoft Visual Studio, устанавливают <xref:System.Timers.Timer.Enabled%2A> свойство в `true` значение при вставке <xref:System.Timers.Timer>нового.</span><span class="sxs-lookup"><span data-stu-id="ceb7e-220">Some visual designers, such as those in Microsoft Visual Studio, set the <xref:System.Timers.Timer.Enabled%2A> property to `true` when inserting a new <xref:System.Timers.Timer>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ceb7e-221">В следующем примере создается экземпляр <xref:System.Timers.Timer> объекта, который <xref:System.Timers.Timer.Elapsed?displayProperty=nameWithType> запускает событие каждые две секунды (2000 миллисекунд), настраивает обработчик событий для события и запускает таймер.</span><span class="sxs-lookup"><span data-stu-id="ceb7e-221">The following example instantiates a <xref:System.Timers.Timer> object that fires its <xref:System.Timers.Timer.Elapsed?displayProperty=nameWithType> event every two seconds (2000 milliseconds), sets up an event handler for the  event, and starts the timer.</span></span> <span data-ttu-id="ceb7e-222">Обработчик событий отображает значение <xref:System.Timers.ElapsedEventArgs.SignalTime%2A?displayProperty=nameWithType> свойства при каждом его возникновении.</span><span class="sxs-lookup"><span data-stu-id="ceb7e-222">The event handler displays the value of the <xref:System.Timers.ElapsedEventArgs.SignalTime%2A?displayProperty=nameWithType> property each time it is raised.</span></span>  
  
 [!code-cpp[System.Timers.Timer#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.timers.timer/cpp/timer1.cpp#1)]
 [!code-csharp[System.Timers.Timer#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timers.timer/cs/timer1.cs#1)]
 [!code-vb[System.Timers.Timer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timers.timer/vb/timer1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="ceb7e-223">Данное свойство задать нельзя, так как таймер удален.</span><span class="sxs-lookup"><span data-stu-id="ceb7e-223">This property cannot be set because the timer has been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ceb7e-224">Перед включением таймера свойству <see cref="P:System.Timers.Timer.Interval" /> задано значение больше <see cref="F:System.Int32.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="ceb7e-224">The <see cref="P:System.Timers.Timer.Interval" /> property was set to a value greater than <see cref="F:System.Int32.MaxValue" /> before the timer was enabled.</span></span></exception>
        <altmember cref="P:System.Timers.Timer.Interval" />
        <altmember cref="P:System.Timers.Timer.AutoReset" />
        <altmember cref="M:System.Timers.Timer.Start" />
        <altmember cref="M:System.Timers.Timer.Stop" />
        <altmember cref="E:System.Timers.Timer.Elapsed" />
      </Docs>
    </Member>
    <Member MemberName="EndInit">
      <MemberSignature Language="C#" Value="public void EndInit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Timers.Timer.EndInit" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndInit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EndInit();" />
      <MemberSignature Language="F#" Value="abstract member EndInit : unit -&gt; unit&#xA;override this.EndInit : unit -&gt; unit" Usage="timer.EndInit " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.ISupportInitialize.EndInit</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ceb7e-225">Заканчивает во время выполнения инициализацию класса <see cref="T:System.Timers.Timer" />, используемого в форме или другим компонентом.</span><span class="sxs-lookup"><span data-stu-id="ceb7e-225">Ends the run-time initialization of a <see cref="T:System.Timers.Timer" /> that is used on a form or by another component.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ceb7e-226">Среда [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)] разработки использует этот метод для завершения инициализации компонента, используемого в форме или другим компонентом.</span><span class="sxs-lookup"><span data-stu-id="ceb7e-226">The [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)] design environment uses this method to end the initialization of a component that is used on a form or by another component.</span></span> <span data-ttu-id="ceb7e-227"><xref:System.Timers.Timer.BeginInit%2A> Метод запускает инициализацию.</span><span class="sxs-lookup"><span data-stu-id="ceb7e-227">The <xref:System.Timers.Timer.BeginInit%2A> method starts the initialization.</span></span> <span data-ttu-id="ceb7e-228">Использование методов <xref:System.Timers.Timer.EndInit%2A> и предотвращает использование элемента управления перед его полной инициализацией. <xref:System.Timers.Timer.BeginInit%2A></span><span class="sxs-lookup"><span data-stu-id="ceb7e-228">Using the <xref:System.Timers.Timer.BeginInit%2A> and <xref:System.Timers.Timer.EndInit%2A> methods prevents the control from being used before it is fully initialized.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Timers.Timer.BeginInit" />
        <altmember cref="P:System.Timers.Timer.Enabled" />
        <altmember cref="P:System.Timers.Timer.Interval" />
      </Docs>
    </Member>
    <Member MemberName="Interval">
      <MemberSignature Language="C#" Value="public double Interval { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Interval" />
      <MemberSignature Language="DocId" Value="P:System.Timers.Timer.Interval" />
      <MemberSignature Language="VB.NET" Value="Public Property Interval As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Interval { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.Interval : double with get, set" Usage="System.Timers.Timer.Interval" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netstandard-2.1">
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netstandard-2.1">
          <AttributeName>System.ComponentModel.DefaultValue(100)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netstandard-2.1">
          <AttributeName>System.ComponentModel.SettingsBindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Timers.TimersDescription("The number of milliseconds between timer events.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.RecommendedAsConfigurable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;netframework-4.8;netstandard-2.1">
          <AttributeName>System.Timers.TimersDescription("TimerInterval")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ceb7e-229">Возвращает или задает интервал в миллисекундах, по истечении которого возникает событие <see cref="E:System.Timers.Timer.Elapsed" />.</span><span class="sxs-lookup"><span data-stu-id="ceb7e-229">Gets or sets the interval, expressed in milliseconds, at which to raise the <see cref="E:System.Timers.Timer.Elapsed" /> event.</span></span></summary>
        <value><span data-ttu-id="ceb7e-230">Время между событиями <see cref="E:System.Timers.Timer.Elapsed" /> в миллисекундах.</span><span class="sxs-lookup"><span data-stu-id="ceb7e-230">The time, in milliseconds, between <see cref="E:System.Timers.Timer.Elapsed" /> events.</span></span> <span data-ttu-id="ceb7e-231">Значение должно быть больше нуля и меньше или равно <see cref="F:System.Int32.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="ceb7e-231">The value must be greater than zero, and less than or equal to <see cref="F:System.Int32.MaxValue" />.</span></span> <span data-ttu-id="ceb7e-232">Значение по умолчанию — 100 миллисекунд.</span><span class="sxs-lookup"><span data-stu-id="ceb7e-232">The default is 100 milliseconds.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ceb7e-233"><xref:System.Timers.Timer.Interval%2A> Свойство используется для определения частоты <xref:System.Timers.Timer.Elapsed> срабатывания события.</span><span class="sxs-lookup"><span data-stu-id="ceb7e-233">You use the <xref:System.Timers.Timer.Interval%2A> property to determine the frequency at which the <xref:System.Timers.Timer.Elapsed> event is fired.</span></span> <span data-ttu-id="ceb7e-234"><xref:System.Timers.Timer> Поскольку класс зависит от системных часов, он имеет то же разрешение, что и системные часы.</span><span class="sxs-lookup"><span data-stu-id="ceb7e-234">Because the <xref:System.Timers.Timer> class depends on the system clock, it has the same resolution as the system clock.</span></span> <span data-ttu-id="ceb7e-235">Это означает, что <xref:System.Timers.Timer.Elapsed> событие будет срабатывать через интервал, определенный разрешением системных часов, <xref:System.Timers.Timer.Interval%2A> если свойство меньше, чем разрешение системных часов.</span><span class="sxs-lookup"><span data-stu-id="ceb7e-235">This means that the <xref:System.Timers.Timer.Elapsed> event will fire at an interval defined by the resolution of the system clock if the <xref:System.Timers.Timer.Interval%2A> property is less than the resolution of the system clock.</span></span> <span data-ttu-id="ceb7e-236">В следующем примере <xref:System.Timers.Timer.Interval%2A> свойство устанавливается равным 5 миллисекундам.</span><span class="sxs-lookup"><span data-stu-id="ceb7e-236">The following example sets the <xref:System.Timers.Timer.Interval%2A> property to 5 milliseconds.</span></span> <span data-ttu-id="ceb7e-237">При запуске в [!INCLUDE[win7](~/includes/win7-md.md)] системе, системным часам которой назначено разрешение примерно 15 миллисекунд, это событие срабатывает примерно каждые 15 миллисекунд, а не каждые 5 миллисекунд.</span><span class="sxs-lookup"><span data-stu-id="ceb7e-237">When run on a [!INCLUDE[win7](~/includes/win7-md.md)] system whose system clock has a resolution of approximately 15 milliseconds, the event fires approximately every 15 milliseconds rather than every 5 milliseconds.</span></span>  
  
 [!code-csharp[System.Timers.Timer.Interval#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timers.timer.interval/cs/interval2.cs#1)]
 [!code-vb[System.Timers.Timer.Interval#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timers.timer.interval/vb/interval2.vb#1)]  
  
 <span data-ttu-id="ceb7e-238">Для определения разрешения системных часов в текущей системе можно использовать следующий код:</span><span class="sxs-lookup"><span data-stu-id="ceb7e-238">You can use the following code to determine the resolution of the system clock on the current system:</span></span>  
  
 [!code-csharp[System.Timers.Timer.Interval#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timers.timer.interval/cs/resolution1.cs#2)]
 [!code-vb[System.Timers.Timer.Interval#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timers.timer.interval/vb/resolution1.vb#2)]  
  
 <span data-ttu-id="ceb7e-239">Если приложению требуется большее разрешение, чем оно <xref:System.Timers.Timer> предлагается классу или системным часам, используйте таймеры мультимедиа с высоким разрешением. см. раздел [как использовать таймер высокого разрешения](https://msdn.microsoft.com/library/aa964692.aspx).</span><span class="sxs-lookup"><span data-stu-id="ceb7e-239">If your app requires greater resolution than that offered by the <xref:System.Timers.Timer> class or the system clock, use the high-resolution multimedia timers; see [How to: Use the High-Resolution Timer](https://msdn.microsoft.com/library/aa964692.aspx).</span></span>  
  
 <span data-ttu-id="ceb7e-240">Если интервал установлен после <xref:System.Timers.Timer> начала, счетчик сбрасывается.</span><span class="sxs-lookup"><span data-stu-id="ceb7e-240">If the interval is set after the <xref:System.Timers.Timer> has started, the count is reset.</span></span> <span data-ttu-id="ceb7e-241">Например, если задать для интервала значение 5 секунд, а затем задать <xref:System.Timers.Timer.Enabled%2A> для `true`свойства значение, счетчик начнется в заданное <xref:System.Timers.Timer.Enabled%2A> время.</span><span class="sxs-lookup"><span data-stu-id="ceb7e-241">For example, if you set the interval to 5 seconds and then set the <xref:System.Timers.Timer.Enabled%2A> property to `true`, the count starts at the time <xref:System.Timers.Timer.Enabled%2A> is set.</span></span> <span data-ttu-id="ceb7e-242">Если интервал равен 10 секундам при значении счетчика 3 секунды, <xref:System.Timers.Timer.Elapsed> событие будет вызвано в первый раз за 13 секунд после <xref:System.Timers.Timer.Enabled%2A> установки значения. `true`</span><span class="sxs-lookup"><span data-stu-id="ceb7e-242">If you reset the interval to 10 seconds when count is 3 seconds, the <xref:System.Timers.Timer.Elapsed> event is raised for the first time 13 seconds after <xref:System.Timers.Timer.Enabled%2A> was set to `true`.</span></span>  
  
 <span data-ttu-id="ceb7e-243">Если <xref:System.Timers.Timer.Enabled%2A> параметр имеет `true` значение и <xref:System.Timers.Timer.AutoReset%2A> имеет значение `false`, то <xref:System.Timers.Timer> <xref:System.Timers.Timer.Elapsed> событие вызывается только один раз, когда истечет интервал времени.</span><span class="sxs-lookup"><span data-stu-id="ceb7e-243">If <xref:System.Timers.Timer.Enabled%2A> is set to `true` and <xref:System.Timers.Timer.AutoReset%2A> is set to `false`, the <xref:System.Timers.Timer> raises the <xref:System.Timers.Timer.Elapsed> event only once, the first time the interval elapses.</span></span> <span data-ttu-id="ceb7e-244"><xref:System.Timers.Timer.Enabled%2A>Затем устанавливается в `false`значение.</span><span class="sxs-lookup"><span data-stu-id="ceb7e-244"><xref:System.Timers.Timer.Enabled%2A> is then set to `false`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ceb7e-245">Если <xref:System.Timers.Timer.Enabled%2A> и <xref:System.Timers.Timer.AutoReset%2A> имеют значение <xref:System.Timers.Timer.Elapsed> <xref:System.Timers.Timer.Enabled%2A> , а таймер уже включен, установка свойства приводит к возникновению события один раз, как если бы для свойства было задано значение. <xref:System.Timers.Timer.Interval%2A>  `false`  `true`.</span><span class="sxs-lookup"><span data-stu-id="ceb7e-245">If <xref:System.Timers.Timer.Enabled%2A> and <xref:System.Timers.Timer.AutoReset%2A> are both set to `false`, and the timer has previously been enabled, setting the <xref:System.Timers.Timer.Interval%2A> property causes the <xref:System.Timers.Timer.Elapsed> event to be raised once, as if the <xref:System.Timers.Timer.Enabled%2A> property had been set to `true`.</span></span> <span data-ttu-id="ceb7e-246">Чтобы задать интервал, не вызывая событие, можно временно присвоить <xref:System.Timers.Timer.Enabled%2A> `true`свойству значение, задать <xref:System.Timers.Timer.Interval%2A> для свойства требуемый интервал <xref:System.Timers.Timer.Enabled%2A> времени, `false`а затем немедленно присвоить свойству значение.</span><span class="sxs-lookup"><span data-stu-id="ceb7e-246">To set the interval without raising the event, you can temporarily set the <xref:System.Timers.Timer.Enabled%2A> property to `true`, set the <xref:System.Timers.Timer.Interval%2A> property to the desired time interval, and then immediately set the <xref:System.Timers.Timer.Enabled%2A> property back to `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ceb7e-247">В следующем примере создается экземпляр <xref:System.Timers.Timer> объекта, который <xref:System.Timers.Timer.Elapsed?displayProperty=nameWithType> запускает событие каждые две секунды (2000 миллисекунд), настраивает обработчик событий для события и запускает таймер.</span><span class="sxs-lookup"><span data-stu-id="ceb7e-247">The following example instantiates a <xref:System.Timers.Timer> object that fires its <xref:System.Timers.Timer.Elapsed?displayProperty=nameWithType> event every two seconds (2000 milliseconds), sets up an event handler for the event, and starts the timer.</span></span> <span data-ttu-id="ceb7e-248">Обработчик событий отображает значение <xref:System.Timers.ElapsedEventArgs.SignalTime%2A?displayProperty=nameWithType> свойства при каждом его возникновении.</span><span class="sxs-lookup"><span data-stu-id="ceb7e-248">The event handler displays the value of the <xref:System.Timers.ElapsedEventArgs.SignalTime%2A?displayProperty=nameWithType> property each time it is raised.</span></span>  
  
 [!code-cpp[System.Timers.Timer#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.timers.timer/cpp/timer1.cpp#1)]
 [!code-csharp[System.Timers.Timer#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timers.timer/cs/timer1.cs#1)]
 [!code-vb[System.Timers.Timer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timers.timer/vb/timer1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ceb7e-249">Интервал меньше или равен нулю.</span><span class="sxs-lookup"><span data-stu-id="ceb7e-249">The interval is less than or equal to zero.</span></span>  
  
<span data-ttu-id="ceb7e-250">- или -</span><span class="sxs-lookup"><span data-stu-id="ceb7e-250">-or-</span></span> 
<span data-ttu-id="ceb7e-251">Интервал больше, чем <see cref="F:System.Int32.MaxValue" />, а таймер в настоящий момент включен.</span><span class="sxs-lookup"><span data-stu-id="ceb7e-251">The interval is greater than <see cref="F:System.Int32.MaxValue" />, and the timer is currently enabled.</span></span> <span data-ttu-id="ceb7e-252">(Если таймер в данный момент выключен, исключение не генерируется до его включения.)</span><span class="sxs-lookup"><span data-stu-id="ceb7e-252">(If the timer is not currently enabled, no exception is thrown until it becomes enabled.)</span></span></exception>
        <altmember cref="P:System.Timers.Timer.AutoReset" />
        <altmember cref="P:System.Timers.Timer.Enabled" />
        <altmember cref="E:System.Timers.Timer.Elapsed" />
      </Docs>
    </Member>
    <Member MemberName="Site">
      <MemberSignature Language="C#" Value="public override System.ComponentModel.ISite Site { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.ISite Site" />
      <MemberSignature Language="DocId" Value="P:System.Timers.Timer.Site" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Site As ISite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::ComponentModel::ISite ^ Site { System::ComponentModel::ISite ^ get(); void set(System::ComponentModel::ISite ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Site : System.ComponentModel.ISite with get, set" Usage="System.Timers.Timer.Site" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ISite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ceb7e-253">Возвращает или задает сайт, который привязывает <see cref="T:System.Timers.Timer" /> к его контейнеру в режиме конструктора.</span><span class="sxs-lookup"><span data-stu-id="ceb7e-253">Gets or sets the site that binds the <see cref="T:System.Timers.Timer" /> to its container in design mode.</span></span></summary>
        <value><span data-ttu-id="ceb7e-254">Интерфейс <see cref="T:System.ComponentModel.ISite" />, представляющий сайт, который привязывает объект <see cref="T:System.Timers.Timer" /> к его контейнеру.</span><span class="sxs-lookup"><span data-stu-id="ceb7e-254">An <see cref="T:System.ComponentModel.ISite" /> interface representing the site that binds the <see cref="T:System.Timers.Timer" /> object to its container.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ceb7e-255">Сайты привязывают <xref:System.ComponentModel.Component> <xref:System.ComponentModel.Container> к и обеспечивают обмен данными между ними, а также предоставляют контейнеру способ управления его компонентами.</span><span class="sxs-lookup"><span data-stu-id="ceb7e-255">Sites bind a <xref:System.ComponentModel.Component> to a <xref:System.ComponentModel.Container> and enable communication between them, as well as providing a way for the container to manage its components.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public void Start ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Start() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Timers.Timer.Start" />
      <MemberSignature Language="VB.NET" Value="Public Sub Start ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Start();" />
      <MemberSignature Language="F#" Value="member this.Start : unit -&gt; unit" Usage="timer.Start " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ceb7e-256">Начинает вызывать событие <see cref="E:System.Timers.Timer.Elapsed" />, задавая для свойства <see cref="P:System.Timers.Timer.Enabled" /> значение <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="ceb7e-256">Starts raising the <see cref="E:System.Timers.Timer.Elapsed" /> event by setting <see cref="P:System.Timers.Timer.Enabled" /> to <see langword="true" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ceb7e-257">Если <xref:System.Timers.Timer.Start%2A> вызывается метод <xref:System.Timers.Timer.AutoReset%2A> и  `false` для параметра задано <xref:System.Timers.Timer> значение, то вызывает событие только один раз, когда истечет интервал времени. <xref:System.Timers.Timer.Elapsed></span><span class="sxs-lookup"><span data-stu-id="ceb7e-257">If <xref:System.Timers.Timer.Start%2A> is called and <xref:System.Timers.Timer.AutoReset%2A> is set to `false`, the <xref:System.Timers.Timer> raises the <xref:System.Timers.Timer.Elapsed> event only once, the first time the interval elapses.</span></span> <span data-ttu-id="ceb7e-258">Если <xref:System.Timers.Timer.Start%2A> вызывается метод <xref:System.Timers.Timer.AutoReset%2A> и `true` имеет значение <xref:System.Timers.Timer>  , то вызывает событие в первый раз, когда истекает интервал, и возобновляет событие в указанный интервал. <xref:System.Timers.Timer.Elapsed></span><span class="sxs-lookup"><span data-stu-id="ceb7e-258">If <xref:System.Timers.Timer.Start%2A> is called and <xref:System.Timers.Timer.AutoReset%2A> is `true`, the <xref:System.Timers.Timer> raises the <xref:System.Timers.Timer.Elapsed> event the first time the interval elapses and continues to raise the event on the specified interval.</span></span>  
  
 <span data-ttu-id="ceb7e-259">Время можно также запустить, задав <xref:System.Timers.Timer.Enabled%2A> для `true`значение.</span><span class="sxs-lookup"><span data-stu-id="ceb7e-259">You can also start timing by setting <xref:System.Timers.Timer.Enabled%2A> to `true`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ceb7e-260">Если <xref:System.Timers.Timer.AutoReset%2A> параметр `false`имеет значение <xref:System.Timers.Timer.Start%2A> , метод должен быть вызван для повторного запуска счетчика.</span><span class="sxs-lookup"><span data-stu-id="ceb7e-260">If <xref:System.Timers.Timer.AutoReset%2A> is `false`, the <xref:System.Timers.Timer.Start%2A> method must be called in order to start the count again.</span></span>  
  
 <span data-ttu-id="ceb7e-261">Вызов метода, <xref:System.Timers.Timer.Start%2A> когда таймер включен, не оказывает никакого влияния.</span><span class="sxs-lookup"><span data-stu-id="ceb7e-261">A call to the <xref:System.Timers.Timer.Start%2A> method when the timer is enabled has no effect.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="ceb7e-262"><see cref="T:System.Timers.Timer" /> создается с интервалом не меньше <see cref="F:System.Int32.MaxValue" />+1, либо задается интервал меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="ceb7e-262">The <see cref="T:System.Timers.Timer" /> is created with an interval equal to or greater than <see cref="F:System.Int32.MaxValue" /> + 1, or set to an interval less than zero.</span></span></exception>
        <altmember cref="P:System.Timers.Timer.Interval" />
        <altmember cref="P:System.Timers.Timer.AutoReset" />
        <altmember cref="P:System.Timers.Timer.Enabled" />
        <altmember cref="M:System.Timers.Timer.Stop" />
        <altmember cref="E:System.Timers.Timer.Elapsed" />
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Stop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Timers.Timer.Stop" />
      <MemberSignature Language="VB.NET" Value="Public Sub Stop ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Stop();" />
      <MemberSignature Language="F#" Value="member this.Stop : unit -&gt; unit" Usage="timer.Stop " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ceb7e-263">Прекращает вызывать событие <see cref="E:System.Timers.Timer.Elapsed" />, задавая для свойства <see cref="P:System.Timers.Timer.Enabled" /> значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="ceb7e-263">Stops raising the <see cref="E:System.Timers.Timer.Elapsed" /> event by setting <see cref="P:System.Timers.Timer.Enabled" /> to <see langword="false" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ceb7e-264">Время можно также отключить, задав для <xref:System.Timers.Timer.Enabled%2A> `false`значение.</span><span class="sxs-lookup"><span data-stu-id="ceb7e-264">You can also stop timing by setting <xref:System.Timers.Timer.Enabled%2A> to `false`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ceb7e-265">Сигнал для вызова <xref:System.Timers.Timer.Elapsed> события всегда помещается в очередь на выполнение <xref:System.Threading.ThreadPool> в потоке, поэтому метод обработки событий может выполняться в одном потоке одновременно с вызовом <xref:System.Timers.Timer.Stop%2A> метода в другом потоке.</span><span class="sxs-lookup"><span data-stu-id="ceb7e-265">The signal to raise the <xref:System.Timers.Timer.Elapsed> event is always queued for execution on a <xref:System.Threading.ThreadPool> thread, so the event-handling method might run on one thread at the same time that a call to the <xref:System.Timers.Timer.Stop%2A> method runs on another thread.</span></span> <span data-ttu-id="ceb7e-266">Это может привести к <xref:System.Timers.Timer.Elapsed> возникновению события <xref:System.Timers.Timer.Stop%2A> после вызова метода.</span><span class="sxs-lookup"><span data-stu-id="ceb7e-266">This might result in the <xref:System.Timers.Timer.Elapsed> event being raised after the <xref:System.Timers.Timer.Stop%2A> method is called.</span></span> <span data-ttu-id="ceb7e-267">Во втором примере кода в разделе " [примеры](#examples) " показан один из способов обхода этого состояния гонки.</span><span class="sxs-lookup"><span data-stu-id="ceb7e-267">The second code example in the [Examples](#examples) section shows one way to work around this race condition.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ceb7e-268">В следующем примере создается экземпляр `System.Timers.Timer` объекта, который <xref:System.Timers.Timer.Elapsed?displayProperty=nameWithType> запускает событие каждые две секунды (2 000 миллисекунд), настраивает обработчик событий для события и запускает таймер.</span><span class="sxs-lookup"><span data-stu-id="ceb7e-268">The following example instantiates a `System.Timers.Timer` object that fires its <xref:System.Timers.Timer.Elapsed?displayProperty=nameWithType> event every two seconds (2,000 milliseconds), sets up an event handler for the  event, and starts the timer.</span></span> <span data-ttu-id="ceb7e-269">Обработчик событий отображает значение <xref:System.Timers.ElapsedEventArgs.SignalTime%2A?displayProperty=nameWithType> свойства при каждом его возникновении.</span><span class="sxs-lookup"><span data-stu-id="ceb7e-269">The event handler displays the value of the <xref:System.Timers.ElapsedEventArgs.SignalTime%2A?displayProperty=nameWithType> property each time it is raised.</span></span> <span data-ttu-id="ceb7e-270">Когда пользователь нажимает клавишу ВВОД, приложение вызывает <xref:System.Timers.Timer.Stop%2A> метод перед завершением работы приложения.</span><span class="sxs-lookup"><span data-stu-id="ceb7e-270">When the user presses the Enter key, the application calls the  <xref:System.Timers.Timer.Stop%2A> method before terminating the application.</span></span>  
  
 [!code-csharp[System.Timers.Timer#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timers.timer/cs/timer2a.cs#2)]
 [!code-vb[System.Timers.Timer#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timers.timer/vb/timer2a.vb#2)]  
  
 <span data-ttu-id="ceb7e-271">В следующем примере кода показан один из способов предотвращения продолжения потока, вызывающего <xref:System.Timers.Timer.Stop%2A> метод, до окончания <xref:System.Timers.Timer.Elapsed> текущего события, а также предотвращения выполнения двух <xref:System.Timers.Timer.Elapsed> событий обработчика событий в одном и том же время (часто называется повторным входом).</span><span class="sxs-lookup"><span data-stu-id="ceb7e-271">The following code example shows one way to prevent the thread that calls the <xref:System.Timers.Timer.Stop%2A> method from continuing until a currently executing <xref:System.Timers.Timer.Elapsed> event ends, and also to prevent two <xref:System.Timers.Timer.Elapsed> events from executing the event handler at the same time (often referred to as reentrancy).</span></span>  
  
 <span data-ttu-id="ceb7e-272">В примере выполняется тестовый запуск 100.</span><span class="sxs-lookup"><span data-stu-id="ceb7e-272">The example executes 100 test runs.</span></span> <span data-ttu-id="ceb7e-273">При каждом запуске теста таймер запускается с интервалом в 150 миллисекунд.</span><span class="sxs-lookup"><span data-stu-id="ceb7e-273">Each time the test is run, the timer is started with an interval of 150 milliseconds.</span></span> <span data-ttu-id="ceb7e-274">Обработчик событий использует <xref:System.Threading.Thread.Sleep%2A?displayProperty=nameWithType> метод для имитации задачи, которая случайным образом изменяется в диапазоне от 50 до 200 миллисекунд.</span><span class="sxs-lookup"><span data-stu-id="ceb7e-274">The event handler uses the <xref:System.Threading.Thread.Sleep%2A?displayProperty=nameWithType> method to simulate a task that randomly varies in length from 50 to 200 milliseconds.</span></span> <span data-ttu-id="ceb7e-275">Метод теста также запускает управляющий поток, который ожидает секунды, а затем останавливает таймер.</span><span class="sxs-lookup"><span data-stu-id="ceb7e-275">The test method also starts a control thread that waits for a second and then stops the timer.</span></span> <span data-ttu-id="ceb7e-276">Если событие обрабатывается, когда управляющий поток останавливает таймер, поток управления должен дождаться завершения события перед продолжением.</span><span class="sxs-lookup"><span data-stu-id="ceb7e-276">If an event is being handled when the control thread stops the timer, the control thread must wait until the event is finished before proceeding.</span></span>  
  
 <span data-ttu-id="ceb7e-277">Перегрузка <xref:System.Threading.Interlocked.CompareExchange%28System.Int32%40%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType> метода используется, чтобы избежать повторного входа и предотвратить продолжение управляющего потока до окончания выполнения события.</span><span class="sxs-lookup"><span data-stu-id="ceb7e-277">The <xref:System.Threading.Interlocked.CompareExchange%28System.Int32%40%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType> method overload is used to avoid reentrancy and to prevent the control thread from continuing until an executing event ends.</span></span> <span data-ttu-id="ceb7e-278">Обработчик событий использует <xref:System.Threading.Interlocked.CompareExchange%28System.Int32%40%2CSystem.Int32%2CSystem.Int32%29> метод для установки управляющей переменной равным 1, но только в том случае, если значение равно нулю.</span><span class="sxs-lookup"><span data-stu-id="ceb7e-278">The event handler uses the <xref:System.Threading.Interlocked.CompareExchange%28System.Int32%40%2CSystem.Int32%2CSystem.Int32%29> method to set a control variable to 1, but only if the value is currently zero.</span></span> <span data-ttu-id="ceb7e-279">Это атомарная операция.</span><span class="sxs-lookup"><span data-stu-id="ceb7e-279">This is an atomic operation.</span></span> <span data-ttu-id="ceb7e-280">Если возвращаемое значение равно нулю, то Управляющая переменная имеет значение 1, а обработчик событий продолжает работу.</span><span class="sxs-lookup"><span data-stu-id="ceb7e-280">If the return value is zero, the control variable has been set to 1 and the event handler proceeds.</span></span> <span data-ttu-id="ceb7e-281">Если возвращаемое значение не равно нулю, событие просто удаляется, чтобы избежать повторного входа.</span><span class="sxs-lookup"><span data-stu-id="ceb7e-281">If the return value is non-zero, the event is simply discarded to avoid reentrancy.</span></span> <span data-ttu-id="ceb7e-282">(Если это необходимо для выполнения каждого события, <xref:System.Threading.Monitor> класс будет лучшим способом синхронизации событий.) Когда обработчик событий завершает работу, он устанавливает для переменной элемента управления значение 0.</span><span class="sxs-lookup"><span data-stu-id="ceb7e-282">(If it were necessary to execute every event, the <xref:System.Threading.Monitor> class would be a better way to synchronize the events.) When the event handler ends, it sets the control variable back to zero.</span></span> <span data-ttu-id="ceb7e-283">В этом примере записывается общее число выполненных событий, которые были отклонены из-за повторного входа и произошли после <xref:System.Timers.Timer.Stop%2A> вызова метода.</span><span class="sxs-lookup"><span data-stu-id="ceb7e-283">The example records the total number of events that executed, that were discarded because of reentrancy, and that occurred after the <xref:System.Timers.Timer.Stop%2A> method was called.</span></span>  
  
 <span data-ttu-id="ceb7e-284">Поток управления использует <xref:System.Threading.Interlocked.CompareExchange%28System.Int32%40%2CSystem.Int32%2CSystem.Int32%29> метод для задания управляющей переменной равным-1 (минус единица), но только в том случае, если значение равно нулю.</span><span class="sxs-lookup"><span data-stu-id="ceb7e-284">The control thread uses the <xref:System.Threading.Interlocked.CompareExchange%28System.Int32%40%2CSystem.Int32%2CSystem.Int32%29> method to set the control variable to -1 (minus one), but only if the value is currently zero.</span></span> <span data-ttu-id="ceb7e-285">Если атомарная операция возвращает ненулевое значение, в данный момент выполняется событие.</span><span class="sxs-lookup"><span data-stu-id="ceb7e-285">If the atomic operation returns non-zero, an event is currently executing.</span></span> <span data-ttu-id="ceb7e-286">Управляющий поток ожидает и пытается снова выполнить операцию.</span><span class="sxs-lookup"><span data-stu-id="ceb7e-286">The control thread waits and tries again.</span></span> <span data-ttu-id="ceb7e-287">В примере записывается, сколько раз потоку управления пришлось ожидать завершения события.</span><span class="sxs-lookup"><span data-stu-id="ceb7e-287">The example records the number of times the control thread had to wait for an event to finish.</span></span>  
  
 [!code-csharp[Timer.Stop#1](~/samples/snippets/csharp/VS_Snippets_CLR/Timer.Stop/CS/source.cs#1)]
 [!code-vb[Timer.Stop#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Timer.Stop/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Timers.Timer.Enabled" />
        <altmember cref="M:System.Timers.Timer.Start" />
        <altmember cref="E:System.Timers.Timer.Elapsed" />
      </Docs>
    </Member>
    <Member MemberName="SynchronizingObject">
      <MemberSignature Language="C#" Value="public System.ComponentModel.ISynchronizeInvoke SynchronizingObject { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.ISynchronizeInvoke SynchronizingObject" />
      <MemberSignature Language="DocId" Value="P:System.Timers.Timer.SynchronizingObject" />
      <MemberSignature Language="VB.NET" Value="Public Property SynchronizingObject As ISynchronizeInvoke" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::ISynchronizeInvoke ^ SynchronizingObject { System::ComponentModel::ISynchronizeInvoke ^ get(); void set(System::ComponentModel::ISynchronizeInvoke ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SynchronizingObject : System.ComponentModel.ISynchronizeInvoke with get, set" Usage="System.Timers.Timer.SynchronizingObject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netstandard-2.1">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netstandard-2.1">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Timers.TimersDescription("The object used to marshal the event handler calls issued when an interval has elapsed.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;netframework-4.8;netstandard-2.1">
          <AttributeName>System.Timers.TimersDescription("TimerSynchronizingObject")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ISynchronizeInvoke</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ceb7e-288">Получает или задает объект, используемый для маршалирования вызовов обработчика событий, осуществленных после истечения интервала времени.</span><span class="sxs-lookup"><span data-stu-id="ceb7e-288">Gets or sets the object used to marshal event-handler calls that are issued when an interval has elapsed.</span></span></summary>
        <value><span data-ttu-id="ceb7e-289"><see cref="T:System.ComponentModel.ISynchronizeInvoke" />, представляющий объект, используемый для маршалинга вызовов обработчика событий, осуществленных после истечения интервала времени.</span><span class="sxs-lookup"><span data-stu-id="ceb7e-289">The <see cref="T:System.ComponentModel.ISynchronizeInvoke" /> representing the object used to marshal the event-handler calls that are issued when an interval has elapsed.</span></span> <span data-ttu-id="ceb7e-290">Значение по умолчанию — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ceb7e-290">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ceb7e-291">Если <xref:System.Timers.Timer.SynchronizingObject%2A> имеет `null`значение, метод, обрабатывающий <xref:System.Timers.Timer.Elapsed> событие, вызывается в потоке из пула системных потоков.</span><span class="sxs-lookup"><span data-stu-id="ceb7e-291">When <xref:System.Timers.Timer.SynchronizingObject%2A> is `null`, the method that handles the <xref:System.Timers.Timer.Elapsed> event is called on a thread from the system-thread pool.</span></span> <span data-ttu-id="ceb7e-292">Дополнительные сведения о пулах системных потоков см. в разделе <xref:System.Threading.ThreadPool>.</span><span class="sxs-lookup"><span data-stu-id="ceb7e-292">For more information on system-thread pools, see <xref:System.Threading.ThreadPool>.</span></span>  
  
 <span data-ttu-id="ceb7e-293"><xref:System.Timers.Timer.Elapsed> Когда событие обрабатывается компонентом Visual Windows Forms, например кнопкой, доступ к компоненту через пул системных потоков может привести к исключению или просто не работать.</span><span class="sxs-lookup"><span data-stu-id="ceb7e-293">When the <xref:System.Timers.Timer.Elapsed> event is handled by a visual Windows Forms component, such as a button, accessing the component through the system-thread pool might result in an exception or just might not work.</span></span> <span data-ttu-id="ceb7e-294">Избегайте этого воздействия, установив <xref:System.Timers.Timer.SynchronizingObject%2A> для компонента Windows Forms, который вызывает вызов метода, <xref:System.Timers.Timer.Elapsed> обрабатывающего событие, в том же потоке, в котором был создан компонент.</span><span class="sxs-lookup"><span data-stu-id="ceb7e-294">Avoid this effect by setting <xref:System.Timers.Timer.SynchronizingObject%2A> to a Windows Forms component, which causes the method that handles the <xref:System.Timers.Timer.Elapsed> event to be called on the same thread that the component was created on.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ceb7e-295">Даже если <xref:System.Timers.Timer.SynchronizingObject%2A> свойство не <xref:System.Timers.Timer.Enabled%2A> <xref:System.Timers.Timer.Dispose%2A> <xref:System.Timers.Timer.Stop%2A> `false`имеет значение `null`, <xref:System.Timers.Timer.Elapsed> события могут возникать после вызова метода или после того, как свойство имеет значение, так как вызываемый сигнал <xref:System.Timers.Timer.Elapsed> событие всегда помещается в очередь на выполнение в потоке пула потоков.</span><span class="sxs-lookup"><span data-stu-id="ceb7e-295">Even if the <xref:System.Timers.Timer.SynchronizingObject%2A> property is not `null`, <xref:System.Timers.Timer.Elapsed> events can occur after the <xref:System.Timers.Timer.Dispose%2A> or <xref:System.Timers.Timer.Stop%2A> method has been called or after the <xref:System.Timers.Timer.Enabled%2A> property has been set to `false`, because the signal to raise the <xref:System.Timers.Timer.Elapsed> event is always queued for execution on a thread pool thread.</span></span> <span data-ttu-id="ceb7e-296">Одним из способов разрешения этого состояния гонки является установка флага, сообщающего обработчику событий о <xref:System.Timers.Timer.Elapsed> пропуске последующих событий.</span><span class="sxs-lookup"><span data-stu-id="ceb7e-296">One way to resolve this race condition is to set a flag that tells the event handler for the <xref:System.Timers.Timer.Elapsed> event to ignore subsequent events.</span></span>  
  
 <span data-ttu-id="ceb7e-297">Если используется в Visual Studio в конструкторе Windows Forms, <xref:System.Timers.Timer.SynchronizingObject%2A> автоматически задается элемент управления, содержащий  <xref:System.Timers.Timer> .  <xref:System.Timers.Timer></span><span class="sxs-lookup"><span data-stu-id="ceb7e-297">If the <xref:System.Timers.Timer> is used inside Visual Studio in a Windows Forms designer, <xref:System.Timers.Timer.SynchronizingObject%2A> is automatically set to the control that contains the <xref:System.Timers.Timer>.</span></span> <span data-ttu-id="ceb7e-298">Например, <xref:System.Timers.Timer> если поместить в конструктор для `Form1` (который наследует от <xref:System.Windows.Forms.Form>), <xref:System.Timers.Timer.SynchronizingObject%2A> свойство объекта <xref:System.Timers.Timer> задается экземпляру `Form1`.</span><span class="sxs-lookup"><span data-stu-id="ceb7e-298">For example, if you place a <xref:System.Timers.Timer> on a designer for `Form1` (which inherits from <xref:System.Windows.Forms.Form>), the <xref:System.Timers.Timer.SynchronizingObject%2A> property of <xref:System.Timers.Timer> is set to the instance of `Form1`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ceb7e-299">Ниже приведен пример приложения Windows Forms, которое служит очень простым редактором текстовых файлов.</span><span class="sxs-lookup"><span data-stu-id="ceb7e-299">The following example is a Windows Forms app that serves as a very simple text file editor.</span></span> <span data-ttu-id="ceb7e-300">Если текст в текстовом поле не был сохранен, приложение запросит пользователя через одну минуту, независимо от того, нужно ли сохранить содержимое текстового поля.</span><span class="sxs-lookup"><span data-stu-id="ceb7e-300">When the text in the text box has not been saved, the app asks the user at one-minute intervals whether he or she wants to save the contents of the text box.</span></span>  <span data-ttu-id="ceb7e-301">Для этого <xref:System.Timers.Timer.Interval%2A> свойству задается значение одной минуты (60 000 миллисекунд), <xref:System.Timers.Timer.SynchronizingObject%2A> а <xref:System.Windows.Forms.Form> свойству задается объект.</span><span class="sxs-lookup"><span data-stu-id="ceb7e-301">To do this, the <xref:System.Timers.Timer.Interval%2A> property is set to one minute (60,000 milliseconds), and the <xref:System.Timers.Timer.SynchronizingObject%2A> property is set to the <xref:System.Windows.Forms.Form> object.</span></span>  
  
 [!code-csharp[System.Timers.Timer.SynchronizingObject#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Timers.Timer.SynchronizingObject/cs/Form1.cs#1)]
 [!code-vb[System.Timers.Timer.SynchronizingObject#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Timers.Timer.SynchronizingObject/vb/Form1.vb#1)]  
  
 <span data-ttu-id="ceb7e-302">Для этого примера необходимо добавить в форму следующие элементы управления:</span><span class="sxs-lookup"><span data-stu-id="ceb7e-302">The example requires that you add the following controls to the form:</span></span>  
  
-   <span data-ttu-id="ceb7e-303">Элемент управления с `TextBox1` именем (его имя по умолчанию). <xref:System.Windows.Forms.TextBox></span><span class="sxs-lookup"><span data-stu-id="ceb7e-303">A <xref:System.Windows.Forms.TextBox> control named `TextBox1` (its default name).</span></span>  
  
-   <span data-ttu-id="ceb7e-304">Элемент управления с `Button1` именем (его имя по умолчанию). <xref:System.Windows.Forms.Button></span><span class="sxs-lookup"><span data-stu-id="ceb7e-304">A <xref:System.Windows.Forms.Button> control named `Button1` (its default name).</span></span>  
  
-   <span data-ttu-id="ceb7e-305">Элемент управления с `SaveSaveFileDialog1` именем (его имя по умолчанию). <xref:System.Windows.Forms.SaveFileDialog></span><span class="sxs-lookup"><span data-stu-id="ceb7e-305">A <xref:System.Windows.Forms.SaveFileDialog> control named `SaveSaveFileDialog1` (its default name) .</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Form" />
        <altmember cref="T:System.ComponentModel.ISynchronizeInvoke" />
        <altmember cref="T:System.Threading.ThreadPool" />
        <altmember cref="E:System.Timers.Timer.Elapsed" />
      </Docs>
    </Member>
  </Members>
</Type>
