<Type Name="SoapServerVRoot" FullName="System.EnterpriseServices.Internal.SoapServerVRoot">
  <Metadata><Meta Name="ms.openlocfilehash" Value="38897db97dce9661c9b398d06f93897f8bdfabad" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69359008" /></Metadata><TypeSignature Language="C#" Value="public sealed class SoapServerVRoot : System.EnterpriseServices.Internal.ISoapServerVRoot" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SoapServerVRoot extends System.Object implements class System.EnterpriseServices.Internal.ISoapServerVRoot" />
  <TypeSignature Language="DocId" Value="T:System.EnterpriseServices.Internal.SoapServerVRoot" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SoapServerVRoot&#xA;Implements ISoapServerVRoot" />
  <TypeSignature Language="C++ CLI" Value="public ref class SoapServerVRoot sealed : System::EnterpriseServices::Internal::ISoapServerVRoot" />
  <TypeSignature Language="F#" Value="type SoapServerVRoot = class&#xA;    interface ISoapServerVRoot" />
  <AssemblyInfo>
    <AssemblyName>System.EnterpriseServices</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.EnterpriseServices.Internal.ISoapServerVRoot</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("CAA817CC-0C04-4d22-A05C-2B7E162F4E8F")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="fc5e6-101">Публикует на серверах зашифрованные виртуальные корни SOAP, прошедшие проверку подлинности.</span><span class="sxs-lookup"><span data-stu-id="fc5e6-101">Publishes authenticated, encrypted SOAP virtual roots on servers.</span></span> <span data-ttu-id="fc5e6-102">Этот класс не наследуется.</span><span class="sxs-lookup"><span data-stu-id="fc5e6-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc5e6-103"><xref:System.EnterpriseServices.Internal.SoapServerVRoot>используется для внутренних целей .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="fc5e6-103"><xref:System.EnterpriseServices.Internal.SoapServerVRoot> is used internally by the .NET Framework.</span></span> <span data-ttu-id="fc5e6-104">Его не нужно использовать непосредственно в коде.</span><span class="sxs-lookup"><span data-stu-id="fc5e6-104">You do not need to use it directly in your code.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoapServerVRoot ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.SoapServerVRoot.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SoapServerVRoot();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fc5e6-105">Инициализирует новый экземпляр класса <see cref="T:System.EnterpriseServices.Internal.SoapServerVRoot" />.</span><span class="sxs-lookup"><span data-stu-id="fc5e6-105">Initializes a new instance of the <see cref="T:System.EnterpriseServices.Internal.SoapServerVRoot" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateVirtualRootEx">
      <MemberSignature Language="C#" Value="public void CreateVirtualRootEx (string rootWebServer, string inBaseUrl, string inVirtualRoot, string homePage, string discoFile, string secureSockets, string authentication, string operation, out string baseUrl, out string virtualRoot, out string physicalPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CreateVirtualRootEx(string rootWebServer, string inBaseUrl, string inVirtualRoot, string homePage, string discoFile, string secureSockets, string authentication, string operation, [out] string&amp; baseUrl, [out] string&amp; virtualRoot, [out] string&amp; physicalPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.SoapServerVRoot.CreateVirtualRootEx(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String@,System.String@,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CreateVirtualRootEx (rootWebServer As String, inBaseUrl As String, inVirtualRoot As String, homePage As String, discoFile As String, secureSockets As String, authentication As String, operation As String, ByRef baseUrl As String, ByRef virtualRoot As String, ByRef physicalPath As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CreateVirtualRootEx(System::String ^ rootWebServer, System::String ^ inBaseUrl, System::String ^ inVirtualRoot, System::String ^ homePage, System::String ^ discoFile, System::String ^ secureSockets, System::String ^ authentication, System::String ^ operation, [Runtime::InteropServices::Out] System::String ^ % baseUrl, [Runtime::InteropServices::Out] System::String ^ % virtualRoot, [Runtime::InteropServices::Out] System::String ^ % physicalPath);" />
      <MemberSignature Language="F#" Value="abstract member CreateVirtualRootEx : string * string * string * string * string * string * string * string *  *  *  -&gt; unit&#xA;override this.CreateVirtualRootEx : string * string * string * string * string * string * string * string *  *  *  -&gt; unit" Usage="soapServerVRoot.CreateVirtualRootEx (rootWebServer, inBaseUrl, inVirtualRoot, homePage, discoFile, secureSockets, authentication, operation, baseUrl, virtualRoot, physicalPath)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.EnterpriseServices.Internal.ISoapServerVRoot.CreateVirtualRootEx(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String@,System.String@,System.String@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rootWebServer" Type="System.String" />
        <Parameter Name="inBaseUrl" Type="System.String" />
        <Parameter Name="inVirtualRoot" Type="System.String" />
        <Parameter Name="homePage" Type="System.String" />
        <Parameter Name="discoFile" Type="System.String" />
        <Parameter Name="secureSockets" Type="System.String" />
        <Parameter Name="authentication" Type="System.String" />
        <Parameter Name="operation" Type="System.String" />
        <Parameter Name="baseUrl" Type="System.String" RefType="out" />
        <Parameter Name="virtualRoot" Type="System.String" RefType="out" />
        <Parameter Name="physicalPath" Type="System.String" RefType="out" />
      </Parameters>
      <Docs>
        <param name="rootWebServer"><span data-ttu-id="fc5e6-106">Корневой веб-сервер.</span><span class="sxs-lookup"><span data-stu-id="fc5e6-106">The root Web server.</span></span> <span data-ttu-id="fc5e6-107">По умолчанию используется "IIS://localhost/W3SVC/1/ROOT".</span><span class="sxs-lookup"><span data-stu-id="fc5e6-107">The default is "IIS://localhost/W3SVC/1/ROOT".</span></span></param>
        <param name="inBaseUrl"><span data-ttu-id="fc5e6-108">Базовый URL-адрес, содержащий виртуальный корень.</span><span class="sxs-lookup"><span data-stu-id="fc5e6-108">The base URL that contains the virtual root.</span></span></param>
        <param name="inVirtualRoot"><span data-ttu-id="fc5e6-109">Имя виртуального корня.</span><span class="sxs-lookup"><span data-stu-id="fc5e6-109">The name of the virtual root.</span></span></param>
        <param name="homePage"><span data-ttu-id="fc5e6-110">URL-адрес домашней страницы.</span><span class="sxs-lookup"><span data-stu-id="fc5e6-110">The URL of the home page.</span></span></param>
        <param name="discoFile"><span data-ttu-id="fc5e6-111"><see langword="true" />, если должен быть создан используемый по умолчанию файл обнаружения; <see langword="false" />, если файл обнаружения не нужен.</span><span class="sxs-lookup"><span data-stu-id="fc5e6-111"><see langword="true" /> if a default discovery file is to be created; <see langword="false" /> if there is to be no discovery file.</span></span> <span data-ttu-id="fc5e6-112">Если задано <see langword="false" /> и существует файл Default.disco, этот файл удаляется.</span><span class="sxs-lookup"><span data-stu-id="fc5e6-112">If <see langword="false" /> and a Default.disco file exists, the file is deleted.</span></span></param>
        <param name="secureSockets"><span data-ttu-id="fc5e6-113"><see langword="true" />, если требуется SSL-шифрование; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="fc5e6-113"><see langword="true" /> if SSL encryption is required; otherwise, <see langword="false" />.</span></span></param>
        <param name="authentication"><span data-ttu-id="fc5e6-114">Укажите "anonymous", если не используется проверка подлинности (анонимный пользователь).</span><span class="sxs-lookup"><span data-stu-id="fc5e6-114">Specify "anonymous" if no authentication is to be used (anonymous user).</span></span> <span data-ttu-id="fc5e6-115">В противном случае укажите пустую строку.</span><span class="sxs-lookup"><span data-stu-id="fc5e6-115">Otherwise, specify an empty string.</span></span></param>
        <param name="operation"><span data-ttu-id="fc5e6-116">Не используется.</span><span class="sxs-lookup"><span data-stu-id="fc5e6-116">Not used.</span></span> <span data-ttu-id="fc5e6-117">Укажите <see langword="null" /> в качестве этого параметра.</span><span class="sxs-lookup"><span data-stu-id="fc5e6-117">Specify <see langword="null" /> for this parameter.</span></span></param>
        <param name="baseUrl"><span data-ttu-id="fc5e6-118">Когда этот метод возвращает управление, данный параметр содержит базовый URL-адрес.</span><span class="sxs-lookup"><span data-stu-id="fc5e6-118">When this method returns, this parameter contains the base URL.</span></span></param>
        <param name="virtualRoot"><span data-ttu-id="fc5e6-119">Когда этот метод возвращает управление, данный параметр содержит имя виртуального корня.</span><span class="sxs-lookup"><span data-stu-id="fc5e6-119">When this method returns, this parameter contains the name of the virtual root.</span></span></param>
        <param name="physicalPath"><span data-ttu-id="fc5e6-120">Когда этот метод возвращает управление, данный параметр содержит дисковый адрес каталога виртуального корня.</span><span class="sxs-lookup"><span data-stu-id="fc5e6-120">When this method returns, this parameter contains the disk address of the Virtual Root directory.</span></span></param>
        <summary><span data-ttu-id="fc5e6-121">Создает виртуальный корень SOAP с параметрами безопасности.</span><span class="sxs-lookup"><span data-stu-id="fc5e6-121">Creates a SOAP virtual root with security options.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="fc5e6-122">Вызывающий код в цепочке вызовов не имеет необходимого разрешения на доступ к неуправляемому коду.</span><span class="sxs-lookup"><span data-stu-id="fc5e6-122">A caller in the call chain does not have permission to access unmanaged code.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="fc5e6-123">Служебная программа SOAP недоступна.</span><span class="sxs-lookup"><span data-stu-id="fc5e6-123">The SOAP utility is not available.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="fc5e6-124">для возможности доступа к неуправляемому коду.</span><span class="sxs-lookup"><span data-stu-id="fc5e6-124">for the ability to access unmanaged code.</span></span> <span data-ttu-id="fc5e6-125">Связанное перечисление:<see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="fc5e6-125">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="DeleteVirtualRootEx">
      <MemberSignature Language="C#" Value="public void DeleteVirtualRootEx (string rootWebServer, string inBaseUrl, string inVirtualRoot);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DeleteVirtualRootEx(string rootWebServer, string inBaseUrl, string inVirtualRoot) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.SoapServerVRoot.DeleteVirtualRootEx(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeleteVirtualRootEx (rootWebServer As String, inBaseUrl As String, inVirtualRoot As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void DeleteVirtualRootEx(System::String ^ rootWebServer, System::String ^ inBaseUrl, System::String ^ inVirtualRoot);" />
      <MemberSignature Language="F#" Value="abstract member DeleteVirtualRootEx : string * string * string -&gt; unit&#xA;override this.DeleteVirtualRootEx : string * string * string -&gt; unit" Usage="soapServerVRoot.DeleteVirtualRootEx (rootWebServer, inBaseUrl, inVirtualRoot)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.EnterpriseServices.Internal.ISoapServerVRoot.DeleteVirtualRootEx(System.String,System.String,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rootWebServer" Type="System.String" />
        <Parameter Name="inBaseUrl" Type="System.String" />
        <Parameter Name="inVirtualRoot" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="rootWebServer"><span data-ttu-id="fc5e6-126">Корневой веб-сервер.</span><span class="sxs-lookup"><span data-stu-id="fc5e6-126">The root Web server.</span></span> <span data-ttu-id="fc5e6-127">По умолчанию используется "IIS://localhost/W3SVC/1/ROOT".</span><span class="sxs-lookup"><span data-stu-id="fc5e6-127">The default is "IIS://localhost/W3SVC/1/ROOT".</span></span></param>
        <param name="inBaseUrl"><span data-ttu-id="fc5e6-128">Базовый URL-адрес, содержащий виртуальный корень.</span><span class="sxs-lookup"><span data-stu-id="fc5e6-128">The base URL that contains the virtual root.</span></span></param>
        <param name="inVirtualRoot"><span data-ttu-id="fc5e6-129">Имя виртуального корня.</span><span class="sxs-lookup"><span data-stu-id="fc5e6-129">The name of the virtual root.</span></span></param>
        <summary><span data-ttu-id="fc5e6-130">Удаляет виртуальный корень.</span><span class="sxs-lookup"><span data-stu-id="fc5e6-130">Deletes a virtual root.</span></span> <span data-ttu-id="fc5e6-131">Реализован не полностью.</span><span class="sxs-lookup"><span data-stu-id="fc5e6-131">Not fully implemented.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc5e6-132">Функции для удаления виртуального корня пока недоступны.</span><span class="sxs-lookup"><span data-stu-id="fc5e6-132">The functionality to delete a virtual root is not yet available.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="fc5e6-133">Этот метод возвращает, не удаляя виртуальный корневой каталог.</span><span class="sxs-lookup"><span data-stu-id="fc5e6-133">This method returns without deleting the virtual root.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="fc5e6-134">Вызывающий код в цепочке вызовов не имеет необходимого разрешения на доступ к неуправляемому коду.</span><span class="sxs-lookup"><span data-stu-id="fc5e6-134">A caller in the call chain does not have permission to access unmanaged code.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="fc5e6-135">Служебная программа SOAP недоступна.</span><span class="sxs-lookup"><span data-stu-id="fc5e6-135">The SOAP utility is not available.</span></span></exception>
        <exception cref="T:System.EnterpriseServices.ServicedComponentException"><span data-ttu-id="fc5e6-136">Вызов для получения системного каталога не выполнен.</span><span class="sxs-lookup"><span data-stu-id="fc5e6-136">The call to get the system directory failed.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="fc5e6-137">для возможности доступа к неуправляемому коду.</span><span class="sxs-lookup"><span data-stu-id="fc5e6-137">for the ability to access unmanaged code.</span></span> <span data-ttu-id="fc5e6-138">Связанное перечисление:<see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="fc5e6-138">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualRootStatus">
      <MemberSignature Language="C#" Value="public void GetVirtualRootStatus (string RootWebServer, string inBaseUrl, string inVirtualRoot, out string Exists, out string SSL, out string WindowsAuth, out string Anonymous, out string HomePage, out string DiscoFile, out string PhysicalPath, out string BaseUrl, out string VirtualRoot);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetVirtualRootStatus(string RootWebServer, string inBaseUrl, string inVirtualRoot, [out] string&amp; Exists, [out] string&amp; SSL, [out] string&amp; WindowsAuth, [out] string&amp; Anonymous, [out] string&amp; HomePage, [out] string&amp; DiscoFile, [out] string&amp; PhysicalPath, [out] string&amp; BaseUrl, [out] string&amp; VirtualRoot) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.SoapServerVRoot.GetVirtualRootStatus(System.String,System.String,System.String,System.String@,System.String@,System.String@,System.String@,System.String@,System.String@,System.String@,System.String@,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetVirtualRootStatus (RootWebServer As String, inBaseUrl As String, inVirtualRoot As String, ByRef Exists As String, ByRef SSL As String, ByRef WindowsAuth As String, ByRef Anonymous As String, ByRef HomePage As String, ByRef DiscoFile As String, ByRef PhysicalPath As String, ByRef BaseUrl As String, ByRef VirtualRoot As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GetVirtualRootStatus(System::String ^ RootWebServer, System::String ^ inBaseUrl, System::String ^ inVirtualRoot, [Runtime::InteropServices::Out] System::String ^ % Exists, [Runtime::InteropServices::Out] System::String ^ % SSL, [Runtime::InteropServices::Out] System::String ^ % WindowsAuth, [Runtime::InteropServices::Out] System::String ^ % Anonymous, [Runtime::InteropServices::Out] System::String ^ % HomePage, [Runtime::InteropServices::Out] System::String ^ % DiscoFile, [Runtime::InteropServices::Out] System::String ^ % PhysicalPath, [Runtime::InteropServices::Out] System::String ^ % BaseUrl, [Runtime::InteropServices::Out] System::String ^ % VirtualRoot);" />
      <MemberSignature Language="F#" Value="abstract member GetVirtualRootStatus : string * string * string *  *  *  *  *  *  *  *  *  -&gt; unit&#xA;override this.GetVirtualRootStatus : string * string * string *  *  *  *  *  *  *  *  *  -&gt; unit" Usage="soapServerVRoot.GetVirtualRootStatus (RootWebServer, inBaseUrl, inVirtualRoot, Exists, SSL, WindowsAuth, Anonymous, HomePage, DiscoFile, PhysicalPath, BaseUrl, VirtualRoot)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.EnterpriseServices.Internal.ISoapServerVRoot.GetVirtualRootStatus(System.String,System.String,System.String,System.String@,System.String@,System.String@,System.String@,System.String@,System.String@,System.String@,System.String@,System.String@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="RootWebServer" Type="System.String" />
        <Parameter Name="inBaseUrl" Type="System.String" />
        <Parameter Name="inVirtualRoot" Type="System.String" />
        <Parameter Name="Exists" Type="System.String" RefType="out" />
        <Parameter Name="SSL" Type="System.String" RefType="out" />
        <Parameter Name="WindowsAuth" Type="System.String" RefType="out" />
        <Parameter Name="Anonymous" Type="System.String" RefType="out" />
        <Parameter Name="HomePage" Type="System.String" RefType="out" />
        <Parameter Name="DiscoFile" Type="System.String" RefType="out" />
        <Parameter Name="PhysicalPath" Type="System.String" RefType="out" />
        <Parameter Name="BaseUrl" Type="System.String" RefType="out" />
        <Parameter Name="VirtualRoot" Type="System.String" RefType="out" />
      </Parameters>
      <Docs>
        <param name="RootWebServer"><span data-ttu-id="fc5e6-139">Корневой веб-сервер.</span><span class="sxs-lookup"><span data-stu-id="fc5e6-139">The root Web server.</span></span> <span data-ttu-id="fc5e6-140">По умолчанию используется "IIS://localhost/W3SVC/1/ROOT".</span><span class="sxs-lookup"><span data-stu-id="fc5e6-140">The default is "IIS://localhost/W3SVC/1/ROOT".</span></span></param>
        <param name="inBaseUrl"><span data-ttu-id="fc5e6-141">Базовый URL-адрес, содержащий виртуальный корень.</span><span class="sxs-lookup"><span data-stu-id="fc5e6-141">The base URL that contains the virtual root.</span></span></param>
        <param name="inVirtualRoot"><span data-ttu-id="fc5e6-142">Имя виртуального корня.</span><span class="sxs-lookup"><span data-stu-id="fc5e6-142">The name of the virtual root.</span></span></param>
        <param name="Exists"><span data-ttu-id="fc5e6-143">Когда этот метод возвращает управление, данный параметр содержит <see langword="true" />, если виртуальный каталог существует, в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="fc5e6-143">When this method returns, this parameter contains a <see langword="true" /> if the virtual directory exists; otherwise, <see langword="false" />.</span></span></param>
        <param name="SSL"><span data-ttu-id="fc5e6-144">Когда этот метод возвращает управление, данный параметр содержит <see langword="true" />, если требуется SSL-шифрование, в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="fc5e6-144">When this method returns, this parameter contains a <see langword="true" /> if SSL encryption is required; otherwise, <see langword="false" />.</span></span></param>
        <param name="WindowsAuth"><span data-ttu-id="fc5e6-145">Когда этот метод возвращает управление, данный параметр содержит <see langword="true" />, если установлена проверка подлинности Windows, в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="fc5e6-145">When this method returns, this parameter contains <see langword="true" /> if Windows authentication is set, otherwise, <see langword="false" />.</span></span></param>
        <param name="Anonymous"><span data-ttu-id="fc5e6-146">Когда этот метод возвращает управление, данный параметр содержит <see langword="true" />, если не установлена проверка подлинности (анонимный пользователь), в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="fc5e6-146">When this method returns, this parameter contains <see langword="true" /> if no authentication is set (anonymous user); otherwise, <see langword="false" />.</span></span></param>
        <param name="HomePage"><span data-ttu-id="fc5e6-147">Когда этот метод возвращает управление, данный параметр содержит <see langword="true" />, если свойство <see langword="EnableDefaultDoc" /> виртуального корня установлено, в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="fc5e6-147">When this method returns, this parameter contains a <see langword="true" /> if the Virtual Root's <see langword="EnableDefaultDoc" /> property is set; otherwise, <see langword="false" />.</span></span></param>
        <param name="DiscoFile"><span data-ttu-id="fc5e6-148">Когда этот метод возвращает управление, данный параметр содержит <see langword="true" />, если файл Default.disco существует, в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="fc5e6-148">When this method returns, this parameter contains a <see langword="true" /> if a Default.disco file exists; otherwise, <see langword="false" />.</span></span></param>
        <param name="PhysicalPath"><span data-ttu-id="fc5e6-149">Когда этот метод возвращает управление, данный параметр содержит дисковый адрес каталога виртуального корня.</span><span class="sxs-lookup"><span data-stu-id="fc5e6-149">When this method returns, this parameter contains the disk address of the virtual root directory.</span></span></param>
        <param name="BaseUrl"><span data-ttu-id="fc5e6-150">Когда этот метод возвращает управление, данный параметр содержит базовый URL-адрес.</span><span class="sxs-lookup"><span data-stu-id="fc5e6-150">When this method returns, this parameter contains the base URL.</span></span></param>
        <param name="VirtualRoot"><span data-ttu-id="fc5e6-151">Когда этот метод возвращает управление, данный параметр содержит имя виртуального корня.</span><span class="sxs-lookup"><span data-stu-id="fc5e6-151">When this method returns, this parameter contains the name of the virtual root.</span></span></param>
        <summary><span data-ttu-id="fc5e6-152">Возвращает состояние безопасности существующего виртуального корня SOAP.</span><span class="sxs-lookup"><span data-stu-id="fc5e6-152">Returns the security status of an existing SOAP virtual root.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
