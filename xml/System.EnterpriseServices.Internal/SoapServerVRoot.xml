<Type Name="SoapServerVRoot" FullName="System.EnterpriseServices.Internal.SoapServerVRoot">
  <Metadata><Meta Name="ms.openlocfilehash" Value="530a9f0b119f16838973b50e1fd48845261ef957" /><Meta Name="ms.sourcegitcommit" Value="a22d0855bbf24d893f43605f8b7e3a44bd9551a5" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70334003" /></Metadata><TypeSignature Language="C#" Value="public sealed class SoapServerVRoot : System.EnterpriseServices.Internal.ISoapServerVRoot" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SoapServerVRoot extends System.Object implements class System.EnterpriseServices.Internal.ISoapServerVRoot" />
  <TypeSignature Language="DocId" Value="T:System.EnterpriseServices.Internal.SoapServerVRoot" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SoapServerVRoot&#xA;Implements ISoapServerVRoot" />
  <TypeSignature Language="C++ CLI" Value="public ref class SoapServerVRoot sealed : System::EnterpriseServices::Internal::ISoapServerVRoot" />
  <TypeSignature Language="F#" Value="type SoapServerVRoot = class&#xA;    interface ISoapServerVRoot" />
  <AssemblyInfo>
    <AssemblyName>System.EnterpriseServices</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.EnterpriseServices.Internal.ISoapServerVRoot</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("CAA817CC-0C04-4d22-A05C-2B7E162F4E8F")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Публикует на серверах зашифрованные виртуальные корни SOAP, прошедшие проверку подлинности. Этот класс не наследуется.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.EnterpriseServices.Internal.SoapServerVRoot>используется для внутренних целей .NET Framework. Его не нужно использовать непосредственно в коде.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoapServerVRoot ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.SoapServerVRoot.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SoapServerVRoot();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.EnterpriseServices.Internal.SoapServerVRoot" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateVirtualRootEx">
      <MemberSignature Language="C#" Value="public void CreateVirtualRootEx (string rootWebServer, string inBaseUrl, string inVirtualRoot, string homePage, string discoFile, string secureSockets, string authentication, string operation, out string baseUrl, out string virtualRoot, out string physicalPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CreateVirtualRootEx(string rootWebServer, string inBaseUrl, string inVirtualRoot, string homePage, string discoFile, string secureSockets, string authentication, string operation, [out] string&amp; baseUrl, [out] string&amp; virtualRoot, [out] string&amp; physicalPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.SoapServerVRoot.CreateVirtualRootEx(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String@,System.String@,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CreateVirtualRootEx (rootWebServer As String, inBaseUrl As String, inVirtualRoot As String, homePage As String, discoFile As String, secureSockets As String, authentication As String, operation As String, ByRef baseUrl As String, ByRef virtualRoot As String, ByRef physicalPath As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CreateVirtualRootEx(System::String ^ rootWebServer, System::String ^ inBaseUrl, System::String ^ inVirtualRoot, System::String ^ homePage, System::String ^ discoFile, System::String ^ secureSockets, System::String ^ authentication, System::String ^ operation, [Runtime::InteropServices::Out] System::String ^ % baseUrl, [Runtime::InteropServices::Out] System::String ^ % virtualRoot, [Runtime::InteropServices::Out] System::String ^ % physicalPath);" />
      <MemberSignature Language="F#" Value="abstract member CreateVirtualRootEx : string * string * string * string * string * string * string * string * string * string * string -&gt; unit&#xA;override this.CreateVirtualRootEx : string * string * string * string * string * string * string * string * string * string * string -&gt; unit" Usage="soapServerVRoot.CreateVirtualRootEx (rootWebServer, inBaseUrl, inVirtualRoot, homePage, discoFile, secureSockets, authentication, operation, baseUrl, virtualRoot, physicalPath)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.EnterpriseServices.Internal.ISoapServerVRoot.CreateVirtualRootEx(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String@,System.String@,System.String@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rootWebServer" Type="System.String" />
        <Parameter Name="inBaseUrl" Type="System.String" />
        <Parameter Name="inVirtualRoot" Type="System.String" />
        <Parameter Name="homePage" Type="System.String" />
        <Parameter Name="discoFile" Type="System.String" />
        <Parameter Name="secureSockets" Type="System.String" />
        <Parameter Name="authentication" Type="System.String" />
        <Parameter Name="operation" Type="System.String" />
        <Parameter Name="baseUrl" Type="System.String" RefType="out" />
        <Parameter Name="virtualRoot" Type="System.String" RefType="out" />
        <Parameter Name="physicalPath" Type="System.String" RefType="out" />
      </Parameters>
      <Docs>
        <param name="rootWebServer">Корневой веб-сервер. По умолчанию используется "IIS://localhost/W3SVC/1/ROOT".</param>
        <param name="inBaseUrl">Базовый URL-адрес, содержащий виртуальный корень.</param>
        <param name="inVirtualRoot">Имя виртуального корня.</param>
        <param name="homePage">URL-адрес домашней страницы.</param>
        <param name="discoFile"><see langword="true" />, если должен быть создан используемый по умолчанию файл обнаружения; <see langword="false" />, если файл обнаружения не нужен. Если задано <see langword="false" /> и существует файл Default.disco, этот файл удаляется.</param>
        <param name="secureSockets"><see langword="true" />, если требуется SSL-шифрование; в противном случае — <see langword="false" />.</param>
        <param name="authentication">Укажите "anonymous", если не используется проверка подлинности (анонимный пользователь). В противном случае укажите пустую строку.</param>
        <param name="operation">Не используется. Укажите <see langword="null" /> в качестве этого параметра.</param>
        <param name="baseUrl">Когда этот метод возвращает управление, данный параметр содержит базовый URL-адрес.</param>
        <param name="virtualRoot">Когда этот метод возвращает управление, данный параметр содержит имя виртуального корня.</param>
        <param name="physicalPath">Когда этот метод возвращает управление, данный параметр содержит дисковый адрес каталога виртуального корня.</param>
        <summary>Создает виртуальный корень SOAP с параметрами безопасности.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.SecurityException">Вызывающий код в цепочке вызовов не имеет необходимого разрешения на доступ к неуправляемому коду.</exception>
        <exception cref="T:System.PlatformNotSupportedException">Служебная программа SOAP недоступна.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">для возможности доступа к неуправляемому коду. Связанное перечисление:<see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="DeleteVirtualRootEx">
      <MemberSignature Language="C#" Value="public void DeleteVirtualRootEx (string rootWebServer, string inBaseUrl, string inVirtualRoot);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DeleteVirtualRootEx(string rootWebServer, string inBaseUrl, string inVirtualRoot) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.SoapServerVRoot.DeleteVirtualRootEx(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeleteVirtualRootEx (rootWebServer As String, inBaseUrl As String, inVirtualRoot As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void DeleteVirtualRootEx(System::String ^ rootWebServer, System::String ^ inBaseUrl, System::String ^ inVirtualRoot);" />
      <MemberSignature Language="F#" Value="abstract member DeleteVirtualRootEx : string * string * string -&gt; unit&#xA;override this.DeleteVirtualRootEx : string * string * string -&gt; unit" Usage="soapServerVRoot.DeleteVirtualRootEx (rootWebServer, inBaseUrl, inVirtualRoot)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.EnterpriseServices.Internal.ISoapServerVRoot.DeleteVirtualRootEx(System.String,System.String,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rootWebServer" Type="System.String" />
        <Parameter Name="inBaseUrl" Type="System.String" />
        <Parameter Name="inVirtualRoot" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="rootWebServer">Корневой веб-сервер. По умолчанию используется "IIS://localhost/W3SVC/1/ROOT".</param>
        <param name="inBaseUrl">Базовый URL-адрес, содержащий виртуальный корень.</param>
        <param name="inVirtualRoot">Имя виртуального корня.</param>
        <summary>Удаляет виртуальный корень. Реализован не полностью.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Функции для удаления виртуального корня пока недоступны.  
  
> [!CAUTION]
>  Этот метод возвращает, не удаляя виртуальный корневой каталог.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">Вызывающий код в цепочке вызовов не имеет необходимого разрешения на доступ к неуправляемому коду.</exception>
        <exception cref="T:System.PlatformNotSupportedException">Служебная программа SOAP недоступна.</exception>
        <exception cref="T:System.EnterpriseServices.ServicedComponentException">Вызов для получения системного каталога не выполнен.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">для возможности доступа к неуправляемому коду. Связанное перечисление:<see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualRootStatus">
      <MemberSignature Language="C#" Value="public void GetVirtualRootStatus (string RootWebServer, string inBaseUrl, string inVirtualRoot, out string Exists, out string SSL, out string WindowsAuth, out string Anonymous, out string HomePage, out string DiscoFile, out string PhysicalPath, out string BaseUrl, out string VirtualRoot);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetVirtualRootStatus(string RootWebServer, string inBaseUrl, string inVirtualRoot, [out] string&amp; Exists, [out] string&amp; SSL, [out] string&amp; WindowsAuth, [out] string&amp; Anonymous, [out] string&amp; HomePage, [out] string&amp; DiscoFile, [out] string&amp; PhysicalPath, [out] string&amp; BaseUrl, [out] string&amp; VirtualRoot) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.SoapServerVRoot.GetVirtualRootStatus(System.String,System.String,System.String,System.String@,System.String@,System.String@,System.String@,System.String@,System.String@,System.String@,System.String@,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetVirtualRootStatus (RootWebServer As String, inBaseUrl As String, inVirtualRoot As String, ByRef Exists As String, ByRef SSL As String, ByRef WindowsAuth As String, ByRef Anonymous As String, ByRef HomePage As String, ByRef DiscoFile As String, ByRef PhysicalPath As String, ByRef BaseUrl As String, ByRef VirtualRoot As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GetVirtualRootStatus(System::String ^ RootWebServer, System::String ^ inBaseUrl, System::String ^ inVirtualRoot, [Runtime::InteropServices::Out] System::String ^ % Exists, [Runtime::InteropServices::Out] System::String ^ % SSL, [Runtime::InteropServices::Out] System::String ^ % WindowsAuth, [Runtime::InteropServices::Out] System::String ^ % Anonymous, [Runtime::InteropServices::Out] System::String ^ % HomePage, [Runtime::InteropServices::Out] System::String ^ % DiscoFile, [Runtime::InteropServices::Out] System::String ^ % PhysicalPath, [Runtime::InteropServices::Out] System::String ^ % BaseUrl, [Runtime::InteropServices::Out] System::String ^ % VirtualRoot);" />
      <MemberSignature Language="F#" Value="abstract member GetVirtualRootStatus : string * string * string * string * string * string * string * string * string * string * string * string -&gt; unit&#xA;override this.GetVirtualRootStatus : string * string * string * string * string * string * string * string * string * string * string * string -&gt; unit" Usage="soapServerVRoot.GetVirtualRootStatus (RootWebServer, inBaseUrl, inVirtualRoot, Exists, SSL, WindowsAuth, Anonymous, HomePage, DiscoFile, PhysicalPath, BaseUrl, VirtualRoot)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.EnterpriseServices.Internal.ISoapServerVRoot.GetVirtualRootStatus(System.String,System.String,System.String,System.String@,System.String@,System.String@,System.String@,System.String@,System.String@,System.String@,System.String@,System.String@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="RootWebServer" Type="System.String" />
        <Parameter Name="inBaseUrl" Type="System.String" />
        <Parameter Name="inVirtualRoot" Type="System.String" />
        <Parameter Name="Exists" Type="System.String" RefType="out" />
        <Parameter Name="SSL" Type="System.String" RefType="out" />
        <Parameter Name="WindowsAuth" Type="System.String" RefType="out" />
        <Parameter Name="Anonymous" Type="System.String" RefType="out" />
        <Parameter Name="HomePage" Type="System.String" RefType="out" />
        <Parameter Name="DiscoFile" Type="System.String" RefType="out" />
        <Parameter Name="PhysicalPath" Type="System.String" RefType="out" />
        <Parameter Name="BaseUrl" Type="System.String" RefType="out" />
        <Parameter Name="VirtualRoot" Type="System.String" RefType="out" />
      </Parameters>
      <Docs>
        <param name="RootWebServer">Корневой веб-сервер. По умолчанию используется "IIS://localhost/W3SVC/1/ROOT".</param>
        <param name="inBaseUrl">Базовый URL-адрес, содержащий виртуальный корень.</param>
        <param name="inVirtualRoot">Имя виртуального корня.</param>
        <param name="Exists">Когда этот метод возвращает управление, данный параметр содержит <see langword="true" />, если виртуальный каталог существует, в противном случае — <see langword="false" />.</param>
        <param name="SSL">Когда этот метод возвращает управление, данный параметр содержит <see langword="true" />, если требуется SSL-шифрование, в противном случае — <see langword="false" />.</param>
        <param name="WindowsAuth">Когда этот метод возвращает управление, данный параметр содержит <see langword="true" />, если установлена проверка подлинности Windows, в противном случае — <see langword="false" />.</param>
        <param name="Anonymous">Когда этот метод возвращает управление, данный параметр содержит <see langword="true" />, если не установлена проверка подлинности (анонимный пользователь), в противном случае — <see langword="false" />.</param>
        <param name="HomePage">Когда этот метод возвращает управление, данный параметр содержит <see langword="true" />, если свойство <see langword="EnableDefaultDoc" /> виртуального корня установлено, в противном случае — <see langword="false" />.</param>
        <param name="DiscoFile">Когда этот метод возвращает управление, данный параметр содержит <see langword="true" />, если файл Default.disco существует, в противном случае — <see langword="false" />.</param>
        <param name="PhysicalPath">Когда этот метод возвращает управление, данный параметр содержит дисковый адрес каталога виртуального корня.</param>
        <param name="BaseUrl">Когда этот метод возвращает управление, данный параметр содержит базовый URL-адрес.</param>
        <param name="VirtualRoot">Когда этот метод возвращает управление, данный параметр содержит имя виртуального корня.</param>
        <summary>Возвращает состояние безопасности существующего виртуального корня SOAP.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
