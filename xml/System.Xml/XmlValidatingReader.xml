<Type Name="XmlValidatingReader" FullName="System.Xml.XmlValidatingReader">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b2799c74b5d9f360a02646bb795ab2a0debce9d9" /><Meta Name="ms.sourcegitcommit" Value="2767b5903996fbd7e2b81eda1114dfc9d0d9db63" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="05/02/2019" /><Meta Name="ms.locfileid" Value="64996579" /></Metadata><TypeSignature Language="C#" Value="public class XmlValidatingReader : System.Xml.XmlReader, System.Xml.IXmlLineInfo, System.Xml.IXmlNamespaceResolver" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlValidatingReader extends System.Xml.XmlReader implements class System.Xml.IXmlLineInfo, class System.Xml.IXmlNamespaceResolver" />
  <TypeSignature Language="DocId" Value="T:System.Xml.XmlValidatingReader" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlValidatingReader&#xA;Inherits XmlReader&#xA;Implements IXmlLineInfo, IXmlNamespaceResolver" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlValidatingReader : System::Xml::XmlReader, System::Xml::IXmlLineInfo, System::Xml::IXmlNamespaceResolver" />
  <TypeSignature Language="F#" Value="type XmlValidatingReader = class&#xA;    inherit XmlReader&#xA;    interface IXmlLineInfo&#xA;    interface IXmlNamespaceResolver" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Xml.XmlReader</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Xml.IXmlLineInfo</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Xml.IXmlNamespaceResolver</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
      <AttributeName>System.Obsolete("Use XmlReader created by XmlReader.Create() method using appropriate XmlReaderSettings instead. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netcore-3.0;netstandard-2.1">
      <AttributeName>System.Obsolete("Use XmlReader created by XmlReader.Create() method using appropriate XmlReaderSettings instead. https://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Представляет средство чтения, обеспечивающее проверку определения DTD, схемы XDR и языка определения схемы XML.  
  
Этот класс устарел. Начиная с .NET Framework версии 2.0, рекомендуется использовать класс <see cref="T:System.Xml.XmlReaderSettings" /> и метод <see cref="Overload:System.Xml.XmlReader.Create" /> для создания проверяющего средства чтения XML.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `XmlValidatingReader`<xref:System.Xml.XmlReader> реализует класс и обеспечивает поддержку проверки данных. Используйте свойство для проверки читателя с помощью файлов схемы, кэшированных <xref:System.Xml.Schema.XmlSchemaCollection>в. <xref:System.Xml.XmlValidatingReader.Schemas%2A> <xref:System.Xml.XmlValidatingReader.ValidationType%2A> Свойство определяет тип проверки, которую должно выполнять читатель. Присвоение свойству значения ValidationType. None создает модуль чтения без проверки.  
  
 <xref:System.Xml.XmlValidatingReader>вызывает исключение <xref:System.Xml.XmlException> on XML Parse Errors. После возникновения исключения состояние модуля чтения не может быть предсказуемым. Например, тип сообщаемого узла может отличаться от фактического типа узла текущего узла. <xref:System.Xml.XmlValidatingReader.ReadState%2A> Используйте свойство, чтобы проверить, находится ли модуль чтения в состоянии ошибки.  
  
> [!NOTE]
>  Класс является устаревшим в [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]. <xref:System.Xml.XmlValidatingReader> Проверяющий <xref:System.Xml.XmlReader> экземпляр можно создать с <xref:System.Xml.XmlReaderSettings> помощью класса и <xref:System.Xml.XmlReader.Create%2A> метода. Дополнительные сведения см. в подразделе "Примечания" на справочной странице <xref:System.Xml.XmlReader>.  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para>Этот класс имеет требование наследования. Для наследования <see langword="XmlValidatingReader" />требуется полное доверие.</para></block>
    <altmember cref="T:System.Xml.XmlReader" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see langword="XmlValidatingReader" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlValidatingReader (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlValidatingReader.#ctor(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (reader As XmlReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlValidatingReader(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="new System.Xml.XmlValidatingReader : System.Xml.XmlReader -&gt; System.Xml.XmlValidatingReader" Usage="new System.Xml.XmlValidatingReader reader" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader"><see langword="XmlReader" />, из которого при проверке данных выполняется чтение. Текущая реализация поддерживает только <see cref="T:System.Xml.XmlTextReader" />.</param>
        <summary>Инициализирует новый экземпляр класса <see langword="XmlValidatingReader" />, который служит для проверки содержимого, возвращаемого заданным <see cref="T:System.Xml.XmlReader" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Класс является устаревшим в [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]. <xref:System.Xml.XmlValidatingReader> Проверяющий <xref:System.Xml.XmlReader> экземпляр можно создать с <xref:System.Xml.XmlReaderSettings> помощью класса и <xref:System.Xml.XmlReader.Create%2A> метода. Дополнительные сведения см. в подразделе "Примечания" на справочной странице <xref:System.Xml.XmlReader>.  
  
 Все узлы, возвращенные из `XmlReader` заданного, также возвращаются из этого проверяющего модуля чтения, поэтому в процессе не происходит потери данных. Этот модуль чтения может добавлять новые узлы, не возвращенные из базового модуля чтения (например, атрибуты по умолчанию и дочерние элементы ссылки на сущность). Все свойства, заданные в `XmlTextReader` заданном параметре, также применяются к этому модулю проверки подлинности. Например, если в указанном модуле чтения было задано WhitespaceHandling. None, этот проверяющий читатель также игнорирует пробелы.  
  
 Если для проверки необходимы определения типа внешнего документа (DTD) или схемы, <xref:System.Xml.XmlValidatingReader.XmlResolver%2A> свойство <xref:System.Xml.XmlResolver> задает объект, используемый для разрешения внешних ресурсов.  
  
   
  
## Examples  
 В следующем примере выполняется проверка двух документов.  
  
 [!code-cpp[XmlValidatingReader.Cctor#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlValidatingReader.Cctor/CPP/valid_xsd2.cpp#1)]
 [!code-csharp[XmlValidatingReader.Cctor#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlValidatingReader.Cctor/CS/valid_xsd2.cs#1)]
 [!code-vb[XmlValidatingReader.Cctor#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlValidatingReader.Cctor/VB/valid_xsd2.vb#1)]  
  
 В образце используются следующие входные файлы:  
  
 `notValidXSD.xml`  
  
 [!code-xml[XmlValidatingReader.Cctor#2](~/samples/snippets/xml/VS_Snippets_Data/XmlValidatingReader.Cctor/XML/notvalidxsd.xml#2)]  
  
 `books.xsd`  
  
 [!code-xml[XmlValidatingReader.Cctor#3](~/samples/snippets/xml/VS_Snippets_Data/XmlValidatingReader.Cctor/XML/books.xsd#3)]  
  
 `inlineXSD.xml`  
  
 [!code-xml[XmlValidatingReader.Cctor#4](~/samples/snippets/xml/VS_Snippets_Data/XmlValidatingReader.Cctor/XML/inlinexsd.xml#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Указанное средство чтения не является <see langword="XmlTextReader" />.</exception>
        <altmember cref="T:System.Xml.XmlTextReader" />
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlValidatingReader (System.IO.Stream xmlFragment, System.Xml.XmlNodeType fragType, System.Xml.XmlParserContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream xmlFragment, valuetype System.Xml.XmlNodeType fragType, class System.Xml.XmlParserContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlValidatingReader.#ctor(System.IO.Stream,System.Xml.XmlNodeType,System.Xml.XmlParserContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (xmlFragment As Stream, fragType As XmlNodeType, context As XmlParserContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlValidatingReader(System::IO::Stream ^ xmlFragment, System::Xml::XmlNodeType fragType, System::Xml::XmlParserContext ^ context);" />
      <MemberSignature Language="F#" Value="new System.Xml.XmlValidatingReader : System.IO.Stream * System.Xml.XmlNodeType * System.Xml.XmlParserContext -&gt; System.Xml.XmlValidatingReader" Usage="new System.Xml.XmlValidatingReader (xmlFragment, fragType, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xmlFragment" Type="System.IO.Stream" />
        <Parameter Name="fragType" Type="System.Xml.XmlNodeType" />
        <Parameter Name="context" Type="System.Xml.XmlParserContext" />
      </Parameters>
      <Docs>
        <param name="xmlFragment">Поток, содержащий анализируемый фрагмент XML.</param>
        <param name="fragType">Тип <see cref="T:System.Xml.XmlNodeType" /> фрагмента XML. Определяет содержимое фрагмента (см. таблицу ниже).</param>
        <param name="context"><see cref="T:System.Xml.XmlParserContext" />, в котором анализируется фрагмент XML. Это включает в себя используемый класс <see cref="T:System.Xml.XmlNameTable" />, кодировку, область пространства имен, текущий <see langword="xml:lang" /> и область <see langword="xml:space" />.</param>
        <summary>Инициализирует новый экземпляр класса <see langword="XmlValidatingReader" /> с использованием указанных значений.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Класс является устаревшим в [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]. <xref:System.Xml.XmlValidatingReader> Проверяющий <xref:System.Xml.XmlReader> экземпляр можно создать с <xref:System.Xml.XmlReaderSettings> помощью класса и <xref:System.Xml.XmlReader.Create%2A> метода. Дополнительные сведения см. в подразделе "Примечания" на справочной странице <xref:System.Xml.XmlReader>.  
  
 Этот конструктор анализирует заданную строку как фрагмент XML. Если фрагмент XML является элементом или атрибутом, можно обойти правила корневого уровня для XML-документов с правильным форматом.  
  
 В следующей таблице перечислены допустимые значения `fragType` для и сведения о том, как средство чтения анализирует каждый из разных типов узлов.  
  
|Тип узла XML|Фрагмент может содержать|  
|-----------------|--------------------------|  
|Элемент|Любое допустимое содержимое элемента (например, любое сочетание элементов, комментариев, инструкций по обработке, CDATA, текста и ссылок на сущности).|  
|Атрибут|Значение атрибута (часть в кавычках).|  
|Document|Содержимое всего XML-документа; Это принуждает правила уровня документа.|  
  
 Для определения кодировки потока средство чтения использует следующие шаги:  
  
1.  <xref:System.Xml.XmlParserContext.Encoding%2A?displayProperty=nameWithType> Проверяет свойство, чтобы определить кодировку.  
  
2.  Если свойство имеет `null`значение, средство чтения проверяет метку порядка следования байтов в начале потока. `Encoding`  
  
3.  Если свойство имеет `null`значение, а метка порядка байтов не найдена, читатель предполагает, что поток кодируется в кодировке UTF-8. `Encoding`  
  
 Если этот модуль чтения будет проверяться с помощью определения типа документа (DTD) ( <xref:System.Xml.XmlValidatingReader.ValidationType%2A> то есть для параметра задано значение ValidationType. DTD или ValidationType. Auto), то `XmlParserContext` указанный в конструкторе должен предоставить все необходимые сведения DocumentType.  
  
> [!NOTE]
>  Невозможно проверить фрагмент с помощью DTD. По определению DTD требуется загрузить весь документ для проверки.  
  
 Если этот модуль чтения будет проверяться с помощью схем XML-Data Reduced (XDR) или XSD, используйте <xref:System.Xml.XmlValidatingReader.Schemas%2A> свойство, чтобы указать объект <xref:System.Xml.Schema.XmlSchemaCollection> , содержащий схемы `XmlParserContext` (т. е. не нужно указывать Сведения о DocumentType).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException"><paramref name="fragType" /> не относится к одному из разрешенных типов узлов, перечисленных в таблице ниже.</exception>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlValidatingReader (string xmlFragment, System.Xml.XmlNodeType fragType, System.Xml.XmlParserContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string xmlFragment, valuetype System.Xml.XmlNodeType fragType, class System.Xml.XmlParserContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlValidatingReader.#ctor(System.String,System.Xml.XmlNodeType,System.Xml.XmlParserContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (xmlFragment As String, fragType As XmlNodeType, context As XmlParserContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlValidatingReader(System::String ^ xmlFragment, System::Xml::XmlNodeType fragType, System::Xml::XmlParserContext ^ context);" />
      <MemberSignature Language="F#" Value="new System.Xml.XmlValidatingReader : string * System.Xml.XmlNodeType * System.Xml.XmlParserContext -&gt; System.Xml.XmlValidatingReader" Usage="new System.Xml.XmlValidatingReader (xmlFragment, fragType, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xmlFragment" Type="System.String" />
        <Parameter Name="fragType" Type="System.Xml.XmlNodeType" />
        <Parameter Name="context" Type="System.Xml.XmlParserContext" />
      </Parameters>
      <Docs>
        <param name="xmlFragment">Строка, содержащая анализируемый фрагмент XML.</param>
        <param name="fragType">Тип <see cref="T:System.Xml.XmlNodeType" /> фрагмента XML. Также определяет содержимое строки фрагмента (см. таблицу ниже).</param>
        <param name="context"><see cref="T:System.Xml.XmlParserContext" />, в котором анализируется фрагмент XML. Это включает в себя используемый класс <see cref="T:System.Xml.NameTable" />, кодировку, область пространства имен, текущий xml:lang и область xml:space.</param>
        <summary>Инициализирует новый экземпляр класса <see langword="XmlValidatingReader" /> с использованием указанных значений.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Класс является устаревшим в [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]. <xref:System.Xml.XmlValidatingReader> Проверяющий <xref:System.Xml.XmlReader> экземпляр можно создать с <xref:System.Xml.XmlReaderSettings> помощью класса и <xref:System.Xml.XmlReader.Create%2A> метода. Дополнительные сведения см. в подразделе "Примечания" на справочной странице <xref:System.Xml.XmlReader>.  
  
 Этот конструктор анализирует заданную строку как фрагмент XML. Если фрагмент XML является элементом или атрибутом, можно обойти правила корневого уровня для XML-документов с правильным форматом. Этот конструктор может выполнять обработку строк, <xref:System.Xml.XmlReader.ReadInnerXml%2A>возвращаемых из.  
  
 В следующей таблице перечислены допустимые значения `fragType` для и сведения о том, как средство чтения анализирует каждый из разных типов узлов.  
  
|Тип узла XML|Фрагмент может содержать|  
|-----------------|--------------------------|  
|Элемент|Любое допустимое содержимое элемента (например, любое сочетание элементов, комментариев, инструкций по обработке, CDATA, текста и ссылок на сущности).|  
|Атрибут|Значение атрибута (часть в кавычках).|  
|Document|Содержимое всего XML-документа; Это принуждает правила уровня документа.|  
  
 Если этот модуль чтения будет проверяться с помощью определения типа документа (DTD) ( <xref:System.Xml.XmlValidatingReader.ValidationType%2A> то есть для параметра задано значение ValidationType. DTD или ValidationType. Auto), то `XmlParserContext` указанный в конструкторе должен предоставить все необходимые сведения о DocumentType.  
  
> [!NOTE]
>  Невозможно проверить фрагмент с помощью DTD. По определению DTD требуется загрузить весь документ для проверки.  
  
 Если этот модуль чтения будет проверяться с помощью схем XML-Data Reduced (XDR) или XSD, используйте <xref:System.Xml.XmlValidatingReader.Schemas%2A> свойство, чтобы указать объект <xref:System.Xml.Schema.XmlSchemaCollection> , содержащий схемы ( `XmlParserContext` не нужно указывать DocumentType. сведения).  
  
   
  
## Examples  
 В следующем примере считывается фрагмент XML-кода. Он использует `XmlParserContext` и его <xref:System.Xml.XmlNamespaceManager> для управления сопоставлением пространств имен.  
  
 [!code-csharp[Classic WebData XmlParserContext.XmlParserContext Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlParserContext.XmlParserContext Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlParserContext.XmlParserContext Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlParserContext.XmlParserContext Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException"><paramref name="fragType" /> не относится к одному из разрешенных типов узлов, перечисленных в таблице ниже.</exception>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="AttributeCount">
      <MemberSignature Language="C#" Value="public override int AttributeCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AttributeCount" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.AttributeCount" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property AttributeCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int AttributeCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.AttributeCount : int" Usage="System.Xml.XmlValidatingReader.AttributeCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает количество атрибутов текущего узла.</summary>
        <value>Количество атрибутов текущего узла. в том числе атрибутов, используемых по умолчанию.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Класс является устаревшим в [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]. <xref:System.Xml.XmlValidatingReader> Проверяющий <xref:System.Xml.XmlReader> экземпляр можно создать с <xref:System.Xml.XmlReaderSettings> помощью класса и <xref:System.Xml.XmlReader.Create%2A> метода. Дополнительные сведения см. в подразделе "Примечания" на справочной странице <xref:System.Xml.XmlReader>.  
  
 Это свойство относится только к `Element`узлам `DocumentType`, и `XmlDeclaration` . (Другие типы узлов не имеют атрибутов.)  
  
   
  
## Examples  
 В следующем примере считываются все элементы корневого узла.  
  
 [!code-cpp[Classic WebData XmlValidatingReader.AttributeCount Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlValidatingReader.AttributeCount Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlValidatingReader.AttributeCount Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlValidatingReader.AttributeCount Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlValidatingReader.AttributeCount Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlValidatingReader.AttributeCount Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="BaseURI">
      <MemberSignature Language="C#" Value="public override string BaseURI { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BaseURI" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.BaseURI" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property BaseURI As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ BaseURI { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BaseURI : string" Usage="System.Xml.XmlValidatingReader.BaseURI" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает базовый URI текущего узла.</summary>
        <value>Базовый URI текущего узла.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Класс является устаревшим в [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]. <xref:System.Xml.XmlValidatingReader> Проверяющий <xref:System.Xml.XmlReader> экземпляр можно создать с <xref:System.Xml.XmlReaderSettings> помощью класса и <xref:System.Xml.XmlReader.Create%2A> метода. Дополнительные сведения см. в подразделе "Примечания" на справочной странице <xref:System.Xml.XmlReader>.  
  
 Сетевой XML-документ состоит из фрагментов данных, агрегированных с помощью различных стандартных механизмов включения консорциум W3C (W3C) и, следовательно, содержит узлы, поступающие из разных мест. Примерами этого являются сущности определения типа документа (DTD), но это не ограничено DTD. Базовый URI указывает, откуда получены эти узлы. Если для возвращаемых узлов не существует базового URI (например, они были проанализированы из строки в памяти), возвращается String. Empty.  
  
   
  
## Examples  
 В следующем примере анализируется файл и отображается базовый URI каждого узла.  
  
 [!code-cpp[Classic WebData XmlValidatingReader.BaseURI Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlValidatingReader.BaseURI Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlValidatingReader.BaseURI Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlValidatingReader.BaseURI Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlValidatingReader.BaseURI Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlValidatingReader.BaseURI Example/VB/source.vb#1)]  
  
 В этом примере в качестве входных данных используется файл `uri.xml`.  
  
 [!code-xml[Classic WebData XmlValidatingReader.BaseURI Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlValidatingReader.BaseURI Example/XML/source.xml#2)]  
  
 Файл содержит XML-текст `<style>hardcover</style>`. `style.xml`  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="CanReadBinaryContent">
      <MemberSignature Language="C#" Value="public override bool CanReadBinaryContent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanReadBinaryContent" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.CanReadBinaryContent" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanReadBinaryContent As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanReadBinaryContent { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanReadBinaryContent : bool" Usage="System.Xml.XmlValidatingReader.CanReadBinaryContent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает значение, указывающее, реализует ли объект <see cref="T:System.Xml.XmlValidatingReader" /> методы чтения двоичного содержимого.</summary>
        <value>Значение <see langword="true" />, если реализуются методы чтения двоичного содержимого; в противном случае — <see langword="false" />. Класс <see cref="T:System.Xml.XmlValidatingReader" /> возвращает <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Класс является устаревшим в [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]. <xref:System.Xml.XmlValidatingReader> Проверяющий <xref:System.Xml.XmlReader> экземпляр можно создать с <xref:System.Xml.XmlReaderSettings> помощью класса и <xref:System.Xml.XmlReader.Create%2A> метода. Дополнительные сведения см. в подразделе "Примечания" на справочной странице <xref:System.Xml.XmlReader>. 
  
 Методы чтения двоичного содержимого включают в <xref:System.Xml.XmlValidatingReader.ReadContentAsBase64%2A>себя <xref:System.Xml.XmlValidatingReader.ReadContentAsBinHex%2A>методы <xref:System.Xml.XmlValidatingReader.ReadElementContentAsBase64%2A>,, <xref:System.Xml.XmlValidatingReader.ReadElementContentAsBinHex%2A> и.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="CanResolveEntity">
      <MemberSignature Language="C#" Value="public override bool CanResolveEntity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanResolveEntity" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.CanResolveEntity" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanResolveEntity As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanResolveEntity { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanResolveEntity : bool" Usage="System.Xml.XmlValidatingReader.CanResolveEntity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает значение, определяющее, способно ли данное средство чтения выполнять синтаксический анализ и разрешение сущностей.</summary>
        <value>Значение <see langword="true" />, если средство чтения позволяет анализировать и разрешать сущности; в противном случае — <see langword="false" />. Параметр <see langword="XmlValidatingReader" /> всегда возвращает значение <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Класс является устаревшим в [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]. <xref:System.Xml.XmlValidatingReader> Проверяющий <xref:System.Xml.XmlReader> экземпляр можно создать с <xref:System.Xml.XmlReaderSettings> помощью класса и <xref:System.Xml.XmlReader.Create%2A> метода. Дополнительные сведения см. в подразделе "Примечания" на справочной странице <xref:System.Xml.XmlReader>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlValidatingReader.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberSignature Language="F#" Value="override this.Close : unit -&gt; unit" Usage="xmlValidatingReader.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Изменяет значение <see cref="P:System.Xml.XmlReader.ReadState" /> на Closed.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Класс является устаревшим в [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]. <xref:System.Xml.XmlValidatingReader> Проверяющий <xref:System.Xml.XmlReader> экземпляр можно создать с <xref:System.Xml.XmlReaderSettings> помощью класса и <xref:System.Xml.XmlReader.Create%2A> метода. Дополнительные сведения см. в подразделе "Примечания" на справочной странице <xref:System.Xml.XmlReader>.  
  
 Этот метод также освобождает все ресурсы, удерживаемые при чтении. Если этот модуль чтения был создан с помощью <xref:System.Xml.XmlTextReader>, этот метод также вызывает `Close` базовый модуль чтения. Если этот модуль чтения был создан с помощью потока, этот метод также вызывает `Close` базовый поток.  
  
 Если `Close` метод уже вызван, никакие действия не выполняются.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="Depth">
      <MemberSignature Language="C#" Value="public override int Depth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Depth" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.Depth" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Depth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Depth { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Depth : int" Usage="System.Xml.XmlValidatingReader.Depth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает глубину текущего узла в XML-документе.</summary>
        <value>Глубина текущего узла в XML-документе.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Класс является устаревшим в [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]. <xref:System.Xml.XmlValidatingReader> Проверяющий <xref:System.Xml.XmlReader> экземпляр можно создать с <xref:System.Xml.XmlReaderSettings> помощью класса и <xref:System.Xml.XmlReader.Create%2A> метода. Дополнительные сведения см. в подразделе "Примечания" на справочной странице <xref:System.Xml.XmlReader>.  
  
   
  
## Examples  
 В следующем примере отображаются каждый узел, включая его глубину, номер строки и расположение строки.  
  
 [!code-cpp[IXmlLineInfo#1](~/samples/snippets/cpp/VS_Snippets_Data/IXmlLineInfo/CPP/lineinfo.cpp#1)]
 [!code-csharp[IXmlLineInfo#1](~/samples/snippets/csharp/VS_Snippets_Data/IXmlLineInfo/CS/lineinfo.cs#1)]
 [!code-vb[IXmlLineInfo#1](~/samples/snippets/visualbasic/VS_Snippets_Data/IXmlLineInfo/VB/lineinfo.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.IXmlLineInfo" />
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="Encoding">
      <MemberSignature Language="C#" Value="public System.Text.Encoding Encoding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding Encoding" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.Encoding" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Encoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Encoding ^ Encoding { System::Text::Encoding ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Encoding : System.Text.Encoding" Usage="System.Xml.XmlValidatingReader.Encoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает атрибут кодировки для документа.</summary>
        <value>Значение кодировки. Если атрибут кодировки и метка порядка байтов отсутствуют, по умолчанию используется кодировка UTF-8.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Класс является устаревшим в [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]. <xref:System.Xml.XmlValidatingReader> Проверяющий <xref:System.Xml.XmlReader> экземпляр можно создать с <xref:System.Xml.XmlReaderSettings> помощью класса и <xref:System.Xml.XmlReader.Create%2A> метода. Дополнительные сведения см. в подразделе "Примечания" на справочной странице <xref:System.Xml.XmlReader>.  
  
 При считывании любой внешней ссылки (например, при расширении сущности в файле определения типа документа (DTD) или чтении файла схемы) свойству Encoding присваивается значение Encoding внешней ссылки. Если кодировка не указана во внешней ссылке и отсутствует метка порядка следования байтов, по умолчанию используется UTF-8.  
  
 Поддерживаются все стандарты кодирования, поддерживаемые базовой операционной системой.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="EntityHandling">
      <MemberSignature Language="C#" Value="public System.Xml.EntityHandling EntityHandling { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.EntityHandling EntityHandling" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.EntityHandling" />
      <MemberSignature Language="VB.NET" Value="Public Property EntityHandling As EntityHandling" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::EntityHandling EntityHandling { System::Xml::EntityHandling get(); void set(System::Xml::EntityHandling value); };" />
      <MemberSignature Language="F#" Value="member this.EntityHandling : System.Xml.EntityHandling with get, set" Usage="System.Xml.XmlValidatingReader.EntityHandling" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.EntityHandling</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, определяющее способ обработки сущностей средством чтения.</summary>
        <value>Одно из значений перечисления <see cref="T:System.Xml.EntityHandling" />. Если <see langword="EntityHandling" /> не задан, по умолчанию для него используется значение EntityHandling.ExpandEntities.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Класс является устаревшим в [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]. <xref:System.Xml.XmlValidatingReader> Проверяющий <xref:System.Xml.XmlReader> экземпляр можно создать с <xref:System.Xml.XmlReaderSettings> помощью класса и <xref:System.Xml.XmlReader.Create%2A> метода. Дополнительные сведения см. в подразделе "Примечания" на справочной странице <xref:System.Xml.XmlReader>.  
  
 Это свойство может быть изменено и вступает в силу после <xref:System.Xml.XmlValidatingReader.Read%2A> следующего вызова.  
  
 Если `EntityHandling` параметр имеет `ExpandCharEntities`значение, значения атрибутов будут частично нормализованы. Средство чтения нормализует каждый отдельный текстовый узел независимо от содержимого соседних узлов ссылок на сущности.  
  
 Чтобы продемонстрировать разницу между режимами обработки сущностей, рассмотрим следующий код XML:  
  
```xml  
<!DOCTYPE doc [<!ENTITY num "123">]>  
 <doc> &#65; &num; </doc>  
```  
  
 Если `EntityHandling` для`ExpandEntities` параметра задано значение «doc», узел элемента содержит один текстовый узел с развернутым текстом сущности:  
  
|Глубина|NodeType|name|Значение|  
|-----------|--------------|----------|-----------|  
|1|Text||A 123|  
  
 Если `EntityHandling` <xref:System.Xml.XmlTextReader.WhitespaceHandling%2A> для `ExpandCharEntities`параметра задано значение, а для параметра задано значение существенный или полный, элемент doc расширяет сущность Character и возвращает общую сущность в качестве узла:  
  
|Глубина|NodeType|name|Значение|  
|-----------|--------------|----------|-----------|  
|1|Text||А|  
|1|EntityReference|num||  
|1|SignificantWhitespace|||  
  
   
  
## Examples  
 В следующем примере используется `ResolveEntity` метод для расширения общей сущности.  
  
 [!code-cpp[Classic WebData XmlValidatingReader.ResolveEntity Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlValidatingReader.ResolveEntity Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlValidatingReader.ResolveEntity Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlValidatingReader.ResolveEntity Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlValidatingReader.ResolveEntity Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlValidatingReader.ResolveEntity Example/VB/source.vb#1)]  
  
 В этом примере в качестве входных данных используется файл `book1.xml`.  
  
 [!code-xml[Classic WebData XmlValidatingReader.ResolveEntity Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlValidatingReader.ResolveEntity Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Указано недопустимое значение.</exception>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="EOF">
      <MemberSignature Language="C#" Value="public override bool EOF { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EOF" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.EOF" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property EOF As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EOF { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.EOF : bool" Usage="System.Xml.XmlValidatingReader.EOF" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает значение, определяющее, позиционировано ли средство чтения в конец потока.</summary>
        <value>Значение <see langword="true" />, если средство чтения установлено в конец потока; в противном случае — <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Класс является устаревшим в [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]. <xref:System.Xml.XmlValidatingReader> Проверяющий <xref:System.Xml.XmlReader> экземпляр можно создать с <xref:System.Xml.XmlReaderSettings> помощью класса и <xref:System.Xml.XmlReader.Create%2A> метода. Дополнительные сведения см. в подразделе "Примечания" на справочной странице <xref:System.Xml.XmlReader>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetAttribute">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Возвращает значение атрибута.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetAttribute">
      <MemberSignature Language="C#" Value="public override string GetAttribute (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetAttribute(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlValidatingReader.GetAttribute(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetAttribute (i As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetAttribute(int i);" />
      <MemberSignature Language="F#" Value="override this.GetAttribute : int -&gt; string" Usage="xmlValidatingReader.GetAttribute i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">Индекс атрибута. Индексация начинается с нуля. (Индекс первого атрибута равен нулю.)</param>
        <summary>Возвращает значение атрибута по заданному индексу.</summary>
        <returns>Значение указанного атрибута.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод не изменяет позицию средства чтения.  
  
> [!NOTE]
>  Класс является устаревшим в [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]. <xref:System.Xml.XmlValidatingReader> Проверяющий <xref:System.Xml.XmlReader> экземпляр можно создать с <xref:System.Xml.XmlReaderSettings> помощью класса и <xref:System.Xml.XmlReader.Create%2A> метода. Дополнительные сведения см. в подразделе "Примечания" на справочной странице <xref:System.Xml.XmlReader>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Параметр <paramref name="i" /> меньше 0 или больше или равен <see cref="P:System.Xml.XmlValidatingReader.AttributeCount" />.</exception>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="GetAttribute">
      <MemberSignature Language="C#" Value="public override string GetAttribute (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetAttribute(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlValidatingReader.GetAttribute(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetAttribute (name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetAttribute(System::String ^ name);" />
      <MemberSignature Language="F#" Value="override this.GetAttribute : string -&gt; string" Usage="xmlValidatingReader.GetAttribute name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Полное имя атрибута.</param>
        <summary>Возвращает значение атрибута с указанным именем.</summary>
        <returns>Значение указанного атрибута. Если атрибут не найден, возвращается значение <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Класс является устаревшим в [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]. <xref:System.Xml.XmlValidatingReader> Проверяющий <xref:System.Xml.XmlReader> экземпляр можно создать с <xref:System.Xml.XmlReaderSettings> помощью класса и <xref:System.Xml.XmlReader.Create%2A> метода. Дополнительные сведения см. в подразделе "Примечания" на справочной странице <xref:System.Xml.XmlReader>.  
  
 Этот метод не изменяет позицию средства чтения.  
  
 Если средство чтения находится на `DocumentType` узле, этот метод можно использовать для получения открытых и системных литералов, например`reader.GetAttribute("PUBLIC")`  
  
   
  
## Examples  
 В следующем примере возвращается значение атрибута ISBN.  
  
 [!code-cpp[Classic WebData XmlValidatingReader.GetAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlValidatingReader.GetAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlValidatingReader.GetAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlValidatingReader.GetAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlValidatingReader.GetAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlValidatingReader.GetAttribute Example/VB/source.vb#1)]  
  
 В этом примере в качестве входных данных используется файл `attrs.xml`.  
  
 [!code-xml[Classic WebData XmlValidatingReader.GetAttribute Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlValidatingReader.GetAttribute Example/XML/attrs.xml#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="GetAttribute">
      <MemberSignature Language="C#" Value="public override string GetAttribute (string localName, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetAttribute(string localName, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlValidatingReader.GetAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetAttribute (localName As String, namespaceURI As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetAttribute(System::String ^ localName, System::String ^ namespaceURI);" />
      <MemberSignature Language="F#" Value="override this.GetAttribute : string * string -&gt; string" Usage="xmlValidatingReader.GetAttribute (localName, namespaceURI)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName">Локальное имя атрибута.</param>
        <param name="namespaceURI">Универсальный код ресурса (URI) пространства имен атрибута.</param>
        <summary>Возвращает значение атрибута с заданным локальным именем и URI пространства имен.</summary>
        <returns>Значение указанного атрибута. Если атрибут не найден, возвращается значение <see langword="null" />. Этот метод не изменяет позицию средства чтения.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Класс является устаревшим в [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]. <xref:System.Xml.XmlValidatingReader> Проверяющий <xref:System.Xml.XmlReader> экземпляр можно создать с <xref:System.Xml.XmlReaderSettings> помощью класса и <xref:System.Xml.XmlReader.Create%2A> метода. Дополнительные сведения см. в подразделе "Примечания" на справочной странице <xref:System.Xml.XmlReader>.  
  
 Следующий XML-код содержит атрибут в определенном пространстве имен:  
  
```xml  
<test xmlns:dt="urn:datatypes" dt:type="int"/>  
```  
  
 Можно найти `dt:type` атрибут, используя один аргумент (префикс и локальное имя) или два аргумента (локальное имя и URI пространства имен):  
  
```csharp  
String dt = reader.GetAttribute("dt:type");  
String dt2 = reader.GetAttribute("type","urn:datatypes");  
```  
  
 Чтобы найти `xmlns:dt` атрибут, используйте один из следующих аргументов:  
  
```csharp  
String dt3 = reader.GetAttribute("xmlns:dt");  
String dt4 = reader.GetAttribute("dt",http://www.w3.org/2000/xmlns/);  
```  
  
 Эти сведения также можно получить с помощью <xref:System.Xml.XmlValidatingReader.Prefix%2A> свойства.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="HasLineInfo">
      <MemberSignature Language="C#" Value="public bool HasLineInfo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool HasLineInfo() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlValidatingReader.HasLineInfo" />
      <MemberSignature Language="VB.NET" Value="Public Function HasLineInfo () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool HasLineInfo();" />
      <MemberSignature Language="F#" Value="abstract member HasLineInfo : unit -&gt; bool&#xA;override this.HasLineInfo : unit -&gt; bool" Usage="xmlValidatingReader.HasLineInfo " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Xml.IXmlLineInfo.HasLineInfo</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает значение, определяющее возможность возвращения классом сведений о строке.</summary>
        <returns>Значение <see langword="true" />, если класс может возвратить сведения о строке, в противном случае — <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Класс является устаревшим в [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]. <xref:System.Xml.XmlValidatingReader> Проверяющий <xref:System.Xml.XmlReader> экземпляр можно создать с <xref:System.Xml.XmlReaderSettings> помощью класса и <xref:System.Xml.XmlReader.Create%2A> метода. Дополнительные сведения см. в подразделе "Примечания" на справочной странице <xref:System.Xml.XmlReader>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="HasValue">
      <MemberSignature Language="C#" Value="public override bool HasValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasValue" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.HasValue" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property HasValue As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool HasValue { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasValue : bool" Usage="System.Xml.XmlValidatingReader.HasValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает значение, определяющие наличие у текущего узла свойства <see cref="P:System.Xml.XmlValidatingReader.Value" />, значение которого отличается от String.Empty.</summary>
        <value>Значение <see langword="true" />, если узел, на котором расположено средство чтения, может иметь значение <see langword="Value" />; в противном случае — <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Класс является устаревшим в [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]. <xref:System.Xml.XmlValidatingReader> Проверяющий <xref:System.Xml.XmlReader> экземпляр можно создать с <xref:System.Xml.XmlReaderSettings> помощью класса и <xref:System.Xml.XmlReader.Create%2A> метода. Дополнительные сведения см. в подразделе "Примечания" на справочной странице <xref:System.Xml.XmlReader>.  
  
 В следующей таблице представлен список возвращаемых типов узлов со значениями.  
  
|Тип узла|Значение|  
|---------------|-----------|  
|`Attribute`|Значение атрибута.|  
|`CDATA`|Содержимое раздела CDATA.|  
|`Comment`|Содержимое комментария.|  
|`DocumentType`|Внутреннее подмножество.|  
|`ProcessingInstruction`|Все содержимое, за исключением цели.|  
|`SignificantWhitespace`|Пустое пространство в разметке модели со смешанным содержимым.|  
|`Text`|Содержимое текстового узла.|  
|`Whitespace`|Пробелы между разметкой.|  
|`XmlDeclaration`|Содержимое декларации.|  
  
   
  
## Examples  
 Следующий пример считывает XML-данные с различными типами данных и отображает каждый из узлов.  
  
 [!code-cpp[Classic WebData XmlValidatingReader.HasValue Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlValidatingReader.HasValue Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlValidatingReader.HasValue Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlValidatingReader.HasValue Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlValidatingReader.HasValue Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlValidatingReader.HasValue Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="IsDefault">
      <MemberSignature Language="C#" Value="public override bool IsDefault { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDefault" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.IsDefault" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsDefault As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsDefault { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDefault : bool" Usage="System.Xml.XmlValidatingReader.IsDefault" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает значение, определяющее, является ли текущий узел атрибутом, созданным из значения по умолчанию, определенного в DTD или схеме.</summary>
        <value>Значение <see langword="true" />, если текущий узел является атрибутом, значение которого было создано из значения по умолчанию, определенного в DTD или схеме; значение <see langword="false" />, если значение атрибута было задано явно.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это свойство применяется только к узлу атрибута.  
  
> [!NOTE]
>  Класс является устаревшим в [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]. <xref:System.Xml.XmlValidatingReader> Проверяющий <xref:System.Xml.XmlReader> экземпляр можно создать с <xref:System.Xml.XmlReaderSettings> помощью класса и <xref:System.Xml.XmlReader.Create%2A> метода. Дополнительные сведения см. в подразделе "Примечания" на справочной странице <xref:System.Xml.XmlReader>.  
  
   
  
## Examples  
 В следующем примере отображаются все узлы атрибутов в корневом элементе.  
  
 [!code-cpp[XmlValidatingReader.IsDefault#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlValidatingReader.IsDefault/CPP/readdefattr.cpp#1)]
 [!code-csharp[XmlValidatingReader.IsDefault#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlValidatingReader.IsDefault/CS/readdefattr.cs#1)]
 [!code-vb[XmlValidatingReader.IsDefault#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlValidatingReader.IsDefault/VB/readdefattr.vb#1)]  
  
 В этом примере в качестве входных данных используются следующие файлы.  
  
 `book4.xml`  
  
 [!code-xml[XmlValidatingReader.IsDefault#2](~/samples/snippets/xml/VS_Snippets_Data/XmlValidatingReader.IsDefault/XML/book4.xml#2)]  
  
 `book.dtd`  
  
 [!code-xml[XmlValidatingReader.IsDefault#3](~/samples/snippets/xml/VS_Snippets_Data/XmlValidatingReader.IsDefault/XML/book.dtd#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="IsEmptyElement">
      <MemberSignature Language="C#" Value="public override bool IsEmptyElement { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEmptyElement" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.IsEmptyElement" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsEmptyElement As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsEmptyElement { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEmptyElement : bool" Usage="System.Xml.XmlValidatingReader.IsEmptyElement" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает значение, определяющее, является ли текущий узел пустым элементом (например, <c>&lt;MyElement/&gt;</c>).</summary>
        <value><see langword="true" />значение, если текущий узел является элементом (<see cref="P:System.Xml.XmlValidatingReader.NodeType" /> <see langword="XmlNodeType.Element" />равным), который <c>/ &gt;</c> <see langword="false" />заканчивается на; в противном случае —.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Класс является устаревшим в [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]. <xref:System.Xml.XmlValidatingReader> Проверяющий <xref:System.Xml.XmlReader> экземпляр можно создать с <xref:System.Xml.XmlReaderSettings> помощью класса и <xref:System.Xml.XmlReader.Create%2A> метода. Дополнительные сведения см. в подразделе "Примечания" на справочной странице <xref:System.Xml.XmlReader>.  
  
 Это свойство позволяет определить разницу между:  
  
 `<item num="123"/>`(`IsEmptyElement` имеет`true`).  
  
 `<item num="123">`(`IsEmptyElement` имеет`false`, хотя содержимое элемента пусто).  
  
 Для пустых элементов соответствующий `EndElement` узел не создается.  
  
 Если содержимое по умолчанию было добавлено к элементу из-за проверки `IsEmptyElement` схемы, `true`по-прежнему возвращает. Он не влияет на то, имеет ли элемент значение по умолчанию. Иными словами, просто `IsEmptyElement` сообщает, содержит ли элемент в исходном документе тег конечного элемента.  
  
   
  
## Examples  
 В следующем примере выводится текстовое содержимое каждого элемента.  
  
 [!code-cpp[Classic WebData XmlValidatingReader.IsEmptyElement Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlValidatingReader.IsEmptyElement Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlValidatingReader.IsEmptyElement Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlValidatingReader.IsEmptyElement Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlValidatingReader.IsEmptyElement Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlValidatingReader.IsEmptyElement Example/VB/source.vb#1)]  
  
 В этом примере в качестве входных данных используется файл `elems.xml`.  
  
 [!code-xml[Classic WebData XmlValidatingReader.IsEmptyElement Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlValidatingReader.IsEmptyElement Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public override string this[int i] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overrides ReadOnly Property Item(i As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ default[int] { System::String ^ get(int i); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : string" Usage="System.Xml.XmlValidatingReader.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" Index="0" FrameworkAlternate="netframework-1.1" />
      </Parameters>
      <Docs>
        <param name="i">Индекс атрибута.</param>
        <summary>Возвращает значение атрибута по заданному индексу.</summary>
        <value>Значение указанного атрибута.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public override string this[string name] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overrides ReadOnly Property Item(name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ default[System::String ^] { System::String ^ get(System::String ^ name); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : string" Usage="System.Xml.XmlValidatingReader.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="netframework-1.1" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public override string this[string name, string namespaceURI] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Item(string, string)" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.Item(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overrides ReadOnly Property Item(name As String, namespaceURI As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ default[System::String ^, System::String ^] { System::String ^ get(System::String ^ name, System::String ^ namespaceURI); };" />
      <MemberSignature Language="F#" Value="member this.Item(string * string) : string" Usage="System.Xml.XmlValidatingReader.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="netframework-1.1" />
        <Parameter Name="namespaceURI" Type="System.String" Index="1" FrameworkAlternate="netframework-1.1" />
      </Parameters>
      <Docs>
        <param name="name">Локальное имя атрибута.</param>
        <param name="namespaceURI">Универсальный код ресурса (URI) пространства имен атрибута.</param>
        <summary>Возвращает значение атрибута с указанным локальным именем и универсальным кодом ресурса (URI) пространства имен.</summary>
        <value>Значение указанного атрибута. Если атрибут не найден, функция возвращает значение <see langword="null" />.</value>
        <remarks>Это свойство не перемещает средство чтения.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LineNumber">
      <MemberSignature Language="C#" Value="public int LineNumber { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LineNumber" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.LineNumber" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LineNumber As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LineNumber { int get(); };" />
      <MemberSignature Language="F#" Value="member this.LineNumber : int" Usage="System.Xml.XmlValidatingReader.LineNumber" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Xml.IXmlLineInfo.LineNumber</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает номер текущей строки.</summary>
        <value>Текущий номер строки. Начальным значением свойства является 1.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Класс является устаревшим в [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]. <xref:System.Xml.XmlValidatingReader> Проверяющий <xref:System.Xml.XmlReader> экземпляр можно создать с <xref:System.Xml.XmlReaderSettings> помощью класса и <xref:System.Xml.XmlReader.Create%2A> метода. Дополнительные сведения см. в подразделе "Примечания" на справочной странице <xref:System.Xml.XmlReader>.  
  
 Это свойство чаще всего используется для отчетов об ошибках, но может быть вызвано в любое время. Начальным значением свойства является 1. В сочетании <xref:System.Xml.XmlValidatingReader.LinePosition%2A>с параметром значение 1, 1 указывает на начало документа.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="LinePosition">
      <MemberSignature Language="C#" Value="public int LinePosition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LinePosition" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.LinePosition" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LinePosition As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LinePosition { int get(); };" />
      <MemberSignature Language="F#" Value="member this.LinePosition : int" Usage="System.Xml.XmlValidatingReader.LinePosition" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Xml.IXmlLineInfo.LinePosition</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает позицию в текущей строке.</summary>
        <value>Позиция в текущей строке. Начальным значением свойства является 1.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Класс является устаревшим в [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]. <xref:System.Xml.XmlValidatingReader> Проверяющий <xref:System.Xml.XmlReader> экземпляр можно создать с <xref:System.Xml.XmlReaderSettings> помощью класса и <xref:System.Xml.XmlReader.Create%2A> метода. Дополнительные сведения см. в подразделе "Примечания" на справочной странице <xref:System.Xml.XmlReader>.  
  
 Это свойство чаще всего используется для отчетов об ошибках, но может быть вызвано в любое время. Начальным значением для этого свойства является `1`.  
  
 Указанное расположение является первым символом текста в разметке.  
  
```xml  
<root>  
 abc<tag/>  
</root>  
```  
  
 В первой строке предыдущего текста XML `LinePosition` , объект `2` соответствует символу `5` `r`; во второй строке, соответствует символу `t`, `LinePosition` а в третьей строке — `LinePosition` аргумента `3` соответствует символу `r`.  
  
 В сочетании <xref:System.Xml.XmlValidatingReader.LineNumber%2A>с `1,1` параметром значение указывает на начало документа.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="LocalName">
      <MemberSignature Language="C#" Value="public override string LocalName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LocalName" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.LocalName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property LocalName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ LocalName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LocalName : string" Usage="System.Xml.XmlValidatingReader.LocalName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает локальное имя текущего узла.</summary>
        <value>Имя текущего узла с удаленным префиксом. Например, <see langword="LocalName" /> <see langword="book" /> для элемента <c>&gt;BK: Book. &lt;</c>  
  
Для безымянных типов узлов (например, <see langword="Text" />, <see langword="Comment" /> и т. д.) данное свойство возвращает String.Empty.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Класс является устаревшим в [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]. <xref:System.Xml.XmlValidatingReader> Проверяющий <xref:System.Xml.XmlReader> экземпляр можно создать с <xref:System.Xml.XmlReaderSettings> помощью класса и <xref:System.Xml.XmlReader.Create%2A> метода. Дополнительные сведения см. в подразделе "Примечания" на справочной странице <xref:System.Xml.XmlReader>.  
  
   
  
## Examples  
 В следующем примере считывается фрагмент XML-кода.  
  
 [!code-csharp[Classic WebData XmlParserContext.XmlParserContext Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlParserContext.XmlParserContext Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlParserContext.XmlParserContext Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlParserContext.XmlParserContext Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="LookupNamespace">
      <MemberSignature Language="C#" Value="public override string LookupNamespace (string prefix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string LookupNamespace(string prefix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlValidatingReader.LookupNamespace(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function LookupNamespace (prefix As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ LookupNamespace(System::String ^ prefix);" />
      <MemberSignature Language="F#" Value="override this.LookupNamespace : string -&gt; string" Usage="xmlValidatingReader.LookupNamespace prefix" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Xml.IXmlNamespaceResolver.LookupNamespace(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix">Префикс, URI пространства имен которого вы хотите разрешить. Чтобы сопоставить пространство имен по умолчанию, необходимо передать пустую строку.</param>
        <summary>Разрешает префикс пространства имен в области видимости текущего элемента.</summary>
        <returns>URI пространства имен, которое отображает префикс, или значение <see langword="null" />, если соответствующий префикс не найден.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Класс является устаревшим в [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]. <xref:System.Xml.XmlValidatingReader> Проверяющий <xref:System.Xml.XmlReader> экземпляр можно создать с <xref:System.Xml.XmlReaderSettings> помощью класса и <xref:System.Xml.XmlReader.Create%2A> метода. Дополнительные сведения см. в подразделе "Примечания" на справочной странице <xref:System.Xml.XmlReader>. 
  
 В следующей XML-строке, если средство чтения находится на `href` атрибуте, префикс `a` разрешается вызовом метода `reader.LookupNamespace("a", true)`. Возвращаемая строка — `urn:456`.  
  
```xml  
<root xmlns:a="urn:456">  
 <item>  
 <ref href="a:b"/>  
 </item>  
</root>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <MemberGroup MemberName="MoveToAttribute">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Переходит к указанному атрибуту.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="MoveToAttribute">
      <MemberSignature Language="C#" Value="public override void MoveToAttribute (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void MoveToAttribute(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlValidatingReader.MoveToAttribute(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub MoveToAttribute (i As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void MoveToAttribute(int i);" />
      <MemberSignature Language="F#" Value="override this.MoveToAttribute : int -&gt; unit" Usage="xmlValidatingReader.MoveToAttribute i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">Индекс атрибута.</param>
        <summary>Переходит к атрибуту с указанным индексом.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Класс является устаревшим в [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]. <xref:System.Xml.XmlValidatingReader> Проверяющий <xref:System.Xml.XmlReader> экземпляр можно создать с <xref:System.Xml.XmlReaderSettings> помощью класса и <xref:System.Xml.XmlReader.Create%2A> метода. Дополнительные сведения см. в подразделе "Примечания" на справочной странице <xref:System.Xml.XmlReader>.  
  
   
  
## Examples  
 В следующем примере считываются все элементы корневого узла.  
  
 [!code-cpp[Classic WebData XmlValidatingReader.AttributeCount Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlValidatingReader.AttributeCount Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlValidatingReader.AttributeCount Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlValidatingReader.AttributeCount Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlValidatingReader.AttributeCount Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlValidatingReader.AttributeCount Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Параметр <paramref name="i" /> меньше 0 или больше или равен <see cref="P:System.Xml.XmlReader.AttributeCount" />.</exception>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="MoveToAttribute">
      <MemberSignature Language="C#" Value="public override bool MoveToAttribute (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool MoveToAttribute(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlValidatingReader.MoveToAttribute(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function MoveToAttribute (name As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool MoveToAttribute(System::String ^ name);" />
      <MemberSignature Language="F#" Value="override this.MoveToAttribute : string -&gt; bool" Usage="xmlValidatingReader.MoveToAttribute name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Полное имя атрибута.</param>
        <summary>Переходит к атрибуту с указанным именем.</summary>
        <returns>Значение <see langword="true" />, если атрибут найден; в противном случае — <see langword="false" />. Если значение <see langword="false" />, позиция средства чтения не изменяется.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Класс является устаревшим в [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]. <xref:System.Xml.XmlValidatingReader> Проверяющий <xref:System.Xml.XmlReader> экземпляр можно создать с <xref:System.Xml.XmlReaderSettings> помощью класса и <xref:System.Xml.XmlReader.Create%2A> метода. Дополнительные сведения см. в подразделе "Примечания" на справочной странице <xref:System.Xml.XmlReader>.  
  
 После вызова этого метода <xref:System.Xml.XmlValidatingReader.Name%2A>свойства, <xref:System.Xml.XmlValidatingReader.NamespaceURI%2A>и <xref:System.Xml.XmlValidatingReader.Prefix%2A> отразится на свойствах этого атрибута.  
  
   
  
## Examples  
 В следующем примере считывается атрибут с текстом и ссылочными узлами сущности.  
  
 [!code-cpp[Classic WebData XmlValidatingReader.MoveToAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlValidatingReader.MoveToAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlValidatingReader.MoveToAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlValidatingReader.MoveToAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlValidatingReader.MoveToAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlValidatingReader.MoveToAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="MoveToAttribute">
      <MemberSignature Language="C#" Value="public override bool MoveToAttribute (string localName, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool MoveToAttribute(string localName, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlValidatingReader.MoveToAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function MoveToAttribute (localName As String, namespaceURI As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool MoveToAttribute(System::String ^ localName, System::String ^ namespaceURI);" />
      <MemberSignature Language="F#" Value="override this.MoveToAttribute : string * string -&gt; bool" Usage="xmlValidatingReader.MoveToAttribute (localName, namespaceURI)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName">Локальное имя атрибута.</param>
        <param name="namespaceURI">Универсальный код ресурса (URI) пространства имен атрибута.</param>
        <summary>Переходит к атрибуту с заданным локальным именем и URI пространства имен.</summary>
        <returns>Значение <see langword="true" />, если атрибут найден; в противном случае — <see langword="false" />. Если значение <see langword="false" />, позиция средства чтения не изменяется.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Класс является устаревшим в [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]. <xref:System.Xml.XmlValidatingReader> Проверяющий <xref:System.Xml.XmlReader> экземпляр можно создать с <xref:System.Xml.XmlReaderSettings> помощью класса и <xref:System.Xml.XmlReader.Create%2A> метода. Дополнительные сведения см. в подразделе "Примечания" на справочной странице <xref:System.Xml.XmlReader>.  
  
 После вызова этого метода <xref:System.Xml.XmlValidatingReader.Name%2A>свойства, <xref:System.Xml.XmlValidatingReader.NamespaceURI%2A>и <xref:System.Xml.XmlValidatingReader.Prefix%2A> отразится на свойствах этого атрибута.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="MoveToElement">
      <MemberSignature Language="C#" Value="public override bool MoveToElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool MoveToElement() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlValidatingReader.MoveToElement" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function MoveToElement () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool MoveToElement();" />
      <MemberSignature Language="F#" Value="override this.MoveToElement : unit -&gt; bool" Usage="xmlValidatingReader.MoveToElement " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Переходит к элементу, содержащему текущий узел атрибута.</summary>
        <returns>Значение <see langword="true" />, если средство чтения находится на атрибуте (средство чтения перемещается к элементу с этим атрибутом); в противном случае — <see langword="false" /> (позиция средства чтения не изменяется).</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Класс является устаревшим в [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]. <xref:System.Xml.XmlValidatingReader> Проверяющий <xref:System.Xml.XmlReader> экземпляр можно создать с <xref:System.Xml.XmlReaderSettings> помощью класса и <xref:System.Xml.XmlReader.Create%2A> метода. Дополнительные сведения см. в подразделе "Примечания" на справочной странице <xref:System.Xml.XmlReader>.  
  
 Используйте этот метод, чтобы вернуться к элементу после перехода по его атрибутам. Этот метод перемещает модуль чтения в один из следующих типов узлов: `Element`, `DocumentType`или `XmlDeclaration`.  
  
   
  
## Examples  
 В следующем примере считываются все элементы корневого узла.  
  
 [!code-cpp[Classic WebData XmlValidatingReader.AttributeCount Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlValidatingReader.AttributeCount Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlValidatingReader.AttributeCount Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlValidatingReader.AttributeCount Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlValidatingReader.AttributeCount Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlValidatingReader.AttributeCount Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="MoveToFirstAttribute">
      <MemberSignature Language="C#" Value="public override bool MoveToFirstAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool MoveToFirstAttribute() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlValidatingReader.MoveToFirstAttribute" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function MoveToFirstAttribute () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool MoveToFirstAttribute();" />
      <MemberSignature Language="F#" Value="override this.MoveToFirstAttribute : unit -&gt; bool" Usage="xmlValidatingReader.MoveToFirstAttribute " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Переходит к первому атрибуту.</summary>
        <returns>Значение <see langword="true" />, если атрибут существует (средство чтения перемещается к первому атрибуту); в противном случае — <see langword="false" /> (позиция средства чтения не изменяется).</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Класс является устаревшим в [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]. <xref:System.Xml.XmlValidatingReader> Проверяющий <xref:System.Xml.XmlReader> экземпляр можно создать с <xref:System.Xml.XmlReaderSettings> помощью класса и <xref:System.Xml.XmlReader.Create%2A> метода. Дополнительные сведения см. в подразделе "Примечания" на справочной странице <xref:System.Xml.XmlReader>.  
  
   
  
## Examples  
 В следующем примере считывается фрагмент XML-кода.  
  
 [!code-cpp[Classic WebData XmlValidatingReader.MoveToFirstAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlValidatingReader.MoveToFirstAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlValidatingReader.MoveToFirstAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlValidatingReader.MoveToFirstAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlValidatingReader.MoveToFirstAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlValidatingReader.MoveToFirstAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="MoveToNextAttribute">
      <MemberSignature Language="C#" Value="public override bool MoveToNextAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool MoveToNextAttribute() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlValidatingReader.MoveToNextAttribute" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function MoveToNextAttribute () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool MoveToNextAttribute();" />
      <MemberSignature Language="F#" Value="override this.MoveToNextAttribute : unit -&gt; bool" Usage="xmlValidatingReader.MoveToNextAttribute " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Переходит к следующему атрибуту.</summary>
        <returns>Значение <see langword="true" />, если присутствует следующий атрибут; значение <see langword="false" />, если другие атрибуты отсутствуют.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Класс является устаревшим в [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]. <xref:System.Xml.XmlValidatingReader> Проверяющий <xref:System.Xml.XmlReader> экземпляр можно создать с <xref:System.Xml.XmlReaderSettings> помощью класса и <xref:System.Xml.XmlReader.Create%2A> метода. Дополнительные сведения см. в подразделе "Примечания" на справочной странице <xref:System.Xml.XmlReader>.  
  
 Если текущий узел является узлом элемента, этот метод эквивалентен <xref:System.Xml.XmlValidatingReader.MoveToFirstAttribute%2A>. Если `MoveToNextAttribute` возвращает`true`, средство чтения перемещается к следующему атрибуту; в противном случае расположение средства чтения не изменяется.  
  
   
  
## Examples  
 В следующем примере считывается фрагмент XML-кода.  
  
 [!code-cpp[Classic WebData XmlValidatingReader.MoveToFirstAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlValidatingReader.MoveToFirstAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlValidatingReader.MoveToFirstAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlValidatingReader.MoveToFirstAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlValidatingReader.MoveToFirstAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlValidatingReader.MoveToFirstAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public override string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Xml.XmlValidatingReader.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает полное имя текущего узла.</summary>
        <value>Полное имя текущего узла. Например, <see langword="Name" /> <see langword="bk:book" /> для элемента <c>&gt;BK: Book. &lt;</c>  
  
Возвращаемое имя зависит от значения свойства <see cref="P:System.Xml.XmlValidatingReader.NodeType" /> узла. Значения возвращаются для представленных ниже типов узлов. Для других типов узлов возвращается пустая строка.  
  
 <list type="table"><listheader><term> Тип узла 
 </term><description> name 
 </description></listheader><item><term><see langword="Attribute" /></term><description> Имя атрибута.  
  
 </description></item><item><term><see langword="DocumentType" /></term><description> Имя типа документа.  
  
 </description></item><item><term><see langword="Element" /></term><description> Имя тега.  
  
 </description></item><item><term><see langword="EntityReference" /></term><description> Имя сущности, на которую существует ссылка.  
  
 </description></item><item><term><see langword="ProcessingInstruction" /></term><description> Цель инструкции по обработке.  
  
 </description></item><item><term><see langword="XmlDeclaration" /></term><description> Строка символов <see langword="xml" />.  
  
 </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Класс является устаревшим в [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]. <xref:System.Xml.XmlValidatingReader> Проверяющий <xref:System.Xml.XmlReader> экземпляр можно создать с <xref:System.Xml.XmlReaderSettings> помощью класса и <xref:System.Xml.XmlReader.Create%2A> метода. Дополнительные сведения см. в подразделе "Примечания" на справочной странице <xref:System.Xml.XmlReader>.  
  
   
  
## Examples  
 В следующем примере считывается XML-файл и отображается каждый из узлов.  
  
 [!code-cpp[Classic WebData XmlValidatingReader.Name Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlValidatingReader.Name Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlValidatingReader.Name Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlValidatingReader.Name Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlValidatingReader.Name Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlValidatingReader.Name Example/VB/source.vb#1)]  
  
 В этом примере в качестве входных данных используется файл `items.xml`.  
  
 [!code-xml[Classic WebData XmlValidatingReader.Name Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlValidatingReader.Name Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="Namespaces">
      <MemberSignature Language="C#" Value="public bool Namespaces { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Namespaces" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.Namespaces" />
      <MemberSignature Language="VB.NET" Value="Public Property Namespaces As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Namespaces { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Namespaces : bool with get, set" Usage="System.Xml.XmlValidatingReader.Namespaces" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, указывающее, поддерживаются ли пространства имен.</summary>
        <value>Значение <see langword="true" /> — поддержка осуществляется; в противном случае — <see langword="false" />. Значение по умолчанию — <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Класс является устаревшим в [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]. <xref:System.Xml.XmlValidatingReader> Проверяющий <xref:System.Xml.XmlReader> экземпляр можно создать с <xref:System.Xml.XmlReaderSettings> помощью класса и <xref:System.Xml.XmlReader.Create%2A> метода. Дополнительные сведения см. в подразделе "Примечания" на справочной странице <xref:System.Xml.XmlReader>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="NamespaceURI">
      <MemberSignature Language="C#" Value="public override string NamespaceURI { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NamespaceURI" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.NamespaceURI" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property NamespaceURI As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ NamespaceURI { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NamespaceURI : string" Usage="System.Xml.XmlValidatingReader.NamespaceURI" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает URI пространства имен (определенное в спецификации W3C, посвященной пространствам имен) узла, на который позиционировано средство чтения.</summary>
        <value>URI пространства имен текущего узла; в противном случае — пустая строка.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это свойство относится только к `Element` узлам `Attribute` и.  
  
> [!NOTE]
>  Класс является устаревшим в [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]. <xref:System.Xml.XmlValidatingReader> Проверяющий <xref:System.Xml.XmlReader> экземпляр можно создать с <xref:System.Xml.XmlReaderSettings> помощью класса и <xref:System.Xml.XmlReader.Create%2A> метода. Дополнительные сведения см. в подразделе "Примечания" на справочной странице <xref:System.Xml.XmlReader>.  
  
   
  
## Examples  
 В следующем примере считывается фрагмент XML-кода.  
  
 [!code-csharp[Classic WebData XmlParserContext.XmlParserContext Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlParserContext.XmlParserContext Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlParserContext.XmlParserContext Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlParserContext.XmlParserContext Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="NameTable">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlNameTable NameTable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlNameTable NameTable" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.NameTable" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property NameTable As XmlNameTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlNameTable ^ NameTable { System::Xml::XmlNameTable ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NameTable : System.Xml.XmlNameTable" Usage="System.Xml.XmlValidatingReader.NameTable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNameTable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает класс <see cref="T:System.Xml.XmlNameTable" />, связанный с данной реализацией.</summary>
        <value><see langword="XmlNameTable" />, позволяющий получать в узле разделенную версию строки.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Класс является устаревшим в [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]. <xref:System.Xml.XmlValidatingReader> Проверяющий <xref:System.Xml.XmlReader> экземпляр можно создать с <xref:System.Xml.XmlReaderSettings> помощью класса и <xref:System.Xml.XmlReader.Create%2A> метода. Дополнительные сведения см. в подразделе "Примечания" на справочной странице <xref:System.Xml.XmlReader>.  
  
 Все имена узлов и атрибутов, возвращаемые из <xref:System.Xml.XmlValidatingReader> , будут разъединены `NameTable`с помощью. Если одно и то же имя возвращается несколько раз (например, `Customer`), то для `String` этого имени будет возвращен один и тот же объект. Это позволяет написать эффективный код, выполняющий сравнения объектов в этих строках вместо дорогостоящих сравнений строк.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlNameTable" />
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="NodeType">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlNodeType NodeType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.XmlNodeType NodeType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.NodeType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property NodeType As XmlNodeType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlNodeType NodeType { System::Xml::XmlNodeType get(); };" />
      <MemberSignature Language="F#" Value="member this.NodeType : System.Xml.XmlNodeType" Usage="System.Xml.XmlValidatingReader.NodeType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает тип текущего узла.</summary>
        <value>Одно из значений <see cref="T:System.Xml.XmlNodeType" />, предоставляющее тип текущего узла.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Класс является устаревшим в [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]. <xref:System.Xml.XmlValidatingReader> Проверяющий <xref:System.Xml.XmlReader> экземпляр можно создать с <xref:System.Xml.XmlReaderSettings> помощью класса и <xref:System.Xml.XmlReader.Create%2A> метода. Дополнительные сведения см. в подразделе "Примечания" на справочной странице <xref:System.Xml.XmlReader>.  
  
 Это свойство никогда не возвращает следующие `XmlNodeType` типы: `Document`, `DocumentFragment`, `Entity`или `Notation`.  
  
   
  
## Examples  
 В следующем примере считывается XML-файл и отображается каждый из узлов.  
  
 [!code-cpp[Classic WebData XmlValidatingReader.Name Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlValidatingReader.Name Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlValidatingReader.Name Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlValidatingReader.Name Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlValidatingReader.Name Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlValidatingReader.Name Example/VB/source.vb#1)]  
  
 В этом примере в качестве входных данных используется файл `items.xml`.  
  
 [!code-xml[Classic WebData XmlValidatingReader.Name Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlValidatingReader.Name Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="Prefix">
      <MemberSignature Language="C#" Value="public override string Prefix { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Prefix" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.Prefix" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Prefix As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Prefix { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Prefix : string" Usage="System.Xml.XmlValidatingReader.Prefix" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает префикс пространства имен, связанный с текущим узлом.</summary>
        <value>Префикс пространства имен, связанный с текущим узлом.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Класс является устаревшим в [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]. <xref:System.Xml.XmlValidatingReader> Проверяющий <xref:System.Xml.XmlReader> экземпляр можно создать с <xref:System.Xml.XmlReaderSettings> помощью класса и <xref:System.Xml.XmlReader.Create%2A> метода. Дополнительные сведения см. в подразделе "Примечания" на справочной странице <xref:System.Xml.XmlReader>.  
  
   
  
## Examples  
 В следующем примере считывается фрагмент XML-кода.  
  
 [!code-csharp[Classic WebData XmlParserContext.XmlParserContext Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlParserContext.XmlParserContext Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlParserContext.XmlParserContext Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlParserContext.XmlParserContext Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="QuoteChar">
      <MemberSignature Language="C#" Value="public override char QuoteChar { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance char QuoteChar" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.QuoteChar" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property QuoteChar As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property char QuoteChar { char get(); };" />
      <MemberSignature Language="F#" Value="member this.QuoteChar : char" Usage="System.Xml.XmlValidatingReader.QuoteChar" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает знак кавычек, используемый для выделения значения узла атрибута.</summary>
        <value>Знак кавычек (" или ') для выделения значения узла атрибута.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это свойство применяется только к узлу атрибута.  
  
> [!NOTE]
>  Класс является устаревшим в [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]. <xref:System.Xml.XmlValidatingReader> Проверяющий <xref:System.Xml.XmlReader> экземпляр можно создать с <xref:System.Xml.XmlReaderSettings> помощью класса и <xref:System.Xml.XmlReader.Create%2A> метода. Дополнительные сведения см. в подразделе "Примечания" на справочной странице <xref:System.Xml.XmlReader>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override bool Read ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Read() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlValidatingReader.Read" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Read();" />
      <MemberSignature Language="F#" Value="override this.Read : unit -&gt; bool" Usage="xmlValidatingReader.Read " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Считывает следующий узел из потока.</summary>
        <returns>Значение <see langword="true" />, если чтение прошло успешно; значение <see langword="false" />, если отсутствуют узлы для чтения.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Класс является устаревшим в [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]. <xref:System.Xml.XmlValidatingReader> Проверяющий <xref:System.Xml.XmlReader> экземпляр можно создать с <xref:System.Xml.XmlReaderSettings> помощью класса и <xref:System.Xml.XmlReader.Create%2A> метода. Дополнительные сведения см. в подразделе "Примечания" на справочной странице <xref:System.Xml.XmlReader>.  
  
 При первом создании и инициализации модуля чтения информация недоступна. Для чтения первого `Read` узла необходимо вызвать метод.  
  
   
  
## Examples  
 В следующем примере считывается XML-файл и отображается каждый узел.  
  
 [!code-cpp[Classic WebData XmlValidatingReader.Name Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlValidatingReader.Name Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlValidatingReader.Name Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlValidatingReader.Name Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlValidatingReader.Name Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlValidatingReader.Name Example/VB/source.vb#1)]  
  
 В этом примере в качестве входных данных используется файл `items.xml`.  
  
 [!code-xml[Classic WebData XmlValidatingReader.Name Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlValidatingReader.Name Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="ReadAttributeValue">
      <MemberSignature Language="C#" Value="public override bool ReadAttributeValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool ReadAttributeValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlValidatingReader.ReadAttributeValue" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadAttributeValue () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool ReadAttributeValue();" />
      <MemberSignature Language="F#" Value="override this.ReadAttributeValue : unit -&gt; bool" Usage="xmlValidatingReader.ReadAttributeValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Разбирает значение атрибута в один или несколько узлов <see langword="Text" />, <see langword="EntityReference" /> или <see langword="EndEntity" />.</summary>
        <returns>Значение <see langword="true" />, если присутствуют возвращаемые узлы.  
  
 Значение <see langword="false" />, если средство чтения не расположено на узле атрибута при первом вызове или все значения атрибута считаны.  
  
Пустой атрибут (например, <c>misc=""</c>) возвращает значение <see langword="true" /> с отдельным узлом, имеющим значение String.Empty.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Класс является устаревшим в [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]. <xref:System.Xml.XmlValidatingReader> Проверяющий <xref:System.Xml.XmlReader> экземпляр можно создать с <xref:System.Xml.XmlReaderSettings> помощью класса и <xref:System.Xml.XmlReader.Create%2A> метода. Дополнительные сведения см. в подразделе "Примечания" на справочной странице <xref:System.Xml.XmlReader>.  
  
 Используйте этот метод после вызова <xref:System.Xml.XmlValidatingReader.MoveToAttribute%2A> метода, чтобы прочесть текст или узлы ссылки на сущность, которые составляют значение атрибута. <xref:System.Xml.XmlReader.Depth%2A> Узлы значений атрибутов — это один плюс Глубина узла атрибута. `Depth` Приращение и уменьшение на единицу при пошаговом выполнении и выходе из общих ссылок на сущности.  
  
 Например, предположим, что у вас есть следующий код XML:`<test name="a &b; c"/>`  
  
 где сущность `b` определяется в определении типа документа (DTD) следующим образом:`<!ENTITY b "123">`  
  
 Если <xref:System.Xml.XmlValidatingReader.EntityHandling%2A> параметр имеет `ExpandCharEntities`значение, следующий C# код возвращает значение атрибута как два текстовых узла и один узел ссылки на сущность:  
  
```csharp  
reader.MoveToAttribute("name");  
  while (reader.ReadAttributeValue())  
  {  
  if (reader.NodeType == XmlNodeType.Text)  
  {  
  // at this point reader.Value == "a " or " c"  
  }  
  else if (reader.NodeType == XmlNodeType.EntityReference)  
  {  
  // at this point reader.Name == "b"  
  reader.ResolveEntity();  
  while (reader.ReadAttributeValue() &&  
  reader.NodeType != XmlNodeType.EndEntity)  
  {  
  // reader.Value == "123"  
  }  
  }  
    }  
```  
  
   
  
## Examples  
 В следующем примере считывается атрибут с текстом и ссылочными узлами сущности.  
  
 [!code-cpp[Classic WebData XmlValidatingReader.MoveToAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlValidatingReader.MoveToAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlValidatingReader.MoveToAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlValidatingReader.MoveToAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlValidatingReader.MoveToAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlValidatingReader.MoveToAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="ReadContentAsBase64">
      <MemberSignature Language="C#" Value="public override int ReadContentAsBase64 (byte[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 ReadContentAsBase64(unsigned int8[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlValidatingReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadContentAsBase64 (buffer As Byte(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int ReadContentAsBase64(cli::array &lt;System::Byte&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.ReadContentAsBase64 : byte[] * int * int -&gt; int" Usage="xmlValidatingReader.ReadContentAsBase64 (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="index" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="count" Type="System.Int32" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="buffer">Буфер, в который копируется полученный текст. Это значение не может быть равно <see langword="null" />.</param>
        <param name="index">Смещение в буфере, с которого следует начать копировать результат.</param>
        <param name="count">Максимальное количество копируемых в буфер байтов. Этот метод возвращает фактическое количество скопированных байтов.</param>
        <summary>Считывает содержимое и возвращает раскодированные двоичные байты Base64.</summary>
        <returns>Количество байтов, записанных в буфер.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Класс является устаревшим в [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]. <xref:System.Xml.XmlValidatingReader> Проверяющий <xref:System.Xml.XmlReader> экземпляр можно создать с <xref:System.Xml.XmlReaderSettings> помощью класса и <xref:System.Xml.XmlReader.Create%2A> метода. Дополнительные сведения см. в подразделе "Примечания" на справочной странице <xref:System.Xml.XmlReader>. 
  
 Этот метод выполняет потоковую передачу содержимого, декодирует содержимое Base64 и возвращает раскодированные двоичные байты (например, встроенный закодированный рисунок в формате GIF) в буфер. Этот метод можно последовательно вызывать для чтения больших потоков внедренного текста. Дополнительные сведения см. в статье RFC 1521, "MIME (расширения многоцелевого Интернет-почты): Механизмы указания и описания формата текста сообщений Интернета. RFC можно получить на [веб-сайте Request for Comments](https://www.rfc-editor.org).  
  
> [!NOTE]
>  Не следует обращаться к свойствам модуля чтения между вызовами <xref:System.Xml.XmlValidatingReader.ReadContentAsBase64%2A> метода, пока метод не возвратит значение 0.  
  
 Этот метод имеет следующие особенности.  
  
-   <xref:System.Xml.XmlValidatingReader.ReadContentAsBase64%2A>Возвращает значение 0, когда оно достигло конца потока байтов, на котором он был запущен. Модуль чтения размещается на первом узле, не являющемся содержимым.  
  
-   Если вы запрашиваете меньшее или точное число байтов, чем осталось в потоке, модуль чтения остается в текущем положении.  
  
-   <xref:System.Xml.XmlValidatingReader.ReadContentAsBase64%2A>не поддерживается для следующих типов узлов XML:  Элемент, XmlDeclaration, None, Document, DocumentType, Notation, Entity и DocumentFragment.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Значение <paramref name="buffer" /> равно <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Метод <see cref="M:System.Xml.XmlValidatingReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)" /> не поддерживается на текущем узле.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Значение индекса в буфере или сумма значений индекса и счетчика больше, чем выделенный размер буфера.</exception>
        <altmember cref="T:System.Xml.XmlReader" />
        <altmember cref="M:System.Xml.XmlValidatingReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="T:System.Xml.XmlNodeType" />
      </Docs>
    </Member>
    <Member MemberName="ReadContentAsBinHex">
      <MemberSignature Language="C#" Value="public override int ReadContentAsBinHex (byte[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 ReadContentAsBinHex(unsigned int8[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlValidatingReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadContentAsBinHex (buffer As Byte(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int ReadContentAsBinHex(cli::array &lt;System::Byte&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.ReadContentAsBinHex : byte[] * int * int -&gt; int" Usage="xmlValidatingReader.ReadContentAsBinHex (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="index" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="count" Type="System.Int32" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="buffer">Буфер, в который копируется полученный текст. Это значение не может быть равно <see langword="null" />.</param>
        <param name="index">Смещение в буфере, с которого следует начать копировать результат.</param>
        <param name="count">Максимальное количество копируемых в буфер байтов. Этот метод возвращает фактическое количество скопированных байтов.</param>
        <summary>Считывает данные и возвращает двоичные байты, декодированные из кодировки BinHex.</summary>
        <returns>Количество байтов, записанных в буфер.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Класс является устаревшим в [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]. <xref:System.Xml.XmlValidatingReader> Проверяющий <xref:System.Xml.XmlReader> экземпляр можно создать с <xref:System.Xml.XmlReaderSettings> помощью класса и <xref:System.Xml.XmlReader.Create%2A> метода. Дополнительные сведения см. в подразделе "Примечания" на справочной странице <xref:System.Xml.XmlReader>. 
  
 Этот метод выполняет потоковую передачу содержимого, декодирует содержимое BinHex и возвращает раскодированные двоичные байты (например, встроенный закодированный рисунок в формате GIF) в буфер. Этот метод можно последовательно вызывать для чтения больших потоков внедренного текста.  
  
> [!NOTE]
>  Не следует обращаться к свойствам модуля чтения между вызовами <xref:System.Xml.XmlValidatingReader.ReadContentAsBinHex%2A> метода, пока метод не возвратит значение 0.  
  
 Этот метод имеет следующие особенности.  
  
-   <xref:System.Xml.XmlValidatingReader.ReadContentAsBinHex%2A>Возвращает значение 0, когда оно достигло конца потока байтов, на котором он был запущен. Модуль чтения размещается на первом узле, не являющемся содержимым.  
  
-   Если вы запрашиваете меньшее или точное число байтов, чем осталось в потоке, модуль чтения остается в текущем положении.  
  
-   <xref:System.Xml.XmlValidatingReader.ReadContentAsBinHex%2A>не поддерживается для следующих типов узлов XML:  Элемент, XmlDeclaration, None, Document, DocumentType, Notation, Entity и DocumentFragment.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Значение <paramref name="buffer" /> равно <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Метод <see cref="M:System.Xml.XmlValidatingReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)" /> не поддерживается на текущем узле.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Значение индекса в буфере или сумма значений индекса и счетчика больше, чем выделенный размер буфера.</exception>
        <exception cref="T:System.NotSupportedException">Реализация <see cref="T:System.Xml.XmlValidatingReader" /> не поддерживает данный метод.</exception>
        <altmember cref="T:System.Xml.XmlReader" />
        <altmember cref="M:System.Xml.XmlValidatingReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="T:System.Xml.XmlNodeType" />
      </Docs>
    </Member>
    <Member MemberName="ReadElementContentAsBase64">
      <MemberSignature Language="C#" Value="public override int ReadElementContentAsBase64 (byte[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 ReadElementContentAsBase64(unsigned int8[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlValidatingReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadElementContentAsBase64 (buffer As Byte(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int ReadElementContentAsBase64(cli::array &lt;System::Byte&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.ReadElementContentAsBase64 : byte[] * int * int -&gt; int" Usage="xmlValidatingReader.ReadElementContentAsBase64 (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="index" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="count" Type="System.Int32" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="buffer">Буфер, в который копируется полученный текст. Это значение не может быть равно <see langword="null" />.</param>
        <param name="index">Смещение в буфере, с которого следует начать копировать результат.</param>
        <param name="count">Максимальное количество копируемых в буфер байтов. Этот метод возвращает фактическое количество скопированных байтов.</param>
        <summary>Считывает элемент и декодирует его из кодировки Base64.</summary>
        <returns>Количество байтов, записанных в буфер.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Класс является устаревшим в [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]. <xref:System.Xml.XmlValidatingReader> Проверяющий <xref:System.Xml.XmlReader> экземпляр можно создать с <xref:System.Xml.XmlReaderSettings> помощью класса и <xref:System.Xml.XmlReader.Create%2A> метода. Дополнительные сведения см. в подразделе "Примечания" на справочной странице <xref:System.Xml.XmlReader>.  
  
 Этот метод считывает содержимое элемента, декодирует его с помощью кодировки Base64 и возвращает раскодированные двоичные байты (например, встроенный закодированный рисунок в формате GIF) в буфер. Дополнительные сведения см. в статье RFC 1521, "MIME (расширения многоцелевого Интернет-почты): Механизмы указания и описания формата текста сообщений Интернета. RFC можно получить на [веб-сайте Request for Comments](https://www.rfc-editor.org).  
  
 Этот метод может считывать только элементы простого содержимого. Элемент может содержать текст, пробелы, значащие пробелы, разделы CDATA, комментарии и инструкции по обработке. Он также может содержать ссылки на сущности, которые автоматически развертываются. Элемент не может иметь дочерние элементы.  
  
 Этот метод очень похож на <xref:System.Xml.XmlValidatingReader.ReadContentAsBase64%2A> метод, за исключением того, что он может вызываться только для типов узлов элементов.  
  
 Если значение больше числа байтов в документе или равно числу байтов в документе, то <xref:System.Xml.XmlValidatingReader> считывает все оставшиеся байты в документе и возвращает число считанных байтов. `count` Следующий <xref:System.Xml.XmlValidatingReader> вызов метода возвращает ноль и перемещает модуль чтения на узел <xref:System.Xml.XmlNodeType.EndElement>после.  
  
 При вызове <xref:System.Xml.XmlValidatingReader.Read%2A> до использования всего содержимого элемента читатель может вести себя так, как если бы первое содержимое было использовано, а <xref:System.Xml.XmlValidatingReader.Read%2A> затем вызывался метод. Это означает, что читатель считывает весь текст до тех пор, пока не будет обнаружен элемент End. Затем он считывает конечный узел тега, считывает следующий узел, а затем позиционирует себя на следующем следующем узле.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Значение <paramref name="buffer" /> равно <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Текущий узел не является узлом элемента.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Значение индекса в буфере или сумма значений индекса и счетчика больше, чем выделенный размер буфера.</exception>
        <exception cref="T:System.NotSupportedException">Реализация <see cref="T:System.Xml.XmlValidatingReader" /> не поддерживает данный метод.</exception>
        <exception cref="T:System.Xml.XmlException">Элемент содержит смешанное содержимое.</exception>
        <exception cref="T:System.FormatException">Не удается преобразовать содержимое в требуемый тип.</exception>
        <altmember cref="T:System.Xml.XmlReader" />
        <altmember cref="M:System.Xml.XmlValidatingReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ReadElementContentAsBinHex">
      <MemberSignature Language="C#" Value="public override int ReadElementContentAsBinHex (byte[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 ReadElementContentAsBinHex(unsigned int8[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlValidatingReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadElementContentAsBinHex (buffer As Byte(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int ReadElementContentAsBinHex(cli::array &lt;System::Byte&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.ReadElementContentAsBinHex : byte[] * int * int -&gt; int" Usage="xmlValidatingReader.ReadElementContentAsBinHex (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="index" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="count" Type="System.Int32" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="buffer">Буфер, в который копируется полученный текст. Это значение не может быть равно <see langword="null" />.</param>
        <param name="index">Смещение в буфере, с которого следует начать копировать результат.</param>
        <param name="count">Максимальное количество копируемых в буфер байтов. Этот метод возвращает фактическое количество скопированных байтов.</param>
        <summary>Считывает элемент и декодирует его из кодировки BinHex.</summary>
        <returns>Количество байтов, записанных в буфер.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Класс является устаревшим в [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]. <xref:System.Xml.XmlValidatingReader> Проверяющий <xref:System.Xml.XmlReader> экземпляр можно создать с <xref:System.Xml.XmlReaderSettings> помощью класса и <xref:System.Xml.XmlReader.Create%2A> метода. Дополнительные сведения см. в подразделе "Примечания" на справочной странице <xref:System.Xml.XmlReader>.  
  
 Этот метод считывает содержимое элемента, декодирует его с помощью кодирования BinHex и возвращает раскодированные двоичные байты (например, встроенный закодированный рисунок в формате GIF) в буфер.  
  
 Этот метод может считывать только элементы простого содержимого. Элемент может содержать текст, пробелы, значащие пробелы, разделы CDATA, комментарии и инструкции по обработке. Он также может содержать ссылки на сущности, которые автоматически развертываются. Элемент не может иметь дочерние элементы.  
  
 Этот метод очень похож на <xref:System.Xml.XmlValidatingReader.ReadContentAsBinHex%2A> метод, за исключением того, что он может вызываться только для типов узлов элементов.  
  
 Если значение больше числа байтов в документе или равно числу байтов в документе, то <xref:System.Xml.XmlValidatingReader> считывает все оставшиеся байты в документе и возвращает число считанных байтов. `count` Следующий <xref:System.Xml.XmlValidatingReader> вызов метода возвращает ноль и перемещает модуль чтения на узел <xref:System.Xml.XmlNodeType.EndElement>после.  
  
 При вызове <xref:System.Xml.XmlValidatingReader.Read%2A> до использования всего содержимого элемента читатель может вести себя так, как если бы первое содержимое было использовано, а <xref:System.Xml.XmlValidatingReader.Read%2A> затем вызывался метод. Это означает, что читатель считывает весь текст до тех пор, пока не будет обнаружен элемент End. Затем он считывает конечный узел тега, считывает следующий узел, а затем позиционирует себя на следующем следующем узле.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Значение <paramref name="buffer" /> равно <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Текущий узел не является узлом элемента.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Значение индекса в буфере или сумма значений индекса и счетчика больше, чем выделенный размер буфера.</exception>
        <exception cref="T:System.NotSupportedException">Реализация <see cref="T:System.Xml.XmlValidatingReader" /> не поддерживает данный метод.</exception>
        <exception cref="T:System.Xml.XmlException">Элемент содержит смешанное содержимое.</exception>
        <exception cref="T:System.FormatException">Не удается преобразовать содержимое в требуемый тип.</exception>
        <altmember cref="T:System.Xml.XmlReader" />
        <altmember cref="M:System.Xml.XmlValidatingReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Reader">
      <MemberSignature Language="C#" Value="public System.Xml.XmlReader Reader { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlReader Reader" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.Reader" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Reader As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlReader ^ Reader { System::Xml::XmlReader ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Reader : System.Xml.XmlReader" Usage="System.Xml.XmlValidatingReader.Reader" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает <see cref="T:System.Xml.XmlReader" />, используемый для создания <see langword="XmlValidatingReader" />.</summary>
        <value><see langword="XmlReader" />, заданный в конструкторе.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Класс является устаревшим в [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]. <xref:System.Xml.XmlValidatingReader> Проверяющий <xref:System.Xml.XmlReader> экземпляр можно создать с <xref:System.Xml.XmlReaderSettings> помощью класса и <xref:System.Xml.XmlReader.Create%2A> метода. Дополнительные сведения см. в подразделе "Примечания" на справочной странице <xref:System.Xml.XmlReader>.  
  
 Это свойство позволяет пользователю получить доступ к свойствам, относящимся к указанному модулю чтения. Он возвращает типизированный `XmlReader`объект. Пользователь должен запросить тип перед приведением.  
  
 Изменение состояния возвращенного модуля чтения (например, вызов одного из методов Read) может привести к непредсказуемым результатам.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="ReadState">
      <MemberSignature Language="C#" Value="public override System.Xml.ReadState ReadState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.ReadState ReadState" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.ReadState" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ReadState As ReadState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::ReadState ReadState { System::Xml::ReadState get(); };" />
      <MemberSignature Language="F#" Value="member this.ReadState : System.Xml.ReadState" Usage="System.Xml.XmlValidatingReader.ReadState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.ReadState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает состояние средства чтения.</summary>
        <value>Одно из значений <see cref="T:System.Xml.ReadState" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Класс является устаревшим в [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]. <xref:System.Xml.XmlValidatingReader> Проверяющий <xref:System.Xml.XmlReader> экземпляр можно создать с <xref:System.Xml.XmlReaderSettings> помощью класса и <xref:System.Xml.XmlReader.Create%2A> метода. Дополнительные сведения см. в подразделе "Примечания" на справочной странице <xref:System.Xml.XmlReader>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="ReadString">
      <MemberSignature Language="C#" Value="public override string ReadString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ReadString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlValidatingReader.ReadString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ReadString();" />
      <MemberSignature Language="F#" Value="override this.ReadString : unit -&gt; string" Usage="xmlValidatingReader.ReadString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Считывает содержимое элемента или текстового узла в виде строки.</summary>
        <returns>Содержимое элемента или текстового узла. Если средство чтения позиционировано не на элемент или текстовый узел, а также если отсутствует возвращаемый текст, это может быть пустая строка.  
  
 <block subset="none" type="note"><para>  
 Текстовым узлом может быть элемент или текстовой узел атрибута.  
  
</para></block></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Класс является устаревшим в [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]. <xref:System.Xml.XmlValidatingReader> Проверяющий <xref:System.Xml.XmlReader> экземпляр можно создать с <xref:System.Xml.XmlReaderSettings> помощью класса и <xref:System.Xml.XmlReader.Create%2A> метода. Дополнительные сведения см. в подразделе "Примечания" на справочной странице <xref:System.Xml.XmlReader>.  
  
 Если элемент размещается на элементе `ReadString` , объединяет весь текст, значимые пробелы, пробелы и типы узлов раздела CDATA и возвращает объединенные данные в качестве содержимого элемента. Модуль чтения останавливается при обнаружении разметки, включая комментарии и инструкции по обработке. Это может случиться в модели смешанного содержимого или во время считывания закрывающего тега элемента.  
  
 Если позиционируется на текстовом узле, `ReadString` выполняет то же объединение из текстового узла с закрывающим тегом элемента. Если модуль чтения расположен в текстовом узле атрибута, метод `ReadString` работает так же, как в случае, когда модуль чтения располагается в открывающем теге элемента, и возвращает все объединенные текстовые узлы элемента.  
  
 Свойство определяет, как `ReadString` работает следующим образом: <xref:System.Xml.XmlValidatingReader.EntityHandling%2A>  
  
|Значение|Описание|  
|-----------|-----------------|  
|ExpandEntities|Возвращает расширенный символ и общие сущности. Это значение по умолчанию.|  
|ExpandCharEntities|Возвращает текстовое содержимое до, но не включает общую ссылку на сущность. Это означает, что общая сущность вызывает остановку ReadString. Необходимо вызвать `Read` для перехода по ссылке на сущность.|  
  
   
  
## Examples  
 В следующем примере выводится текстовое содержимое каждого из элементов.  
  
 [!code-cpp[Classic WebData XmlValidatingReader.IsEmptyElement Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlValidatingReader.IsEmptyElement Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlValidatingReader.IsEmptyElement Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlValidatingReader.IsEmptyElement Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlValidatingReader.IsEmptyElement Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlValidatingReader.IsEmptyElement Example/VB/source.vb#1)]  
  
 В этом примере в качестве входных данных используется файл `elems.xml`.  
  
 [!code-xml[Classic WebData XmlValidatingReader.IsEmptyElement Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlValidatingReader.IsEmptyElement Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="ReadTypedValue">
      <MemberSignature Language="C#" Value="public object ReadTypedValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ReadTypedValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlValidatingReader.ReadTypedValue" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadTypedValue () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ReadTypedValue();" />
      <MemberSignature Language="F#" Value="member this.ReadTypedValue : unit -&gt; obj" Usage="xmlValidatingReader.ReadTypedValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает тип CLR для указанного типа языка определения схем XML (XSD).</summary>
        <returns>Тип CLR для указанного типа XSD.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Класс является устаревшим в [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]. <xref:System.Xml.XmlValidatingReader> Проверяющий <xref:System.Xml.XmlReader> экземпляр можно создать с <xref:System.Xml.XmlReaderSettings> помощью класса и <xref:System.Xml.XmlReader.Create%2A> метода. Дополнительные сведения см. в подразделе "Примечания" на справочной странице <xref:System.Xml.XmlReader>.  
  
 Например, если тип схемы определен как `xsd:int`, для объекта возвращается тип `int32` среды выполнения. Это можно проверить с помощью <xref:System.Object.GetType%2A> метода и приведения соответствующим образом. Метод всегда возвращает тип, производный <xref:System.Object> от класса. <xref:System.Xml.XmlValidatingReader.ReadTypedValue%2A> Он никогда не возвращает <xref:System.Object> тип.  
  
 Если средство чтения находится на атрибуте, этот метод возвращает типизированный объект среды выполнения, но не изменяет расположение средства чтения. Если модуль чтения расположен на элементе, `ReadTypedValue` считывает все узлы CDATA, Text, пробел, значащих пробелов и узлов комментариев, возвращает типизированный объект среды выполнения и позиционирует модуль чтения на закрывающий тег. Все типы, для которых нет прямого сопоставления, например `NMTOKENS`, возвращаются в виде строк.  
  
> [!NOTE]
>  Если <xref:System.Xml.XmlValidatingReader.ValidationType%2A> параметру задано значение ValidationType. None, сведения о типе данных не предоставляются из схем или определений типов документов (DTD).  
  
> [!CAUTION]
>  После вызова <xref:System.Xml.XmlValidatingReader.Close%2A>метод `ReadTypedValue` возвратит `null`.  
  
   
  
## Examples  
 В следующем примере выводятся сведения о типе для каждого элемента в XML-документе.  
  
 [!code-cpp[XmlValidatingReader.SchemaType#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlValidatingReader.SchemaType/CPP/schematype.cpp#1)]
 [!code-csharp[XmlValidatingReader.SchemaType#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlValidatingReader.SchemaType/CS/schematype.cs#1)]
 [!code-vb[XmlValidatingReader.SchemaType#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlValidatingReader.SchemaType/VB/schematype.vb#1)]  
  
 В примере используются следующие входные файлы.  
  
 `booksSchema.xml`  
  
 [!code-xml[XmlValidatingReader.SchemaType#2](~/samples/snippets/xml/VS_Snippets_Data/XmlValidatingReader.SchemaType/XML/booksschema.xml#2)]  
  
 `books.xsd`  
  
 [!code-xml[XmlValidatingReader.SchemaType#3](~/samples/snippets/xml/VS_Snippets_Data/XmlValidatingReader.SchemaType/XML/books.xsd#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="ResolveEntity">
      <MemberSignature Language="C#" Value="public override void ResolveEntity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ResolveEntity() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlValidatingReader.ResolveEntity" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ResolveEntity ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ResolveEntity();" />
      <MemberSignature Language="F#" Value="override this.ResolveEntity : unit -&gt; unit" Usage="xmlValidatingReader.ResolveEntity " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Разрешает ссылки на сущности для узлов <see langword="EntityReference" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Класс является устаревшим в [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]. <xref:System.Xml.XmlValidatingReader> Проверяющий <xref:System.Xml.XmlReader> экземпляр можно создать с <xref:System.Xml.XmlReaderSettings> помощью класса и <xref:System.Xml.XmlReader.Create%2A> метода. Дополнительные сведения см. в подразделе "Примечания" на справочной странице <xref:System.Xml.XmlReader>.  
  
 Если модуль чтения находится на `EntityReference` узле (`XmlNodeType.EntityReference`), если <xref:System.Xml.XmlValidatingReader.Read%2A> вызывается после вызова этого метода, замещающий текст сущности анализируется. После завершения замещающего текста сущности возвращается `EndEntity` узел, чтобы закрыть область ссылки на сущность.  
  
> [!NOTE]
>  Если после вызова этого метода сущность является частью значения атрибута, необходимо вызвать метод <xref:System.Xml.XmlValidatingReader.ReadAttributeValue%2A> , чтобы выполнить шаг с заходом в сущность.  
  
   
  
## Examples  
 В следующем примере используется `ResolveEntity` для расширения общей сущности.  
  
 [!code-cpp[Classic WebData XmlValidatingReader.ResolveEntity Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlValidatingReader.ResolveEntity Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlValidatingReader.ResolveEntity Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlValidatingReader.ResolveEntity Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlValidatingReader.ResolveEntity Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlValidatingReader.ResolveEntity Example/VB/source.vb#1)]  
  
 В этом примере в качестве входных данных используется файл `book1.xml`.  
  
 [!code-xml[Classic WebData XmlValidatingReader.ResolveEntity Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlValidatingReader.ResolveEntity Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Средство чтения не расположено на узле <see langword="EntityReference" />.</exception>
        <altmember cref="T:System.Xml.EntityHandling" />
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="Schemas">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaCollection Schemas { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Schema.XmlSchemaCollection Schemas" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.Schemas" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Schemas As XmlSchemaCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Schema::XmlSchemaCollection ^ Schemas { System::Xml::Schema::XmlSchemaCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Schemas : System.Xml.Schema.XmlSchemaCollection" Usage="System.Xml.XmlValidatingReader.Schemas" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает <see cref="T:System.Xml.Schema.XmlSchemaCollection" />, который будет использоваться при проверке данных.</summary>
        <value><see langword="XmlSchemaCollection" />, используемый при проверке данных.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Класс является устаревшим в [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]. <xref:System.Xml.XmlValidatingReader> Проверяющий <xref:System.Xml.XmlReader> экземпляр можно создать с <xref:System.Xml.XmlReaderSettings> помощью класса и <xref:System.Xml.XmlReader.Create%2A> метода. Дополнительные сведения см. в подразделе "Примечания" на справочной странице <xref:System.Xml.XmlReader>.  
  
 `XmlSchemaCollection` Содержит предварительно загруженные XML-схемы сокращенных данных (XDR) и XSD. Это свойство предоставляет модулю чтения доступ к кэшу схем и позволяет ему проверять, не требуя повторной загрузки схем каждый раз. Модуль чтения не добавляет ничего в `XmlSchemaCollection`.  
  
 Если включает XML-схему (XSD), которая содержит `include` элементы `import` или, ссылающиеся на другие пространства имен, то схемы для этих пространств имен загружаются только в целях проверки. `XmlSchemaCollection` Если эти схемы не были явно добавлены в коллекцию схем, они не будут доступны с помощью каких бы то ни было методов или свойств коллекции. Например, если коллекция содержит файл `a.xsd`схемы, содержащий ссылку на файл `b.xsd`схемы, необходимо добавить `b.xsd` в коллекцию схем, чтобы получить доступ к ней с помощью любого из методов или свойств коллекции.  
  
 <xref:System.Xml.Schema.XmlSchemaCollection.Add%2A?displayProperty=nameWithType> `Schemas` <xref:System.Xml.XmlValidatingReader.XmlResolver%2A?displayProperty=nameWithType> <xref:System.Xml.XmlResolver> При доступе к компоненту с помощью свойства метод использует свойство, заданное свойством. `XmlSchemaCollection`  
  
> [!NOTE]
>  Схемы должны быть добавлены `XmlSchemaCollection` в перед первым `Read` вызовом.  
  
   
  
## Examples  
 В следующем примере выполняется проверка трех XML-файлов с помощью схем, хранящихся в XmlSchemaCollection.  
  
 [!code-cpp[Classic WebData XmlValidatingReader.Schemas Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlValidatingReader.Schemas Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlValidatingReader.Schemas Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlValidatingReader.Schemas Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlValidatingReader.Schemas Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlValidatingReader.Schemas Example/VB/source.vb#1)]  
  
 В примере используются следующие пять входных файлов:  
  
 `booksSchema.xml`  
  
 [!code-xml[Classic WebData XmlValidatingReader.Schemas Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlValidatingReader.Schemas Example/XML/source.xml#2)]  
  
 `booksSchemaFail.xml`  
  
 [!code-xml[Classic WebData XmlValidatingReader.Schemas Example#3](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlValidatingReader.Schemas Example/XML/source.xml#3)]  
  
 `newbooks.xml`  
  
 [!code-xml[Classic WebData XmlValidatingReader.Schemas Example#4](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlValidatingReader.Schemas Example/XML/source.xml#4)]  
  
 `books.xsd`  
  
 [!code-xml[Classic WebData XmlValidatingReader.Schemas Example#5](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlValidatingReader.Schemas Example/XML/source.xml#5)]  
  
 `schema1.xdr`  
  
 [!code-xml[Classic WebData XmlValidatingReader.Schemas Example#6](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlValidatingReader.Schemas Example/XML/source.xml#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="SchemaType">
      <MemberSignature Language="C#" Value="public object SchemaType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SchemaType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.SchemaType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SchemaType As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ SchemaType { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SchemaType : obj" Usage="System.Xml.XmlValidatingReader.SchemaType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает объект с типом схемы.</summary>
        <value><see cref="T:System.Xml.Schema.XmlSchemaDatatype" />, <see cref="T:System.Xml.Schema.XmlSchemaSimpleType" />, или <see cref="T:System.Xml.Schema.XmlSchemaComplexType" /> в зависимости от того, является ли значение узла встроенным в язык определения схемы XML типом или определяемым пользователем типом simpleType или complexType; <see langword="null" />, если текущий узел не имеет типа схемы.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Класс является устаревшим в [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]. <xref:System.Xml.XmlValidatingReader> Проверяющий <xref:System.Xml.XmlReader> экземпляр можно создать с <xref:System.Xml.XmlReaderSettings> помощью класса и <xref:System.Xml.XmlReader.Create%2A> метода. Дополнительные сведения см. в подразделе "Примечания" на справочной странице <xref:System.Xml.XmlReader>.  
  
 Пользователь должен проверить возвращаемый тип. Например, примененная к объекту директива  
  
```csharp  
object obj = vreader.SchemaType;  
 if (obj is XmlSchemaType)  
 {  
   XmlSchemaType st = (XmlSchemaType)obj;  
   // use XmlSchemaType object  
 }  
 if (obj is XmlSchemaDatatype)  
 {  
   XmlSchemaDatatype sd = (XmlSchemaDatatype)obj;  
   Type vt = sd.ValueType;  
   // use XmlSchemaDatatype object  
       }  
```  
  
 Если выполняется проверка схемы XML, `XmlSchemaType` или `XmlSchemaDatatype` соответствует текущему элементу, который считывается. Если выполняется определение типа документа (проверка DTD), это свойство возвращает `null`значение.  
  
 `XmlSchemaDatatype`возвращается, если текущий элемент или атрибут является простым типом, который может задавать особые ограничения проверки для простых типов, таких как min и Max.  
  
 `XmlSchemaSimpleType`возвращается, если текущий элемент, или атрибут, является определяемым пользователем элементом simpleType.  
  
 `XmlSchemaComplexType`возвращается, если текущий элемент является определяемым пользователем complexType. Этот тип не может возвращаться атрибутами.  
  
> [!NOTE]
>  Если <xref:System.Xml.XmlValidatingReader.ValidationType%2A> параметру задано значение ValidationType. None, сведения о типе данных не предоставляются ни из одной из схем, ни DTD.  
  
> [!CAUTION]
>  После вызова <xref:System.Xml.XmlValidatingReader.Close%2A>SchemaType вернет значение null.  
  
   
  
## Examples  
 В следующем примере выводятся сведения о типе для каждого элемента в XML-документе.  
  
 [!code-cpp[XmlValidatingReader.SchemaType#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlValidatingReader.SchemaType/CPP/schematype.cpp#1)]
 [!code-csharp[XmlValidatingReader.SchemaType#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlValidatingReader.SchemaType/CS/schematype.cs#1)]
 [!code-vb[XmlValidatingReader.SchemaType#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlValidatingReader.SchemaType/VB/schematype.vb#1)]  
  
 В примере используются следующие входные файлы.  
  
 `booksSchema.xml`  
  
 [!code-xml[XmlValidatingReader.SchemaType#2](~/samples/snippets/xml/VS_Snippets_Data/XmlValidatingReader.SchemaType/XML/booksschema.xml#2)]  
  
 `books.xsd`  
  
 [!code-xml[XmlValidatingReader.SchemaType#3](~/samples/snippets/xml/VS_Snippets_Data/XmlValidatingReader.SchemaType/XML/books.xsd#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="Settings">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlReaderSettings Settings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlReaderSettings Settings" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.Settings" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Settings As XmlReaderSettings" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlReaderSettings ^ Settings { System::Xml::XmlReaderSettings ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Settings : System.Xml.XmlReaderSettings" Usage="System.Xml.XmlValidatingReader.Settings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReaderSettings</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает объект <see cref="T:System.Xml.XmlReaderSettings" />, используемый для создания этого экземпляра <see cref="T:System.Xml.XmlValidatingReader" />.</summary>
        <value>Значение <see langword="null" />, так как не создаются экземпляры объектов <see cref="T:System.Xml.XmlValidatingReader" /> с помощью класса <see cref="T:System.Xml.XmlReaderSettings" /> и метода <see cref="Overload:System.Xml.XmlReader.Create" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  

> [!NOTE]
> Класс <xref:System.Xml.XmlValidatingReader> в платформе .NET Framework версии 2.0 является устаревшим. Проверяющий <xref:System.Xml.XmlReader> экземпляр можно создать с <xref:System.Xml.XmlReaderSettings> помощью класса и <xref:System.Xml.XmlReader.Create%2A> метода. Дополнительные сведения см. в разделе [Проверка XML-данных с помощью XmlReader](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/hdf992b8(v=vs.100)).

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Xml.IXmlLineInfo.HasLineInfo">
      <MemberSignature Language="C#" Value="bool IXmlLineInfo.HasLineInfo ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Xml.IXmlLineInfo.HasLineInfo() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlValidatingReader.System#Xml#IXmlLineInfo#HasLineInfo" />
      <MemberSignature Language="VB.NET" Value="Function HasLineInfo () As Boolean Implements IXmlLineInfo.HasLineInfo" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Xml.IXmlLineInfo.HasLineInfo() = System::Xml::IXmlLineInfo::HasLineInfo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Xml.IXmlLineInfo.HasLineInfo</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает значение, определяющее возможность возвращения классом сведений о строке.</summary>
        <returns>Значение <see langword="true" />, если могут быть предоставлены свойства <see cref="P:System.Xml.IXmlLineInfo.LineNumber" /> и <see cref="P:System.Xml.IXmlLineInfo.LinePosition" />, в противном случае — <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Xml.IXmlNamespaceResolver.GetNamespacesInScope">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IDictionary&lt;string,string&gt; IXmlNamespaceResolver.GetNamespacesInScope (System.Xml.XmlNamespaceScope scope);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Generic.IDictionary`2&lt;string, string&gt; System.Xml.IXmlNamespaceResolver.GetNamespacesInScope(valuetype System.Xml.XmlNamespaceScope scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlValidatingReader.System#Xml#IXmlNamespaceResolver#GetNamespacesInScope(System.Xml.XmlNamespaceScope)" />
      <MemberSignature Language="VB.NET" Value="Function GetNamespacesInScope (scope As XmlNamespaceScope) As IDictionary(Of String, String) Implements IXmlNamespaceResolver.GetNamespacesInScope" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ System.Xml.IXmlNamespaceResolver.GetNamespacesInScope(System::Xml::XmlNamespaceScope scope) = System::Xml::IXmlNamespaceResolver::GetNamespacesInScope;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Xml.IXmlNamespaceResolver.GetNamespacesInScope(System.Xml.XmlNamespaceScope)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="System.Xml.XmlNamespaceScope" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="scope">Объект <see cref="T:System.Xml.XmlNamespaceScope" />, определяющий область действия средства чтения.</param>
        <summary>Описание этого члена см. в разделе <see cref="M:System.Xml.IXmlNamespaceResolver.GetNamespacesInScope(System.Xml.XmlNamespaceScope)" />.</summary>
        <returns>Объект T:System.Collections.IDictionary, определяющий пространства имен в области видимости.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот член представляет собой явную реализацию члена интерфейса. Он может использоваться, только если экземпляр <xref:System.Xml.XmlValidatingReader> приведен к типу интерфейса <xref:System.Xml.IXmlNamespaceResolver>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Xml.IXmlNamespaceResolver.LookupNamespace">
      <MemberSignature Language="C#" Value="string IXmlNamespaceResolver.LookupNamespace (string prefix);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.Xml.IXmlNamespaceResolver.LookupNamespace(string prefix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlValidatingReader.System#Xml#IXmlNamespaceResolver#LookupNamespace(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function LookupNamespace (prefix As String) As String Implements IXmlNamespaceResolver.LookupNamespace" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.Xml.IXmlNamespaceResolver.LookupNamespace(System::String ^ prefix) = System::Xml::IXmlNamespaceResolver::LookupNamespace;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Xml.IXmlNamespaceResolver.LookupNamespace(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="prefix">Префикс пространства имен.</param>
        <summary>Описание этого члена см. в разделе <see cref="M:System.Xml.IXmlNamespaceResolver.LookupNamespace(System.String)" />.</summary>
        <returns>Строковое значение, содержащее универсальный код ресурса (URI) пространства имен, связанный с данным префиксом.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот член представляет собой явную реализацию члена интерфейса. Он может использоваться, только если экземпляр <xref:System.Xml.XmlValidatingReader> приведен к типу интерфейса <xref:System.Xml.IXmlNamespaceResolver>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="System.Xml.IXmlNamespaceResolver.LookupPrefix">
      <MemberSignature Language="C#" Value="string IXmlNamespaceResolver.LookupPrefix (string namespaceName);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.Xml.IXmlNamespaceResolver.LookupPrefix(string namespaceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlValidatingReader.System#Xml#IXmlNamespaceResolver#LookupPrefix(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function LookupPrefix (namespaceName As String) As String Implements IXmlNamespaceResolver.LookupPrefix" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.Xml.IXmlNamespaceResolver.LookupPrefix(System::String ^ namespaceName) = System::Xml::IXmlNamespaceResolver::LookupPrefix;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Xml.IXmlNamespaceResolver.LookupPrefix(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="namespaceName" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="namespaceName">Пространство имен, связанное с префиксом.</param>
        <summary>Описание этого члена см. в разделе <see cref="M:System.Xml.IXmlNamespaceResolver.LookupPrefix(System.String)" />.</summary>
        <returns>Строковое значение, содержащее префикс пространства имен, связанный со значением <paramref name="namespaceName" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот член представляет собой явную реализацию члена интерфейса. Он может использоваться, только если экземпляр <xref:System.Xml.XmlValidatingReader> приведен к типу интерфейса <xref:System.Xml.IXmlNamespaceResolver>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidationEventHandler">
      <MemberSignature Language="C#" Value="public event System.Xml.Schema.ValidationEventHandler ValidationEventHandler;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Xml.Schema.ValidationEventHandler ValidationEventHandler" />
      <MemberSignature Language="DocId" Value="E:System.Xml.XmlValidatingReader.ValidationEventHandler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Xml::Schema::ValidationEventHandler ^ ValidationEventHandler;" />
      <MemberSignature Language="F#" Value="member this.ValidationEventHandler : System.Xml.Schema.ValidationEventHandler " Usage="member this.ValidationEventHandler : System.Xml.Schema.ValidationEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.ValidationEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Задает обработчик событий для получения сведений об ошибках проверки DTD, XDR- и XSD-схем.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Класс является устаревшим в [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]. <xref:System.Xml.XmlValidatingReader> Проверяющий <xref:System.Xml.XmlReader> экземпляр можно создать с <xref:System.Xml.XmlReaderSettings> помощью класса и <xref:System.Xml.XmlReader.Create%2A> метода. Дополнительные сведения см. в подразделе "Примечания" на справочной странице <xref:System.Xml.XmlReader>.  
  
 Эти события происходят во <xref:System.Xml.XmlValidatingReader.Read%2A> время и только в <xref:System.Xml.XmlValidatingReader.ValidationType%2A> том случае, если задано значение DTD, XDR, Schema или Auto.  
  
 Если обработчик событий не предоставлен, <xref:System.Xml.XmlException> при первой ошибке проверки создается исключение (серьезность равно ксмлсеверититипе. Error).  
  
> [!NOTE]
>  Если элемент сообщает об ошибке проверки, остальная часть модели содержимого для этого элемента не проверяется, однако его дочерние элементы проверяются. Модуль чтения сообщает только о первой ошибке для данного элемента.  
  
 Обработчик обратного вызова может использовать <xref:System.Xml.Schema.ValidationEventArgs.Severity%2A?displayProperty=nameWithType> свойство, чтобы гарантировать, что экземпляр XML-документа будет проверен на соответствие схеме. `Severity` Свойство позволяет различать ошибки проверки (серьезность равно ксмлсеверититипе. Error), указывающую на неустранимую ошибку, и предупреждения проверки (серьезность равно ксмлсеверититипе. Warning), указывающая на отсутствие схемы информация доступна.  
  
   
  
## Examples  
 В следующем примере выполняется проверка файла на соответствие схеме XML.  
  
 [!code-cpp[Classic WebData XmlValidatingReader.ValidationEventHandler Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlValidatingReader.ValidationEventHandler Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlValidatingReader.ValidationEventHandler Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlValidatingReader.ValidationEventHandler Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlValidatingReader.ValidationEventHandler Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlValidatingReader.ValidationEventHandler Example/VB/source.vb#1)]  
  
 В образце используются следующие два входных файла:  
  
 `notValidXSD.xml``xsi:schemaLocation` (Атрибут определяет схему XML для модуля чтения.)  
  
 [!code-xml[Classic WebData XmlValidatingReader.ValidationEventHandler Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlValidatingReader.ValidationEventHandler Example/XML/source.xml#2)]  
  
 `books.xsd`  
  
 [!code-xml[Classic WebData XmlValidatingReader.ValidationEventHandler Example#3](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlValidatingReader.ValidationEventHandler Example/XML/source.xml#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Schema.XmlSeverityType" />
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="ValidationType">
      <MemberSignature Language="C#" Value="public System.Xml.ValidationType ValidationType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.ValidationType ValidationType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.ValidationType" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidationType As ValidationType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::ValidationType ValidationType { System::Xml::ValidationType get(); void set(System::Xml::ValidationType value); };" />
      <MemberSignature Language="F#" Value="member this.ValidationType : System.Xml.ValidationType with get, set" Usage="System.Xml.XmlValidatingReader.ValidationType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.ValidationType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, указывающее тип выполняемой проверки.</summary>
        <value>Одно из значений <see cref="T:System.Xml.ValidationType" />. Если это свойство не задано, то по умолчанию используется тип ValidationType.Auto.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Класс является устаревшим в [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]. <xref:System.Xml.XmlValidatingReader> Проверяющий <xref:System.Xml.XmlReader> экземпляр можно создать с <xref:System.Xml.XmlReaderSettings> помощью класса и <xref:System.Xml.XmlReader.Create%2A> метода. Дополнительные сведения см. в подразделе "Примечания" на справочной странице <xref:System.Xml.XmlReader>.  
  
 Это свойство должно быть установлено перед первым вызовом метода <xref:System.Xml.XmlValidatingReader.Read%2A>. Присвоение этому свойству значения ValidationType. None создает модуль чтения без проверки.  
  
 Если для проверки необходимы определения типа внешних документов (DTD) или схемы, <xref:System.Xml.XmlResolver> используется.  
  
   
  
## Examples  
 В следующем примере выполняется проверка двух файлов.  
  
 [!code-cpp[Classic WebData XmlValidatingReader.ValidationType Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlValidatingReader.ValidationType Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlValidatingReader.ValidationType Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlValidatingReader.ValidationType Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlValidatingReader.ValidationType Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlValidatingReader.ValidationType Example/VB/source.vb#1)]  
  
 В примере используются следующие четыре входных файла:  
  
 `notValid.xml`(Префикс x-schema: определяет схему XDR для средства чтения.)  
  
 [!code-xml[Classic WebData XmlValidatingReader.ValidationType Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlValidatingReader.ValidationType Example/XML/source.xml#2)]  
  
 `schema1.xdr`  
  
 [!code-xml[Classic WebData XmlValidatingReader.ValidationType Example#3](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlValidatingReader.ValidationType Example/XML/source.xml#3)]  
  
 `cdDTD.xml`  
  
 [!code-xml[Classic WebData XmlValidatingReader.ValidationType Example#4](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlValidatingReader.ValidationType Example/XML/source.xml#4)]  
  
 `book1.xml`  
  
 [!code-xml[Classic WebData XmlValidatingReader.ValidationType Example#5](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlValidatingReader.ValidationType Example/XML/source.xml#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Задает значение свойства после вызова Read.</exception>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public override string Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Value" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.Value" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Value As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Value { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Value : string" Usage="System.Xml.XmlValidatingReader.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает текстовое значение текущего узла.</summary>
        <value>Возвращаемое значение зависит от значения свойства <see cref="P:System.Xml.XmlValidatingReader.NodeType" /> узла. В следующей таблице представлен список возвращаемых типов узлов со значениями. Другие типы узлов возвращают String.Empty.  
  
 <list type="table"><listheader><term> Тип узла 
 </term><description> Значение 
 </description></listheader><item><term><see langword="Attribute" /></term><description> Значение атрибута.  
  
 </description></item><item><term><see langword="CDATA" /></term><description> Содержимое раздела CDATA.  
  
 </description></item><item><term><see langword="Comment" /></term><description> Содержимое комментария.  
  
 </description></item><item><term><see langword="DocumentType" /></term><description> Внутреннее подмножество.  
  
 </description></item><item><term><see langword="ProcessingInstruction" /></term><description> Все содержимое, за исключением цели.  
  
 </description></item><item><term><see langword="SignificantWhitespace" /></term><description> Пустое пространство в разметке модели со смешанным содержимым.  
  
 </description></item><item><term><see langword="Text" /></term><description> Содержимое текстового узла.  
  
 </description></item><item><term><see langword="Whitespace" /></term><description> Пробелы между разметкой.  
  
 </description></item><item><term><see langword="XmlDeclaration" /></term><description> Содержимое декларации.  
  
 </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Класс является устаревшим в [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]. <xref:System.Xml.XmlValidatingReader> Проверяющий <xref:System.Xml.XmlReader> экземпляр можно создать с <xref:System.Xml.XmlReaderSettings> помощью класса и <xref:System.Xml.XmlReader.Create%2A> метода. Дополнительные сведения см. в подразделе "Примечания" на справочной странице <xref:System.Xml.XmlReader>.  
  
   
  
## Examples  
 В следующем примере считывается XML-файл и отображается каждый узел.  
  
 [!code-cpp[Classic WebData XmlValidatingReader.Name Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlValidatingReader.Name Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlValidatingReader.Name Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlValidatingReader.Name Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlValidatingReader.Name Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlValidatingReader.Name Example/VB/source.vb#1)]  
  
 В этом примере в качестве входных данных используется файл `items.xml`.  
  
 [!code-xml[Classic WebData XmlValidatingReader.Name Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlValidatingReader.Name Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="XmlLang">
      <MemberSignature Language="C#" Value="public override string XmlLang { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string XmlLang" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.XmlLang" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property XmlLang As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ XmlLang { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.XmlLang : string" Usage="System.Xml.XmlValidatingReader.XmlLang" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает текущую область действия <see langword="xml:lang" />.</summary>
        <value>Текущая область действия <see langword="xml:lang" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Класс является устаревшим в [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]. <xref:System.Xml.XmlValidatingReader> Проверяющий <xref:System.Xml.XmlReader> экземпляр можно создать с <xref:System.Xml.XmlReaderSettings> помощью класса и <xref:System.Xml.XmlReader.Create%2A> метода. Дополнительные сведения см. в подразделе "Примечания" на справочной странице <xref:System.Xml.XmlReader>.  
  
 Это свойство представляет область XML: lang, в которой находится текущий узел. Например, ниже приведен фрагмент XML с `xml:lang` установленным на американском языке Английский в корневом элементе:  
  
```xml  
<root xml:lang="en-us">   
<name>Fred</name>   
</root>   
```  
  
 Если средство чтения находится на `name` элементе, можно использовать это свойство, чтобы определить, что оно находится в области США. Атрибут `xml:lang` на английском языке.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="XmlResolver">
      <MemberSignature Language="C#" Value="public System.Xml.XmlResolver XmlResolver { set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlResolver XmlResolver" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.XmlResolver" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlResolver As XmlResolver" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlResolver ^ XmlResolver {  void set(System::Xml::XmlResolver ^ value); };" />
      <MemberSignature Language="F#" Value="member this.XmlResolver : System.Xml.XmlResolver" Usage="System.Xml.XmlValidatingReader.XmlResolver" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlResolver</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Задает <see cref="T:System.Xml.XmlResolver" /> для разрешения внешних DTD и ссылок на расположение схем. Кроме того, <see langword="XmlResolver" /> используется для обработки любых импортированных или добавленных элементов, найденных в XSD-схемах.</summary>
        <value>Используемый <see langword="XmlResolver" />. Если он имеет значение <see langword="null" />, внешние ресурсы не разрешаются.  
  
В [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] версии 1.1 вызывающий объект должен иметь полное доверие, чтобы иметь возможность указывать <see langword="XmlResolver" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Класс является устаревшим в [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]. <xref:System.Xml.XmlValidatingReader> Проверяющий <xref:System.Xml.XmlReader> экземпляр можно создать с <xref:System.Xml.XmlReaderSettings> помощью класса и <xref:System.Xml.XmlReader.Create%2A> метода. Дополнительные сведения см. в подразделе "Примечания" на справочной странице <xref:System.Xml.XmlReader>.  
  
 `XmlResolver` Используется для загрузки DTD, сущностей или схем, необходимых для завершения процесса проверки.  
  
 Это свойство может быть задано в любое время и вступает в силу после <xref:System.Xml.XmlValidatingReader.Read%2A> следующего вызова. Если для `null`этого свойства задано значение, читатель считает, что пользователь не заинтересован в разрешении внешних ссылок. В этом случае читатель проверяет только внутренние ресурсы, если он имеется.  
  
 В версии 1,1 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] , если это свойство не задано, уровень доверия приложения определяет поведение по умолчанию.  
  
 `Fully trusted code:`Средство чтения использует значение по <xref:System.Xml.XmlUrlResolver> умолчанию без учетных данных пользователя. Если для доступа к сетевому ресурсу требуется проверка подлинности, используйте `XmlResolver` свойство, чтобы `XmlResolver` указать необходимые учетные данные.  
  
 `Semi-trusted code:``XmlResolver` Свойство имеет `null`значение. Внешние ресурсы не разрешаются.  
  
 При проверке с помощью схем можно избежать дорогостоящего процесса загрузки, предоставив <xref:System.Xml.Schema.XmlSchemaCollection> <xref:System.Xml.XmlValidatingReader.Schemas%2A> использование свойства.  
  
   
  
## Examples  
 В следующем примере `XmlResolver` свойство используется для указания учетных данных, необходимых для доступа к сетевому DTD файл.  
  
 [!code-cpp[XmlValidatingReader.XmlResolver#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlValidatingReader.XmlResolver/CPP/vrdr_resolver.cpp#1)]
 [!code-csharp[XmlValidatingReader.XmlResolver#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlValidatingReader.XmlResolver/CS/vrdr_resolver.cs#1)]
 [!code-vb[XmlValidatingReader.XmlResolver#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlValidatingReader.XmlResolver/VB/vrdr_resolver.vb#1)]  
  
 В этом примере в качестве входных данных используются следующие файлы.  
  
 `book5.xml`  
  
 [!code-xml[XmlValidatingReader.XmlResolver#2](~/samples/snippets/xml/VS_Snippets_Data/XmlValidatingReader.XmlResolver/XML/book5.xml#2)]  
  
 `books.dtd`  
  
 [!code-xml[XmlValidatingReader.XmlResolver#3](~/samples/snippets/xml/VS_Snippets_Data/XmlValidatingReader.XmlResolver/XML/books.dtd#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xml.XmlUrlResolver.Credentials" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Net.NetworkCredential" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
    <Member MemberName="XmlSpace">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlSpace XmlSpace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.XmlSpace XmlSpace" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlValidatingReader.XmlSpace" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property XmlSpace As XmlSpace" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlSpace XmlSpace { System::Xml::XmlSpace get(); };" />
      <MemberSignature Language="F#" Value="member this.XmlSpace : System.Xml.XmlSpace" Usage="System.Xml.XmlValidatingReader.XmlSpace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlSpace</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает текущую область действия <see langword="xml:space" />.</summary>
        <value>Одно из значений перечисления <see cref="T:System.Xml.XmlSpace" />. Если область действия <see langword="xml:space" /> отсутствует, данное свойство принимает значение <see langword="XmlSpace.None" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Класс является устаревшим в [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]. <xref:System.Xml.XmlValidatingReader> Проверяющий <xref:System.Xml.XmlReader> экземпляр можно создать с <xref:System.Xml.XmlReaderSettings> помощью класса и <xref:System.Xml.XmlReader.Create%2A> метода. Дополнительные сведения см. в подразделе "Примечания" на справочной странице <xref:System.Xml.XmlReader>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
      </Docs>
    </Member>
  </Members>
</Type>