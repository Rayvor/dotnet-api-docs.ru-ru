<Type Name="XmlDataDocument" FullName="System.Xml.XmlDataDocument">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a4b70d5401a16fe4376b323472deb863f016a788" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70626956" /></Metadata><TypeSignature Language="C#" Value="public class XmlDataDocument : System.Xml.XmlDocument" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlDataDocument extends System.Xml.XmlDocument" />
  <TypeSignature Language="DocId" Value="T:System.Xml.XmlDataDocument" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlDataDocument&#xA;Inherits XmlDocument" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlDataDocument : System::Xml::XmlDocument" />
  <TypeSignature Language="F#" Value="type XmlDataDocument = class&#xA;    inherit XmlDocument" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Xml.XmlDocument</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-3.0">
      <AttributeName>System.Obsolete("XmlDataDocument class will be removed in a future release.")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="6bbf1-101">Обеспечивает хранение, получение и управление структурированными данными с использованием реляционного объекта <see cref="T:System.Data.DataSet" />.</span><span class="sxs-lookup"><span data-stu-id="6bbf1-101">Allows structured data to be stored, retrieved, and manipulated through a relational <see cref="T:System.Data.DataSet" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6bbf1-102">Этот класс расширяет <xref:System.Xml.XmlDocument>.</span><span class="sxs-lookup"><span data-stu-id="6bbf1-102">This class extends <xref:System.Xml.XmlDocument>.</span></span> <span data-ttu-id="6bbf1-103">Он позволяет загружать реляционные данные или XML-данные и манипулировать этими данными с помощью консорциум W3C (W3C) модель DOM (DOM).</span><span class="sxs-lookup"><span data-stu-id="6bbf1-103">It enables you to load either relational data or XML data and manipulate that data using the World Wide Web Consortium (W3C) Document Object Model (DOM).</span></span> <span data-ttu-id="6bbf1-104">Модель DOM представляет данные в виде иерархии объектов Node.</span><span class="sxs-lookup"><span data-stu-id="6bbf1-104">The DOM presents data as a hierarchy of node objects.</span></span> <span data-ttu-id="6bbf1-105">Поскольку `XmlDataDocument` <xref:System.Xml.Xsl.XslTransform> реализует интерфейс, его также можно использовать в качестве исходного документа для класса. <xref:System.Xml.XPath.IXPathNavigable></span><span class="sxs-lookup"><span data-stu-id="6bbf1-105">Because `XmlDataDocument` implements the <xref:System.Xml.XPath.IXPathNavigable> interface, it can also be used as the source document for the <xref:System.Xml.Xsl.XslTransform> class.</span></span>  
  
 <span data-ttu-id="6bbf1-106">`XmlDataDocument`имеет замкнутую принадлежность `DataSet` к классу, который предоставляет реляционное представление загруженных XML-данных.</span><span class="sxs-lookup"><span data-stu-id="6bbf1-106">`XmlDataDocument` has a close affiliation with the `DataSet` class, which provides a relational view of the loaded XML data.</span></span> <span data-ttu-id="6bbf1-107">Любые изменения, внесенные `XmlDataDocument` в, отражаются `DataSet` в и обратно.</span><span class="sxs-lookup"><span data-stu-id="6bbf1-107">Any changes made to the `XmlDataDocument` are reflected in the `DataSet` and vice versa.</span></span>  
  
 <span data-ttu-id="6bbf1-108">Чтобы загрузить `DataSet` с XML-данными, используйте <xref:System.Data.DataSet.ReadXmlSchema%2A> для построения реляционного сопоставления.</span><span class="sxs-lookup"><span data-stu-id="6bbf1-108">To load a `DataSet` with XML data, use <xref:System.Data.DataSet.ReadXmlSchema%2A> to build a relational mapping.</span></span> <span data-ttu-id="6bbf1-109">Затем XML-данные можно загрузить с помощью <xref:System.Xml.XmlDataDocument.Load%2A> или <xref:System.Xml.XmlDocument.LoadXml%2A>.</span><span class="sxs-lookup"><span data-stu-id="6bbf1-109">The XML data can then be loaded using <xref:System.Xml.XmlDataDocument.Load%2A> or <xref:System.Xml.XmlDocument.LoadXml%2A>.</span></span>  
  
 <span data-ttu-id="6bbf1-110">Чтобы загрузить реляционные данные, укажите объект `DataSet` , содержащий реляционные данные, в качестве параметра <xref:System.Xml.XmlDataDocument.%23ctor%2A> в конструкторе.</span><span class="sxs-lookup"><span data-stu-id="6bbf1-110">To load relational data, specify the `DataSet` containing the relational data as the parameter in the <xref:System.Xml.XmlDataDocument.%23ctor%2A> constructor.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="6bbf1-111">Инициализирует новый экземпляр класса <see cref="T:System.Xml.XmlDataDocument" />.</span><span class="sxs-lookup"><span data-stu-id="6bbf1-111">Initializes a new instance of the <see cref="T:System.Xml.XmlDataDocument" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlDataDocument ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDataDocument.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlDataDocument();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6bbf1-112">Инициализирует новый экземпляр класса <see cref="T:System.Xml.XmlDataDocument" />.</span><span class="sxs-lookup"><span data-stu-id="6bbf1-112">Initializes a new instance of the <see cref="T:System.Xml.XmlDataDocument" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6bbf1-113">Создается пустой <xref:System.Data.DataSet> объект, связанный `XmlDataDocument`с.</span><span class="sxs-lookup"><span data-stu-id="6bbf1-113">An empty <xref:System.Data.DataSet> is created and associated with the `XmlDataDocument`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlDataDocument (System.Data.DataSet dataset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.DataSet dataset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDataDocument.#ctor(System.Data.DataSet)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlDataDocument(System::Data::DataSet ^ dataset);" />
      <MemberSignature Language="F#" Value="new System.Xml.XmlDataDocument : System.Data.DataSet -&gt; System.Xml.XmlDataDocument" Usage="new System.Xml.XmlDataDocument dataset" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dataset" Type="System.Data.DataSet" />
      </Parameters>
      <Docs>
        <param name="dataset"><span data-ttu-id="6bbf1-114">Объект <see langword="DataSet" /> для загрузки в <see langword="XmlDataDocument" />.</span><span class="sxs-lookup"><span data-stu-id="6bbf1-114">The <see langword="DataSet" /> to load into <see langword="XmlDataDocument" />.</span></span></param>
        <summary><span data-ttu-id="6bbf1-115">Инициализирует новый экземпляр класса <see cref="T:System.Xml.XmlDataDocument" /> указанным значением <see cref="T:System.Data.DataSet" />.</span><span class="sxs-lookup"><span data-stu-id="6bbf1-115">Initializes a new instance of the <see cref="T:System.Xml.XmlDataDocument" /> class with the specified <see cref="T:System.Data.DataSet" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6bbf1-116">Объект `XmlDataDocument` синхронизируется с указанным `DataSet`.</span><span class="sxs-lookup"><span data-stu-id="6bbf1-116">The `XmlDataDocument` is synchronized with the specified `DataSet`.</span></span> <span data-ttu-id="6bbf1-117">Все данные в `DataSet` доступны сразу же `XmlDataDocument`через.</span><span class="sxs-lookup"><span data-stu-id="6bbf1-117">Any data in the `DataSet` is immediately available through the `XmlDataDocument`.</span></span> <span data-ttu-id="6bbf1-118">Все изменения в `DataSet` передаются `XmlDataDocument`в.</span><span class="sxs-lookup"><span data-stu-id="6bbf1-118">Any changes in the `DataSet` are propagated in the `XmlDataDocument`.</span></span> <span data-ttu-id="6bbf1-119">Любые изменения `XmlDataDocument`, внесенные в, если они `DataSet` соответствуют схеме, распространяются в `DataSet`.</span><span class="sxs-lookup"><span data-stu-id="6bbf1-119">Any changes made in the `XmlDataDocument`, provided they match the `DataSet` schema, are propagated in the `DataSet`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6bbf1-120">В следующем примере таблица Customer загружается в `XmlDataDocument`.</span><span class="sxs-lookup"><span data-stu-id="6bbf1-120">The following example loads a customer table into an `XmlDataDocument`.</span></span>  
  
 <span data-ttu-id="6bbf1-121">В примере используется база данных Northwind SQL Server 2000.</span><span class="sxs-lookup"><span data-stu-id="6bbf1-121">The example uses the SQL Server 2000 Northwind database.</span></span>  
  
 [!code-cpp[Classic WebData XmlDataDocument.XmlDataDocument1 Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDataDocument.XmlDataDocument1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDataDocument.XmlDataDocument1 Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDataDocument.XmlDataDocument1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDataDocument.XmlDataDocument1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDataDocument.XmlDataDocument1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Data.SqlClient.SqlConnection" />
        <altmember cref="T:System.Data.SqlClient.SqlDataAdapter" />
      </Docs>
    </Member>
    <Member MemberName="CloneNode">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlNode CloneNode (bool deep);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Xml.XmlNode CloneNode(bool deep) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDataDocument.CloneNode(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CloneNode (deep As Boolean) As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Xml::XmlNode ^ CloneNode(bool deep);" />
      <MemberSignature Language="F#" Value="override this.CloneNode : bool -&gt; System.Xml.XmlNode" Usage="xmlDataDocument.CloneNode deep" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deep" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="deep"><span data-ttu-id="6bbf1-122">Значение <see langword="true" /> для рекурсивного клонирования поддерева указанного узла; значение <see langword="false" /> для клонирования только самого узла.</span><span class="sxs-lookup"><span data-stu-id="6bbf1-122"><see langword="true" /> to recursively clone the subtree under the specified node; <see langword="false" /> to clone only the node itself.</span></span></param>
        <summary><span data-ttu-id="6bbf1-123">Создает дубликат текущего узла.</span><span class="sxs-lookup"><span data-stu-id="6bbf1-123">Creates a duplicate of the current node.</span></span></summary>
        <returns><span data-ttu-id="6bbf1-124">Точная копия узла.</span><span class="sxs-lookup"><span data-stu-id="6bbf1-124">The cloned node.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6bbf1-125">При клонировании <xref:System.Data.DataSet> также создается клон схемы. `XmlDataDocument`</span><span class="sxs-lookup"><span data-stu-id="6bbf1-125">Cloning the `XmlDataDocument` also clones the <xref:System.Data.DataSet> schema.</span></span>  
  
 <span data-ttu-id="6bbf1-126">Если `deep` параметр имеет `false`значение, клонированный `DataSet` объект не имеет данных, то есть не содержит строк.</span><span class="sxs-lookup"><span data-stu-id="6bbf1-126">If `deep` is set to `false`, the cloned `DataSet` has no data; that is, no rows.</span></span>  
  
 <span data-ttu-id="6bbf1-127">Если `deep` параметр имеет `true`значение, клонированный `DataSet` объект задается схемой и заполняется данными.</span><span class="sxs-lookup"><span data-stu-id="6bbf1-127">If `deep` is set to `true`, the cloned `DataSet` is set with the schema and then populated with the data.</span></span>  
  
 <span data-ttu-id="6bbf1-128">См <xref:System.Xml.XmlNode.CloneNode%2A> . `XmlNode`  в разделе класс, чтобы просмотреть таблицу, описывающую работу этого метода с каждым из различных типов узлов.</span><span class="sxs-lookup"><span data-stu-id="6bbf1-128">See <xref:System.Xml.XmlNode.CloneNode%2A> in the `XmlNode` class to see a table describing how this method behaves with each of the different node types.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6bbf1-129">В следующем примере загружается `DataSet` `XmlDataDocument` в, а затем создается поверхностный клон `XmlDataDocument`.</span><span class="sxs-lookup"><span data-stu-id="6bbf1-129">The following example loads a `DataSet` into an `XmlDataDocument` and then creates a shallow clone of the `XmlDataDocument`.</span></span>  
  
 <span data-ttu-id="6bbf1-130">В примере используется база данных Northwind SQL Server 2000.</span><span class="sxs-lookup"><span data-stu-id="6bbf1-130">The example uses the SQL Server 2000 Northwind database.</span></span>  
  
 [!code-cpp[Classic WebData XmlDataDocument.CloneNode Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDataDocument.CloneNode Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDataDocument.CloneNode Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDataDocument.CloneNode Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDataDocument.CloneNode Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDataDocument.CloneNode Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateElement">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlElement CreateElement (string prefix, string localName, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Xml.XmlElement CreateElement(string prefix, string localName, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDataDocument.CreateElement(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateElement (prefix As String, localName As String, namespaceURI As String) As XmlElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Xml::XmlElement ^ CreateElement(System::String ^ prefix, System::String ^ localName, System::String ^ namespaceURI);" />
      <MemberSignature Language="F#" Value="override this.CreateElement : string * string * string -&gt; System.Xml.XmlElement" Usage="xmlDataDocument.CreateElement (prefix, localName, namespaceURI)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix"><span data-ttu-id="6bbf1-131">Префикс нового элемента.</span><span class="sxs-lookup"><span data-stu-id="6bbf1-131">The prefix of the new element.</span></span> <span data-ttu-id="6bbf1-132">Если значение String.Empty или <see langword="null" />, префикс отсутствует.</span><span class="sxs-lookup"><span data-stu-id="6bbf1-132">If String.Empty or <see langword="null" />, there is no prefix.</span></span></param>
        <param name="localName"><span data-ttu-id="6bbf1-133">Локальное имя нового элемента.</span><span class="sxs-lookup"><span data-stu-id="6bbf1-133">The local name of the new element.</span></span></param>
        <param name="namespaceURI"><span data-ttu-id="6bbf1-134">Уникальный код ресурса пространства имен нового элемента.</span><span class="sxs-lookup"><span data-stu-id="6bbf1-134">The namespace Uniform Resource Identifier (URI) of the new element.</span></span> <span data-ttu-id="6bbf1-135">Если значение String.Empty или <see langword="null" />, URI пространства имен отсутствует.</span><span class="sxs-lookup"><span data-stu-id="6bbf1-135">If String.Empty or <see langword="null" />, there is no namespaceURI.</span></span></param>
        <summary><span data-ttu-id="6bbf1-136">Создает элемент с помощью указанных <see cref="P:System.Xml.XmlNode.Prefix" />, <see cref="P:System.Xml.XmlDocument.LocalName" /> и <see cref="P:System.Xml.XmlNode.NamespaceURI" />.</span><span class="sxs-lookup"><span data-stu-id="6bbf1-136">Creates an element with the specified <see cref="P:System.Xml.XmlNode.Prefix" />, <see cref="P:System.Xml.XmlDocument.LocalName" /> , and <see cref="P:System.Xml.XmlNode.NamespaceURI" />.</span></span></summary>
        <returns><span data-ttu-id="6bbf1-137">Новый объект <see cref="T:System.Xml.XmlElement" />.</span><span class="sxs-lookup"><span data-stu-id="6bbf1-137">A new <see cref="T:System.Xml.XmlElement" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6bbf1-138">`Note to Inheritors`При перегрузке этой функции ее нельзя использовать для расширяемости.</span><span class="sxs-lookup"><span data-stu-id="6bbf1-138">`Note to Inheritors` If you overload this function, it cannot be used for extensibility.</span></span> <span data-ttu-id="6bbf1-139">Вместо этого можно вернуть элемент, созданный базовым классом, в данном случае — `XmlDataDocument`.</span><span class="sxs-lookup"><span data-stu-id="6bbf1-139">Instead, you can return an element created by the base class, in this case, `XmlDataDocument`.</span></span> <span data-ttu-id="6bbf1-140">См. следующий пример.</span><span class="sxs-lookup"><span data-stu-id="6bbf1-140">See the following example.</span></span>  
  
```csharp  
class MyXmlDataDocument : XmlDataDocument {  
 public override XmlElement CreateElement(string prefix, string localName, string nsURI) {  
   //Ensure we are returning the base class implementation of element.  
   XmlElement e = base.CreateElement(prefix, localName, nsURI);  
   //Add additional code here.  
   return e;    //Return the element created by XmlDataDocument.  
 }      
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateEntityReference">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlEntityReference CreateEntityReference (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Xml.XmlEntityReference CreateEntityReference(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDataDocument.CreateEntityReference(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateEntityReference (name As String) As XmlEntityReference" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Xml::XmlEntityReference ^ CreateEntityReference(System::String ^ name);" />
      <MemberSignature Language="F#" Value="override this.CreateEntityReference : string -&gt; System.Xml.XmlEntityReference" Usage="xmlDataDocument.CreateEntityReference name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlEntityReference</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="6bbf1-141">Имя ссылки на сущность.</span><span class="sxs-lookup"><span data-stu-id="6bbf1-141">The name of the entity reference.</span></span></param>
        <summary><span data-ttu-id="6bbf1-142">Создает объект <see cref="T:System.Xml.XmlEntityReference" /> с указанным именем.</span><span class="sxs-lookup"><span data-stu-id="6bbf1-142">Creates an <see cref="T:System.Xml.XmlEntityReference" /> with the specified name.</span></span></summary>
        <returns><span data-ttu-id="6bbf1-143">Объект <see cref="T:System.Xml.XmlEntityReference" /> с указанным именем.</span><span class="sxs-lookup"><span data-stu-id="6bbf1-143">An <see cref="T:System.Xml.XmlEntityReference" /> with the specified name.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6bbf1-144"><xref:System.Xml.XmlEntityReference>Невозможно создать узлы для <xref:System.Xml.XmlDataDocument> объектов.</span><span class="sxs-lookup"><span data-stu-id="6bbf1-144"><xref:System.Xml.XmlEntityReference> nodes cannot be created for <xref:System.Xml.XmlDataDocument> objects.</span></span> <span data-ttu-id="6bbf1-145">При вызове этого метода возникает исключение.</span><span class="sxs-lookup"><span data-stu-id="6bbf1-145">Calling this method throws an exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="6bbf1-146">Вызов этого метода.</span><span class="sxs-lookup"><span data-stu-id="6bbf1-146">Calling this method.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateNavigator">
      <MemberSignature Language="C#" Value="protected override System.Xml.XPath.XPathNavigator CreateNavigator (System.Xml.XmlNode node);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Xml.XPath.XPathNavigator CreateNavigator(class System.Xml.XmlNode node) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDataDocument.CreateNavigator(System.Xml.XmlNode)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateNavigator (node As XmlNode) As XPathNavigator" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Xml::XPath::XPathNavigator ^ CreateNavigator(System::Xml::XmlNode ^ node);" />
      <MemberSignature Language="F#" Value="override this.CreateNavigator : System.Xml.XmlNode -&gt; System.Xml.XPath.XPathNavigator" Usage="xmlDataDocument.CreateNavigator node" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XPath.XPathNavigator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Xml.XmlNode" />
      </Parameters>
      <Docs>
        <param name="node"><span data-ttu-id="6bbf1-147">Узел <see cref="T:System.Xml.XmlNode" />, который будет служить исходной позицией навигатора.</span><span class="sxs-lookup"><span data-stu-id="6bbf1-147">The <see cref="T:System.Xml.XmlNode" /> you want the navigator initially positioned on.</span></span></param>
        <summary><span data-ttu-id="6bbf1-148">Создает новый объект <see cref="T:System.Xml.XPath.XPathNavigator" /> для навигации в данном документе.</span><span class="sxs-lookup"><span data-stu-id="6bbf1-148">Creates a new <see cref="T:System.Xml.XPath.XPathNavigator" /> object for navigating this document.</span></span> <span data-ttu-id="6bbf1-149">Объект <see langword="XPathNavigator" /> находится в узле, заданном в параметре <paramref name="node" />.</span><span class="sxs-lookup"><span data-stu-id="6bbf1-149">The <see langword="XPathNavigator" /> is positioned on the node specified in the <paramref name="node" /> parameter.</span></span></summary>
        <returns><span data-ttu-id="6bbf1-150">Объект <see langword="XPathNavigator" />, используемый для перехода по документу.</span><span class="sxs-lookup"><span data-stu-id="6bbf1-150">An <see langword="XPathNavigator" /> used to navigate the document.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6bbf1-151">`XPathNavigator` Предоставляет произвольный доступ только для чтения к данным.</span><span class="sxs-lookup"><span data-stu-id="6bbf1-151">The `XPathNavigator` provides read-only, random access to data.</span></span> <span data-ttu-id="6bbf1-152">Поскольку она оптимизирована для преобразований XSLT, она обеспечивает преимущества производительности при использовании в качестве механизма ввода для <xref:System.Xml.Xsl.XslTransform.Transform%2A> метода.</span><span class="sxs-lookup"><span data-stu-id="6bbf1-152">Because it is optimized for XSLT transformations, it provides performance benefits when used as an input mechanism to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6bbf1-153">Сведения о преобразовании XSLT с `XmlDataDocument` помощью `XPathNavigator`и см. в <xref:System.Xml.Xsl.XslTransform.Transform%2A?displayProperty=nameWithType> описании метода.</span><span class="sxs-lookup"><span data-stu-id="6bbf1-153">To see an XSLT transformation using `XmlDataDocument` and an `XPathNavigator`, see the <xref:System.Xml.Xsl.XslTransform.Transform%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Xsl.XslTransform" />
      </Docs>
    </Member>
    <Member MemberName="DataSet">
      <MemberSignature Language="C#" Value="public System.Data.DataSet DataSet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.DataSet DataSet" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlDataDocument.DataSet" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataSet As DataSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::DataSet ^ DataSet { System::Data::DataSet ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DataSet : System.Data.DataSet" Usage="System.Xml.XmlDataDocument.DataSet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataSet</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6bbf1-154">Получает объект <see cref="T:System.Data.DataSet" />, обеспечивающий реляционное представление данных в <see langword="XmlDataDocument" />.</span><span class="sxs-lookup"><span data-stu-id="6bbf1-154">Gets a <see cref="T:System.Data.DataSet" /> that provides a relational representation of the data in the <see langword="XmlDataDocument" />.</span></span></summary>
        <value><span data-ttu-id="6bbf1-155">Объект <see langword="DataSet" />, который можно использовать для доступа к данным в <see langword="XmlDataDocument" /> с помощью реляционной модели.</span><span class="sxs-lookup"><span data-stu-id="6bbf1-155">A <see langword="DataSet" /> that can be used to access the data in the <see langword="XmlDataDocument" /> using a relational model.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6bbf1-156">Позволяет получить доступ к данным `XmlDataDocument` в с помощью реляционной модели. `DataSet`</span><span class="sxs-lookup"><span data-stu-id="6bbf1-156">The `DataSet` enables you to access the data in the `XmlDataDocument` using a relational model.</span></span> <span data-ttu-id="6bbf1-157">Это означает, что можно выполнять обработку данных в виде таблиц и представлений, строк и столбцов, связей и т. д.</span><span class="sxs-lookup"><span data-stu-id="6bbf1-157">This means that you can handle the data as tables and views, rows and columns, relations, and so on.</span></span> <span data-ttu-id="6bbf1-158">Изменения, внесенные `DataSet` в, немедленно отображаются `XmlDataDocument`в.</span><span class="sxs-lookup"><span data-stu-id="6bbf1-158">Changes made in the `DataSet` are immediately visible in the `XmlDataDocument`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6bbf1-159">В следующем примере изменяется стоимость книги с помощью `DataSet` методов.</span><span class="sxs-lookup"><span data-stu-id="6bbf1-159">The following example modifies the price of a book using the `DataSet` methods.</span></span>  
  
 [!code-cpp[Classic WebData XmlDataDocument.DataSet Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDataDocument.DataSet Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDataDocument.DataSet Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDataDocument.DataSet Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDataDocument.DataSet Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDataDocument.DataSet Example/VB/source.vb#1)]  
  
 <span data-ttu-id="6bbf1-160">В этом примере в качестве входных данных используются следующие два файла.</span><span class="sxs-lookup"><span data-stu-id="6bbf1-160">The example uses the following two files as input.</span></span>  
  
 `2books.xml`  
  
 [!code-xml[Classic WebData XmlDataDocument.DataSet Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlDataDocument.DataSet Example/XML/source.xml#2)]  
  
 `store.xsd`  
  
 [!code-xml[Classic WebData XmlDataDocument.DataSet Example#3](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlDataDocument.DataSet Example/XML/source.xml#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Data.DataSet" />
        <altmember cref="T:System.Data.DataTable" />
      </Docs>
    </Member>
    <Member MemberName="GetElementById">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlElement GetElementById (string elemId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Xml.XmlElement GetElementById(string elemId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDataDocument.GetElementById(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetElementById (elemId As String) As XmlElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Xml::XmlElement ^ GetElementById(System::String ^ elemId);" />
      <MemberSignature Language="F#" Value="override this.GetElementById : string -&gt; System.Xml.XmlElement" Usage="xmlDataDocument.GetElementById elemId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elemId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="elemId"><span data-ttu-id="6bbf1-161">Идентификатор атрибута для сопоставления.</span><span class="sxs-lookup"><span data-stu-id="6bbf1-161">The attribute ID to match.</span></span></param>
        <summary><span data-ttu-id="6bbf1-162">Возвращает элемент <see cref="T:System.Xml.XmlElement" /> с указанным идентификатором.</span><span class="sxs-lookup"><span data-stu-id="6bbf1-162">Gets the <see cref="T:System.Xml.XmlElement" /> with the specified ID.</span></span> <span data-ttu-id="6bbf1-163">Этот метод не поддерживается классом <see cref="T:System.Xml.XmlDataDocument" />.</span><span class="sxs-lookup"><span data-stu-id="6bbf1-163">This method is not supported by the <see cref="T:System.Xml.XmlDataDocument" /> class.</span></span> <span data-ttu-id="6bbf1-164">При вызове этого метода возникает исключение.</span><span class="sxs-lookup"><span data-stu-id="6bbf1-164">Calling this method throws an exception.</span></span></summary>
        <returns><span data-ttu-id="6bbf1-165">Объект <see cref="T:System.Xml.XmlElement" /> с указанным идентификатором.</span><span class="sxs-lookup"><span data-stu-id="6bbf1-165">An <see cref="T:System.Xml.XmlElement" /> with the specified ID.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6bbf1-166">Этот метод не поддерживается классом <xref:System.Xml.XmlDataDocument>.</span><span class="sxs-lookup"><span data-stu-id="6bbf1-166">This method is not supported by the <xref:System.Xml.XmlDataDocument> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="6bbf1-167">Вызов этого метода.</span><span class="sxs-lookup"><span data-stu-id="6bbf1-167">Calling this method.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetElementFromRow">
      <MemberSignature Language="C#" Value="public System.Xml.XmlElement GetElementFromRow (System.Data.DataRow r);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlElement GetElementFromRow(class System.Data.DataRow r) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDataDocument.GetElementFromRow(System.Data.DataRow)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetElementFromRow (r As DataRow) As XmlElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlElement ^ GetElementFromRow(System::Data::DataRow ^ r);" />
      <MemberSignature Language="F#" Value="member this.GetElementFromRow : System.Data.DataRow -&gt; System.Xml.XmlElement" Usage="xmlDataDocument.GetElementFromRow r" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="r" Type="System.Data.DataRow" />
      </Parameters>
      <Docs>
        <param name="r"><span data-ttu-id="6bbf1-168">Объект <see langword="DataRow" />, связанный с которым объект <see langword="XmlElement" /> необходимо получить.</span><span class="sxs-lookup"><span data-stu-id="6bbf1-168">The <see langword="DataRow" /> whose associated <see langword="XmlElement" /> you want to retrieve.</span></span></param>
        <summary><span data-ttu-id="6bbf1-169">Получает объект <see cref="T:System.Xml.XmlElement" />, связанный с указанным объектом <see cref="T:System.Data.DataRow" />.</span><span class="sxs-lookup"><span data-stu-id="6bbf1-169">Retrieves the <see cref="T:System.Xml.XmlElement" /> associated with the specified <see cref="T:System.Data.DataRow" />.</span></span></summary>
        <returns><span data-ttu-id="6bbf1-170">Объект <see langword="XmlElement" />, содержащий представление заданного объекта <see langword="DataRow" />.</span><span class="sxs-lookup"><span data-stu-id="6bbf1-170">The <see langword="XmlElement" /> containing a representation of the specified <see langword="DataRow" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6bbf1-171">В следующем примере загружается `DataSet` `XmlDataDocument` в, а затем создается `XmlElement` объект, представляющий первую запись клиента.</span><span class="sxs-lookup"><span data-stu-id="6bbf1-171">The following example loads a `DataSet` into an `XmlDataDocument` and then creates an `XmlElement` representing the first customer record.</span></span>  
  
 <span data-ttu-id="6bbf1-172">В примере используется база данных Northwind SQL Server 2000.</span><span class="sxs-lookup"><span data-stu-id="6bbf1-172">The example uses the SQL Server 2000 Northwind database.</span></span>  
  
 [!code-cpp[Classic WebData XmlDataDocument.GetElementFromRow Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDataDocument.GetElementFromRow Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDataDocument.GetElementFromRow Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDataDocument.GetElementFromRow Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDataDocument.GetElementFromRow Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDataDocument.GetElementFromRow Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Data.DataSet" />
        <altmember cref="T:System.Data.DataTable" />
      </Docs>
    </Member>
    <Member MemberName="GetElementsByTagName">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlNodeList GetElementsByTagName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Xml.XmlNodeList GetElementsByTagName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDataDocument.GetElementsByTagName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetElementsByTagName (name As String) As XmlNodeList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Xml::XmlNodeList ^ GetElementsByTagName(System::String ^ name);" />
      <MemberSignature Language="F#" Value="override this.GetElementsByTagName : string -&gt; System.Xml.XmlNodeList" Usage="xmlDataDocument.GetElementsByTagName name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="6bbf1-173">Сопоставляемое полное имя.</span><span class="sxs-lookup"><span data-stu-id="6bbf1-173">The qualified name to match.</span></span> <span data-ttu-id="6bbf1-174">Оно противопоставляется свойству <see cref="P:System.Xml.XmlDocument.Name" /> соответствующего узла.</span><span class="sxs-lookup"><span data-stu-id="6bbf1-174">It is matched against the <see cref="P:System.Xml.XmlDocument.Name" /> property of the matching node.</span></span> <span data-ttu-id="6bbf1-175">Специальное значение "\*" соответствует всем тегам.</span><span class="sxs-lookup"><span data-stu-id="6bbf1-175">The special value "\*" matches all tags.</span></span></param>
        <summary><span data-ttu-id="6bbf1-176">Возвращает значение <see cref="T:System.Xml.XmlNodeList" />, содержащее список всех элементов-потомков, соответствующих указанному имени <see cref="P:System.Xml.XmlDocument.Name" />.</span><span class="sxs-lookup"><span data-stu-id="6bbf1-176">Returns an <see cref="T:System.Xml.XmlNodeList" /> containing a list of all descendant elements that match the specified <see cref="P:System.Xml.XmlDocument.Name" />.</span></span></summary>
        <returns><span data-ttu-id="6bbf1-177">Класс <see cref="T:System.Xml.XmlNodeList" />, содержащий список всех соответствующих узлов.</span><span class="sxs-lookup"><span data-stu-id="6bbf1-177">An <see cref="T:System.Xml.XmlNodeList" /> containing a list of all matching nodes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="6bbf1-178">Вместо <xref:System.Xml.XmlNode.SelectSingleNode%2A?displayProperty=nameWithType> <xref:System.Xml.XmlNode.SelectNodes%2A?displayProperty=nameWithType> метода рекомендуется <xref:System.Xml.XmlDataDocument.GetElementsByTagName%2A>  использовать метод или.</span><span class="sxs-lookup"><span data-stu-id="6bbf1-178">It is recommended that you use the <xref:System.Xml.XmlNode.SelectNodes%2A?displayProperty=nameWithType> or <xref:System.Xml.XmlNode.SelectSingleNode%2A?displayProperty=nameWithType> method instead of the <xref:System.Xml.XmlDataDocument.GetElementsByTagName%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRowFromElement">
      <MemberSignature Language="C#" Value="public System.Data.DataRow GetRowFromElement (System.Xml.XmlElement e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow GetRowFromElement(class System.Xml.XmlElement e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDataDocument.GetRowFromElement(System.Xml.XmlElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRowFromElement (e As XmlElement) As DataRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DataRow ^ GetRowFromElement(System::Xml::XmlElement ^ e);" />
      <MemberSignature Language="F#" Value="member this.GetRowFromElement : System.Xml.XmlElement -&gt; System.Data.DataRow" Usage="xmlDataDocument.GetRowFromElement e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Xml.XmlElement" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="6bbf1-179">Объект <see langword="XmlElement" />, связанный с которым объект <see langword="DataRow" /> необходимо получить.</span><span class="sxs-lookup"><span data-stu-id="6bbf1-179">The <see langword="XmlElement" /> whose associated <see langword="DataRow" /> you want to retrieve.</span></span></param>
        <summary><span data-ttu-id="6bbf1-180">Получает объект <see cref="T:System.Data.DataRow" />, связанный с указанным объектом <see cref="T:System.Xml.XmlElement" />.</span><span class="sxs-lookup"><span data-stu-id="6bbf1-180">Retrieves the <see cref="T:System.Data.DataRow" /> associated with the specified <see cref="T:System.Xml.XmlElement" />.</span></span></summary>
        <returns><span data-ttu-id="6bbf1-181">Объект <see langword="DataRow" />, содержащий представление <see langword="XmlElement" />; значение <see langword="null" />, если отсутствует объект <see langword="DataRow" />, связанный с <see langword="XmlElement" />.</span><span class="sxs-lookup"><span data-stu-id="6bbf1-181">The <see langword="DataRow" /> containing a representation of the <see langword="XmlElement" />; <see langword="null" /> if there is no <see langword="DataRow" /> associated with the <see langword="XmlElement" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6bbf1-182">В следующем примере изменяется цена первой книги.</span><span class="sxs-lookup"><span data-stu-id="6bbf1-182">The following example modifies the price of the first book.</span></span>  
  
 [!code-cpp[XmlDataDocument.GetRowFromElement#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlDataDocument.GetRowFromElement/CPP/getrow.cpp#1)]
 [!code-csharp[XmlDataDocument.GetRowFromElement#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlDataDocument.GetRowFromElement/CS/getrow.cs#1)]
 [!code-vb[XmlDataDocument.GetRowFromElement#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlDataDocument.GetRowFromElement/VB/getrow.vb#1)]  
  
 <span data-ttu-id="6bbf1-183">В примере используются следующие входные файлы:</span><span class="sxs-lookup"><span data-stu-id="6bbf1-183">The example uses the following input files:</span></span>  
  
 `2books.xml`  
  
 [!code-xml[Classic WebData XmlDataDocument.DataSet Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlDataDocument.DataSet Example/XML/source.xml#2)]  
  
 `store.xsd`  
  
 [!code-xml[Classic WebData XmlDataDocument.DataSet Example#3](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlDataDocument.DataSet Example/XML/source.xml#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Load">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="6bbf1-184">Загружает <see langword="XmlDataDocument" /> с использованием указанного источника данных и синхронизирует объект <see cref="T:System.Data.DataSet" /> с загруженными данными.</span><span class="sxs-lookup"><span data-stu-id="6bbf1-184">Loads the <see langword="XmlDataDocument" /> using the specified data source and synchronizes the <see cref="T:System.Data.DataSet" /> with the loaded data.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="6bbf1-185">Чтобы просмотреть реляционные данные XML, необходимо сначала указать схему, которая будет использоваться для сопоставления данных.</span><span class="sxs-lookup"><span data-stu-id="6bbf1-185">In order to view the XML data relationally, you must first specify a schema to use for data mapping.</span></span> <span data-ttu-id="6bbf1-186">Это можно сделать либо путем вызова <xref:System.Data.DataSet.ReadXmlSchema%2A> метода, либо путем создания таблиц и столбцов `DataSet` в среде вручную.</span><span class="sxs-lookup"><span data-stu-id="6bbf1-186">This can be done either by calling the <xref:System.Data.DataSet.ReadXmlSchema%2A> method or by creating the tables and columns within the `DataSet` manually.</span></span> <span data-ttu-id="6bbf1-187">Этот шаг необходимо выполнить перед вызовом `Load`метода.</span><span class="sxs-lookup"><span data-stu-id="6bbf1-187">This step must be done before calling `Load`.</span></span>  
  
 <span data-ttu-id="6bbf1-188">`XmlDataDocument`не поддерживает создание ссылок на сущности.</span><span class="sxs-lookup"><span data-stu-id="6bbf1-188">`XmlDataDocument` does not support creating entity references.</span></span> <span data-ttu-id="6bbf1-189">Если данные содержат ссылки на сущности, `Load` метод разрешает и разворачивает все ссылки на сущности.</span><span class="sxs-lookup"><span data-stu-id="6bbf1-189">If the data includes entity references, the `Load` method resolves and expands any entity references.</span></span> <span data-ttu-id="6bbf1-190">Однако при использовании `Load` перегрузки, которая принимает в <xref:System.Xml.XmlReader> качестве аргумента, необходимо указать объект `XmlReader` , который может разрешать сущности.</span><span class="sxs-lookup"><span data-stu-id="6bbf1-190">However, if you are using the `Load` overload that takes a <xref:System.Xml.XmlReader> as an argument, you must specify an `XmlReader` that can resolve entities.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public override void Load (System.IO.Stream inStream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Load(class System.IO.Stream inStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDataDocument.Load(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Load (inStream As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Load(System::IO::Stream ^ inStream);" />
      <MemberSignature Language="F#" Value="override this.Load : System.IO.Stream -&gt; unit" Usage="xmlDataDocument.Load inStream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inStream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="inStream"><span data-ttu-id="6bbf1-191">Поток, содержащий загружаемый документ XML.</span><span class="sxs-lookup"><span data-stu-id="6bbf1-191">The stream containing the XML document to load.</span></span></param>
        <summary><span data-ttu-id="6bbf1-192">Загружает <see langword="XmlDataDocument" /> из указанного потока.</span><span class="sxs-lookup"><span data-stu-id="6bbf1-192">Loads the <see langword="XmlDataDocument" /> from the specified stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6bbf1-193">`XmlDataDocument`не поддерживает создание ссылок на сущности.</span><span class="sxs-lookup"><span data-stu-id="6bbf1-193">`XmlDataDocument` does not support creating entity references.</span></span> <span data-ttu-id="6bbf1-194">Если данные содержат ссылки на сущности, `Load` метод разрешает и разворачивает все ссылки на сущности.</span><span class="sxs-lookup"><span data-stu-id="6bbf1-194">If the data includes entity references, the `Load` method resolves and expands any entity references.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6bbf1-195">Чтобы просмотреть реляционные данные XML, необходимо сначала указать схему, которая будет использоваться для сопоставления данных.</span><span class="sxs-lookup"><span data-stu-id="6bbf1-195">In order to view the XML data relationally, you must first specify a schema to use for data mapping.</span></span> <span data-ttu-id="6bbf1-196">Это можно сделать либо путем вызова <xref:System.Data.DataSet.ReadXmlSchema%2A> метода, либо путем создания таблиц и столбцов `DataSet` в среде вручную.</span><span class="sxs-lookup"><span data-stu-id="6bbf1-196">This can be done either by calling the <xref:System.Data.DataSet.ReadXmlSchema%2A> method or by creating the tables and columns within the `DataSet` manually.</span></span> <span data-ttu-id="6bbf1-197">Этот шаг необходимо выполнить перед вызовом `Load`метода.</span><span class="sxs-lookup"><span data-stu-id="6bbf1-197">This step must be done before calling `Load`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public override void Load (System.IO.TextReader txtReader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Load(class System.IO.TextReader txtReader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDataDocument.Load(System.IO.TextReader)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Load (txtReader As TextReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Load(System::IO::TextReader ^ txtReader);" />
      <MemberSignature Language="F#" Value="override this.Load : System.IO.TextReader -&gt; unit" Usage="xmlDataDocument.Load txtReader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="txtReader" Type="System.IO.TextReader" />
      </Parameters>
      <Docs>
        <param name="txtReader"><span data-ttu-id="6bbf1-198"><see langword="TextReader" />, используемый для передачи данных XML в документ.</span><span class="sxs-lookup"><span data-stu-id="6bbf1-198">The <see langword="TextReader" /> used to feed the XML data into the document.</span></span></param>
        <summary><span data-ttu-id="6bbf1-199">Загружает объект <see langword="XmlDataDocument" /> из указанного объекта <see cref="T:System.IO.TextReader" />.</span><span class="sxs-lookup"><span data-stu-id="6bbf1-199">Loads the <see langword="XmlDataDocument" /> from the specified <see cref="T:System.IO.TextReader" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6bbf1-200">`XmlDataDocument`не поддерживает создание ссылок на сущности.</span><span class="sxs-lookup"><span data-stu-id="6bbf1-200">`XmlDataDocument` does not support creating entity references.</span></span> <span data-ttu-id="6bbf1-201">Если данные содержат ссылки на сущности, `Load` метод разрешает и разворачивает все ссылки на сущности.</span><span class="sxs-lookup"><span data-stu-id="6bbf1-201">If the data includes entity references, the `Load` method resolves and expands any entity references.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6bbf1-202">Чтобы просмотреть реляционные данные XML, необходимо сначала указать схему, которая будет использоваться для сопоставления данных.</span><span class="sxs-lookup"><span data-stu-id="6bbf1-202">In order to view the XML data relationally, you must first specify a schema to use for data mapping.</span></span> <span data-ttu-id="6bbf1-203">Это можно сделать либо путем вызова <xref:System.Data.DataSet.ReadXmlSchema%2A> метода, либо путем создания таблиц и столбцов `DataSet` в среде вручную.</span><span class="sxs-lookup"><span data-stu-id="6bbf1-203">This can be done either by calling the <xref:System.Data.DataSet.ReadXmlSchema%2A> method or by creating the tables and columns within the `DataSet` manually.</span></span> <span data-ttu-id="6bbf1-204">Этот шаг необходимо выполнить перед вызовом `Load`метода.</span><span class="sxs-lookup"><span data-stu-id="6bbf1-204">This step must be done before calling `Load`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public override void Load (string filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Load(string filename) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDataDocument.Load(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Load (filename As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Load(System::String ^ filename);" />
      <MemberSignature Language="F#" Value="override this.Load : string -&gt; unit" Usage="xmlDataDocument.Load filename" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filename"><span data-ttu-id="6bbf1-205">Универсальный код ресурса (URI) файла, содержащего загружаемый XML-документ.</span><span class="sxs-lookup"><span data-stu-id="6bbf1-205">The URL of the file containing the XML document to load.</span></span></param>
        <summary><span data-ttu-id="6bbf1-206">Загружает объект <see langword="XmlDataDocument" /> по указанному URL-адресу.</span><span class="sxs-lookup"><span data-stu-id="6bbf1-206">Loads the <see langword="XmlDataDocument" /> using the specified URL.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6bbf1-207">`XmlDataDocument`не поддерживает создание ссылок на сущности.</span><span class="sxs-lookup"><span data-stu-id="6bbf1-207">`XmlDataDocument` does not support creating entity references.</span></span> <span data-ttu-id="6bbf1-208">Если данные содержат ссылки на сущности, `Load` метод разрешает и разворачивает все ссылки на сущности.</span><span class="sxs-lookup"><span data-stu-id="6bbf1-208">If the data includes entity references, the `Load` method resolves and expands any entity references.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6bbf1-209">Чтобы просмотреть реляционные данные XML, необходимо сначала указать схему, которая будет использоваться для сопоставления данных.</span><span class="sxs-lookup"><span data-stu-id="6bbf1-209">In order to view the XML data relationally, you must first specify a schema to use for data mapping.</span></span> <span data-ttu-id="6bbf1-210">Это можно сделать либо путем вызова <xref:System.Data.DataSet.ReadXmlSchema%2A> метода, либо путем создания таблиц и столбцов `DataSet` в среде вручную.</span><span class="sxs-lookup"><span data-stu-id="6bbf1-210">This can be done either by calling the <xref:System.Data.DataSet.ReadXmlSchema%2A> method or by creating the tables and columns within the `DataSet` manually.</span></span> <span data-ttu-id="6bbf1-211">Этот шаг необходимо выполнить перед вызовом `Load`метода.</span><span class="sxs-lookup"><span data-stu-id="6bbf1-211">This step must be done before calling `Load`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public override void Load (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Load(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDataDocument.Load(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Load (reader As XmlReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Load(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="override this.Load : System.Xml.XmlReader -&gt; unit" Usage="xmlDataDocument.Load reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="6bbf1-212">Объект <see langword="XmlReader" />, содержащий загружаемый XML-документ.</span><span class="sxs-lookup"><span data-stu-id="6bbf1-212">The <see langword="XmlReader" /> containing the XML document to load.</span></span></param>
        <summary><span data-ttu-id="6bbf1-213">Загружает объект <see langword="XmlDataDocument" /> из указанного объекта <see cref="T:System.Xml.XmlReader" />.</span><span class="sxs-lookup"><span data-stu-id="6bbf1-213">Loads the <see langword="XmlDataDocument" /> from the specified <see cref="T:System.Xml.XmlReader" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6bbf1-214">`XmlDataDocument`не поддерживает создание ссылок на сущности.</span><span class="sxs-lookup"><span data-stu-id="6bbf1-214">`XmlDataDocument` does not support creating entity references.</span></span> <span data-ttu-id="6bbf1-215">Если источник данных содержит ссылки на <xref:System.Xml.XmlValidatingReader> сущности, необходимо создать свойство со свойством, для которого <xref:System.Xml.XmlValidatingReader.EntityHandling%2A> задано значение EntityHandling. ExpandEntities (это `XmlValidatingReader` поведение по умолчанию) `Load` , и передать в метод.</span><span class="sxs-lookup"><span data-stu-id="6bbf1-215">If the data source contains entity references, you must create an <xref:System.Xml.XmlValidatingReader> with the <xref:System.Xml.XmlValidatingReader.EntityHandling%2A> property set to EntityHandling.ExpandEntities (this is the default behavior) and pass the `XmlValidatingReader` to the `Load` method.</span></span> <span data-ttu-id="6bbf1-216">Если не используется `XmlValidatingReader` `Load` , метод создает исключение.</span><span class="sxs-lookup"><span data-stu-id="6bbf1-216">If you do not use an `XmlValidatingReader`, the `Load` method throws an exception.</span></span>  
  
 <span data-ttu-id="6bbf1-217">`Load` Метод всегда сохраняет значащие пробелы.</span><span class="sxs-lookup"><span data-stu-id="6bbf1-217">The `Load` method always preserves significant white space.</span></span> <span data-ttu-id="6bbf1-218"><xref:System.Xml.XmlDocument.PreserveWhitespace%2A> Свойство определяет, сохраняется ли пробел.</span><span class="sxs-lookup"><span data-stu-id="6bbf1-218">The <xref:System.Xml.XmlDocument.PreserveWhitespace%2A> property determines whether or not white space is preserved.</span></span> <span data-ttu-id="6bbf1-219">Значение по умолчанию — `false`, пробел не сохраняется.</span><span class="sxs-lookup"><span data-stu-id="6bbf1-219">The default is `false`, white space is not preserved.</span></span>  
  
 <span data-ttu-id="6bbf1-220">Если модуль чтения находится в начальном состоянии (то есть ReadState = ReadState. Initial), `Load` потребляет все содержимое средства чтения и строит DOM на основе найденного объекта.</span><span class="sxs-lookup"><span data-stu-id="6bbf1-220">If the reader is in the initial state (that is, ReadState=ReadState.Initial), `Load` consumes the entire contents of the reader and builds the DOM from what it finds.</span></span>  
  
 <span data-ttu-id="6bbf1-221">Если модуль чтения уже расположен на узле с глубиной "n", этот метод загружает этот узел и все последующие родственные элементы вплоть до закрывающего тега, который закрывает глубину "n".</span><span class="sxs-lookup"><span data-stu-id="6bbf1-221">If the reader is already positioned on some node at depth "n", then this method loads that node and all subsequent siblings up to the end tag that closes depth "n".</span></span> <span data-ttu-id="6bbf1-222">Это приводит к следующим результатам.</span><span class="sxs-lookup"><span data-stu-id="6bbf1-222">This has the following results.</span></span>  
  
 <span data-ttu-id="6bbf1-223">Если текущий узел и его следующие родственные элементы выглядят следующим образом:</span><span class="sxs-lookup"><span data-stu-id="6bbf1-223">If the current node and its following siblings look similar to the following:</span></span>  
  
```xml  
<!--comment--><element1>one</element1><element2>two</element2>  
```  
  
 <span data-ttu-id="6bbf1-224">`Load`вызывает исключение, поскольку документ не может иметь два элемента корневого уровня.</span><span class="sxs-lookup"><span data-stu-id="6bbf1-224">`Load` throws an exception, because a document cannot have two root-level elements.</span></span> <span data-ttu-id="6bbf1-225">Если текущий узел и его следующие родственные элементы выглядят следующим образом:</span><span class="sxs-lookup"><span data-stu-id="6bbf1-225">If the current node and its following siblings look similar to the following:</span></span>  
  
```xml  
<!--comment--><?process  
    instruction?><!--comment--></endtag>  
```  
  
 <span data-ttu-id="6bbf1-226">`Load`будет выполнена. Однако у вас будет неполное дерево DOM, так как отсутствует элемент корневого уровня.</span><span class="sxs-lookup"><span data-stu-id="6bbf1-226">`Load` will succeed; however, you will have an incomplete DOM tree, because there is no root-level element.</span></span> <span data-ttu-id="6bbf1-227">Перед сохранением документа необходимо добавить элемент корневого уровня. в противном случае метод выдает исключение. <xref:System.Xml.XmlDocument.Save%2A></span><span class="sxs-lookup"><span data-stu-id="6bbf1-227">You have to add a root-level element before you save the document; otherwise, the <xref:System.Xml.XmlDocument.Save%2A> method throws an exception.</span></span>  
  
 <span data-ttu-id="6bbf1-228">Если модуль чтения расположен на конечном узле, недопустимом для корневого уровня документа (например, пробел или узел атрибута), он продолжает читать, пока не окажется на узле, который можно использовать в качестве корневого.</span><span class="sxs-lookup"><span data-stu-id="6bbf1-228">If the reader is positioned on a leaf node that is invalid for the root level of a document (for example, a white space or attribute node), the reader continues to read until it is positioned on a node that can be used for the root.</span></span> <span data-ttu-id="6bbf1-229">Документ начинает загружаться в этой точке.</span><span class="sxs-lookup"><span data-stu-id="6bbf1-229">The document begins loading at this point.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6bbf1-230">В следующем примере изменяется стоимость книги с помощью `DataSet` методов.</span><span class="sxs-lookup"><span data-stu-id="6bbf1-230">The following example modifies the price of a book using the `DataSet` methods.</span></span>  
  
 [!code-cpp[XmlDataDocument.Load#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlDataDocument.Load/CPP/loadrdr.cpp#1)]
 [!code-csharp[XmlDataDocument.Load#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlDataDocument.Load/CS/loadrdr.cs#1)]
 [!code-vb[XmlDataDocument.Load#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlDataDocument.Load/VB/loadrdr.vb#1)]  
  
 <span data-ttu-id="6bbf1-231">В примере используются следующие два входных файла.</span><span class="sxs-lookup"><span data-stu-id="6bbf1-231">The example uses the following two input files.</span></span>  
  
 `2books.xml`  
  
 [!code-xml[XmlDataDocument.Load#2](~/samples/snippets/xml/VS_Snippets_Data/XmlDataDocument.Load/XML/2books.xml#2)]  
  
 `store.xsd`  
  
 [!code-xml[XmlDataDocument.Load#3](~/samples/snippets/xml/VS_Snippets_Data/XmlDataDocument.Load/XML/test.xsd#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="6bbf1-232">Загружаемый XML содержит ссылки на сущность, и средство чтения не может разрешить сущности.</span><span class="sxs-lookup"><span data-stu-id="6bbf1-232">The XML being loaded contains entity references, and the reader cannot resolve entities.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
