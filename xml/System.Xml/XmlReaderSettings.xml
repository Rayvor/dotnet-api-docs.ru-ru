<Type Name="XmlReaderSettings" FullName="System.Xml.XmlReaderSettings">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e3c59e44f7bf9c72392504479a14ba49cdf6d4ba" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75173887" /></Metadata><TypeSignature Language="C#" Value="public sealed class XmlReaderSettings" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit XmlReaderSettings extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xml.XmlReaderSettings" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class XmlReaderSettings" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlReaderSettings sealed" />
  <TypeSignature Language="F#" Value="type XmlReaderSettings = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Задает набор функций, которые должны поддерживаться объектом <see cref="T:System.Xml.XmlReader" />, создаваемым с помощью метода <see cref="Overload:System.Xml.XmlReader.Create" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Для получения экземпляров <xref:System.Xml.XmlReader> используется метод <xref:System.Xml.XmlReader.Create%2A>. Этот метод использует класс <xref:System.Xml.XmlReaderSettings>, чтобы указать, какие функции должны быть реализованы в создаваемом им объекте <xref:System.Xml.XmlReader>.  
  
 Сведения о параметрах, используемых для проверки соответствия, проверки и других распространенных сценариев, см. в разделах "Примечания" на страницах справочника <xref:System.Xml.XmlReader> и <xref:System.Xml.XmlReader.Create%2A>. Список параметров по умолчанию см. в конструкторе <xref:System.Xml.XmlReaderSettings.%23ctor>.  
  
## <a name="security-considerations"></a>Замечания по безопасности  
 При использовании класса <xref:System.Xml.XmlReaderSettings> учитывайте следующее.  
  
-   Флаги проверки <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema> и <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation> объекта <xref:System.Xml.XmlReaderSettings> по умолчанию не установлены. Если эти флаги установлены, для разрешения расположения схем, обнаруженных в экземпляре документа в объекте <xref:System.Xml.XmlReaderSettings.XmlResolver%2A>, используется арбитр <xref:System.Xml.XmlReaderSettings> объекта <xref:System.Xml.XmlReader>. Если <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> объект `null`, расположения схем не разрешаются, даже если установлены флаги проверки <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema> и <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation>.  
  
-   Схемы, добавленные во время проверки, добавляют новые типы и могут изменить результат проверки документа. Поэтому следует разрешать только внешние схемы из доверенных источников.  
  
-   Сообщения об ошибках проверки могут представлять сведения о модели конфиденциального содержимого. Сообщения об ошибках и предупреждениях проверки обрабатываются с помощью делегата <xref:System.Xml.Schema.ValidationEventHandler> или предоставляются как <xref:System.Xml.Schema.XmlSchemaValidationException>, если для объекта <xref:System.Xml.XmlReaderSettings> не предоставлен обработчик событий (предупреждения проверки не вызывают возникновения <xref:System.Xml.Schema.XmlSchemaValidationException>). Эта информация о модели содержимого не должна предоставляться в недоверенных сценариях. Сообщения с предупреждениями о проверке по умолчанию подавляются, и их можно сообщить, установив флаг <xref:System.Xml.Schema.XmlSchemaValidationFlags.ReportValidationWarnings>.  
  
-   Свойство <xref:System.Xml.Schema.XmlSchemaException.SourceUri%2A> <xref:System.Xml.Schema.XmlSchemaValidationException> Возвращает путь универсального кода ресурса (URI) к файлу схемы, вызвавшему исключение. Свойство <xref:System.Xml.Schema.XmlSchemaException.SourceUri%2A> не должно предоставляться в недоверенных сценариях.  
  
-   Отключение флага <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints> (включено по умолчанию) рекомендуется при проверке ненадежных больших XML-документов в сценариях высокого уровня доступности для схемы с ограничениями идентификации в большой части документа.  
  
-   Объекты <xref:System.Xml.XmlReaderSettings> могут содержать конфиденциальные сведения, например учетные данные пользователей. Следует соблюдать осторожность при кэшировании объектов <xref:System.Xml.XmlReaderSettings> или при передаче объекта <xref:System.Xml.XmlReaderSettings> от одного компонента другому.  
  
-   Обработка DTD по умолчанию отключена. При включении обработки DTD необходимо учитывать, что определения DTD из ненадежных источников и возможные атаки типа «отказ в обслуживании». Используйте <xref:System.Xml.XmlSecureResolver>, чтобы ограничить ресурсы, к которым <xref:System.Xml.XmlReader> может получить доступ.  
  
-   Не следует принимать вспомогательные компоненты, например объекты <xref:System.Xml.NameTable>, <xref:System.Xml.XmlNamespaceManager> и <xref:System.Xml.XmlResolver>, из ненадежных источников.  
  
-   Объем памяти, который требуется приложению, использующему объект <xref:System.Xml.XmlReader>, может соотноситься с размерами анализируемого XML-документа. Одна из форм атаки типа «отказ в обслуживании» заключается в передаче для синтаксического анализа чрезмерно больших XML-документов. Можно ограничить размер документа, который можно проанализировать, задав свойство <xref:System.Xml.XmlReaderSettings.MaxCharactersInDocument%2A>, а затем ограничив число символов, полученное в результате расширения сущностей, установив свойство <xref:System.Xml.XmlReaderSettings.MaxCharactersFromEntities%2A>.  
  
   
  
## Examples  
 В следующем примере создается <xref:System.Xml.XmlReader>, использующий <xref:System.Xml.XmlUrlResolver> с необходимыми учетными данными.  
  
 [!code-csharp[XmlReader.Create#2](~/samples/snippets/csharp/VS_Snippets_Data/XmlReader.Create/CS/XmlReader_Create.cs#2)]
 [!code-vb[XmlReader.Create#2](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReader.Create/VB/XmlReader_Create.vb#2)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/standard/data/xml/index.md">XML-документы и данные</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.XmlReaderSettings" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlReaderSettings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReaderSettings.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlReaderSettings();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.XmlReaderSettings" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 В следующей таблице показаны начальные значения свойств для экземпляра <xref:System.Xml.XmlReaderSettings>.  
  
|Свойство.|Исходное значение|  
|--------------|-------------------|  
|<xref:System.Xml.XmlReaderSettings.Async%2A>|`false`.|  
|<xref:System.Xml.XmlReaderSettings.CheckCharacters%2A>|`true`.|  
|<xref:System.Xml.XmlReaderSettings.ConformanceLevel%2A>|<xref:System.Xml.ConformanceLevel.Document>.|  
|<xref:System.Xml.XmlReaderSettings.IgnoreComments%2A>|`false`.|  
|<xref:System.Xml.XmlReaderSettings.IgnoreProcessingInstructions%2A>|`false`.|  
|<xref:System.Xml.XmlReaderSettings.IgnoreWhitespace%2A>|`false`.|  
|<xref:System.Xml.XmlReaderSettings.LineNumberOffset%2A>|0.|  
|<xref:System.Xml.XmlReaderSettings.LinePositionOffset%2A>|0.|  
|<xref:System.Xml.XmlReaderSettings.MaxCharactersFromEntities%2A>|0 (нет ограничения на количество символов, которые получится в результате развертывания сущностей).|  
|<xref:System.Xml.XmlReaderSettings.MaxCharactersInDocument%2A>|0 (ограничения на размер XML-документа отсутствуют).|  
|<xref:System.Xml.XmlReaderSettings.NameTable%2A>|`null`.|  
|<xref:System.Xml.XmlTextReader.DtdProcessing%2A>|<xref:System.Xml.DtdProcessing.Prohibit>|  
|<xref:System.Xml.XmlReaderSettings.ProhibitDtd%2A>|`true`. Это свойство устарело. Взамен рекомендуется использовать <xref:System.Xml.XmlTextReader.DtdProcessing%2A>. Если для <xref:System.Xml.XmlReaderSettings.ProhibitDtd%2A> было задано значение по умолчанию `true` задать для <xref:System.Xml.XmlTextReader.DtdProcessing%2A> `Prohibit`. Если для параметра <xref:System.Xml.XmlReaderSettings.ProhibitDtd%2A> задано значение `false` установить <xref:System.Xml.XmlTextReader.DtdProcessing%2A> `Parse`.|  
|<xref:System.Xml.XmlReaderSettings.Schemas%2A>|Пустой объект <xref:System.Xml.Schema.XmlSchemaSet>|  
|<xref:System.Xml.XmlReaderSettings.ValidationFlags%2A>|<xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints>.|  
|<xref:System.Xml.XmlReaderSettings.ValidationType%2A>|<xref:System.Xml.ValidationType.None>.|  
|<xref:System.Xml.XmlReaderSettings.XmlResolver%2A>|Новый объект <xref:System.Xml.XmlUrlResolver>.|  
  
   
  
## Examples  
 В следующем примере создается объект параметров, который можно использовать для создания средства чтения, которое приводит к постановке инструкций по обработке, комментариев и незначащих пробелов.  
  
 [!code-cpp[XmlReaderSettings.cctor#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlReaderSettings.cctor/CPP/XmlReaderSettings.cctor.cpp#1)]
 [!code-csharp[XmlReaderSettings.cctor#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderSettings.cctor/CS/factory_rdr_cctor2.cs#1)]
 [!code-vb[XmlReaderSettings.cctor#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderSettings.cctor/VB/factory_rdr_cctor2.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
        <altmember cref="M:System.Xml.XmlReader.Create(System.String)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlReaderSettings (System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReaderSettings.#ctor(System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlReaderSettings(System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="new System.Xml.XmlReaderSettings : System.Xml.XmlResolver -&gt; System.Xml.XmlReaderSettings" Usage="new System.Xml.XmlReaderSettings resolver" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="resolver">Сопоставитель XML.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.XmlReaderSettings" />.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Xml.XmlReader" />
        <altmember cref="M:System.Xml.XmlReader.Create(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Async">
      <MemberSignature Language="C#" Value="public bool Async { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Async" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReaderSettings.Async" />
      <MemberSignature Language="VB.NET" Value="Public Property Async As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Async { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Async : bool with get, set" Usage="System.Xml.XmlReaderSettings.Async" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает значение, указывающее, можно ли использовать асинхронные методы <see cref="T:System.Xml.XmlReader" /> для конкретного экземпляра <see cref="T:System.Xml.XmlReader" />.</summary>
        <value>Значение <see langword="true" />, если могут использоваться асинхронные методы; в противном случае — значение <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это значение необходимо задать для `true` при создании нового экземпляра <xref:System.Xml.XmlReader>, если требуется использовать асинхронные методы <xref:System.Xml.XmlReader> для этого экземпляра. После создания экземпляра <xref:System.Xml.XmlReader> свойство <xref:System.Xml.XmlReaderSettings.Async%2A> доступно только для чтения. По умолчанию этому свойству присваивается значение `false`.  
  
 Этот флаг игнорируется перегрузкой <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType>. Это означает, что при создании нового <xref:System.Xml.XmlReader> на основе существующего <xref:System.Xml.XmlReader>, асинхронное поведение зависит от <xref:System.Xml.XmlReader>ввода, и нельзя использовать флаг <xref:System.Xml.XmlReaderSettings.Async%2A> для изменения асинхронного поведения.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/db854f91-ccef-4035-ae4d-0911fde808c7">Асинхронное программирование с использованием ключевых слов Async и Await (C# и Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="CheckCharacters">
      <MemberSignature Language="C#" Value="public bool CheckCharacters { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CheckCharacters" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReaderSettings.CheckCharacters" />
      <MemberSignature Language="VB.NET" Value="Public Property CheckCharacters As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CheckCharacters { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CheckCharacters : bool with get, set" Usage="System.Xml.XmlReaderSettings.CheckCharacters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, показывающее, осуществляется ли проверка символов.</summary>
        <value>Значение <see langword="true" /> — проверка осуществляется; в противном случае — <see langword="false" />. Значение по умолчанию — <see langword="true" />.  
  
 <block subset="none" type="note"><para>  
 Если средство чтения <see cref="T:System.Xml.XmlReader" /> обрабатывает текстовые данные, всегда происходит проверка допустимости XML-имен и текстового содержимого независимо от значения этого свойства. Задание свойству <see cref="P:System.Xml.XmlReaderSettings.CheckCharacters" /> значения <see langword="false" /> отключает проверку символов для ссылок на сущности символов.  
  
</para></block></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это свойство указывает средству чтения XML на необходимость проверки символов в считанных XML-данных и создания <xref:System.Xml.XmlException>, если какие-либо символы находятся вне диапазона допустимых символов XML. Если включена проверка символов, гарантируется выполнение следующих условий.  
  
-   Символы находятся в диапазоне допустимых XML-символов, как определено в разделе [2,2 символов](https://www.w3.org/TR/2006/REC-xml-20060816/#charsets) статьи рекомендации консорциума W3C XML 1,0.  
  
-   Все имена XML являются допустимыми, как определено в разделе [общих синтаксических конструкций 2,3](https://www.w3.org/TR/2006/REC-xml-20060816/#NT-Name) рекомендации консорциума W3C XML 1,0.  
  
 Если для этого свойства задано значение `true`, то есть значение по умолчанию, <xref:System.Xml.XmlException> исключение возникает, если XML-файл содержит недопустимые символы или недопустимые имена XML (например, имя элемента начинается с цифры).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Xml.XmlReaderSettings Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlReaderSettings Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReaderSettings.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As XmlReaderSettings" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlReaderSettings ^ Clone();" />
      <MemberSignature Language="F#" Value="member this.Clone : unit -&gt; System.Xml.XmlReaderSettings" Usage="xmlReaderSettings.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReaderSettings</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Создает копию экземпляра <see cref="T:System.Xml.XmlReaderSettings" />.</summary>
        <returns>Точная копия объекта <see cref="T:System.Xml.XmlReaderSettings" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Клонированный объект <xref:System.Xml.XmlReaderSettings> можно изменить, не влияя на параметры исходного объекта.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
        <altmember cref="M:System.Xml.XmlReader.Create(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="CloseInput">
      <MemberSignature Language="C#" Value="public bool CloseInput { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CloseInput" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReaderSettings.CloseInput" />
      <MemberSignature Language="VB.NET" Value="Public Property CloseInput As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CloseInput { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CloseInput : bool with get, set" Usage="System.Xml.XmlReaderSettings.CloseInput" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, указывающее, следует ли закрыть основной поток или <see cref="T:System.IO.TextReader" /> при закрытии средства чтения.</summary>
        <value>Значение <see langword="true" /> — закрыть основной поток или <see cref="T:System.IO.TextReader" /> при закрытии средства чтения; в противном случае — <see langword="false" />. Значение по умолчанию — <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот параметр используется при передаче потока или <xref:System.IO.TextReader> в метод <xref:System.Xml.XmlReader.Create%2A>. Если поток создается модулем чтения для собственной обработки, например при создании модуля чтения с URI или при открытии определения внешнего типа документа, он всегда закрывается при закрытии модуля чтения.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConformanceLevel">
      <MemberSignature Language="C#" Value="public System.Xml.ConformanceLevel ConformanceLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.ConformanceLevel ConformanceLevel" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReaderSettings.ConformanceLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property ConformanceLevel As ConformanceLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::ConformanceLevel ConformanceLevel { System::Xml::ConformanceLevel get(); void set(System::Xml::ConformanceLevel value); };" />
      <MemberSignature Language="F#" Value="member this.ConformanceLevel : System.Xml.ConformanceLevel with get, set" Usage="System.Xml.XmlReaderSettings.ConformanceLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.ConformanceLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает уровень соответствия для <see cref="T:System.Xml.XmlReader" />.</summary>
        <value>Одно из значений перечисления, которое указывает уровень соответствия, обеспечиваемый средством чтения XML. Значение по умолчанию — <see cref="F:System.Xml.ConformanceLevel.Document" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Средства чтения XML, созданным <xref:System.Xml.XmlReader.Create%2A> метод следующие предварительные требования соответствия по умолчанию:  
  
-   Новые строки и значения атрибутов нормализованы согласно рекомендациям консорциума W3C по [XML 1,0](https://www.w3.org/TR/2006/REC-xml-20060816/).  
  
-   Все сущности разворачиваются автоматически.  
  
-   Атрибуты по умолчанию, объявленные в определении типа документа, всегда добавляются, даже если средство чтения не проверяется.  
  
-   Допускается объявление префикса XML, сопоставленного с правильным URI пространства имен XML.  
  
-   Имена нотаций в одном `NotationType` объявление атрибута и `NmTokens` в одном `Enumeration` объявление атрибута отличаются.  
  
 Можно использовать свойство <xref:System.Xml.XmlReaderSettings.ConformanceLevel%2A>, чтобы проверить и гарантировать, что считываемый поток будет соответствовать правилам для XML 1,0-документа с правильным форматом или фрагментом документа. Если данные не соответствуют, выдается исключение <xref:System.Xml.XmlException>. Значение по умолчанию — <xref:System.Xml.ConformanceLevel.Document?displayProperty=nameWithType> (соответствие уровня документа).  
  
 Три уровня соответствия:  
  
|Параметр|Описание|  
|-------------|-----------------|  
|<xref:System.Xml.ConformanceLevel.Document>|Гарантирует, что XML-данные соответствует правилам для XML-документа с правильным форматом 1,0. Этот уровень проверки гарантирует, что любой процессор может использовать поток, считанный как [XML-документ с правильным форматом 1,0](https://www.w3.org/TR/2006/REC-xml-20060816/#sec-well-formed).<br /><br /> Модуль чтения проверяет следующие условия.<br /><br /> -Элемент верхнего уровня не должен содержать узлы, кроме объявления XML, определения типа документа (DTD), элемента, комментария, пробела или инструкции по обработке.<br />— XML-данные должны содержать только один узел элемента верхнего уровня.|  
|<xref:System.Xml.ConformanceLevel.Fragment>|Гарантирует, что XML-данные соответствует правилам для фрагмента документа XML 1,0 с правильным форматом.<br /><br /> Этот параметр принимает XML-данные с несколькими корневыми элементами или текстовыми узлами на верхнем уровне. Этот уровень проверки гарантирует, что любой процессор может использовать поток, считанный как [внешняя анализируемая сущность](https://www.w3.org/TR/2006/REC-xml-20060816/#wf-entities).|  
|<xref:System.Xml.ConformanceLevel.Auto>|Указывает, что читатель должен определить уровень проверки соответствия на основе входящих данных.<br /><br /> Проверка согласованности на уровне документа применяется, если XML-данные содержат сведения DTD.<br /><br /> Проверка согласованности фрагментов применяется, если в XML-данных содержится один из следующих случаев:<br /><br /> — Текстовый, CDATA или узел ссылки на сущность на корневом уровне.<br />— Более одного элемента на корневом уровне.<br />— Отсутствует элемент на корневом уровне.<br /><br /> Исключение <xref:System.Xml.XmlException> создается, если обнаруживается конфликт, например если на корневом уровне одновременно существуют текстовый узел и DTD.<br /><br /> Это свойство можно использовать в сценариях с оболочками, когда метод <xref:System.Xml.XmlReader.Create%2A> используется для добавления дополнительных функций в существующий модуль <xref:System.Xml.XmlReader>. В этом случае <xref:System.Xml.ConformanceLevel.Document?displayProperty=nameWithType> не добавляет новую проверку соответствия. Проверка согласованности выполняется модулем <xref:System.Xml.XmlReader>, для которого создается оболочка.|  
  
> [!NOTE]
>  Рекомендация XML 1.0 требует согласованности на уровне документа, если присутствует DTD. Таким образом, если средство чтения настроено для поддержки <xref:System.Xml.ConformanceLevel.Fragment?displayProperty=nameWithType>, но XML-данные содержат определение типа документа (DTD), выдается <xref:System.Xml.XmlException>.  
  
 Ниже показано, как средство чтения обрабатывает определенные нарушения соответствия в зависимости от значения свойства <xref:System.Xml.XmlReaderSettings.ConformanceLevel%2A>.  
  
|Условие|<xref:System.Xml.ConformanceLevel.Document>|<xref:System.Xml.ConformanceLevel.Fragment>|<xref:System.Xml.ConformanceLevel.Auto>|  
|---------------|---------------------------------------------------------------------------------------------------------------------------------------------------|---------------------------------------------------------------------------------------------------------------------------------------------------|-----------------------------------------------------------------------------------------------------------------------------------------------|  
|Текст или типизированное значение отображается на верхнем уровне.|выдается <xref:System.Xml.XmlException>.|Не считается нарушением для этого параметра.|Не считается нарушением для этого параметра.|  
|На верхнем уровне не отображаются несколько элементов или элементов.|выдается <xref:System.Xml.XmlException>.|Не считается нарушением для этого параметра.|Не считается нарушением для этого параметра.|  
|Элемент верхнего уровня является пробелом.|Не считается нарушением для этого параметра.|Не считается нарушением для этого параметра.|Не считается нарушением для этого параметра.|  
|Элемент верхнего уровня — это атрибут (распознается как текстовый узел).|выдается <xref:System.Xml.XmlException>.|Не считается нарушением для этого параметра.|Не считается нарушением для этого параметра.|  
|Найдены несколько смежных текстовых узлов.|Не считается нарушением для этого параметра.|Не считается нарушением для этого параметра.|Не считается нарушением для этого параметра.|  
|Один и тот же префикс пространства имен объявляется дважды в одной локальной области.|выдается <xref:System.Xml.XmlException>.|выдается <xref:System.Xml.XmlException>.|выдается <xref:System.Xml.XmlException>.|  
|Пространство имен в элементе или атрибуте не существует в локальной области.|выдается <xref:System.Xml.XmlException>.|выдается <xref:System.Xml.XmlException>.|выдается <xref:System.Xml.XmlException>.|  
|Данные содержат несоответствие префикса и пространства имен.|выдается <xref:System.Xml.XmlException>.|выдается <xref:System.Xml.XmlException>.|выдается <xref:System.Xml.XmlException>.|  
|атрибут `xml:space` содержит недопустимое значение.|выдается <xref:System.Xml.XmlException>.|выдается <xref:System.Xml.XmlException>.|выдается <xref:System.Xml.XmlException>.|  
|Обнаружено недопустимое имя.|выдается <xref:System.Xml.XmlException>.|выдается <xref:System.Xml.XmlException>.|выдается <xref:System.Xml.XmlException>.|  
|Префикс `xml` не соответствует URI http://www.w3.org/XML/1998/namespace.|выдается <xref:System.Xml.XmlException>.|выдается <xref:System.Xml.XmlException>.|выдается <xref:System.Xml.XmlException>.|  
  
   
  
## Examples  
 В следующем примере создается объект <xref:System.Xml.XmlReader>, который считывает фрагмент XML.  
  
 [!code-csharp[XmlReader.Create#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlReader.Create/CS/XmlReader_Create.cs#1)]
 [!code-vb[XmlReader.Create#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReader.Create/VB/XmlReader_Create.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.XmlReader.Create(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="DtdProcessing">
      <MemberSignature Language="C#" Value="public System.Xml.DtdProcessing DtdProcessing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.DtdProcessing DtdProcessing" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReaderSettings.DtdProcessing" />
      <MemberSignature Language="VB.NET" Value="Public Property DtdProcessing As DtdProcessing" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::DtdProcessing DtdProcessing { System::Xml::DtdProcessing get(); void set(System::Xml::DtdProcessing value); };" />
      <MemberSignature Language="F#" Value="member this.DtdProcessing : System.Xml.DtdProcessing with get, set" Usage="System.Xml.XmlReaderSettings.DtdProcessing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.DtdProcessing</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает значение, определяющее обработку определений DTD.</summary>
        <value>Одно из значений перечисления, определяющее обработку определений DTD. Значение по умолчанию — <see cref="F:System.Xml.DtdProcessing.Prohibit" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Проверка DTD реализуется с использованием ограничений на допустимость, определенных в рекомендациях консорциума W3C [язык XML (XML) 1,0 (Четвертый выпуск)](https://www.w3.org/TR/2006/REC-xml-20060816/). DTD используют формальную грамматику для описания структуры и синтаксиса соответствующих XML-документов. они указывают содержимое и значения, разрешенные для XML-документа.  
  
 Это свойство может принимать одно из следующих значений.  
  
-   <xref:System.Xml.DtdProcessing.Parse?displayProperty=nameWithType>, чтобы включить обработку DTD.  
  
-   <xref:System.Xml.DtdProcessing.Prohibit?displayProperty=nameWithType> вызывать исключение <xref:System.Xml.XmlException> при обнаружении DTD.  
  
-   <xref:System.Xml.DtdProcessing.Ignore?displayProperty=nameWithType>, чтобы отключить обработку DTD без предупреждений или исключений.  
  
 Для выполнения проверки по DTD объект <xref:System.Xml.XmlReader> использует DTD, определенный в декларации DOCTYPE XML-документа. Декларация DOCTYPE может указывать на встроенный DTD или ссылаться на внешний DTD-файл. Чтобы проверить XML-файл по DTD, выполните следующие действия.  
  
-   Задайте свойству <xref:System.Xml.XmlReaderSettings.DtdProcessing%2A?displayProperty=nameWithType> значение `DtdProcessing.Parse.`  
  
-   Задайте для свойства <xref:System.Xml.XmlReaderSettings.ValidationType%2A?displayProperty=nameWithType> значение `ValidationType.DTD`.  
  
-   Если DTD является внешним файлом, хранящимся на сетевом ресурсе, для которого требуется проверка подлинности, передайте объект <xref:System.Xml.XmlResolver> с необходимыми учетными данными методу <xref:System.Xml.XmlReader.Create%2A>.  
  
> [!IMPORTANT]
>  Если свойство <xref:System.Xml.XmlReaderSettings.DtdProcessing%2A> имеет значение <xref:System.Xml.DtdProcessing.Ignore?displayProperty=nameWithType>, <xref:System.Xml.XmlReader> не будет сообщать об DTD. Это означает, что DTD/DOCTYPE будет потерян при выходе.  
  
   
  
## Examples  
 В следующем примере XML-файл проверяется c использованием DTD-файла.  
  
 [!code-cpp[XmlReaderSettings.DtdValidate#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlReaderSettings.DtdValidate/CPP/XmlReaderSettings.DtdValidate.cpp#1)]
 [!code-csharp[XmlReaderSettings.DtdValidate#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderSettings.DtdValidate/CS/validdtd.cs#1)]
 [!code-vb[XmlReaderSettings.DtdValidate#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderSettings.DtdValidate/VB/validdtd.vb#1)]  
  
## <a name="input"></a>Входные данные  
 В примере в качестве входных данных используется файл `itemDTD.xml`.  
  
 [!code-xml[XmlReaderSettings.DtdValidate#2](~/samples/snippets/xml/VS_Snippets_Data/XmlReaderSettings.DtdValidate/XML/itemDTD.xml#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IgnoreComments">
      <MemberSignature Language="C#" Value="public bool IgnoreComments { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IgnoreComments" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReaderSettings.IgnoreComments" />
      <MemberSignature Language="VB.NET" Value="Public Property IgnoreComments As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IgnoreComments { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IgnoreComments : bool with get, set" Usage="System.Xml.XmlReaderSettings.IgnoreComments" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, указывающее, следует ли игнорировать комментарии.</summary>
        <value><see langword="true" /> — игнорировать комментарии; в противном случае <see langword="false" />. Значение по умолчанию — <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Присвоение этому свойству значения `true` может привести к возврату нескольких последовательных текстовых узлов из модуля чтения. Это не влияет на проверку.  
  
   
  
## Examples  
 В следующем примере создается объект параметров, который можно использовать для создания средства чтения, которое приводит к постановке инструкций по обработке, комментариев и незначащих пробелов.  
  
 [!code-cpp[XmlReaderSettings.cctor#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlReaderSettings.cctor/CPP/XmlReaderSettings.cctor.cpp#1)]
 [!code-csharp[XmlReaderSettings.cctor#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderSettings.cctor/CS/factory_rdr_cctor2.cs#1)]
 [!code-vb[XmlReaderSettings.cctor#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderSettings.cctor/VB/factory_rdr_cctor2.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.XmlReader.Create(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="IgnoreProcessingInstructions">
      <MemberSignature Language="C#" Value="public bool IgnoreProcessingInstructions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IgnoreProcessingInstructions" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReaderSettings.IgnoreProcessingInstructions" />
      <MemberSignature Language="VB.NET" Value="Public Property IgnoreProcessingInstructions As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IgnoreProcessingInstructions { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IgnoreProcessingInstructions : bool with get, set" Usage="System.Xml.XmlReaderSettings.IgnoreProcessingInstructions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, указывающее, следует ли игнорировать инструкции по обработке.</summary>
        <value><see langword="true" /> — игнорировать инструкции обработки; в противном случае <see langword="false" />. Значение по умолчанию — <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Присвоение этому свойству значения `true` может привести к возврату нескольких последовательных текстовых узлов из модуля чтения. Это не влияет на проверку.  
  
   
  
## Examples  
 В следующем примере создается объект параметров, который можно использовать для создания средства чтения, которое приводит к постановке инструкций по обработке, комментариев и незначащих пробелов.  
  
 [!code-cpp[XmlReaderSettings.cctor#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlReaderSettings.cctor/CPP/XmlReaderSettings.cctor.cpp#1)]
 [!code-csharp[XmlReaderSettings.cctor#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderSettings.cctor/CS/factory_rdr_cctor2.cs#1)]
 [!code-vb[XmlReaderSettings.cctor#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderSettings.cctor/VB/factory_rdr_cctor2.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.XmlReader.Create(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="IgnoreWhitespace">
      <MemberSignature Language="C#" Value="public bool IgnoreWhitespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IgnoreWhitespace" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReaderSettings.IgnoreWhitespace" />
      <MemberSignature Language="VB.NET" Value="Public Property IgnoreWhitespace As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IgnoreWhitespace { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IgnoreWhitespace : bool with get, set" Usage="System.Xml.XmlReaderSettings.IgnoreWhitespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, определяющее, будут ли игнорироваться незначимые символы-разделители.</summary>
        <value>Значение <see langword="true" />, если пустое пространство будет игнорироваться; в противном случае — <see langword="false" />. Значение по умолчанию — <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Пробелы, не учитываемые в качестве значимых, включают пробелы, символы табуляции и пустые строки, используемые для настройки разметки с целью повышения удобочитаемости. Примером этого является пустое пространство в содержимом элемента.  
  
 Этот параметр свойства не влияет на пробелы между разметкой в режиме смешанного содержимого или с пробелом, которая происходит в области атрибута `xml:space='preserve'`.  
  
   
  
## Examples  
 В следующем примере создается объект параметров, который можно использовать для создания средства чтения, которое приводит к постановке инструкций по обработке, комментариев и незначащих пробелов.  
  
 [!code-cpp[XmlReaderSettings.cctor#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlReaderSettings.cctor/CPP/XmlReaderSettings.cctor.cpp#1)]
 [!code-csharp[XmlReaderSettings.cctor#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderSettings.cctor/CS/factory_rdr_cctor2.cs#1)]
 [!code-vb[XmlReaderSettings.cctor#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderSettings.cctor/VB/factory_rdr_cctor2.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.XmlReader.Create(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="LineNumberOffset">
      <MemberSignature Language="C#" Value="public int LineNumberOffset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LineNumberOffset" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReaderSettings.LineNumberOffset" />
      <MemberSignature Language="VB.NET" Value="Public Property LineNumberOffset As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LineNumberOffset { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.LineNumberOffset : int with get, set" Usage="System.Xml.XmlReaderSettings.LineNumberOffset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает смещение номера строки объекта <see cref="T:System.Xml.XmlReader" />.</summary>
        <value>Смещение номера строки. Значение по умолчанию — 0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Параметр <xref:System.Xml.XmlReaderSettings.LineNumberOffset%2A> определяет точку, с которой начинается подсчет свойства <xref:System.Xml.IXmlLineInfo.LineNumber%2A>. Это полезно, если XML-данные внедрены в более крупный документ. Например, если XML-данные были внедрены в документ большего размера и данные были запущены в строке 101 документа, может потребоваться указать, что модуль чтения начинается со строки 100. Таким образом, если модуль чтения вызвал исключение при синтаксическом анализе первой строки XML, он сообщит номер строки как строку 101, а не строку 1.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.XmlReader.Create(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="LinePositionOffset">
      <MemberSignature Language="C#" Value="public int LinePositionOffset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LinePositionOffset" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReaderSettings.LinePositionOffset" />
      <MemberSignature Language="VB.NET" Value="Public Property LinePositionOffset As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LinePositionOffset { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.LinePositionOffset : int with get, set" Usage="System.Xml.XmlReaderSettings.LinePositionOffset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает смещение позиции строки объекта <see cref="T:System.Xml.XmlReader" />.</summary>
        <value>Смещение позиции строки. Значение по умолчанию — 0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Параметр <xref:System.Xml.XmlReaderSettings.LinePositionOffset%2A> определяет точку, с которой начинается подсчет свойства <xref:System.Xml.IXmlLineInfo.LinePosition%2A>. Это полезно, если XML-данные внедрены в более крупный документ и в начале XML нет новой строки. В этом случае, если средство чтения создает исключение во время синтаксического анализа XML-кода, необходимо, чтобы он возвращал расположение строки относительно основного документа, а не только относительно фрагмента XML.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.XmlReader.Create(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="MaxCharactersFromEntities">
      <MemberSignature Language="C#" Value="public long MaxCharactersFromEntities { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 MaxCharactersFromEntities" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReaderSettings.MaxCharactersFromEntities" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxCharactersFromEntities As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long MaxCharactersFromEntities { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.MaxCharactersFromEntities : int64 with get, set" Usage="System.Xml.XmlReaderSettings.MaxCharactersFromEntities" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, указывающее максимально допустимое количество символов в документе, которые возникают вследствие расширения сущностей.</summary>
        <value>Наибольшее количество символов вследствие расширения сущностей. Значение по умолчанию — 0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Нулевое (0) значение означает отсутствие ограничений на количество символов, появляющихся в результате развертывания сущностей. Ненулевое значение указывает максимальное число символов, которые могут быть результатом разворачивания сущностей.  
  
 Если читатель пытается прочитать документ, содержащий сущности таким, что развернутый размер превысит это свойство, будет выдано исключение <xref:System.Xml.XmlException>.  
  
 Это свойство позволяет устранить атаки типа «отказ в обслуживании», когда злоумышленник отправляет документы XML, которые пытаются превысить ограничения памяти посредством расширения сущностей. Ограничивая символы, являющиеся результатом расширенных сущностей, можно обнаружить атаку и обеспечить надежную возможность восстановления.  
  
   
  
## Examples  
 Следующий код задает это свойство, а затем пытается выполнить синтаксический анализ документа, содержащего сущность, которая расширяется до размера, превышающего установленный предел. В реальной ситуации для этого ограничения следует задать значение, достаточное для работы с допустимыми документами, но достаточно маленькое, чтобы ограничить угрозу от вредоносных документов.  
  
```csharp  
string markup =  
@"<!DOCTYPE Root [  
  <!ENTITY anEntity ""Expands to more than 30 characters"">  
  <!ELEMENT Root (#PCDATA)>  
]>  
<Root>Content &anEntity;</Root>";  
  
XmlReaderSettings settings = new XmlReaderSettings();  
settings.DtdProcessing = DtdProcessing.Parse;  
settings.ValidationType = ValidationType.DTD;  
settings.MaxCharactersFromEntities = 30;  
  
try  
{  
    XmlReader reader = XmlReader.Create(new StringReader(markup), settings);  
    while (reader.Read()) { }  
}  
catch (XmlException ex)  
{  
    Console.WriteLine(ex.Message);  
}  
```  
  
```vb  
Dim markup As String = _  
    "<!DOCTYPE Root [" + Environment.NewLine + _  
    "  <!ENTITY anEntity ""Expands to more than 30 characters"">" + Environment.NewLine + _  
    "  <!ELEMENT Root (#PCDATA)>" + Environment.NewLine + _  
    "]>" + Environment.NewLine + _  
    "<Root>Content &anEntity;</Root>"  
  
Dim settings As XmlReaderSettings = New XmlReaderSettings()  
settings.DtdProcessing = DtdProcessing.Parse;  
settings.ValidationType = ValidationType.DTD  
settings.MaxCharactersFromEntities = 30  
  
Try  
    Dim reader As XmlReader = XmlReader.Create(New StringReader(markup), settings)  
    While (reader.Read())  
    End While  
Catch ex As XmlException  
    Console.WriteLine(ex.Message)  
End Try  
```  
  
 В этом примере выводятся следующие данные:  
  
```  
There is an error in XML document (MaxCharactersFromEntities, ).  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxCharactersInDocument">
      <MemberSignature Language="C#" Value="public long MaxCharactersInDocument { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 MaxCharactersInDocument" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReaderSettings.MaxCharactersInDocument" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxCharactersInDocument As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long MaxCharactersInDocument { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.MaxCharactersInDocument : int64 with get, set" Usage="System.Xml.XmlReaderSettings.MaxCharactersInDocument" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, указывающее максимальное допустимое количество символов в XML-документе. Нуль (0) означает отсутствие ограничений на размер XML-документа. Значение, не равное нулю, указывает максимальное количество символов.</summary>
        <value>Максимально допустимое количество символов в XML-документе. Значение по умолчанию — 0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Нулевое (0) значение означает отсутствие ограничений на количество символов в проанализированном документе. Ненулевое значение указывает максимальное число символов, которые могут быть проанализированы.  
  
 Максимальное число символов в документе включает число символов, полученное в результате расширенных сущностей.  
  
 Если читатель пытается прочитать документ с размером, превышающим это свойство, будет выдано исключение <xref:System.Xml.XmlException>.  
  
 Это свойство позволяет устранить атаки типа «отказ в обслуживании», когда злоумышленник отправляет очень большие XML-документы. Ограничивая размер документа, можно обнаружить атаку и обеспечить надежное восстановление.  
  
   
  
## Examples  
 Следующий код задает это свойство, а затем пытается проанализировать документ, размер которого превышает ограничение. В реальной ситуации для этого ограничения следует задать значение, достаточное для работы с допустимыми документами, но достаточно маленькое, чтобы ограничить угрозу от вредоносных документов.  
  
```csharp  
string markup = "<Root>Content</Root>";  
  
XmlReaderSettings settings = new XmlReaderSettings();  
settings.MaxCharactersInDocument = 10;  
  
try  
{  
    XmlReader reader = XmlReader.Create(new StringReader(markup), settings);  
    while (reader.Read()) { }  
}  
catch (XmlException ex)  
{  
    Console.WriteLine(ex.Message);  
}  
```  
  
```vb  
Dim markup As String = "<Root>Content</Root>"  
  
Dim settings As XmlReaderSettings = New XmlReaderSettings()  
settings.MaxCharactersInDocument = 10  
  
Try  
    Dim reader As XmlReader = XmlReader.Create(New StringReader(markup), settings)  
    While (reader.Read())  
    End While  
Catch ex As XmlException  
    Console.WriteLine(ex.Message)  
End Try  
```  
  
 Этот код выводит следующие результаты:  
  
```  
There is an error in XML document (MaxCharactersInDocument, ).  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NameTable">
      <MemberSignature Language="C#" Value="public System.Xml.XmlNameTable NameTable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlNameTable NameTable" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReaderSettings.NameTable" />
      <MemberSignature Language="VB.NET" Value="Public Property NameTable As XmlNameTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlNameTable ^ NameTable { System::Xml::XmlNameTable ^ get(); void set(System::Xml::XmlNameTable ^ value); };" />
      <MemberSignature Language="F#" Value="member this.NameTable : System.Xml.XmlNameTable with get, set" Usage="System.Xml.XmlReaderSettings.NameTable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNameTable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает таблицу <see cref="T:System.Xml.XmlNameTable" />, используемую для разделенных сравнений строк.</summary>
        <value>Таблица <see cref="T:System.Xml.XmlNameTable" />, в которой хранятся все разделенные строки, используемые экземплярами <see cref="T:System.Xml.XmlReader" />, созданными с помощью объекта <see cref="T:System.Xml.XmlReaderSettings" />.  
  
Значение по умолчанию — <see langword="null" />. Созданный экземпляр <see cref="T:System.Xml.XmlReader" /> будет использовать новую пустую таблицу <see cref="T:System.Xml.NameTable" />, если это значение будет равно <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Присвойте этому свойству <xref:System.Xml.XmlNameTable> экземпляр, если требуется совместно использовать общую таблицу имен для всех созданных экземпляров <xref:System.Xml.XmlReader>.  
  
> [!NOTE]
>  Класс <xref:System.Xml.NameTable> не является потокобезопасным. Поэтому он не может совместно использоваться объектами <xref:System.Xml.XmlReader>, которые выполняются одновременно в разных потоках.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProhibitDtd">
      <MemberSignature Language="C#" Value="public bool ProhibitDtd { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ProhibitDtd" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReaderSettings.ProhibitDtd" />
      <MemberSignature Language="VB.NET" Value="Public Property ProhibitDtd As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ProhibitDtd { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ProhibitDtd : bool with get, set" Usage="System.Xml.XmlReaderSettings.ProhibitDtd" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.Obsolete("Use XmlReaderSettings.DtdProcessing property instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, определяющее, следует ли запретить обработку DTD. Это свойство устарело. Взамен рекомендуется использовать <see cref="P:System.Xml.XmlTextReader.DtdProcessing" />.</summary>
        <value>Значение <see langword="true" /> для запрещения обработки DTD; в противном случае — <see langword="false" />. Значение по умолчанию — <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если задано значение `true`, <xref:System.Xml.XmlReader> создает исключение <xref:System.Xml.XmlException> при обнаружении любого содержимого DTD. Не включайте обработку DTD, если есть опасность атак типа «отказ в обслуживании» или если ведется работа с ненадежными источниками.  
  
 Если обработка DTD включена, то с помощью класса <xref:System.Xml.XmlSecureResolver> можно ограничить ресурсы, доступные для объекта <xref:System.Xml.XmlReader>. Кроме того, можно создать собственное приложение, ограничивающее объем памяти и время, выделяемое на обработку XML. Например, можно ограничить время ожидания в приложении ASP.NET.  
  
 Это свойство устарело. Взамен рекомендуется использовать <xref:System.Xml.XmlTextReader.DtdProcessing%2A>. Если для <xref:System.Xml.XmlReaderSettings.ProhibitDtd%2A> было задано значение по умолчанию `true` задать для <xref:System.Xml.XmlTextReader.DtdProcessing%2A> `Prohibit`. Если для параметра <xref:System.Xml.XmlReaderSettings.ProhibitDtd%2A> задано значение `false` установить <xref:System.Xml.XmlTextReader.DtdProcessing%2A> `Parse`.  
  
   
  
## Examples  
 В следующем примере выполняется проверка данных с помощью DTD.  
  
 [!code-cpp[XmlReaderSettings.DtdValidate#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlReaderSettings.DtdValidate/CPP/XmlReaderSettings.DtdValidate.cpp#1)]
 [!code-csharp[XmlReaderSettings.DtdValidate#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderSettings.DtdValidate/CS/validdtd.cs#1)]
 [!code-vb[XmlReaderSettings.DtdValidate#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderSettings.DtdValidate/VB/validdtd.vb#1)]  
  
 В этом примере в качестве входных данных используется файл Итемдтд. XML.  
  
 [!code-xml[XmlReaderSettings.DtdValidate#2](~/samples/snippets/xml/VS_Snippets_Data/XmlReaderSettings.DtdValidate/XML/itemDTD.xml#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReaderSettings.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reset();" />
      <MemberSignature Language="F#" Value="member this.Reset : unit -&gt; unit" Usage="xmlReaderSettings.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Повторно загружает значения по умолчанию для элементов класса параметров.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 В следующей таблице показаны начальные значения свойств для экземпляра <xref:System.Xml.XmlReaderSettings>.  
  
|Свойство.|Начальное значение|  
|--------------|-------------------|  
|<xref:System.Xml.XmlReaderSettings.Async%2A>|`false`.|  
|<xref:System.Xml.XmlReaderSettings.CheckCharacters%2A>|`true`.|  
|<xref:System.Xml.XmlReaderSettings.ConformanceLevel%2A>|<xref:System.Xml.ConformanceLevel.Document>.|  
|<xref:System.Xml.XmlReaderSettings.IgnoreComments%2A>|`false`.|  
|<xref:System.Xml.XmlReaderSettings.IgnoreProcessingInstructions%2A>|`false`.|  
|<xref:System.Xml.XmlReaderSettings.IgnoreWhitespace%2A>|`false`.|  
|<xref:System.Xml.XmlReaderSettings.LineNumberOffset%2A>|0.|  
|<xref:System.Xml.XmlReaderSettings.LinePositionOffset%2A>|0.|  
|<xref:System.Xml.XmlReaderSettings.MaxCharactersFromEntities%2A>|0 (нет ограничения на количество символов, которые получится в результате развертывания сущностей).|  
|<xref:System.Xml.XmlReaderSettings.MaxCharactersInDocument%2A>|0 (ограничения на размер XML-документа отсутствуют).|  
|<xref:System.Xml.XmlReaderSettings.NameTable%2A>|`null`.|  
|<xref:System.Xml.XmlTextReader.DtdProcessing%2A>|<xref:System.Xml.DtdProcessing.Prohibit>|  
|<xref:System.Xml.XmlReaderSettings.ProhibitDtd%2A>|`true`. Это свойство устарело. Взамен рекомендуется использовать <xref:System.Xml.XmlTextReader.DtdProcessing%2A>. Если для <xref:System.Xml.XmlReaderSettings.ProhibitDtd%2A> было задано значение по умолчанию `true` задать для <xref:System.Xml.XmlTextReader.DtdProcessing%2A> `Prohibit`. Если для параметра <xref:System.Xml.XmlReaderSettings.ProhibitDtd%2A> задано значение `false` установить <xref:System.Xml.XmlTextReader.DtdProcessing%2A> `Parse`.|  
|<xref:System.Xml.XmlReaderSettings.Schemas%2A>|Пустой объект <xref:System.Xml.Schema.XmlSchemaSet>|  
|<xref:System.Xml.XmlReaderSettings.ValidationFlags%2A>|<xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints>.|  
|<xref:System.Xml.XmlReaderSettings.ValidationType%2A>|<xref:System.Xml.ValidationType.None>.|  
|<xref:System.Xml.XmlReaderSettings.XmlResolver%2A>|Новый объект <xref:System.Xml.XmlUrlResolver>.|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
        <altmember cref="M:System.Xml.XmlReader.Create(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Schemas">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaSet Schemas { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Schema.XmlSchemaSet Schemas" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReaderSettings.Schemas" />
      <MemberSignature Language="VB.NET" Value="Public Property Schemas As XmlSchemaSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Schema::XmlSchemaSet ^ Schemas { System::Xml::Schema::XmlSchemaSet ^ get(); void set(System::Xml::Schema::XmlSchemaSet ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Schemas : System.Xml.Schema.XmlSchemaSet with get, set" Usage="System.Xml.XmlReaderSettings.Schemas" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaSet</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает <see cref="T:System.Xml.Schema.XmlSchemaSet" /> для использования при проверке схемы.</summary>
        <value>Объект <see cref="T:System.Xml.Schema.XmlSchemaSet" /> для использования при проверке схемы. Значением по умолчанию является пустой объект <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
> -   Не используйте схемы из неизвестных или ненадежных источников или расположений. Это приведет к нарушению безопасности кода.  
> -   Схемы XML (включая встроенные схемы) по сути уязвимы для атак типа "отказ в обслуживании"; не принимайте их в недоверенных сценариях.  
> -   Сообщения об ошибках и исключения проверки схемы могут представлять конфиденциальные сведения о модели содержимого или пути URI в файл схемы. Будьте внимательны, чтобы не предоставлять эти сведения ненадежным вызывающим объектам.  
> -   Дополнительные сведения см. в разделе "вопросы безопасности".  
  
 Класс <xref:System.Xml.Schema.XmlSchemaSet> поддерживает только схемы языка определения схем XML (XSD). <xref:System.Xml.XmlReader> экземпляры, созданные методом <xref:System.Xml.XmlReader.Create%2A>, нельзя настроить для включения проверки схемы XML-Data Reduced (XDR).  
  
## <a name="security-considerations"></a>Замечания по безопасности  
  
-   Не используйте схемы из неизвестных или ненадежных источников. Это приведет к нарушению безопасности кода. Класс <xref:System.Xml.XmlUrlResolver> используется для разрешения внешних схем по умолчанию. Чтобы отключить разрешение на включение, импорт и переопределение элементов схемы, задайте для свойства <xref:System.Xml.Schema.XmlSchemaSet.XmlResolver%2A?displayProperty=nameWithType> значение `null`.  
  
-   Исключения, возникающие в результате использования класса <xref:System.Xml.Schema.XmlSchemaSet>, например класса <xref:System.Xml.Schema.XmlSchemaException>, могут содержать конфиденциальные сведения, которые не должны предоставляться в ненадежных сценариях. Например, свойство <xref:System.Xml.Schema.XmlSchemaException.SourceUri%2A> <xref:System.Xml.Schema.XmlSchemaException> Возвращает путь универсального кода ресурса (URI) к файлу схемы, вызвавшему исключение. Свойство <xref:System.Xml.Schema.XmlSchemaException.SourceUri%2A> не должно предоставляться в недоверенных сценариях. Исключения должны быть правильно обработаны, чтобы эти конфиденциальные сведения не раскрываются в ненадежных сценариях.  
  
   
  
## Examples  
 В приведенном ниже примере используется объект <xref:System.Xml.XmlReaderSettings> и метод <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> для связывания схемы с XML-документом. Схема добавляется в свойство <xref:System.Xml.XmlReaderSettings.Schemas%2A> объекта <xref:System.Xml.XmlReaderSettings>. Значением свойства <xref:System.Xml.XmlReaderSettings.Schemas%2A> является объект <xref:System.Xml.Schema.XmlSchemaSet>. Схема используется для проверки соответствия XML-документа модели содержимого схемы. Ошибки и предупреждения проверки схемы обрабатываются <xref:System.Xml.XmlReaderSettings.ValidationEventHandler>, определенными в объекте <xref:System.Xml.XmlReaderSettings>.  
  
 [!code-cpp[XmlSchemaSetOverall Example#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlSchemaSetOverall Example/CPP/xmlschemasetexample.cpp#1)]
 [!code-csharp[XmlSchemaSetOverall Example#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlSchemaSetOverall Example/CS/xmlschemasetexample.cs#1)]
 [!code-vb[XmlSchemaSetOverall Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSchemaSetOverall Example/VB/xmlschemasetexample.vb#1)]  
  
 В качестве входных данных в примере используется файл books. XML.  
  
 [!code-xml[XmlSchemaSetOverall Example#2](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaSetOverall Example/XML/books.xml#2)]  
  
 В этом примере в качестве входных данных используется файл books. xsd.  
  
 [!code-xml[XmlSchemaSetOverall Example#3](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaSetOverall Example/XML/books.xsd#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
        <altmember cref="M:System.Xml.XmlReader.Create(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ValidationEventHandler">
      <MemberSignature Language="C#" Value="public event System.Xml.Schema.ValidationEventHandler ValidationEventHandler;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Xml.Schema.ValidationEventHandler ValidationEventHandler" />
      <MemberSignature Language="DocId" Value="E:System.Xml.XmlReaderSettings.ValidationEventHandler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Xml::Schema::ValidationEventHandler ^ ValidationEventHandler;" />
      <MemberSignature Language="F#" Value="member this.ValidationEventHandler : System.Xml.Schema.ValidationEventHandler " Usage="member this.ValidationEventHandler : System.Xml.Schema.ValidationEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.ValidationEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возникает, когда средство чтения встречает ошибки проверки.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Эти события возникают при чтении документа экземпляра XML, если для <xref:System.Xml.XmlReaderSettings.ValidationType%2A> задано значение <xref:System.Xml.ValidationType.DTD> или <xref:System.Xml.ValidationType.Schema>. Если параметр <xref:System.Xml.Schema.XmlSchemaValidationFlags.ReportValidationWarnings> включен в свойстве <xref:System.Xml.XmlReaderSettings.ValidationFlags%2A>, эти события также возникают при обнаружении любых предупреждений проверки.  
  
 Если модуль чтения настроен для проверки и не установлен обработчик событий проверки, то для всех ошибок проверки порождается <xref:System.Xml.Schema.XmlSchemaValidationException>. (Предупреждения проверки не приводят к возникновению <xref:System.Xml.Schema.XmlSchemaValidationException>).  
  
> [!IMPORTANT]
>  Сообщения об ошибках проверки могут представлять сведения о модели конфиденциального содержимого. Сообщения об ошибках и предупреждениях проверки обрабатываются с помощью делегата <xref:System.Xml.Schema.ValidationEventHandler> или предоставляются как <xref:System.Xml.Schema.XmlSchemaValidationException>, если для объекта <xref:System.Xml.XmlReaderSettings> не предоставлен обработчик событий (предупреждения проверки не вызывают возникновения <xref:System.Xml.Schema.XmlSchemaValidationException>). Эта информация о модели содержимого не должна предоставляться в недоверенных сценариях. Сообщения с предупреждениями о проверке по умолчанию подавляются, и их можно сообщить, установив флаг <xref:System.Xml.Schema.XmlSchemaValidationFlags.ReportValidationWarnings>.  
>   
>  Свойство <xref:System.Xml.Schema.XmlSchemaException.SourceUri%2A> <xref:System.Xml.Schema.XmlSchemaValidationException> Возвращает путь универсального кода ресурса (URI) к файлу схемы, вызвавшему исключение. Свойство <xref:System.Xml.Schema.XmlSchemaException.SourceUri%2A> не должно предоставляться в недоверенных сценариях.  
  
   
  
## Examples  
 В следующем примере показаны параметры, которые необходимо указать для создания читателя, который проверяет с помощью встроенной схемы, а также отображает предупреждения проверки. Обработчик событий проверки использует перечисление <xref:System.Xml.Schema.XmlSeverityType> для различения предупреждений и ошибок.  
  
 [!code-csharp[XmlReaderSettings.IgnoreInlineSchema#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderSettings.IgnoreInlineSchema/CS/factory_rdr_cctor.cs#1)]
 [!code-vb[XmlReaderSettings.IgnoreInlineSchema#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderSettings.IgnoreInlineSchema/VB/factory_rdr_cctor.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
        <altmember cref="M:System.Xml.XmlReader.Create(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ValidationFlags">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaValidationFlags ValidationFlags { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.Schema.XmlSchemaValidationFlags ValidationFlags" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReaderSettings.ValidationFlags" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidationFlags As XmlSchemaValidationFlags" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Schema::XmlSchemaValidationFlags ValidationFlags { System::Xml::Schema::XmlSchemaValidationFlags get(); void set(System::Xml::Schema::XmlSchemaValidationFlags value); };" />
      <MemberSignature Language="F#" Value="member this.ValidationFlags : System.Xml.Schema.XmlSchemaValidationFlags with get, set" Usage="System.Xml.XmlReaderSettings.ValidationFlags" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaValidationFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, указывающее параметры проверки схемы. Этот параметр применим к объектам <see cref="T:System.Xml.XmlReader" />, служащим для проверки схем (значение свойства <see cref="P:System.Xml.XmlReaderSettings.ValidationType" /> равно <see langword="ValidationType.Schema" />).</summary>
        <value>Побитовое сочетание значений перечисления, задающих параметры проверки. Поля <see cref="F:System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints" /> и <see cref="F:System.Xml.Schema.XmlSchemaValidationFlags.AllowXmlAttributes" /> по умолчанию включены. <see cref="F:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema" />, <see cref="F:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation" /> и <see cref="F:System.Xml.Schema.XmlSchemaValidationFlags.ReportValidationWarnings" /> по умолчанию отключены.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  Флаги проверки <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema> и <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation> объекта <xref:System.Xml.XmlReaderSettings> по умолчанию не установлены. Если эти флаги установлены, для разрешения расположения схем, обнаруженных в экземпляре документа в объекте <xref:System.Xml.XmlReaderSettings.XmlResolver%2A>, используется арбитр <xref:System.Xml.XmlReaderSettings> объекта <xref:System.Xml.XmlReader>. Если <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> объект `null`, расположения схем не разрешаются, даже если установлены флаги проверки <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema> и <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation>.  
>   
>  Схемы, добавленные во время проверки, добавляют новые типы и могут изменить результат проверки документа. Поэтому следует разрешать только внешние схемы из доверенных источников.  
>   
>  Отключение флага <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints> (включено по умолчанию) рекомендуется при проверке ненадежных больших XML-документов в сценариях высокого уровня доступности для схемы с ограничениями идентификации в большой части документа.  
  
   
  
## Examples  
 В следующем примере выполняется проверка XML-файла по встроенной схеме XML путем включения параметра <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema>. Средство чтения XML настроено для отображения предупреждений проверки. при этом также отображается ожидаемое предупреждение для корневого элемента.  
  
 [!code-csharp[XmlReaderSettings.IgnoreInlineSchema#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderSettings.IgnoreInlineSchema/CS/factory_rdr_cctor.cs#1)]
 [!code-vb[XmlReaderSettings.IgnoreInlineSchema#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderSettings.IgnoreInlineSchema/VB/factory_rdr_cctor.vb#1)]  
  
## <a name="input"></a>Входные данные  
 В этом примере в качестве входных данных используется файл inlineSchema.xml.  
  
 [!code-xml[XmlReaderSettings.IgnoreInlineSchema#3](~/samples/snippets/xml/VS_Snippets_Data/XmlReaderSettings.IgnoreInlineSchema/XML/inlineSchema.xml#3)]  
  
## <a name="output"></a>Вывод  
 Предупреждение: схема сопоставления не найдена. Проверка не выполнялась. Не удалось найти сведения о схеме для элемента 'root'.  
  
 Ошибка проверки: элемент "Кссдхеадкаунт: Числение" имеет недопустимый дочерний элемент "деление". Ожидается ID.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
        <altmember cref="M:System.Xml.XmlReader.Create(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ValidationType">
      <MemberSignature Language="C#" Value="public System.Xml.ValidationType ValidationType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.ValidationType ValidationType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReaderSettings.ValidationType" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidationType As ValidationType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::ValidationType ValidationType { System::Xml::ValidationType get(); void set(System::Xml::ValidationType value); };" />
      <MemberSignature Language="F#" Value="member this.ValidationType : System.Xml.ValidationType with get, set" Usage="System.Xml.XmlReaderSettings.ValidationType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.ValidationType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, показывающее, будет ли <see cref="T:System.Xml.XmlReader" /> при считывании выполнять проверку типа назначения.</summary>
        <value>Одно из значений <see cref="T:System.Xml.ValidationType" />, указывающее, будет ли XmlReader при считывании выполнять проверку или назначение типа. Значение по умолчанию — <see langword="ValidationType.None" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 В следующей таблице описаны значения <xref:System.Xml.ValidationType>.  
  
> [!NOTE]
>  Значения перечисления <xref:System.Xml.ValidationType.Auto> и <xref:System.Xml.ValidationType.XDR> являются устаревшими в .NET Framework версии 2,0.  
  
|ValidationType|Описание|  
|--------------------|-----------------|  
|`DTD`|Проверка выполняется с помощью определения типа документа (DTD). **Примечание.**  Свойству <xref:System.Xml.XmlReaderSettings.DtdProcessing%2A> также должно быть присвоено значение <xref:System.Xml.DtdProcessing.Parse>.|  
|`None`|<xref:System.Xml.XmlReader> не проверяет данные или не выполняет назначение типов.|  
|`Schema`|Проверка и присваивание типов выполняются с помощью схемы языка определения схемы XML (XSD). Модуль чтения обращается к схеме XML, используя следующий код:<br /><br /> — Использует свойство <xref:System.Xml.XmlReaderSettings.Schemas%2A> для доступа к объекту <xref:System.Xml.Schema.XmlSchemaSet>, связанному с этим модулем чтения.<br />— Использует встроенную схему, содержащуюся в документе экземпляра XML. (Параметр <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema> должен быть включен.)<br />— Использует XML-схему, заданную указаниями расположения схемы (`xsi:schemaLocation` или `xsi:noNamespaceSchemaLocation` атрибут), найденными в документе экземпляра XML. (Параметр <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation> должен быть включен.)|  
  
   
  
## Examples  
 В следующем примере выполняется проверка с помощью схемы, хранящейся в <xref:System.Xml.Schema.XmlSchemaSet>.  
  
 [!code-cpp[XmlReader_Validate_SchemaSet#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlReader_Validate_SchemaSet/CPP/XmlReader_Validate_SchemaSet.cpp#1)]
 [!code-csharp[XmlReader_Validate_SchemaSet#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlReader_Validate_SchemaSet/CS/validschemaset.cs#1)]
 [!code-vb[XmlReader_Validate_SchemaSet#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReader_Validate_SchemaSet/VB/validschemaset.vb#1)]  
  
 В образце используются следующие входные файлы:  
  
 `booksSchemaFail.xml`  
  
 [!code-xml[XmlReader_Validate_SchemaSet#2](~/samples/snippets/xml/VS_Snippets_Data/XmlReader_Validate_SchemaSet/XML/booksschemafail.xml#2)]  
  
 `books.xsd`  
  
 [!code-xml[XmlReader_Validate_SchemaSet#3](~/samples/snippets/xml/VS_Snippets_Data/XmlReader_Validate_SchemaSet/XML/books.xsd#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
        <altmember cref="M:System.Xml.XmlReader.Create(System.String)" />
        <altmember cref="T:System.Xml.Schema.XmlSchemaValidationFlags" />
      </Docs>
    </Member>
    <Member MemberName="XmlResolver">
      <MemberSignature Language="C#" Value="public System.Xml.XmlResolver XmlResolver { set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlResolver XmlResolver" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReaderSettings.XmlResolver" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlResolver As XmlResolver" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlResolver ^ XmlResolver {  void set(System::Xml::XmlResolver ^ value); };" />
      <MemberSignature Language="F#" Value="member this.XmlResolver : System.Xml.XmlResolver" Usage="System.Xml.XmlReaderSettings.XmlResolver" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlResolver</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Задает <see cref="T:System.Xml.XmlResolver" />, используемый для доступа ко внешним документам.</summary>
        <value><see cref="T:System.Xml.XmlResolver" />, используемый для доступа ко внешним документам. Если задано значение <see langword="null" />, создается исключение <see cref="T:System.Xml.XmlException" /> при попытке <see cref="T:System.Xml.XmlReader" /> получить доступ к внешнему ресурсу. По умолчанию используется новый <see cref="T:System.Xml.XmlUrlResolver" /> без учетных данных.  Начиная с .NET Framework 4.5.2, этот параметр имеет значение по умолчанию <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.XmlResolver> используется для нахождение и открытия документа XML-экземпляра или для нахождение и открытия всех внешних ресурсов, на которые ссылается документ экземпляра XML. Это могут быть сущности, DTD или схемы. Свойство <xref:System.Xml.XmlResolver.Credentials%2A?displayProperty=nameWithType> можно использовать для указания любых учетных данных, необходимых для проверки подлинности сети.  
  
> [!IMPORTANT]
>  Поскольку <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> может содержать конфиденциальные сведения, такие как учетные данные пользователя, следует соблюдать осторожность при кэшировании объектов <xref:System.Xml.XmlReaderSettings> или при передаче объекта <xref:System.Xml.XmlReaderSettings> из одного компонента в другой.  
>   
>  Для доступа к внешним документам можно использовать <xref:System.Xml.XmlSecureResolver>. Класс <xref:System.Xml.XmlSecureResolver> помогает защитить другую реализацию <xref:System.Xml.XmlResolver> путем упаковки объекта <xref:System.Xml.XmlResolver> и ограничивает ресурсы, к которым имеет доступ базовый <xref:System.Xml.XmlResolver>.  
>   
>  Флаги проверки <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema> и <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation> объекта <xref:System.Xml.XmlReaderSettings> по умолчанию не установлены. Если эти флаги установлены, для разрешения расположения схем, обнаруженных в экземпляре документа в объекте <xref:System.Xml.XmlReaderSettings.XmlResolver%2A>, используется арбитр <xref:System.Xml.XmlReaderSettings> объекта <xref:System.Xml.XmlReader>. Если <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> объект `null`, расположения схем не разрешаются, даже если установлены флаги проверки <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema> и <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation>.  
>   
>  Схемы, добавленные во время проверки, добавляют новые типы и могут изменить результат проверки документа. Поэтому следует разрешать только внешние схемы из доверенных источников.  
  
   
  
## Examples  
 В следующем примере создается <xref:System.Xml.XmlReader>, использующий <xref:System.Xml.XmlSecureResolver> с учетными данными по умолчанию.  
  
 [!code-csharp[XmlReader.Create#10](~/samples/snippets/csharp/VS_Snippets_Data/XmlReader.Create/CS/XmlReader_Create.cs#10)]
 [!code-vb[XmlReader.Create#10](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReader.Create/VB/XmlReader_Create.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
        <altmember cref="M:System.Xml.XmlReader.Create(System.String)" />
      </Docs>
    </Member>
  </Members>
</Type>
