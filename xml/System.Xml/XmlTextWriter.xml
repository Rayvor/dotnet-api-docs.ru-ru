<Type Name="XmlTextWriter" FullName="System.Xml.XmlTextWriter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1c85c3754011013f2f4a01e0fcf5882a1bfbcbd0" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70422190" /></Metadata><TypeSignature Language="C#" Value="public class XmlTextWriter : System.Xml.XmlWriter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlTextWriter extends System.Xml.XmlWriter" />
  <TypeSignature Language="DocId" Value="T:System.Xml.XmlTextWriter" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlTextWriter&#xA;Inherits XmlWriter" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlTextWriter : System::Xml::XmlWriter" />
  <TypeSignature Language="F#" Value="type XmlTextWriter = class&#xA;    inherit XmlWriter" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Xml.XmlWriter</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;netcore-2.2;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0;netcore-3.0;netstandard-2.1">
      <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="959e6-101">Представляет средство записи, предоставляющее способ быстрого прямого создания потоков (без кэширования) или файлов с данными XML, которые соответствуют рекомендациям консорциума W3C по языку XML версии 1.0 и пространств имен в XML.</span><span class="sxs-lookup"><span data-stu-id="959e6-101">Represents a writer that provides a fast, non-cached, forward-only way of generating streams or files containing XML data that conforms to the W3C Extensible Markup Language (XML) 1.0 and the Namespaces in XML recommendations.</span></span>  
  
<span data-ttu-id="959e6-102">Начиная с .NET Framework версии 2.0 рекомендуется использовать класс <see cref="T:System.Xml.XmlWriter" />.</span><span class="sxs-lookup"><span data-stu-id="959e6-102">Starting with the .NET Framework 2.0, we recommend that you use the <see cref="T:System.Xml.XmlWriter" /> class instead.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="959e6-103">Этот класс реализует <xref:System.Xml.XmlWriter> класс.</span><span class="sxs-lookup"><span data-stu-id="959e6-103">This class implements the <xref:System.Xml.XmlWriter> class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="959e6-104">Начиная с .NET Framework 2,0 рекомендуется создавать <xref:System.Xml.XmlWriter> экземпляры с <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> помощью метода и <xref:System.Xml.XmlWriterSettings> класса, чтобы воспользоваться преимуществами новых функциональных возможностей.</span><span class="sxs-lookup"><span data-stu-id="959e6-104">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="959e6-105">`XmlTextWriter`поддерживает стек пространства имен, соответствующий всем пространствам имен, определенным в текущем стеке элементов.</span><span class="sxs-lookup"><span data-stu-id="959e6-105">`XmlTextWriter` maintains a namespace stack corresponding to all the namespaces defined in the current element stack.</span></span> <span data-ttu-id="959e6-106">С `XmlTextWriter` помощью можно объявлять пространства имен вручную.</span><span class="sxs-lookup"><span data-stu-id="959e6-106">Using `XmlTextWriter` you can declare namespaces manually.</span></span>  
  
```csharp  
w.WriteStartElement("root");  
w.WriteAttributeString("xmlns", "x", null, "urn:1");  
 w.WriteStartElement("item","urn:1");  
 w.WriteEndElement();  
 w.WriteStartElement("item","urn:1");  
 w.WriteEndElement();  
w.WriteEndElement();  
```  
  
 <span data-ttu-id="959e6-107">Приведенный C# выше код выдает следующие выходные данные.</span><span class="sxs-lookup"><span data-stu-id="959e6-107">The above C# code produces the following output.</span></span> <span data-ttu-id="959e6-108">`XmlTextWriter`продвигает объявление пространства имен к корневому элементу, чтобы избежать его дублирования в двух дочерних элементах.</span><span class="sxs-lookup"><span data-stu-id="959e6-108">`XmlTextWriter` promotes the namespace declaration to the root element to avoid having it duplicated on the two child elements.</span></span> <span data-ttu-id="959e6-109">Дочерние элементы получают префикс из объявления пространства имен.</span><span class="sxs-lookup"><span data-stu-id="959e6-109">The child elements pick up the prefix from the namespace declaration.</span></span>  
  
```xml  
<root xmlns:x="urn:1">  
 <x:item/>  
 <x:item/>  
</x:root>  
```  
  
 <span data-ttu-id="959e6-110">`XmlTextWriter`также позволяет переопределить текущее объявление пространства имен.</span><span class="sxs-lookup"><span data-stu-id="959e6-110">`XmlTextWriter` also allows you to override the current namespace declaration.</span></span> <span data-ttu-id="959e6-111">В следующем примере URI пространства имен "123" переопределяется "ABC" для создания XML-элемента `<x:node xmlns:x="abc"/>`.</span><span class="sxs-lookup"><span data-stu-id="959e6-111">In the following example, the namespace URI "123" is overridden by "abc" to produce the XML element `<x:node xmlns:x="abc"/>`.</span></span>  
  
```csharp  
w.WriteStartElement("x","node","123");  
w.WriteAttributeString("xmlns","x",null,"abc");  
```  
  
 <span data-ttu-id="959e6-112">Используя методы Write, которые принимают префикс в качестве аргумента, можно также указать используемый префикс.</span><span class="sxs-lookup"><span data-stu-id="959e6-112">By using the write methods that take a prefix as an argument you can also specify which prefix to use.</span></span> <span data-ttu-id="959e6-113">В следующем примере два разных префикса сопоставляются с одним и тем же URI пространства имен для создания XML- `<x:root xmlns:x="urn:1"><y:item xmlns:y="urn:1"/></x:root>`текста.</span><span class="sxs-lookup"><span data-stu-id="959e6-113">In the following example, two different prefixes are mapped to the same namespace URI to produce the XML text `<x:root xmlns:x="urn:1"><y:item xmlns:y="urn:1"/></x:root>`.</span></span>  
  
```csharp  
XmlTextWriter w = new XmlTextWriter(Console.Out);  
w.WriteStartElement("x","root","urn:1");  
 w.WriteStartElement("y","item","urn:1");  
 w.WriteEndElement();  
w.WriteEndElement();  
w.Close();  
```  
  
 <span data-ttu-id="959e6-114">Если несколько объявлений пространств имен сопоставляют разные префиксы для одного URI пространства имен, `XmlTextWriter` просматривает стек объявлений пространств имен в обратном направлении и выбирает ближайшее из них.</span><span class="sxs-lookup"><span data-stu-id="959e6-114">If there are multiple namespace declarations mapping different prefixes to the same namespace URI, `XmlTextWriter` walks the stack of namespace declarations backwards and picks the closest one.</span></span>  
  
```csharp  
XmlTextWriter w = new XmlTextWriter(Console.Out);  
w.Formatting = Formatting.Indented;  
w.WriteStartElement("x","root","urn:1");  
w.WriteStartElement("y","item","urn:1");  
w.WriteAttributeString("attr","urn:1","123");  
w.WriteEndElement();  
w.WriteEndElement();  
w.Close();  
```  
  
 <span data-ttu-id="959e6-115">В приведенном C# выше примере, поскольку `WriteAttributeString` в вызове не указан префикс, модуль записи использует последний префикс, помещенный в стек пространства имен, и создает следующий код XML:</span><span class="sxs-lookup"><span data-stu-id="959e6-115">In the above C# example, because the `WriteAttributeString` call does not specify a prefix, the writer uses the last prefix pushed onto the namespace stack, and produces the following XML:</span></span>  
  
```xml  
<x:root xmlns:x="urn:1">  
 <y:item y:attr="123" xmlns:y="urn:1" />  
</x:root>  
```  
  
 <span data-ttu-id="959e6-116">Если возникает конфликт пространств имен `XmlTextWriter` , разрешает их путем создания альтернативных префиксов.</span><span class="sxs-lookup"><span data-stu-id="959e6-116">If namespace conflicts occur, `XmlTextWriter` resolves them by generating alternate prefixes.</span></span> <span data-ttu-id="959e6-117">Например, если атрибут и элемент имеют одинаковый префикс, но разные пространства имен, `XmlWriter` создает альтернативный префикс для атрибута.</span><span class="sxs-lookup"><span data-stu-id="959e6-117">For example, if an attribute and element have the same prefix but different namespaces, `XmlWriter` generates an alternate prefix for the attribute.</span></span> <span data-ttu-id="959e6-118">Созданные префиксы `n{i}` называются, где `i` — число, начинающееся с 1.</span><span class="sxs-lookup"><span data-stu-id="959e6-118">The generated prefixes are named `n{i}` where `i` is a number beginning at 1.</span></span> <span data-ttu-id="959e6-119">Для каждого элемента число сбрасывается до 1.</span><span class="sxs-lookup"><span data-stu-id="959e6-119">The number is reset to 1 for each element.</span></span>  
  
 <span data-ttu-id="959e6-120">Атрибуты, связанные с URI пространства имен, должны иметь префикс (пространства имен по умолчанию не применяются к атрибутам).</span><span class="sxs-lookup"><span data-stu-id="959e6-120">Attributes which are associated with a namespace URI must have a prefix (default namespaces do not apply to attributes).</span></span> <span data-ttu-id="959e6-121">Это соответствует разделу 5,2 рекомендаций по пространствам имен W3C в XML.</span><span class="sxs-lookup"><span data-stu-id="959e6-121">This conforms to section 5.2 of the W3C Namespaces in XML recommendation.</span></span> <span data-ttu-id="959e6-122">Если атрибут ссылается на URI пространства имен, но не указывает префикс, то модуль записи создает префикс для атрибута.</span><span class="sxs-lookup"><span data-stu-id="959e6-122">If an attribute references a namespace URI, but does not specify a prefix, the writer generates a prefix for the attribute.</span></span>  
  
 <span data-ttu-id="959e6-123">При записи пустого элемента добавляется дополнительное пространство между именем тега и закрывающим тегом, например `<item />`.</span><span class="sxs-lookup"><span data-stu-id="959e6-123">When writing an empty element, an additional space is added between tag name and the closing tag, for example `<item />`.</span></span> <span data-ttu-id="959e6-124">Это обеспечивает совместимость с более старыми браузерами.</span><span class="sxs-lookup"><span data-stu-id="959e6-124">This provides compatibility with older browsers.</span></span>  
  
 <span data-ttu-id="959e6-125">Если используется в качестве `null` параметра метода и `String.Empty` эквивалентны. `String`</span><span class="sxs-lookup"><span data-stu-id="959e6-125">When a `String` is used as method parameter, `null` and `String.Empty` are equivalent.</span></span> <span data-ttu-id="959e6-126">`String.Empty`соответствует правилам W3C.</span><span class="sxs-lookup"><span data-stu-id="959e6-126">`String.Empty` follows the W3C rules.</span></span>  
  
 <span data-ttu-id="959e6-127">Для записи строго типизированных данных используйте <xref:System.Xml.XmlConvert> класс для преобразования типов данных в строку.</span><span class="sxs-lookup"><span data-stu-id="959e6-127">To write strongly typed data, use the <xref:System.Xml.XmlConvert> class to convert data types to string.</span></span> <span data-ttu-id="959e6-128">Например, C# следующий код преобразует данные `Double` из в `String` и записывает элемент `<price>19.95</price>`.</span><span class="sxs-lookup"><span data-stu-id="959e6-128">For example, the following C# code converts the data from `Double` to `String` and writes the element `<price>19.95</price>`.</span></span>  
  
```csharp  
Double price = 19.95;  
writer.WriteElementString("price", XmlConvert.ToString(price));  
```  
  
 <span data-ttu-id="959e6-129">`XmlTextWriter`не проверяет наличие следующих фрагментов:</span><span class="sxs-lookup"><span data-stu-id="959e6-129">`XmlTextWriter` does not check for the following:</span></span>  
  
-   <span data-ttu-id="959e6-130">Недопустимые символы в именах атрибутов и элементов.</span><span class="sxs-lookup"><span data-stu-id="959e6-130">Invalid characters in attribute and element names.</span></span>  
  
-   <span data-ttu-id="959e6-131">Символы Юникода, не соответствующие заданной кодировке.</span><span class="sxs-lookup"><span data-stu-id="959e6-131">Unicode characters that do not fit the specified encoding.</span></span> <span data-ttu-id="959e6-132">Если символы Юникода не соответствуют заданной кодировке, `XmlTextWriter` компонент не помещает символы Юникода в символьные сущности.</span><span class="sxs-lookup"><span data-stu-id="959e6-132">If the Unicode characters do not fit the specified encoding, the `XmlTextWriter` does not escape the Unicode characters into character entities.</span></span>  
  
-   <span data-ttu-id="959e6-133">Дублирование атрибутов.</span><span class="sxs-lookup"><span data-stu-id="959e6-133">Duplicate attributes.</span></span>  
  
-   <span data-ttu-id="959e6-134">Символы в открытом идентификаторе DOCTYPE или системном идентификаторе.</span><span class="sxs-lookup"><span data-stu-id="959e6-134">Characters in the DOCTYPE public identifier or system identifier.</span></span>  
  
## <a name="security-considerations"></a><span data-ttu-id="959e6-135">Вопросы безопасности</span><span class="sxs-lookup"><span data-stu-id="959e6-135">Security Considerations</span></span>  
 <span data-ttu-id="959e6-136">При работе с <xref:System.Xml.XmlTextWriter> классом необходимо учитывать следующие моменты.</span><span class="sxs-lookup"><span data-stu-id="959e6-136">The following items are things to consider when working with the <xref:System.Xml.XmlTextWriter> class.</span></span>  
  
-   <span data-ttu-id="959e6-137">Исключения, вызываемые, <xref:System.Xml.XmlTextWriter> могут раскрывать сведения о пути, которые не должны быть собраны в приложение.</span><span class="sxs-lookup"><span data-stu-id="959e6-137">Exceptions thrown by the <xref:System.Xml.XmlTextWriter> can disclose path information that you do not want bubbled up to the application.</span></span> <span data-ttu-id="959e6-138">Приложения должны перехватывать исключения и обрабатывать их соответствующим образом.</span><span class="sxs-lookup"><span data-stu-id="959e6-138">Your applications must catch exceptions and process them appropriately.</span></span>  
  
-   <span data-ttu-id="959e6-139">При передаче <xref:System.Xml.XmlTextWriter> другому приложению ему предоставляется базовый поток.</span><span class="sxs-lookup"><span data-stu-id="959e6-139">When you pass the <xref:System.Xml.XmlTextWriter> to another application the underlying stream is exposed to that application.</span></span> <span data-ttu-id="959e6-140">Если нужно передать <xref:System.Xml.XmlTextWriter> приложению с частичным доверием, то следует использовать объект <xref:System.Xml.XmlWriter>, созданный методом <xref:System.Xml.XmlWriter.Create%2A>.</span><span class="sxs-lookup"><span data-stu-id="959e6-140">If you need to pass the <xref:System.Xml.XmlTextWriter> to a semi-trusted application, you should use an <xref:System.Xml.XmlWriter> object created by the <xref:System.Xml.XmlWriter.Create%2A> method instead.</span></span>  
  
-   <span data-ttu-id="959e6-141">Не проверяет данные, передаваемые <xref:System.Xml.XmlTextWriter.WriteDocType%2A> в методы или  <xref:System.Xml.XmlTextWriter.WriteRaw%2A> . <xref:System.Xml.XmlTextWriter></span><span class="sxs-lookup"><span data-stu-id="959e6-141">The <xref:System.Xml.XmlTextWriter> does not validate any data that is passed to the <xref:System.Xml.XmlTextWriter.WriteDocType%2A> or <xref:System.Xml.XmlTextWriter.WriteRaw%2A> methods.</span></span> <span data-ttu-id="959e6-142">В эти методы не следует передавать произвольные данные.</span><span class="sxs-lookup"><span data-stu-id="959e6-142">You should not pass arbitrary data to these methods.</span></span>  
  
-   <span data-ttu-id="959e6-143">Если параметры по умолчанию изменены, то не гарантируется, что создаваемые выходные данные будут правильно сформированы XML-данными.</span><span class="sxs-lookup"><span data-stu-id="959e6-143">If the default settings are changed, there is no guarantee that the generated output is well-formed XML data.</span></span>  
  
-   <span data-ttu-id="959e6-144">Не принимайте вспомогательные компоненты, такие как <xref:System.Text.Encoding> объект, из ненадежного источника.</span><span class="sxs-lookup"><span data-stu-id="959e6-144">Do not accept supporting components, such as an <xref:System.Text.Encoding> object, from an untrusted source.</span></span>  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/standard/data/xml/index.md"><span data-ttu-id="959e6-145">XML-документы и данные</span><span class="sxs-lookup"><span data-stu-id="959e6-145">XML Documents and Data</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="959e6-146">Создает экземпляр класса <see langword="XmlTextWriter" />.</span><span class="sxs-lookup"><span data-stu-id="959e6-146">Creates an instance of the <see langword="XmlTextWriter" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="959e6-147">Начиная с .NET Framework 2,0 рекомендуется создавать <xref:System.Xml.XmlWriter> экземпляры с <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> помощью метода и <xref:System.Xml.XmlWriterSettings> класса, чтобы воспользоваться преимуществами новых функциональных возможностей.</span><span class="sxs-lookup"><span data-stu-id="959e6-147">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlTextWriter (System.IO.TextWriter w);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.TextWriter w) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.#ctor(System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (w As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlTextWriter(System::IO::TextWriter ^ w);" />
      <MemberSignature Language="F#" Value="new System.Xml.XmlTextWriter : System.IO.TextWriter -&gt; System.Xml.XmlTextWriter" Usage="new System.Xml.XmlTextWriter w" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="w" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="w"><span data-ttu-id="959e6-148">Экземпляр <see langword="TextWriter" />, в который выполняется запись.</span><span class="sxs-lookup"><span data-stu-id="959e6-148">The <see langword="TextWriter" /> to write to.</span></span> <span data-ttu-id="959e6-149">Предполагается, что для <see langword="TextWriter" /> задана верная кодировка.</span><span class="sxs-lookup"><span data-stu-id="959e6-149">It is assumed that the <see langword="TextWriter" /> is already set to the correct encoding.</span></span></param>
        <summary><span data-ttu-id="959e6-150">Инициализирует новый экземпляр класса <see langword="XmlTextWriter" /> с помощью указанного класса <see cref="T:System.IO.TextWriter" />.</span><span class="sxs-lookup"><span data-stu-id="959e6-150">Creates an instance of the <see langword="XmlTextWriter" /> class using the specified <see cref="T:System.IO.TextWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="959e6-151">Начиная с .NET Framework 2,0 рекомендуется создавать <xref:System.Xml.XmlWriter> экземпляры с <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> помощью метода и <xref:System.Xml.XmlWriterSettings> класса, чтобы воспользоваться преимуществами новых функциональных возможностей.</span><span class="sxs-lookup"><span data-stu-id="959e6-151">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlTextWriter (System.IO.Stream w, System.Text.Encoding encoding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream w, class System.Text.Encoding encoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.#ctor(System.IO.Stream,System.Text.Encoding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlTextWriter(System::IO::Stream ^ w, System::Text::Encoding ^ encoding);" />
      <MemberSignature Language="F#" Value="new System.Xml.XmlTextWriter : System.IO.Stream * System.Text.Encoding -&gt; System.Xml.XmlTextWriter" Usage="new System.Xml.XmlTextWriter (w, encoding)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="w" Type="System.IO.Stream" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="w"><span data-ttu-id="959e6-152">Поток, в который будет выполняться запись.</span><span class="sxs-lookup"><span data-stu-id="959e6-152">The stream to which you want to write.</span></span></param>
        <param name="encoding"><span data-ttu-id="959e6-153">Создаваемая кодировка.</span><span class="sxs-lookup"><span data-stu-id="959e6-153">The encoding to generate.</span></span> <span data-ttu-id="959e6-154">Если для кодировки задано значение <see langword="null" />, для потока используется кодировка UTF-8, а атрибут кодировки исключается из <see langword="ProcessingInstruction" />.</span><span class="sxs-lookup"><span data-stu-id="959e6-154">If encoding is <see langword="null" /> it writes out the stream as UTF-8 and omits the encoding attribute from the <see langword="ProcessingInstruction" />.</span></span></param>
        <summary><span data-ttu-id="959e6-155">Создает экземпляр класса <see langword="XmlTextWriter" /> с помощью указанного потока и кодировки.</span><span class="sxs-lookup"><span data-stu-id="959e6-155">Creates an instance of the <see langword="XmlTextWriter" /> class using the specified stream and encoding.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="959e6-156">Начиная с .NET Framework 2,0 рекомендуется создавать <xref:System.Xml.XmlWriter> экземпляры с <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> помощью метода и <xref:System.Xml.XmlWriterSettings> класса, чтобы воспользоваться преимуществами новых функциональных возможностей.</span><span class="sxs-lookup"><span data-stu-id="959e6-156">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="959e6-157">Кодировка не поддерживается или не может быть записано в поток.</span><span class="sxs-lookup"><span data-stu-id="959e6-157">The encoding is not supported or the stream cannot be written to.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="959e6-158"><paramref name="w" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="959e6-158"><paramref name="w" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlTextWriter (string filename, System.Text.Encoding encoding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string filename, class System.Text.Encoding encoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.#ctor(System.String,System.Text.Encoding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlTextWriter(System::String ^ filename, System::Text::Encoding ^ encoding);" />
      <MemberSignature Language="F#" Value="new System.Xml.XmlTextWriter : string * System.Text.Encoding -&gt; System.Xml.XmlTextWriter" Usage="new System.Xml.XmlTextWriter (filename, encoding)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="filename"><span data-ttu-id="959e6-159">Имя файла, в который осуществляется запись.</span><span class="sxs-lookup"><span data-stu-id="959e6-159">The filename to write to.</span></span> <span data-ttu-id="959e6-160">Если файл существует, он будет усечен и в него будет записано новое содержимое.</span><span class="sxs-lookup"><span data-stu-id="959e6-160">If the file exists, it truncates it and overwrites it with the new content.</span></span></param>
        <param name="encoding"><span data-ttu-id="959e6-161">Создаваемая кодировка.</span><span class="sxs-lookup"><span data-stu-id="959e6-161">The encoding to generate.</span></span> <span data-ttu-id="959e6-162">Если для кодировки задано значение <see langword="null" />, для файла используется кодировка UTF-8, а атрибут кодировки исключается из <see langword="ProcessingInstruction" />.</span><span class="sxs-lookup"><span data-stu-id="959e6-162">If encoding is <see langword="null" /> it writes the file out as UTF-8, and omits the encoding attribute from the <see langword="ProcessingInstruction" />.</span></span></param>
        <summary><span data-ttu-id="959e6-163">Создает экземпляр класса <see cref="T:System.Xml.XmlTextWriter" /> с помощью указанного файла.</span><span class="sxs-lookup"><span data-stu-id="959e6-163">Creates an instance of the <see cref="T:System.Xml.XmlTextWriter" /> class using the specified file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="959e6-164">Начиная с .NET Framework 2,0 рекомендуется создавать <xref:System.Xml.XmlWriter> экземпляры с <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> помощью метода и <xref:System.Xml.XmlWriterSettings> класса, чтобы воспользоваться преимуществами новых функциональных возможностей.</span><span class="sxs-lookup"><span data-stu-id="959e6-164">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="959e6-165">Кодировка не поддерживается, имя файла является пустым, содержит только пробелы или один или несколько недопустимых символов.</span><span class="sxs-lookup"><span data-stu-id="959e6-165">The encoding is not supported; the filename is empty, contains only white space, or contains one or more invalid characters.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="959e6-166">Отказано в доступе.</span><span class="sxs-lookup"><span data-stu-id="959e6-166">Access is denied.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="959e6-167">Имя файла — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="959e6-167">The filename is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="959e6-168">Не найден каталог для записи.</span><span class="sxs-lookup"><span data-stu-id="959e6-168">The directory to write to is not found.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="959e6-169">Имя файла включает неверный или недопустимый синтаксис имени файла, имени каталога или метки тома.</span><span class="sxs-lookup"><span data-stu-id="959e6-169">The filename includes an incorrect or invalid syntax for file name, directory name, or volume label syntax.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="959e6-170">У вызывающего объекта отсутствует необходимое разрешение.</span><span class="sxs-lookup"><span data-stu-id="959e6-170">The caller does not have the required permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BaseStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream BaseStream { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Stream BaseStream" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextWriter.BaseStream" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BaseStream As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Stream ^ BaseStream { System::IO::Stream ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BaseStream : System.IO.Stream" Usage="System.Xml.XmlTextWriter.BaseStream" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="959e6-171">Возвращает объект базового потока.</span><span class="sxs-lookup"><span data-stu-id="959e6-171">Gets the underlying stream object.</span></span></summary>
        <value><span data-ttu-id="959e6-172">Поток, в который осуществляется запись с помощью <see langword="XmlTextWriter" /> или значение <see langword="null" />, если <see langword="XmlTextWriter" /> создан с помощью класса <see cref="T:System.IO.TextWriter" />, который не наследуется от класса <see cref="T:System.IO.StreamWriter" />.</span><span class="sxs-lookup"><span data-stu-id="959e6-172">The stream to which the <see langword="XmlTextWriter" /> is writing or <see langword="null" /> if the <see langword="XmlTextWriter" /> was constructed using a <see cref="T:System.IO.TextWriter" /> that does not inherit from the <see cref="T:System.IO.StreamWriter" /> class.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="959e6-173">Начиная с .NET Framework 2,0 рекомендуется создавать <xref:System.Xml.XmlWriter> экземпляры с <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> помощью метода и <xref:System.Xml.XmlWriterSettings> класса, чтобы воспользоваться преимуществами новых функциональных возможностей.</span><span class="sxs-lookup"><span data-stu-id="959e6-173">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="959e6-174">Если модуль записи был создан с помощью `TextWriter` , производного `StreamWriter` от класса, это <xref:System.IO.StreamWriter.BaseStream%2A?displayProperty=nameWithType> свойство эквивалентно свойству.</span><span class="sxs-lookup"><span data-stu-id="959e6-174">If the writer was constructed using a `TextWriter` that is derived from the `StreamWriter` class, this property is equivalent to the <xref:System.IO.StreamWriter.BaseStream%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="959e6-175">Если модуль записи был создан с помощью <xref:System.IO.Stream>, это свойство возвращает объект `Stream` , переданный в конструктор.</span><span class="sxs-lookup"><span data-stu-id="959e6-175">If the writer was constructed using a <xref:System.IO.Stream>, this property returns the `Stream` passed to the constructor.</span></span> <span data-ttu-id="959e6-176">Если модуль записи был создан с использованием имени файла, это свойство возвращает объект `Stream` , представляющий файл.</span><span class="sxs-lookup"><span data-stu-id="959e6-176">If the writer was constructed using a file name, this property returns the `Stream` representing the file.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberSignature Language="F#" Value="override this.Close : unit -&gt; unit" Usage="xmlTextWriter.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="959e6-177">Закрывает данный и базовый потоки.</span><span class="sxs-lookup"><span data-stu-id="959e6-177">Closes this stream and the underlying stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="959e6-178">Начиная с .NET Framework 2,0 рекомендуется создавать <xref:System.Xml.XmlWriter> экземпляры с <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> помощью метода и <xref:System.Xml.XmlWriterSettings> класса, чтобы воспользоваться преимуществами новых функциональных возможностей.</span><span class="sxs-lookup"><span data-stu-id="959e6-178">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="959e6-179">Все элементы или атрибуты, открытые слева, автоматически закрываются.</span><span class="sxs-lookup"><span data-stu-id="959e6-179">Any elements or attributes left open are automatically closed.</span></span>  
  
 <span data-ttu-id="959e6-180">Этот метод не создает исключений.</span><span class="sxs-lookup"><span data-stu-id="959e6-180">This method does not throw any exceptions.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="959e6-181">В следующем примере записывается фрагмент XML.</span><span class="sxs-lookup"><span data-stu-id="959e6-181">The following example writes an XML fragment.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public override void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Flush();" />
      <MemberSignature Language="F#" Value="override this.Flush : unit -&gt; unit" Usage="xmlTextWriter.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="959e6-182">Записывает в базовый поток содержимое буфера и сохраняет базовый поток.</span><span class="sxs-lookup"><span data-stu-id="959e6-182">Flushes whatever is in the buffer to the underlying streams and also flushes the underlying stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="959e6-183">Начиная с .NET Framework 2,0 рекомендуется создавать <xref:System.Xml.XmlWriter> экземпляры с <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> помощью метода и <xref:System.Xml.XmlWriterSettings> класса, чтобы воспользоваться преимуществами новых функциональных возможностей.</span><span class="sxs-lookup"><span data-stu-id="959e6-183">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="959e6-184">Этот метод вызывается вместо <xref:System.Xml.XmlTextWriter.Close%2A> того, когда требуется записать дополнительные сведения в базовый поток, не теряя тем, что все еще находится в буфере.</span><span class="sxs-lookup"><span data-stu-id="959e6-184">This is called instead of <xref:System.Xml.XmlTextWriter.Close%2A> when you want to write more to the underlying stream without losing what is still in the buffer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="959e6-185">В следующем примере записываются два фрагмента XML.</span><span class="sxs-lookup"><span data-stu-id="959e6-185">The following example writes out two XML fragments.</span></span>  
  
 [!code-cpp[XmlTextWriter.Flush#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlTextWriter.Flush/CPP/write2docs.cpp#1)]
 [!code-csharp[XmlTextWriter.Flush#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlTextWriter.Flush/CS/write2docs.cs#1)]
 [!code-vb[XmlTextWriter.Flush#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlTextWriter.Flush/VB/write2docs.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Formatting">
      <MemberSignature Language="C#" Value="public System.Xml.Formatting Formatting { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.Formatting Formatting" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextWriter.Formatting" />
      <MemberSignature Language="VB.NET" Value="Public Property Formatting As Formatting" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Formatting Formatting { System::Xml::Formatting get(); void set(System::Xml::Formatting value); };" />
      <MemberSignature Language="F#" Value="member this.Formatting : System.Xml.Formatting with get, set" Usage="System.Xml.XmlTextWriter.Formatting" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Formatting</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="959e6-186">Определяет способ форматирования выходных данных.</span><span class="sxs-lookup"><span data-stu-id="959e6-186">Indicates how the output is formatted.</span></span></summary>
        <value><span data-ttu-id="959e6-187">Одно из значений перечисления <see cref="T:System.Xml.Formatting" />.</span><span class="sxs-lookup"><span data-stu-id="959e6-187">One of the <see cref="T:System.Xml.Formatting" /> values.</span></span> <span data-ttu-id="959e6-188">По умолчанию используется значение <see langword="Formatting.None" /> (без форматирования).</span><span class="sxs-lookup"><span data-stu-id="959e6-188">The default is <see langword="Formatting.None" /> (no special formatting).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="959e6-189">Начиная с .NET Framework 2,0 рекомендуется создавать <xref:System.Xml.XmlWriter> экземпляры с <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> помощью метода и <xref:System.Xml.XmlWriterSettings> класса, чтобы воспользоваться преимуществами новых функциональных возможностей.</span><span class="sxs-lookup"><span data-stu-id="959e6-189">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="959e6-190">Если задан <xref:System.Xml.XmlTextWriter.Indentation%2A> <xref:System.Xml.XmlTextWriter.IndentChar%2A> параметр, дочерние элементы отображаются с отступом с помощью свойств и. `Indented`</span><span class="sxs-lookup"><span data-stu-id="959e6-190">If the `Indented` option is set, child elements are indented using the <xref:System.Xml.XmlTextWriter.Indentation%2A> and <xref:System.Xml.XmlTextWriter.IndentChar%2A> properties.</span></span> <span data-ttu-id="959e6-191">Только содержимое элемента имеет отступ.</span><span class="sxs-lookup"><span data-stu-id="959e6-191">Only element content is indented.</span></span> <span data-ttu-id="959e6-192">Следующий C# код записывает элементы HTML, включая смешанное содержимое:</span><span class="sxs-lookup"><span data-stu-id="959e6-192">The following C# code writes out HTML elements including mixed content:</span></span>  
  
```csharp  
XmlTextWriter w = new XmlTextWriter(Console.Out);   
 w.Formatting = Formatting.Indented;   
 w.WriteStartElement("ol");   
 w.WriteStartElement("li");   
 w.WriteString("The big "); // This means "li" now has a mixed content model.  
 w.WriteElementString("b", "E");   
 w.WriteElementString("i", "lephant");   
 w.WriteString(" walks slowly.");   
 w.WriteEndElement();   
 w.WriteEndElement();  
```  
  
 <span data-ttu-id="959e6-193">Приведенный выше код выдает следующие выходные данные:</span><span class="sxs-lookup"><span data-stu-id="959e6-193">The above code produces the following output:</span></span>  
  
```xml  
<ol>   
  <li>The big <b>E</b><i>lephant</i> walks slowly.</li>   
</ol>  
```  
  
 <span data-ttu-id="959e6-194">При просмотре в HTML пробел между элементами Bold и Italic не отображается.</span><span class="sxs-lookup"><span data-stu-id="959e6-194">When this is viewed in HTML no white space appears between the bold and italic elements.</span></span> <span data-ttu-id="959e6-195">Фактически, в этом примере, если между этими элементами был добавлен отступ, слово «слон» будет неправильно разорвано.</span><span class="sxs-lookup"><span data-stu-id="959e6-195">In fact, in this example, if indenting was added between these elements the word "Elephant" would be incorrectly broken.</span></span>  
  
> [!NOTE]
> <span data-ttu-id="959e6-196">Запись текстового содержимого, исключая `String.Empty` помещает этот элемент в режим смешанного содержимого.</span><span class="sxs-lookup"><span data-stu-id="959e6-196">Writing any text content, excluding `String.Empty` puts that element into mixed content mode.</span></span> <span data-ttu-id="959e6-197">Дочерние элементы не наследуют это состояние смешанного режима.</span><span class="sxs-lookup"><span data-stu-id="959e6-197">Child elements do not inherit this "mixed" mode status.</span></span> <span data-ttu-id="959e6-198">Дочерний элемент смешанного элемента делает отступ, если он также не содержит смешанное содержимое.</span><span class="sxs-lookup"><span data-stu-id="959e6-198">A child element of a "mixed" element does indenting, unless it is also contains "mixed" content.</span></span> <span data-ttu-id="959e6-199">[Содержимое элемента](https://www.w3.org/TR/1998/REC-xml-19980210#sec-element-content) и [смешанное содержимое](https://www.w3.org/TR/1998/REC-xml-19980210#sec-mixed-content) определяются в соответствии с определениями XML 1,0 этих терминов.</span><span class="sxs-lookup"><span data-stu-id="959e6-199">[Element content](https://www.w3.org/TR/1998/REC-xml-19980210#sec-element-content) and [mixed content](https://www.w3.org/TR/1998/REC-xml-19980210#sec-mixed-content) are defined according to the XML 1.0 definitions of these terms.</span></span>  
  
## Examples  
 <span data-ttu-id="959e6-200">В следующем примере записывается фрагмент XML.</span><span class="sxs-lookup"><span data-stu-id="959e6-200">The following example writes an XML fragment.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Formatting" />
      </Docs>
    </Member>
    <Member MemberName="Indentation">
      <MemberSignature Language="C#" Value="public int Indentation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Indentation" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextWriter.Indentation" />
      <MemberSignature Language="VB.NET" Value="Public Property Indentation As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Indentation { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Indentation : int with get, set" Usage="System.Xml.XmlTextWriter.Indentation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="959e6-201">Возвращает или задает количество записываемых IndentChars для каждого уровня в иерархии, если свойство <see cref="P:System.Xml.XmlTextWriter.Formatting" /> имеет значение <see langword="Formatting.Indented" />.</span><span class="sxs-lookup"><span data-stu-id="959e6-201">Gets or sets how many IndentChars to write for each level in the hierarchy when <see cref="P:System.Xml.XmlTextWriter.Formatting" /> is set to <see langword="Formatting.Indented" />.</span></span></summary>
        <value><span data-ttu-id="959e6-202">Количество <see langword="IndentChars" /> для каждого уровня.</span><span class="sxs-lookup"><span data-stu-id="959e6-202">Number of <see langword="IndentChars" /> for each level.</span></span> <span data-ttu-id="959e6-203">Значение по умолчанию — 2.</span><span class="sxs-lookup"><span data-stu-id="959e6-203">The default is 2.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="959e6-204">Начиная с .NET Framework 2,0 рекомендуется создавать <xref:System.Xml.XmlWriter> экземпляры с <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> помощью метода и <xref:System.Xml.XmlWriterSettings> класса, чтобы воспользоваться преимуществами новых функциональных возможностей.</span><span class="sxs-lookup"><span data-stu-id="959e6-204">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="959e6-205">Отступ выполняется для следующих типов узлов: `DocumentType`, `Element`, `Comment`, `ProcessingInstruction`и `CDATASection`.</span><span class="sxs-lookup"><span data-stu-id="959e6-205">Indentation is performed on following node types: `DocumentType`, `Element`, `Comment`, `ProcessingInstruction`, and `CDATASection`.</span></span> <span data-ttu-id="959e6-206">Все остальные типы узлов не затрагиваются.</span><span class="sxs-lookup"><span data-stu-id="959e6-206">All other node types are not affected.</span></span> <span data-ttu-id="959e6-207">Компонент `XmlTextWriter` не делает отступы для внутреннего подмножества DTD.</span><span class="sxs-lookup"><span data-stu-id="959e6-207">The `XmlTextWriter` does not indent the internal DTD subset.</span></span> <span data-ttu-id="959e6-208">Однако можно выполнить следующие действия, чтобы применить форматирование к внутреннему подмножеству DTD.</span><span class="sxs-lookup"><span data-stu-id="959e6-208">However, you could do the following to apply formatting to the internal DTD subset.</span></span>  
  
```csharp  
String name = "Employees";  
String pubid = null;  
String sysid = null;  
String subset =  
@"  
    <!ELEMENT Employees (Employee)+>  
    <!ELEMENT Employee EMPTY>  
    <!ATTLIST Employee firstname CDATA #REQUIRED>  
    <!ENTITY Company 'Microsoft'>]>  
";  
XmlTextWriter tw = new XmlTextWriter(Console.Out);  
tw.WriteDocType(name, pubid, sysid, subset);  
```  
  
   
  
## Examples  
 <span data-ttu-id="959e6-209">В следующем примере записывается фрагмент XML.</span><span class="sxs-lookup"><span data-stu-id="959e6-209">The following example writes an XML fragment.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="959e6-210">Свойству присвоено отрицательное значение.</span><span class="sxs-lookup"><span data-stu-id="959e6-210">Setting this property to a negative value.</span></span></exception>
        <altmember cref="P:System.Xml.XmlTextWriter.IndentChar" />
        <altmember cref="T:System.Xml.Formatting" />
      </Docs>
    </Member>
    <Member MemberName="IndentChar">
      <MemberSignature Language="C#" Value="public char IndentChar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance char IndentChar" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextWriter.IndentChar" />
      <MemberSignature Language="VB.NET" Value="Public Property IndentChar As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property char IndentChar { char get(); void set(char value); };" />
      <MemberSignature Language="F#" Value="member this.IndentChar : char with get, set" Usage="System.Xml.XmlTextWriter.IndentChar" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="959e6-211">Возвращает или задает знак для отступа, если свойство <see cref="P:System.Xml.XmlTextWriter.Formatting" /> имеет значение <see langword="Formatting.Indented" />.</span><span class="sxs-lookup"><span data-stu-id="959e6-211">Gets or sets which character to use for indenting when <see cref="P:System.Xml.XmlTextWriter.Formatting" /> is set to <see langword="Formatting.Indented" />.</span></span></summary>
        <value><span data-ttu-id="959e6-212">Символ, используемый для отступа.</span><span class="sxs-lookup"><span data-stu-id="959e6-212">The character to use for indenting.</span></span> <span data-ttu-id="959e6-213">По умолчанию используется пробел.</span><span class="sxs-lookup"><span data-stu-id="959e6-213">The default is space.</span></span>  
  
 <block subset="none" type="note"><para>  
 <span data-ttu-id="959e6-214"><see langword="XmlTextWriter" /> позволяет задать это свойство для любого знака.</span><span class="sxs-lookup"><span data-stu-id="959e6-214">The <see langword="XmlTextWriter" /> allows you to set this property to any character.</span></span> <span data-ttu-id="959e6-215">Для обеспечения корректности XML-кода необходимо использовать только допустимые символы-разделители: 0x9, 0x10, 0x13 или 0x20.</span><span class="sxs-lookup"><span data-stu-id="959e6-215">To ensure valid XML, you must specify a valid white space character, 0x9, 0x10, 0x13 or 0x20.</span></span>  
  
</para></block></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="959e6-216">Начиная с .NET Framework 2,0 рекомендуется создавать <xref:System.Xml.XmlWriter> экземпляры с <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> помощью метода и <xref:System.Xml.XmlWriterSettings> класса, чтобы воспользоваться преимуществами новых функциональных возможностей.</span><span class="sxs-lookup"><span data-stu-id="959e6-216">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xml.XmlTextWriter.Indentation" />
        <altmember cref="T:System.Xml.Formatting" />
      </Docs>
    </Member>
    <Member MemberName="LookupPrefix">
      <MemberSignature Language="C#" Value="public override string LookupPrefix (string ns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string LookupPrefix(string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.LookupPrefix(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function LookupPrefix (ns As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ LookupPrefix(System::String ^ ns);" />
      <MemberSignature Language="F#" Value="override this.LookupPrefix : string -&gt; string" Usage="xmlTextWriter.LookupPrefix ns" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ns"><span data-ttu-id="959e6-217">URI пространства имен, для которого требуется найти префикс.</span><span class="sxs-lookup"><span data-stu-id="959e6-217">Namespace URI whose prefix you want to find.</span></span></param>
        <summary><span data-ttu-id="959e6-218">Возвращает для URI пространства имен ближайший префикс, определенный в текущей области видимости пространства имен.</span><span class="sxs-lookup"><span data-stu-id="959e6-218">Returns the closest prefix defined in the current namespace scope for the namespace URI.</span></span></summary>
        <returns><span data-ttu-id="959e6-219">Соответствующий префикс.</span><span class="sxs-lookup"><span data-stu-id="959e6-219">The matching prefix.</span></span> <span data-ttu-id="959e6-220">Или значение <see langword="null" />, если в текущей области отсутствует соответствующий URI пространства имен.</span><span class="sxs-lookup"><span data-stu-id="959e6-220">Or <see langword="null" /> if no matching namespace URI is found in the current scope.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="959e6-221">Начиная с .NET Framework 2,0 рекомендуется создавать <xref:System.Xml.XmlWriter> экземпляры с <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> помощью метода и <xref:System.Xml.XmlWriterSettings> класса, чтобы воспользоваться преимуществами новых функциональных возможностей.</span><span class="sxs-lookup"><span data-stu-id="959e6-221">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="959e6-222">В следующем примере записывается книга.</span><span class="sxs-lookup"><span data-stu-id="959e6-222">The following example writes out a book.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="959e6-223"><paramref name="ns" /> имеет значение <see langword="null" /> или <see langword="String.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="959e6-223"><paramref name="ns" /> is either <see langword="null" /> or <see langword="String.Empty" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Namespaces">
      <MemberSignature Language="C#" Value="public bool Namespaces { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Namespaces" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextWriter.Namespaces" />
      <MemberSignature Language="VB.NET" Value="Public Property Namespaces As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Namespaces { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Namespaces : bool with get, set" Usage="System.Xml.XmlTextWriter.Namespaces" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="959e6-224">Возвращает или задает значение, указывающее, поддерживаются ли пространства имен.</span><span class="sxs-lookup"><span data-stu-id="959e6-224">Gets or sets a value indicating whether to do namespace support.</span></span></summary>
        <value><span data-ttu-id="959e6-225">Значение <see langword="true" /> — пространства имен поддерживаются; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="959e6-225"><see langword="true" /> to support namespaces; otherwise, <see langword="false" />.</span></span>  
  
<span data-ttu-id="959e6-226">Значение по умолчанию — <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="959e6-226">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="959e6-227">Начиная с .NET Framework 2,0 рекомендуется создавать <xref:System.Xml.XmlWriter> экземпляры с <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> помощью метода и <xref:System.Xml.XmlWriterSettings> класса, чтобы воспользоваться преимуществами новых функциональных возможностей.</span><span class="sxs-lookup"><span data-stu-id="959e6-227">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="959e6-228">Это свойство определяет, поддерживает ли модуль записи рекомендации по [пространствам имен W3C в XML](https://www.w3.org/TR/REC-xml-names) .</span><span class="sxs-lookup"><span data-stu-id="959e6-228">This property determines whether the writer supports the W3C [Namespaces in XML](https://www.w3.org/TR/REC-xml-names) recommendation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="959e6-229">Это свойство можно изменить только в состоянии <see langword="WriteState.Start" />.</span><span class="sxs-lookup"><span data-stu-id="959e6-229">You can only change this property when in the <see langword="WriteState.Start" /> state.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="QuoteChar">
      <MemberSignature Language="C#" Value="public char QuoteChar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance char QuoteChar" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextWriter.QuoteChar" />
      <MemberSignature Language="VB.NET" Value="Public Property QuoteChar As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property char QuoteChar { char get(); void set(char value); };" />
      <MemberSignature Language="F#" Value="member this.QuoteChar : char with get, set" Usage="System.Xml.XmlTextWriter.QuoteChar" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="959e6-230">Возвращает или задает знак, используемый для заключения значений атрибутов в кавычки.</span><span class="sxs-lookup"><span data-stu-id="959e6-230">Gets or sets which character to use to quote attribute values.</span></span></summary>
        <value><span data-ttu-id="959e6-231">Знак, используемый для заключения значений атрибутов в кавычки.</span><span class="sxs-lookup"><span data-stu-id="959e6-231">The character to use to quote attribute values.</span></span> <span data-ttu-id="959e6-232">Это должна быть одинарная кавычка&amp;(#39;) или двойная кавычка (&amp;#34;).</span><span class="sxs-lookup"><span data-stu-id="959e6-232">This must be a single quote (&amp;#39;) or a double quote (&amp;#34;).</span></span> <span data-ttu-id="959e6-233">По умолчанию используются двойные кавычки.</span><span class="sxs-lookup"><span data-stu-id="959e6-233">The default is a double quote.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="959e6-234">Начиная с .NET Framework 2,0 рекомендуется создавать <xref:System.Xml.XmlWriter> экземпляры с <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> помощью метода и <xref:System.Xml.XmlWriterSettings> класса, чтобы воспользоваться преимуществами новых функциональных возможностей.</span><span class="sxs-lookup"><span data-stu-id="959e6-234">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="959e6-235">Задание этому свойству значения, отличное от одинарные или двойные кавычки.</span><span class="sxs-lookup"><span data-stu-id="959e6-235">Setting this property to something other than either a single or double quote.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteBase64">
      <MemberSignature Language="C#" Value="public override void WriteBase64 (byte[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteBase64(unsigned int8[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteBase64(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteBase64 (buffer As Byte(), index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteBase64(cli::array &lt;System::Byte&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.WriteBase64 : byte[] * int * int -&gt; unit" Usage="xmlTextWriter.WriteBase64 (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="959e6-236">Кодируемый массив байтов.</span><span class="sxs-lookup"><span data-stu-id="959e6-236">Byte array to encode.</span></span></param>
        <param name="index"><span data-ttu-id="959e6-237">Позиция в буфере, с которой начинается запись байтов.</span><span class="sxs-lookup"><span data-stu-id="959e6-237">The position within the buffer indicating the start of the bytes to write.</span></span></param>
        <param name="count"><span data-ttu-id="959e6-238">Количество записываемых байтов.</span><span class="sxs-lookup"><span data-stu-id="959e6-238">The number of bytes to write.</span></span></param>
        <summary><span data-ttu-id="959e6-239">Преобразует указанный набор двоичных байтов в кодировку base64 и записывает получившийся текст.</span><span class="sxs-lookup"><span data-stu-id="959e6-239">Encodes the specified binary bytes as base64 and writes out the resulting text.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="959e6-240">Начиная с .NET Framework 2,0 рекомендуется создавать <xref:System.Xml.XmlWriter> экземпляры с <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> помощью метода и <xref:System.Xml.XmlWriterSettings> класса, чтобы воспользоваться преимуществами новых функциональных возможностей.</span><span class="sxs-lookup"><span data-stu-id="959e6-240">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="959e6-241">В следующем примере входной файл кодируется с помощью `WriteBase64` и создается временный XML-файл.</span><span class="sxs-lookup"><span data-stu-id="959e6-241">The following example encodes an input file using `WriteBase64` and generates a temporary XML file.</span></span> <span data-ttu-id="959e6-242">Временный XML-файл декодирован с помощью <xref:System.Xml.XmlTextReader.ReadBase64%2A> метода и сравнивается с исходным файлом.</span><span class="sxs-lookup"><span data-stu-id="959e6-242">The temporary XML file is decoded using the <xref:System.Xml.XmlTextReader.ReadBase64%2A> method and compared to the original file.</span></span>  
  
 [!code-cpp[XmlWriter.WriteBase64#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlWriter.WriteBase64/CPP/writebase64.cpp#1)]
 [!code-csharp[XmlWriter.WriteBase64#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter.WriteBase64/CS/writebase64.cs#1)]
 [!code-vb[XmlWriter.WriteBase64#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter.WriteBase64/VB/writebase64.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="959e6-243">Свойство <paramref name="buffer" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="959e6-243"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="959e6-244">Длина буфера минус <paramref name="index" /> меньше <paramref name="count" />.</span><span class="sxs-lookup"><span data-stu-id="959e6-244">The buffer length minus <paramref name="index" /> is less than <paramref name="count" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="959e6-245">Значение параметра <paramref name="index" /> или <paramref name="count" /> меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="959e6-245"><paramref name="index" /> or <paramref name="count" /> is less than zero.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="959e6-246">Значение параметра <see cref="P:System.Xml.XmlTextWriter.WriteState" /> — <see langword="Closed" />.</span><span class="sxs-lookup"><span data-stu-id="959e6-246">The <see cref="P:System.Xml.XmlTextWriter.WriteState" /> is <see langword="Closed" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteBinHex">
      <MemberSignature Language="C#" Value="public override void WriteBinHex (byte[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteBinHex(unsigned int8[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteBinHex(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteBinHex (buffer As Byte(), index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteBinHex(cli::array &lt;System::Byte&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.WriteBinHex : byte[] * int * int -&gt; unit" Usage="xmlTextWriter.WriteBinHex (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="959e6-247">Кодируемый массив байтов.</span><span class="sxs-lookup"><span data-stu-id="959e6-247">Byte array to encode.</span></span></param>
        <param name="index"><span data-ttu-id="959e6-248">Позиция в буфере, с которой начинается запись байтов.</span><span class="sxs-lookup"><span data-stu-id="959e6-248">The position in the buffer indicating the start of the bytes to write.</span></span></param>
        <param name="count"><span data-ttu-id="959e6-249">Количество записываемых байтов.</span><span class="sxs-lookup"><span data-stu-id="959e6-249">The number of bytes to write.</span></span></param>
        <summary><span data-ttu-id="959e6-250">Преобразует указанный набор двоичных байтов в кодировку binhex и записывает получившийся текст.</span><span class="sxs-lookup"><span data-stu-id="959e6-250">Encodes the specified binary bytes as binhex and writes out the resulting text.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="959e6-251">Начиная с .NET Framework 2,0 рекомендуется создавать <xref:System.Xml.XmlWriter> экземпляры с <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> помощью метода и <xref:System.Xml.XmlWriterSettings> класса, чтобы воспользоваться преимуществами новых функциональных возможностей.</span><span class="sxs-lookup"><span data-stu-id="959e6-251">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="959e6-252"><paramref name="buffer" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="959e6-252"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="959e6-253">Длина буфера минус <paramref name="index" /> меньше <paramref name="count" />.</span><span class="sxs-lookup"><span data-stu-id="959e6-253">The buffer length minus <paramref name="index" /> is less than <paramref name="count" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="959e6-254">Значение параметра <paramref name="index" /> или <paramref name="count" /> меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="959e6-254"><paramref name="index" /> or <paramref name="count" /> is less than zero.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="959e6-255">Объект <see cref="P:System.Xml.XmlTextWriter.WriteState" /> закрыт.</span><span class="sxs-lookup"><span data-stu-id="959e6-255">The <see cref="P:System.Xml.XmlTextWriter.WriteState" /> is Closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteCData">
      <MemberSignature Language="C#" Value="public override void WriteCData (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteCData(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteCData(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteCData (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteCData(System::String ^ text);" />
      <MemberSignature Language="F#" Value="override this.WriteCData : string -&gt; unit" Usage="xmlTextWriter.WriteCData text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="959e6-256">Текст, записываемый в блок CDATA.</span><span class="sxs-lookup"><span data-stu-id="959e6-256">Text to place inside the CDATA block.</span></span></param>
        <summary><span data-ttu-id="959e6-257">Записывает блок &lt;![CDATA[...]]&gt;, содержащий заданный текст.</span><span class="sxs-lookup"><span data-stu-id="959e6-257">Writes out a &lt;![CDATA[...]]&gt; block containing the specified text.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="959e6-258">Начиная с .NET Framework 2,0 рекомендуется создавать <xref:System.Xml.XmlWriter> экземпляры с <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> помощью метода и <xref:System.Xml.XmlWriterSettings> класса, чтобы воспользоваться преимуществами новых функциональных возможностей.</span><span class="sxs-lookup"><span data-stu-id="959e6-258">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="959e6-259">Если `text` параметр имеет `null` значение `String.Empty`или, этот метод записывает пустой блок CDATA, например \<! [ CDATA []</span><span class="sxs-lookup"><span data-stu-id="959e6-259">If `text` is either `null` or `String.Empty`, this method writes an empty CDATA block, for example \<![CDATA[]</span></span>]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="959e6-260">Текст приведет к неправильному формированию документа XML.</span><span class="sxs-lookup"><span data-stu-id="959e6-260">The text would result in a non-well formed XML document.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="959e6-261">Значение параметра <see cref="P:System.Xml.XmlTextWriter.WriteState" /> — <see langword="Closed" />.</span><span class="sxs-lookup"><span data-stu-id="959e6-261">The <see cref="P:System.Xml.XmlTextWriter.WriteState" /> is <see langword="Closed" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteCharEntity">
      <MemberSignature Language="C#" Value="public override void WriteCharEntity (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteCharEntity(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteCharEntity(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteCharEntity (ch As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteCharEntity(char ch);" />
      <MemberSignature Language="F#" Value="override this.WriteCharEntity : char -&gt; unit" Usage="xmlTextWriter.WriteCharEntity ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ch"><span data-ttu-id="959e6-262">Знак Юникода, для которого создается сущность.</span><span class="sxs-lookup"><span data-stu-id="959e6-262">Unicode character for which to generate a character entity.</span></span></param>
        <summary><span data-ttu-id="959e6-263">Инициирует создание сущности знака для указанного значения знака Юникода.</span><span class="sxs-lookup"><span data-stu-id="959e6-263">Forces the generation of a character entity for the specified Unicode character value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="959e6-264">Начиная с .NET Framework 2,0 рекомендуется создавать <xref:System.Xml.XmlWriter> экземпляры с <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> помощью метода и <xref:System.Xml.XmlWriterSettings> класса, чтобы воспользоваться преимуществами новых функциональных возможностей.</span><span class="sxs-lookup"><span data-stu-id="959e6-264">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="959e6-265">Этот метод записывает символ Юникода в формате ссылки на объект в шестнадцатеричной кодировке.</span><span class="sxs-lookup"><span data-stu-id="959e6-265">This method writes the Unicode character in hexadecimal character entity reference format.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="959e6-266">В следующем примере используется `WriteCharEntity` метод для записи адреса электронной почты.</span><span class="sxs-lookup"><span data-stu-id="959e6-266">The following example uses the `WriteCharEntity` method to write an email address.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteTimeSpan Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteTimeSpan Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteTimeSpan Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteTimeSpan Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteTimeSpan Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteTimeSpan Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="959e6-267">Символ находится в диапазоне символов суррогатной пары <see langword="0xd800" /> - <see langword="0xdfff" />. В противном случае текст приведет к созданию неправильно сформированного документа XML.</span><span class="sxs-lookup"><span data-stu-id="959e6-267">The character is in the surrogate pair character range, <see langword="0xd800" /> - <see langword="0xdfff" />; or the text would result in a non-well formed XML document.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="959e6-268">Значение параметра <see cref="P:System.Xml.XmlTextWriter.WriteState" /> — <see langword="Closed" />.</span><span class="sxs-lookup"><span data-stu-id="959e6-268">The <see cref="P:System.Xml.XmlTextWriter.WriteState" /> is <see langword="Closed" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteChars">
      <MemberSignature Language="C#" Value="public override void WriteChars (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteChars(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteChars(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteChars (buffer As Char(), index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteChars(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.WriteChars : char[] * int * int -&gt; unit" Usage="xmlTextWriter.WriteChars (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="959e6-269">Массив символов, содержащий текст для записи.</span><span class="sxs-lookup"><span data-stu-id="959e6-269">Character array containing the text to write.</span></span></param>
        <param name="index"><span data-ttu-id="959e6-270">Позиция в буфере, с которой начинается запись текста.</span><span class="sxs-lookup"><span data-stu-id="959e6-270">The position in the buffer indicating the start of the text to write.</span></span></param>
        <param name="count"><span data-ttu-id="959e6-271">Количество символов для записи.</span><span class="sxs-lookup"><span data-stu-id="959e6-271">The number of characters to write.</span></span></param>
        <summary><span data-ttu-id="959e6-272">Записывает содержимое текстового буфера.</span><span class="sxs-lookup"><span data-stu-id="959e6-272">Writes text one buffer at a time.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="959e6-273">Начиная с .NET Framework 2,0 рекомендуется создавать <xref:System.Xml.XmlWriter> экземпляры с <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> помощью метода и <xref:System.Xml.XmlWriterSettings> класса, чтобы воспользоваться преимуществами новых функциональных возможностей.</span><span class="sxs-lookup"><span data-stu-id="959e6-273">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="959e6-274">Этот метод можно использовать для записи больших объемов текста по одному буферу за раз.</span><span class="sxs-lookup"><span data-stu-id="959e6-274">This method can be used to write large amounts of text one buffer at a time.</span></span>  
  
 <span data-ttu-id="959e6-275">Для того `WriteChars` чтобы метод не разбивает символы суррогатной пары на несколько операций записи в буфере, необходимо выполнить специальную обработку.</span><span class="sxs-lookup"><span data-stu-id="959e6-275">Special handling must be done to ensure the `WriteChars` method does not split surrogate pair characters across multiple buffer writes.</span></span> <span data-ttu-id="959e6-276">Спецификация XML определяет допустимые диапазоны для суррогатных пар.</span><span class="sxs-lookup"><span data-stu-id="959e6-276">The XML specification defines the valid ranges for surrogate pairs.</span></span>  
  
 <span data-ttu-id="959e6-277">Исключение возникает, если записываются символы суррогатных пар, которые приводят к разбиению символов суррогатной пары в буфере.</span><span class="sxs-lookup"><span data-stu-id="959e6-277">An exception is thrown if surrogate pair characters are written that would result in the surrogate pair characters being split in the buffer.</span></span>  
  
   
  
## Examples  
 [!code-csharp[XmlTextWriter.WriteChars#1](~/samples/snippets/csharp/VS_Snippets_Data/xmltextwriter.writechars/cs/xmlwriterwritecharsexample.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="959e6-278">Свойство <paramref name="buffer" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="959e6-278"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="959e6-279">Значение параметра <paramref name="index" /> или <paramref name="count" /> меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="959e6-279"><paramref name="index" /> or <paramref name="count" /> is less than zero.</span></span>  
  
<span data-ttu-id="959e6-280">- или -</span><span class="sxs-lookup"><span data-stu-id="959e6-280">-or-</span></span> 
<span data-ttu-id="959e6-281">Длина буфера за вычетом <paramref name="index" /> меньше <paramref name="count" />; вызов приводит к разделению пар символов-заместителей или к записи недопустимой пары символов-заместителей.</span><span class="sxs-lookup"><span data-stu-id="959e6-281">The buffer length minus <paramref name="index" /> is less than <paramref name="count" />; the call results in surrogate pair characters being split or an invalid surrogate pair being written.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="959e6-282">Объект <see cref="P:System.Xml.XmlTextWriter.WriteState" /> закрыт.</span><span class="sxs-lookup"><span data-stu-id="959e6-282">The <see cref="P:System.Xml.XmlTextWriter.WriteState" /> is Closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteComment">
      <MemberSignature Language="C#" Value="public override void WriteComment (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteComment(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteComment(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteComment (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteComment(System::String ^ text);" />
      <MemberSignature Language="F#" Value="override this.WriteComment : string -&gt; unit" Usage="xmlTextWriter.WriteComment text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="959e6-283">Текст, записываемый в примечание.</span><span class="sxs-lookup"><span data-stu-id="959e6-283">Text to place inside the comment.</span></span></param>
        <summary><span data-ttu-id="959e6-284">Записывает примечание &lt;!--...--&gt;, содержащее заданный текст.</span><span class="sxs-lookup"><span data-stu-id="959e6-284">Writes out a comment &lt;!--...--&gt; containing the specified text.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="959e6-285">Начиная с .NET Framework 2,0 рекомендуется создавать <xref:System.Xml.XmlWriter> экземпляры с <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> помощью метода и <xref:System.Xml.XmlWriterSettings> класса, чтобы воспользоваться преимуществами новых функциональных возможностей.</span><span class="sxs-lookup"><span data-stu-id="959e6-285">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="959e6-286">Если `text` `String.Empty` `Comment` параметр имеет значение \<или, то этот метод записывает без содержимого данных, например!---->. `null`</span><span class="sxs-lookup"><span data-stu-id="959e6-286">If `text` is either `null` or `String.Empty`, this method writes a `Comment` with no data content, for example \<!---->.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="959e6-287">В следующем примере записывается XML-файл, представляющий книгу.</span><span class="sxs-lookup"><span data-stu-id="959e6-287">The following example writes an XML file representing a book.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="959e6-288">Текст приведет к плохому формированию документа XML.</span><span class="sxs-lookup"><span data-stu-id="959e6-288">The text would result in a non-well formed XML document</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="959e6-289">Значение параметра <see cref="P:System.Xml.XmlTextWriter.WriteState" /> — <see langword="Closed" />.</span><span class="sxs-lookup"><span data-stu-id="959e6-289">The <see cref="P:System.Xml.XmlTextWriter.WriteState" /> is <see langword="Closed" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteDocType">
      <MemberSignature Language="C#" Value="public override void WriteDocType (string name, string pubid, string sysid, string subset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteDocType(string name, string pubid, string sysid, string subset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteDocType(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteDocType (name As String, pubid As String, sysid As String, subset As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteDocType(System::String ^ name, System::String ^ pubid, System::String ^ sysid, System::String ^ subset);" />
      <MemberSignature Language="F#" Value="override this.WriteDocType : string * string * string * string -&gt; unit" Usage="xmlTextWriter.WriteDocType (name, pubid, sysid, subset)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="pubid" Type="System.String" />
        <Parameter Name="sysid" Type="System.String" />
        <Parameter Name="subset" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="959e6-290">Имя DOCTYPE.</span><span class="sxs-lookup"><span data-stu-id="959e6-290">The name of the DOCTYPE.</span></span> <span data-ttu-id="959e6-291">Не должно быть пустым.</span><span class="sxs-lookup"><span data-stu-id="959e6-291">This must be non-empty.</span></span></param>
        <param name="pubid"><span data-ttu-id="959e6-292">Если значение не равно нулю, записывается также PUBLIC "pubid" "sysid", где <paramref name="pubid" /> и <paramref name="sysid" /> заменяются значениями заданных аргументов.</span><span class="sxs-lookup"><span data-stu-id="959e6-292">If non-null it also writes PUBLIC "pubid" "sysid" where <paramref name="pubid" /> and <paramref name="sysid" /> are replaced with the value of the given arguments.</span></span></param>
        <param name="sysid"><span data-ttu-id="959e6-293">Если параметр <paramref name="pubid" /> имеет значение null, а параметр <paramref name="sysid" /> не равен нулю, записывается SYSTEM "sysid", где <paramref name="sysid" /> замещается значением данного аргумента.</span><span class="sxs-lookup"><span data-stu-id="959e6-293">If <paramref name="pubid" /> is null and <paramref name="sysid" /> is non-null it writes SYSTEM "sysid" where <paramref name="sysid" /> is replaced with the value of this argument.</span></span></param>
        <param name="subset"><span data-ttu-id="959e6-294">Если не равно нулю, записывает [subset], где subset замещается значением данного аргумента.</span><span class="sxs-lookup"><span data-stu-id="959e6-294">If non-null it writes [subset] where subset is replaced with the value of this argument.</span></span></param>
        <summary><span data-ttu-id="959e6-295">Записывает объявление DOCTYPE с указанным именем и дополнительными атрибутами.</span><span class="sxs-lookup"><span data-stu-id="959e6-295">Writes the DOCTYPE declaration with the specified name and optional attributes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="959e6-296">Начиная с .NET Framework 2,0 рекомендуется создавать <xref:System.Xml.XmlWriter> экземпляры с <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> помощью метода и <xref:System.Xml.XmlWriterSettings> класса, чтобы воспользоваться преимуществами новых функциональных возможностей.</span><span class="sxs-lookup"><span data-stu-id="959e6-296">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="959e6-297">Этот метод не проверяет наличие недопустимых символов `pubid`в `sysid` , `subset`или.</span><span class="sxs-lookup"><span data-stu-id="959e6-297">This method does not check for invalid characters in `pubid`, `sysid` or `subset`.</span></span> <span data-ttu-id="959e6-298">Он также не проверяет правильность формата внутреннего подмножества.</span><span class="sxs-lookup"><span data-stu-id="959e6-298">It also does not check that the internal subset is well-formed.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="959e6-299">Не проверяет данные, передаваемые <xref:System.Xml.XmlTextWriter.WriteDocType%2A> в метод. <xref:System.Xml.XmlTextWriter></span><span class="sxs-lookup"><span data-stu-id="959e6-299">The <xref:System.Xml.XmlTextWriter> does not validate any data that is passed to the <xref:System.Xml.XmlTextWriter.WriteDocType%2A> method.</span></span> <span data-ttu-id="959e6-300">В этот метод не следует передавать произвольные данные.</span><span class="sxs-lookup"><span data-stu-id="959e6-300">You should not pass arbitrary data to this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="959e6-301">В следующем примере записывается XML-файл, представляющий книгу.</span><span class="sxs-lookup"><span data-stu-id="959e6-301">The following example writes an XML file representing a book.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="959e6-302">Этот метод был вызван вне пролога (после корневого элемента).</span><span class="sxs-lookup"><span data-stu-id="959e6-302">This method was called outside the prolog (after the root element).</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="959e6-303">Значение параметра <paramref name="name" /> равно <see langword="null" /> или <see langword="String.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="959e6-303"><paramref name="name" /> is <see langword="null" /> or <see langword="String.Empty" /></span></span>  
  
<span data-ttu-id="959e6-304">- или -</span><span class="sxs-lookup"><span data-stu-id="959e6-304">-or-</span></span> 
<span data-ttu-id="959e6-305">Значение <paramref name="name" /> приведет к недопустимый XML.</span><span class="sxs-lookup"><span data-stu-id="959e6-305">the value for <paramref name="name" /> would result in invalid XML.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteEndAttribute">
      <MemberSignature Language="C#" Value="public override void WriteEndAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteEndAttribute() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteEndAttribute" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteEndAttribute ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteEndAttribute();" />
      <MemberSignature Language="F#" Value="override this.WriteEndAttribute : unit -&gt; unit" Usage="xmlTextWriter.WriteEndAttribute " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="959e6-306">Закрывает вызов предыдущего метода <see cref="M:System.Xml.XmlTextWriter.WriteStartAttribute(System.String,System.String,System.String)" />.</span><span class="sxs-lookup"><span data-stu-id="959e6-306">Closes the previous <see cref="M:System.Xml.XmlTextWriter.WriteStartAttribute(System.String,System.String,System.String)" /> call.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="959e6-307">Начиная с .NET Framework 2,0 рекомендуется создавать <xref:System.Xml.XmlWriter> экземпляры с <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> помощью метода и <xref:System.Xml.XmlWriterSettings> класса, чтобы воспользоваться преимуществами новых функциональных возможностей.</span><span class="sxs-lookup"><span data-stu-id="959e6-307">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="959e6-308">При вызове `WriteStartAttribute`можно закрыть атрибут с помощью этого метода.</span><span class="sxs-lookup"><span data-stu-id="959e6-308">If you call `WriteStartAttribute`, you can close the attribute with this method.</span></span>  
  
 <span data-ttu-id="959e6-309">Можно также закрыть атрибут, вызвав `WriteStartAttribute` метод повторно, вызов <xref:System.Xml.XmlWriter.WriteAttributeString%2A>или вызов. <xref:System.Xml.XmlTextWriter.WriteEndElement%2A></span><span class="sxs-lookup"><span data-stu-id="959e6-309">You can also close the attribute by calling `WriteStartAttribute` again, calling <xref:System.Xml.XmlWriter.WriteAttributeString%2A>, or calling <xref:System.Xml.XmlTextWriter.WriteEndElement%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="959e6-310">В следующем примере записывается книга.</span><span class="sxs-lookup"><span data-stu-id="959e6-310">The following example writes out a book.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEndDocument">
      <MemberSignature Language="C#" Value="public override void WriteEndDocument ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteEndDocument() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteEndDocument" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteEndDocument ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteEndDocument();" />
      <MemberSignature Language="F#" Value="override this.WriteEndDocument : unit -&gt; unit" Usage="xmlTextWriter.WriteEndDocument " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="959e6-311">Закрывает все открытые элементы и атрибуты и возвращает средство записи в начальное состояние.</span><span class="sxs-lookup"><span data-stu-id="959e6-311">Closes any open elements or attributes and puts the writer back in the Start state.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="959e6-312">Начиная с .NET Framework 2,0 рекомендуется создавать <xref:System.Xml.XmlWriter> экземпляры с <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> помощью метода и <xref:System.Xml.XmlWriterSettings> класса, чтобы воспользоваться преимуществами новых функциональных возможностей.</span><span class="sxs-lookup"><span data-stu-id="959e6-312">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="959e6-313">В следующем примере записывается XML-файл, представляющий книгу.</span><span class="sxs-lookup"><span data-stu-id="959e6-313">The following example writes an XML file representing a book.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="959e6-314">Недопустимый документ XML.</span><span class="sxs-lookup"><span data-stu-id="959e6-314">The XML document is invalid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteEndElement">
      <MemberSignature Language="C#" Value="public override void WriteEndElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteEndElement() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteEndElement" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteEndElement ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteEndElement();" />
      <MemberSignature Language="F#" Value="override this.WriteEndElement : unit -&gt; unit" Usage="xmlTextWriter.WriteEndElement " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="959e6-315">Закрывает один элемент и извлекает из стека область видимости соответствующего пространства имен.</span><span class="sxs-lookup"><span data-stu-id="959e6-315">Closes one element and pops the corresponding namespace scope.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="959e6-316">Начиная с .NET Framework 2,0 рекомендуется создавать <xref:System.Xml.XmlWriter> экземпляры с <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> помощью метода и <xref:System.Xml.XmlWriterSettings> класса, чтобы воспользоваться преимуществами новых функциональных возможностей.</span><span class="sxs-lookup"><span data-stu-id="959e6-316">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="959e6-317">Если элемент не содержит содержимого, записывается короткий закрывающий тег "/>"; в противном случае записывается полный закрывающий тег.</span><span class="sxs-lookup"><span data-stu-id="959e6-317">If the element contains no content a short end tag "/>" is written; otherwise a full end tag is written.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="959e6-318">В следующем примере записывается XML-файл, представляющий книгу.</span><span class="sxs-lookup"><span data-stu-id="959e6-318">The following example writes an XML file representing a book.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteEndElement Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteEndElement Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteEndElement Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteEndElement Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteEndElement Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteEndElement Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEntityRef">
      <MemberSignature Language="C#" Value="public override void WriteEntityRef (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteEntityRef(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteEntityRef(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteEntityRef (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteEntityRef(System::String ^ name);" />
      <MemberSignature Language="F#" Value="override this.WriteEntityRef : string -&gt; unit" Usage="xmlTextWriter.WriteEntityRef name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="959e6-319">Имя ссылки на сущность.</span><span class="sxs-lookup"><span data-stu-id="959e6-319">Name of the entity reference.</span></span></param>
        <summary><span data-ttu-id="959e6-320">Выводит ссылку на сущность в виде <see langword="&amp;name;" />.</span><span class="sxs-lookup"><span data-stu-id="959e6-320">Writes out an entity reference as <see langword="&amp;name;" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="959e6-321">Начиная с .NET Framework 2,0 рекомендуется создавать <xref:System.Xml.XmlWriter> экземпляры с <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> помощью метода и <xref:System.Xml.XmlWriterSettings> класса, чтобы воспользоваться преимуществами новых функциональных возможностей.</span><span class="sxs-lookup"><span data-stu-id="959e6-321">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="959e6-322">В следующем примере записывается XML-файл, представляющий книгу.</span><span class="sxs-lookup"><span data-stu-id="959e6-322">The following example writes an XML file representing a book.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="959e6-323"><paramref name="name" /><see langword="null" /><see langword="String.Empty" />; или текст приведет к плохому формированию документа XML.</span><span class="sxs-lookup"><span data-stu-id="959e6-323">The text would result in a non-well formed XML document or <paramref name="name" /> is either <see langword="null" /> or <see langword="String.Empty" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteFullEndElement">
      <MemberSignature Language="C#" Value="public override void WriteFullEndElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteFullEndElement() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteFullEndElement" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteFullEndElement ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteFullEndElement();" />
      <MemberSignature Language="F#" Value="override this.WriteFullEndElement : unit -&gt; unit" Usage="xmlTextWriter.WriteFullEndElement " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="959e6-324">Закрывает один элемент и извлекает из стека область видимости соответствующего пространства имен.</span><span class="sxs-lookup"><span data-stu-id="959e6-324">Closes one element and pops the corresponding namespace scope.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="959e6-325">Начиная с .NET Framework 2,0 рекомендуется создавать <xref:System.Xml.XmlWriter> экземпляры с <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> помощью метода и <xref:System.Xml.XmlWriterSettings> класса, чтобы воспользоваться преимуществами новых функциональных возможностей.</span><span class="sxs-lookup"><span data-stu-id="959e6-325">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="959e6-326">Этот метод всегда записывает полный закрывающий тег.</span><span class="sxs-lookup"><span data-stu-id="959e6-326">This method always writes the full end tag.</span></span> <span data-ttu-id="959e6-327">Это полезно при работе с элементами, которые должны содержать полный закрывающий тег.</span><span class="sxs-lookup"><span data-stu-id="959e6-327">This is useful when dealing with elements that must include a full end tag.</span></span> <span data-ttu-id="959e6-328">Например, браузеры предполагают, что блоки скриптов HTML закрываются\<"/script >".</span><span class="sxs-lookup"><span data-stu-id="959e6-328">For example, browsers expect HTML script blocks to be closed with "\</script>".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="959e6-329">В следующем примере записывается элемент без содержимого.</span><span class="sxs-lookup"><span data-stu-id="959e6-329">The following example writes out an element with no content.</span></span> <span data-ttu-id="959e6-330">Он использует Вритефулленделемент для записи полного тега конечного элемента.</span><span class="sxs-lookup"><span data-stu-id="959e6-330">It uses WriteFullEndElement to write the full end element tag.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteFullEndElement Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteFullEndElement Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteFullEndElement Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteFullEndElement Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteFullEndElement Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteFullEndElement Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteName">
      <MemberSignature Language="C#" Value="public override void WriteName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteName (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteName(System::String ^ name);" />
      <MemberSignature Language="F#" Value="override this.WriteName : string -&gt; unit" Usage="xmlTextWriter.WriteName name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="959e6-331">Имя для записи.</span><span class="sxs-lookup"><span data-stu-id="959e6-331">Name to write.</span></span></param>
        <summary><span data-ttu-id="959e6-332">Записывает указанное имя, гарантируя его допустимость согласно рекомендации <see href="https://www.w3.org/TR/1998/REC-xml-19980210#NT-Name">W3C по языку XML версии 1.0</see>.</span><span class="sxs-lookup"><span data-stu-id="959e6-332">Writes out the specified name, ensuring it is a valid name according to the <see href="https://www.w3.org/TR/1998/REC-xml-19980210#NT-Name">W3C XML 1.0 recommendation</see>.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="959e6-333">Начиная с .NET Framework 2,0 рекомендуется создавать <xref:System.Xml.XmlWriter> экземпляры с <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> помощью метода и <xref:System.Xml.XmlWriterSettings> класса, чтобы воспользоваться преимуществами новых функциональных возможностей.</span><span class="sxs-lookup"><span data-stu-id="959e6-333">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="959e6-334">Если <xref:System.Xml.XmlTextWriter.Namespaces%2A> `WriteName` для `true`задано значение, также проверяется допустимость имени в соответствии с рекомендациями консорциума W3C по пространствам имен в XML.</span><span class="sxs-lookup"><span data-stu-id="959e6-334">If <xref:System.Xml.XmlTextWriter.Namespaces%2A> is set to `true`, `WriteName` also checks that the name is also valid according to the W3C Namespaces in XML recommendation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="959e6-335">Параметр <paramref name="name" /> не является допустимым именем XML; или значение параметра <paramref name="name" /> — <see langword="null" /> или <see langword="String.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="959e6-335"><paramref name="name" /> is not a valid XML name; or <paramref name="name" /> is either <see langword="null" /> or <see langword="String.Empty" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNmToken">
      <MemberSignature Language="C#" Value="public override void WriteNmToken (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteNmToken(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteNmToken(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteNmToken (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteNmToken(System::String ^ name);" />
      <MemberSignature Language="F#" Value="override this.WriteNmToken : string -&gt; unit" Usage="xmlTextWriter.WriteNmToken name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="959e6-336">Имя для записи.</span><span class="sxs-lookup"><span data-stu-id="959e6-336">Name to write.</span></span></param>
        <summary><span data-ttu-id="959e6-337">Записывает указанное имя, гарантируя, что это допустимый <see langword="NmToken" />, согласно <see href="https://www.w3.org/TR/1998/REC-xml-19980210#NT-Name">рекомендации W3C по языку XML версии 1.0</see>.</span><span class="sxs-lookup"><span data-stu-id="959e6-337">Writes out the specified name, ensuring it is a valid <see langword="NmToken" /> according to the <see href="https://www.w3.org/TR/1998/REC-xml-19980210#NT-Name">W3C XML 1.0 recommendation</see>.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="959e6-338">Начиная с .NET Framework 2,0 рекомендуется создавать <xref:System.Xml.XmlWriter> экземпляры с <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> помощью метода и <xref:System.Xml.XmlWriterSettings> класса, чтобы воспользоваться преимуществами новых функциональных возможностей.</span><span class="sxs-lookup"><span data-stu-id="959e6-338">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="959e6-339">Параметр <paramref name="name" /> не является допустимым <see langword="NmToken" />; или <paramref name="name" /> равен <see langword="null" /> или <see langword="String.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="959e6-339"><paramref name="name" /> is not a valid <see langword="NmToken" />; or <paramref name="name" /> is either <see langword="null" /> or <see langword="String.Empty" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteProcessingInstruction">
      <MemberSignature Language="C#" Value="public override void WriteProcessingInstruction (string name, string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteProcessingInstruction(string name, string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteProcessingInstruction(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteProcessingInstruction (name As String, text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteProcessingInstruction(System::String ^ name, System::String ^ text);" />
      <MemberSignature Language="F#" Value="override this.WriteProcessingInstruction : string * string -&gt; unit" Usage="xmlTextWriter.WriteProcessingInstruction (name, text)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="959e6-340">Имя инструкции обработки.</span><span class="sxs-lookup"><span data-stu-id="959e6-340">Name of the processing instruction.</span></span></param>
        <param name="text"><span data-ttu-id="959e6-341">Текст для инструкции обработки.</span><span class="sxs-lookup"><span data-stu-id="959e6-341">Text to include in the processing instruction.</span></span></param>
        <summary><span data-ttu-id="959e6-342">Записывает инструкцию по обработке с пробелом между именем и текстом в следующем виде: &lt;?имя текст?&gt;.</span><span class="sxs-lookup"><span data-stu-id="959e6-342">Writes out a processing instruction with a space between the name and text as follows: &lt;?name text?&gt;.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="959e6-343">Начиная с .NET Framework 2,0 рекомендуется создавать <xref:System.Xml.XmlWriter> экземпляры с <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> помощью метода и <xref:System.Xml.XmlWriterSettings> класса, чтобы воспользоваться преимуществами новых функциональных возможностей.</span><span class="sxs-lookup"><span data-stu-id="959e6-343">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="959e6-344">Если `text` `String.Empty` `ProcessingInstruction` параметр имеет значение \<или, то этот метод записывает без содержимого данных, например? Name? >. `null`</span><span class="sxs-lookup"><span data-stu-id="959e6-344">If `text` is either `null` or `String.Empty`, this method writes a `ProcessingInstruction` with no data content, for example \<?name?>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="959e6-345">В следующем примере записывается XML-файл, представляющий книгу.</span><span class="sxs-lookup"><span data-stu-id="959e6-345">The following example writes an XML file representing a book.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="959e6-346">Текст приведет к неправильному формированию документа XML.</span><span class="sxs-lookup"><span data-stu-id="959e6-346">The text would result in a non-well formed XML document.</span></span>  
  
 <span data-ttu-id="959e6-347"><paramref name="name" /> имеет значение <see langword="null" /> или <see langword="String.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="959e6-347"><paramref name="name" /> is either <see langword="null" /> or <see langword="String.Empty" />.</span></span>  
  
<span data-ttu-id="959e6-348">Этот метод используется для создания XML-объявления после того, как метод <see cref="M:System.Xml.XmlTextWriter.WriteStartDocument" /> уже вызван.</span><span class="sxs-lookup"><span data-stu-id="959e6-348">This method is being used to create an XML declaration after <see cref="M:System.Xml.XmlTextWriter.WriteStartDocument" /> has already been called.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteQualifiedName">
      <MemberSignature Language="C#" Value="public override void WriteQualifiedName (string localName, string ns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteQualifiedName(string localName, string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteQualifiedName(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteQualifiedName (localName As String, ns As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteQualifiedName(System::String ^ localName, System::String ^ ns);" />
      <MemberSignature Language="F#" Value="override this.WriteQualifiedName : string * string -&gt; unit" Usage="xmlTextWriter.WriteQualifiedName (localName, ns)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName"><span data-ttu-id="959e6-349">Локальное имя для записи.</span><span class="sxs-lookup"><span data-stu-id="959e6-349">The local name to write.</span></span></param>
        <param name="ns"><span data-ttu-id="959e6-350">URI пространства имен, который связывается с именем.</span><span class="sxs-lookup"><span data-stu-id="959e6-350">The namespace URI to associate with the name.</span></span></param>
        <summary><span data-ttu-id="959e6-351">Записывает полное имя пространства имен.</span><span class="sxs-lookup"><span data-stu-id="959e6-351">Writes out the namespace-qualified name.</span></span> <span data-ttu-id="959e6-352">Этот метод выполняет поиск префикса для пространства имен в его области.</span><span class="sxs-lookup"><span data-stu-id="959e6-352">This method looks up the prefix that is in scope for the given namespace.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="959e6-353">Начиная с .NET Framework 2,0 рекомендуется создавать <xref:System.Xml.XmlWriter> экземпляры с <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> помощью метода и <xref:System.Xml.XmlWriterSettings> класса, чтобы воспользоваться преимуществами новых функциональных возможностей.</span><span class="sxs-lookup"><span data-stu-id="959e6-353">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="959e6-354">Например, следующий код визуального C# элемента Microsoft:</span><span class="sxs-lookup"><span data-stu-id="959e6-354">For example, the following Microsoft Visual C# code:</span></span>  
  
```csharp  
writer.Formatting = Formatting.Indented;  
writer.WriteStartElement("root");  
 writer.WriteAttributeString("xmlns","x",null,"urn:abc");  
 writer.WriteStartElement("item");  
 writer.WriteStartAttribute("href",null);  
 writer.WriteString("#");  
 writer.WriteQualifiedName("test","urn:abc");  
 writer.WriteEndAttribute();  
 writer.WriteEndElement();  
 writer.WriteEndElement();  
 writer.Close();  
```  
  
 <span data-ttu-id="959e6-355">Создает следующие выходные данные:</span><span class="sxs-lookup"><span data-stu-id="959e6-355">Generates the following output:</span></span>  
  
```xml  
<root xmlns:x="urn:abc">  
 <item href="#x:test"/>  
 </root>  
```  
  
 <span data-ttu-id="959e6-356">При `ns` сопоставлении с текущим пространством имен по умолчанию префикс не создается.</span><span class="sxs-lookup"><span data-stu-id="959e6-356">If `ns` maps to the current default namespace, no prefix is generated.</span></span>  
  
 <span data-ttu-id="959e6-357">При записи значений атрибутов этот метод создает префикс, если `ns` не найден.</span><span class="sxs-lookup"><span data-stu-id="959e6-357">When writing attribute values, this method generates a prefix if `ns` is not found.</span></span> <span data-ttu-id="959e6-358">При записи содержимого элемента вызывается исключение, если `ns` объект не найден.</span><span class="sxs-lookup"><span data-stu-id="959e6-358">When writing element content, it throws an exception if `ns` is not found.</span></span>  
  
 <span data-ttu-id="959e6-359">Если этот модуль записи поддерживает пространства имен<xref:System.Xml.XmlTextWriter.Namespaces%2A> (имеет `true`значение), этот метод также проверяет допустимость имени в соответствии с [рекомендациями консорциума W3C по пространствам имен в XML](https://www.w3.org/TR/REC-xml-names).</span><span class="sxs-lookup"><span data-stu-id="959e6-359">If this writer supports namespaces (<xref:System.Xml.XmlTextWriter.Namespaces%2A> is set to `true`), this method also checks that the name is valid according to the [W3C Namespaces in XML recommendation](https://www.w3.org/TR/REC-xml-names).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="959e6-360">В следующем примере записывается часть схемы XSD.</span><span class="sxs-lookup"><span data-stu-id="959e6-360">The following example writes out a portion of a XSD schema.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteQualifiedName Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteQualifiedName Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteQualifiedName Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteQualifiedName Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteQualifiedName Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteQualifiedName Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="959e6-361"><paramref name="localName" /> имеет значение <see langword="null" /> или <see langword="String.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="959e6-361"><paramref name="localName" /> is either <see langword="null" /> or <see langword="String.Empty" />.</span></span>  
  
 <span data-ttu-id="959e6-362"><paramref name="localName" /> не является допустимым именем в соответствии со спецификацией пространств имен W3C.</span><span class="sxs-lookup"><span data-stu-id="959e6-362"><paramref name="localName" /> is not a valid name according to the W3C Namespaces spec.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteRaw">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="959e6-363">Вручную записывает необработанные данные для разметки.</span><span class="sxs-lookup"><span data-stu-id="959e6-363">Writes raw markup manually.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="959e6-364">Начиная с .NET Framework 2,0 рекомендуется создавать <xref:System.Xml.XmlWriter> экземпляры с <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> помощью метода и <xref:System.Xml.XmlWriterSettings> класса, чтобы воспользоваться преимуществами новых функциональных возможностей.</span><span class="sxs-lookup"><span data-stu-id="959e6-364">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteRaw">
      <MemberSignature Language="C#" Value="public override void WriteRaw (string data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteRaw(string data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteRaw(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteRaw (data As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteRaw(System::String ^ data);" />
      <MemberSignature Language="F#" Value="override this.WriteRaw : string -&gt; unit" Usage="xmlTextWriter.WriteRaw data" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="959e6-365">Строка, содержащая текст для записи.</span><span class="sxs-lookup"><span data-stu-id="959e6-365">String containing the text to write.</span></span></param>
        <summary><span data-ttu-id="959e6-366">Вручную записывает из строки необработанные данные для разметки.</span><span class="sxs-lookup"><span data-stu-id="959e6-366">Writes raw markup manually from a string.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="959e6-367">Начиная с .NET Framework 2,0 рекомендуется создавать <xref:System.Xml.XmlWriter> экземпляры с <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> помощью метода и <xref:System.Xml.XmlWriterSettings> класса, чтобы воспользоваться преимуществами новых функциональных возможностей.</span><span class="sxs-lookup"><span data-stu-id="959e6-367">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="959e6-368">Этот метод не выполняет экранирование специальных символов.</span><span class="sxs-lookup"><span data-stu-id="959e6-368">This method does not escape special characters.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="959e6-369">Не проверяет данные, передаваемые <xref:System.Xml.XmlTextWriter.WriteRaw%2A> в метод. <xref:System.Xml.XmlTextWriter></span><span class="sxs-lookup"><span data-stu-id="959e6-369">The <xref:System.Xml.XmlTextWriter> does not validate any data that is passed to the <xref:System.Xml.XmlTextWriter.WriteRaw%2A> method.</span></span> <span data-ttu-id="959e6-370">В этот метод не следует передавать произвольные данные.</span><span class="sxs-lookup"><span data-stu-id="959e6-370">You should not pass arbitrary data to this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="959e6-371">В следующем примере строка записывается с `WriteRaw` помощью метода.</span><span class="sxs-lookup"><span data-stu-id="959e6-371">The following example writes a string using the `WriteRaw` method.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteRaw1 Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteRaw1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteRaw1 Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteRaw1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteRaw1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteRaw1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteRaw">
      <MemberSignature Language="C#" Value="public override void WriteRaw (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteRaw(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteRaw(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteRaw (buffer As Char(), index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteRaw(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.WriteRaw : char[] * int * int -&gt; unit" Usage="xmlTextWriter.WriteRaw (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="959e6-372">Массив символов, содержащий текст для записи.</span><span class="sxs-lookup"><span data-stu-id="959e6-372">Character array containing the text to write.</span></span></param>
        <param name="index"><span data-ttu-id="959e6-373">Позиция в буфере, с которой начинается запись текста.</span><span class="sxs-lookup"><span data-stu-id="959e6-373">The position within the buffer indicating the start of the text to write.</span></span></param>
        <param name="count"><span data-ttu-id="959e6-374">Количество символов для записи.</span><span class="sxs-lookup"><span data-stu-id="959e6-374">The number of characters to write.</span></span></param>
        <summary><span data-ttu-id="959e6-375">Вручную записывает из буфера символов необработанные данные для разметки.</span><span class="sxs-lookup"><span data-stu-id="959e6-375">Writes raw markup manually from a character buffer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="959e6-376">Начиная с .NET Framework 2,0 рекомендуется создавать <xref:System.Xml.XmlWriter> экземпляры с <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> помощью метода и <xref:System.Xml.XmlWriterSettings> класса, чтобы воспользоваться преимуществами новых функциональных возможностей.</span><span class="sxs-lookup"><span data-stu-id="959e6-376">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="959e6-377">Этот метод не выполняет экранирование специальных символов.</span><span class="sxs-lookup"><span data-stu-id="959e6-377">This method does not escape special characters.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="959e6-378">Не проверяет данные, передаваемые <xref:System.Xml.XmlTextWriter.WriteRaw%2A> в метод. <xref:System.Xml.XmlTextWriter></span><span class="sxs-lookup"><span data-stu-id="959e6-378">The <xref:System.Xml.XmlTextWriter> does not validate any data that is passed to the <xref:System.Xml.XmlTextWriter.WriteRaw%2A> method.</span></span> <span data-ttu-id="959e6-379">В этот метод не следует передавать произвольные данные.</span><span class="sxs-lookup"><span data-stu-id="959e6-379">You should not pass arbitrary data to this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="959e6-380"><paramref name="buffer" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="959e6-380"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="959e6-381">Значение параметра <paramref name="index" /> или <paramref name="count" /> меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="959e6-381"><paramref name="index" /> or <paramref name="count" /> is less than zero.</span></span>  
  
<span data-ttu-id="959e6-382">-или-</span><span class="sxs-lookup"><span data-stu-id="959e6-382">-or-</span></span> 
<span data-ttu-id="959e6-383">Длина буфера минус <paramref name="index" /> меньше <paramref name="count" />.</span><span class="sxs-lookup"><span data-stu-id="959e6-383">The buffer length minus <paramref name="index" /> is less than <paramref name="count" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartAttribute">
      <MemberSignature Language="C#" Value="public override void WriteStartAttribute (string prefix, string localName, string ns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteStartAttribute(string prefix, string localName, string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteStartAttribute(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteStartAttribute (prefix As String, localName As String, ns As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteStartAttribute(System::String ^ prefix, System::String ^ localName, System::String ^ ns);" />
      <MemberSignature Language="F#" Value="override this.WriteStartAttribute : string * string * string -&gt; unit" Usage="xmlTextWriter.WriteStartAttribute (prefix, localName, ns)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix"><span data-ttu-id="959e6-384">Префикс <see langword="Namespace" /> атрибута.</span><span class="sxs-lookup"><span data-stu-id="959e6-384"><see langword="Namespace" /> prefix of the attribute.</span></span></param>
        <param name="localName"><span data-ttu-id="959e6-385"><see langword="LocalName" /> атрибута.</span><span class="sxs-lookup"><span data-stu-id="959e6-385"><see langword="LocalName" /> of the attribute.</span></span></param>
        <param name="ns"><span data-ttu-id="959e6-386"><see langword="NamespaceURI" /> атрибута.</span><span class="sxs-lookup"><span data-stu-id="959e6-386"><see langword="NamespaceURI" /> of the attribute</span></span></param>
        <summary><span data-ttu-id="959e6-387">Записывает начало атрибута.</span><span class="sxs-lookup"><span data-stu-id="959e6-387">Writes the start of an attribute.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="959e6-388">Начиная с .NET Framework 2,0 рекомендуется создавать <xref:System.Xml.XmlWriter> экземпляры с <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> помощью метода и <xref:System.Xml.XmlWriterSettings> класса, чтобы воспользоваться преимуществами новых функциональных возможностей.</span><span class="sxs-lookup"><span data-stu-id="959e6-388">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="959e6-389">Это более сложная версия <xref:System.Xml.XmlWriter.WriteAttributeString%2A> , позволяющая писать значение атрибута с помощью нескольких методов записи, таких как. <xref:System.Xml.XmlTextWriter.WriteString%2A></span><span class="sxs-lookup"><span data-stu-id="959e6-389">This is a more advanced version of <xref:System.Xml.XmlWriter.WriteAttributeString%2A> that allows you to write an attribute value using multiple write methods, such as <xref:System.Xml.XmlTextWriter.WriteString%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="959e6-390">В следующем примере записывается книга.</span><span class="sxs-lookup"><span data-stu-id="959e6-390">The following example writes out a book.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="959e6-391"><paramref name="localName" /> имеет значение <see langword="null" /> или <see langword="String.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="959e6-391"><paramref name="localName" /> is either <see langword="null" /> or <see langword="String.Empty" />.</span></span></exception>
        <altmember cref="M:System.Xml.XmlTextWriter.WriteEndAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteStartDocument">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="959e6-392">Записывает объявление XML с номером версии "1.0".</span><span class="sxs-lookup"><span data-stu-id="959e6-392">Writes the XML declaration with the version "1.0".</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="959e6-393">Начиная с .NET Framework 2,0 рекомендуется создавать <xref:System.Xml.XmlWriter> экземпляры с <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> помощью метода и <xref:System.Xml.XmlWriterSettings> класса, чтобы воспользоваться преимуществами новых функциональных возможностей.</span><span class="sxs-lookup"><span data-stu-id="959e6-393">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteStartDocument">
      <MemberSignature Language="C#" Value="public override void WriteStartDocument ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteStartDocument() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteStartDocument" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteStartDocument ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteStartDocument();" />
      <MemberSignature Language="F#" Value="override this.WriteStartDocument : unit -&gt; unit" Usage="xmlTextWriter.WriteStartDocument " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="959e6-394">Записывает объявление XML с номером версии "1.0".</span><span class="sxs-lookup"><span data-stu-id="959e6-394">Writes the XML declaration with the version "1.0".</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="959e6-395">Начиная с .NET Framework 2,0 рекомендуется создавать <xref:System.Xml.XmlWriter> экземпляры с <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> помощью метода и <xref:System.Xml.XmlWriterSettings> класса, чтобы воспользоваться преимуществами новых функциональных возможностей.</span><span class="sxs-lookup"><span data-stu-id="959e6-395">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="959e6-396">Уровень кодировки документа определяется тем, как реализуется модуль записи.</span><span class="sxs-lookup"><span data-stu-id="959e6-396">The encoding level of the document is determined by how the writer is implemented.</span></span> <span data-ttu-id="959e6-397">Например, если <xref:System.Text.Encoding> `XmlTextWriter` в конструкторе указан объект, то он определяет значение атрибута Encoding.</span><span class="sxs-lookup"><span data-stu-id="959e6-397">For example, if an <xref:System.Text.Encoding> object is specified in the `XmlTextWriter` constructor, this determines the value of the encoding attribute.</span></span> <span data-ttu-id="959e6-398">Этот метод не создает автономный атрибут.</span><span class="sxs-lookup"><span data-stu-id="959e6-398">This method does not create a standalone attribute.</span></span>  
  
 <span data-ttu-id="959e6-399">При `WriteStartDocument` вызове модулем записи проверяется, что вы пишете — XML-документ правильного формата.</span><span class="sxs-lookup"><span data-stu-id="959e6-399">When `WriteStartDocument` is called the writer validates that what you are writing is a well-formed XML document.</span></span> <span data-ttu-id="959e6-400">Например, он проверяет, является ли объявление XML первым узлом, что существует только один элемент корневого уровня и т. д.</span><span class="sxs-lookup"><span data-stu-id="959e6-400">For example, it checks that the XML declaration is the first node, that one and only one root-level element exists and so on.</span></span> <span data-ttu-id="959e6-401">Если этот метод не вызывается, модуль записи предполагает, что фрагмент XML записывается и не применяет правила корневого уровня.</span><span class="sxs-lookup"><span data-stu-id="959e6-401">If this method is not called, the writer assumes an XML fragment is being written and applies no root level rules.</span></span>  
  
 <span data-ttu-id="959e6-402">Если `WriteStartDocument` был вызван и <xref:System.Xml.XmlTextWriter.WriteProcessingInstruction%2A> метод используется для создания другой декларации XML, создается исключение.</span><span class="sxs-lookup"><span data-stu-id="959e6-402">If `WriteStartDocument` has been called and then the <xref:System.Xml.XmlTextWriter.WriteProcessingInstruction%2A> method is used to create another XML declaration, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="959e6-403">В следующем примере записывается XML-файл, представляющий книгу.</span><span class="sxs-lookup"><span data-stu-id="959e6-403">The following example writes an XML file representing a book.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="959e6-404">Это не первый метод записи, вызываемый после конструктора.</span><span class="sxs-lookup"><span data-stu-id="959e6-404">This is not the first write method called after the constructor.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartDocument">
      <MemberSignature Language="C#" Value="public override void WriteStartDocument (bool standalone);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteStartDocument(bool standalone) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteStartDocument(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteStartDocument (standalone As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteStartDocument(bool standalone);" />
      <MemberSignature Language="F#" Value="override this.WriteStartDocument : bool -&gt; unit" Usage="xmlTextWriter.WriteStartDocument standalone" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="standalone" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="standalone"><span data-ttu-id="959e6-405">Если значение равно <see langword="true" />, записывается "standalone=yes"; если <see langword="false" />, записывается "standalone=no".</span><span class="sxs-lookup"><span data-stu-id="959e6-405">If <see langword="true" />, it writes "standalone=yes"; if <see langword="false" />, it writes "standalone=no".</span></span></param>
        <summary><span data-ttu-id="959e6-406">Записывает объявление XML с номером версии "1.0" и отдельным атрибутом.</span><span class="sxs-lookup"><span data-stu-id="959e6-406">Writes the XML declaration with the version "1.0" and the standalone attribute.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="959e6-407">Начиная с .NET Framework 2,0 рекомендуется создавать <xref:System.Xml.XmlWriter> экземпляры с <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> помощью метода и <xref:System.Xml.XmlWriterSettings> класса, чтобы воспользоваться преимуществами новых функциональных возможностей.</span><span class="sxs-lookup"><span data-stu-id="959e6-407">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="959e6-408">Уровень кодировки документа определяется тем, как реализуется модуль записи.</span><span class="sxs-lookup"><span data-stu-id="959e6-408">The encoding level of the document is determined by how the writer is implemented.</span></span> <span data-ttu-id="959e6-409">Например, если <xref:System.Text.Encoding> `XmlTextWriter` в конструкторе указан объект, то он определяет значение атрибута Encoding.</span><span class="sxs-lookup"><span data-stu-id="959e6-409">For example, if an <xref:System.Text.Encoding> object is specified in the `XmlTextWriter` constructor, this determines the value of the encoding attribute.</span></span>  
  
 <span data-ttu-id="959e6-410">При `WriteStartDocument` вызове модулем записи проверяется, что вы пишете — XML-документ правильного формата.</span><span class="sxs-lookup"><span data-stu-id="959e6-410">When `WriteStartDocument` is called the writer validates that what you are writing is a well-formed XML document.</span></span> <span data-ttu-id="959e6-411">Например, он проверяет, является ли объявление XML первым узлом, что существует только один элемент корневого уровня и т. д.</span><span class="sxs-lookup"><span data-stu-id="959e6-411">For example, it checks that the XML declaration is the first node, that one and only one root-level element exists and so on.</span></span> <span data-ttu-id="959e6-412">Если этот метод не вызывается, модуль записи предполагает, что фрагмент XML записывается и не применяет правила корневого уровня.</span><span class="sxs-lookup"><span data-stu-id="959e6-412">If this method is not called, the writer assumes an XML fragment is being written and applies no root level rules.</span></span>  
  
 <span data-ttu-id="959e6-413">Если `WriteStartDocument` был вызван и <xref:System.Xml.XmlTextWriter.WriteProcessingInstruction%2A> метод используется для создания другой декларации XML, создается исключение.</span><span class="sxs-lookup"><span data-stu-id="959e6-413">If `WriteStartDocument` has been called and then the <xref:System.Xml.XmlTextWriter.WriteProcessingInstruction%2A> method is used to create another XML declaration, an exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="959e6-414">Это не первый метод записи, вызываемый после конструктора.</span><span class="sxs-lookup"><span data-stu-id="959e6-414">This is not the first write method called after the constructor.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartElement">
      <MemberSignature Language="C#" Value="public override void WriteStartElement (string prefix, string localName, string ns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteStartElement(string prefix, string localName, string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteStartElement(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteStartElement (prefix As String, localName As String, ns As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteStartElement(System::String ^ prefix, System::String ^ localName, System::String ^ ns);" />
      <MemberSignature Language="F#" Value="override this.WriteStartElement : string * string * string -&gt; unit" Usage="xmlTextWriter.WriteStartElement (prefix, localName, ns)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix"><span data-ttu-id="959e6-415">Префикс пространства имен элемента.</span><span class="sxs-lookup"><span data-stu-id="959e6-415">The namespace prefix of the element.</span></span></param>
        <param name="localName"><span data-ttu-id="959e6-416">Локальное имя элемента.</span><span class="sxs-lookup"><span data-stu-id="959e6-416">The local name of the element.</span></span></param>
        <param name="ns"><span data-ttu-id="959e6-417">URI пространства имен, связываемый с элементом.</span><span class="sxs-lookup"><span data-stu-id="959e6-417">The namespace URI to associate with the element.</span></span> <span data-ttu-id="959e6-418">Если пространство имен уже находится в области видимости и с ним связан префикс, средство записи автоматически запишет этот префикс.</span><span class="sxs-lookup"><span data-stu-id="959e6-418">If this namespace is already in scope and has an associated prefix then the writer automatically writes that prefix also.</span></span></param>
        <summary><span data-ttu-id="959e6-419">Записывает указанный открывающий тег и связывает его с заданным пространством имен и префиксом.</span><span class="sxs-lookup"><span data-stu-id="959e6-419">Writes the specified start tag and associates it with the given namespace and prefix.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="959e6-420">Начиная с .NET Framework 2,0 рекомендуется создавать <xref:System.Xml.XmlWriter> экземпляры с <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> помощью метода и <xref:System.Xml.XmlWriterSettings> класса, чтобы воспользоваться преимуществами новых функциональных возможностей.</span><span class="sxs-lookup"><span data-stu-id="959e6-420">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="959e6-421">После вызова этого метода можно либо записать атрибуты, либо создать содержимое с <xref:System.Xml.XmlTextWriter.WriteComment%2A>помощью <xref:System.Xml.XmlTextWriter.WriteString%2A>, или <xref:System.Xml.XmlTextWriter.WriteStartElement%2A> для дочерних элементов.</span><span class="sxs-lookup"><span data-stu-id="959e6-421">After calling this method you can either write attributes or create content using <xref:System.Xml.XmlTextWriter.WriteComment%2A>, <xref:System.Xml.XmlTextWriter.WriteString%2A>, or <xref:System.Xml.XmlTextWriter.WriteStartElement%2A> for child elements.</span></span> <span data-ttu-id="959e6-422">Можно закрыть элемент <xref:System.Xml.XmlTextWriter.WriteEndElement%2A> , при котором записывается закрывающий тег.</span><span class="sxs-lookup"><span data-stu-id="959e6-422">You can close the element with <xref:System.Xml.XmlTextWriter.WriteEndElement%2A> at which time an end tag is written out.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="959e6-423">В следующем примере записывается книга.</span><span class="sxs-lookup"><span data-stu-id="959e6-423">The following example writes out a book.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="959e6-424">Модуль записи закрыт.</span><span class="sxs-lookup"><span data-stu-id="959e6-424">The writer is closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteState">
      <MemberSignature Language="C#" Value="public override System.Xml.WriteState WriteState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.WriteState WriteState" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextWriter.WriteState" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property WriteState As WriteState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::WriteState WriteState { System::Xml::WriteState get(); };" />
      <MemberSignature Language="F#" Value="member this.WriteState : System.Xml.WriteState" Usage="System.Xml.XmlTextWriter.WriteState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.WriteState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="959e6-425">Возвращает состояние средства записи.</span><span class="sxs-lookup"><span data-stu-id="959e6-425">Gets the state of the writer.</span></span></summary>
        <value><span data-ttu-id="959e6-426">Одно из значений перечисления <see cref="T:System.Xml.WriteState" />.</span><span class="sxs-lookup"><span data-stu-id="959e6-426">One of the <see cref="T:System.Xml.WriteState" /> values.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="959e6-427">Начиная с .NET Framework 2,0 рекомендуется создавать <xref:System.Xml.XmlWriter> экземпляры с <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> помощью метода и <xref:System.Xml.XmlWriterSettings> класса, чтобы воспользоваться преимуществами новых функциональных возможностей.</span><span class="sxs-lookup"><span data-stu-id="959e6-427">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteString">
      <MemberSignature Language="C#" Value="public override void WriteString (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteString(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteString (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteString(System::String ^ text);" />
      <MemberSignature Language="F#" Value="override this.WriteString : string -&gt; unit" Usage="xmlTextWriter.WriteString text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="959e6-428">Текст для записи.</span><span class="sxs-lookup"><span data-stu-id="959e6-428">Text to write.</span></span></param>
        <summary><span data-ttu-id="959e6-429">Записывает заданное текстовое содержимое.</span><span class="sxs-lookup"><span data-stu-id="959e6-429">Writes the given text content.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="959e6-430">Начиная с .NET Framework 2,0 рекомендуется создавать <xref:System.Xml.XmlWriter> экземпляры с <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> помощью метода и <xref:System.Xml.XmlWriterSettings> класса, чтобы воспользоваться преимуществами новых функциональных возможностей.</span><span class="sxs-lookup"><span data-stu-id="959e6-430">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="959e6-431">`WriteString`выполняет следующие</span><span class="sxs-lookup"><span data-stu-id="959e6-431">`WriteString` does the following</span></span>  
  
-   <span data-ttu-id="959e6-432">Символы, `&` `<`и заменяются `&amp;` символами, и `&gt;` соответственно. `&lt;` `>`</span><span class="sxs-lookup"><span data-stu-id="959e6-432">The characters `&`, `<`, and `>` are replaced with `&amp;`, `&lt;`, and `&gt;`, respectively.</span></span>  
  
-   <span data-ttu-id="959e6-433">Символьные значения в диапазоне 0x-0x1F (за исключением символов пробелов 0x9, 0xA и 0xD) заменяются сущностями числовых`&#0;` символов `&#0x1F`(через).</span><span class="sxs-lookup"><span data-stu-id="959e6-433">Character values in the range 0x-0x1F (excluding white space characters 0x9, 0xA, and 0xD) are replaced with numeric character entities (`&#0;` through `&#0x1F`).</span></span>  
  
-   <span data-ttu-id="959e6-434">Если `WriteString` метод вызывается в контексте значения атрибута, то двойные и одинарные кавычки заменяются на `&quot;` и `&apos;` соответственно.</span><span class="sxs-lookup"><span data-stu-id="959e6-434">If `WriteString` is called in the context of an attribute value, double and single quotes are replaced with `&quot;` and `&apos;` respectively.</span></span>  
  
 <span data-ttu-id="959e6-435">Например, эта входная строка `test<item>test` записывается как</span><span class="sxs-lookup"><span data-stu-id="959e6-435">For example, this input string `test<item>test` is written as</span></span>  
  
```  
test&lt;item&gt;test  
```  
  
 <span data-ttu-id="959e6-436">Если `text` параметр имеет `null` значение `String.Empty`или, то этот метод записывает текстовый узел без содержимого данных.</span><span class="sxs-lookup"><span data-stu-id="959e6-436">If `text` is either `null` or `String.Empty`, this method writes a text node with no data content.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="959e6-437">В следующем примере записывается фрагмент XML.</span><span class="sxs-lookup"><span data-stu-id="959e6-437">The following example writes an XML fragment.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="959e6-438">Строка текста содержит недопустимую пару символов-заместителей.</span><span class="sxs-lookup"><span data-stu-id="959e6-438">The text string contains an invalid surrogate pair.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteSurrogateCharEntity">
      <MemberSignature Language="C#" Value="public override void WriteSurrogateCharEntity (char lowChar, char highChar);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteSurrogateCharEntity(char lowChar, char highChar) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteSurrogateCharEntity(System.Char,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteSurrogateCharEntity (lowChar As Char, highChar As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteSurrogateCharEntity(char lowChar, char highChar);" />
      <MemberSignature Language="F#" Value="override this.WriteSurrogateCharEntity : char * char -&gt; unit" Usage="xmlTextWriter.WriteSurrogateCharEntity (lowChar, highChar)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lowChar" Type="System.Char" />
        <Parameter Name="highChar" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="lowChar"><span data-ttu-id="959e6-439">Младший заместитель.</span><span class="sxs-lookup"><span data-stu-id="959e6-439">The low surrogate.</span></span> <span data-ttu-id="959e6-440">Это должно быть значение в диапазоне от <see langword="0xDC00" /> до <see langword="0xDFFF" />.</span><span class="sxs-lookup"><span data-stu-id="959e6-440">This must be a value between <see langword="0xDC00" /> and <see langword="0xDFFF" />.</span></span></param>
        <param name="highChar"><span data-ttu-id="959e6-441">Старший заместитель.</span><span class="sxs-lookup"><span data-stu-id="959e6-441">The high surrogate.</span></span> <span data-ttu-id="959e6-442">Это должно быть значение в диапазоне от <see langword="0xD800" /> до <see langword="0xDBFF" />.</span><span class="sxs-lookup"><span data-stu-id="959e6-442">This must be a value between <see langword="0xD800" /> and <see langword="0xDBFF" />.</span></span></param>
        <summary><span data-ttu-id="959e6-443">Создает и записывает сущность знака-заместителя для пары знаков-заместителей.</span><span class="sxs-lookup"><span data-stu-id="959e6-443">Generates and writes the surrogate character entity for the surrogate character pair.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="959e6-444">Начиная с .NET Framework 2,0 рекомендуется создавать <xref:System.Xml.XmlWriter> экземпляры с <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> помощью метода и <xref:System.Xml.XmlWriterSettings> класса, чтобы воспользоваться преимуществами новых функциональных возможностей.</span><span class="sxs-lookup"><span data-stu-id="959e6-444">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="959e6-445">Этот метод применим только в системах, использующих кодировку UTF-16.</span><span class="sxs-lookup"><span data-stu-id="959e6-445">This method is only applicable on systems that use UTF-16 encoding.</span></span>  
  
 <span data-ttu-id="959e6-446">Сущность суррогатных символов записывается в шестнадцатеричном формате.</span><span class="sxs-lookup"><span data-stu-id="959e6-446">The surrogate character entity is written in hexadecimal format.</span></span> <span data-ttu-id="959e6-447">Диапазон символов-заместителей —  `#x10000` . `#x10FFFF`</span><span class="sxs-lookup"><span data-stu-id="959e6-447">The range for surrogate characters is `#x10000` to `#x10FFFF`.</span></span> <span data-ttu-id="959e6-448">Для создания сущности`highChar`суррогатных символов используется следующая формула: ( - `0xD800`) \* `0x400` + (`0xDC00``lowChar` - ) + `0x10000`.</span><span class="sxs-lookup"><span data-stu-id="959e6-448">The following formula is used to generate the surrogate character entity: (`highChar` - `0xD800`) \* `0x400` + (`lowChar` - `0xDC00`) + `0x10000`.</span></span>  
  
 <span data-ttu-id="959e6-449">Для HTML и XML кодировка документа (и, следовательно, нотация ссылок на числовые символы) основана на UCS [ISO-10646].</span><span class="sxs-lookup"><span data-stu-id="959e6-449">For both HTML and XML, the document character set (and therefore the notation of numeric character references) is based on UCS [ISO-10646].</span></span> <span data-ttu-id="959e6-450">В некоторых случаях ссылка на отдельный числовой символ в исходном документе может соответствовать 2 16-разрядным единицам в строке (старший суррогат и младший суррогат).</span><span class="sxs-lookup"><span data-stu-id="959e6-450">A single numeric character reference in a source document may therefore in some cases correspond to two 16-bit units in a string (a high surrogate and a low surrogate).</span></span> <span data-ttu-id="959e6-451">Эти 16-разрядные единицы называются суррогатной парой.</span><span class="sxs-lookup"><span data-stu-id="959e6-451">These 16-bit units are referred to as a surrogate pair.</span></span>  
  
 <span data-ttu-id="959e6-452">Дополнительные сведения о суррогатах и символах см. в разделе 3,7 стандарта [Юникод 3.0/unicode 2,0](https://www.unicode.org)или [в разделе 2,2 рекомендации консорциума W3C XML 1,0](https://www.w3.org/TR/REC-xml#charsets).</span><span class="sxs-lookup"><span data-stu-id="959e6-452">For more information regarding surrogates or characters, refer to section 3.7 of the [Unicode 3.0/Unicode 2.0 standard](https://www.unicode.org), or [section 2.2 of the W3C XML 1.0 Recommendation](https://www.w3.org/TR/REC-xml#charsets).</span></span>
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception"><span data-ttu-id="959e6-453">Передана недопустимая пара символов-заместителей.</span><span class="sxs-lookup"><span data-stu-id="959e6-453">An invalid surrogate character pair was passed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteWhitespace">
      <MemberSignature Language="C#" Value="public override void WriteWhitespace (string ws);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteWhitespace(string ws) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteWhitespace(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteWhitespace (ws As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteWhitespace(System::String ^ ws);" />
      <MemberSignature Language="F#" Value="override this.WriteWhitespace : string -&gt; unit" Usage="xmlTextWriter.WriteWhitespace ws" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ws" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ws"><span data-ttu-id="959e6-454">Строка символов-разделителей.</span><span class="sxs-lookup"><span data-stu-id="959e6-454">The string of white space characters.</span></span></param>
        <summary><span data-ttu-id="959e6-455">Записывает указанный символ-разделитель.</span><span class="sxs-lookup"><span data-stu-id="959e6-455">Writes out the given white space.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="959e6-456">Начиная с .NET Framework 2,0 рекомендуется создавать <xref:System.Xml.XmlWriter> экземпляры с <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> помощью метода и <xref:System.Xml.XmlWriterSettings> класса, чтобы воспользоваться преимуществами новых функциональных возможностей.</span><span class="sxs-lookup"><span data-stu-id="959e6-456">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="959e6-457">Этот метод используется для форматирования документа вручную.</span><span class="sxs-lookup"><span data-stu-id="959e6-457">This method is used to manually format your document.</span></span> <span data-ttu-id="959e6-458"><xref:System.Xml.XmlTextWriter.Formatting%2A> Используйте свойство, чтобы автоматическое форматирование выходных данных в формате записи.</span><span class="sxs-lookup"><span data-stu-id="959e6-458">Use the <xref:System.Xml.XmlTextWriter.Formatting%2A> property to have the writer format the output automatically.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="959e6-459">В следующем примере используется `WriteWhitespace` метод для управления форматированием файла.</span><span class="sxs-lookup"><span data-stu-id="959e6-459">The following example uses the `WriteWhitespace` method to control how the file is formatted.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.XmlSpace Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.XmlSpace Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.XmlSpace Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.XmlSpace Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.XmlSpace Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.XmlSpace Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="959e6-460">Строка содержит символы, отличные от пробелов.</span><span class="sxs-lookup"><span data-stu-id="959e6-460">The string contains non-white space characters.</span></span></exception>
        <altmember cref="P:System.Xml.XmlTextWriter.Formatting" />
      </Docs>
    </Member>
    <Member MemberName="XmlLang">
      <MemberSignature Language="C#" Value="public override string XmlLang { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string XmlLang" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextWriter.XmlLang" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property XmlLang As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ XmlLang { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.XmlLang : string" Usage="System.Xml.XmlTextWriter.XmlLang" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="959e6-461">Возвращает текущую область действия <see langword="xml:lang" />.</span><span class="sxs-lookup"><span data-stu-id="959e6-461">Gets the current <see langword="xml:lang" /> scope.</span></span></summary>
        <value><span data-ttu-id="959e6-462">Текущие значения <see langword="xml:lang" /> или <see langword="null" />, если в текущей области отсутствует <see langword="xml:lang" />.</span><span class="sxs-lookup"><span data-stu-id="959e6-462">The current <see langword="xml:lang" /> or <see langword="null" /> if there is no <see langword="xml:lang" /> in the current scope.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="959e6-463">Начиная с .NET Framework 2,0 рекомендуется создавать <xref:System.Xml.XmlWriter> экземпляры с <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> помощью метода и <xref:System.Xml.XmlWriterSettings> класса, чтобы воспользоваться преимуществами новых функциональных возможностей.</span><span class="sxs-lookup"><span data-stu-id="959e6-463">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="959e6-464">Это свойство позволяет одному компоненту определить состояние, в котором другой компонент оставил модуль записи.</span><span class="sxs-lookup"><span data-stu-id="959e6-464">This property allows one component to find out what state another component has left the writer in.</span></span> <span data-ttu-id="959e6-465">Например, одному компоненту нужно сообщить другому языку текст справки, который нужно создать.</span><span class="sxs-lookup"><span data-stu-id="959e6-465">For example, perhaps one component wants to tell another which language help text to generate.</span></span> <span data-ttu-id="959e6-466">Сведения о языке передаются посредством записи `xml:lang` атрибута.</span><span class="sxs-lookup"><span data-stu-id="959e6-466">The language information is communicated by writing an `xml:lang` attribute.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlSpace">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlSpace XmlSpace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.XmlSpace XmlSpace" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextWriter.XmlSpace" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property XmlSpace As XmlSpace" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlSpace XmlSpace { System::Xml::XmlSpace get(); };" />
      <MemberSignature Language="F#" Value="member this.XmlSpace : System.Xml.XmlSpace" Usage="System.Xml.XmlTextWriter.XmlSpace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlSpace</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="959e6-467">Возвращает объект <see cref="T:System.Xml.XmlSpace" />, представляющий текущую область <see langword="xml:space" />.</span><span class="sxs-lookup"><span data-stu-id="959e6-467">Gets an <see cref="T:System.Xml.XmlSpace" /> representing the current <see langword="xml:space" /> scope.</span></span></summary>
        <value><span data-ttu-id="959e6-468">Объект <see langword="XmlSpace" />, представляющий текущую область <see langword="xml:space" />.</span><span class="sxs-lookup"><span data-stu-id="959e6-468">An <see langword="XmlSpace" /> representing the current <see langword="xml:space" /> scope.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="959e6-469">Значение</span><span class="sxs-lookup"><span data-stu-id="959e6-469">Value</span></span> 
 </term><description> <span data-ttu-id="959e6-470">Значение</span><span class="sxs-lookup"><span data-stu-id="959e6-470">Meaning</span></span> 
 </description></listheader><item><term> <span data-ttu-id="959e6-471">Нет</span><span class="sxs-lookup"><span data-stu-id="959e6-471">None</span></span> 
 </term><description> <span data-ttu-id="959e6-472">Значение, задаваемое по умолчанию, если область <see langword="xml:space" /> отсутствует.</span><span class="sxs-lookup"><span data-stu-id="959e6-472">This is the default if no <see langword="xml:space" /> scope exists.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="959e6-473">Значение по умолчанию</span><span class="sxs-lookup"><span data-stu-id="959e6-473">Default</span></span> 
 </term><description> <span data-ttu-id="959e6-474">Текущая область — <see langword="xml:space" />="default".</span><span class="sxs-lookup"><span data-stu-id="959e6-474">The current scope is <see langword="xml:space" />="default".</span></span>  
  
 </description></item><item><term> <span data-ttu-id="959e6-475">Сохранить</span><span class="sxs-lookup"><span data-stu-id="959e6-475">Preserve</span></span> 
 </term><description> <span data-ttu-id="959e6-476">Текущая область — <see langword="xml:space" />="preserve".</span><span class="sxs-lookup"><span data-stu-id="959e6-476">The current scope is <see langword="xml:space" />="preserve".</span></span>  
  
 </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="959e6-477">Начиная с .NET Framework 2,0 рекомендуется создавать <xref:System.Xml.XmlWriter> экземпляры с <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> помощью метода и <xref:System.Xml.XmlWriterSettings> класса, чтобы воспользоваться преимуществами новых функциональных возможностей.</span><span class="sxs-lookup"><span data-stu-id="959e6-477">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="959e6-478">Это свойство позволяет одному компоненту определить, в каком состоянии другой компонент оставил модуль записи.</span><span class="sxs-lookup"><span data-stu-id="959e6-478">This property allows one component to find out in what state another component has left the writer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="959e6-479">В следующем примере используется `WriteWhitespace` метод для управления форматированием файла.</span><span class="sxs-lookup"><span data-stu-id="959e6-479">The following example uses the `WriteWhitespace` method to control how the file is formatted.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.XmlSpace Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.XmlSpace Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.XmlSpace Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.XmlSpace Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.XmlSpace Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.XmlSpace Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
