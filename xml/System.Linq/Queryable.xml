<Type Name="Queryable" FullName="System.Linq.Queryable">
  <Metadata><Meta Name="ms.openlocfilehash" Value="417a4b731dea935e3c10a62df506b01216b940b6" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69117670" /></Metadata><TypeSignature Language="C#" Value="public static class Queryable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Queryable extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Linq.Queryable" />
  <TypeSignature Language="VB.NET" Value="Public Module Queryable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Queryable abstract sealed" />
  <TypeSignature Language="F#" Value="type Queryable = class" />
  <AssemblyInfo>
    <AssemblyName>System.Linq.Queryable</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="a55f4-101">Предоставляет набор методов типа <see langword="static" /> (<see langword="Shared" /> в Visual Basic) для выполнения запросов к структурам данных, реализующим объект <see cref="T:System.Linq.IQueryable`1" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-101">Provides a set of <see langword="static" /> (<see langword="Shared" /> in Visual Basic) methods for querying data structures that implement <see cref="T:System.Linq.IQueryable`1" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a55f4-102">Набор методов, объявленных в <xref:System.Linq.Queryable> классе, предоставляет реализацию стандартных операторов запросов для запросов к источникам данных, которые реализуют. <xref:System.Linq.IQueryable%601></span><span class="sxs-lookup"><span data-stu-id="a55f4-102">The set of methods declared in the <xref:System.Linq.Queryable> class provides an implementation of the standard query operators for querying data sources that implement <xref:System.Linq.IQueryable%601>.</span></span> <span data-ttu-id="a55f4-103">Стандартные операторы запросов являются методами общего назначения, которые следуют [!INCLUDE[vbteclinq](~/includes/vbteclinq-md.md)] шаблону и позволяют выражать операции обхода, фильтрации и проекции данных в любом. Язык программирования на основе NET.</span><span class="sxs-lookup"><span data-stu-id="a55f4-103">The standard query operators are general purpose methods that follow the [!INCLUDE[vbteclinq](~/includes/vbteclinq-md.md)] pattern and enable you to express traversal, filter, and projection operations over data in any .NET-based programming language.</span></span>  
  
 <span data-ttu-id="a55f4-104">Большинство методов в этом классе определяются как методы расширения, расширяющие <xref:System.Linq.IQueryable%601> тип.</span><span class="sxs-lookup"><span data-stu-id="a55f4-104">The majority of the methods in this class are defined as extension methods that extend the <xref:System.Linq.IQueryable%601> type.</span></span> <span data-ttu-id="a55f4-105">Это означает, что их можно вызывать как метод экземпляра для любого объекта, реализующего интерфейс <xref:System.Linq.IQueryable%601>.</span><span class="sxs-lookup"><span data-stu-id="a55f4-105">This means they can be called like an instance method on any object that implements <xref:System.Linq.IQueryable%601>.</span></span> <span data-ttu-id="a55f4-106">Эти методы, которые <xref:System.Linq.IQueryable%601> расширяют, не выполняют никаких запросов напрямую.</span><span class="sxs-lookup"><span data-stu-id="a55f4-106">These methods that extend <xref:System.Linq.IQueryable%601> do not perform any querying directly.</span></span> <span data-ttu-id="a55f4-107">Вместо этого их функциональность заключается в построении <xref:System.Linq.Expressions.Expression> объекта, который представляет собой дерево выражения, представляющее накопительный запрос.</span><span class="sxs-lookup"><span data-stu-id="a55f4-107">Instead, their functionality is to build an <xref:System.Linq.Expressions.Expression> object, which is an expression tree that represents the cumulative query.</span></span> <span data-ttu-id="a55f4-108">Затем методы передают новое дерево выражения либо <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> методу, <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> либо методу входных данных <xref:System.Linq.IQueryable%601>.</span><span class="sxs-lookup"><span data-stu-id="a55f4-108">The methods then pass the new expression tree to either the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method or the <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> method of the input <xref:System.Linq.IQueryable%601>.</span></span> <span data-ttu-id="a55f4-109">Метод, который вызывается, зависит от того <xref:System.Linq.Queryable> , возвращает ли метод одноэлементное значение, <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> в каком случае вызывается или содержит перечислимые <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> результаты, в котором вызывается.</span><span class="sxs-lookup"><span data-stu-id="a55f4-109">The method that is called depends on whether the <xref:System.Linq.Queryable> method returns a singleton value, in which case <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> is called, or has enumerable results, in which case <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> is called.</span></span>  
  
 <span data-ttu-id="a55f4-110">Фактическое выполнение запроса на целевых данных выполняется классом, реализующим <xref:System.Linq.IQueryable%601>.</span><span class="sxs-lookup"><span data-stu-id="a55f4-110">The actual query execution on the target data is performed by a class that implements <xref:System.Linq.IQueryable%601>.</span></span> <span data-ttu-id="a55f4-111">Ожидание любой <xref:System.Linq.IQueryable%601> реализации заключается в том, что результат выполнения дерева выражения, созданного <xref:System.Linq.Queryable> методом стандартного оператора запроса, эквивалентен результату вызова соответствующего метода в <xref:System.Linq.Enumerable> класс, если источником данных был <xref:System.Collections.Generic.IEnumerable%601>.</span><span class="sxs-lookup"><span data-stu-id="a55f4-111">The expectation of any <xref:System.Linq.IQueryable%601> implementation is that the result of executing an expression tree that was constructed by a <xref:System.Linq.Queryable> standard query operator method is equivalent to the result of calling the corresponding method in the <xref:System.Linq.Enumerable> class, if the data source were an <xref:System.Collections.Generic.IEnumerable%601>.</span></span>  
  
 <span data-ttu-id="a55f4-112">В дополнение к методам стандартных операторов запросов, которые работают <xref:System.Linq.IQueryable%601> с объектами, этот класс также содержит метод, <xref:System.Linq.Queryable.AsQueryable%2A>который вводит <xref:System.Collections.IEnumerable> объекты в виде <xref:System.Linq.IQueryable> объектов.</span><span class="sxs-lookup"><span data-stu-id="a55f4-112">In addition to the standard query operator methods that operate on <xref:System.Linq.IQueryable%601> objects, this class also contains a method, <xref:System.Linq.Queryable.AsQueryable%2A>, which types <xref:System.Collections.IEnumerable> objects as <xref:System.Linq.IQueryable> objects.</span></span>  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/a73c4aec-5d15-4e98-b962-1274021ea93d"><span data-ttu-id="a55f4-113">LINQ</span><span class="sxs-lookup"><span data-stu-id="a55f4-113">Language-Integrated Query (LINQ)</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/24cda21e-8af8-4632-b519-c404a839b9b2"><span data-ttu-id="a55f4-114">Общие сведения о стандартных операторах запросов</span><span class="sxs-lookup"><span data-stu-id="a55f4-114">Standard Query Operators Overview</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/fb1d3ed8-d5b0-4211-a71f-dd271529294b"><span data-ttu-id="a55f4-115">Деревья выражений</span><span class="sxs-lookup"><span data-stu-id="a55f4-115">Expression Trees</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/73d13345-eece-471a-af40-4cc7a2f11655"><span data-ttu-id="a55f4-116">Запросы из LINQ в SQL</span><span class="sxs-lookup"><span data-stu-id="a55f4-116">LINQ to SQL</span></span></related>
  </Docs>
  <Members>
    <Member MemberName="Aggregate&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static TSource Aggregate&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,TSource,TSource&gt;&gt; func);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TSource Aggregate&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`3&lt;!!TSource, !!TSource, !!TSource&gt;&gt; func) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Aggregate``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``0,``0}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Aggregate(Of TSource) (source As IQueryable(Of TSource), func As Expression(Of Func(Of TSource, TSource, TSource))) As TSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TSource Aggregate(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, TSource, TSource&gt; ^&gt; ^ func);" />
      <MemberSignature Language="F#" Value="static member Aggregate : System.Linq.IQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, 'Source, 'Source&gt;&gt; -&gt; 'Source" Usage="System.Linq.Queryable.Aggregate (source, func)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TSource</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="func" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,TSource,TSource&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="a55f4-117">Тип элементов <paramref name="source" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-117">The type of the elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="a55f4-118">Последовательность, для которой выполняется статистическая операция.</span><span class="sxs-lookup"><span data-stu-id="a55f4-118">A sequence to aggregate over.</span></span></param>
        <param name="func"><span data-ttu-id="a55f4-119">Агрегатная функция, применяемая к каждому элементу.</span><span class="sxs-lookup"><span data-stu-id="a55f4-119">An accumulator function to apply to each element.</span></span></param>
        <summary><span data-ttu-id="a55f4-120">Применяет к последовательности агрегатную функцию.</span><span class="sxs-lookup"><span data-stu-id="a55f4-120">Applies an accumulator function over a sequence.</span></span></summary>
        <returns><span data-ttu-id="a55f4-121">Конечное агрегатное значение.</span><span class="sxs-lookup"><span data-stu-id="a55f4-121">The final accumulator value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a55f4-122">Этот метод имеет по крайней мере один параметр <xref:System.Linq.Expressions.Expression%601> типа, аргумент типа которого является одним <xref:System.Func%602> из типов.</span><span class="sxs-lookup"><span data-stu-id="a55f4-122">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="a55f4-123">Для этих параметров можно передать лямбда-выражение, которое будет скомпилировано в <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="a55f4-123">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="a55f4-124">Метод создает объект <xref:System.Linq.Expressions.MethodCallExpression> , который представляет вызов <xref:System.Linq.Queryable.Aggregate%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%600%2C%60%600%7D%7D%29> самого себя как сконструированного универсального метода. <xref:System.Linq.Queryable.Aggregate%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%600%2C%60%600%7D%7D%29></span><span class="sxs-lookup"><span data-stu-id="a55f4-124">The <xref:System.Linq.Queryable.Aggregate%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%600%2C%60%600%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Aggregate%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%600%2C%60%600%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="a55f4-125">Затем <xref:System.Linq.Expressions.MethodCallExpression> он передает <xref:System.Linq.IQueryProvider> методу класса, представленного `source`свойствомпараметра <xref:System.Linq.IQueryable.Provider%2A> <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> .</span><span class="sxs-lookup"><span data-stu-id="a55f4-125">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="a55f4-126">Поведение запроса, которое происходит в результате выполнения дерева выражения, представляющего вызов <xref:System.Linq.Queryable.Aggregate%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%600%2C%60%600%7D%7D%29> , зависит от реализации типа `source` параметра.</span><span class="sxs-lookup"><span data-stu-id="a55f4-126">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Aggregate%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%600%2C%60%600%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="a55f4-127">Ожидаемое поведение заключается в том, что указанная функция `func`, применяется к каждому значению в исходной последовательности и возвращается накопленное значение.</span><span class="sxs-lookup"><span data-stu-id="a55f4-127">The expected behavior is that the specified function, `func`, is applied to each value in the source sequence and the accumulated value is returned.</span></span> <span data-ttu-id="a55f4-128">Первое значение в `source` используется в качестве начального значения для накопленного значения, которое соответствует первому параметру в `func`.</span><span class="sxs-lookup"><span data-stu-id="a55f4-128">The first value in `source` is used as the seed value for the accumulated value, which corresponds to the first parameter in `func`.</span></span>  
  
 <span data-ttu-id="a55f4-129">Для упрощения общих операций статистической обработки набор стандартных операторов запросов также включает два метода подсчета <xref:System.Linq.Queryable.LongCount%2A>, <xref:System.Linq.Queryable.Count%2A> и, и четыре числовых <xref:System.Linq.Queryable.Min%2A>метода <xref:System.Linq.Queryable.Max%2A>статистической обработки <xref:System.Linq.Queryable.Sum%2A>, а именно,, и. <xref:System.Linq.Queryable.Average%2A>.</span><span class="sxs-lookup"><span data-stu-id="a55f4-129">To simplify common aggregation operations, the set of standard query operators also includes two counting methods, <xref:System.Linq.Queryable.Count%2A> and <xref:System.Linq.Queryable.LongCount%2A>, and four numeric aggregation methods, namely <xref:System.Linq.Queryable.Max%2A>, <xref:System.Linq.Queryable.Min%2A>, <xref:System.Linq.Queryable.Sum%2A>, and <xref:System.Linq.Queryable.Average%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a55f4-130">В следующем примере кода показано, как использовать <xref:System.Linq.Queryable.Aggregate%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%600%2C%60%600%7D%7D%29> для построения предложения из массива строк.</span><span class="sxs-lookup"><span data-stu-id="a55f4-130">The following code example demonstrates how to use <xref:System.Linq.Queryable.Aggregate%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%600%2C%60%600%7D%7D%29> to build a sentence from an array of strings.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#1)]
 [!code-vb[System.Linq.Queryable#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a55f4-131">Параметр <paramref name="source" /> или <paramref name="func" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-131"><paramref name="source" /> or <paramref name="func" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a55f4-132">Последовательность <paramref name="source" /> не содержит элементов.</span><span class="sxs-lookup"><span data-stu-id="a55f4-132"><paramref name="source" /> contains no elements.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Aggregate&lt;TSource,TAccumulate&gt;">
      <MemberSignature Language="C#" Value="public static TAccumulate Aggregate&lt;TSource,TAccumulate&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, TAccumulate seed, System.Linq.Expressions.Expression&lt;Func&lt;TAccumulate,TSource,TAccumulate&gt;&gt; func);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TAccumulate Aggregate&lt;TSource, TAccumulate&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, !!TAccumulate seed, class System.Linq.Expressions.Expression`1&lt;class System.Func`3&lt;!!TAccumulate, !!TSource, !!TAccumulate&gt;&gt; func) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Aggregate``2(System.Linq.IQueryable{``0},``1,System.Linq.Expressions.Expression{System.Func{``1,``0,``1}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Aggregate(Of TSource, TAccumulate) (source As IQueryable(Of TSource), seed As TAccumulate, func As Expression(Of Func(Of TAccumulate, TSource, TAccumulate))) As TAccumulate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TAccumulate&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TAccumulate Aggregate(System::Linq::IQueryable&lt;TSource&gt; ^ source, TAccumulate seed, System::Linq::Expressions::Expression&lt;Func&lt;TAccumulate, TSource, TAccumulate&gt; ^&gt; ^ func);" />
      <MemberSignature Language="F#" Value="static member Aggregate : System.Linq.IQueryable&lt;'Source&gt; * 'Accumulate * System.Linq.Expressions.Expression&lt;Func&lt;'Accumulate, 'Source, 'Accumulate&gt;&gt; -&gt; 'Accumulate" Usage="System.Linq.Queryable.Aggregate (source, seed, func)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TAccumulate</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TAccumulate" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="seed" Type="TAccumulate" />
        <Parameter Name="func" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TAccumulate,TSource,TAccumulate&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="a55f4-133">Тип элементов <paramref name="source" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-133">The type of the elements of <paramref name="source" />.</span></span></typeparam>
        <typeparam name="TAccumulate"><span data-ttu-id="a55f4-134">Тип агрегатного значения.</span><span class="sxs-lookup"><span data-stu-id="a55f4-134">The type of the accumulator value.</span></span></typeparam>
        <param name="source"><span data-ttu-id="a55f4-135">Последовательность, для которой выполняется статистическая операция.</span><span class="sxs-lookup"><span data-stu-id="a55f4-135">A sequence to aggregate over.</span></span></param>
        <param name="seed"><span data-ttu-id="a55f4-136">Начальное агрегатное значение.</span><span class="sxs-lookup"><span data-stu-id="a55f4-136">The initial accumulator value.</span></span></param>
        <param name="func"><span data-ttu-id="a55f4-137">Агрегатная функция, вызываемая для каждого элемента.</span><span class="sxs-lookup"><span data-stu-id="a55f4-137">An accumulator function to invoke on each element.</span></span></param>
        <summary><span data-ttu-id="a55f4-138">Применяет к последовательности агрегатную функцию.</span><span class="sxs-lookup"><span data-stu-id="a55f4-138">Applies an accumulator function over a sequence.</span></span> <span data-ttu-id="a55f4-139">Указанное начальное значение используется в качестве исходного значения агрегатной операции.</span><span class="sxs-lookup"><span data-stu-id="a55f4-139">The specified seed value is used as the initial accumulator value.</span></span></summary>
        <returns><span data-ttu-id="a55f4-140">Конечное агрегатное значение.</span><span class="sxs-lookup"><span data-stu-id="a55f4-140">The final accumulator value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a55f4-141">Этот метод имеет по крайней мере один параметр <xref:System.Linq.Expressions.Expression%601> типа, аргумент типа которого является одним <xref:System.Func%602> из типов.</span><span class="sxs-lookup"><span data-stu-id="a55f4-141">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="a55f4-142">Для этих параметров можно передать лямбда-выражение, которое будет скомпилировано в <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="a55f4-142">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="a55f4-143">Метод создает объект <xref:System.Linq.Expressions.MethodCallExpression> , который представляет вызов <xref:System.Linq.Queryable.Aggregate%60%602%28System.Linq.IQueryable%7B%60%600%7D%2C%60%601%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%600%2C%60%601%7D%7D%29> самого себя как сконструированного универсального метода. <xref:System.Linq.Queryable.Aggregate%60%602%28System.Linq.IQueryable%7B%60%600%7D%2C%60%601%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%600%2C%60%601%7D%7D%29></span><span class="sxs-lookup"><span data-stu-id="a55f4-143">The <xref:System.Linq.Queryable.Aggregate%60%602%28System.Linq.IQueryable%7B%60%600%7D%2C%60%601%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%600%2C%60%601%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Aggregate%60%602%28System.Linq.IQueryable%7B%60%600%7D%2C%60%601%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%600%2C%60%601%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="a55f4-144">Затем <xref:System.Linq.Expressions.MethodCallExpression> он передает <xref:System.Linq.IQueryProvider> методу класса, представленного `source`свойствомпараметра <xref:System.Linq.IQueryable.Provider%2A> <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> .</span><span class="sxs-lookup"><span data-stu-id="a55f4-144">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="a55f4-145">Поведение запроса, которое происходит в результате выполнения дерева выражения, представляющего вызов <xref:System.Linq.Queryable.Aggregate%60%602%28System.Linq.IQueryable%7B%60%600%7D%2C%60%601%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%600%2C%60%601%7D%7D%29> , зависит от реализации типа `source` параметра.</span><span class="sxs-lookup"><span data-stu-id="a55f4-145">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Aggregate%60%602%28System.Linq.IQueryable%7B%60%600%7D%2C%60%601%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%600%2C%60%601%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="a55f4-146">Ожидаемое поведение заключается в том, что указанная функция `func`, применяется к каждому значению в исходной последовательности и возвращается накопленное значение.</span><span class="sxs-lookup"><span data-stu-id="a55f4-146">The expected behavior is that the specified function, `func`, is applied to each value in the source sequence and the accumulated value is returned.</span></span> <span data-ttu-id="a55f4-147">Параметр используется в качестве начального значения для накопленного значения, которое соответствует первому параметру в `func`. `seed`</span><span class="sxs-lookup"><span data-stu-id="a55f4-147">The `seed` parameter is used as the seed value for the accumulated value, which corresponds to the first parameter in `func`.</span></span>  
  
 <span data-ttu-id="a55f4-148">Для упрощения общих операций статистической обработки набор стандартных операторов запросов также включает два метода подсчета <xref:System.Linq.Queryable.LongCount%2A>, <xref:System.Linq.Queryable.Count%2A> и, и четыре числовых <xref:System.Linq.Queryable.Min%2A>метода <xref:System.Linq.Queryable.Max%2A>статистической обработки <xref:System.Linq.Queryable.Sum%2A>, а именно,, и. <xref:System.Linq.Queryable.Average%2A>.</span><span class="sxs-lookup"><span data-stu-id="a55f4-148">To simplify common aggregation operations, the set of standard query operators also includes two counting methods, <xref:System.Linq.Queryable.Count%2A> and <xref:System.Linq.Queryable.LongCount%2A>, and four numeric aggregation methods, namely <xref:System.Linq.Queryable.Max%2A>, <xref:System.Linq.Queryable.Min%2A>, <xref:System.Linq.Queryable.Sum%2A>, and <xref:System.Linq.Queryable.Average%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a55f4-149">В следующем примере кода показано, как использовать <xref:System.Linq.Queryable.Aggregate%60%602%28System.Linq.IQueryable%7B%60%600%7D%2C%60%601%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%600%2C%60%601%7D%7D%29> для применения функции accumulate при указании начального значения для функции.</span><span class="sxs-lookup"><span data-stu-id="a55f4-149">The following code example demonstrates how to use <xref:System.Linq.Queryable.Aggregate%60%602%28System.Linq.IQueryable%7B%60%600%7D%2C%60%601%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%600%2C%60%601%7D%7D%29> to apply an accumulator function when a seed value is provided to the function.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#2)]
 [!code-vb[System.Linq.Queryable#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a55f4-150">Параметр <paramref name="source" /> или <paramref name="func" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-150"><paramref name="source" /> or <paramref name="func" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Aggregate&lt;TSource,TAccumulate,TResult&gt;">
      <MemberSignature Language="C#" Value="public static TResult Aggregate&lt;TSource,TAccumulate,TResult&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, TAccumulate seed, System.Linq.Expressions.Expression&lt;Func&lt;TAccumulate,TSource,TAccumulate&gt;&gt; func, System.Linq.Expressions.Expression&lt;Func&lt;TAccumulate,TResult&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TResult Aggregate&lt;TSource, TAccumulate, TResult&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, !!TAccumulate seed, class System.Linq.Expressions.Expression`1&lt;class System.Func`3&lt;!!TAccumulate, !!TSource, !!TAccumulate&gt;&gt; func, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TAccumulate, !!TResult&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Aggregate``3(System.Linq.IQueryable{``0},``1,System.Linq.Expressions.Expression{System.Func{``1,``0,``1}},System.Linq.Expressions.Expression{System.Func{``1,``2}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Aggregate(Of TSource, TAccumulate, TResult) (source As IQueryable(Of TSource), seed As TAccumulate, func As Expression(Of Func(Of TAccumulate, TSource, TAccumulate)), selector As Expression(Of Func(Of TAccumulate, TResult))) As TResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TAccumulate, typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TResult Aggregate(System::Linq::IQueryable&lt;TSource&gt; ^ source, TAccumulate seed, System::Linq::Expressions::Expression&lt;Func&lt;TAccumulate, TSource, TAccumulate&gt; ^&gt; ^ func, System::Linq::Expressions::Expression&lt;Func&lt;TAccumulate, TResult&gt; ^&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Aggregate : System.Linq.IQueryable&lt;'Source&gt; * 'Accumulate * System.Linq.Expressions.Expression&lt;Func&lt;'Accumulate, 'Source, 'Accumulate&gt;&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Accumulate, 'Result&gt;&gt; -&gt; 'Result" Usage="System.Linq.Queryable.Aggregate (source, seed, func, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TAccumulate" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="seed" Type="TAccumulate" />
        <Parameter Name="func" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TAccumulate,TSource,TAccumulate&gt;&gt;" />
        <Parameter Name="selector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TAccumulate,TResult&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="a55f4-151">Тип элементов <paramref name="source" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-151">The type of the elements of <paramref name="source" />.</span></span></typeparam>
        <typeparam name="TAccumulate"><span data-ttu-id="a55f4-152">Тип агрегатного значения.</span><span class="sxs-lookup"><span data-stu-id="a55f4-152">The type of the accumulator value.</span></span></typeparam>
        <typeparam name="TResult"><span data-ttu-id="a55f4-153">Тип результирующего значения.</span><span class="sxs-lookup"><span data-stu-id="a55f4-153">The type of the resulting value.</span></span></typeparam>
        <param name="source"><span data-ttu-id="a55f4-154">Последовательность, для которой выполняется статистическая операция.</span><span class="sxs-lookup"><span data-stu-id="a55f4-154">A sequence to aggregate over.</span></span></param>
        <param name="seed"><span data-ttu-id="a55f4-155">Начальное агрегатное значение.</span><span class="sxs-lookup"><span data-stu-id="a55f4-155">The initial accumulator value.</span></span></param>
        <param name="func"><span data-ttu-id="a55f4-156">Агрегатная функция, вызываемая для каждого элемента.</span><span class="sxs-lookup"><span data-stu-id="a55f4-156">An accumulator function to invoke on each element.</span></span></param>
        <param name="selector"><span data-ttu-id="a55f4-157">Функция, преобразующая конечное агрегатное значение в результирующее значение.</span><span class="sxs-lookup"><span data-stu-id="a55f4-157">A function to transform the final accumulator value into the result value.</span></span></param>
        <summary><span data-ttu-id="a55f4-158">Применяет к последовательности агрегатную функцию.</span><span class="sxs-lookup"><span data-stu-id="a55f4-158">Applies an accumulator function over a sequence.</span></span> <span data-ttu-id="a55f4-159">Указанное начальное значение служит исходным значением для агрегатной операции, а указанная функция используется для выбора результирующего значения.</span><span class="sxs-lookup"><span data-stu-id="a55f4-159">The specified seed value is used as the initial accumulator value, and the specified function is used to select the result value.</span></span></summary>
        <returns><span data-ttu-id="a55f4-160">Преобразованное конечное агрегатное значение.</span><span class="sxs-lookup"><span data-stu-id="a55f4-160">The transformed final accumulator value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a55f4-161">Этот метод имеет по крайней мере один параметр <xref:System.Linq.Expressions.Expression%601> типа, аргумент типа которого является одним <xref:System.Func%602> из типов.</span><span class="sxs-lookup"><span data-stu-id="a55f4-161">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="a55f4-162">Для этих параметров можно передать лямбда-выражение, которое будет скомпилировано в <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="a55f4-162">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="a55f4-163">Метод создает объект <xref:System.Linq.Expressions.MethodCallExpression> , который представляет вызов <xref:System.Linq.Queryable.Aggregate%60%603%28System.Linq.IQueryable%7B%60%600%7D%2C%60%601%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%602%7D%7D%29> самого себя как сконструированного универсального метода. <xref:System.Linq.Queryable.Aggregate%60%603%28System.Linq.IQueryable%7B%60%600%7D%2C%60%601%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%602%7D%7D%29></span><span class="sxs-lookup"><span data-stu-id="a55f4-163">The <xref:System.Linq.Queryable.Aggregate%60%603%28System.Linq.IQueryable%7B%60%600%7D%2C%60%601%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%602%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Aggregate%60%603%28System.Linq.IQueryable%7B%60%600%7D%2C%60%601%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%602%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="a55f4-164">Затем <xref:System.Linq.Expressions.MethodCallExpression> он передает <xref:System.Linq.IQueryProvider> методу класса, представленного `source`свойствомпараметра <xref:System.Linq.IQueryable.Provider%2A> <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> .</span><span class="sxs-lookup"><span data-stu-id="a55f4-164">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="a55f4-165">Поведение запроса, которое происходит в результате выполнения дерева выражения, представляющего вызов <xref:System.Linq.Queryable.Aggregate%60%603%28System.Linq.IQueryable%7B%60%600%7D%2C%60%601%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%602%7D%7D%29> , зависит от реализации типа `source` параметра.</span><span class="sxs-lookup"><span data-stu-id="a55f4-165">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Aggregate%60%603%28System.Linq.IQueryable%7B%60%600%7D%2C%60%601%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%602%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="a55f4-166">Ожидаемое поведение заключается в том, что указанная функция `func`, применяется к каждому значению в исходной последовательности и возвращается накопленное значение.</span><span class="sxs-lookup"><span data-stu-id="a55f4-166">The expected behavior is that the specified function, `func`, is applied to each value in the source sequence and the accumulated value is returned.</span></span> <span data-ttu-id="a55f4-167">Параметр используется в качестве начального значения для накопленного значения, которое соответствует первому параметру в `func`. `seed`</span><span class="sxs-lookup"><span data-stu-id="a55f4-167">The `seed` parameter is used as the seed value for the accumulated value, which corresponds to the first parameter in `func`.</span></span> <span data-ttu-id="a55f4-168">Окончательное накопленное значение передается `selector` в, чтобы получить результирующее значение.</span><span class="sxs-lookup"><span data-stu-id="a55f4-168">The final accumulated value is passed to `selector` to obtain the result value.</span></span>  
  
 <span data-ttu-id="a55f4-169">Для упрощения общих операций статистической обработки набор стандартных операторов запросов также включает два метода подсчета <xref:System.Linq.Queryable.LongCount%2A>, <xref:System.Linq.Queryable.Count%2A> и, и четыре числовых <xref:System.Linq.Queryable.Min%2A>метода <xref:System.Linq.Queryable.Max%2A>статистической обработки <xref:System.Linq.Queryable.Sum%2A>, а именно,, и. <xref:System.Linq.Queryable.Average%2A>.</span><span class="sxs-lookup"><span data-stu-id="a55f4-169">To simplify common aggregation operations, the set of standard query operators also includes two counting methods, <xref:System.Linq.Queryable.Count%2A> and <xref:System.Linq.Queryable.LongCount%2A>, and four numeric aggregation methods, namely <xref:System.Linq.Queryable.Max%2A>, <xref:System.Linq.Queryable.Min%2A>, <xref:System.Linq.Queryable.Sum%2A>, and <xref:System.Linq.Queryable.Average%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a55f4-170">В следующем примере кода показано, как использовать <xref:System.Linq.Queryable.Aggregate%60%603%28System.Linq.IQueryable%7B%60%600%7D%2C%60%601%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%602%7D%7D%29> для применения функции accumulate и селектора результата.</span><span class="sxs-lookup"><span data-stu-id="a55f4-170">The following code example demonstrates how to use <xref:System.Linq.Queryable.Aggregate%60%603%28System.Linq.IQueryable%7B%60%600%7D%2C%60%601%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%602%7D%7D%29> to apply an accumulator function and a result selector.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#3)]
 [!code-vb[System.Linq.Queryable#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a55f4-171">Параметр <paramref name="source" />, <paramref name="func" /> или <paramref name="selector" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-171"><paramref name="source" /> or <paramref name="func" /> or <paramref name="selector" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="All&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static bool All&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,bool&gt;&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool All&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, bool&gt;&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.All``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function All(Of TSource) (source As IQueryable(Of TSource), predicate As Expression(Of Func(Of TSource, Boolean))) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool All(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, bool&gt; ^&gt; ^ predicate);" />
      <MemberSignature Language="F#" Value="static member All : System.Linq.IQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, bool&gt;&gt; -&gt; bool" Usage="System.Linq.Queryable.All (source, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,System.Boolean&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="a55f4-172">Тип элементов <paramref name="source" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-172">The type of the elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="a55f4-173">Последовательность, элементы которой проверяются на соответствие условию.</span><span class="sxs-lookup"><span data-stu-id="a55f4-173">A sequence whose elements to test for a condition.</span></span></param>
        <param name="predicate"><span data-ttu-id="a55f4-174">Функция для проверки каждого элемента на соответствие условию.</span><span class="sxs-lookup"><span data-stu-id="a55f4-174">A function to test each element for a condition.</span></span></param>
        <summary><span data-ttu-id="a55f4-175">Проверяет, все ли элементы последовательности удовлетворяют условию.</span><span class="sxs-lookup"><span data-stu-id="a55f4-175">Determines whether all the elements of a sequence satisfy a condition.</span></span></summary>
        <returns><span data-ttu-id="a55f4-176"><see langword="true" />, если каждый элемент исходной последовательности проходит проверку, определяемую указанным предикатом, или если последовательность пуста; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-176"><see langword="true" /> if every element of the source sequence passes the test in the specified predicate, or if the sequence is empty; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a55f4-177">Этот метод имеет по крайней мере один параметр <xref:System.Linq.Expressions.Expression%601> типа, аргумент типа которого является одним <xref:System.Func%602> из типов.</span><span class="sxs-lookup"><span data-stu-id="a55f4-177">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="a55f4-178">Для этих параметров можно передать лямбда-выражение, которое будет скомпилировано в <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="a55f4-178">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="a55f4-179">Метод создает объект <xref:System.Linq.Expressions.MethodCallExpression> , который представляет вызов <xref:System.Linq.Queryable.All%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> самого себя как сконструированного универсального метода. <xref:System.Linq.Queryable.All%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29></span><span class="sxs-lookup"><span data-stu-id="a55f4-179">The <xref:System.Linq.Queryable.All%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.All%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="a55f4-180">Затем <xref:System.Linq.Expressions.MethodCallExpression> он передает <xref:System.Linq.IQueryProvider> методу класса, представленного `source`свойствомпараметра <xref:System.Linq.IQueryable.Provider%2A> <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> .</span><span class="sxs-lookup"><span data-stu-id="a55f4-180">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="a55f4-181">Поведение запроса, которое происходит в результате выполнения дерева выражения, представляющего вызов <xref:System.Linq.Queryable.All%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> , зависит от реализации `source` типа параметра.</span><span class="sxs-lookup"><span data-stu-id="a55f4-181">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.All%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> depends on the implementation of the `source` parameter's type.</span></span> <span data-ttu-id="a55f4-182">Ожидаемое поведение заключается в том, что он определяет, все `source` ли элементы в удовлетворяет `predicate`условию в.</span><span class="sxs-lookup"><span data-stu-id="a55f4-182">The expected behavior is that it determines if all the elements in `source` satisfy the condition in `predicate`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a55f4-183">В следующем примере кода показано, как использовать <xref:System.Linq.Queryable.All%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> , чтобы определить, удовлетворяет ли условию все элементы последовательности.</span><span class="sxs-lookup"><span data-stu-id="a55f4-183">The following code example demonstrates how to use <xref:System.Linq.Queryable.All%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> to determine whether all the elements in a sequence satisfy a condition.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#4)]
 [!code-vb[System.Linq.Queryable#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#4)]  
  
 <span data-ttu-id="a55f4-184">Логическое значение, <xref:System.Linq.Queryable.All%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> возвращаемое методом, обычно используется в предикате `where` предложения (`Where` предложение в <xref:System.Linq.Queryable.Where%2A> Visual Basic) или непосредственном вызове метода.</span><span class="sxs-lookup"><span data-stu-id="a55f4-184">The Boolean value that the <xref:System.Linq.Queryable.All%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> method returns is typically used in the predicate of a `where` clause (`Where` clause in Visual Basic) or a direct call to the <xref:System.Linq.Queryable.Where%2A> method.</span></span> <span data-ttu-id="a55f4-185">В следующем примере демонстрируется использование `All` метода.</span><span class="sxs-lookup"><span data-stu-id="a55f4-185">The following example demonstrates this use of the `All` method.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#134](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#134)]
 [!code-vb[System.Linq.Queryable#134](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#134)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a55f4-186">Параметр <paramref name="source" /> или <paramref name="predicate" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-186"><paramref name="source" /> or <paramref name="predicate" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Any&lt;TSource&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a55f4-187">Проверяет существование хотя бы одного элемента в последовательности <see cref="T:System.Linq.IQueryable`1" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-187">Determines whether any element of an <see cref="T:System.Linq.IQueryable`1" /> sequence exists or satisfies a condition.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Any&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static bool Any&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Any&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Any``1(System.Linq.IQueryable{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Any(Of TSource) (source As IQueryable(Of TSource)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool Any(System::Linq::IQueryable&lt;TSource&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Any : System.Linq.IQueryable&lt;'Source&gt; -&gt; bool" Usage="System.Linq.Queryable.Any source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="a55f4-188">Тип элементов <paramref name="source" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-188">The type of the elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="a55f4-189">Последовательность, проверяемая на наличие элементов.</span><span class="sxs-lookup"><span data-stu-id="a55f4-189">A sequence to check for being empty.</span></span></param>
        <summary><span data-ttu-id="a55f4-190">Проверяет, содержит ли последовательность какие-либо элементы.</span><span class="sxs-lookup"><span data-stu-id="a55f4-190">Determines whether a sequence contains any elements.</span></span></summary>
        <returns><span data-ttu-id="a55f4-191"><see langword="true" />, если исходная последовательность содержит какие-либо элементы, в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-191"><see langword="true" /> if the source sequence contains any elements; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a55f4-192">Метод создает объект <xref:System.Linq.Expressions.MethodCallExpression> , который представляет вызов <xref:System.Linq.Queryable.Any%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> самого себя как сконструированного универсального метода. <xref:System.Linq.Queryable.Any%60%601%28System.Linq.IQueryable%7B%60%600%7D%29></span><span class="sxs-lookup"><span data-stu-id="a55f4-192">The <xref:System.Linq.Queryable.Any%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Any%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="a55f4-193">Затем <xref:System.Linq.Expressions.MethodCallExpression> он передает <xref:System.Linq.IQueryProvider> методу класса, представленного `source`свойствомпараметра <xref:System.Linq.IQueryable.Provider%2A> <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> .</span><span class="sxs-lookup"><span data-stu-id="a55f4-193">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="a55f4-194">Поведение запроса, которое происходит в результате выполнения дерева выражения, представляющего вызов <xref:System.Linq.Queryable.Any%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> , зависит от реализации типа `source` параметра.</span><span class="sxs-lookup"><span data-stu-id="a55f4-194">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Any%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="a55f4-195">Ожидаемое поведение заключается в том, что `source` он определяет, содержит ли какие-либо элементы.</span><span class="sxs-lookup"><span data-stu-id="a55f4-195">The expected behavior is that it determines if `source` contains any elements.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a55f4-196">В следующем примере кода показано, как с <xref:System.Linq.Queryable.Any%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> помощью определить, содержит ли последовательность какие-либо элементы.</span><span class="sxs-lookup"><span data-stu-id="a55f4-196">The following code example demonstrates how to use <xref:System.Linq.Queryable.Any%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> to determine whether a sequence contains any elements.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#5)]
 [!code-vb[System.Linq.Queryable#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#5)]  
  
 <span data-ttu-id="a55f4-197">Логическое значение, <xref:System.Linq.Queryable.Any%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> возвращаемое методом, обычно используется в предикате `where` предложения (`Where` предложение в <xref:System.Linq.Queryable.Where%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> Visual Basic) или непосредственном вызове метода.</span><span class="sxs-lookup"><span data-stu-id="a55f4-197">The Boolean value that the <xref:System.Linq.Queryable.Any%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> method returns is typically used in the predicate of a `where` clause (`Where` clause in Visual Basic) or a direct call to the <xref:System.Linq.Queryable.Where%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> method.</span></span> <span data-ttu-id="a55f4-198">В следующем примере демонстрируется использование `Any` метода.</span><span class="sxs-lookup"><span data-stu-id="a55f4-198">The following example demonstrates this use of the `Any` method.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#135](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#135)]
 [!code-vb[System.Linq.Queryable#135](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#135)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a55f4-199">Свойство <paramref name="source" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-199"><paramref name="source" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Any&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static bool Any&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,bool&gt;&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Any&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, bool&gt;&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Any``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Any(Of TSource) (source As IQueryable(Of TSource), predicate As Expression(Of Func(Of TSource, Boolean))) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool Any(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, bool&gt; ^&gt; ^ predicate);" />
      <MemberSignature Language="F#" Value="static member Any : System.Linq.IQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, bool&gt;&gt; -&gt; bool" Usage="System.Linq.Queryable.Any (source, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,System.Boolean&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="a55f4-200">Тип элементов <paramref name="source" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-200">The type of the elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="a55f4-201">Последовательность, элементы которой проверяются на соответствие условию.</span><span class="sxs-lookup"><span data-stu-id="a55f4-201">A sequence whose elements to test for a condition.</span></span></param>
        <param name="predicate"><span data-ttu-id="a55f4-202">Функция для проверки каждого элемента на соответствие условию.</span><span class="sxs-lookup"><span data-stu-id="a55f4-202">A function to test each element for a condition.</span></span></param>
        <summary><span data-ttu-id="a55f4-203">Проверяет, удовлетворяет ли какой-либо элемент последовательности заданному условию.</span><span class="sxs-lookup"><span data-stu-id="a55f4-203">Determines whether any element of a sequence satisfies a condition.</span></span></summary>
        <returns><span data-ttu-id="a55f4-204"><see langword="true" />, если какие-либо элементы исходной последовательности проходят проверку, определяемую указанным предикатом; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-204"><see langword="true" /> if any elements in the source sequence pass the test in the specified predicate; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a55f4-205">Этот метод имеет по крайней мере один параметр <xref:System.Linq.Expressions.Expression%601> типа, аргумент типа которого является одним <xref:System.Func%602> из типов.</span><span class="sxs-lookup"><span data-stu-id="a55f4-205">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="a55f4-206">Для этих параметров можно передать лямбда-выражение, которое будет скомпилировано в <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="a55f4-206">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="a55f4-207">Метод создает объект <xref:System.Linq.Expressions.MethodCallExpression> , который представляет вызов <xref:System.Linq.Queryable.Any%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> самого себя как сконструированного универсального метода. <xref:System.Linq.Queryable.Any%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29></span><span class="sxs-lookup"><span data-stu-id="a55f4-207">The <xref:System.Linq.Queryable.Any%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Any%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="a55f4-208">Затем <xref:System.Linq.Expressions.MethodCallExpression> он передает <xref:System.Linq.IQueryProvider> методу класса, представленного `source`свойствомпараметра <xref:System.Linq.IQueryable.Provider%2A> <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> .</span><span class="sxs-lookup"><span data-stu-id="a55f4-208">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="a55f4-209">Поведение запроса, которое происходит в результате выполнения дерева выражения, представляющего вызов <xref:System.Linq.Queryable.Any%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> , зависит от реализации типа `source` параметра.</span><span class="sxs-lookup"><span data-stu-id="a55f4-209">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Any%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="a55f4-210">Ожидаемое поведение заключается в том, что он определяет, какой из `source` элементов удовлетворяет условию, `predicate`заданному параметром.</span><span class="sxs-lookup"><span data-stu-id="a55f4-210">The expected behavior is that it determines if any of the elements of `source` satisfy the condition specified by `predicate`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a55f4-211">В следующем примере кода показано, как с <xref:System.Linq.Queryable.Any%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> помощью определить, удовлетворяет ли какой-либо элемент последовательности условию.</span><span class="sxs-lookup"><span data-stu-id="a55f4-211">The following code example demonstrates how to use <xref:System.Linq.Queryable.Any%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> to determine whether any element in a sequence satisfies a condition.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#6)]
 [!code-vb[System.Linq.Queryable#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a55f4-212">Значение параметра <paramref name="source" /> или <paramref name="predicate" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-212"><paramref name="source" /> or <paramref name="predicate" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Append&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;TSource&gt; Append&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, TSource element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;!!TSource&gt; Append&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, !!TSource element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Append``1(System.Linq.IQueryable{``0},``0)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Append(Of TSource) (source As IQueryable(Of TSource), element As TSource) As IQueryable(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;TSource&gt; ^ Append(System::Linq::IQueryable&lt;TSource&gt; ^ source, TSource element);" />
      <MemberSignature Language="F#" Value="static member Append : System.Linq.IQueryable&lt;'Source&gt; * 'Source -&gt; System.Linq.IQueryable&lt;'Source&gt;" Usage="System.Linq.Queryable.Append (source, element)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="element" Type="TSource" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">To be added.</typeparam>
        <param name="source">To be added.</param>
        <param name="element">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AsQueryable">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable AsQueryable (this System.Collections.IEnumerable source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable AsQueryable(class System.Collections.IEnumerable source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AsQueryable (source As IEnumerable) As IQueryable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable ^ AsQueryable(System::Collections::IEnumerable ^ source);" />
      <MemberSignature Language="F#" Value="static member AsQueryable : System.Collections.IEnumerable -&gt; System.Linq.IQueryable" Usage="System.Linq.Queryable.AsQueryable source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.IEnumerable" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="a55f4-213">Последовательность, подлежащая преобразованию.</span><span class="sxs-lookup"><span data-stu-id="a55f4-213">A sequence to convert.</span></span></param>
        <summary><span data-ttu-id="a55f4-214">Преобразовывает коллекцию <see cref="T:System.Collections.IEnumerable" /> в объект <see cref="T:System.Linq.IQueryable" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-214">Converts an <see cref="T:System.Collections.IEnumerable" /> to an <see cref="T:System.Linq.IQueryable" />.</span></span></summary>
        <returns><span data-ttu-id="a55f4-215">Объект <see cref="T:System.Linq.IQueryable" />, представляющий входную последовательность.</span><span class="sxs-lookup"><span data-stu-id="a55f4-215">An <see cref="T:System.Linq.IQueryable" /> that represents the input sequence.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a55f4-216">Если тип `source` реализует <xref:System.Linq.IQueryable%601>, <xref:System.Linq.Queryable.AsQueryable%28System.Collections.IEnumerable%29> возвращает его напрямую.</span><span class="sxs-lookup"><span data-stu-id="a55f4-216">If the type of `source` implements <xref:System.Linq.IQueryable%601>, <xref:System.Linq.Queryable.AsQueryable%28System.Collections.IEnumerable%29> returns it directly.</span></span> <span data-ttu-id="a55f4-217">В противном случае возвращается <xref:System.Linq.IQueryable%601> объект, который выполняет запросы, вызывая эквивалентные методы операторов <xref:System.Linq.Enumerable> запроса в, а <xref:System.Linq.Queryable>не в.</span><span class="sxs-lookup"><span data-stu-id="a55f4-217">Otherwise, it returns an <xref:System.Linq.IQueryable%601> that executes queries by calling the equivalent query operator methods in <xref:System.Linq.Enumerable> instead of those in <xref:System.Linq.Queryable>.</span></span>  
  
 <span data-ttu-id="a55f4-218">В этом методе `source` предполагается, `T`что реализует <xref:System.Collections.Generic.IEnumerable%601> для некоторых.</span><span class="sxs-lookup"><span data-stu-id="a55f4-218">This method assumes that `source` implements <xref:System.Collections.Generic.IEnumerable%601> for some `T`.</span></span> <span data-ttu-id="a55f4-219">Во время выполнения результат имеет тип для того <xref:System.Linq.IQueryable%601> же `T`типа.</span><span class="sxs-lookup"><span data-stu-id="a55f4-219">At runtime, the result is of type <xref:System.Linq.IQueryable%601> for the same `T`.</span></span> <span data-ttu-id="a55f4-220">Этот метод полезен в динамических сценариях, когда не имеет статического знания о типе `T`.</span><span class="sxs-lookup"><span data-stu-id="a55f4-220">This method is useful in dynamic scenarios when you do not statically know the type of `T`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a55f4-221">Последовательность <paramref name="source" /> не реализует объект <see cref="T:System.Collections.Generic.IEnumerable`1" /> для некоторых типов <paramref name="T" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-221"><paramref name="source" /> does not implement <see cref="T:System.Collections.Generic.IEnumerable`1" /> for some <paramref name="T" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a55f4-222"><paramref name="source" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-222"><paramref name="source" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AsQueryable&lt;TElement&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;TElement&gt; AsQueryable&lt;TElement&gt; (this System.Collections.Generic.IEnumerable&lt;TElement&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;!!TElement&gt; AsQueryable&lt;TElement&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!TElement&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AsQueryable(Of TElement) (source As IEnumerable(Of TElement)) As IQueryable(Of TElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TElement&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;TElement&gt; ^ AsQueryable(System::Collections::Generic::IEnumerable&lt;TElement&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member AsQueryable : seq&lt;'Element&gt; -&gt; System.Linq.IQueryable&lt;'Element&gt;" Usage="System.Linq.Queryable.AsQueryable source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TElement&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TElement" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;TElement&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TElement"><span data-ttu-id="a55f4-223">Тип элементов <paramref name="source" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-223">The type of the elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="a55f4-224">Последовательность, подлежащая преобразованию.</span><span class="sxs-lookup"><span data-stu-id="a55f4-224">A sequence to convert.</span></span></param>
        <summary><span data-ttu-id="a55f4-225">Преобразовывает универсальный объект <see cref="T:System.Collections.Generic.IEnumerable`1" /> в универсальный объект <see cref="T:System.Linq.IQueryable`1" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-225">Converts a generic <see cref="T:System.Collections.Generic.IEnumerable`1" /> to a generic <see cref="T:System.Linq.IQueryable`1" />.</span></span></summary>
        <returns><span data-ttu-id="a55f4-226">Объект <see cref="T:System.Linq.IQueryable`1" />, представляющий входную последовательность.</span><span class="sxs-lookup"><span data-stu-id="a55f4-226">An <see cref="T:System.Linq.IQueryable`1" /> that represents the input sequence.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a55f4-227">Если тип `source` реализует <xref:System.Linq.IQueryable%601>, <xref:System.Linq.Queryable.AsQueryable%60%601%28System.Collections.Generic.IEnumerable%7B%60%600%7D%29> возвращает его напрямую.</span><span class="sxs-lookup"><span data-stu-id="a55f4-227">If the type of `source` implements <xref:System.Linq.IQueryable%601>, <xref:System.Linq.Queryable.AsQueryable%60%601%28System.Collections.Generic.IEnumerable%7B%60%600%7D%29> returns it directly.</span></span> <span data-ttu-id="a55f4-228">В противном случае возвращается <xref:System.Linq.IQueryable%601> объект, который выполняет запросы, вызывая эквивалентные методы операторов <xref:System.Linq.Enumerable> запроса в, а <xref:System.Linq.Queryable>не в.</span><span class="sxs-lookup"><span data-stu-id="a55f4-228">Otherwise, it returns an <xref:System.Linq.IQueryable%601> that executes queries by calling the equivalent query operator methods in <xref:System.Linq.Enumerable> instead of those in <xref:System.Linq.Queryable>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a55f4-229">В следующем примере кода показано, как использовать <xref:System.Linq.Queryable.AsQueryable%60%601%28System.Collections.Generic.IEnumerable%7B%60%600%7D%29> для <xref:System.Collections.Generic.IEnumerable%601> преобразования в <xref:System.Linq.IQueryable%601>.</span><span class="sxs-lookup"><span data-stu-id="a55f4-229">The following code example demonstrates how to use <xref:System.Linq.Queryable.AsQueryable%60%601%28System.Collections.Generic.IEnumerable%7B%60%600%7D%29> to convert an <xref:System.Collections.Generic.IEnumerable%601> to an <xref:System.Linq.IQueryable%601>.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#125](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#125)]
 [!code-vb[System.Linq.Queryable#125](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#125)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a55f4-230">Свойство <paramref name="source" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-230"><paramref name="source" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Average">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a55f4-231">Вычисляет среднее для последовательности числовых значений.</span><span class="sxs-lookup"><span data-stu-id="a55f4-231">Computes the average of a sequence of numeric values.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Average">
      <MemberSignature Language="C#" Value="public static decimal Average (this System.Linq.IQueryable&lt;decimal&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Average(class System.Linq.IQueryable`1&lt;valuetype System.Decimal&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Average(System.Linq.IQueryable{System.Decimal})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Average (source As IQueryable(Of Decimal)) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Decimal Average(System::Linq::IQueryable&lt;System::Decimal&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Average : System.Linq.IQueryable&lt;decimal&gt; -&gt; decimal" Usage="System.Linq.Queryable.Average source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;System.Decimal&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="a55f4-232">Последовательность значений <see cref="T:System.Decimal" />, для которых вычисляется среднее.</span><span class="sxs-lookup"><span data-stu-id="a55f4-232">A sequence of <see cref="T:System.Decimal" /> values to calculate the average of.</span></span></param>
        <summary><span data-ttu-id="a55f4-233">Вычисляет среднее последовательности значений типа <see cref="T:System.Decimal" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-233">Computes the average of a sequence of <see cref="T:System.Decimal" /> values.</span></span></summary>
        <returns><span data-ttu-id="a55f4-234">Среднее для последовательности значений.</span><span class="sxs-lookup"><span data-stu-id="a55f4-234">The average of the sequence of values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a55f4-235">Метод создает объект <xref:System.Linq.Expressions.MethodCallExpression> , который представляет вызов <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Decimal%7D%29> самого себя. <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Decimal%7D%29></span><span class="sxs-lookup"><span data-stu-id="a55f4-235">The <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Decimal%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Decimal%7D%29> itself.</span></span> <span data-ttu-id="a55f4-236">Затем <xref:System.Linq.Expressions.MethodCallExpression> он передает <xref:System.Linq.IQueryProvider> методу класса, представленного `source`свойствомпараметра <xref:System.Linq.IQueryable.Provider%2A> <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> .</span><span class="sxs-lookup"><span data-stu-id="a55f4-236">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="a55f4-237">Поведение запроса, которое происходит в результате выполнения дерева выражения, представляющего вызов <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Decimal%7D%29> , зависит от реализации типа `source` параметра.</span><span class="sxs-lookup"><span data-stu-id="a55f4-237">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Decimal%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="a55f4-238">Ожидаемым поведением является вычисление среднего значения в `source`.</span><span class="sxs-lookup"><span data-stu-id="a55f4-238">The expected behavior is that it calculates the average of the values in `source`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a55f4-239">В следующем примере кода показано, как использовать <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Int32%7D%29> для вычисления среднего значения последовательности значений.</span><span class="sxs-lookup"><span data-stu-id="a55f4-239">The following code example demonstrates how to use <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Int32%7D%29> to calculate the average of a sequence of values.</span></span>  
  
 [!INCLUDE[sqo_diff_overload_example_elementtype](~/includes/sqo-diff-overload-example-elementtype-md.md)]  
  
 [!code-csharp[System.Linq.Queryable#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#8)]
 [!code-vb[System.Linq.Queryable#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a55f4-240">Свойство <paramref name="source" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-240"><paramref name="source" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a55f4-241">Последовательность <paramref name="source" /> не содержит элементов.</span><span class="sxs-lookup"><span data-stu-id="a55f4-241"><paramref name="source" /> contains no elements.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Average">
      <MemberSignature Language="C#" Value="public static double Average (this System.Linq.IQueryable&lt;double&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Average(class System.Linq.IQueryable`1&lt;float64&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Average(System.Linq.IQueryable{System.Double})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Average (source As IQueryable(Of Double)) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static double Average(System::Linq::IQueryable&lt;double&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Average : System.Linq.IQueryable&lt;double&gt; -&gt; double" Usage="System.Linq.Queryable.Average source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;System.Double&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="a55f4-242">Последовательность значений <see cref="T:System.Double" />, для которых вычисляется среднее.</span><span class="sxs-lookup"><span data-stu-id="a55f4-242">A sequence of <see cref="T:System.Double" /> values to calculate the average of.</span></span></param>
        <summary><span data-ttu-id="a55f4-243">Вычисляет среднее последовательности значений типа <see cref="T:System.Double" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-243">Computes the average of a sequence of <see cref="T:System.Double" /> values.</span></span></summary>
        <returns><span data-ttu-id="a55f4-244">Среднее для последовательности значений.</span><span class="sxs-lookup"><span data-stu-id="a55f4-244">The average of the sequence of values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a55f4-245">Метод создает объект <xref:System.Linq.Expressions.MethodCallExpression> , который представляет вызов <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Double%7D%29> самого себя. <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Double%7D%29></span><span class="sxs-lookup"><span data-stu-id="a55f4-245">The <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Double%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Double%7D%29> itself.</span></span> <span data-ttu-id="a55f4-246">Затем <xref:System.Linq.Expressions.MethodCallExpression> он передает <xref:System.Linq.IQueryProvider> методу класса, представленного `source`свойствомпараметра <xref:System.Linq.IQueryable.Provider%2A> <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> .</span><span class="sxs-lookup"><span data-stu-id="a55f4-246">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="a55f4-247">Поведение запроса, которое происходит в результате выполнения дерева выражения, представляющего вызов <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Double%7D%29> , зависит от реализации типа `source` параметра.</span><span class="sxs-lookup"><span data-stu-id="a55f4-247">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Double%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="a55f4-248">Ожидаемым поведением является вычисление среднего значения в `source`.</span><span class="sxs-lookup"><span data-stu-id="a55f4-248">The expected behavior is that it calculates the average of the values in `source`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a55f4-249">В следующем примере кода показано, как использовать <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Int32%7D%29> для вычисления среднего значения последовательности значений.</span><span class="sxs-lookup"><span data-stu-id="a55f4-249">The following code example demonstrates how to use <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Int32%7D%29> to calculate the average of a sequence of values.</span></span>  
  
 [!INCLUDE[sqo_diff_overload_example_elementtype](~/includes/sqo-diff-overload-example-elementtype-md.md)]  
  
 [!code-csharp[System.Linq.Queryable#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#8)]
 [!code-vb[System.Linq.Queryable#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a55f4-250">Свойство <paramref name="source" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-250"><paramref name="source" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a55f4-251">Последовательность <paramref name="source" /> не содержит элементов.</span><span class="sxs-lookup"><span data-stu-id="a55f4-251"><paramref name="source" /> contains no elements.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Average">
      <MemberSignature Language="C#" Value="public static double Average (this System.Linq.IQueryable&lt;int&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Average(class System.Linq.IQueryable`1&lt;int32&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Average(System.Linq.IQueryable{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Average (source As IQueryable(Of Integer)) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static double Average(System::Linq::IQueryable&lt;int&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Average : System.Linq.IQueryable&lt;int&gt; -&gt; double" Usage="System.Linq.Queryable.Average source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;System.Int32&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="a55f4-252">Последовательность значений <see cref="T:System.Int32" />, для которых вычисляется среднее.</span><span class="sxs-lookup"><span data-stu-id="a55f4-252">A sequence of <see cref="T:System.Int32" /> values to calculate the average of.</span></span></param>
        <summary><span data-ttu-id="a55f4-253">Вычисляет среднее последовательности значений типа <see cref="T:System.Int32" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-253">Computes the average of a sequence of <see cref="T:System.Int32" /> values.</span></span></summary>
        <returns><span data-ttu-id="a55f4-254">Среднее для последовательности значений.</span><span class="sxs-lookup"><span data-stu-id="a55f4-254">The average of the sequence of values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a55f4-255">Метод создает объект <xref:System.Linq.Expressions.MethodCallExpression> , который представляет вызов <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Int32%7D%29> самого себя. <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Int32%7D%29></span><span class="sxs-lookup"><span data-stu-id="a55f4-255">The <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Int32%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Int32%7D%29> itself.</span></span> <span data-ttu-id="a55f4-256">Затем <xref:System.Linq.Expressions.MethodCallExpression> он передает <xref:System.Linq.IQueryProvider> методу класса, представленного `source`свойствомпараметра <xref:System.Linq.IQueryable.Provider%2A> <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> .</span><span class="sxs-lookup"><span data-stu-id="a55f4-256">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="a55f4-257">Поведение запроса, которое происходит в результате выполнения дерева выражения, представляющего вызов <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Int32%7D%29> , зависит от реализации типа `source` параметра.</span><span class="sxs-lookup"><span data-stu-id="a55f4-257">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Int32%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="a55f4-258">Ожидаемым поведением является вычисление среднего значения в `source`.</span><span class="sxs-lookup"><span data-stu-id="a55f4-258">The expected behavior is that it calculates the average of the values in `source`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a55f4-259">В следующем примере кода показано, как использовать <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Int32%7D%29> для вычисления среднего значения последовательности значений.</span><span class="sxs-lookup"><span data-stu-id="a55f4-259">The following code example demonstrates how to use <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Int32%7D%29> to calculate the average of a sequence of values.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#8)]
 [!code-vb[System.Linq.Queryable#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a55f4-260"><paramref name="source" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-260"><paramref name="source" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a55f4-261">Последовательность <paramref name="source" /> не содержит элементов.</span><span class="sxs-lookup"><span data-stu-id="a55f4-261"><paramref name="source" /> contains no elements.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Average">
      <MemberSignature Language="C#" Value="public static double Average (this System.Linq.IQueryable&lt;long&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Average(class System.Linq.IQueryable`1&lt;int64&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Average(System.Linq.IQueryable{System.Int64})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Average (source As IQueryable(Of Long)) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static double Average(System::Linq::IQueryable&lt;long&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Average : System.Linq.IQueryable&lt;int64&gt; -&gt; double" Usage="System.Linq.Queryable.Average source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;System.Int64&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="a55f4-262">Последовательность значений <see cref="T:System.Int64" />, для которых вычисляется среднее.</span><span class="sxs-lookup"><span data-stu-id="a55f4-262">A sequence of <see cref="T:System.Int64" /> values to calculate the average of.</span></span></param>
        <summary><span data-ttu-id="a55f4-263">Вычисляет среднее последовательности значений типа <see cref="T:System.Int64" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-263">Computes the average of a sequence of <see cref="T:System.Int64" /> values.</span></span></summary>
        <returns><span data-ttu-id="a55f4-264">Среднее для последовательности значений.</span><span class="sxs-lookup"><span data-stu-id="a55f4-264">The average of the sequence of values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a55f4-265">Метод создает объект <xref:System.Linq.Expressions.MethodCallExpression> , который представляет вызов <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Int64%7D%29> самого себя. <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Int64%7D%29></span><span class="sxs-lookup"><span data-stu-id="a55f4-265">The <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Int64%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Int64%7D%29> itself.</span></span> <span data-ttu-id="a55f4-266">Затем <xref:System.Linq.Expressions.MethodCallExpression> он передает <xref:System.Linq.IQueryProvider> методу класса, представленного `source`свойствомпараметра <xref:System.Linq.IQueryable.Provider%2A> <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> .</span><span class="sxs-lookup"><span data-stu-id="a55f4-266">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="a55f4-267">Поведение запроса, которое происходит в результате выполнения дерева выражения, представляющего вызов <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Int64%7D%29> , зависит от реализации типа `source` параметра.</span><span class="sxs-lookup"><span data-stu-id="a55f4-267">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Int64%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="a55f4-268">Ожидаемым поведением является вычисление среднего значения в `source`.</span><span class="sxs-lookup"><span data-stu-id="a55f4-268">The expected behavior is that it calculates the average of the values in `source`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a55f4-269">В следующем примере кода показано, как использовать <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Int32%7D%29> для вычисления среднего значения последовательности значений.</span><span class="sxs-lookup"><span data-stu-id="a55f4-269">The following code example demonstrates how to use <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Int32%7D%29> to calculate the average of a sequence of values.</span></span>  
  
 [!INCLUDE[sqo_diff_overload_example_elementtype](~/includes/sqo-diff-overload-example-elementtype-md.md)]  
  
 [!code-csharp[System.Linq.Queryable#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#8)]
 [!code-vb[System.Linq.Queryable#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a55f4-270">Свойство <paramref name="source" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-270"><paramref name="source" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a55f4-271">Последовательность <paramref name="source" /> не содержит элементов.</span><span class="sxs-lookup"><span data-stu-id="a55f4-271"><paramref name="source" /> contains no elements.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Average">
      <MemberSignature Language="C#" Value="public static Nullable&lt;decimal&gt; Average (this System.Linq.IQueryable&lt;Nullable&lt;decimal&gt;&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;valuetype System.Decimal&gt; Average(class System.Linq.IQueryable`1&lt;valuetype System.Nullable`1&lt;valuetype System.Decimal&gt;&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Average(System.Linq.IQueryable{System.Nullable{System.Decimal}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Average (source As IQueryable(Of Nullable(Of Decimal))) As Nullable(Of Decimal)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;System::Decimal&gt; Average(System::Linq::IQueryable&lt;Nullable&lt;System::Decimal&gt;&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Average : System.Linq.IQueryable&lt;Nullable&lt;decimal&gt;&gt; -&gt; Nullable&lt;decimal&gt;" Usage="System.Linq.Queryable.Average source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Decimal&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;System.Nullable&lt;System.Decimal&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="a55f4-272">Последовательность <see cref="T:System.Decimal" />, допускающая значение null, для вычисления среднего.</span><span class="sxs-lookup"><span data-stu-id="a55f4-272">A sequence of nullable <see cref="T:System.Decimal" /> values to calculate the average of.</span></span></param>
        <summary><span data-ttu-id="a55f4-273">Вычисляет среднее для последовательности значений <see cref="T:System.Decimal" /> обнуляемого типа.</span><span class="sxs-lookup"><span data-stu-id="a55f4-273">Computes the average of a sequence of nullable <see cref="T:System.Decimal" /> values.</span></span></summary>
        <returns><span data-ttu-id="a55f4-274">Среднее для последовательности значений или <see langword="null" />, если исходная последовательность пуста или содержит только значения <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-274">The average of the sequence of values, or <see langword="null" /> if the source sequence is empty or contains only <see langword="null" /> values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a55f4-275">Метод создает объект <xref:System.Linq.Expressions.MethodCallExpression> , который представляет вызов <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Decimal%7D%7D%29> самого себя. <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Decimal%7D%7D%29></span><span class="sxs-lookup"><span data-stu-id="a55f4-275">The <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Decimal%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Decimal%7D%7D%29> itself.</span></span> <span data-ttu-id="a55f4-276">Затем <xref:System.Linq.Expressions.MethodCallExpression> он передает <xref:System.Linq.IQueryProvider> методу класса, представленного `source`свойствомпараметра <xref:System.Linq.IQueryable.Provider%2A> <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> .</span><span class="sxs-lookup"><span data-stu-id="a55f4-276">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="a55f4-277">Поведение запроса, которое происходит в результате выполнения дерева выражения, представляющего вызов <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Decimal%7D%7D%29> , зависит от реализации типа `source` параметра.</span><span class="sxs-lookup"><span data-stu-id="a55f4-277">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Decimal%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="a55f4-278">Ожидаемым поведением является вычисление среднего значения в `source`.</span><span class="sxs-lookup"><span data-stu-id="a55f4-278">The expected behavior is that it calculates the average of the values in `source`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a55f4-279">В следующем примере кода показано, как использовать <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Int64%7D%7D%29> для вычисления среднего значения последовательности значений.</span><span class="sxs-lookup"><span data-stu-id="a55f4-279">The following code example demonstrates how to use <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Int64%7D%7D%29> to calculate the average of a sequence of values.</span></span>  
  
 [!INCLUDE[sqo_diff_overload_example_elementtype](~/includes/sqo-diff-overload-example-elementtype-md.md)]  
  
 [!code-csharp[System.Linq.Queryable#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#12)]
 [!code-vb[System.Linq.Queryable#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a55f4-280"><paramref name="source" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-280"><paramref name="source" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Average">
      <MemberSignature Language="C#" Value="public static Nullable&lt;double&gt; Average (this System.Linq.IQueryable&lt;Nullable&lt;double&gt;&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float64&gt; Average(class System.Linq.IQueryable`1&lt;valuetype System.Nullable`1&lt;float64&gt;&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Average(System.Linq.IQueryable{System.Nullable{System.Double}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Average (source As IQueryable(Of Nullable(Of Double))) As Nullable(Of Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;double&gt; Average(System::Linq::IQueryable&lt;Nullable&lt;double&gt;&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Average : System.Linq.IQueryable&lt;Nullable&lt;double&gt;&gt; -&gt; Nullable&lt;double&gt;" Usage="System.Linq.Queryable.Average source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;System.Nullable&lt;System.Double&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="a55f4-281">Последовательность <see cref="T:System.Double" />, допускающая значение null, для вычисления среднего.</span><span class="sxs-lookup"><span data-stu-id="a55f4-281">A sequence of nullable <see cref="T:System.Double" /> values to calculate the average of.</span></span></param>
        <summary><span data-ttu-id="a55f4-282">Вычисляет среднее для последовательности значений <see cref="T:System.Double" /> обнуляемого типа.</span><span class="sxs-lookup"><span data-stu-id="a55f4-282">Computes the average of a sequence of nullable <see cref="T:System.Double" /> values.</span></span></summary>
        <returns><span data-ttu-id="a55f4-283">Среднее для последовательности значений или <see langword="null" />, если исходная последовательность пуста или содержит только значения <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-283">The average of the sequence of values, or <see langword="null" /> if the source sequence is empty or contains only <see langword="null" /> values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a55f4-284">Метод создает объект <xref:System.Linq.Expressions.MethodCallExpression> , который представляет вызов <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Double%7D%7D%29> самого себя. <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Double%7D%7D%29></span><span class="sxs-lookup"><span data-stu-id="a55f4-284">The <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Double%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Double%7D%7D%29> itself.</span></span> <span data-ttu-id="a55f4-285">Затем <xref:System.Linq.Expressions.MethodCallExpression> он передает <xref:System.Linq.IQueryProvider> методу класса, представленного `source`свойствомпараметра <xref:System.Linq.IQueryable.Provider%2A> <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> .</span><span class="sxs-lookup"><span data-stu-id="a55f4-285">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="a55f4-286">Поведение запроса, которое происходит в результате выполнения дерева выражения, представляющего вызов <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Double%7D%7D%29> , зависит от реализации типа `source` параметра.</span><span class="sxs-lookup"><span data-stu-id="a55f4-286">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Double%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="a55f4-287">Ожидаемым поведением является вычисление среднего значения в `source`.</span><span class="sxs-lookup"><span data-stu-id="a55f4-287">The expected behavior is that it calculates the average of the values in `source`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a55f4-288">В следующем примере кода показано, как использовать <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Int64%7D%7D%29> для вычисления среднего значения последовательности значений.</span><span class="sxs-lookup"><span data-stu-id="a55f4-288">The following code example demonstrates how to use <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Int64%7D%7D%29> to calculate the average of a sequence of values.</span></span>  
  
 [!INCLUDE[sqo_diff_overload_example_elementtype](~/includes/sqo-diff-overload-example-elementtype-md.md)]  
  
 [!code-csharp[System.Linq.Queryable#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#12)]
 [!code-vb[System.Linq.Queryable#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a55f4-289"><paramref name="source" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-289"><paramref name="source" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Average">
      <MemberSignature Language="C#" Value="public static Nullable&lt;double&gt; Average (this System.Linq.IQueryable&lt;Nullable&lt;int&gt;&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float64&gt; Average(class System.Linq.IQueryable`1&lt;valuetype System.Nullable`1&lt;int32&gt;&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Average(System.Linq.IQueryable{System.Nullable{System.Int32}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Average (source As IQueryable(Of Nullable(Of Integer))) As Nullable(Of Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;double&gt; Average(System::Linq::IQueryable&lt;Nullable&lt;int&gt;&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Average : System.Linq.IQueryable&lt;Nullable&lt;int&gt;&gt; -&gt; Nullable&lt;double&gt;" Usage="System.Linq.Queryable.Average source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;System.Nullable&lt;System.Int32&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="a55f4-290">Последовательность <see cref="T:System.Int32" />, допускающая значение null, для вычисления среднего.</span><span class="sxs-lookup"><span data-stu-id="a55f4-290">A sequence of nullable <see cref="T:System.Int32" /> values to calculate the average of.</span></span></param>
        <summary><span data-ttu-id="a55f4-291">Вычисляет среднее для последовательности значений <see cref="T:System.Int32" /> обнуляемого типа.</span><span class="sxs-lookup"><span data-stu-id="a55f4-291">Computes the average of a sequence of nullable <see cref="T:System.Int32" /> values.</span></span></summary>
        <returns><span data-ttu-id="a55f4-292">Среднее для последовательности значений или <see langword="null" />, если исходная последовательность пуста или содержит только значения <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-292">The average of the sequence of values, or <see langword="null" /> if the source sequence is empty or contains only <see langword="null" /> values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a55f4-293">Метод создает объект <xref:System.Linq.Expressions.MethodCallExpression> , который представляет вызов <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Int32%7D%7D%29> самого себя. <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Int32%7D%7D%29></span><span class="sxs-lookup"><span data-stu-id="a55f4-293">The <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Int32%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Int32%7D%7D%29> itself.</span></span> <span data-ttu-id="a55f4-294">Затем <xref:System.Linq.Expressions.MethodCallExpression> он передает <xref:System.Linq.IQueryProvider> методу класса, представленного `source`свойствомпараметра <xref:System.Linq.IQueryable.Provider%2A> <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> .</span><span class="sxs-lookup"><span data-stu-id="a55f4-294">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="a55f4-295">Поведение запроса, которое происходит в результате выполнения дерева выражения, представляющего вызов <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Int32%7D%7D%29> , зависит от реализации типа `source` параметра.</span><span class="sxs-lookup"><span data-stu-id="a55f4-295">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Int32%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="a55f4-296">Ожидаемым поведением является вычисление среднего значения в `source`.</span><span class="sxs-lookup"><span data-stu-id="a55f4-296">The expected behavior is that it calculates the average of the values in `source`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a55f4-297">В следующем примере кода показано, как использовать <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Int64%7D%7D%29> для вычисления среднего значения последовательности значений.</span><span class="sxs-lookup"><span data-stu-id="a55f4-297">The following code example demonstrates how to use <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Int64%7D%7D%29> to calculate the average of a sequence of values.</span></span>  
  
 [!INCLUDE[sqo_diff_overload_example_elementtype](~/includes/sqo-diff-overload-example-elementtype-md.md)]  
  
 [!code-csharp[System.Linq.Queryable#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#12)]
 [!code-vb[System.Linq.Queryable#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a55f4-298">Свойство <paramref name="source" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-298"><paramref name="source" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Average">
      <MemberSignature Language="C#" Value="public static Nullable&lt;double&gt; Average (this System.Linq.IQueryable&lt;Nullable&lt;long&gt;&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float64&gt; Average(class System.Linq.IQueryable`1&lt;valuetype System.Nullable`1&lt;int64&gt;&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Average(System.Linq.IQueryable{System.Nullable{System.Int64}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Average (source As IQueryable(Of Nullable(Of Long))) As Nullable(Of Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;double&gt; Average(System::Linq::IQueryable&lt;Nullable&lt;long&gt;&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Average : System.Linq.IQueryable&lt;Nullable&lt;int64&gt;&gt; -&gt; Nullable&lt;double&gt;" Usage="System.Linq.Queryable.Average source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;System.Nullable&lt;System.Int64&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="a55f4-299">Последовательность <see cref="T:System.Int64" />, допускающая значение null, для вычисления среднего.</span><span class="sxs-lookup"><span data-stu-id="a55f4-299">A sequence of nullable <see cref="T:System.Int64" /> values to calculate the average of.</span></span></param>
        <summary><span data-ttu-id="a55f4-300">Вычисляет среднее для последовательности значений <see cref="T:System.Int64" /> обнуляемого типа.</span><span class="sxs-lookup"><span data-stu-id="a55f4-300">Computes the average of a sequence of nullable <see cref="T:System.Int64" /> values.</span></span></summary>
        <returns><span data-ttu-id="a55f4-301">Среднее для последовательности значений или <see langword="null" />, если исходная последовательность пуста или содержит только значения <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-301">The average of the sequence of values, or <see langword="null" /> if the source sequence is empty or contains only <see langword="null" /> values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a55f4-302">Метод создает объект <xref:System.Linq.Expressions.MethodCallExpression> , который представляет вызов <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Int64%7D%7D%29> самого себя. <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Int64%7D%7D%29></span><span class="sxs-lookup"><span data-stu-id="a55f4-302">The <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Int64%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Int64%7D%7D%29> itself.</span></span> <span data-ttu-id="a55f4-303">Затем <xref:System.Linq.Expressions.MethodCallExpression> он передает <xref:System.Linq.IQueryProvider> методу класса, представленного `source`свойствомпараметра <xref:System.Linq.IQueryable.Provider%2A> <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> .</span><span class="sxs-lookup"><span data-stu-id="a55f4-303">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="a55f4-304">Поведение запроса, которое происходит в результате выполнения дерева выражения, представляющего вызов <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Int64%7D%7D%29> , зависит от реализации типа `source` параметра.</span><span class="sxs-lookup"><span data-stu-id="a55f4-304">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Int64%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="a55f4-305">Ожидаемым поведением является вычисление среднего значения в `source`.</span><span class="sxs-lookup"><span data-stu-id="a55f4-305">The expected behavior is that it calculates the average of the values in `source`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a55f4-306">В следующем примере кода показано, как использовать <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Int64%7D%7D%29> для вычисления среднего значения последовательности значений.</span><span class="sxs-lookup"><span data-stu-id="a55f4-306">The following code example demonstrates how to use <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Int64%7D%7D%29> to calculate the average of a sequence of values.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#12)]
 [!code-vb[System.Linq.Queryable#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a55f4-307">Свойство <paramref name="source" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-307"><paramref name="source" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Average">
      <MemberSignature Language="C#" Value="public static Nullable&lt;float&gt; Average (this System.Linq.IQueryable&lt;Nullable&lt;float&gt;&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float32&gt; Average(class System.Linq.IQueryable`1&lt;valuetype System.Nullable`1&lt;float32&gt;&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Average(System.Linq.IQueryable{System.Nullable{System.Single}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Average (source As IQueryable(Of Nullable(Of Single))) As Nullable(Of Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;float&gt; Average(System::Linq::IQueryable&lt;Nullable&lt;float&gt;&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Average : System.Linq.IQueryable&lt;Nullable&lt;single&gt;&gt; -&gt; Nullable&lt;single&gt;" Usage="System.Linq.Queryable.Average source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;System.Nullable&lt;System.Single&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="a55f4-308">Последовательность <see cref="T:System.Single" />, допускающая значение null, для вычисления среднего.</span><span class="sxs-lookup"><span data-stu-id="a55f4-308">A sequence of nullable <see cref="T:System.Single" /> values to calculate the average of.</span></span></param>
        <summary><span data-ttu-id="a55f4-309">Вычисляет среднее для последовательности значений <see cref="T:System.Single" /> обнуляемого типа.</span><span class="sxs-lookup"><span data-stu-id="a55f4-309">Computes the average of a sequence of nullable <see cref="T:System.Single" /> values.</span></span></summary>
        <returns><span data-ttu-id="a55f4-310">Среднее для последовательности значений или <see langword="null" />, если исходная последовательность пуста или содержит только значения <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-310">The average of the sequence of values, or <see langword="null" /> if the source sequence is empty or contains only <see langword="null" /> values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a55f4-311">Метод создает объект <xref:System.Linq.Expressions.MethodCallExpression> , который представляет вызов <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Single%7D%7D%29> самого себя. <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Single%7D%7D%29></span><span class="sxs-lookup"><span data-stu-id="a55f4-311">The <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Single%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Single%7D%7D%29> itself.</span></span> <span data-ttu-id="a55f4-312">Затем <xref:System.Linq.Expressions.MethodCallExpression> он передает <xref:System.Linq.IQueryProvider> методу класса, представленного `source`свойствомпараметра <xref:System.Linq.IQueryable.Provider%2A> <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> .</span><span class="sxs-lookup"><span data-stu-id="a55f4-312">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="a55f4-313">Поведение запроса, которое происходит в результате выполнения дерева выражения, представляющего вызов <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Single%7D%7D%29> , зависит от реализации типа `source` параметра.</span><span class="sxs-lookup"><span data-stu-id="a55f4-313">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Single%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="a55f4-314">Ожидаемым поведением является вычисление среднего значения в `source`.</span><span class="sxs-lookup"><span data-stu-id="a55f4-314">The expected behavior is that it calculates the average of the values in `source`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a55f4-315">В следующем примере кода показано, как использовать <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Int64%7D%7D%29> для вычисления среднего значения последовательности значений.</span><span class="sxs-lookup"><span data-stu-id="a55f4-315">The following code example demonstrates how to use <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Int64%7D%7D%29> to calculate the average of a sequence of values.</span></span>  
  
 [!INCLUDE[sqo_diff_overload_example_elementtype](~/includes/sqo-diff-overload-example-elementtype-md.md)]  
  
 [!code-csharp[System.Linq.Queryable#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#12)]
 [!code-vb[System.Linq.Queryable#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a55f4-316">Свойство <paramref name="source" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-316"><paramref name="source" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Average">
      <MemberSignature Language="C#" Value="public static float Average (this System.Linq.IQueryable&lt;float&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Average(class System.Linq.IQueryable`1&lt;float32&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Average(System.Linq.IQueryable{System.Single})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Average (source As IQueryable(Of Single)) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static float Average(System::Linq::IQueryable&lt;float&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Average : System.Linq.IQueryable&lt;single&gt; -&gt; single" Usage="System.Linq.Queryable.Average source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;System.Single&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="a55f4-317">Последовательность значений <see cref="T:System.Single" />, для которых вычисляется среднее.</span><span class="sxs-lookup"><span data-stu-id="a55f4-317">A sequence of <see cref="T:System.Single" /> values to calculate the average of.</span></span></param>
        <summary><span data-ttu-id="a55f4-318">Вычисляет среднее последовательности значений типа <see cref="T:System.Single" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-318">Computes the average of a sequence of <see cref="T:System.Single" /> values.</span></span></summary>
        <returns><span data-ttu-id="a55f4-319">Среднее для последовательности значений.</span><span class="sxs-lookup"><span data-stu-id="a55f4-319">The average of the sequence of values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a55f4-320">Метод создает объект <xref:System.Linq.Expressions.MethodCallExpression> , который представляет вызов <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Single%7D%29> самого себя. <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Single%7D%29></span><span class="sxs-lookup"><span data-stu-id="a55f4-320">The <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Single%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Single%7D%29> itself.</span></span> <span data-ttu-id="a55f4-321">Затем <xref:System.Linq.Expressions.MethodCallExpression> он передает <xref:System.Linq.IQueryProvider> методу класса, представленного `source`свойствомпараметра <xref:System.Linq.IQueryable.Provider%2A> <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> .</span><span class="sxs-lookup"><span data-stu-id="a55f4-321">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="a55f4-322">Поведение запроса, которое происходит в результате выполнения дерева выражения, представляющего вызов <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Single%7D%29> , зависит от реализации типа `source` параметра.</span><span class="sxs-lookup"><span data-stu-id="a55f4-322">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Single%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="a55f4-323">Ожидаемым поведением является вычисление среднего значения в `source`.</span><span class="sxs-lookup"><span data-stu-id="a55f4-323">The expected behavior is that it calculates the average of the values in `source`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a55f4-324">В следующем примере кода показано, как использовать <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Int32%7D%29> для вычисления среднего значения последовательности значений.</span><span class="sxs-lookup"><span data-stu-id="a55f4-324">The following code example demonstrates how to use <xref:System.Linq.Queryable.Average%28System.Linq.IQueryable%7BSystem.Int32%7D%29> to calculate the average of a sequence of values.</span></span>  
  
 [!INCLUDE[sqo_diff_overload_example_elementtype](~/includes/sqo-diff-overload-example-elementtype-md.md)]  
  
 [!code-csharp[System.Linq.Queryable#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#8)]
 [!code-vb[System.Linq.Queryable#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a55f4-325">Свойство <paramref name="source" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-325"><paramref name="source" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a55f4-326">Последовательность <paramref name="source" /> не содержит элементов.</span><span class="sxs-lookup"><span data-stu-id="a55f4-326"><paramref name="source" /> contains no elements.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Average&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static decimal Average&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,decimal&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Average&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, valuetype System.Decimal&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Decimal}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Average(Of TSource) (source As IQueryable(Of TSource), selector As Expression(Of Func(Of TSource, Decimal))) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Decimal Average(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, System::Decimal&gt; ^&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Average : System.Linq.IQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, decimal&gt;&gt; -&gt; decimal" Usage="System.Linq.Queryable.Average (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,System.Decimal&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="a55f4-327">Тип элементов <paramref name="source" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-327">The type of the elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="a55f4-328">Последовательность значений, используемых для вычисления среднего.</span><span class="sxs-lookup"><span data-stu-id="a55f4-328">A sequence of values that are used to calculate an average.</span></span></param>
        <param name="selector"><span data-ttu-id="a55f4-329">Функция проекции, применяемая к каждому элементу.</span><span class="sxs-lookup"><span data-stu-id="a55f4-329">A projection function to apply to each element.</span></span></param>
        <summary><span data-ttu-id="a55f4-330">Вычисляет среднее для последовательности значений типа <see cref="T:System.Decimal" />, получаемой в результате применения функции проекции к каждому элементу входной последовательности.</span><span class="sxs-lookup"><span data-stu-id="a55f4-330">Computes the average of a sequence of <see cref="T:System.Decimal" /> values that is obtained by invoking a projection function on each element of the input sequence.</span></span></summary>
        <returns><span data-ttu-id="a55f4-331">Среднее для последовательности значений.</span><span class="sxs-lookup"><span data-stu-id="a55f4-331">The average of the sequence of values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a55f4-332">Этот метод имеет по крайней мере один параметр <xref:System.Linq.Expressions.Expression%601> типа, аргумент типа которого является одним <xref:System.Func%602> из типов.</span><span class="sxs-lookup"><span data-stu-id="a55f4-332">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="a55f4-333">Для этих параметров можно передать лямбда-выражение, которое будет скомпилировано в <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="a55f4-333">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="a55f4-334">Метод создает объект <xref:System.Linq.Expressions.MethodCallExpression> , который представляет вызов <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Decimal%7D%7D%29> самого себя как сконструированного универсального метода. <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Decimal%7D%7D%29></span><span class="sxs-lookup"><span data-stu-id="a55f4-334">The <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Decimal%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Decimal%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="a55f4-335">Затем <xref:System.Linq.Expressions.MethodCallExpression> он передает <xref:System.Linq.IQueryProvider> методу класса, представленного `source`свойствомпараметра <xref:System.Linq.IQueryable.Provider%2A> <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> .</span><span class="sxs-lookup"><span data-stu-id="a55f4-335">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="a55f4-336">Поведение запроса, которое происходит в результате выполнения дерева выражения, представляющего вызов <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Decimal%7D%7D%29> , зависит от реализации типа `source` параметра.</span><span class="sxs-lookup"><span data-stu-id="a55f4-336">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Decimal%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="a55f4-337">Ожидаемым поведением является вычисление среднего значения значений в `source` после `selector` вызова для каждого значения.</span><span class="sxs-lookup"><span data-stu-id="a55f4-337">The expected behavior is that it calculates the average of the values in `source` after invoking `selector` on each value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a55f4-338">В следующем примере кода показано, как использовать <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%7D%7D%29> для вычисления средней <xref:System.String> длины в последовательности значений типа <xref:System.String>.</span><span class="sxs-lookup"><span data-stu-id="a55f4-338">The following code example demonstrates how to use <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%7D%7D%29> to calculate the average <xref:System.String> length in a sequence of values of type <xref:System.String>.</span></span>  
  
 [!INCLUDE[sqo_diff_overload_example_func](~/includes/sqo-diff-overload-example-func-md.md)]  
  
 [!code-csharp[System.Linq.Queryable#18](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#18)]
 [!code-vb[System.Linq.Queryable#18](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#18)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a55f4-339">Значение параметра <paramref name="source" /> или <paramref name="selector" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-339"><paramref name="source" /> or <paramref name="selector" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a55f4-340">Последовательность <paramref name="source" /> не содержит элементов.</span><span class="sxs-lookup"><span data-stu-id="a55f4-340"><paramref name="source" /> contains no elements.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Average&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static double Average&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,double&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Average&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, float64&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Double}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Average(Of TSource) (source As IQueryable(Of TSource), selector As Expression(Of Func(Of TSource, Double))) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static double Average(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, double&gt; ^&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Average : System.Linq.IQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, double&gt;&gt; -&gt; double" Usage="System.Linq.Queryable.Average (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,System.Double&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="a55f4-341">Тип элементов <paramref name="source" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-341">The type of the elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="a55f4-342">Последовательность значений, для которых вычисляется среднее.</span><span class="sxs-lookup"><span data-stu-id="a55f4-342">A sequence of values to calculate the average of.</span></span></param>
        <param name="selector"><span data-ttu-id="a55f4-343">Функция проекции, применяемая к каждому элементу.</span><span class="sxs-lookup"><span data-stu-id="a55f4-343">A projection function to apply to each element.</span></span></param>
        <summary><span data-ttu-id="a55f4-344">Вычисляет среднее для последовательности значений типа <see cref="T:System.Double" />, получаемой в результате применения функции проекции к каждому элементу входной последовательности.</span><span class="sxs-lookup"><span data-stu-id="a55f4-344">Computes the average of a sequence of <see cref="T:System.Double" /> values that is obtained by invoking a projection function on each element of the input sequence.</span></span></summary>
        <returns><span data-ttu-id="a55f4-345">Среднее для последовательности значений.</span><span class="sxs-lookup"><span data-stu-id="a55f4-345">The average of the sequence of values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a55f4-346">Этот метод имеет по крайней мере один параметр <xref:System.Linq.Expressions.Expression%601> типа, аргумент типа которого является одним <xref:System.Func%602> из типов.</span><span class="sxs-lookup"><span data-stu-id="a55f4-346">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="a55f4-347">Для этих параметров можно передать лямбда-выражение, которое будет скомпилировано в <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="a55f4-347">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="a55f4-348">Метод создает объект <xref:System.Linq.Expressions.MethodCallExpression> , который представляет вызов <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Double%7D%7D%29> самого себя как сконструированного универсального метода. <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Double%7D%7D%29></span><span class="sxs-lookup"><span data-stu-id="a55f4-348">The <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Double%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Double%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="a55f4-349">Затем <xref:System.Linq.Expressions.MethodCallExpression> он передает <xref:System.Linq.IQueryProvider> методу класса, представленного `source`свойствомпараметра <xref:System.Linq.IQueryable.Provider%2A> <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> .</span><span class="sxs-lookup"><span data-stu-id="a55f4-349">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="a55f4-350">Поведение запроса, которое происходит в результате выполнения дерева выражения, представляющего вызов <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Double%7D%7D%29> , зависит от реализации типа `source` параметра.</span><span class="sxs-lookup"><span data-stu-id="a55f4-350">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Double%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="a55f4-351">Ожидаемым поведением является вычисление среднего значения значений в `source` после `selector` вызова для каждого значения.</span><span class="sxs-lookup"><span data-stu-id="a55f4-351">The expected behavior is that it calculates the average of the values in `source` after invoking `selector` on each value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a55f4-352">В следующем примере кода показано, как использовать <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%7D%7D%29> для вычисления средней <xref:System.String> длины в последовательности значений типа <xref:System.String>.</span><span class="sxs-lookup"><span data-stu-id="a55f4-352">The following code example demonstrates how to use <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%7D%7D%29> to calculate the average <xref:System.String> length in a sequence of values of type <xref:System.String>.</span></span>  
  
 [!INCLUDE[sqo_diff_overload_example_func](~/includes/sqo-diff-overload-example-func-md.md)]  
  
 [!code-csharp[System.Linq.Queryable#18](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#18)]
 [!code-vb[System.Linq.Queryable#18](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#18)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a55f4-353">Значение параметра <paramref name="source" /> или <paramref name="selector" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-353"><paramref name="source" /> or <paramref name="selector" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a55f4-354">Последовательность <paramref name="source" /> не содержит элементов.</span><span class="sxs-lookup"><span data-stu-id="a55f4-354"><paramref name="source" /> contains no elements.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Average&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static double Average&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,int&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Average&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, int32&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Average(Of TSource) (source As IQueryable(Of TSource), selector As Expression(Of Func(Of TSource, Integer))) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static double Average(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, int&gt; ^&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Average : System.Linq.IQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, int&gt;&gt; -&gt; double" Usage="System.Linq.Queryable.Average (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,System.Int32&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="a55f4-355">Тип элементов <paramref name="source" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-355">The type of the elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="a55f4-356">Последовательность значений, для которых вычисляется среднее.</span><span class="sxs-lookup"><span data-stu-id="a55f4-356">A sequence of values to calculate the average of.</span></span></param>
        <param name="selector"><span data-ttu-id="a55f4-357">Функция проекции, применяемая к каждому элементу.</span><span class="sxs-lookup"><span data-stu-id="a55f4-357">A projection function to apply to each element.</span></span></param>
        <summary><span data-ttu-id="a55f4-358">Вычисляет среднее для последовательности значений типа <see cref="T:System.Int32" />, получаемой в результате применения функции проекции к каждому элементу входной последовательности.</span><span class="sxs-lookup"><span data-stu-id="a55f4-358">Computes the average of a sequence of <see cref="T:System.Int32" /> values that is obtained by invoking a projection function on each element of the input sequence.</span></span></summary>
        <returns><span data-ttu-id="a55f4-359">Среднее для последовательности значений.</span><span class="sxs-lookup"><span data-stu-id="a55f4-359">The average of the sequence of values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a55f4-360">Этот метод имеет по крайней мере один параметр <xref:System.Linq.Expressions.Expression%601> типа, аргумент типа которого является одним <xref:System.Func%602> из типов.</span><span class="sxs-lookup"><span data-stu-id="a55f4-360">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="a55f4-361">Для этих параметров можно передать лямбда-выражение, которое будет скомпилировано в <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="a55f4-361">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="a55f4-362">Метод создает объект <xref:System.Linq.Expressions.MethodCallExpression> , который представляет вызов <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%7D%7D%29> самого себя как сконструированного универсального метода. <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%7D%7D%29></span><span class="sxs-lookup"><span data-stu-id="a55f4-362">The <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="a55f4-363">Затем <xref:System.Linq.Expressions.MethodCallExpression> он передает <xref:System.Linq.IQueryProvider> методу класса, представленного `source`свойствомпараметра <xref:System.Linq.IQueryable.Provider%2A> <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> .</span><span class="sxs-lookup"><span data-stu-id="a55f4-363">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="a55f4-364">Поведение запроса, которое происходит в результате выполнения дерева выражения, представляющего вызов <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%7D%7D%29> , зависит от реализации типа `source` параметра.</span><span class="sxs-lookup"><span data-stu-id="a55f4-364">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="a55f4-365">Ожидаемым поведением является вычисление среднего значения значений в `source` после `selector` вызова для каждого значения.</span><span class="sxs-lookup"><span data-stu-id="a55f4-365">The expected behavior is that it calculates the average of the values in `source` after invoking `selector` on each value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a55f4-366">В следующем примере кода показано, как использовать <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%7D%7D%29> для вычисления средней <xref:System.String> длины в последовательности значений типа <xref:System.String>.</span><span class="sxs-lookup"><span data-stu-id="a55f4-366">The following code example demonstrates how to use <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%7D%7D%29> to calculate the average <xref:System.String> length in a sequence of values of type <xref:System.String>.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#18](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#18)]
 [!code-vb[System.Linq.Queryable#18](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#18)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a55f4-367">Параметр <paramref name="source" /> или <paramref name="selector" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-367"><paramref name="source" /> or <paramref name="selector" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a55f4-368">Последовательность <paramref name="source" /> не содержит элементов.</span><span class="sxs-lookup"><span data-stu-id="a55f4-368"><paramref name="source" /> contains no elements.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Average&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static double Average&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,long&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Average&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, int64&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int64}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Average(Of TSource) (source As IQueryable(Of TSource), selector As Expression(Of Func(Of TSource, Long))) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static double Average(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, long&gt; ^&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Average : System.Linq.IQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, int64&gt;&gt; -&gt; double" Usage="System.Linq.Queryable.Average (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,System.Int64&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="a55f4-369">Тип элементов <paramref name="source" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-369">The type of the elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="a55f4-370">Последовательность значений, для которых вычисляется среднее.</span><span class="sxs-lookup"><span data-stu-id="a55f4-370">A sequence of values to calculate the average of.</span></span></param>
        <param name="selector"><span data-ttu-id="a55f4-371">Функция проекции, применяемая к каждому элементу.</span><span class="sxs-lookup"><span data-stu-id="a55f4-371">A projection function to apply to each element.</span></span></param>
        <summary><span data-ttu-id="a55f4-372">Вычисляет среднее для последовательности значений типа <see cref="T:System.Int64" />, получаемой в результате применения функции проекции к каждому элементу входной последовательности.</span><span class="sxs-lookup"><span data-stu-id="a55f4-372">Computes the average of a sequence of <see cref="T:System.Int64" /> values that is obtained by invoking a projection function on each element of the input sequence.</span></span></summary>
        <returns><span data-ttu-id="a55f4-373">Среднее для последовательности значений.</span><span class="sxs-lookup"><span data-stu-id="a55f4-373">The average of the sequence of values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a55f4-374">Этот метод имеет по крайней мере один параметр <xref:System.Linq.Expressions.Expression%601> типа, аргумент типа которого является одним <xref:System.Func%602> из типов.</span><span class="sxs-lookup"><span data-stu-id="a55f4-374">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="a55f4-375">Для этих параметров можно передать лямбда-выражение, которое будет скомпилировано в <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="a55f4-375">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="a55f4-376">Метод создает объект <xref:System.Linq.Expressions.MethodCallExpression> , который представляет вызов <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int64%7D%7D%29> самого себя как сконструированного универсального метода. <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int64%7D%7D%29></span><span class="sxs-lookup"><span data-stu-id="a55f4-376">The <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int64%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int64%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="a55f4-377">Затем <xref:System.Linq.Expressions.MethodCallExpression> он передает <xref:System.Linq.IQueryProvider> методу класса, представленного `source`свойствомпараметра <xref:System.Linq.IQueryable.Provider%2A> <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> .</span><span class="sxs-lookup"><span data-stu-id="a55f4-377">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="a55f4-378">Поведение запроса, которое происходит в результате выполнения дерева выражения, представляющего вызов <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int64%7D%7D%29> , зависит от реализации типа `source` параметра.</span><span class="sxs-lookup"><span data-stu-id="a55f4-378">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int64%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="a55f4-379">Ожидаемым поведением является вычисление среднего значения значений в `source` после `selector` вызова для каждого значения.</span><span class="sxs-lookup"><span data-stu-id="a55f4-379">The expected behavior is that it calculates the average of the values in `source` after invoking `selector` on each value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a55f4-380">В следующем примере кода показано, как использовать <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%7D%7D%29> для вычисления средней <xref:System.String> длины в последовательности значений типа <xref:System.String>.</span><span class="sxs-lookup"><span data-stu-id="a55f4-380">The following code example demonstrates how to use <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%7D%7D%29> to calculate the average <xref:System.String> length in a sequence of values of type <xref:System.String>.</span></span>  
  
 [!INCLUDE[sqo_diff_overload_example_func](~/includes/sqo-diff-overload-example-func-md.md)]  
  
 [!code-csharp[System.Linq.Queryable#18](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#18)]
 [!code-vb[System.Linq.Queryable#18](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#18)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a55f4-381">Значение параметра <paramref name="source" /> или <paramref name="selector" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-381"><paramref name="source" /> or <paramref name="selector" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a55f4-382">Последовательность <paramref name="source" /> не содержит элементов.</span><span class="sxs-lookup"><span data-stu-id="a55f4-382"><paramref name="source" /> contains no elements.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Average&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static Nullable&lt;decimal&gt; Average&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,Nullable&lt;decimal&gt;&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;valuetype System.Decimal&gt; Average&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, valuetype System.Nullable`1&lt;valuetype System.Decimal&gt;&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Decimal}}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Average(Of TSource) (source As IQueryable(Of TSource), selector As Expression(Of Func(Of TSource, Nullable(Of Decimal)))) As Nullable(Of Decimal)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;System::Decimal&gt; Average(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, Nullable&lt;System::Decimal&gt;&gt; ^&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Average : System.Linq.IQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, Nullable&lt;decimal&gt;&gt;&gt; -&gt; Nullable&lt;decimal&gt;" Usage="System.Linq.Queryable.Average (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Decimal&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,System.Nullable&lt;System.Decimal&gt;&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="a55f4-383">Тип элементов <paramref name="source" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-383">The type of the elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="a55f4-384">Последовательность значений, для которых вычисляется среднее.</span><span class="sxs-lookup"><span data-stu-id="a55f4-384">A sequence of values to calculate the average of.</span></span></param>
        <param name="selector"><span data-ttu-id="a55f4-385">Функция проекции, применяемая к каждому элементу.</span><span class="sxs-lookup"><span data-stu-id="a55f4-385">A projection function to apply to each element.</span></span></param>
        <summary><span data-ttu-id="a55f4-386">Вычисляет среднее для последовательности значений <see cref="T:System.Decimal" /> обнуляемого типа, которая получается в результате применения функции проекции к каждому элементу входной последовательности.</span><span class="sxs-lookup"><span data-stu-id="a55f4-386">Computes the average of a sequence of nullable <see cref="T:System.Decimal" /> values that is obtained by invoking a projection function on each element of the input sequence.</span></span></summary>
        <returns><span data-ttu-id="a55f4-387">Среднее арифметическое значений последовательности, или <see langword="null" />, если последовательность <paramref name="source" /> пуста либо содержит только значения <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-387">The average of the sequence of values, or <see langword="null" /> if the <paramref name="source" /> sequence is empty or contains only <see langword="null" /> values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a55f4-388">Этот метод имеет по крайней мере один параметр <xref:System.Linq.Expressions.Expression%601> типа, аргумент типа которого является одним <xref:System.Func%602> из типов.</span><span class="sxs-lookup"><span data-stu-id="a55f4-388">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="a55f4-389">Для этих параметров можно передать лямбда-выражение, которое будет скомпилировано в <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="a55f4-389">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="a55f4-390">Метод создает объект <xref:System.Linq.Expressions.MethodCallExpression> , который представляет вызов <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Decimal%7D%7D%7D%29> самого себя как сконструированного универсального метода. <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Decimal%7D%7D%7D%29></span><span class="sxs-lookup"><span data-stu-id="a55f4-390">The <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Decimal%7D%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Decimal%7D%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="a55f4-391">Затем <xref:System.Linq.Expressions.MethodCallExpression> он передает <xref:System.Linq.IQueryProvider> методу класса, представленного `source`свойствомпараметра <xref:System.Linq.IQueryable.Provider%2A> <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> .</span><span class="sxs-lookup"><span data-stu-id="a55f4-391">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="a55f4-392">Поведение запроса, которое происходит в результате выполнения дерева выражения, представляющего вызов <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Decimal%7D%7D%7D%29> , зависит от реализации типа `source` параметра.</span><span class="sxs-lookup"><span data-stu-id="a55f4-392">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Decimal%7D%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="a55f4-393">Ожидаемым поведением является вычисление среднего значения значений в `source` после `selector` вызова для каждого значения.</span><span class="sxs-lookup"><span data-stu-id="a55f4-393">The expected behavior is that it calculates the average of the values in `source` after invoking `selector` on each value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a55f4-394">В следующем примере кода показано, как использовать <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%7D%7D%29> для вычисления средней <xref:System.String> длины в последовательности значений типа <xref:System.String>.</span><span class="sxs-lookup"><span data-stu-id="a55f4-394">The following code example demonstrates how to use <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%7D%7D%29> to calculate the average <xref:System.String> length in a sequence of values of type <xref:System.String>.</span></span>  
  
 [!INCLUDE[sqo_diff_overload_example_func](~/includes/sqo-diff-overload-example-func-md.md)]  
  
 [!code-csharp[System.Linq.Queryable#18](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#18)]
 [!code-vb[System.Linq.Queryable#18](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#18)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a55f4-395">Значение параметра <paramref name="source" /> или <paramref name="selector" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-395"><paramref name="source" /> or <paramref name="selector" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Average&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static Nullable&lt;double&gt; Average&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,Nullable&lt;double&gt;&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float64&gt; Average&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, valuetype System.Nullable`1&lt;float64&gt;&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Double}}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Average(Of TSource) (source As IQueryable(Of TSource), selector As Expression(Of Func(Of TSource, Nullable(Of Double)))) As Nullable(Of Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;double&gt; Average(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, Nullable&lt;double&gt;&gt; ^&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Average : System.Linq.IQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, Nullable&lt;double&gt;&gt;&gt; -&gt; Nullable&lt;double&gt;" Usage="System.Linq.Queryable.Average (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,System.Nullable&lt;System.Double&gt;&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="a55f4-396">Тип элементов <paramref name="source" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-396">The type of the elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="a55f4-397">Последовательность значений, для которых вычисляется среднее.</span><span class="sxs-lookup"><span data-stu-id="a55f4-397">A sequence of values to calculate the average of.</span></span></param>
        <param name="selector"><span data-ttu-id="a55f4-398">Функция проекции, применяемая к каждому элементу.</span><span class="sxs-lookup"><span data-stu-id="a55f4-398">A projection function to apply to each element.</span></span></param>
        <summary><span data-ttu-id="a55f4-399">Вычисляет среднее для последовательности значений <see cref="T:System.Double" /> обнуляемого типа, которая получается в результате применения функции проекции к каждому элементу входной последовательности.</span><span class="sxs-lookup"><span data-stu-id="a55f4-399">Computes the average of a sequence of nullable <see cref="T:System.Double" /> values that is obtained by invoking a projection function on each element of the input sequence.</span></span></summary>
        <returns><span data-ttu-id="a55f4-400">Среднее арифметическое значений последовательности, или <see langword="null" />, если последовательность <paramref name="source" /> пуста либо содержит только значения <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-400">The average of the sequence of values, or <see langword="null" /> if the <paramref name="source" /> sequence is empty or contains only <see langword="null" /> values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a55f4-401">Этот метод имеет по крайней мере один параметр <xref:System.Linq.Expressions.Expression%601> типа, аргумент типа которого является одним <xref:System.Func%602> из типов.</span><span class="sxs-lookup"><span data-stu-id="a55f4-401">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="a55f4-402">Для этих параметров можно передать лямбда-выражение, которое будет скомпилировано в <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="a55f4-402">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="a55f4-403">Метод создает объект <xref:System.Linq.Expressions.MethodCallExpression> , который представляет вызов <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Double%7D%7D%7D%29> самого себя как сконструированного универсального метода. <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Double%7D%7D%7D%29></span><span class="sxs-lookup"><span data-stu-id="a55f4-403">The <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Double%7D%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Double%7D%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="a55f4-404">Затем <xref:System.Linq.Expressions.MethodCallExpression> он передает <xref:System.Linq.IQueryProvider> методу класса, представленного `source`свойствомпараметра <xref:System.Linq.IQueryable.Provider%2A> <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> .</span><span class="sxs-lookup"><span data-stu-id="a55f4-404">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="a55f4-405">Поведение запроса, которое происходит в результате выполнения дерева выражения, представляющего вызов <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Double%7D%7D%7D%29> , зависит от реализации типа `source` параметра.</span><span class="sxs-lookup"><span data-stu-id="a55f4-405">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Double%7D%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="a55f4-406">Ожидаемым поведением является вычисление среднего значения значений в `source` после `selector` вызова для каждого значения.</span><span class="sxs-lookup"><span data-stu-id="a55f4-406">The expected behavior is that it calculates the average of the values in `source` after invoking `selector` on each value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a55f4-407">В следующем примере кода показано, как использовать <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%7D%7D%29> для вычисления средней <xref:System.String> длины в последовательности значений типа <xref:System.String>.</span><span class="sxs-lookup"><span data-stu-id="a55f4-407">The following code example demonstrates how to use <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%7D%7D%29> to calculate the average <xref:System.String> length in a sequence of values of type <xref:System.String>.</span></span>  
  
 [!INCLUDE[sqo_diff_overload_example_func](~/includes/sqo-diff-overload-example-func-md.md)]  
  
 [!code-csharp[System.Linq.Queryable#18](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#18)]
 [!code-vb[System.Linq.Queryable#18](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#18)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a55f4-408">Параметр <paramref name="source" /> или <paramref name="selector" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-408"><paramref name="source" /> or <paramref name="selector" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Average&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static Nullable&lt;double&gt; Average&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,Nullable&lt;int&gt;&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float64&gt; Average&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, valuetype System.Nullable`1&lt;int32&gt;&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int32}}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Average(Of TSource) (source As IQueryable(Of TSource), selector As Expression(Of Func(Of TSource, Nullable(Of Integer)))) As Nullable(Of Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;double&gt; Average(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, Nullable&lt;int&gt;&gt; ^&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Average : System.Linq.IQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, Nullable&lt;int&gt;&gt;&gt; -&gt; Nullable&lt;double&gt;" Usage="System.Linq.Queryable.Average (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,System.Nullable&lt;System.Int32&gt;&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="a55f4-409">Тип элементов <paramref name="source" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-409">The type of the elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="a55f4-410">Последовательность значений, для которых вычисляется среднее.</span><span class="sxs-lookup"><span data-stu-id="a55f4-410">A sequence of values to calculate the average of.</span></span></param>
        <param name="selector"><span data-ttu-id="a55f4-411">Функция проекции, применяемая к каждому элементу.</span><span class="sxs-lookup"><span data-stu-id="a55f4-411">A projection function to apply to each element.</span></span></param>
        <summary><span data-ttu-id="a55f4-412">Вычисляет среднее для последовательности значений <see cref="T:System.Int32" /> обнуляемого типа, которая получается в результате применения функции проекции к каждому элементу входной последовательности.</span><span class="sxs-lookup"><span data-stu-id="a55f4-412">Computes the average of a sequence of nullable <see cref="T:System.Int32" /> values that is obtained by invoking a projection function on each element of the input sequence.</span></span></summary>
        <returns><span data-ttu-id="a55f4-413">Среднее арифметическое значений последовательности, или <see langword="null" />, если последовательность <paramref name="source" /> пуста либо содержит только значения <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-413">The average of the sequence of values, or <see langword="null" /> if the <paramref name="source" /> sequence is empty or contains only <see langword="null" /> values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a55f4-414">Этот метод имеет по крайней мере один параметр <xref:System.Linq.Expressions.Expression%601> типа, аргумент типа которого является одним <xref:System.Func%602> из типов.</span><span class="sxs-lookup"><span data-stu-id="a55f4-414">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="a55f4-415">Для этих параметров можно передать лямбда-выражение, которое будет скомпилировано в <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="a55f4-415">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="a55f4-416">Метод создает объект <xref:System.Linq.Expressions.MethodCallExpression> , который представляет вызов <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Int32%7D%7D%7D%29> самого себя как сконструированного универсального метода. <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Int32%7D%7D%7D%29></span><span class="sxs-lookup"><span data-stu-id="a55f4-416">The <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Int32%7D%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Int32%7D%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="a55f4-417">Затем <xref:System.Linq.Expressions.MethodCallExpression> он передает <xref:System.Linq.IQueryProvider> в <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> метод класса, представленного `source` свойствомпараметра.<xref:System.Linq.IQueryable.Provider%2A></span><span class="sxs-lookup"><span data-stu-id="a55f4-417">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="a55f4-418">Поведение запроса, которое происходит в результате выполнения дерева выражения, представляющего вызов <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Int32%7D%7D%7D%29> , зависит от реализации типа `source` параметра.</span><span class="sxs-lookup"><span data-stu-id="a55f4-418">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Int32%7D%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="a55f4-419">Ожидаемым поведением является вычисление среднего значения значений в `source` после `selector` вызова для каждого значения.</span><span class="sxs-lookup"><span data-stu-id="a55f4-419">The expected behavior is that it calculates the average of the values in `source` after invoking `selector` on each value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a55f4-420">В следующем примере кода показано, как использовать <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%7D%7D%29> для вычисления средней <xref:System.String> длины в последовательности значений типа <xref:System.String>.</span><span class="sxs-lookup"><span data-stu-id="a55f4-420">The following code example demonstrates how to use <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%7D%7D%29> to calculate the average <xref:System.String> length in a sequence of values of type <xref:System.String>.</span></span>  
  
 [!INCLUDE[sqo_diff_overload_example_func](~/includes/sqo-diff-overload-example-func-md.md)]  
  
 [!code-csharp[System.Linq.Queryable#18](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#18)]
 [!code-vb[System.Linq.Queryable#18](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#18)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a55f4-421">Параметр <paramref name="source" /> или <paramref name="selector" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-421"><paramref name="source" /> or <paramref name="selector" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Average&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static Nullable&lt;double&gt; Average&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,Nullable&lt;long&gt;&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float64&gt; Average&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, valuetype System.Nullable`1&lt;int64&gt;&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int64}}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Average(Of TSource) (source As IQueryable(Of TSource), selector As Expression(Of Func(Of TSource, Nullable(Of Long)))) As Nullable(Of Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;double&gt; Average(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, Nullable&lt;long&gt;&gt; ^&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Average : System.Linq.IQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, Nullable&lt;int64&gt;&gt;&gt; -&gt; Nullable&lt;double&gt;" Usage="System.Linq.Queryable.Average (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,System.Nullable&lt;System.Int64&gt;&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="a55f4-422">Тип элементов <paramref name="source" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-422">The type of the elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="a55f4-423">Последовательность значений, для которых вычисляется среднее.</span><span class="sxs-lookup"><span data-stu-id="a55f4-423">A sequence of values to calculate the average of.</span></span></param>
        <param name="selector"><span data-ttu-id="a55f4-424">Функция проекции, применяемая к каждому элементу.</span><span class="sxs-lookup"><span data-stu-id="a55f4-424">A projection function to apply to each element.</span></span></param>
        <summary><span data-ttu-id="a55f4-425">Вычисляет среднее для последовательности значений <see cref="T:System.Int64" /> обнуляемого типа, которая получается в результате применения функции проекции к каждому элементу входной последовательности.</span><span class="sxs-lookup"><span data-stu-id="a55f4-425">Computes the average of a sequence of nullable <see cref="T:System.Int64" /> values that is obtained by invoking a projection function on each element of the input sequence.</span></span></summary>
        <returns><span data-ttu-id="a55f4-426">Среднее арифметическое значений последовательности, или <see langword="null" />, если последовательность <paramref name="source" /> пуста либо содержит только значения <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-426">The average of the sequence of values, or <see langword="null" /> if the <paramref name="source" /> sequence is empty or contains only <see langword="null" /> values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a55f4-427">Этот метод имеет по крайней мере один параметр <xref:System.Linq.Expressions.Expression%601> типа, аргумент типа которого является одним <xref:System.Func%602> из типов.</span><span class="sxs-lookup"><span data-stu-id="a55f4-427">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="a55f4-428">Для этих параметров можно передать лямбда-выражение, которое будет скомпилировано в <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="a55f4-428">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="a55f4-429">Метод создает объект <xref:System.Linq.Expressions.MethodCallExpression> , который представляет вызов <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Int64%7D%7D%7D%29> самого себя как сконструированного универсального метода. <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Int64%7D%7D%7D%29></span><span class="sxs-lookup"><span data-stu-id="a55f4-429">The <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Int64%7D%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Int64%7D%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="a55f4-430">Затем <xref:System.Linq.Expressions.MethodCallExpression> он передает <xref:System.Linq.IQueryProvider> методу класса, представленного `source`свойствомпараметра <xref:System.Linq.IQueryable.Provider%2A> <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> .</span><span class="sxs-lookup"><span data-stu-id="a55f4-430">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="a55f4-431">Поведение запроса, которое происходит в результате выполнения дерева выражения, представляющего вызов <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Int64%7D%7D%7D%29> , зависит от реализации типа `source` параметра.</span><span class="sxs-lookup"><span data-stu-id="a55f4-431">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Int64%7D%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="a55f4-432">Ожидаемым поведением является вычисление среднего значения значений в `source` после `selector` вызова для каждого значения.</span><span class="sxs-lookup"><span data-stu-id="a55f4-432">The expected behavior is that it calculates the average of the values in `source` after invoking `selector` on each value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a55f4-433">В следующем примере кода показано, как использовать <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%7D%7D%29> для вычисления средней <xref:System.String> длины в последовательности значений типа <xref:System.String>.</span><span class="sxs-lookup"><span data-stu-id="a55f4-433">The following code example demonstrates how to use <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%7D%7D%29> to calculate the average <xref:System.String> length in a sequence of values of type <xref:System.String>.</span></span>  
  
 [!INCLUDE[sqo_diff_overload_example_func](~/includes/sqo-diff-overload-example-func-md.md)]  
  
 [!code-csharp[System.Linq.Queryable#18](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#18)]
 [!code-vb[System.Linq.Queryable#18](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#18)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a55f4-434">Значение параметра <paramref name="source" /> или <paramref name="selector" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-434"><paramref name="source" /> or <paramref name="selector" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Average&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static Nullable&lt;float&gt; Average&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,Nullable&lt;float&gt;&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float32&gt; Average&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, valuetype System.Nullable`1&lt;float32&gt;&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Single}}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Average(Of TSource) (source As IQueryable(Of TSource), selector As Expression(Of Func(Of TSource, Nullable(Of Single)))) As Nullable(Of Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;float&gt; Average(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, Nullable&lt;float&gt;&gt; ^&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Average : System.Linq.IQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, Nullable&lt;single&gt;&gt;&gt; -&gt; Nullable&lt;single&gt;" Usage="System.Linq.Queryable.Average (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,System.Nullable&lt;System.Single&gt;&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="a55f4-435">Тип элементов <paramref name="source" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-435">The type of the elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="a55f4-436">Последовательность значений, для которых вычисляется среднее.</span><span class="sxs-lookup"><span data-stu-id="a55f4-436">A sequence of values to calculate the average of.</span></span></param>
        <param name="selector"><span data-ttu-id="a55f4-437">Функция проекции, применяемая к каждому элементу.</span><span class="sxs-lookup"><span data-stu-id="a55f4-437">A projection function to apply to each element.</span></span></param>
        <summary><span data-ttu-id="a55f4-438">Вычисляет среднее для последовательности значений <see cref="T:System.Single" /> обнуляемого типа, которая получается в результате применения функции проекции к каждому элементу входной последовательности.</span><span class="sxs-lookup"><span data-stu-id="a55f4-438">Computes the average of a sequence of nullable <see cref="T:System.Single" /> values that is obtained by invoking a projection function on each element of the input sequence.</span></span></summary>
        <returns><span data-ttu-id="a55f4-439">Среднее арифметическое значений последовательности, или <see langword="null" />, если последовательность <paramref name="source" /> пуста либо содержит только значения <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-439">The average of the sequence of values, or <see langword="null" /> if the <paramref name="source" /> sequence is empty or contains only <see langword="null" /> values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a55f4-440">Этот метод имеет по крайней мере один параметр <xref:System.Linq.Expressions.Expression%601> типа, аргумент типа которого является одним <xref:System.Func%602> из типов.</span><span class="sxs-lookup"><span data-stu-id="a55f4-440">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="a55f4-441">Для этих параметров можно передать лямбда-выражение, которое будет скомпилировано в <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="a55f4-441">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="a55f4-442">Метод создает объект <xref:System.Linq.Expressions.MethodCallExpression> , который представляет вызов <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Single%7D%7D%7D%29> самого себя как сконструированного универсального метода. <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Single%7D%7D%7D%29></span><span class="sxs-lookup"><span data-stu-id="a55f4-442">The <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Single%7D%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Single%7D%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="a55f4-443">Затем <xref:System.Linq.Expressions.MethodCallExpression> он передает <xref:System.Linq.IQueryProvider> в <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> метод класса, представленного `source` свойствомпараметра.<xref:System.Linq.IQueryable.Provider%2A></span><span class="sxs-lookup"><span data-stu-id="a55f4-443">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="a55f4-444">Поведение запроса, которое происходит в результате выполнения дерева выражения, представляющего вызов <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Single%7D%7D%7D%29> , зависит от реализации типа `source` параметра.</span><span class="sxs-lookup"><span data-stu-id="a55f4-444">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Single%7D%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="a55f4-445">Ожидаемым поведением является вычисление среднего значения значений в `source` после `selector` вызова для каждого значения.</span><span class="sxs-lookup"><span data-stu-id="a55f4-445">The expected behavior is that it calculates the average of the values in `source` after invoking `selector` on each value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a55f4-446">В следующем примере кода показано, как использовать <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%7D%7D%29> для вычисления средней <xref:System.String> длины в последовательности значений типа <xref:System.String>.</span><span class="sxs-lookup"><span data-stu-id="a55f4-446">The following code example demonstrates how to use <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%7D%7D%29> to calculate the average <xref:System.String> length in a sequence of values of type <xref:System.String>.</span></span>  
  
 [!INCLUDE[sqo_diff_overload_example_func](~/includes/sqo-diff-overload-example-func-md.md)]  
  
 [!code-csharp[System.Linq.Queryable#18](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#18)]
 [!code-vb[System.Linq.Queryable#18](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#18)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a55f4-447">Значение параметра <paramref name="source" /> или <paramref name="selector" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-447"><paramref name="source" /> or <paramref name="selector" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Average&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static float Average&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,float&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Average&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, float32&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Single}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Average(Of TSource) (source As IQueryable(Of TSource), selector As Expression(Of Func(Of TSource, Single))) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static float Average(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, float&gt; ^&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Average : System.Linq.IQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, single&gt;&gt; -&gt; single" Usage="System.Linq.Queryable.Average (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,System.Single&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="a55f4-448">Тип элементов <paramref name="source" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-448">The type of the elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="a55f4-449">Последовательность значений, для которых вычисляется среднее.</span><span class="sxs-lookup"><span data-stu-id="a55f4-449">A sequence of values to calculate the average of.</span></span></param>
        <param name="selector"><span data-ttu-id="a55f4-450">Функция проекции, применяемая к каждому элементу.</span><span class="sxs-lookup"><span data-stu-id="a55f4-450">A projection function to apply to each element.</span></span></param>
        <summary><span data-ttu-id="a55f4-451">Вычисляет среднее для последовательности значений типа <see cref="T:System.Single" />, получаемой в результате применения функции проекции к каждому элементу входной последовательности.</span><span class="sxs-lookup"><span data-stu-id="a55f4-451">Computes the average of a sequence of <see cref="T:System.Single" /> values that is obtained by invoking a projection function on each element of the input sequence.</span></span></summary>
        <returns><span data-ttu-id="a55f4-452">Среднее для последовательности значений.</span><span class="sxs-lookup"><span data-stu-id="a55f4-452">The average of the sequence of values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a55f4-453">Этот метод имеет по крайней мере один параметр <xref:System.Linq.Expressions.Expression%601> типа, аргумент типа которого является одним <xref:System.Func%602> из типов.</span><span class="sxs-lookup"><span data-stu-id="a55f4-453">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="a55f4-454">Для этих параметров можно передать лямбда-выражение, которое будет скомпилировано в <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="a55f4-454">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="a55f4-455">Метод создает объект <xref:System.Linq.Expressions.MethodCallExpression> , который представляет вызов <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Single%7D%7D%29> самого себя как сконструированного универсального метода. <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Single%7D%7D%29></span><span class="sxs-lookup"><span data-stu-id="a55f4-455">The <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Single%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Single%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="a55f4-456">Затем <xref:System.Linq.Expressions.MethodCallExpression> он передает <xref:System.Linq.IQueryProvider> методу класса, представленного `source`свойствомпараметра <xref:System.Linq.IQueryable.Provider%2A> <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> .</span><span class="sxs-lookup"><span data-stu-id="a55f4-456">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="a55f4-457">Поведение запроса, которое происходит в результате выполнения дерева выражения, представляющего вызов <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Single%7D%7D%29> , зависит от реализации типа `source` параметра.</span><span class="sxs-lookup"><span data-stu-id="a55f4-457">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Single%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="a55f4-458">Ожидаемым поведением является вычисление среднего значения значений в `source` после `selector` вызова для каждого значения.</span><span class="sxs-lookup"><span data-stu-id="a55f4-458">The expected behavior is that it calculates the average of the values in `source` after invoking `selector` on each value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a55f4-459">В следующем примере кода показано, как использовать <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%7D%7D%29> для вычисления средней <xref:System.String> длины в последовательности значений типа <xref:System.String>.</span><span class="sxs-lookup"><span data-stu-id="a55f4-459">The following code example demonstrates how to use <xref:System.Linq.Queryable.Average%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%7D%7D%29> to calculate the average <xref:System.String> length in a sequence of values of type <xref:System.String>.</span></span>  
  
 [!INCLUDE[sqo_diff_overload_example_func](~/includes/sqo-diff-overload-example-func-md.md)]  
  
 [!code-csharp[System.Linq.Queryable#18](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#18)]
 [!code-vb[System.Linq.Queryable#18](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#18)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a55f4-460">Параметр <paramref name="source" /> или <paramref name="selector" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-460"><paramref name="source" /> or <paramref name="selector" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a55f4-461">Последовательность <paramref name="source" /> не содержит элементов.</span><span class="sxs-lookup"><span data-stu-id="a55f4-461"><paramref name="source" /> contains no elements.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Cast&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;TResult&gt; Cast&lt;TResult&gt; (this System.Linq.IQueryable source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;!!TResult&gt; Cast&lt;TResult&gt;(class System.Linq.IQueryable source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Cast``1(System.Linq.IQueryable)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Cast(Of TResult) (source As IQueryable) As IQueryable(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;TResult&gt; ^ Cast(System::Linq::IQueryable ^ source);" />
      <MemberSignature Language="F#" Value="static member Cast : System.Linq.IQueryable -&gt; System.Linq.IQueryable&lt;'Result&gt;" Usage="System.Linq.Queryable.Cast source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TResult"><span data-ttu-id="a55f4-462">Тип, в который преобразуются элементы объекта <paramref name="source" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-462">The type to convert the elements of <paramref name="source" /> to.</span></span></typeparam>
        <param name="source"><span data-ttu-id="a55f4-463">Объект <see cref="T:System.Linq.IQueryable" />, содержащий преобразуемые элементы.</span><span class="sxs-lookup"><span data-stu-id="a55f4-463">The <see cref="T:System.Linq.IQueryable" /> that contains the elements to be converted.</span></span></param>
        <summary><span data-ttu-id="a55f4-464">Преобразовывает элементы объекта <see cref="T:System.Linq.IQueryable" /> в заданный тип.</span><span class="sxs-lookup"><span data-stu-id="a55f4-464">Converts the elements of an <see cref="T:System.Linq.IQueryable" /> to the specified type.</span></span></summary>
        <returns><span data-ttu-id="a55f4-465"><see cref="T:System.Linq.IQueryable`1" /> — содержит все элементы исходной последовательности, преобразованные в указанный тип.</span><span class="sxs-lookup"><span data-stu-id="a55f4-465">An <see cref="T:System.Linq.IQueryable`1" /> that contains each element of the source sequence converted to the specified type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a55f4-466">Метод создает объект <xref:System.Linq.Expressions.MethodCallExpression> , который представляет вызов <xref:System.Linq.Queryable.Cast%60%601%28System.Linq.IQueryable%29> самого себя как сконструированного универсального метода. <xref:System.Linq.Queryable.Cast%60%601%28System.Linq.IQueryable%29></span><span class="sxs-lookup"><span data-stu-id="a55f4-466">The <xref:System.Linq.Queryable.Cast%60%601%28System.Linq.IQueryable%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Cast%60%601%28System.Linq.IQueryable%29> itself as a constructed generic method.</span></span> <span data-ttu-id="a55f4-467">Затем <xref:System.Linq.Expressions.MethodCallExpression> он передает <xref:System.Linq.IQueryProvider> методу класса, представленного `source`свойствомпараметра <xref:System.Linq.IQueryable.Provider%2A> <xref:System.Linq.IQueryProvider.CreateQuery%28System.Linq.Expressions.Expression%29> .</span><span class="sxs-lookup"><span data-stu-id="a55f4-467">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="a55f4-468">Поведение запроса, которое происходит в результате выполнения дерева выражения, представляющего вызов <xref:System.Linq.Queryable.Cast%60%601%28System.Linq.IQueryable%29> , зависит от реализации типа `source` параметра.</span><span class="sxs-lookup"><span data-stu-id="a55f4-468">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Cast%60%601%28System.Linq.IQueryable%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="a55f4-469">Ожидаемое поведение заключается в том, что он преобразует `source` значения в `TResult`в тип.</span><span class="sxs-lookup"><span data-stu-id="a55f4-469">The expected behavior is that it converts the values in `source` to type `TResult`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a55f4-470">В следующем примере кода показано, как использовать <xref:System.Linq.Queryable.Cast%60%601%28System.Linq.IQueryable%29> для преобразования объектов в последовательности в тип. <xref:System.String></span><span class="sxs-lookup"><span data-stu-id="a55f4-470">The following code example demonstrates how to use <xref:System.Linq.Queryable.Cast%60%601%28System.Linq.IQueryable%29> to convert objects in a sequence to type <xref:System.String>.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#19](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#19)]
 [!code-vb[System.Linq.Queryable#19](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#19)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a55f4-471">Свойство <paramref name="source" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-471"><paramref name="source" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="a55f4-472">Элемент последовательности не может быть приведен к типу <paramref name="TResult" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-472">An element in the sequence cannot be cast to type <paramref name="TResult" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Concat&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;TSource&gt; Concat&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source1, System.Collections.Generic.IEnumerable&lt;TSource&gt; source2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;!!TSource&gt; Concat&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source1, class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; source2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Concat``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Concat(Of TSource) (source1 As IQueryable(Of TSource), source2 As IEnumerable(Of TSource)) As IQueryable(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;TSource&gt; ^ Concat(System::Linq::IQueryable&lt;TSource&gt; ^ source1, System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ source2);" />
      <MemberSignature Language="F#" Value="static member Concat : System.Linq.IQueryable&lt;'Source&gt; * seq&lt;'Source&gt; -&gt; System.Linq.IQueryable&lt;'Source&gt;" Usage="System.Linq.Queryable.Concat (source1, source2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source1" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="source2" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="a55f4-473">Тип элементов входных последовательностей.</span><span class="sxs-lookup"><span data-stu-id="a55f4-473">The type of the elements of the input sequences.</span></span></typeparam>
        <param name="source1"><span data-ttu-id="a55f4-474">Первая из объединяемых последовательностей.</span><span class="sxs-lookup"><span data-stu-id="a55f4-474">The first sequence to concatenate.</span></span></param>
        <param name="source2"><span data-ttu-id="a55f4-475">Последовательность, объединяемая с первой последовательностью.</span><span class="sxs-lookup"><span data-stu-id="a55f4-475">The sequence to concatenate to the first sequence.</span></span></param>
        <summary><span data-ttu-id="a55f4-476">Объединяет две последовательности.</span><span class="sxs-lookup"><span data-stu-id="a55f4-476">Concatenates two sequences.</span></span></summary>
        <returns><span data-ttu-id="a55f4-477">Объект <see cref="T:System.Linq.IQueryable`1" />, содержащий объединенные элементы двух входных последовательностей.</span><span class="sxs-lookup"><span data-stu-id="a55f4-477">An <see cref="T:System.Linq.IQueryable`1" /> that contains the concatenated elements of the two input sequences.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a55f4-478">Метод создает объект <xref:System.Linq.Expressions.MethodCallExpression> , который представляет вызов <xref:System.Linq.Queryable.Concat%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%29> самого себя как сконструированного универсального метода. <xref:System.Linq.Queryable.Concat%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%29></span><span class="sxs-lookup"><span data-stu-id="a55f4-478">The <xref:System.Linq.Queryable.Concat%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Concat%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="a55f4-479">Затем <xref:System.Linq.Expressions.MethodCallExpression> он передает <xref:System.Linq.IQueryProvider> методу класса, представленного `source1`свойствомпараметра <xref:System.Linq.IQueryable.Provider%2A> <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> .</span><span class="sxs-lookup"><span data-stu-id="a55f4-479">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source1` parameter.</span></span>  
  
 <span data-ttu-id="a55f4-480">Поведение запроса, которое происходит в результате выполнения дерева выражения, представляющего вызов <xref:System.Linq.Queryable.Concat%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%29> , зависит от реализации типа `source1` параметра.</span><span class="sxs-lookup"><span data-stu-id="a55f4-480">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Concat%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%29> depends on the implementation of the type of the `source1` parameter.</span></span> <span data-ttu-id="a55f4-481">Ожидаемое поведение заключается в том, что `source2` элементы в присоединяются к `source1` элементам, чтобы создать новую последовательность.</span><span class="sxs-lookup"><span data-stu-id="a55f4-481">The expected behavior is that the elements in `source2` are concatenated to those of `source1` to create a new sequence.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a55f4-482">В следующем примере кода показано, как использовать <xref:System.Linq.Queryable.Concat%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%29> для сцепления двух последовательностей.</span><span class="sxs-lookup"><span data-stu-id="a55f4-482">The following code example demonstrates how to use <xref:System.Linq.Queryable.Concat%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%29> to concatenate two sequences.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#20](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#20)]
 [!code-vb[System.Linq.Queryable#20](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#20)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a55f4-483">Параметр <paramref name="source1" /> или <paramref name="source2" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-483"><paramref name="source1" /> or <paramref name="source2" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Contains&lt;TSource&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a55f4-484">Определяет, содержит ли объект <see cref="T:System.Linq.IQueryable`1" /> указанный элемент.</span><span class="sxs-lookup"><span data-stu-id="a55f4-484">Determines whether an <see cref="T:System.Linq.IQueryable`1" /> contains a specified element.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Contains&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static bool Contains&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, TSource item);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Contains&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, !!TSource item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Contains``1(System.Linq.IQueryable{``0},``0)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Contains(Of TSource) (source As IQueryable(Of TSource), item As TSource) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool Contains(System::Linq::IQueryable&lt;TSource&gt; ^ source, TSource item);" />
      <MemberSignature Language="F#" Value="static member Contains : System.Linq.IQueryable&lt;'Source&gt; * 'Source -&gt; bool" Usage="System.Linq.Queryable.Contains (source, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="item" Type="TSource" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="a55f4-485">Тип элементов <paramref name="source" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-485">The type of the elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="a55f4-486">Объект <see cref="T:System.Linq.IQueryable`1" />, в котором требуется найти элемент <paramref name="item" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-486">An <see cref="T:System.Linq.IQueryable`1" /> in which to locate <paramref name="item" />.</span></span></param>
        <param name="item"><span data-ttu-id="a55f4-487">Объект, который требуется найти в последовательности.</span><span class="sxs-lookup"><span data-stu-id="a55f4-487">The object to locate in the sequence.</span></span></param>
        <summary><span data-ttu-id="a55f4-488">Определяет, содержится ли указанный элемент в последовательности, используя компаратор проверки на равенство по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="a55f4-488">Determines whether a sequence contains a specified element by using the default equality comparer.</span></span></summary>
        <returns><span data-ttu-id="a55f4-489"><see langword="true" />, если входная последовательность содержит элемент с указанным значением, в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-489"><see langword="true" /> if the input sequence contains an element that has the specified value; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a55f4-490">Метод создает объект <xref:System.Linq.Expressions.MethodCallExpression> , который представляет вызов <xref:System.Linq.Queryable.Contains%60%601%28System.Linq.IQueryable%7B%60%600%7D%2C%60%600%29> самого себя как сконструированного универсального метода. <xref:System.Linq.Queryable.Contains%60%601%28System.Linq.IQueryable%7B%60%600%7D%2C%60%600%29></span><span class="sxs-lookup"><span data-stu-id="a55f4-490">The <xref:System.Linq.Queryable.Contains%60%601%28System.Linq.IQueryable%7B%60%600%7D%2C%60%600%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Contains%60%601%28System.Linq.IQueryable%7B%60%600%7D%2C%60%600%29> itself as a constructed generic method.</span></span> <span data-ttu-id="a55f4-491">Затем <xref:System.Linq.Expressions.MethodCallExpression> он передает <xref:System.Linq.IQueryProvider> методу класса, представленного `source`свойствомпараметра <xref:System.Linq.IQueryable.Provider%2A> <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> .</span><span class="sxs-lookup"><span data-stu-id="a55f4-491">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="a55f4-492">Поведение запроса, которое происходит в результате выполнения дерева выражения, представляющего вызов <xref:System.Linq.Queryable.Contains%60%601%28System.Linq.IQueryable%7B%60%600%7D%2C%60%600%29> , зависит от реализации типа `source` параметра.</span><span class="sxs-lookup"><span data-stu-id="a55f4-492">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Contains%60%601%28System.Linq.IQueryable%7B%60%600%7D%2C%60%600%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="a55f4-493">Ожидаемое поведение заключается в том, что `source` он `item`определяет, содержит ли.</span><span class="sxs-lookup"><span data-stu-id="a55f4-493">The expected behavior is that it determines if `source` contains `item`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a55f4-494">В следующем примере кода показано, как с <xref:System.Linq.Queryable.Contains%60%601%28System.Linq.IQueryable%7B%60%600%7D%2C%60%600%29> помощью определить, содержит ли последовательность определенный элемент.</span><span class="sxs-lookup"><span data-stu-id="a55f4-494">The following code example demonstrates how to use <xref:System.Linq.Queryable.Contains%60%601%28System.Linq.IQueryable%7B%60%600%7D%2C%60%600%29> to determine whether a sequence contains a specific element.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#21](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#21)]
 [!code-vb[System.Linq.Queryable#21](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#21)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a55f4-495">Свойство <paramref name="source" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-495"><paramref name="source" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Contains&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static bool Contains&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, TSource item, System.Collections.Generic.IEqualityComparer&lt;TSource&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Contains&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, !!TSource item, class System.Collections.Generic.IEqualityComparer`1&lt;!!TSource&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Contains``1(System.Linq.IQueryable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Contains(Of TSource) (source As IQueryable(Of TSource), item As TSource, comparer As IEqualityComparer(Of TSource)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool Contains(System::Linq::IQueryable&lt;TSource&gt; ^ source, TSource item, System::Collections::Generic::IEqualityComparer&lt;TSource&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member Contains : System.Linq.IQueryable&lt;'Source&gt; * 'Source * System.Collections.Generic.IEqualityComparer&lt;'Source&gt; -&gt; bool" Usage="System.Linq.Queryable.Contains (source, item, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="item" Type="TSource" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TSource&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="a55f4-496">Тип элементов <paramref name="source" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-496">The type of the elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="a55f4-497">Объект <see cref="T:System.Linq.IQueryable`1" />, в котором требуется найти элемент <paramref name="item" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-497">An <see cref="T:System.Linq.IQueryable`1" /> in which to locate <paramref name="item" />.</span></span></param>
        <param name="item"><span data-ttu-id="a55f4-498">Объект, который требуется найти в последовательности.</span><span class="sxs-lookup"><span data-stu-id="a55f4-498">The object to locate in the sequence.</span></span></param>
        <param name="comparer"><span data-ttu-id="a55f4-499">Компаратор <see cref="T:System.Collections.Generic.IEqualityComparer`1" />, используемый для сравнения значений.</span><span class="sxs-lookup"><span data-stu-id="a55f4-499">An <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> to compare values.</span></span></param>
        <summary><span data-ttu-id="a55f4-500">Определяет, содержит ли последовательность заданный элемент, используя указанный компаратор <see cref="T:System.Collections.Generic.IEqualityComparer`1" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-500">Determines whether a sequence contains a specified element by using a specified <see cref="T:System.Collections.Generic.IEqualityComparer`1" />.</span></span></summary>
        <returns><span data-ttu-id="a55f4-501"><see langword="true" />, если входная последовательность содержит элемент с указанным значением, в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-501"><see langword="true" /> if the input sequence contains an element that has the specified value; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a55f4-502">Метод создает объект <xref:System.Linq.Expressions.MethodCallExpression> , который представляет вызов <xref:System.Linq.Queryable.Contains%60%601%28System.Linq.IQueryable%7B%60%600%7D%2C%60%600%2CSystem.Collections.Generic.IEqualityComparer%7B%60%600%7D%29> самого себя как сконструированного универсального метода. <xref:System.Linq.Queryable.Contains%60%601%28System.Linq.IQueryable%7B%60%600%7D%2C%60%600%2CSystem.Collections.Generic.IEqualityComparer%7B%60%600%7D%29></span><span class="sxs-lookup"><span data-stu-id="a55f4-502">The <xref:System.Linq.Queryable.Contains%60%601%28System.Linq.IQueryable%7B%60%600%7D%2C%60%600%2CSystem.Collections.Generic.IEqualityComparer%7B%60%600%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Contains%60%601%28System.Linq.IQueryable%7B%60%600%7D%2C%60%600%2CSystem.Collections.Generic.IEqualityComparer%7B%60%600%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="a55f4-503">Затем <xref:System.Linq.Expressions.MethodCallExpression> он передает <xref:System.Linq.IQueryProvider> методу класса, представленного `source`свойствомпараметра <xref:System.Linq.IQueryable.Provider%2A> <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> .</span><span class="sxs-lookup"><span data-stu-id="a55f4-503">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="a55f4-504">Поведение запроса, которое происходит в результате выполнения дерева выражения, представляющего вызов <xref:System.Linq.Queryable.Contains%60%601%28System.Linq.IQueryable%7B%60%600%7D%2C%60%600%2CSystem.Collections.Generic.IEqualityComparer%7B%60%600%7D%29> , зависит от реализации типа `source` параметра.</span><span class="sxs-lookup"><span data-stu-id="a55f4-504">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Contains%60%601%28System.Linq.IQueryable%7B%60%600%7D%2C%60%600%2CSystem.Collections.Generic.IEqualityComparer%7B%60%600%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="a55f4-505">Ожидаемое поведение заключается в том, что `source` он `item` определяет, `comparer` содержит ли функция для сравнения значений.</span><span class="sxs-lookup"><span data-stu-id="a55f4-505">The expected behavior is that it determines if `source` contains `item` by using `comparer` to compare values.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a55f4-506">Свойство <paramref name="source" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-506"><paramref name="source" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Count&lt;TSource&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a55f4-507">Возвращает количество элементов в последовательности.</span><span class="sxs-lookup"><span data-stu-id="a55f4-507">Returns the number of elements in a sequence.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Count&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static int Count&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Count&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Count``1(System.Linq.IQueryable{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Count(Of TSource) (source As IQueryable(Of TSource)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int Count(System::Linq::IQueryable&lt;TSource&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Count : System.Linq.IQueryable&lt;'Source&gt; -&gt; int" Usage="System.Linq.Queryable.Count source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="a55f4-508">Тип элементов <paramref name="source" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-508">The type of the elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="a55f4-509">Объект <see cref="T:System.Linq.IQueryable`1" />, содержащий элементы, которые требуется подсчитать.</span><span class="sxs-lookup"><span data-stu-id="a55f4-509">The <see cref="T:System.Linq.IQueryable`1" /> that contains the elements to be counted.</span></span></param>
        <summary><span data-ttu-id="a55f4-510">Возвращает количество элементов в последовательности.</span><span class="sxs-lookup"><span data-stu-id="a55f4-510">Returns the number of elements in a sequence.</span></span></summary>
        <returns><span data-ttu-id="a55f4-511">Число элементов во входной последовательности.</span><span class="sxs-lookup"><span data-stu-id="a55f4-511">The number of elements in the input sequence.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a55f4-512">Метод создает объект <xref:System.Linq.Expressions.MethodCallExpression> , который представляет вызов <xref:System.Linq.Queryable.Count%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> самого себя как сконструированного универсального метода. <xref:System.Linq.Queryable.Count%60%601%28System.Linq.IQueryable%7B%60%600%7D%29></span><span class="sxs-lookup"><span data-stu-id="a55f4-512">The <xref:System.Linq.Queryable.Count%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Count%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="a55f4-513">Затем <xref:System.Linq.Expressions.MethodCallExpression> он передает <xref:System.Linq.IQueryProvider> методу класса, представленного `source`свойствомпараметра <xref:System.Linq.IQueryable.Provider%2A> <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> .</span><span class="sxs-lookup"><span data-stu-id="a55f4-513">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="a55f4-514">Поведение запроса, которое происходит в результате выполнения дерева выражения, представляющего вызов <xref:System.Linq.Queryable.Count%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> , зависит от реализации типа `source` параметра.</span><span class="sxs-lookup"><span data-stu-id="a55f4-514">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Count%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="a55f4-515">Ожидаемое поведение заключается в том, что он подсчитывает количество `source`элементов в.</span><span class="sxs-lookup"><span data-stu-id="a55f4-515">The expected behavior is that it counts the number of items in `source`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a55f4-516">В следующем примере кода показано, как использовать <xref:System.Linq.Queryable.Count%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> для подсчета элементов в последовательности.</span><span class="sxs-lookup"><span data-stu-id="a55f4-516">The following code example demonstrates how to use <xref:System.Linq.Queryable.Count%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> to count the elements in a sequence.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#22](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#22)]
 [!code-vb[System.Linq.Queryable#22](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#22)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a55f4-517">Свойство <paramref name="source" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-517"><paramref name="source" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="a55f4-518">Число элементов в последовательности <paramref name="source" /> больше, чем <see cref="F:System.Int32.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-518">The number of elements in <paramref name="source" /> is larger than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Count&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static int Count&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,bool&gt;&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Count&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, bool&gt;&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Count``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Count(Of TSource) (source As IQueryable(Of TSource), predicate As Expression(Of Func(Of TSource, Boolean))) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int Count(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, bool&gt; ^&gt; ^ predicate);" />
      <MemberSignature Language="F#" Value="static member Count : System.Linq.IQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, bool&gt;&gt; -&gt; int" Usage="System.Linq.Queryable.Count (source, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,System.Boolean&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="a55f4-519">Тип элементов <paramref name="source" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-519">The type of the elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="a55f4-520">Объект <see cref="T:System.Linq.IQueryable`1" />, содержащий элементы, которые требуется подсчитать.</span><span class="sxs-lookup"><span data-stu-id="a55f4-520">An <see cref="T:System.Linq.IQueryable`1" /> that contains the elements to be counted.</span></span></param>
        <param name="predicate"><span data-ttu-id="a55f4-521">Функция для проверки каждого элемента на соответствие условию.</span><span class="sxs-lookup"><span data-stu-id="a55f4-521">A function to test each element for a condition.</span></span></param>
        <summary><span data-ttu-id="a55f4-522">Возвращает количество элементов указанной последовательности, удовлетворяющих определенному условию.</span><span class="sxs-lookup"><span data-stu-id="a55f4-522">Returns the number of elements in the specified sequence that satisfies a condition.</span></span></summary>
        <returns><span data-ttu-id="a55f4-523">Число элементов последовательности, удовлетворяющих условию функции предиката.</span><span class="sxs-lookup"><span data-stu-id="a55f4-523">The number of elements in the sequence that satisfies the condition in the predicate function.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a55f4-524">Этот метод имеет по крайней мере один параметр <xref:System.Linq.Expressions.Expression%601> типа, аргумент типа которого является одним <xref:System.Func%602> из типов.</span><span class="sxs-lookup"><span data-stu-id="a55f4-524">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="a55f4-525">Для этих параметров можно передать лямбда-выражение, которое будет скомпилировано в <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="a55f4-525">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="a55f4-526">Метод создает объект <xref:System.Linq.Expressions.MethodCallExpression> , который представляет вызов <xref:System.Linq.Queryable.Count%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> самого себя как сконструированного универсального метода. <xref:System.Linq.Queryable.Count%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29></span><span class="sxs-lookup"><span data-stu-id="a55f4-526">The <xref:System.Linq.Queryable.Count%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Count%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="a55f4-527">Затем <xref:System.Linq.Expressions.MethodCallExpression> он передает <xref:System.Linq.IQueryProvider> методу класса, представленного `source`свойствомпараметра <xref:System.Linq.IQueryable.Provider%2A> <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> .</span><span class="sxs-lookup"><span data-stu-id="a55f4-527">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="a55f4-528">Поведение запроса, которое происходит в результате выполнения дерева выражения, представляющего вызов <xref:System.Linq.Queryable.Count%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> , зависит от реализации типа `source` параметра.</span><span class="sxs-lookup"><span data-stu-id="a55f4-528">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Count%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="a55f4-529">Ожидаемое поведение заключается в том, что он подсчитывает количество `source` элементов в, удовлетворяющее условию, заданному параметром. `predicate`</span><span class="sxs-lookup"><span data-stu-id="a55f4-529">The expected behavior is that it counts the number of items in `source` that satisfy the condition specified by `predicate`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a55f4-530">В следующем примере кода показано, как использовать <xref:System.Linq.Queryable.Count%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> для подсчета элементов в последовательности, удовлетворяющей условию.</span><span class="sxs-lookup"><span data-stu-id="a55f4-530">The following code example demonstrates how to use <xref:System.Linq.Queryable.Count%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> to count the elements in a sequence that satisfy a condition.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#23](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#23)]
 [!code-vb[System.Linq.Queryable#23](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#23)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a55f4-531">Значение параметра <paramref name="source" /> или <paramref name="predicate" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-531"><paramref name="source" /> or <paramref name="predicate" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="a55f4-532">Число элементов в последовательности <paramref name="source" /> больше, чем <see cref="F:System.Int32.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-532">The number of elements in <paramref name="source" /> is larger than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="DefaultIfEmpty&lt;TSource&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a55f4-533">Возвращает элементы последовательности или одноэлементную коллекцию со значением по умолчанию, если последовательность пуста.</span><span class="sxs-lookup"><span data-stu-id="a55f4-533">Returns the elements in a sequence or a default valued singleton collection if the sequence is empty.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DefaultIfEmpty&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;TSource&gt; DefaultIfEmpty&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;!!TSource&gt; DefaultIfEmpty&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.DefaultIfEmpty``1(System.Linq.IQueryable{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function DefaultIfEmpty(Of TSource) (source As IQueryable(Of TSource)) As IQueryable(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;TSource&gt; ^ DefaultIfEmpty(System::Linq::IQueryable&lt;TSource&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member DefaultIfEmpty : System.Linq.IQueryable&lt;'Source&gt; -&gt; System.Linq.IQueryable&lt;'Source&gt;" Usage="System.Linq.Queryable.DefaultIfEmpty source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="a55f4-534">Тип элементов <paramref name="source" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-534">The type of the elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="a55f4-535">Объект <see cref="T:System.Linq.IQueryable`1" />, для которого возвращается значение по умолчанию, если последовательность пуста.</span><span class="sxs-lookup"><span data-stu-id="a55f4-535">The <see cref="T:System.Linq.IQueryable`1" /> to return a default value for if empty.</span></span></param>
        <summary><span data-ttu-id="a55f4-536">Возвращает элементы указанной последовательности или одноэлементную коллекцию, содержащую значение параметра типа по умолчанию, если последовательность пуста.</span><span class="sxs-lookup"><span data-stu-id="a55f4-536">Returns the elements of the specified sequence or the type parameter's default value in a singleton collection if the sequence is empty.</span></span></summary>
        <returns><span data-ttu-id="a55f4-537">Объект <see cref="T:System.Linq.IQueryable`1" />, содержащий значение <see langword="default" />(<paramref name="TSource" />), если последовательность <paramref name="source" /> пуста; в противном случае возвращается <paramref name="source" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-537">An <see cref="T:System.Linq.IQueryable`1" /> that contains <see langword="default" />(<paramref name="TSource" />) if <paramref name="source" /> is empty; otherwise, <paramref name="source" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a55f4-538">Метод создает объект <xref:System.Linq.Expressions.MethodCallExpression> , который представляет вызов <xref:System.Linq.Queryable.DefaultIfEmpty%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> самого себя как сконструированного универсального метода. <xref:System.Linq.Queryable.DefaultIfEmpty%60%601%28System.Linq.IQueryable%7B%60%600%7D%29></span><span class="sxs-lookup"><span data-stu-id="a55f4-538">The <xref:System.Linq.Queryable.DefaultIfEmpty%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.DefaultIfEmpty%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="a55f4-539">Затем <xref:System.Linq.Expressions.MethodCallExpression> он передает <xref:System.Linq.IQueryProvider> методу класса, представленного `source`свойствомпараметра <xref:System.Linq.IQueryable.Provider%2A> <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> .</span><span class="sxs-lookup"><span data-stu-id="a55f4-539">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="a55f4-540">Поведение запроса, которое происходит в результате выполнения дерева выражения, представляющего вызов <xref:System.Linq.Queryable.DefaultIfEmpty%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> , зависит от реализации типа `source` параметра.</span><span class="sxs-lookup"><span data-stu-id="a55f4-540">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.DefaultIfEmpty%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="a55f4-541">Ожидаемое поведение — возврат `source` , если он не пуст.</span><span class="sxs-lookup"><span data-stu-id="a55f4-541">The expected behavior is that it returns `source` if it is not empty.</span></span> <span data-ttu-id="a55f4-542">В противном случае возвращается <xref:System.Linq.IQueryable%601> объект, `default(TSource)`содержащий.</span><span class="sxs-lookup"><span data-stu-id="a55f4-542">Otherwise, it returns an <xref:System.Linq.IQueryable%601> that contains `default(TSource)`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a55f4-543">В следующем примере кода показано, как использовать <xref:System.Linq.Queryable.DefaultIfEmpty%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> для предоставления значения по умолчанию в случае, если исходная последовательность пуста.</span><span class="sxs-lookup"><span data-stu-id="a55f4-543">The following code examples demonstrate how to use <xref:System.Linq.Queryable.DefaultIfEmpty%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> to provide a default value in case the source sequence is empty.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#24](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#24)]
 [!code-vb[System.Linq.Queryable#24](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#24)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a55f4-544">Свойство <paramref name="source" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-544"><paramref name="source" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DefaultIfEmpty&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;TSource&gt; DefaultIfEmpty&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, TSource defaultValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;!!TSource&gt; DefaultIfEmpty&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, !!TSource defaultValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.DefaultIfEmpty``1(System.Linq.IQueryable{``0},``0)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function DefaultIfEmpty(Of TSource) (source As IQueryable(Of TSource), defaultValue As TSource) As IQueryable(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;TSource&gt; ^ DefaultIfEmpty(System::Linq::IQueryable&lt;TSource&gt; ^ source, TSource defaultValue);" />
      <MemberSignature Language="F#" Value="static member DefaultIfEmpty : System.Linq.IQueryable&lt;'Source&gt; * 'Source -&gt; System.Linq.IQueryable&lt;'Source&gt;" Usage="System.Linq.Queryable.DefaultIfEmpty (source, defaultValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="defaultValue" Type="TSource" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="a55f4-545">Тип элементов <paramref name="source" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-545">The type of the elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="a55f4-546">Объект <see cref="T:System.Linq.IQueryable`1" />, для которого возвращается указанное значение, если последовательность пуста.</span><span class="sxs-lookup"><span data-stu-id="a55f4-546">The <see cref="T:System.Linq.IQueryable`1" /> to return the specified value for if empty.</span></span></param>
        <param name="defaultValue"><span data-ttu-id="a55f4-547">Значение, возвращаемое в случае пустой последовательности.</span><span class="sxs-lookup"><span data-stu-id="a55f4-547">The value to return if the sequence is empty.</span></span></param>
        <summary><span data-ttu-id="a55f4-548">Возвращает элементы указанной последовательности или одноэлементную коллекцию, содержащую указанное значение, если последовательность пуста.</span><span class="sxs-lookup"><span data-stu-id="a55f4-548">Returns the elements of the specified sequence or the specified value in a singleton collection if the sequence is empty.</span></span></summary>
        <returns><span data-ttu-id="a55f4-549">Объект <see cref="T:System.Linq.IQueryable`1" />, содержащий значение <paramref name="defaultValue" />, если последовательность <paramref name="source" /> пуста; в противном случае возвращается <paramref name="source" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-549">An <see cref="T:System.Linq.IQueryable`1" /> that contains <paramref name="defaultValue" /> if <paramref name="source" /> is empty; otherwise, <paramref name="source" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a55f4-550">Метод создает объект <xref:System.Linq.Expressions.MethodCallExpression> , который представляет вызов <xref:System.Linq.Queryable.DefaultIfEmpty%60%601%28System.Linq.IQueryable%7B%60%600%7D%2C%60%600%29> самого себя как сконструированного универсального метода. <xref:System.Linq.Queryable.DefaultIfEmpty%60%601%28System.Linq.IQueryable%7B%60%600%7D%2C%60%600%29></span><span class="sxs-lookup"><span data-stu-id="a55f4-550">The <xref:System.Linq.Queryable.DefaultIfEmpty%60%601%28System.Linq.IQueryable%7B%60%600%7D%2C%60%600%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.DefaultIfEmpty%60%601%28System.Linq.IQueryable%7B%60%600%7D%2C%60%600%29> itself as a constructed generic method.</span></span> <span data-ttu-id="a55f4-551">Затем <xref:System.Linq.Expressions.MethodCallExpression> он передает <xref:System.Linq.IQueryProvider> методу класса, представленного `source`свойствомпараметра <xref:System.Linq.IQueryable.Provider%2A> <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> .</span><span class="sxs-lookup"><span data-stu-id="a55f4-551">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="a55f4-552">Поведение запроса, которое происходит в результате выполнения дерева выражения, представляющего вызов <xref:System.Linq.Queryable.DefaultIfEmpty%60%601%28System.Linq.IQueryable%7B%60%600%7D%2C%60%600%29> , зависит от реализации типа `source` параметра.</span><span class="sxs-lookup"><span data-stu-id="a55f4-552">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.DefaultIfEmpty%60%601%28System.Linq.IQueryable%7B%60%600%7D%2C%60%600%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="a55f4-553">Ожидаемое поведение — возврат `source` , если он не пуст.</span><span class="sxs-lookup"><span data-stu-id="a55f4-553">The expected behavior is that it returns `source` if it is not empty.</span></span> <span data-ttu-id="a55f4-554">В противном случае возвращается <xref:System.Linq.IQueryable%601> объект, `defaultValue`содержащий.</span><span class="sxs-lookup"><span data-stu-id="a55f4-554">Otherwise, it returns an <xref:System.Linq.IQueryable%601> that contains `defaultValue`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a55f4-555">В следующем примере кода показана ситуация, в которой полезно вызывать <xref:System.Linq.Queryable.DefaultIfEmpty%60%601%28System.Linq.IQueryable%7B%60%600%7D%2C%60%600%29> [!INCLUDE[vbteclinq](~/includes/vbteclinq-md.md)] в запросе.</span><span class="sxs-lookup"><span data-stu-id="a55f4-555">The following code example shows a situation in which it is useful to call <xref:System.Linq.Queryable.DefaultIfEmpty%60%601%28System.Linq.IQueryable%7B%60%600%7D%2C%60%600%29> in a [!INCLUDE[vbteclinq](~/includes/vbteclinq-md.md)] query.</span></span> <span data-ttu-id="a55f4-556"><xref:System.Linq.Queryable.DefaultIfEmpty%60%601%28System.Linq.IQueryable%7B%60%600%7D%2C%60%600%29> В этом примере передается значение по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="a55f4-556">A default value is passed to <xref:System.Linq.Queryable.DefaultIfEmpty%60%601%28System.Linq.IQueryable%7B%60%600%7D%2C%60%600%29> in this example.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#25](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#25)]
 [!code-vb[System.Linq.Queryable#25](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#25)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a55f4-557"><paramref name="source" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-557"><paramref name="source" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Distinct&lt;TSource&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a55f4-558">Возвращает различающиеся элементы последовательности.</span><span class="sxs-lookup"><span data-stu-id="a55f4-558">Returns distinct elements from a sequence.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Distinct&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;TSource&gt; Distinct&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;!!TSource&gt; Distinct&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Distinct``1(System.Linq.IQueryable{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Distinct(Of TSource) (source As IQueryable(Of TSource)) As IQueryable(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;TSource&gt; ^ Distinct(System::Linq::IQueryable&lt;TSource&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Distinct : System.Linq.IQueryable&lt;'Source&gt; -&gt; System.Linq.IQueryable&lt;'Source&gt;" Usage="System.Linq.Queryable.Distinct source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="a55f4-559">Тип элементов последовательности <paramref name="source" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-559">The type of the elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="a55f4-560">Объект <see cref="T:System.Linq.IQueryable`1" />, из которого требуется удалить дубликаты.</span><span class="sxs-lookup"><span data-stu-id="a55f4-560">The <see cref="T:System.Linq.IQueryable`1" /> to remove duplicates from.</span></span></param>
        <summary><span data-ttu-id="a55f4-561">Возвращает различающиеся элементы последовательности, используя для сравнения значений компаратор проверки на равенство по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="a55f4-561">Returns distinct elements from a sequence by using the default equality comparer to compare values.</span></span></summary>
        <returns><span data-ttu-id="a55f4-562">Объект <see cref="T:System.Linq.IQueryable`1" />, содержащий различающиеся элементы из последовательности <paramref name="source" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-562">An <see cref="T:System.Linq.IQueryable`1" /> that contains distinct elements from <paramref name="source" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a55f4-563">Метод создает объект <xref:System.Linq.Expressions.MethodCallExpression> , который представляет вызов <xref:System.Linq.Queryable.Distinct%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> самого себя как сконструированного универсального метода. <xref:System.Linq.Queryable.Distinct%60%601%28System.Linq.IQueryable%7B%60%600%7D%29></span><span class="sxs-lookup"><span data-stu-id="a55f4-563">The <xref:System.Linq.Queryable.Distinct%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Distinct%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="a55f4-564">Затем <xref:System.Linq.Expressions.MethodCallExpression> он передает <xref:System.Linq.IQueryProvider> методу класса, представленного `source`свойствомпараметра <xref:System.Linq.IQueryable.Provider%2A> <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> .</span><span class="sxs-lookup"><span data-stu-id="a55f4-564">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="a55f4-565">Поведение запроса, которое происходит в результате выполнения дерева выражения, представляющего вызов <xref:System.Linq.Queryable.Distinct%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> , зависит от реализации типа `source` параметра.</span><span class="sxs-lookup"><span data-stu-id="a55f4-565">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Distinct%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="a55f4-566">Ожидаемое поведение заключается в том, что он возвращает неупорядоченную последовательность уникальных элементов в `source`.</span><span class="sxs-lookup"><span data-stu-id="a55f4-566">The expected behavior is that it returns an unordered sequence of the unique items in `source`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a55f4-567">В следующем примере кода показано, как использовать <xref:System.Linq.Queryable.Distinct%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> для возврата различных элементов из последовательности.</span><span class="sxs-lookup"><span data-stu-id="a55f4-567">The following code example demonstrates how to use <xref:System.Linq.Queryable.Distinct%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> to return distinct elements from a sequence.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#27](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#27)]
 [!code-vb[System.Linq.Queryable#27](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#27)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a55f4-568"><paramref name="source" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-568"><paramref name="source" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Distinct&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;TSource&gt; Distinct&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Collections.Generic.IEqualityComparer&lt;TSource&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;!!TSource&gt; Distinct&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Collections.Generic.IEqualityComparer`1&lt;!!TSource&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Distinct``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEqualityComparer{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Distinct(Of TSource) (source As IQueryable(Of TSource), comparer As IEqualityComparer(Of TSource)) As IQueryable(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;TSource&gt; ^ Distinct(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Collections::Generic::IEqualityComparer&lt;TSource&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member Distinct : System.Linq.IQueryable&lt;'Source&gt; * System.Collections.Generic.IEqualityComparer&lt;'Source&gt; -&gt; System.Linq.IQueryable&lt;'Source&gt;" Usage="System.Linq.Queryable.Distinct (source, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TSource&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="a55f4-569">Тип элементов <paramref name="source" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-569">The type of the elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="a55f4-570">Объект <see cref="T:System.Linq.IQueryable`1" />, из которого требуется удалить дубликаты.</span><span class="sxs-lookup"><span data-stu-id="a55f4-570">The <see cref="T:System.Linq.IQueryable`1" /> to remove duplicates from.</span></span></param>
        <param name="comparer"><span data-ttu-id="a55f4-571">Компаратор <see cref="T:System.Collections.Generic.IEqualityComparer`1" />, используемый для сравнения значений.</span><span class="sxs-lookup"><span data-stu-id="a55f4-571">An <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> to compare values.</span></span></param>
        <summary><span data-ttu-id="a55f4-572">Возвращает различающиеся элементы последовательности, используя для сравнения значений указанный компаратор <see cref="T:System.Collections.Generic.IEqualityComparer`1" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-572">Returns distinct elements from a sequence by using a specified <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> to compare values.</span></span></summary>
        <returns><span data-ttu-id="a55f4-573">Объект <see cref="T:System.Linq.IQueryable`1" />, содержащий различающиеся элементы из последовательности <paramref name="source" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-573">An <see cref="T:System.Linq.IQueryable`1" /> that contains distinct elements from <paramref name="source" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a55f4-574">Метод создает объект <xref:System.Linq.Expressions.MethodCallExpression> , который представляет вызов <xref:System.Linq.Queryable.Distinct%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%600%7D%29> самого себя как сконструированного универсального метода. <xref:System.Linq.Queryable.Distinct%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%600%7D%29></span><span class="sxs-lookup"><span data-stu-id="a55f4-574">The <xref:System.Linq.Queryable.Distinct%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%600%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Distinct%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%600%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="a55f4-575">Затем <xref:System.Linq.Expressions.MethodCallExpression> он передает <xref:System.Linq.IQueryProvider> методу класса, представленного `source`свойствомпараметра <xref:System.Linq.IQueryable.Provider%2A> <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> .</span><span class="sxs-lookup"><span data-stu-id="a55f4-575">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="a55f4-576">Поведение запроса, которое происходит в результате выполнения дерева выражения, представляющего вызов <xref:System.Linq.Queryable.Distinct%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%600%7D%29> , зависит от реализации типа `source` параметра.</span><span class="sxs-lookup"><span data-stu-id="a55f4-576">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Distinct%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%600%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="a55f4-577">Ожидаемое поведение заключается в том, что он возвращает неупорядоченную последовательность уникальных элементов в `source` с помощью `comparer` функции для сравнения значений.</span><span class="sxs-lookup"><span data-stu-id="a55f4-577">The expected behavior is that it returns an unordered sequence of the unique items in `source` by using `comparer` to compare values.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a55f4-578">Значение параметра <paramref name="source" /> или <paramref name="comparer" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-578"><paramref name="source" /> or <paramref name="comparer" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ElementAt&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static TSource ElementAt&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TSource ElementAt&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.ElementAt``1(System.Linq.IQueryable{``0},System.Int32)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ElementAt(Of TSource) (source As IQueryable(Of TSource), index As Integer) As TSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TSource ElementAt(System::Linq::IQueryable&lt;TSource&gt; ^ source, int index);" />
      <MemberSignature Language="F#" Value="static member ElementAt : System.Linq.IQueryable&lt;'Source&gt; * int -&gt; 'Source" Usage="System.Linq.Queryable.ElementAt (source, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TSource</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="a55f4-579">Тип элементов <paramref name="source" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-579">The type of the elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="a55f4-580">Объект <see cref="T:System.Linq.IQueryable`1" />, из которого требуется возвратить элемент.</span><span class="sxs-lookup"><span data-stu-id="a55f4-580">An <see cref="T:System.Linq.IQueryable`1" /> to return an element from.</span></span></param>
        <param name="index"><span data-ttu-id="a55f4-581">Отсчитываемый от нуля индекс извлекаемого элемента.</span><span class="sxs-lookup"><span data-stu-id="a55f4-581">The zero-based index of the element to retrieve.</span></span></param>
        <summary><span data-ttu-id="a55f4-582">Возвращает элемент по указанному индексу в последовательности.</span><span class="sxs-lookup"><span data-stu-id="a55f4-582">Returns the element at a specified index in a sequence.</span></span></summary>
        <returns><span data-ttu-id="a55f4-583">Элемент, находящийся в указанной позиции в последовательности <paramref name="source" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-583">The element at the specified position in <paramref name="source" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a55f4-584">Метод создает объект <xref:System.Linq.Expressions.MethodCallExpression> , который представляет вызов <xref:System.Linq.Queryable.ElementAt%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Int32%29> самого себя как сконструированного универсального метода. <xref:System.Linq.Queryable.ElementAt%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Int32%29></span><span class="sxs-lookup"><span data-stu-id="a55f4-584">The <xref:System.Linq.Queryable.ElementAt%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Int32%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.ElementAt%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Int32%29> itself as a constructed generic method.</span></span> <span data-ttu-id="a55f4-585">Затем <xref:System.Linq.Expressions.MethodCallExpression> он передает <xref:System.Linq.IQueryProvider> методу класса, представленного `source`свойствомпараметра <xref:System.Linq.IQueryable.Provider%2A> <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> .</span><span class="sxs-lookup"><span data-stu-id="a55f4-585">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="a55f4-586">Поведение запроса, которое происходит в результате выполнения дерева выражения, представляющего вызов <xref:System.Linq.Queryable.ElementAt%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Int32%29> , зависит от реализации типа `source` параметра.</span><span class="sxs-lookup"><span data-stu-id="a55f4-586">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.ElementAt%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Int32%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="a55f4-587">Ожидаемое поведение заключается в том, что он возвращает элемент `index` в `source`позиции в.</span><span class="sxs-lookup"><span data-stu-id="a55f4-587">The expected behavior is that it returns the item at position `index` in `source`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a55f4-588">В следующем примере кода показано, как использовать <xref:System.Linq.Queryable.ElementAt%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Int32%29> для возвращения элемента в определенной позиции последовательности.</span><span class="sxs-lookup"><span data-stu-id="a55f4-588">The following code example demonstrates how to use <xref:System.Linq.Queryable.ElementAt%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Int32%29> to return an element at a specific position in a sequence.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#28](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#28)]
 [!code-vb[System.Linq.Queryable#28](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#28)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a55f4-589">Свойство <paramref name="source" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-589"><paramref name="source" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="a55f4-590">Значение параметра <paramref name="index" /> меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="a55f4-590"><paramref name="index" /> is less than zero.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ElementAtOrDefault&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static TSource ElementAtOrDefault&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TSource ElementAtOrDefault&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.ElementAtOrDefault``1(System.Linq.IQueryable{``0},System.Int32)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ElementAtOrDefault(Of TSource) (source As IQueryable(Of TSource), index As Integer) As TSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TSource ElementAtOrDefault(System::Linq::IQueryable&lt;TSource&gt; ^ source, int index);" />
      <MemberSignature Language="F#" Value="static member ElementAtOrDefault : System.Linq.IQueryable&lt;'Source&gt; * int -&gt; 'Source" Usage="System.Linq.Queryable.ElementAtOrDefault (source, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TSource</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="a55f4-591">Тип элементов <paramref name="source" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-591">The type of the elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="a55f4-592">Объект <see cref="T:System.Linq.IQueryable`1" />, из которого требуется возвратить элемент.</span><span class="sxs-lookup"><span data-stu-id="a55f4-592">An <see cref="T:System.Linq.IQueryable`1" /> to return an element from.</span></span></param>
        <param name="index"><span data-ttu-id="a55f4-593">Отсчитываемый от нуля индекс извлекаемого элемента.</span><span class="sxs-lookup"><span data-stu-id="a55f4-593">The zero-based index of the element to retrieve.</span></span></param>
        <summary><span data-ttu-id="a55f4-594">Возвращает элемент по указанному индексу в последовательности или значение по умолчанию, если индекс вне допустимого диапазона.</span><span class="sxs-lookup"><span data-stu-id="a55f4-594">Returns the element at a specified index in a sequence or a default value if the index is out of range.</span></span></summary>
        <returns><span data-ttu-id="a55f4-595"><c>default</c>(<paramref name="TSource" />), если индекс <paramref name="index" /> находится вне <paramref name="source" />; в противном случае элемент, находящийся в указанной позиции в последовательности <paramref name="source" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-595"><c>default</c>(<paramref name="TSource" />) if <paramref name="index" /> is outside the bounds of <paramref name="source" />; otherwise, the element at the specified position in <paramref name="source" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a55f4-596">Метод создает объект <xref:System.Linq.Expressions.MethodCallExpression> , который представляет вызов <xref:System.Linq.Queryable.ElementAtOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Int32%29> самого себя как сконструированного универсального метода. <xref:System.Linq.Queryable.ElementAtOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Int32%29></span><span class="sxs-lookup"><span data-stu-id="a55f4-596">The <xref:System.Linq.Queryable.ElementAtOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Int32%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.ElementAtOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Int32%29> itself as a constructed generic method.</span></span> <span data-ttu-id="a55f4-597">Затем <xref:System.Linq.Expressions.MethodCallExpression> он передает <xref:System.Linq.IQueryProvider> методу класса, представленного `source`свойствомпараметра <xref:System.Linq.IQueryable.Provider%2A> <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> .</span><span class="sxs-lookup"><span data-stu-id="a55f4-597">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="a55f4-598">Поведение запроса, которое происходит в результате выполнения дерева выражения, представляющего вызов <xref:System.Linq.Queryable.ElementAtOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Int32%29> , зависит от реализации типа `source` параметра.</span><span class="sxs-lookup"><span data-stu-id="a55f4-598">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.ElementAtOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Int32%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="a55f4-599">Ожидаемое поведение заключается в том, что он возвращает элемент `index` в `source`позиции в `default(TSource)` , `index` или, если находится за пределами границ `source`.</span><span class="sxs-lookup"><span data-stu-id="a55f4-599">The expected behavior is that it returns the item at position `index` in `source`, or `default(TSource)` if `index` is outside the bounds of `source`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a55f4-600">В следующем примере кода демонстрируется использование метода <xref:System.Linq.Queryable.ElementAtOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Int32%29>.</span><span class="sxs-lookup"><span data-stu-id="a55f4-600">The following code example demonstrates how to use <xref:System.Linq.Queryable.ElementAtOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Int32%29>.</span></span> <span data-ttu-id="a55f4-601">В этом примере используется значение для `index` , находящееся за границами исходной последовательности.</span><span class="sxs-lookup"><span data-stu-id="a55f4-601">This example uses a value for `index` that is outside the bounds of the source sequence.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#29](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#29)]
 [!code-vb[System.Linq.Queryable#29](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#29)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a55f4-602"><paramref name="source" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-602"><paramref name="source" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Except&lt;TSource&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a55f4-603">Находит разность множеств, представленных двумя последовательностями.</span><span class="sxs-lookup"><span data-stu-id="a55f4-603">Produces the set difference of two sequences.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Except&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;TSource&gt; Except&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source1, System.Collections.Generic.IEnumerable&lt;TSource&gt; source2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;!!TSource&gt; Except&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source1, class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; source2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Except``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Except(Of TSource) (source1 As IQueryable(Of TSource), source2 As IEnumerable(Of TSource)) As IQueryable(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;TSource&gt; ^ Except(System::Linq::IQueryable&lt;TSource&gt; ^ source1, System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ source2);" />
      <MemberSignature Language="F#" Value="static member Except : System.Linq.IQueryable&lt;'Source&gt; * seq&lt;'Source&gt; -&gt; System.Linq.IQueryable&lt;'Source&gt;" Usage="System.Linq.Queryable.Except (source1, source2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source1" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="source2" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="a55f4-604">Тип элементов входных последовательностей.</span><span class="sxs-lookup"><span data-stu-id="a55f4-604">The type of the elements of the input sequences.</span></span></typeparam>
        <param name="source1"><span data-ttu-id="a55f4-605">Объект <see cref="T:System.Linq.IQueryable`1" />, из которого требуется извлечь элементы, отсутствующие в последовательности <paramref name="source2" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-605">An <see cref="T:System.Linq.IQueryable`1" /> whose elements that are not also in <paramref name="source2" /> will be returned.</span></span></param>
        <param name="source2"><span data-ttu-id="a55f4-606">Последовательность <see cref="T:System.Collections.Generic.IEnumerable`1" />, элементы которой, входящие также в первую последовательность, не будут включены в возвращаемую последовательность.</span><span class="sxs-lookup"><span data-stu-id="a55f4-606">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> whose elements that also occur in the first sequence will not appear in the returned sequence.</span></span></param>
        <summary><span data-ttu-id="a55f4-607">Находит разность множеств, представленных двумя последовательностями, используя для сравнения значений компаратор проверки на равенство по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="a55f4-607">Produces the set difference of two sequences by using the default equality comparer to compare values.</span></span></summary>
        <returns><span data-ttu-id="a55f4-608">Объект <see cref="T:System.Linq.IQueryable`1" />, являющийся разностью двух последовательностей как множеств.</span><span class="sxs-lookup"><span data-stu-id="a55f4-608">An <see cref="T:System.Linq.IQueryable`1" /> that contains the set difference of the two sequences.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a55f4-609">Метод создает объект <xref:System.Linq.Expressions.MethodCallExpression> , который представляет вызов <xref:System.Linq.Queryable.Except%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%29> самого себя как сконструированного универсального метода. <xref:System.Linq.Queryable.Except%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%29></span><span class="sxs-lookup"><span data-stu-id="a55f4-609">The <xref:System.Linq.Queryable.Except%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Except%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="a55f4-610">Затем <xref:System.Linq.Expressions.MethodCallExpression> он передает <xref:System.Linq.IQueryProvider> методу класса, представленного`source1`свойствомпараметра <xref:System.Linq.IQueryable.Provider%2A> <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> .</span><span class="sxs-lookup"><span data-stu-id="a55f4-610">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the`source1` parameter.</span></span>  
  
 <span data-ttu-id="a55f4-611">Поведение запроса, которое происходит в результате выполнения дерева выражения, представляющего вызов <xref:System.Linq.Queryable.Except%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%29> , зависит от реализации типа `source1` параметра.</span><span class="sxs-lookup"><span data-stu-id="a55f4-611">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Except%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%29> depends on the implementation of the type of  the `source1` parameter.</span></span> <span data-ttu-id="a55f4-612">Ожидаемое поведение заключается в том, что все `source1` элементы в возвращаются, за исключением тех, `source2`которые также входят в.</span><span class="sxs-lookup"><span data-stu-id="a55f4-612">The expected behavior is that all the elements in `source1` are returned except for those that are also in `source2`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a55f4-613">В следующем примере кода показано, как использовать <xref:System.Linq.Queryable.Except%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%29> для возврата элементов, которые отображаются только в первой исходной последовательности.</span><span class="sxs-lookup"><span data-stu-id="a55f4-613">The following code example demonstrates how to use <xref:System.Linq.Queryable.Except%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%29> to return those elements that only appear in the first source sequence.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#34](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#34)]
 [!code-vb[System.Linq.Queryable#34](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#34)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a55f4-614">Значение параметра <paramref name="source1" /> или <paramref name="source2" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-614"><paramref name="source1" /> or <paramref name="source2" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Except&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;TSource&gt; Except&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source1, System.Collections.Generic.IEnumerable&lt;TSource&gt; source2, System.Collections.Generic.IEqualityComparer&lt;TSource&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;!!TSource&gt; Except&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source1, class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; source2, class System.Collections.Generic.IEqualityComparer`1&lt;!!TSource&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Except``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Except(Of TSource) (source1 As IQueryable(Of TSource), source2 As IEnumerable(Of TSource), comparer As IEqualityComparer(Of TSource)) As IQueryable(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;TSource&gt; ^ Except(System::Linq::IQueryable&lt;TSource&gt; ^ source1, System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ source2, System::Collections::Generic::IEqualityComparer&lt;TSource&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member Except : System.Linq.IQueryable&lt;'Source&gt; * seq&lt;'Source&gt; * System.Collections.Generic.IEqualityComparer&lt;'Source&gt; -&gt; System.Linq.IQueryable&lt;'Source&gt;" Usage="System.Linq.Queryable.Except (source1, source2, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source1" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="source2" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TSource&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="a55f4-615">Тип элементов входных последовательностей.</span><span class="sxs-lookup"><span data-stu-id="a55f4-615">The type of the elements of the input sequences.</span></span></typeparam>
        <param name="source1"><span data-ttu-id="a55f4-616">Объект <see cref="T:System.Linq.IQueryable`1" />, из которого требуется извлечь элементы, отсутствующие в последовательности <paramref name="source2" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-616">An <see cref="T:System.Linq.IQueryable`1" /> whose elements that are not also in <paramref name="source2" /> will be returned.</span></span></param>
        <param name="source2"><span data-ttu-id="a55f4-617">Последовательность <see cref="T:System.Collections.Generic.IEnumerable`1" />, элементы которой, входящие также в первую последовательность, не будут включены в возвращаемую последовательность.</span><span class="sxs-lookup"><span data-stu-id="a55f4-617">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> whose elements that also occur in the first sequence will not appear in the returned sequence.</span></span></param>
        <param name="comparer"><span data-ttu-id="a55f4-618">Компаратор <see cref="T:System.Collections.Generic.IEqualityComparer`1" />, используемый для сравнения значений.</span><span class="sxs-lookup"><span data-stu-id="a55f4-618">An <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> to compare values.</span></span></param>
        <summary><span data-ttu-id="a55f4-619">Находит разность множеств, представленных двумя последовательностями, используя для сравнения значений указанный компаратор <see cref="T:System.Collections.Generic.IEqualityComparer`1" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-619">Produces the set difference of two sequences by using the specified <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> to compare values.</span></span></summary>
        <returns><span data-ttu-id="a55f4-620">Объект <see cref="T:System.Linq.IQueryable`1" />, являющийся разностью двух последовательностей как множеств.</span><span class="sxs-lookup"><span data-stu-id="a55f4-620">An <see cref="T:System.Linq.IQueryable`1" /> that contains the set difference of the two sequences.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a55f4-621">Метод создает объект <xref:System.Linq.Expressions.MethodCallExpression> , который представляет вызов <xref:System.Linq.Queryable.Except%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%600%7D%29> самого себя как сконструированного универсального метода. <xref:System.Linq.Queryable.Except%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%600%7D%29></span><span class="sxs-lookup"><span data-stu-id="a55f4-621">The <xref:System.Linq.Queryable.Except%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%600%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Except%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%600%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="a55f4-622">Затем <xref:System.Linq.Expressions.MethodCallExpression> он передает <xref:System.Linq.IQueryProvider> методу класса, представленного`source1`свойствомпараметра <xref:System.Linq.IQueryable.Provider%2A> <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> .</span><span class="sxs-lookup"><span data-stu-id="a55f4-622">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the`source1` parameter.</span></span>  
  
 <span data-ttu-id="a55f4-623">Поведение запроса, которое происходит в результате выполнения дерева выражения, представляющего вызов <xref:System.Linq.Queryable.Except%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%600%7D%29> , зависит от реализации типа `source1` параметра.</span><span class="sxs-lookup"><span data-stu-id="a55f4-623">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Except%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%600%7D%29> depends on the implementation of the type of the `source1` parameter.</span></span> <span data-ttu-id="a55f4-624">Ожидаемое поведение заключается в том, что все `source1` элементы в возвращаются, за исключением тех, `source2`которые также `comparer` находятся в и используются для сравнения значений.</span><span class="sxs-lookup"><span data-stu-id="a55f4-624">The expected behavior is that all the elements in `source1` are returned except for those that are also in `source2`, and `comparer` is used to compare values.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a55f4-625">Параметр <paramref name="source1" /> или <paramref name="source2" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-625"><paramref name="source1" /> or <paramref name="source2" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="First&lt;TSource&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a55f4-626">Возвращает первый элемент последовательности.</span><span class="sxs-lookup"><span data-stu-id="a55f4-626">Returns the first element of a sequence.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="First&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static TSource First&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TSource First&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.First``1(System.Linq.IQueryable{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function First(Of TSource) (source As IQueryable(Of TSource)) As TSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TSource First(System::Linq::IQueryable&lt;TSource&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member First : System.Linq.IQueryable&lt;'Source&gt; -&gt; 'Source" Usage="System.Linq.Queryable.First source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TSource</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="a55f4-627">Тип элементов <paramref name="source" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-627">The type of the elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="a55f4-628">Объект <see cref="T:System.Linq.IQueryable`1" />, первый элемент которого требуется возвратить.</span><span class="sxs-lookup"><span data-stu-id="a55f4-628">The <see cref="T:System.Linq.IQueryable`1" /> to return the first element of.</span></span></param>
        <summary><span data-ttu-id="a55f4-629">Возвращает первый элемент последовательности.</span><span class="sxs-lookup"><span data-stu-id="a55f4-629">Returns the first element of a sequence.</span></span></summary>
        <returns><span data-ttu-id="a55f4-630">Первый элемент последовательности <paramref name="source" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-630">The first element in <paramref name="source" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a55f4-631">Метод создает объект <xref:System.Linq.Expressions.MethodCallExpression> , который представляет вызов <xref:System.Linq.Queryable.First%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> самого себя как сконструированного универсального метода. <xref:System.Linq.Queryable.First%60%601%28System.Linq.IQueryable%7B%60%600%7D%29></span><span class="sxs-lookup"><span data-stu-id="a55f4-631">The <xref:System.Linq.Queryable.First%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.First%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="a55f4-632">Затем <xref:System.Linq.Expressions.MethodCallExpression> он передает <xref:System.Linq.IQueryProvider> методу класса, представленного `source`свойствомпараметра <xref:System.Linq.IQueryable.Provider%2A> <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> .</span><span class="sxs-lookup"><span data-stu-id="a55f4-632">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="a55f4-633">Поведение запроса, которое происходит в результате выполнения дерева выражения, представляющего вызов <xref:System.Linq.Queryable.First%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> , зависит от реализации типа `source` параметра.</span><span class="sxs-lookup"><span data-stu-id="a55f4-633">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.First%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="a55f4-634">Ожидаемое поведение заключается в том, что он возвращает первый `source`элемент в.</span><span class="sxs-lookup"><span data-stu-id="a55f4-634">The expected behavior is that it returns the first element in `source`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a55f4-635">В следующем примере кода показано, как использовать <xref:System.Linq.Queryable.First%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> для возврата первого элемента последовательности.</span><span class="sxs-lookup"><span data-stu-id="a55f4-635">The following code example demonstrates how to use <xref:System.Linq.Queryable.First%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> to return the first element in a sequence.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#35](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#35)]
 [!code-vb[System.Linq.Queryable#35](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#35)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a55f4-636"><paramref name="source" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-636"><paramref name="source" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a55f4-637">Исходная последовательность пуста.</span><span class="sxs-lookup"><span data-stu-id="a55f4-637">The source sequence is empty.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="First&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static TSource First&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,bool&gt;&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TSource First&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, bool&gt;&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.First``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function First(Of TSource) (source As IQueryable(Of TSource), predicate As Expression(Of Func(Of TSource, Boolean))) As TSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TSource First(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, bool&gt; ^&gt; ^ predicate);" />
      <MemberSignature Language="F#" Value="static member First : System.Linq.IQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, bool&gt;&gt; -&gt; 'Source" Usage="System.Linq.Queryable.First (source, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TSource</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,System.Boolean&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="a55f4-638">Тип элементов <paramref name="source" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-638">The type of the elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="a55f4-639">Объект <see cref="T:System.Linq.IQueryable`1" />, из которого требуется возвратить элемент.</span><span class="sxs-lookup"><span data-stu-id="a55f4-639">An <see cref="T:System.Linq.IQueryable`1" /> to return an element from.</span></span></param>
        <param name="predicate"><span data-ttu-id="a55f4-640">Функция для проверки каждого элемента на соответствие условию.</span><span class="sxs-lookup"><span data-stu-id="a55f4-640">A function to test each element for a condition.</span></span></param>
        <summary><span data-ttu-id="a55f4-641">Возвращает первый элемент последовательности, удовлетворяющий указанному условию.</span><span class="sxs-lookup"><span data-stu-id="a55f4-641">Returns the first element of a sequence that satisfies a specified condition.</span></span></summary>
        <returns><span data-ttu-id="a55f4-642">Первый элемент последовательности <paramref name="source" />, прошедший проверку с помощью предиката <paramref name="predicate" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-642">The first element in <paramref name="source" /> that passes the test in <paramref name="predicate" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a55f4-643">Этот метод имеет по крайней мере один параметр <xref:System.Linq.Expressions.Expression%601> типа, аргумент типа которого является одним <xref:System.Func%602> из типов.</span><span class="sxs-lookup"><span data-stu-id="a55f4-643">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="a55f4-644">Для этих параметров можно передать лямбда-выражение, которое будет скомпилировано в <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="a55f4-644">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="a55f4-645">Метод создает объект <xref:System.Linq.Expressions.MethodCallExpression> , который представляет вызов <xref:System.Linq.Queryable.First%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> самого себя как сконструированного универсального метода. <xref:System.Linq.Queryable.First%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29></span><span class="sxs-lookup"><span data-stu-id="a55f4-645">The <xref:System.Linq.Queryable.First%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.First%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="a55f4-646">Затем <xref:System.Linq.Expressions.MethodCallExpression> он передает <xref:System.Linq.IQueryProvider> методу класса, представленного `source`свойствомпараметра <xref:System.Linq.IQueryable.Provider%2A> <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> .</span><span class="sxs-lookup"><span data-stu-id="a55f4-646">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="a55f4-647">Поведение запроса, которое происходит в результате выполнения дерева выражения, представляющего вызов <xref:System.Linq.Queryable.First%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> , зависит от реализации типа `source` параметра.</span><span class="sxs-lookup"><span data-stu-id="a55f4-647">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.First%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="a55f4-648">Ожидаемое поведение заключается в том, что он возвращает первый `source` элемент в, удовлетворяющий условию `predicate`, заданному параметром.</span><span class="sxs-lookup"><span data-stu-id="a55f4-648">The expected behavior is that it returns the first element in `source` that satisfies the condition specified by `predicate`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a55f4-649">В следующем примере кода показано, как использовать <xref:System.Linq.Queryable.First%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> для возврата первого элемента последовательности, удовлетворяющей условию.</span><span class="sxs-lookup"><span data-stu-id="a55f4-649">The following code example demonstrates how to use <xref:System.Linq.Queryable.First%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> to return the first element of a sequence that satisfies a condition.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#36](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#36)]
 [!code-vb[System.Linq.Queryable#36](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#36)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a55f4-650">Параметр <paramref name="source" /> или <paramref name="predicate" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-650"><paramref name="source" /> or <paramref name="predicate" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a55f4-651">Ни один элемент не удовлетворяет условию предиката <paramref name="predicate" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-651">No element satisfies the condition in <paramref name="predicate" />.</span></span>  
  
<span data-ttu-id="a55f4-652">- или -</span><span class="sxs-lookup"><span data-stu-id="a55f4-652">-or-</span></span> 
<span data-ttu-id="a55f4-653">Исходная последовательность пуста.</span><span class="sxs-lookup"><span data-stu-id="a55f4-653">The source sequence is empty.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="FirstOrDefault&lt;TSource&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a55f4-654">Возвращает первый элемент последовательности или значение по умолчанию, если ни одного элемента не найдено.</span><span class="sxs-lookup"><span data-stu-id="a55f4-654">Returns the first element of a sequence, or a default value if no element is found.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FirstOrDefault&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static TSource FirstOrDefault&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TSource FirstOrDefault&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.FirstOrDefault``1(System.Linq.IQueryable{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function FirstOrDefault(Of TSource) (source As IQueryable(Of TSource)) As TSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TSource FirstOrDefault(System::Linq::IQueryable&lt;TSource&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member FirstOrDefault : System.Linq.IQueryable&lt;'Source&gt; -&gt; 'Source" Usage="System.Linq.Queryable.FirstOrDefault source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TSource</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="a55f4-655">Тип элементов <paramref name="source" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-655">The type of the elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="a55f4-656">Объект <see cref="T:System.Linq.IQueryable`1" />, первый элемент которого требуется возвратить.</span><span class="sxs-lookup"><span data-stu-id="a55f4-656">The <see cref="T:System.Linq.IQueryable`1" /> to return the first element of.</span></span></param>
        <summary><span data-ttu-id="a55f4-657">Возвращает первый элемент последовательности или значение по умолчанию, если последовательность не содержит элементов.</span><span class="sxs-lookup"><span data-stu-id="a55f4-657">Returns the first element of a sequence, or a default value if the sequence contains no elements.</span></span></summary>
        <returns><span data-ttu-id="a55f4-658"><c>default</c>(<paramref name="TSource" />), если последовательность <paramref name="source" /> пуста; в противном случае первый элемент последовательности <paramref name="source" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-658"><c>default</c>(<paramref name="TSource" />) if <paramref name="source" /> is empty; otherwise, the first element in <paramref name="source" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a55f4-659">Метод создает объект <xref:System.Linq.Expressions.MethodCallExpression> , который представляет вызов <xref:System.Linq.Queryable.FirstOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> самого себя как сконструированного универсального метода. <xref:System.Linq.Queryable.FirstOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%29></span><span class="sxs-lookup"><span data-stu-id="a55f4-659">The <xref:System.Linq.Queryable.FirstOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.FirstOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="a55f4-660">Затем <xref:System.Linq.Expressions.MethodCallExpression> он передает <xref:System.Linq.IQueryProvider> методу класса, представленного `source`свойствомпараметра <xref:System.Linq.IQueryable.Provider%2A> <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> .</span><span class="sxs-lookup"><span data-stu-id="a55f4-660">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="a55f4-661">Поведение запроса, которое происходит в результате выполнения дерева выражения, представляющего вызов <xref:System.Linq.Queryable.FirstOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> , зависит от реализации типа `source` параметра.</span><span class="sxs-lookup"><span data-stu-id="a55f4-661">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.FirstOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="a55f4-662">Ожидаемое поведение заключается в том, что он возвращает первый `source`элемент в или значение по умолчанию, если `source` пуст.</span><span class="sxs-lookup"><span data-stu-id="a55f4-662">The expected behavior is that it returns the first element in `source`, or a default value if `source` is empty.</span></span>  
  
 <span data-ttu-id="a55f4-663">Метод не предоставляет способ указания значения по умолчанию, возвращаемого, если `source` пуст. <xref:System.Linq.Queryable.FirstOrDefault%2A></span><span class="sxs-lookup"><span data-stu-id="a55f4-663">The <xref:System.Linq.Queryable.FirstOrDefault%2A> method does not provide a way to specify the default value to return if `source` is empty.</span></span> <span data-ttu-id="a55f4-664">Если вы хотите указать значение по умолчанию, отличное `default(TSource)`от, <xref:System.Linq.Queryable.DefaultIfEmpty%60%601%28System.Linq.IQueryable%7B%60%600%7D%2C%60%600%29> используйте метод, как описано в разделе "пример".</span><span class="sxs-lookup"><span data-stu-id="a55f4-664">If you want to specify a default value other than `default(TSource)`, use the <xref:System.Linq.Queryable.DefaultIfEmpty%60%601%28System.Linq.IQueryable%7B%60%600%7D%2C%60%600%29> method as described in the Example section.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a55f4-665">В следующем примере кода показано, как использовать <xref:System.Linq.Queryable.FirstOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> для пустой последовательности.</span><span class="sxs-lookup"><span data-stu-id="a55f4-665">The following code example demonstrates how to use <xref:System.Linq.Queryable.FirstOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> on an empty sequence.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#37](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#37)]
 [!code-vb[System.Linq.Queryable#37](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#37)]  
  
 <span data-ttu-id="a55f4-666">Иногда значение `default(TSource)` не является значением по умолчанию, которое вы хотите использовать, если коллекция не содержит элементов.</span><span class="sxs-lookup"><span data-stu-id="a55f4-666">Sometimes the value of `default(TSource)` is not the default value that you want to use if the collection contains no elements.</span></span> <span data-ttu-id="a55f4-667">Вместо того чтобы проверять результат для нежелательного значения по умолчанию и затем менять его при необходимости, можно <xref:System.Linq.Queryable.DefaultIfEmpty%60%601%28System.Linq.IQueryable%7B%60%600%7D%2C%60%600%29> использовать метод, чтобы указать значение по умолчанию, которое будет использоваться, если коллекция пуста.</span><span class="sxs-lookup"><span data-stu-id="a55f4-667">Instead of checking the result for the unwanted default value and then changing it if necessary, you can use the <xref:System.Linq.Queryable.DefaultIfEmpty%60%601%28System.Linq.IQueryable%7B%60%600%7D%2C%60%600%29> method to specify the default value that you want to use if the collection is empty.</span></span> <span data-ttu-id="a55f4-668">Затем вызовите <xref:System.Linq.Queryable.First%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> метод, чтобы получить первый элемент.</span><span class="sxs-lookup"><span data-stu-id="a55f4-668">Then, call <xref:System.Linq.Queryable.First%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> to obtain the first element.</span></span> <span data-ttu-id="a55f4-669">В следующем примере кода используются оба способа получения значения по умолчанию, равного 1, если коллекция числовых месяцев пуста.</span><span class="sxs-lookup"><span data-stu-id="a55f4-669">The following code example uses both techniques to obtain a default value of 1 if a collection of numeric months is empty.</span></span> <span data-ttu-id="a55f4-670">Поскольку значение по умолчанию для целого числа равно 0, которое не соответствует ни одному месяцу, значение по умолчанию должно быть равно 1.</span><span class="sxs-lookup"><span data-stu-id="a55f4-670">Because the default value for an integer is 0, which does not correspond to any month, the default value must be specified as 1 instead.</span></span> <span data-ttu-id="a55f4-671">Первая результирующая переменная проверяется на наличие нежелательного значения по умолчанию после завершения запроса.</span><span class="sxs-lookup"><span data-stu-id="a55f4-671">The first result variable is checked for the unwanted default value after the query is completed.</span></span> <span data-ttu-id="a55f4-672">Вторая результирующая переменная получается путем вызова <xref:System.Linq.Queryable.DefaultIfEmpty%60%601%28System.Linq.IQueryable%7B%60%600%7D%2C%60%600%29> метода для указания значения по умолчанию 1.</span><span class="sxs-lookup"><span data-stu-id="a55f4-672">The second result variable is obtained by calling <xref:System.Linq.Queryable.DefaultIfEmpty%60%601%28System.Linq.IQueryable%7B%60%600%7D%2C%60%600%29> to specify a default value of 1.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#131](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#131)]
 [!code-vb[System.Linq.Queryable#131](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#131)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a55f4-673">Свойство <paramref name="source" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-673"><paramref name="source" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="FirstOrDefault&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static TSource FirstOrDefault&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,bool&gt;&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TSource FirstOrDefault&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, bool&gt;&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.FirstOrDefault``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function FirstOrDefault(Of TSource) (source As IQueryable(Of TSource), predicate As Expression(Of Func(Of TSource, Boolean))) As TSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TSource FirstOrDefault(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, bool&gt; ^&gt; ^ predicate);" />
      <MemberSignature Language="F#" Value="static member FirstOrDefault : System.Linq.IQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, bool&gt;&gt; -&gt; 'Source" Usage="System.Linq.Queryable.FirstOrDefault (source, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TSource</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,System.Boolean&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="a55f4-674">Тип элементов <paramref name="source" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-674">The type of the elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="a55f4-675">Объект <see cref="T:System.Linq.IQueryable`1" />, из которого требуется возвратить элемент.</span><span class="sxs-lookup"><span data-stu-id="a55f4-675">An <see cref="T:System.Linq.IQueryable`1" /> to return an element from.</span></span></param>
        <param name="predicate"><span data-ttu-id="a55f4-676">Функция для проверки каждого элемента на соответствие условию.</span><span class="sxs-lookup"><span data-stu-id="a55f4-676">A function to test each element for a condition.</span></span></param>
        <summary><span data-ttu-id="a55f4-677">Возвращает первый элемент последовательности, удовлетворяющий указанному условию, или значение по умолчанию, если ни одного такого элемента не найдено.</span><span class="sxs-lookup"><span data-stu-id="a55f4-677">Returns the first element of a sequence that satisfies a specified condition or a default value if no such element is found.</span></span></summary>
        <returns><span data-ttu-id="a55f4-678"><c>default</c>(<paramref name="TSource" />), если последовательность <paramref name="source" /> пуста или ни один ее элемент не прошел проверку, определенную предикатом <paramref name="predicate" />; в противном случае первый элемент последовательности <paramref name="source" />, прошедший проверку, определенную предикатом <paramref name="predicate" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-678"><c>default</c>(<paramref name="TSource" />) if <paramref name="source" /> is empty or if no element passes the test specified by <paramref name="predicate" />; otherwise, the first element in <paramref name="source" /> that passes the test specified by <paramref name="predicate" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a55f4-679">Этот метод имеет по крайней мере один параметр <xref:System.Linq.Expressions.Expression%601> типа, аргумент типа которого является одним <xref:System.Func%602> из типов.</span><span class="sxs-lookup"><span data-stu-id="a55f4-679">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="a55f4-680">Для этих параметров можно передать лямбда-выражение, которое будет скомпилировано в <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="a55f4-680">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="a55f4-681">Метод создает объект <xref:System.Linq.Expressions.MethodCallExpression> , который представляет вызов <xref:System.Linq.Queryable.FirstOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> самого себя как сконструированного универсального метода. <xref:System.Linq.Queryable.FirstOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29></span><span class="sxs-lookup"><span data-stu-id="a55f4-681">The <xref:System.Linq.Queryable.FirstOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.FirstOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="a55f4-682">Затем <xref:System.Linq.Expressions.MethodCallExpression> он передает <xref:System.Linq.IQueryProvider> методу класса, представленного `source`свойствомпараметра <xref:System.Linq.IQueryable.Provider%2A> <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> .</span><span class="sxs-lookup"><span data-stu-id="a55f4-682">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="a55f4-683">Поведение запроса, которое происходит в результате выполнения дерева выражения, представляющего вызов <xref:System.Linq.Queryable.FirstOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> , зависит от реализации типа `source` параметра.</span><span class="sxs-lookup"><span data-stu-id="a55f4-683">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.FirstOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="a55f4-684">Ожидаемое поведение заключается в том, что он возвращает первый `source` элемент в, удовлетворяющий `predicate`условию, или значение по умолчанию, если ни один элемент не удовлетворяет условию.</span><span class="sxs-lookup"><span data-stu-id="a55f4-684">The expected behavior is that it returns the first element in `source` that satisfies the condition in `predicate`, or a default value if no element satisfies the condition.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a55f4-685">В следующем примере кода показано, как использовать <xref:System.Linq.Queryable.FirstOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> , передав предикату.</span><span class="sxs-lookup"><span data-stu-id="a55f4-685">The following code example demonstrates how to use <xref:System.Linq.Queryable.FirstOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> by passing in a predicate.</span></span> <span data-ttu-id="a55f4-686">Во втором запросе отсутствует элемент в последовательности, удовлетворяющей условию.</span><span class="sxs-lookup"><span data-stu-id="a55f4-686">In the second query, there is no element in the sequence that satisfies the condition.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#38](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#38)]
 [!code-vb[System.Linq.Queryable#38](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#38)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a55f4-687">Значение параметра <paramref name="source" /> или <paramref name="predicate" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-687"><paramref name="source" /> or <paramref name="predicate" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GroupBy&lt;TSource,TKey&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a55f4-688">Группирует элементы последовательности.</span><span class="sxs-lookup"><span data-stu-id="a55f4-688">Groups the elements of a sequence.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GroupBy&lt;TSource,TKey&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;System.Linq.IGrouping&lt;TKey,TSource&gt;&gt; GroupBy&lt;TSource,TKey&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,TKey&gt;&gt; keySelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;class System.Linq.IGrouping`2&lt;!!TKey, !!TSource&gt;&gt; GroupBy&lt;TSource, TKey&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, !!TKey&gt;&gt; keySelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.GroupBy``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GroupBy(Of TSource, TKey) (source As IQueryable(Of TSource), keySelector As Expression(Of Func(Of TSource, TKey))) As IQueryable(Of IGrouping(Of TKey, TSource))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;System::Linq::IGrouping&lt;TKey, TSource&gt; ^&gt; ^ GroupBy(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, TKey&gt; ^&gt; ^ keySelector);" />
      <MemberSignature Language="F#" Value="static member GroupBy : System.Linq.IQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, 'Key&gt;&gt; -&gt; System.Linq.IQueryable&lt;System.Linq.IGrouping&lt;'Key, 'Source&gt;&gt;" Usage="System.Linq.Queryable.GroupBy (source, keySelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;System.Linq.IGrouping&lt;TKey,TSource&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,TKey&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="a55f4-689">Тип элементов <paramref name="source" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-689">The type of the elements of <paramref name="source" />.</span></span></typeparam>
        <typeparam name="TKey"><span data-ttu-id="a55f4-690">Тип ключа, возвращаемого функцией, заданной параметром <paramref name="keySelector" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-690">The type of the key returned by the function represented in <paramref name="keySelector" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="a55f4-691">Объект <see cref="T:System.Linq.IQueryable`1" />, элементы которого следует сгруппировать.</span><span class="sxs-lookup"><span data-stu-id="a55f4-691">An <see cref="T:System.Linq.IQueryable`1" /> whose elements to group.</span></span></param>
        <param name="keySelector"><span data-ttu-id="a55f4-692">Функция, извлекающая ключ для каждого элемента.</span><span class="sxs-lookup"><span data-stu-id="a55f4-692">A function to extract the key for each element.</span></span></param>
        <summary><span data-ttu-id="a55f4-693">Группирует элементы последовательности в соответствии с заданной функцией селектора ключа.</span><span class="sxs-lookup"><span data-stu-id="a55f4-693">Groups the elements of a sequence according to a specified key selector function.</span></span></summary>
        <returns><span data-ttu-id="a55f4-694">Объект <c>IQueryable&lt;IGrouping&lt;TKey, TSource&gt;&gt;</c> в C# или <c>IQueryable(Of IGrouping(Of TKey, TSource))</c> в Visual Basic, где каждый объект <see cref="T:System.Linq.IGrouping`2" /> содержит последовательность объектов и ключ.</span><span class="sxs-lookup"><span data-stu-id="a55f4-694">An <c>IQueryable&lt;IGrouping&lt;TKey, TSource&gt;&gt;</c> in C# or <c>IQueryable(Of IGrouping(Of TKey, TSource))</c> in Visual Basic where each <see cref="T:System.Linq.IGrouping`2" /> object contains a sequence of objects and a key.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a55f4-695">Этот метод имеет по крайней мере один параметр <xref:System.Linq.Expressions.Expression%601> типа, аргумент типа которого является одним <xref:System.Func%602> из типов.</span><span class="sxs-lookup"><span data-stu-id="a55f4-695">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="a55f4-696">Для этих параметров можно передать лямбда-выражение, которое будет скомпилировано в <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="a55f4-696">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="a55f4-697">Метод создает объект <xref:System.Linq.Expressions.MethodCallExpression> , который представляет вызов <xref:System.Linq.Queryable.GroupBy%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> самого себя как сконструированного универсального метода. <xref:System.Linq.Queryable.GroupBy%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29></span><span class="sxs-lookup"><span data-stu-id="a55f4-697">The <xref:System.Linq.Queryable.GroupBy%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.GroupBy%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="a55f4-698">Затем <xref:System.Linq.Expressions.MethodCallExpression> он передает <xref:System.Linq.IQueryProvider> методу класса, представленного `source`свойствомпараметра <xref:System.Linq.IQueryable.Provider%2A> <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> .</span><span class="sxs-lookup"><span data-stu-id="a55f4-698">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="a55f4-699">Поведение запроса, которое происходит в результате выполнения дерева выражения, представляющего вызов <xref:System.Linq.Queryable.GroupBy%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> , зависит от реализации типа `source` параметра.</span><span class="sxs-lookup"><span data-stu-id="a55f4-699">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.GroupBy%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="a55f4-700">Ожидаемое поведение заключается в том, что он группирует `source` элементы по значению ключа, полученному путем `keySelector` вызова для каждого элемента.</span><span class="sxs-lookup"><span data-stu-id="a55f4-700">The expected behavior is that it groups the elements of `source` by a key value that is obtained by invoking `keySelector` on each element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a55f4-701">В следующем примере кода показано, как использовать <xref:System.Linq.Queryable.GroupBy%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> для группирования элементов последовательности.</span><span class="sxs-lookup"><span data-stu-id="a55f4-701">The following code example demonstrates how to use <xref:System.Linq.Queryable.GroupBy%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> to group the elements of a sequence.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#14)]
 [!code-vb[System.Linq.Queryable#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a55f4-702">Значение параметра <paramref name="source" /> или <paramref name="keySelector" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-702"><paramref name="source" /> or <paramref name="keySelector" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GroupBy&lt;TSource,TKey&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;System.Linq.IGrouping&lt;TKey,TSource&gt;&gt; GroupBy&lt;TSource,TKey&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,TKey&gt;&gt; keySelector, System.Collections.Generic.IEqualityComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;class System.Linq.IGrouping`2&lt;!!TKey, !!TSource&gt;&gt; GroupBy&lt;TSource, TKey&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, !!TKey&gt;&gt; keySelector, class System.Collections.Generic.IEqualityComparer`1&lt;!!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.GroupBy``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEqualityComparer{``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GroupBy(Of TSource, TKey) (source As IQueryable(Of TSource), keySelector As Expression(Of Func(Of TSource, TKey)), comparer As IEqualityComparer(Of TKey)) As IQueryable(Of IGrouping(Of TKey, TSource))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;System::Linq::IGrouping&lt;TKey, TSource&gt; ^&gt; ^ GroupBy(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, TKey&gt; ^&gt; ^ keySelector, System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member GroupBy : System.Linq.IQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, 'Key&gt;&gt; * System.Collections.Generic.IEqualityComparer&lt;'Key&gt; -&gt; System.Linq.IQueryable&lt;System.Linq.IGrouping&lt;'Key, 'Source&gt;&gt;" Usage="System.Linq.Queryable.GroupBy (source, keySelector, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;System.Linq.IGrouping&lt;TKey,TSource&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,TKey&gt;&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="a55f4-703">Тип элементов <paramref name="source" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-703">The type of the elements of <paramref name="source" />.</span></span></typeparam>
        <typeparam name="TKey"><span data-ttu-id="a55f4-704">Тип ключа, возвращаемого функцией, заданной параметром <paramref name="keySelector" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-704">The type of the key returned by the function represented in <paramref name="keySelector" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="a55f4-705">Объект <see cref="T:System.Linq.IQueryable`1" />, элементы которого следует сгруппировать.</span><span class="sxs-lookup"><span data-stu-id="a55f4-705">An <see cref="T:System.Linq.IQueryable`1" /> whose elements to group.</span></span></param>
        <param name="keySelector"><span data-ttu-id="a55f4-706">Функция, извлекающая ключ для каждого элемента.</span><span class="sxs-lookup"><span data-stu-id="a55f4-706">A function to extract the key for each element.</span></span></param>
        <param name="comparer"><span data-ttu-id="a55f4-707">Компаратор <see cref="T:System.Collections.Generic.IEqualityComparer`1" />, используемый для сравнения ключей.</span><span class="sxs-lookup"><span data-stu-id="a55f4-707">An <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> to compare keys.</span></span></param>
        <summary><span data-ttu-id="a55f4-708">Группирует элементы последовательности в соответствии с заданной функцией селектора ключа и сравнивает ключи с помощью указанного компаратора.</span><span class="sxs-lookup"><span data-stu-id="a55f4-708">Groups the elements of a sequence according to a specified key selector function and compares the keys by using a specified comparer.</span></span></summary>
        <returns><span data-ttu-id="a55f4-709">Объект <c>IQueryable&lt;IGrouping&lt;TKey, TSource&gt;&gt;</c> в C# или <c>IQueryable(Of IGrouping(Of TKey, TSource))</c> в Visual Basic, где каждый объект <see cref="T:System.Linq.IGrouping`2" /> содержит последовательность объектов и ключ.</span><span class="sxs-lookup"><span data-stu-id="a55f4-709">An <c>IQueryable&lt;IGrouping&lt;TKey, TSource&gt;&gt;</c> in C# or <c>IQueryable(Of IGrouping(Of TKey, TSource))</c> in Visual Basic where each <see cref="T:System.Linq.IGrouping`2" /> contains a sequence of objects and a key.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a55f4-710">Этот метод имеет по крайней мере один параметр <xref:System.Linq.Expressions.Expression%601> типа, аргумент типа которого является одним <xref:System.Func%602> из типов.</span><span class="sxs-lookup"><span data-stu-id="a55f4-710">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="a55f4-711">Для этих параметров можно передать лямбда-выражение, которое будет скомпилировано в <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="a55f4-711">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="a55f4-712">Метод создает объект <xref:System.Linq.Expressions.MethodCallExpression> , который представляет вызов <xref:System.Linq.Queryable.GroupBy%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%601%7D%29> самого себя как сконструированного универсального метода. <xref:System.Linq.Queryable.GroupBy%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%601%7D%29></span><span class="sxs-lookup"><span data-stu-id="a55f4-712">The <xref:System.Linq.Queryable.GroupBy%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%601%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.GroupBy%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%601%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="a55f4-713">Затем <xref:System.Linq.Expressions.MethodCallExpression> он передает <xref:System.Linq.IQueryProvider> методу класса, представленного `source`свойствомпараметра <xref:System.Linq.IQueryable.Provider%2A> <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> .</span><span class="sxs-lookup"><span data-stu-id="a55f4-713">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="a55f4-714">Поведение запроса, которое происходит в результате выполнения дерева выражения, представляющего вызов <xref:System.Linq.Queryable.GroupBy%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%601%7D%29> , зависит от реализации типа `source` параметра.</span><span class="sxs-lookup"><span data-stu-id="a55f4-714">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.GroupBy%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%601%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="a55f4-715">Ожидаемое поведение заключается в том, что он группирует `source` элементы по значению ключа.</span><span class="sxs-lookup"><span data-stu-id="a55f4-715">The expected behavior is that it groups the elements of `source` by a key value.</span></span> <span data-ttu-id="a55f4-716">Значение ключа получается путем вызова `keySelector` для каждого элемента, а значения ключа сравниваются с помощью. `comparer`</span><span class="sxs-lookup"><span data-stu-id="a55f4-716">The key value is obtained by invoking `keySelector` on each element, and key values are compared by using `comparer`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a55f4-717">Параметр <paramref name="source" />, <paramref name="keySelector" /> или <paramref name="comparer" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-717"><paramref name="source" /> or <paramref name="keySelector" /> or <paramref name="comparer" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GroupBy&lt;TSource,TKey,TElement&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;System.Linq.IGrouping&lt;TKey,TElement&gt;&gt; GroupBy&lt;TSource,TKey,TElement&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,TKey&gt;&gt; keySelector, System.Linq.Expressions.Expression&lt;Func&lt;TSource,TElement&gt;&gt; elementSelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;class System.Linq.IGrouping`2&lt;!!TKey, !!TElement&gt;&gt; GroupBy&lt;TSource, TKey, TElement&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, !!TKey&gt;&gt; keySelector, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, !!TElement&gt;&gt; elementSelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GroupBy(Of TSource, TKey, TElement) (source As IQueryable(Of TSource), keySelector As Expression(Of Func(Of TSource, TKey)), elementSelector As Expression(Of Func(Of TSource, TElement))) As IQueryable(Of IGrouping(Of TKey, TElement))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey, typename TElement&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;System::Linq::IGrouping&lt;TKey, TElement&gt; ^&gt; ^ GroupBy(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, TKey&gt; ^&gt; ^ keySelector, System::Linq::Expressions::Expression&lt;Func&lt;TSource, TElement&gt; ^&gt; ^ elementSelector);" />
      <MemberSignature Language="F#" Value="static member GroupBy : System.Linq.IQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, 'Key&gt;&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, 'Element&gt;&gt; -&gt; System.Linq.IQueryable&lt;System.Linq.IGrouping&lt;'Key, 'Element&gt;&gt;" Usage="System.Linq.Queryable.GroupBy (source, keySelector, elementSelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;System.Linq.IGrouping&lt;TKey,TElement&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TElement" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,TKey&gt;&gt;" />
        <Parameter Name="elementSelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,TElement&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="a55f4-718">Тип элементов <paramref name="source" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-718">The type of the elements of <paramref name="source" />.</span></span></typeparam>
        <typeparam name="TKey"><span data-ttu-id="a55f4-719">Тип ключа, возвращаемого функцией, заданной параметром <paramref name="keySelector" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-719">The type of the key returned by the function represented in <paramref name="keySelector" />.</span></span></typeparam>
        <typeparam name="TElement"><span data-ttu-id="a55f4-720">Тип элементов каждого объекта <see cref="T:System.Linq.IGrouping`2" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-720">The type of the elements in each <see cref="T:System.Linq.IGrouping`2" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="a55f4-721">Объект <see cref="T:System.Linq.IQueryable`1" />, элементы которого следует сгруппировать.</span><span class="sxs-lookup"><span data-stu-id="a55f4-721">An <see cref="T:System.Linq.IQueryable`1" /> whose elements to group.</span></span></param>
        <param name="keySelector"><span data-ttu-id="a55f4-722">Функция, извлекающая ключ для каждого элемента.</span><span class="sxs-lookup"><span data-stu-id="a55f4-722">A function to extract the key for each element.</span></span></param>
        <param name="elementSelector"><span data-ttu-id="a55f4-723">Функция, сопоставляющая каждый исходный элемент с элементом объекта <see cref="T:System.Linq.IGrouping`2" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-723">A function to map each source element to an element in an <see cref="T:System.Linq.IGrouping`2" />.</span></span></param>
        <summary><span data-ttu-id="a55f4-724">Группирует элементы последовательности в соответствии с заданной функцией селектора ключа и проецирует элементы каждой группы с помощью указанной функции.</span><span class="sxs-lookup"><span data-stu-id="a55f4-724">Groups the elements of a sequence according to a specified key selector function and projects the elements for each group by using a specified function.</span></span></summary>
        <returns><span data-ttu-id="a55f4-725">Объект <c>IQueryable&lt;IGrouping&lt;TKey, TElement&gt;&gt;</c> в C# или <c>IQueryable(Of IGrouping(Of TKey, TElement))</c> в Visual Basic, где каждый объект <see cref="T:System.Linq.IGrouping`2" /> содержит последовательность объектов типа <paramref name="TElement" /> и ключ.</span><span class="sxs-lookup"><span data-stu-id="a55f4-725">An <c>IQueryable&lt;IGrouping&lt;TKey, TElement&gt;&gt;</c> in C# or <c>IQueryable(Of IGrouping(Of TKey, TElement))</c> in Visual Basic where each <see cref="T:System.Linq.IGrouping`2" /> contains a sequence of objects of type <paramref name="TElement" /> and a key.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a55f4-726">Этот метод имеет по крайней мере один параметр <xref:System.Linq.Expressions.Expression%601> типа, аргумент типа которого является одним <xref:System.Func%602> из типов.</span><span class="sxs-lookup"><span data-stu-id="a55f4-726">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="a55f4-727">Для этих параметров можно передать лямбда-выражение, которое будет скомпилировано в <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="a55f4-727">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="a55f4-728">Метод создает объект <xref:System.Linq.Expressions.MethodCallExpression> , который представляет вызов <xref:System.Linq.Queryable.GroupBy%60%603%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%29> самого себя как сконструированного универсального метода. <xref:System.Linq.Queryable.GroupBy%60%603%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%29></span><span class="sxs-lookup"><span data-stu-id="a55f4-728">The <xref:System.Linq.Queryable.GroupBy%60%603%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.GroupBy%60%603%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="a55f4-729">Затем <xref:System.Linq.Expressions.MethodCallExpression> он передает <xref:System.Linq.IQueryProvider> методу класса, представленного `source`свойствомпараметра <xref:System.Linq.IQueryable.Provider%2A> <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> .</span><span class="sxs-lookup"><span data-stu-id="a55f4-729">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="a55f4-730">Поведение запроса, которое происходит в результате выполнения дерева выражения, представляющего вызов <xref:System.Linq.Queryable.GroupBy%60%603%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%29> , зависит от реализации типа `source` параметра.</span><span class="sxs-lookup"><span data-stu-id="a55f4-730">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.GroupBy%60%603%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="a55f4-731">Ожидаемое поведение заключается в том, что он группирует `source` элементы по значению ключа, полученному путем `keySelector` вызова для каждого элемента.</span><span class="sxs-lookup"><span data-stu-id="a55f4-731">The expected behavior is that it groups the elements of `source` by a key value that is obtained by invoking `keySelector` on each element.</span></span> <span data-ttu-id="a55f4-732">Для получения результирующего элемента он вызывается `elementSelector` для каждого элемента.</span><span class="sxs-lookup"><span data-stu-id="a55f4-732">It invokes `elementSelector` on each element to obtain a result element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a55f4-733">В следующем примере кода показано, как использовать <xref:System.Linq.Queryable.GroupBy%60%603%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%29> для группирования элементов последовательности.</span><span class="sxs-lookup"><span data-stu-id="a55f4-733">The following code example demonstrates how to use <xref:System.Linq.Queryable.GroupBy%60%603%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%29> to group the elements of a sequence.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#39](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#39)]
 [!code-vb[System.Linq.Queryable#39](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#39)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a55f4-734">Параметр <paramref name="source" />, <paramref name="keySelector" /> или <paramref name="elementSelector" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-734"><paramref name="source" /> or <paramref name="keySelector" /> or <paramref name="elementSelector" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GroupBy&lt;TSource,TKey,TElement&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;System.Linq.IGrouping&lt;TKey,TElement&gt;&gt; GroupBy&lt;TSource,TKey,TElement&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,TKey&gt;&gt; keySelector, System.Linq.Expressions.Expression&lt;Func&lt;TSource,TElement&gt;&gt; elementSelector, System.Collections.Generic.IEqualityComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;class System.Linq.IGrouping`2&lt;!!TKey, !!TElement&gt;&gt; GroupBy&lt;TSource, TKey, TElement&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, !!TKey&gt;&gt; keySelector, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, !!TElement&gt;&gt; elementSelector, class System.Collections.Generic.IEqualityComparer`1&lt;!!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Collections.Generic.IEqualityComparer{``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GroupBy(Of TSource, TKey, TElement) (source As IQueryable(Of TSource), keySelector As Expression(Of Func(Of TSource, TKey)), elementSelector As Expression(Of Func(Of TSource, TElement)), comparer As IEqualityComparer(Of TKey)) As IQueryable(Of IGrouping(Of TKey, TElement))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey, typename TElement&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;System::Linq::IGrouping&lt;TKey, TElement&gt; ^&gt; ^ GroupBy(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, TKey&gt; ^&gt; ^ keySelector, System::Linq::Expressions::Expression&lt;Func&lt;TSource, TElement&gt; ^&gt; ^ elementSelector, System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member GroupBy : System.Linq.IQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, 'Key&gt;&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, 'Element&gt;&gt; * System.Collections.Generic.IEqualityComparer&lt;'Key&gt; -&gt; System.Linq.IQueryable&lt;System.Linq.IGrouping&lt;'Key, 'Element&gt;&gt;" Usage="System.Linq.Queryable.GroupBy (source, keySelector, elementSelector, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;System.Linq.IGrouping&lt;TKey,TElement&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TElement" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,TKey&gt;&gt;" />
        <Parameter Name="elementSelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,TElement&gt;&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="a55f4-735">Тип элементов <paramref name="source" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-735">The type of the elements of <paramref name="source" />.</span></span></typeparam>
        <typeparam name="TKey"><span data-ttu-id="a55f4-736">Тип ключа, возвращаемого функцией, заданной параметром <paramref name="keySelector" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-736">The type of the key returned by the function represented in <paramref name="keySelector" />.</span></span></typeparam>
        <typeparam name="TElement"><span data-ttu-id="a55f4-737">Тип элементов каждого объекта <see cref="T:System.Linq.IGrouping`2" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-737">The type of the elements in each <see cref="T:System.Linq.IGrouping`2" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="a55f4-738">Объект <see cref="T:System.Linq.IQueryable`1" />, элементы которого следует сгруппировать.</span><span class="sxs-lookup"><span data-stu-id="a55f4-738">An <see cref="T:System.Linq.IQueryable`1" /> whose elements to group.</span></span></param>
        <param name="keySelector"><span data-ttu-id="a55f4-739">Функция, извлекающая ключ для каждого элемента.</span><span class="sxs-lookup"><span data-stu-id="a55f4-739">A function to extract the key for each element.</span></span></param>
        <param name="elementSelector"><span data-ttu-id="a55f4-740">Функция, сопоставляющая каждый исходный элемент с элементом объекта <see cref="T:System.Linq.IGrouping`2" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-740">A function to map each source element to an element in an <see cref="T:System.Linq.IGrouping`2" />.</span></span></param>
        <param name="comparer"><span data-ttu-id="a55f4-741">Компаратор <see cref="T:System.Collections.Generic.IEqualityComparer`1" />, используемый для сравнения ключей.</span><span class="sxs-lookup"><span data-stu-id="a55f4-741">An <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> to compare keys.</span></span></param>
        <summary><span data-ttu-id="a55f4-742">Группирует элементы последовательности и проецирует элементы каждой группы с помощью указанной функции.</span><span class="sxs-lookup"><span data-stu-id="a55f4-742">Groups the elements of a sequence and projects the elements for each group by using a specified function.</span></span> <span data-ttu-id="a55f4-743">Значения ключей сравниваются с использованием заданного компаратора.</span><span class="sxs-lookup"><span data-stu-id="a55f4-743">Key values are compared by using a specified comparer.</span></span></summary>
        <returns><span data-ttu-id="a55f4-744">Объект <c>IQueryable&lt;IGrouping&lt;TKey, TElement&gt;&gt;</c> в C# или <c>IQueryable(Of IGrouping(Of TKey, TElement))</c> в Visual Basic, где каждый объект <see cref="T:System.Linq.IGrouping`2" /> содержит последовательность объектов типа <paramref name="TElement" /> и ключ.</span><span class="sxs-lookup"><span data-stu-id="a55f4-744">An <c>IQueryable&lt;IGrouping&lt;TKey, TElement&gt;&gt;</c> in C# or <c>IQueryable(Of IGrouping(Of TKey, TElement))</c> in Visual Basic where each <see cref="T:System.Linq.IGrouping`2" /> contains a sequence of objects of type <paramref name="TElement" /> and a key.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a55f4-745">Этот метод имеет по крайней мере один параметр <xref:System.Linq.Expressions.Expression%601> типа, аргумент типа которого является одним <xref:System.Func%602> из типов.</span><span class="sxs-lookup"><span data-stu-id="a55f4-745">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="a55f4-746">Для этих параметров можно передать лямбда-выражение, которое будет скомпилировано в <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="a55f4-746">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="a55f4-747">Метод создает объект <xref:System.Linq.Expressions.MethodCallExpression> , который представляет вызов <xref:System.Linq.Queryable.GroupBy%60%603%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%601%7D%29> самого себя как сконструированного универсального метода. <xref:System.Linq.Queryable.GroupBy%60%603%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%601%7D%29></span><span class="sxs-lookup"><span data-stu-id="a55f4-747">The <xref:System.Linq.Queryable.GroupBy%60%603%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%601%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.GroupBy%60%603%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%601%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="a55f4-748">Затем <xref:System.Linq.Expressions.MethodCallExpression> он передает <xref:System.Linq.IQueryProvider> методу класса, представленного `source`свойствомпараметра <xref:System.Linq.IQueryable.Provider%2A> <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> .</span><span class="sxs-lookup"><span data-stu-id="a55f4-748">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="a55f4-749">Поведение запроса, которое происходит в результате выполнения дерева выражения, представляющего вызов <xref:System.Linq.Queryable.GroupBy%60%603%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%601%7D%29> , зависит от реализации типа `source` параметра.</span><span class="sxs-lookup"><span data-stu-id="a55f4-749">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.GroupBy%60%603%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%601%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="a55f4-750">Ожидаемое поведение заключается в том, что он группирует `source` элементы по значению ключа, полученному путем `keySelector` вызова для каждого элемента.</span><span class="sxs-lookup"><span data-stu-id="a55f4-750">The expected behavior is that it groups the elements of `source` by a key value that is obtained by invoking `keySelector` on each element.</span></span> <span data-ttu-id="a55f4-751">Значения ключа сравниваются с помощью `comparer`.</span><span class="sxs-lookup"><span data-stu-id="a55f4-751">Key values are compared by using `comparer`.</span></span> <span data-ttu-id="a55f4-752">`elementSelector` Параметр вызывается для каждого элемента для получения результирующего элемента.</span><span class="sxs-lookup"><span data-stu-id="a55f4-752">The `elementSelector` parameter is invoked on each element to obtain a result element.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a55f4-753">Значение параметра <paramref name="source" />, <paramref name="keySelector" />, <paramref name="elementSelector" /> или <paramref name="comparer" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-753"><paramref name="source" /> or <paramref name="keySelector" /> or <paramref name="elementSelector" /> or <paramref name="comparer" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GroupBy&lt;TSource,TKey,TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;TResult&gt; GroupBy&lt;TSource,TKey,TResult&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,TKey&gt;&gt; keySelector, System.Linq.Expressions.Expression&lt;Func&lt;TKey,System.Collections.Generic.IEnumerable&lt;TSource&gt;,TResult&gt;&gt; resultSelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;!!TResult&gt; GroupBy&lt;TSource, TKey, TResult&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, !!TKey&gt;&gt; keySelector, class System.Linq.Expressions.Expression`1&lt;class System.Func`3&lt;!!TKey, class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt;, !!TResult&gt;&gt; resultSelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GroupBy(Of TSource, TKey, TResult) (source As IQueryable(Of TSource), keySelector As Expression(Of Func(Of TSource, TKey)), resultSelector As Expression(Of Func(Of TKey, IEnumerable(Of TSource), TResult))) As IQueryable(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey, typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;TResult&gt; ^ GroupBy(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, TKey&gt; ^&gt; ^ keySelector, System::Linq::Expressions::Expression&lt;Func&lt;TKey, System::Collections::Generic::IEnumerable&lt;TSource&gt; ^, TResult&gt; ^&gt; ^ resultSelector);" />
      <MemberSignature Language="F#" Value="static member GroupBy : System.Linq.IQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, 'Key&gt;&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Key, seq&lt;'Source&gt;, 'Result&gt;&gt; -&gt; System.Linq.IQueryable&lt;'Result&gt;" Usage="System.Linq.Queryable.GroupBy (source, keySelector, resultSelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,TKey&gt;&gt;" />
        <Parameter Name="resultSelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TKey,System.Collections.Generic.IEnumerable&lt;TSource&gt;,TResult&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="a55f4-754">Тип элементов <paramref name="source" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-754">The type of the elements of <paramref name="source" />.</span></span></typeparam>
        <typeparam name="TKey"><span data-ttu-id="a55f4-755">Тип ключа, возвращаемого функцией, заданной параметром <paramref name="keySelector" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-755">The type of the key returned by the function represented in <paramref name="keySelector" />.</span></span></typeparam>
        <typeparam name="TResult"><span data-ttu-id="a55f4-756">Тип результирующего значения, возвращаемого функцией <paramref name="resultSelector" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-756">The type of the result value returned by <paramref name="resultSelector" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="a55f4-757">Объект <see cref="T:System.Linq.IQueryable`1" />, элементы которого следует сгруппировать.</span><span class="sxs-lookup"><span data-stu-id="a55f4-757">An <see cref="T:System.Linq.IQueryable`1" /> whose elements to group.</span></span></param>
        <param name="keySelector"><span data-ttu-id="a55f4-758">Функция, извлекающая ключ для каждого элемента.</span><span class="sxs-lookup"><span data-stu-id="a55f4-758">A function to extract the key for each element.</span></span></param>
        <param name="resultSelector"><span data-ttu-id="a55f4-759">Функция для создания результирующего значения для каждой группы.</span><span class="sxs-lookup"><span data-stu-id="a55f4-759">A function to create a result value from each group.</span></span></param>
        <summary><span data-ttu-id="a55f4-760">Группирует элементы последовательности в соответствии с заданной функцией селектора ключа и создает результирующее значение для каждой группы и ее ключа.</span><span class="sxs-lookup"><span data-stu-id="a55f4-760">Groups the elements of a sequence according to a specified key selector function and creates a result value from each group and its key.</span></span></summary>
        <returns><span data-ttu-id="a55f4-761">Объект <c>T:System.Linq.IQueryable\`1</c> с аргументом типа <paramref name="TResult" />, каждый элемент которого представляет проекцию группы и ее ключа.</span><span class="sxs-lookup"><span data-stu-id="a55f4-761">An <c>T:System.Linq.IQueryable\`1</c> that has a type argument of <paramref name="TResult" /> and where each element represents a projection over a group and its key.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a55f4-762">Этот метод имеет по крайней мере один параметр <xref:System.Linq.Expressions.Expression%601> типа, аргумент типа которого является одним <xref:System.Func%602> из типов.</span><span class="sxs-lookup"><span data-stu-id="a55f4-762">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="a55f4-763">Для этих параметров можно передать лямбда-выражение, которое будет скомпилировано в <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="a55f4-763">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="a55f4-764">Метод создает объект <xref:System.Linq.Expressions.MethodCallExpression> , который представляет вызов <xref:System.Linq.Queryable.GroupBy%60%603%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%2C%60%602%7D%7D%29> самого себя как сконструированного универсального метода. <xref:System.Linq.Queryable.GroupBy%60%603%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%2C%60%602%7D%7D%29></span><span class="sxs-lookup"><span data-stu-id="a55f4-764">The <xref:System.Linq.Queryable.GroupBy%60%603%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%2C%60%602%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.GroupBy%60%603%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%2C%60%602%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="a55f4-765">Затем <xref:System.Linq.Expressions.MethodCallExpression> он передает <xref:System.Linq.IQueryProvider> методу класса, представленного `source`свойствомпараметра <xref:System.Linq.IQueryable.Provider%2A> <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> .</span><span class="sxs-lookup"><span data-stu-id="a55f4-765">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="a55f4-766">Поведение запроса, которое происходит в результате выполнения дерева выражения, представляющего вызов <xref:System.Linq.Queryable.GroupBy%60%603%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%2C%60%602%7D%7D%29> , зависит от реализации типа `source` параметра.</span><span class="sxs-lookup"><span data-stu-id="a55f4-766">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.GroupBy%60%603%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%2C%60%602%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="a55f4-767">Ожидаемое поведение заключается в том, что он группирует `source` элементы по значению ключа, полученному путем `keySelector` вызова для каждого элемента.</span><span class="sxs-lookup"><span data-stu-id="a55f4-767">The expected behavior is that it groups the elements of `source` by a key value that is obtained by invoking `keySelector` on each element.</span></span> <span data-ttu-id="a55f4-768">`resultSelector` Параметр используется для получения результирующего значения из каждой группы и ее ключа.</span><span class="sxs-lookup"><span data-stu-id="a55f4-768">The `resultSelector` parameter is used to obtain a result value from each group and its key.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a55f4-769">В следующем примере кода показано, как использовать <xref:System.Linq.Queryable.GroupBy%60%603%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%2C%60%602%7D%7D%29> для группирования элементов последовательности и для проецирования последовательности результатов типа. `TResult`</span><span class="sxs-lookup"><span data-stu-id="a55f4-769">The following code example demonstrates how to use <xref:System.Linq.Queryable.GroupBy%60%603%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%2C%60%602%7D%7D%29> to group the elements of a sequence and project a sequence of results of type `TResult`.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#15)]
 [!code-vb[System.Linq.Queryable#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a55f4-770">Параметр <paramref name="source" />, <paramref name="keySelector" /> или <paramref name="resultSelector" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-770"><paramref name="source" /> or <paramref name="keySelector" /> or <paramref name="resultSelector" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GroupBy&lt;TSource,TKey,TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;TResult&gt; GroupBy&lt;TSource,TKey,TResult&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,TKey&gt;&gt; keySelector, System.Linq.Expressions.Expression&lt;Func&lt;TKey,System.Collections.Generic.IEnumerable&lt;TSource&gt;,TResult&gt;&gt; resultSelector, System.Collections.Generic.IEqualityComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;!!TResult&gt; GroupBy&lt;TSource, TKey, TResult&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, !!TKey&gt;&gt; keySelector, class System.Linq.Expressions.Expression`1&lt;class System.Func`3&lt;!!TKey, class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt;, !!TResult&gt;&gt; resultSelector, class System.Collections.Generic.IEqualityComparer`1&lt;!!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2}},System.Collections.Generic.IEqualityComparer{``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GroupBy(Of TSource, TKey, TResult) (source As IQueryable(Of TSource), keySelector As Expression(Of Func(Of TSource, TKey)), resultSelector As Expression(Of Func(Of TKey, IEnumerable(Of TSource), TResult)), comparer As IEqualityComparer(Of TKey)) As IQueryable(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey, typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;TResult&gt; ^ GroupBy(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, TKey&gt; ^&gt; ^ keySelector, System::Linq::Expressions::Expression&lt;Func&lt;TKey, System::Collections::Generic::IEnumerable&lt;TSource&gt; ^, TResult&gt; ^&gt; ^ resultSelector, System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member GroupBy : System.Linq.IQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, 'Key&gt;&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Key, seq&lt;'Source&gt;, 'Result&gt;&gt; * System.Collections.Generic.IEqualityComparer&lt;'Key&gt; -&gt; System.Linq.IQueryable&lt;'Result&gt;" Usage="System.Linq.Queryable.GroupBy (source, keySelector, resultSelector, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,TKey&gt;&gt;" />
        <Parameter Name="resultSelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TKey,System.Collections.Generic.IEnumerable&lt;TSource&gt;,TResult&gt;&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="a55f4-771">Тип элементов <paramref name="source" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-771">The type of the elements of <paramref name="source" />.</span></span></typeparam>
        <typeparam name="TKey"><span data-ttu-id="a55f4-772">Тип ключа, возвращаемого функцией, заданной параметром <paramref name="keySelector" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-772">The type of the key returned by the function represented in <paramref name="keySelector" />.</span></span></typeparam>
        <typeparam name="TResult"><span data-ttu-id="a55f4-773">Тип результирующего значения, возвращаемого функцией <paramref name="resultSelector" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-773">The type of the result value returned by <paramref name="resultSelector" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="a55f4-774">Объект <see cref="T:System.Linq.IQueryable`1" />, элементы которого следует сгруппировать.</span><span class="sxs-lookup"><span data-stu-id="a55f4-774">An <see cref="T:System.Linq.IQueryable`1" /> whose elements to group.</span></span></param>
        <param name="keySelector"><span data-ttu-id="a55f4-775">Функция, извлекающая ключ для каждого элемента.</span><span class="sxs-lookup"><span data-stu-id="a55f4-775">A function to extract the key for each element.</span></span></param>
        <param name="resultSelector"><span data-ttu-id="a55f4-776">Функция для создания результирующего значения для каждой группы.</span><span class="sxs-lookup"><span data-stu-id="a55f4-776">A function to create a result value from each group.</span></span></param>
        <param name="comparer"><span data-ttu-id="a55f4-777">Компаратор <see cref="T:System.Collections.Generic.IEqualityComparer`1" />, используемый для сравнения ключей.</span><span class="sxs-lookup"><span data-stu-id="a55f4-777">An <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> to compare keys.</span></span></param>
        <summary><span data-ttu-id="a55f4-778">Группирует элементы последовательности в соответствии с заданной функцией селектора ключа и создает результирующее значение для каждой группы и ее ключа.</span><span class="sxs-lookup"><span data-stu-id="a55f4-778">Groups the elements of a sequence according to a specified key selector function and creates a result value from each group and its key.</span></span> <span data-ttu-id="a55f4-779">Ключи сравниваются с использованием заданного компаратора.</span><span class="sxs-lookup"><span data-stu-id="a55f4-779">Keys are compared by using a specified comparer.</span></span></summary>
        <returns><span data-ttu-id="a55f4-780">Объект <c>T:System.Linq.IQueryable\`1</c> с аргументом типа <paramref name="TResult" />, каждый элемент которого представляет проекцию группы и ее ключа.</span><span class="sxs-lookup"><span data-stu-id="a55f4-780">An <c>T:System.Linq.IQueryable\`1</c> that has a type argument of <paramref name="TResult" /> and where each element represents a projection over a group and its key.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a55f4-781">Этот метод имеет по крайней мере один параметр <xref:System.Linq.Expressions.Expression%601> типа, аргумент типа которого является одним <xref:System.Func%602> из типов.</span><span class="sxs-lookup"><span data-stu-id="a55f4-781">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="a55f4-782">Для этих параметров можно передать лямбда-выражение, которое будет скомпилировано в <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="a55f4-782">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="a55f4-783">Метод создает объект <xref:System.Linq.Expressions.MethodCallExpression> , который представляет вызов <xref:System.Linq.Queryable.GroupBy%60%603%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%2C%60%602%7D%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%601%7D%29> самого себя как сконструированного универсального метода. <xref:System.Linq.Queryable.GroupBy%60%603%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%2C%60%602%7D%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%601%7D%29></span><span class="sxs-lookup"><span data-stu-id="a55f4-783">The <xref:System.Linq.Queryable.GroupBy%60%603%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%2C%60%602%7D%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%601%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.GroupBy%60%603%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%2C%60%602%7D%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%601%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="a55f4-784">Затем <xref:System.Linq.Expressions.MethodCallExpression> он передает <xref:System.Linq.IQueryProvider> методу класса, представленного `source`свойствомпараметра <xref:System.Linq.IQueryable.Provider%2A> <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> .</span><span class="sxs-lookup"><span data-stu-id="a55f4-784">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="a55f4-785">Поведение запроса, которое происходит в результате выполнения дерева выражения, представляющего вызов <xref:System.Linq.Queryable.GroupBy%60%603%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%2C%60%602%7D%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%601%7D%29> , зависит от реализации типа `source` параметра.</span><span class="sxs-lookup"><span data-stu-id="a55f4-785">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.GroupBy%60%603%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%2C%60%602%7D%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%601%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="a55f4-786">Ожидаемое поведение заключается в том, что он группирует `source` элементы по ключевым значениям, получаемым путем `keySelector` вызова для каждого элемента.</span><span class="sxs-lookup"><span data-stu-id="a55f4-786">The expected behavior is that it groups the elements of `source` by key values that are obtained by invoking `keySelector` on each element.</span></span> <span data-ttu-id="a55f4-787">Параметр используется для сравнения ключей `resultSelector` , а параметр используется для получения результирующего значения из каждой группы и ее ключа. `comparer`</span><span class="sxs-lookup"><span data-stu-id="a55f4-787">The `comparer` parameter is used to compare keys and the `resultSelector` parameter is used to obtain a result value from each group and its key.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a55f4-788">Значение параметра <paramref name="source" />, <paramref name="keySelector" />, <paramref name="resultSelector" /> или <paramref name="comparer" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-788"><paramref name="source" /> or <paramref name="keySelector" /> or <paramref name="resultSelector" /> or <paramref name="comparer" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GroupBy&lt;TSource,TKey,TElement,TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;TResult&gt; GroupBy&lt;TSource,TKey,TElement,TResult&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,TKey&gt;&gt; keySelector, System.Linq.Expressions.Expression&lt;Func&lt;TSource,TElement&gt;&gt; elementSelector, System.Linq.Expressions.Expression&lt;Func&lt;TKey,System.Collections.Generic.IEnumerable&lt;TElement&gt;,TResult&gt;&gt; resultSelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;!!TResult&gt; GroupBy&lt;TSource, TKey, TElement, TResult&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, !!TKey&gt;&gt; keySelector, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, !!TElement&gt;&gt; elementSelector, class System.Linq.Expressions.Expression`1&lt;class System.Func`3&lt;!!TKey, class System.Collections.Generic.IEnumerable`1&lt;!!TElement&gt;, !!TResult&gt;&gt; resultSelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.GroupBy``4(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GroupBy(Of TSource, TKey, TElement, TResult) (source As IQueryable(Of TSource), keySelector As Expression(Of Func(Of TSource, TKey)), elementSelector As Expression(Of Func(Of TSource, TElement)), resultSelector As Expression(Of Func(Of TKey, IEnumerable(Of TElement), TResult))) As IQueryable(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey, typename TElement, typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;TResult&gt; ^ GroupBy(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, TKey&gt; ^&gt; ^ keySelector, System::Linq::Expressions::Expression&lt;Func&lt;TSource, TElement&gt; ^&gt; ^ elementSelector, System::Linq::Expressions::Expression&lt;Func&lt;TKey, System::Collections::Generic::IEnumerable&lt;TElement&gt; ^, TResult&gt; ^&gt; ^ resultSelector);" />
      <MemberSignature Language="F#" Value="static member GroupBy : System.Linq.IQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, 'Key&gt;&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, 'Element&gt;&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Key, seq&lt;'Element&gt;, 'Result&gt;&gt; -&gt; System.Linq.IQueryable&lt;'Result&gt;" Usage="System.Linq.Queryable.GroupBy (source, keySelector, elementSelector, resultSelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TElement" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,TKey&gt;&gt;" />
        <Parameter Name="elementSelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,TElement&gt;&gt;" />
        <Parameter Name="resultSelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TKey,System.Collections.Generic.IEnumerable&lt;TElement&gt;,TResult&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="a55f4-789">Тип элементов <paramref name="source" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-789">The type of the elements of <paramref name="source" />.</span></span></typeparam>
        <typeparam name="TKey"><span data-ttu-id="a55f4-790">Тип ключа, возвращаемого функцией, заданной параметром <paramref name="keySelector" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-790">The type of the key returned by the function represented in <paramref name="keySelector" />.</span></span></typeparam>
        <typeparam name="TElement"><span data-ttu-id="a55f4-791">Тип элементов каждого объекта <see cref="T:System.Linq.IGrouping`2" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-791">The type of the elements in each <see cref="T:System.Linq.IGrouping`2" />.</span></span></typeparam>
        <typeparam name="TResult"><span data-ttu-id="a55f4-792">Тип результирующего значения, возвращаемого функцией <paramref name="resultSelector" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-792">The type of the result value returned by <paramref name="resultSelector" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="a55f4-793">Объект <see cref="T:System.Linq.IQueryable`1" />, элементы которого следует сгруппировать.</span><span class="sxs-lookup"><span data-stu-id="a55f4-793">An <see cref="T:System.Linq.IQueryable`1" /> whose elements to group.</span></span></param>
        <param name="keySelector"><span data-ttu-id="a55f4-794">Функция, извлекающая ключ для каждого элемента.</span><span class="sxs-lookup"><span data-stu-id="a55f4-794">A function to extract the key for each element.</span></span></param>
        <param name="elementSelector"><span data-ttu-id="a55f4-795">Функция, сопоставляющая каждый исходный элемент с элементом объекта <see cref="T:System.Linq.IGrouping`2" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-795">A function to map each source element to an element in an <see cref="T:System.Linq.IGrouping`2" />.</span></span></param>
        <param name="resultSelector"><span data-ttu-id="a55f4-796">Функция для создания результирующего значения для каждой группы.</span><span class="sxs-lookup"><span data-stu-id="a55f4-796">A function to create a result value from each group.</span></span></param>
        <summary><span data-ttu-id="a55f4-797">Группирует элементы последовательности в соответствии с заданной функцией селектора ключа и создает результирующее значение для каждой группы и ее ключа.</span><span class="sxs-lookup"><span data-stu-id="a55f4-797">Groups the elements of a sequence according to a specified key selector function and creates a result value from each group and its key.</span></span> <span data-ttu-id="a55f4-798">Элементы каждой группы проецируются с помощью указанной функции.</span><span class="sxs-lookup"><span data-stu-id="a55f4-798">The elements of each group are projected by using a specified function.</span></span></summary>
        <returns><span data-ttu-id="a55f4-799">Объект <c>T:System.Linq.IQueryable\`1</c> с аргументом типа <paramref name="TResult" />, каждый элемент которого представляет проекцию группы и ее ключа.</span><span class="sxs-lookup"><span data-stu-id="a55f4-799">An <c>T:System.Linq.IQueryable\`1</c> that has a type argument of <paramref name="TResult" /> and where each element represents a projection over a group and its key.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a55f4-800">Этот метод имеет по крайней мере один параметр <xref:System.Linq.Expressions.Expression%601> типа, аргумент типа которого является одним <xref:System.Func%602> из типов.</span><span class="sxs-lookup"><span data-stu-id="a55f4-800">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="a55f4-801">Для этих параметров можно передать лямбда-выражение, которое будет скомпилировано в <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="a55f4-801">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="a55f4-802">Метод создает объект <xref:System.Linq.Expressions.MethodCallExpression> , который представляет вызов <xref:System.Linq.Queryable.GroupBy%60%604%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2CSystem.Collections.Generic.IEnumerable%7B%60%602%7D%2C%60%603%7D%7D%29> самого себя как сконструированного универсального метода. <xref:System.Linq.Queryable.GroupBy%60%604%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2CSystem.Collections.Generic.IEnumerable%7B%60%602%7D%2C%60%603%7D%7D%29></span><span class="sxs-lookup"><span data-stu-id="a55f4-802">The <xref:System.Linq.Queryable.GroupBy%60%604%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2CSystem.Collections.Generic.IEnumerable%7B%60%602%7D%2C%60%603%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.GroupBy%60%604%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2CSystem.Collections.Generic.IEnumerable%7B%60%602%7D%2C%60%603%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="a55f4-803">Затем <xref:System.Linq.Expressions.MethodCallExpression> он передает <xref:System.Linq.IQueryProvider> методу класса, представленного `source`свойствомпараметра <xref:System.Linq.IQueryable.Provider%2A> <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> .</span><span class="sxs-lookup"><span data-stu-id="a55f4-803">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="a55f4-804">Поведение запроса, которое происходит в результате выполнения дерева выражения, представляющего вызов <xref:System.Linq.Queryable.GroupBy%60%604%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2CSystem.Collections.Generic.IEnumerable%7B%60%602%7D%2C%60%603%7D%7D%29> , зависит от реализации типа `source` параметра.</span><span class="sxs-lookup"><span data-stu-id="a55f4-804">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.GroupBy%60%604%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2CSystem.Collections.Generic.IEnumerable%7B%60%602%7D%2C%60%603%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="a55f4-805">Ожидаемое поведение заключается в том, что он группирует `source` элементы по ключевым значениям, получаемым путем `keySelector` вызова для каждого элемента.</span><span class="sxs-lookup"><span data-stu-id="a55f4-805">The expected behavior is that it groups the elements of `source` by key values that are obtained by invoking `keySelector` on each element.</span></span> <span data-ttu-id="a55f4-806">Параметр используется для проецирования элементов каждой группы, `resultSelector` а параметр используется для получения результирующего значения из каждой группы и ее ключа. `elementSelector`</span><span class="sxs-lookup"><span data-stu-id="a55f4-806">The `elementSelector` parameter is used to project the elements of each group, and the `resultSelector` parameter is used to obtain a result value from each group and its key.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a55f4-807">В следующем примере кода показано, как использовать <xref:System.Linq.Queryable.GroupBy%60%604%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2CSystem.Collections.Generic.IEnumerable%7B%60%602%7D%2C%60%603%7D%7D%29> для группирования элементов последовательности и для проецирования последовательности результатов типа. `TResult`</span><span class="sxs-lookup"><span data-stu-id="a55f4-807">The following code example demonstrates how to use <xref:System.Linq.Queryable.GroupBy%60%604%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2CSystem.Collections.Generic.IEnumerable%7B%60%602%7D%2C%60%603%7D%7D%29> to group the elements of a sequence and project a sequence of results of type `TResult`.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#130](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#130)]
 [!code-vb[System.Linq.Queryable#130](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#130)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a55f4-808">Значение параметра <paramref name="source" />, <paramref name="keySelector" />, <paramref name="elementSelector" /> или <paramref name="resultSelector" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-808"><paramref name="source" /> or <paramref name="keySelector" /> or <paramref name="elementSelector" /> or <paramref name="resultSelector" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GroupBy&lt;TSource,TKey,TElement,TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;TResult&gt; GroupBy&lt;TSource,TKey,TElement,TResult&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,TKey&gt;&gt; keySelector, System.Linq.Expressions.Expression&lt;Func&lt;TSource,TElement&gt;&gt; elementSelector, System.Linq.Expressions.Expression&lt;Func&lt;TKey,System.Collections.Generic.IEnumerable&lt;TElement&gt;,TResult&gt;&gt; resultSelector, System.Collections.Generic.IEqualityComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;!!TResult&gt; GroupBy&lt;TSource, TKey, TElement, TResult&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, !!TKey&gt;&gt; keySelector, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, !!TElement&gt;&gt; elementSelector, class System.Linq.Expressions.Expression`1&lt;class System.Func`3&lt;!!TKey, class System.Collections.Generic.IEnumerable`1&lt;!!TElement&gt;, !!TResult&gt;&gt; resultSelector, class System.Collections.Generic.IEqualityComparer`1&lt;!!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.GroupBy``4(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3}},System.Collections.Generic.IEqualityComparer{``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GroupBy(Of TSource, TKey, TElement, TResult) (source As IQueryable(Of TSource), keySelector As Expression(Of Func(Of TSource, TKey)), elementSelector As Expression(Of Func(Of TSource, TElement)), resultSelector As Expression(Of Func(Of TKey, IEnumerable(Of TElement), TResult)), comparer As IEqualityComparer(Of TKey)) As IQueryable(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey, typename TElement, typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;TResult&gt; ^ GroupBy(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, TKey&gt; ^&gt; ^ keySelector, System::Linq::Expressions::Expression&lt;Func&lt;TSource, TElement&gt; ^&gt; ^ elementSelector, System::Linq::Expressions::Expression&lt;Func&lt;TKey, System::Collections::Generic::IEnumerable&lt;TElement&gt; ^, TResult&gt; ^&gt; ^ resultSelector, System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member GroupBy : System.Linq.IQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, 'Key&gt;&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, 'Element&gt;&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Key, seq&lt;'Element&gt;, 'Result&gt;&gt; * System.Collections.Generic.IEqualityComparer&lt;'Key&gt; -&gt; System.Linq.IQueryable&lt;'Result&gt;" Usage="System.Linq.Queryable.GroupBy (source, keySelector, elementSelector, resultSelector, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TElement" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,TKey&gt;&gt;" />
        <Parameter Name="elementSelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,TElement&gt;&gt;" />
        <Parameter Name="resultSelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TKey,System.Collections.Generic.IEnumerable&lt;TElement&gt;,TResult&gt;&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="a55f4-809">Тип элементов <paramref name="source" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-809">The type of the elements of <paramref name="source" />.</span></span></typeparam>
        <typeparam name="TKey"><span data-ttu-id="a55f4-810">Тип ключа, возвращаемого функцией, заданной параметром <paramref name="keySelector" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-810">The type of the key returned by the function represented in <paramref name="keySelector" />.</span></span></typeparam>
        <typeparam name="TElement"><span data-ttu-id="a55f4-811">Тип элементов каждого объекта <see cref="T:System.Linq.IGrouping`2" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-811">The type of the elements in each <see cref="T:System.Linq.IGrouping`2" />.</span></span></typeparam>
        <typeparam name="TResult"><span data-ttu-id="a55f4-812">Тип результирующего значения, возвращаемого функцией <paramref name="resultSelector" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-812">The type of the result value returned by <paramref name="resultSelector" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="a55f4-813">Объект <see cref="T:System.Linq.IQueryable`1" />, элементы которого следует сгруппировать.</span><span class="sxs-lookup"><span data-stu-id="a55f4-813">An <see cref="T:System.Linq.IQueryable`1" /> whose elements to group.</span></span></param>
        <param name="keySelector"><span data-ttu-id="a55f4-814">Функция, извлекающая ключ для каждого элемента.</span><span class="sxs-lookup"><span data-stu-id="a55f4-814">A function to extract the key for each element.</span></span></param>
        <param name="elementSelector"><span data-ttu-id="a55f4-815">Функция, сопоставляющая каждый исходный элемент с элементом объекта <see cref="T:System.Linq.IGrouping`2" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-815">A function to map each source element to an element in an <see cref="T:System.Linq.IGrouping`2" />.</span></span></param>
        <param name="resultSelector"><span data-ttu-id="a55f4-816">Функция для создания результирующего значения для каждой группы.</span><span class="sxs-lookup"><span data-stu-id="a55f4-816">A function to create a result value from each group.</span></span></param>
        <param name="comparer"><span data-ttu-id="a55f4-817">Компаратор <see cref="T:System.Collections.Generic.IEqualityComparer`1" />, используемый для сравнения ключей.</span><span class="sxs-lookup"><span data-stu-id="a55f4-817">An <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> to compare keys.</span></span></param>
        <summary><span data-ttu-id="a55f4-818">Группирует элементы последовательности в соответствии с заданной функцией селектора ключа и создает результирующее значение для каждой группы и ее ключа.</span><span class="sxs-lookup"><span data-stu-id="a55f4-818">Groups the elements of a sequence according to a specified key selector function and creates a result value from each group and its key.</span></span> <span data-ttu-id="a55f4-819">Ключи сравниваются с помощью указанного компаратора, элементы каждой группы проецируются с помощью указанной функции.</span><span class="sxs-lookup"><span data-stu-id="a55f4-819">Keys are compared by using a specified comparer and the elements of each group are projected by using a specified function.</span></span></summary>
        <returns><span data-ttu-id="a55f4-820">Объект <c>T:System.Linq.IQueryable\`1</c> с аргументом типа <paramref name="TResult" />, каждый элемент которого представляет проекцию группы и ее ключа.</span><span class="sxs-lookup"><span data-stu-id="a55f4-820">An <c>T:System.Linq.IQueryable\`1</c> that has a type argument of <paramref name="TResult" /> and where each element represents a projection over a group and its key.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a55f4-821">Этот метод имеет по крайней мере один параметр <xref:System.Linq.Expressions.Expression%601> типа, аргумент типа которого является одним <xref:System.Func%602> из типов.</span><span class="sxs-lookup"><span data-stu-id="a55f4-821">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="a55f4-822">Для этих параметров можно передать лямбда-выражение, которое будет скомпилировано в <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="a55f4-822">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="a55f4-823">Метод создает объект <xref:System.Linq.Expressions.MethodCallExpression> , который представляет вызов <xref:System.Linq.Queryable.GroupBy%60%604%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2CSystem.Collections.Generic.IEnumerable%7B%60%602%7D%2C%60%603%7D%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%601%7D%29> самого себя как сконструированного универсального метода. <xref:System.Linq.Queryable.GroupBy%60%604%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2CSystem.Collections.Generic.IEnumerable%7B%60%602%7D%2C%60%603%7D%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%601%7D%29></span><span class="sxs-lookup"><span data-stu-id="a55f4-823">The <xref:System.Linq.Queryable.GroupBy%60%604%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2CSystem.Collections.Generic.IEnumerable%7B%60%602%7D%2C%60%603%7D%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%601%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.GroupBy%60%604%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2CSystem.Collections.Generic.IEnumerable%7B%60%602%7D%2C%60%603%7D%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%601%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="a55f4-824">Затем <xref:System.Linq.Expressions.MethodCallExpression> он передает <xref:System.Linq.IQueryProvider> методу класса, представленного `source`свойствомпараметра <xref:System.Linq.IQueryable.Provider%2A> <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> .</span><span class="sxs-lookup"><span data-stu-id="a55f4-824">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="a55f4-825">Поведение запроса, которое происходит в результате выполнения дерева выражения, представляющего вызов <xref:System.Linq.Queryable.GroupBy%60%604%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2CSystem.Collections.Generic.IEnumerable%7B%60%602%7D%2C%60%603%7D%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%601%7D%29> , зависит от реализации типа `source` параметра.</span><span class="sxs-lookup"><span data-stu-id="a55f4-825">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.GroupBy%60%604%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2CSystem.Collections.Generic.IEnumerable%7B%60%602%7D%2C%60%603%7D%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%601%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="a55f4-826">Ожидаемое поведение заключается в том, что он группирует `source` элементы по ключевым значениям, получаемым путем `keySelector` вызова для каждого элемента.</span><span class="sxs-lookup"><span data-stu-id="a55f4-826">The expected behavior is that it groups the elements of `source` by key values that are obtained by invoking `keySelector` on each element.</span></span> <span data-ttu-id="a55f4-827">`comparer` Параметр используется для сравнения значений ключей.</span><span class="sxs-lookup"><span data-stu-id="a55f4-827">The `comparer` parameter is used to compare key values.</span></span> <span data-ttu-id="a55f4-828">Параметр используется для проецирования элементов каждой группы, `resultSelector` а параметр используется для получения результирующего значения из каждой группы и ее ключа. `elementSelector`</span><span class="sxs-lookup"><span data-stu-id="a55f4-828">The `elementSelector` parameter is used to project the elements of each group, and the `resultSelector` parameter is used to obtain a result value from each group and its key.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a55f4-829">Значение параметра <paramref name="source" />, <paramref name="keySelector" />, <paramref name="elementSelector" />, <paramref name="resultSelector" /> или <paramref name="comparer" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-829"><paramref name="source" /> or <paramref name="keySelector" /> or <paramref name="elementSelector" /> or <paramref name="resultSelector" /> or <paramref name="comparer" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GroupJoin&lt;TOuter,TInner,TKey,TResult&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a55f4-830">Устанавливает корреляцию между элементами двух последовательностей на основе равенства ключей и группирует результаты.</span><span class="sxs-lookup"><span data-stu-id="a55f4-830">Correlates the elements of two sequences based on key equality and groups the results.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GroupJoin&lt;TOuter,TInner,TKey,TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;TResult&gt; GroupJoin&lt;TOuter,TInner,TKey,TResult&gt; (this System.Linq.IQueryable&lt;TOuter&gt; outer, System.Collections.Generic.IEnumerable&lt;TInner&gt; inner, System.Linq.Expressions.Expression&lt;Func&lt;TOuter,TKey&gt;&gt; outerKeySelector, System.Linq.Expressions.Expression&lt;Func&lt;TInner,TKey&gt;&gt; innerKeySelector, System.Linq.Expressions.Expression&lt;Func&lt;TOuter,System.Collections.Generic.IEnumerable&lt;TInner&gt;,TResult&gt;&gt; resultSelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;!!TResult&gt; GroupJoin&lt;TOuter, TInner, TKey, TResult&gt;(class System.Linq.IQueryable`1&lt;!!TOuter&gt; outer, class System.Collections.Generic.IEnumerable`1&lt;!!TInner&gt; inner, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TOuter, !!TKey&gt;&gt; outerKeySelector, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TInner, !!TKey&gt;&gt; innerKeySelector, class System.Linq.Expressions.Expression`1&lt;class System.Func`3&lt;!!TOuter, class System.Collections.Generic.IEnumerable`1&lt;!!TInner&gt;, !!TResult&gt;&gt; resultSelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.GroupJoin``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GroupJoin(Of TOuter, TInner, TKey, TResult) (outer As IQueryable(Of TOuter), inner As IEnumerable(Of TInner), outerKeySelector As Expression(Of Func(Of TOuter, TKey)), innerKeySelector As Expression(Of Func(Of TInner, TKey)), resultSelector As Expression(Of Func(Of TOuter, IEnumerable(Of TInner), TResult))) As IQueryable(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TOuter, typename TInner, typename TKey, typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;TResult&gt; ^ GroupJoin(System::Linq::IQueryable&lt;TOuter&gt; ^ outer, System::Collections::Generic::IEnumerable&lt;TInner&gt; ^ inner, System::Linq::Expressions::Expression&lt;Func&lt;TOuter, TKey&gt; ^&gt; ^ outerKeySelector, System::Linq::Expressions::Expression&lt;Func&lt;TInner, TKey&gt; ^&gt; ^ innerKeySelector, System::Linq::Expressions::Expression&lt;Func&lt;TOuter, System::Collections::Generic::IEnumerable&lt;TInner&gt; ^, TResult&gt; ^&gt; ^ resultSelector);" />
      <MemberSignature Language="F#" Value="static member GroupJoin : System.Linq.IQueryable&lt;'Outer&gt; * seq&lt;'Inner&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Outer, 'Key&gt;&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Inner, 'Key&gt;&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Outer, seq&lt;'Inner&gt;, 'Result&gt;&gt; -&gt; System.Linq.IQueryable&lt;'Result&gt;" Usage="System.Linq.Queryable.GroupJoin (outer, inner, outerKeySelector, innerKeySelector, resultSelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TOuter" />
        <TypeParameter Name="TInner" />
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="outer" Type="System.Linq.IQueryable&lt;TOuter&gt;" RefType="this" />
        <Parameter Name="inner" Type="System.Collections.Generic.IEnumerable&lt;TInner&gt;" />
        <Parameter Name="outerKeySelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TOuter,TKey&gt;&gt;" />
        <Parameter Name="innerKeySelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TInner,TKey&gt;&gt;" />
        <Parameter Name="resultSelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TOuter,System.Collections.Generic.IEnumerable&lt;TInner&gt;,TResult&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TOuter"><span data-ttu-id="a55f4-831">Тип элементов первой последовательности.</span><span class="sxs-lookup"><span data-stu-id="a55f4-831">The type of the elements of the first sequence.</span></span></typeparam>
        <typeparam name="TInner"><span data-ttu-id="a55f4-832">Тип элементов второй последовательности.</span><span class="sxs-lookup"><span data-stu-id="a55f4-832">The type of the elements of the second sequence.</span></span></typeparam>
        <typeparam name="TKey"><span data-ttu-id="a55f4-833">Тип ключей, возвращаемых функциями селектора ключа.</span><span class="sxs-lookup"><span data-stu-id="a55f4-833">The type of the keys returned by the key selector functions.</span></span></typeparam>
        <typeparam name="TResult"><span data-ttu-id="a55f4-834">Тип результирующих элементов.</span><span class="sxs-lookup"><span data-stu-id="a55f4-834">The type of the result elements.</span></span></typeparam>
        <param name="outer"><span data-ttu-id="a55f4-835">Первая последовательность для соединения.</span><span class="sxs-lookup"><span data-stu-id="a55f4-835">The first sequence to join.</span></span></param>
        <param name="inner"><span data-ttu-id="a55f4-836">Последовательность, соединяемая с первой последовательностью.</span><span class="sxs-lookup"><span data-stu-id="a55f4-836">The sequence to join to the first sequence.</span></span></param>
        <param name="outerKeySelector"><span data-ttu-id="a55f4-837">Функция, извлекающая ключ соединения из каждого элемента первой последовательности.</span><span class="sxs-lookup"><span data-stu-id="a55f4-837">A function to extract the join key from each element of the first sequence.</span></span></param>
        <param name="innerKeySelector"><span data-ttu-id="a55f4-838">Функция, извлекающая ключ соединения из каждого элемента второй последовательности.</span><span class="sxs-lookup"><span data-stu-id="a55f4-838">A function to extract the join key from each element of the second sequence.</span></span></param>
        <param name="resultSelector"><span data-ttu-id="a55f4-839">Функция, создающая результирующий элемент для элемента первой последовательности и коллекции соответствующих элементов второй последовательности.</span><span class="sxs-lookup"><span data-stu-id="a55f4-839">A function to create a result element from an element from the first sequence and a collection of matching elements from the second sequence.</span></span></param>
        <summary><span data-ttu-id="a55f4-840">Устанавливает корреляцию между элементами двух последовательностей на основе равенства ключей и группирует результаты.</span><span class="sxs-lookup"><span data-stu-id="a55f4-840">Correlates the elements of two sequences based on key equality and groups the results.</span></span> <span data-ttu-id="a55f4-841">Для сравнения ключей используется компаратор проверки на равенство по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="a55f4-841">The default equality comparer is used to compare keys.</span></span></summary>
        <returns><span data-ttu-id="a55f4-842">Объект <see cref="T:System.Linq.IQueryable`1" />, который содержит элементы типа <paramref name="TResult" />, полученные в результате соединения двух последовательностей с группировкой.</span><span class="sxs-lookup"><span data-stu-id="a55f4-842">An <see cref="T:System.Linq.IQueryable`1" /> that contains elements of type <paramref name="TResult" /> obtained by performing a grouped join on two sequences.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a55f4-843">Этот метод имеет по крайней мере один параметр <xref:System.Linq.Expressions.Expression%601> типа, аргумент типа которого является одним <xref:System.Func%602> из типов.</span><span class="sxs-lookup"><span data-stu-id="a55f4-843">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="a55f4-844">Для этих параметров можно передать лямбда-выражение, которое будет скомпилировано в <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="a55f4-844">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="a55f4-845">Метод создает объект <xref:System.Linq.Expressions.MethodCallExpression> , который представляет вызов <xref:System.Linq.Queryable.GroupJoin%60%604%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2C%60%603%7D%7D%29> самого себя как сконструированного универсального метода. <xref:System.Linq.Queryable.GroupJoin%60%604%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2C%60%603%7D%7D%29></span><span class="sxs-lookup"><span data-stu-id="a55f4-845">The <xref:System.Linq.Queryable.GroupJoin%60%604%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2C%60%603%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.GroupJoin%60%604%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2C%60%603%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="a55f4-846">Затем <xref:System.Linq.Expressions.MethodCallExpression> он передает <xref:System.Linq.IQueryProvider> методу класса, представленного `outer`свойствомпараметра <xref:System.Linq.IQueryable.Provider%2A> <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> .</span><span class="sxs-lookup"><span data-stu-id="a55f4-846">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `outer` parameter.</span></span>  
  
 <span data-ttu-id="a55f4-847">Поведение запроса, которое происходит в результате выполнения дерева выражения, представляющего вызов <xref:System.Linq.Queryable.GroupJoin%60%604%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2C%60%603%7D%7D%29> , зависит от реализации типа `outer` параметра.</span><span class="sxs-lookup"><span data-stu-id="a55f4-847">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.GroupJoin%60%604%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2C%60%603%7D%7D%29> depends on the implementation of the type of the `outer` parameter.</span></span> <span data-ttu-id="a55f4-848">Ожидаемое поведение заключается в том `outerKeySelector` , `innerKeySelector` что функции и используются для извлечения ключей `outer` из `inner`и соответственно.</span><span class="sxs-lookup"><span data-stu-id="a55f4-848">The expected behavior is that the `outerKeySelector` and `innerKeySelector` functions are used to extract keys from `outer` and `inner`, respectively.</span></span> <span data-ttu-id="a55f4-849">Эти ключи сравниваются на равенство, чтобы соответствовать каждому `outer` элементу с нулевым или более `inner`элементами из.</span><span class="sxs-lookup"><span data-stu-id="a55f4-849">These keys are compared for equality to match each element in `outer` with zero or more elements from `inner`.</span></span> <span data-ttu-id="a55f4-850">Затем вызывается `resultSelector` функция для проецирования результирующего объекта из каждой группы коррелированных элементов.</span><span class="sxs-lookup"><span data-stu-id="a55f4-850">Then the `resultSelector` function is invoked to project a result object from each group of correlated elements.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a55f4-851">В следующем примере кода показано, как использовать <xref:System.Linq.Queryable.GroupJoin%60%604%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2C%60%603%7D%7D%29> для выполнения сгруппированного объединения в двух последовательностях.</span><span class="sxs-lookup"><span data-stu-id="a55f4-851">The following code example demonstrates how to use <xref:System.Linq.Queryable.GroupJoin%60%604%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2C%60%603%7D%7D%29> to perform a grouped join on two sequences.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#40](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#40)]
 [!code-vb[System.Linq.Queryable#40](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#40)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a55f4-852">Значение параметра <paramref name="outer" />, <paramref name="inner" />, <paramref name="outerKeySelector" />, <paramref name="innerKeySelector" /> или <paramref name="resultSelector" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-852"><paramref name="outer" /> or <paramref name="inner" /> or <paramref name="outerKeySelector" /> or <paramref name="innerKeySelector" /> or <paramref name="resultSelector" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GroupJoin&lt;TOuter,TInner,TKey,TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;TResult&gt; GroupJoin&lt;TOuter,TInner,TKey,TResult&gt; (this System.Linq.IQueryable&lt;TOuter&gt; outer, System.Collections.Generic.IEnumerable&lt;TInner&gt; inner, System.Linq.Expressions.Expression&lt;Func&lt;TOuter,TKey&gt;&gt; outerKeySelector, System.Linq.Expressions.Expression&lt;Func&lt;TInner,TKey&gt;&gt; innerKeySelector, System.Linq.Expressions.Expression&lt;Func&lt;TOuter,System.Collections.Generic.IEnumerable&lt;TInner&gt;,TResult&gt;&gt; resultSelector, System.Collections.Generic.IEqualityComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;!!TResult&gt; GroupJoin&lt;TOuter, TInner, TKey, TResult&gt;(class System.Linq.IQueryable`1&lt;!!TOuter&gt; outer, class System.Collections.Generic.IEnumerable`1&lt;!!TInner&gt; inner, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TOuter, !!TKey&gt;&gt; outerKeySelector, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TInner, !!TKey&gt;&gt; innerKeySelector, class System.Linq.Expressions.Expression`1&lt;class System.Func`3&lt;!!TOuter, class System.Collections.Generic.IEnumerable`1&lt;!!TInner&gt;, !!TResult&gt;&gt; resultSelector, class System.Collections.Generic.IEqualityComparer`1&lt;!!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.GroupJoin``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3}},System.Collections.Generic.IEqualityComparer{``2})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GroupJoin(Of TOuter, TInner, TKey, TResult) (outer As IQueryable(Of TOuter), inner As IEnumerable(Of TInner), outerKeySelector As Expression(Of Func(Of TOuter, TKey)), innerKeySelector As Expression(Of Func(Of TInner, TKey)), resultSelector As Expression(Of Func(Of TOuter, IEnumerable(Of TInner), TResult)), comparer As IEqualityComparer(Of TKey)) As IQueryable(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TOuter, typename TInner, typename TKey, typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;TResult&gt; ^ GroupJoin(System::Linq::IQueryable&lt;TOuter&gt; ^ outer, System::Collections::Generic::IEnumerable&lt;TInner&gt; ^ inner, System::Linq::Expressions::Expression&lt;Func&lt;TOuter, TKey&gt; ^&gt; ^ outerKeySelector, System::Linq::Expressions::Expression&lt;Func&lt;TInner, TKey&gt; ^&gt; ^ innerKeySelector, System::Linq::Expressions::Expression&lt;Func&lt;TOuter, System::Collections::Generic::IEnumerable&lt;TInner&gt; ^, TResult&gt; ^&gt; ^ resultSelector, System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member GroupJoin : System.Linq.IQueryable&lt;'Outer&gt; * seq&lt;'Inner&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Outer, 'Key&gt;&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Inner, 'Key&gt;&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Outer, seq&lt;'Inner&gt;, 'Result&gt;&gt; * System.Collections.Generic.IEqualityComparer&lt;'Key&gt; -&gt; System.Linq.IQueryable&lt;'Result&gt;" Usage="System.Linq.Queryable.GroupJoin (outer, inner, outerKeySelector, innerKeySelector, resultSelector, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TOuter" />
        <TypeParameter Name="TInner" />
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="outer" Type="System.Linq.IQueryable&lt;TOuter&gt;" RefType="this" />
        <Parameter Name="inner" Type="System.Collections.Generic.IEnumerable&lt;TInner&gt;" />
        <Parameter Name="outerKeySelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TOuter,TKey&gt;&gt;" />
        <Parameter Name="innerKeySelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TInner,TKey&gt;&gt;" />
        <Parameter Name="resultSelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TOuter,System.Collections.Generic.IEnumerable&lt;TInner&gt;,TResult&gt;&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TOuter"><span data-ttu-id="a55f4-853">Тип элементов первой последовательности.</span><span class="sxs-lookup"><span data-stu-id="a55f4-853">The type of the elements of the first sequence.</span></span></typeparam>
        <typeparam name="TInner"><span data-ttu-id="a55f4-854">Тип элементов второй последовательности.</span><span class="sxs-lookup"><span data-stu-id="a55f4-854">The type of the elements of the second sequence.</span></span></typeparam>
        <typeparam name="TKey"><span data-ttu-id="a55f4-855">Тип ключей, возвращаемых функциями селектора ключа.</span><span class="sxs-lookup"><span data-stu-id="a55f4-855">The type of the keys returned by the key selector functions.</span></span></typeparam>
        <typeparam name="TResult"><span data-ttu-id="a55f4-856">Тип результирующих элементов.</span><span class="sxs-lookup"><span data-stu-id="a55f4-856">The type of the result elements.</span></span></typeparam>
        <param name="outer"><span data-ttu-id="a55f4-857">Первая последовательность для соединения.</span><span class="sxs-lookup"><span data-stu-id="a55f4-857">The first sequence to join.</span></span></param>
        <param name="inner"><span data-ttu-id="a55f4-858">Последовательность, соединяемая с первой последовательностью.</span><span class="sxs-lookup"><span data-stu-id="a55f4-858">The sequence to join to the first sequence.</span></span></param>
        <param name="outerKeySelector"><span data-ttu-id="a55f4-859">Функция, извлекающая ключ соединения из каждого элемента первой последовательности.</span><span class="sxs-lookup"><span data-stu-id="a55f4-859">A function to extract the join key from each element of the first sequence.</span></span></param>
        <param name="innerKeySelector"><span data-ttu-id="a55f4-860">Функция, извлекающая ключ соединения из каждого элемента второй последовательности.</span><span class="sxs-lookup"><span data-stu-id="a55f4-860">A function to extract the join key from each element of the second sequence.</span></span></param>
        <param name="resultSelector"><span data-ttu-id="a55f4-861">Функция, создающая результирующий элемент для элемента первой последовательности и коллекции соответствующих элементов второй последовательности.</span><span class="sxs-lookup"><span data-stu-id="a55f4-861">A function to create a result element from an element from the first sequence and a collection of matching elements from the second sequence.</span></span></param>
        <param name="comparer"><span data-ttu-id="a55f4-862">Компаратор, используемый для хэширования и сравнения ключей.</span><span class="sxs-lookup"><span data-stu-id="a55f4-862">A comparer to hash and compare keys.</span></span></param>
        <summary><span data-ttu-id="a55f4-863">Устанавливает корреляцию между элементами двух последовательностей на основе равенства ключей и группирует результаты.</span><span class="sxs-lookup"><span data-stu-id="a55f4-863">Correlates the elements of two sequences based on key equality and groups the results.</span></span> <span data-ttu-id="a55f4-864">Для сравнения ключей используется указанный компаратор <see cref="T:System.Collections.Generic.IEqualityComparer`1" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-864">A specified <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> is used to compare keys.</span></span></summary>
        <returns><span data-ttu-id="a55f4-865">Объект <see cref="T:System.Linq.IQueryable`1" />, который содержит элементы типа <paramref name="TResult" />, полученные в результате соединения двух последовательностей с группировкой.</span><span class="sxs-lookup"><span data-stu-id="a55f4-865">An <see cref="T:System.Linq.IQueryable`1" /> that contains elements of type <paramref name="TResult" /> obtained by performing a grouped join on two sequences.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a55f4-866">Этот метод имеет по крайней мере один параметр <xref:System.Linq.Expressions.Expression%601> типа, аргумент типа которого является одним <xref:System.Func%602> из типов.</span><span class="sxs-lookup"><span data-stu-id="a55f4-866">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="a55f4-867">Для этих параметров можно передать лямбда-выражение, которое будет скомпилировано в <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="a55f4-867">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="a55f4-868">Метод создает объект <xref:System.Linq.Expressions.MethodCallExpression> , который представляет вызов <xref:System.Linq.Queryable.GroupJoin%60%604%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2C%60%603%7D%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%602%7D%29> самого себя как сконструированного универсального метода. <xref:System.Linq.Queryable.GroupJoin%60%604%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2C%60%603%7D%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%602%7D%29></span><span class="sxs-lookup"><span data-stu-id="a55f4-868">The <xref:System.Linq.Queryable.GroupJoin%60%604%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2C%60%603%7D%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%602%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.GroupJoin%60%604%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2C%60%603%7D%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%602%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="a55f4-869">Затем <xref:System.Linq.Expressions.MethodCallExpression> он передает <xref:System.Linq.IQueryProvider> методу класса, представленного `outer`свойствомпараметра <xref:System.Linq.IQueryable.Provider%2A> <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> .</span><span class="sxs-lookup"><span data-stu-id="a55f4-869">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `outer` parameter.</span></span>  
  
 <span data-ttu-id="a55f4-870">Поведение запроса, которое происходит в результате выполнения дерева выражения, представляющего вызов <xref:System.Linq.Queryable.GroupJoin%60%604%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2C%60%603%7D%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%602%7D%29> , зависит от реализации типа `outer` параметра.</span><span class="sxs-lookup"><span data-stu-id="a55f4-870">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.GroupJoin%60%604%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2C%60%603%7D%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%602%7D%29> depends on the implementation of the type of the `outer` parameter.</span></span> <span data-ttu-id="a55f4-871">Ожидаемое поведение заключается в том `outerKeySelector` , `innerKeySelector` что функции и используются для извлечения ключей `outer` из `inner`и соответственно.</span><span class="sxs-lookup"><span data-stu-id="a55f4-871">The expected behavior is that the `outerKeySelector` and `innerKeySelector` functions are used to extract keys from `outer` and `inner`, respectively.</span></span> <span data-ttu-id="a55f4-872">Эти ключи сравниваются на равенство с `comparer`помощью.</span><span class="sxs-lookup"><span data-stu-id="a55f4-872">These keys are compared for equality by using `comparer`.</span></span> <span data-ttu-id="a55f4-873">Результат сравнения используется для сопоставления каждого элемента `outer` с нулем или более элементов из. `inner`</span><span class="sxs-lookup"><span data-stu-id="a55f4-873">The outcome of the comparisons is used to match each element in `outer` with zero or more elements from `inner`.</span></span> <span data-ttu-id="a55f4-874">Затем вызывается `resultSelector` функция для проецирования результирующего объекта из каждой группы коррелированных элементов.</span><span class="sxs-lookup"><span data-stu-id="a55f4-874">Then the `resultSelector` function is invoked to project a result object from each group of correlated elements.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a55f4-875">Значение параметра <paramref name="outer" />, <paramref name="inner" />, <paramref name="outerKeySelector" />, <paramref name="innerKeySelector" /> или <paramref name="resultSelector" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-875"><paramref name="outer" /> or <paramref name="inner" /> or <paramref name="outerKeySelector" /> or <paramref name="innerKeySelector" /> or <paramref name="resultSelector" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Intersect&lt;TSource&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a55f4-876">Находит пересечение множеств, представленных двумя последовательностями.</span><span class="sxs-lookup"><span data-stu-id="a55f4-876">Produces the set intersection of two sequences.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Intersect&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;TSource&gt; Intersect&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source1, System.Collections.Generic.IEnumerable&lt;TSource&gt; source2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;!!TSource&gt; Intersect&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source1, class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; source2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Intersect``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Intersect(Of TSource) (source1 As IQueryable(Of TSource), source2 As IEnumerable(Of TSource)) As IQueryable(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;TSource&gt; ^ Intersect(System::Linq::IQueryable&lt;TSource&gt; ^ source1, System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ source2);" />
      <MemberSignature Language="F#" Value="static member Intersect : System.Linq.IQueryable&lt;'Source&gt; * seq&lt;'Source&gt; -&gt; System.Linq.IQueryable&lt;'Source&gt;" Usage="System.Linq.Queryable.Intersect (source1, source2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source1" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="source2" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="a55f4-877">Тип элементов входных последовательностей.</span><span class="sxs-lookup"><span data-stu-id="a55f4-877">The type of the elements of the input sequences.</span></span></typeparam>
        <param name="source1"><span data-ttu-id="a55f4-878">Последовательность, из которой возвращаются различающиеся элементы, входящие также в <paramref name="source2" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-878">A sequence whose distinct elements that also appear in <paramref name="source2" /> are returned.</span></span></param>
        <param name="source2"><span data-ttu-id="a55f4-879">Последовательность, из которой возвращаются различающиеся элементы, входящие также в первую последовательность.</span><span class="sxs-lookup"><span data-stu-id="a55f4-879">A sequence whose distinct elements that also appear in the first sequence are returned.</span></span></param>
        <summary><span data-ttu-id="a55f4-880">Находит пересечение множеств, представленных двумя последовательностями, используя для сравнения значений компаратор проверки на равенство по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="a55f4-880">Produces the set intersection of two sequences by using the default equality comparer to compare values.</span></span></summary>
        <returns><span data-ttu-id="a55f4-881">Последовательность, представляющая собой пересечение двух заданных последовательностей как множеств.</span><span class="sxs-lookup"><span data-stu-id="a55f4-881">A sequence that contains the set intersection of the two sequences.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a55f4-882">Метод создает объект <xref:System.Linq.Expressions.MethodCallExpression> , который представляет вызов <xref:System.Linq.Queryable.Intersect%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%29> самого себя как сконструированного универсального метода. <xref:System.Linq.Queryable.Intersect%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%29></span><span class="sxs-lookup"><span data-stu-id="a55f4-882">The <xref:System.Linq.Queryable.Intersect%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Intersect%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="a55f4-883">Затем <xref:System.Linq.Expressions.MethodCallExpression> он передает <xref:System.Linq.IQueryProvider> методу класса, представленного `source1`свойствомпараметра <xref:System.Linq.IQueryable.Provider%2A> <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> .</span><span class="sxs-lookup"><span data-stu-id="a55f4-883">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source1` parameter.</span></span>  
  
 <span data-ttu-id="a55f4-884">Поведение запроса, которое происходит в результате выполнения дерева выражения, представляющего вызов <xref:System.Linq.Queryable.Intersect%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%29> , зависит от реализации типа `source1` параметра.</span><span class="sxs-lookup"><span data-stu-id="a55f4-884">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Intersect%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%29> depends on the implementation of the type of the `source1` parameter.</span></span> <span data-ttu-id="a55f4-885">Ожидаемое поведение заключается в том, что возвращаются `source1` все элементы, которые `source2` также находятся в.</span><span class="sxs-lookup"><span data-stu-id="a55f4-885">The expected behavior is that all the elements in `source1` that are also in `source2` are returned.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a55f4-886">В следующем примере кода показано, как использовать <xref:System.Linq.Queryable.Intersect%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%29> для возврата элементов, которые отображаются в каждой из двух последовательностей.</span><span class="sxs-lookup"><span data-stu-id="a55f4-886">The following code example demonstrates how to use <xref:System.Linq.Queryable.Intersect%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%29> to return the elements that appear in each of two sequences.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#41](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#41)]
 [!code-vb[System.Linq.Queryable#41](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#41)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a55f4-887">Значение параметра <paramref name="source1" /> или <paramref name="source2" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-887"><paramref name="source1" /> or <paramref name="source2" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Intersect&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;TSource&gt; Intersect&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source1, System.Collections.Generic.IEnumerable&lt;TSource&gt; source2, System.Collections.Generic.IEqualityComparer&lt;TSource&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;!!TSource&gt; Intersect&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source1, class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; source2, class System.Collections.Generic.IEqualityComparer`1&lt;!!TSource&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Intersect``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Intersect(Of TSource) (source1 As IQueryable(Of TSource), source2 As IEnumerable(Of TSource), comparer As IEqualityComparer(Of TSource)) As IQueryable(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;TSource&gt; ^ Intersect(System::Linq::IQueryable&lt;TSource&gt; ^ source1, System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ source2, System::Collections::Generic::IEqualityComparer&lt;TSource&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member Intersect : System.Linq.IQueryable&lt;'Source&gt; * seq&lt;'Source&gt; * System.Collections.Generic.IEqualityComparer&lt;'Source&gt; -&gt; System.Linq.IQueryable&lt;'Source&gt;" Usage="System.Linq.Queryable.Intersect (source1, source2, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source1" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="source2" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TSource&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="a55f4-888">Тип элементов входных последовательностей.</span><span class="sxs-lookup"><span data-stu-id="a55f4-888">The type of the elements of the input sequences.</span></span></typeparam>
        <param name="source1"><span data-ttu-id="a55f4-889">Объект <see cref="T:System.Linq.IQueryable`1" />, из которого требуется извлечь различающиеся элементы, входящие также в последовательность <paramref name="source2" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-889">An <see cref="T:System.Linq.IQueryable`1" /> whose distinct elements that also appear in <paramref name="source2" /> are returned.</span></span></param>
        <param name="source2"><span data-ttu-id="a55f4-890">Объект <see cref="T:System.Collections.Generic.IEnumerable`1" />, из которого извлекаются различающиеся элементы, входящие также в первую последовательность.</span><span class="sxs-lookup"><span data-stu-id="a55f4-890">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> whose distinct elements that also appear in the first sequence are returned.</span></span></param>
        <param name="comparer"><span data-ttu-id="a55f4-891">Компаратор <see cref="T:System.Collections.Generic.IEqualityComparer`1" />, используемый для сравнения значений.</span><span class="sxs-lookup"><span data-stu-id="a55f4-891">An <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> to compare values.</span></span></param>
        <summary><span data-ttu-id="a55f4-892">Находит пересечение множеств, представленных двумя последовательностями, используя для сравнения значений указанный компаратор <see cref="T:System.Collections.Generic.IEqualityComparer`1" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-892">Produces the set intersection of two sequences by using the specified <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> to compare values.</span></span></summary>
        <returns><span data-ttu-id="a55f4-893">Объект <see cref="T:System.Linq.IQueryable`1" />, являющийся пересечением двух последовательностей как множеств.</span><span class="sxs-lookup"><span data-stu-id="a55f4-893">An <see cref="T:System.Linq.IQueryable`1" /> that contains the set intersection of the two sequences.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a55f4-894">Метод создает объект <xref:System.Linq.Expressions.MethodCallExpression> , который представляет вызов <xref:System.Linq.Queryable.Intersect%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%600%7D%29> самого себя как сконструированного универсального метода. <xref:System.Linq.Queryable.Intersect%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%600%7D%29></span><span class="sxs-lookup"><span data-stu-id="a55f4-894">The <xref:System.Linq.Queryable.Intersect%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%600%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Intersect%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%600%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="a55f4-895">Затем <xref:System.Linq.Expressions.MethodCallExpression> он передает <xref:System.Linq.IQueryProvider> методу класса, представленного `source1`свойствомпараметра <xref:System.Linq.IQueryable.Provider%2A> <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> .</span><span class="sxs-lookup"><span data-stu-id="a55f4-895">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source1` parameter.</span></span>  
  
 <span data-ttu-id="a55f4-896">Поведение запроса, которое происходит в результате выполнения дерева выражения, представляющего вызов <xref:System.Linq.Queryable.Intersect%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%600%7D%29> , зависит от реализации типа `source1` параметра.</span><span class="sxs-lookup"><span data-stu-id="a55f4-896">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Intersect%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%600%7D%29> depends on the implementation of the type of the `source1` parameter.</span></span> <span data-ttu-id="a55f4-897">Ожидаемое поведение заключается в том, что возвращаются `source1` все элементы, которые `source2` также находятся в.</span><span class="sxs-lookup"><span data-stu-id="a55f4-897">The expected behavior is that all the elements in `source1` that are also in `source2` are returned.</span></span> <span data-ttu-id="a55f4-898">`comparer` Параметр используется для сравнения элементов.</span><span class="sxs-lookup"><span data-stu-id="a55f4-898">The `comparer` parameter is used to compare elements.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a55f4-899">Значение параметра <paramref name="source1" /> или <paramref name="source2" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-899"><paramref name="source1" /> or <paramref name="source2" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Join&lt;TOuter,TInner,TKey,TResult&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a55f4-900">Устанавливает корреляцию между элементами двух последовательностей на основе сопоставления ключей.</span><span class="sxs-lookup"><span data-stu-id="a55f4-900">Correlates the elements of two sequences based on matching keys.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Join&lt;TOuter,TInner,TKey,TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;TResult&gt; Join&lt;TOuter,TInner,TKey,TResult&gt; (this System.Linq.IQueryable&lt;TOuter&gt; outer, System.Collections.Generic.IEnumerable&lt;TInner&gt; inner, System.Linq.Expressions.Expression&lt;Func&lt;TOuter,TKey&gt;&gt; outerKeySelector, System.Linq.Expressions.Expression&lt;Func&lt;TInner,TKey&gt;&gt; innerKeySelector, System.Linq.Expressions.Expression&lt;Func&lt;TOuter,TInner,TResult&gt;&gt; resultSelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;!!TResult&gt; Join&lt;TOuter, TInner, TKey, TResult&gt;(class System.Linq.IQueryable`1&lt;!!TOuter&gt; outer, class System.Collections.Generic.IEnumerable`1&lt;!!TInner&gt; inner, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TOuter, !!TKey&gt;&gt; outerKeySelector, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TInner, !!TKey&gt;&gt; innerKeySelector, class System.Linq.Expressions.Expression`1&lt;class System.Func`3&lt;!!TOuter, !!TInner, !!TResult&gt;&gt; resultSelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Join``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,``1,``3}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Join(Of TOuter, TInner, TKey, TResult) (outer As IQueryable(Of TOuter), inner As IEnumerable(Of TInner), outerKeySelector As Expression(Of Func(Of TOuter, TKey)), innerKeySelector As Expression(Of Func(Of TInner, TKey)), resultSelector As Expression(Of Func(Of TOuter, TInner, TResult))) As IQueryable(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TOuter, typename TInner, typename TKey, typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;TResult&gt; ^ Join(System::Linq::IQueryable&lt;TOuter&gt; ^ outer, System::Collections::Generic::IEnumerable&lt;TInner&gt; ^ inner, System::Linq::Expressions::Expression&lt;Func&lt;TOuter, TKey&gt; ^&gt; ^ outerKeySelector, System::Linq::Expressions::Expression&lt;Func&lt;TInner, TKey&gt; ^&gt; ^ innerKeySelector, System::Linq::Expressions::Expression&lt;Func&lt;TOuter, TInner, TResult&gt; ^&gt; ^ resultSelector);" />
      <MemberSignature Language="F#" Value="static member Join : System.Linq.IQueryable&lt;'Outer&gt; * seq&lt;'Inner&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Outer, 'Key&gt;&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Inner, 'Key&gt;&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Outer, 'Inner, 'Result&gt;&gt; -&gt; System.Linq.IQueryable&lt;'Result&gt;" Usage="System.Linq.Queryable.Join (outer, inner, outerKeySelector, innerKeySelector, resultSelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TOuter" />
        <TypeParameter Name="TInner" />
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="outer" Type="System.Linq.IQueryable&lt;TOuter&gt;" RefType="this" />
        <Parameter Name="inner" Type="System.Collections.Generic.IEnumerable&lt;TInner&gt;" />
        <Parameter Name="outerKeySelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TOuter,TKey&gt;&gt;" />
        <Parameter Name="innerKeySelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TInner,TKey&gt;&gt;" />
        <Parameter Name="resultSelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TOuter,TInner,TResult&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TOuter"><span data-ttu-id="a55f4-901">Тип элементов первой последовательности.</span><span class="sxs-lookup"><span data-stu-id="a55f4-901">The type of the elements of the first sequence.</span></span></typeparam>
        <typeparam name="TInner"><span data-ttu-id="a55f4-902">Тип элементов второй последовательности.</span><span class="sxs-lookup"><span data-stu-id="a55f4-902">The type of the elements of the second sequence.</span></span></typeparam>
        <typeparam name="TKey"><span data-ttu-id="a55f4-903">Тип ключей, возвращаемых функциями селектора ключа.</span><span class="sxs-lookup"><span data-stu-id="a55f4-903">The type of the keys returned by the key selector functions.</span></span></typeparam>
        <typeparam name="TResult"><span data-ttu-id="a55f4-904">Тип результирующих элементов.</span><span class="sxs-lookup"><span data-stu-id="a55f4-904">The type of the result elements.</span></span></typeparam>
        <param name="outer"><span data-ttu-id="a55f4-905">Первая последовательность для соединения.</span><span class="sxs-lookup"><span data-stu-id="a55f4-905">The first sequence to join.</span></span></param>
        <param name="inner"><span data-ttu-id="a55f4-906">Последовательность, соединяемая с первой последовательностью.</span><span class="sxs-lookup"><span data-stu-id="a55f4-906">The sequence to join to the first sequence.</span></span></param>
        <param name="outerKeySelector"><span data-ttu-id="a55f4-907">Функция, извлекающая ключ соединения из каждого элемента первой последовательности.</span><span class="sxs-lookup"><span data-stu-id="a55f4-907">A function to extract the join key from each element of the first sequence.</span></span></param>
        <param name="innerKeySelector"><span data-ttu-id="a55f4-908">Функция, извлекающая ключ соединения из каждого элемента второй последовательности.</span><span class="sxs-lookup"><span data-stu-id="a55f4-908">A function to extract the join key from each element of the second sequence.</span></span></param>
        <param name="resultSelector"><span data-ttu-id="a55f4-909">Функция для создания результирующего элемента для пары соответствующих элементов.</span><span class="sxs-lookup"><span data-stu-id="a55f4-909">A function to create a result element from two matching elements.</span></span></param>
        <summary><span data-ttu-id="a55f4-910">Устанавливает корреляцию между элементами двух последовательностей на основе сопоставления ключей.</span><span class="sxs-lookup"><span data-stu-id="a55f4-910">Correlates the elements of two sequences based on matching keys.</span></span> <span data-ttu-id="a55f4-911">Для сравнения ключей используется компаратор проверки на равенство по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="a55f4-911">The default equality comparer is used to compare keys.</span></span></summary>
        <returns><span data-ttu-id="a55f4-912">Объект <see cref="T:System.Linq.IQueryable`1" />, который содержит элементы типа <paramref name="TResult" />, полученные в результате внутреннего соединения двух последовательностей.</span><span class="sxs-lookup"><span data-stu-id="a55f4-912">An <see cref="T:System.Linq.IQueryable`1" /> that has elements of type <paramref name="TResult" /> obtained by performing an inner join on two sequences.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a55f4-913">Этот метод имеет по крайней мере один параметр <xref:System.Linq.Expressions.Expression%601> типа, аргумент типа которого является одним <xref:System.Func%602> из типов.</span><span class="sxs-lookup"><span data-stu-id="a55f4-913">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="a55f4-914">Для этих параметров можно передать лямбда-выражение, которое будет скомпилировано в <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="a55f4-914">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="a55f4-915">Метод создает объект <xref:System.Linq.Expressions.MethodCallExpression> , который представляет вызов <xref:System.Linq.Queryable.Join%60%604%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%2C%60%603%7D%7D%29> самого себя как сконструированного универсального метода. <xref:System.Linq.Queryable.Join%60%604%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%2C%60%603%7D%7D%29></span><span class="sxs-lookup"><span data-stu-id="a55f4-915">The <xref:System.Linq.Queryable.Join%60%604%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%2C%60%603%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Join%60%604%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%2C%60%603%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="a55f4-916">Затем <xref:System.Linq.Expressions.MethodCallExpression> он передает <xref:System.Linq.IQueryProvider> методу класса, представленного `outer`свойствомпараметра <xref:System.Linq.IQueryable.Provider%2A> <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> .</span><span class="sxs-lookup"><span data-stu-id="a55f4-916">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `outer` parameter.</span></span>  
  
 <span data-ttu-id="a55f4-917">Поведение запроса, которое происходит в результате выполнения дерева выражения, представляющего вызов <xref:System.Linq.Queryable.Join%60%604%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%2C%60%603%7D%7D%29> , зависит от реализации типа `outer` параметра.</span><span class="sxs-lookup"><span data-stu-id="a55f4-917">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Join%60%604%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%2C%60%603%7D%7D%29> depends on the implementation of the type of the `outer` parameter.</span></span> <span data-ttu-id="a55f4-918">Ожидаемым поведением является внутреннее соединение.</span><span class="sxs-lookup"><span data-stu-id="a55f4-918">The expected behavior is that of an inner join.</span></span> <span data-ttu-id="a55f4-919">`outer` `inner`Функции и используются`innerKeySelector` для извлечения ключей из и соответственно. `outerKeySelector`</span><span class="sxs-lookup"><span data-stu-id="a55f4-919">The `outerKeySelector` and `innerKeySelector` functions are used to extract keys from `outer` and `inner`, respectively.</span></span> <span data-ttu-id="a55f4-920">Эти ключи сравниваются на равенство для сопоставления элементов из каждой последовательности.</span><span class="sxs-lookup"><span data-stu-id="a55f4-920">These keys are compared for equality to match elements from each sequence.</span></span> <span data-ttu-id="a55f4-921">Пара элементов хранится для каждого элемента в `inner` , который соответствует элементу в. `outer`</span><span class="sxs-lookup"><span data-stu-id="a55f4-921">A pair of elements is stored for each element in `inner` that matches an element in `outer`.</span></span> <span data-ttu-id="a55f4-922">Затем вызывается `resultSelector` функция для проецирования результирующего объекта из каждой пары совпадающих элементов.</span><span class="sxs-lookup"><span data-stu-id="a55f4-922">Then the `resultSelector` function is invoked to project a result object from each pair of matching elements.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a55f4-923">В следующем примере кода показано, как использовать <xref:System.Linq.Queryable.Join%60%604%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%2C%60%603%7D%7D%29> для выполнения внутреннего объединения двух последовательностей на основе общего ключа.</span><span class="sxs-lookup"><span data-stu-id="a55f4-923">The following code example demonstrates how to use <xref:System.Linq.Queryable.Join%60%604%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%2C%60%603%7D%7D%29> to perform an inner join of two sequences based on a common key.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#42](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#42)]
 [!code-vb[System.Linq.Queryable#42](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#42)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a55f4-924">Значение параметра <paramref name="outer" />, <paramref name="inner" />, <paramref name="outerKeySelector" />, <paramref name="innerKeySelector" /> или <paramref name="resultSelector" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-924"><paramref name="outer" /> or <paramref name="inner" /> or <paramref name="outerKeySelector" /> or <paramref name="innerKeySelector" /> or <paramref name="resultSelector" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Join&lt;TOuter,TInner,TKey,TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;TResult&gt; Join&lt;TOuter,TInner,TKey,TResult&gt; (this System.Linq.IQueryable&lt;TOuter&gt; outer, System.Collections.Generic.IEnumerable&lt;TInner&gt; inner, System.Linq.Expressions.Expression&lt;Func&lt;TOuter,TKey&gt;&gt; outerKeySelector, System.Linq.Expressions.Expression&lt;Func&lt;TInner,TKey&gt;&gt; innerKeySelector, System.Linq.Expressions.Expression&lt;Func&lt;TOuter,TInner,TResult&gt;&gt; resultSelector, System.Collections.Generic.IEqualityComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;!!TResult&gt; Join&lt;TOuter, TInner, TKey, TResult&gt;(class System.Linq.IQueryable`1&lt;!!TOuter&gt; outer, class System.Collections.Generic.IEnumerable`1&lt;!!TInner&gt; inner, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TOuter, !!TKey&gt;&gt; outerKeySelector, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TInner, !!TKey&gt;&gt; innerKeySelector, class System.Linq.Expressions.Expression`1&lt;class System.Func`3&lt;!!TOuter, !!TInner, !!TResult&gt;&gt; resultSelector, class System.Collections.Generic.IEqualityComparer`1&lt;!!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Join``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,``1,``3}},System.Collections.Generic.IEqualityComparer{``2})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Join(Of TOuter, TInner, TKey, TResult) (outer As IQueryable(Of TOuter), inner As IEnumerable(Of TInner), outerKeySelector As Expression(Of Func(Of TOuter, TKey)), innerKeySelector As Expression(Of Func(Of TInner, TKey)), resultSelector As Expression(Of Func(Of TOuter, TInner, TResult)), comparer As IEqualityComparer(Of TKey)) As IQueryable(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TOuter, typename TInner, typename TKey, typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;TResult&gt; ^ Join(System::Linq::IQueryable&lt;TOuter&gt; ^ outer, System::Collections::Generic::IEnumerable&lt;TInner&gt; ^ inner, System::Linq::Expressions::Expression&lt;Func&lt;TOuter, TKey&gt; ^&gt; ^ outerKeySelector, System::Linq::Expressions::Expression&lt;Func&lt;TInner, TKey&gt; ^&gt; ^ innerKeySelector, System::Linq::Expressions::Expression&lt;Func&lt;TOuter, TInner, TResult&gt; ^&gt; ^ resultSelector, System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member Join : System.Linq.IQueryable&lt;'Outer&gt; * seq&lt;'Inner&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Outer, 'Key&gt;&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Inner, 'Key&gt;&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Outer, 'Inner, 'Result&gt;&gt; * System.Collections.Generic.IEqualityComparer&lt;'Key&gt; -&gt; System.Linq.IQueryable&lt;'Result&gt;" Usage="System.Linq.Queryable.Join (outer, inner, outerKeySelector, innerKeySelector, resultSelector, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TOuter" />
        <TypeParameter Name="TInner" />
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="outer" Type="System.Linq.IQueryable&lt;TOuter&gt;" RefType="this" />
        <Parameter Name="inner" Type="System.Collections.Generic.IEnumerable&lt;TInner&gt;" />
        <Parameter Name="outerKeySelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TOuter,TKey&gt;&gt;" />
        <Parameter Name="innerKeySelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TInner,TKey&gt;&gt;" />
        <Parameter Name="resultSelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TOuter,TInner,TResult&gt;&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TOuter"><span data-ttu-id="a55f4-925">Тип элементов первой последовательности.</span><span class="sxs-lookup"><span data-stu-id="a55f4-925">The type of the elements of the first sequence.</span></span></typeparam>
        <typeparam name="TInner"><span data-ttu-id="a55f4-926">Тип элементов второй последовательности.</span><span class="sxs-lookup"><span data-stu-id="a55f4-926">The type of the elements of the second sequence.</span></span></typeparam>
        <typeparam name="TKey"><span data-ttu-id="a55f4-927">Тип ключей, возвращаемых функциями селектора ключа.</span><span class="sxs-lookup"><span data-stu-id="a55f4-927">The type of the keys returned by the key selector functions.</span></span></typeparam>
        <typeparam name="TResult"><span data-ttu-id="a55f4-928">Тип результирующих элементов.</span><span class="sxs-lookup"><span data-stu-id="a55f4-928">The type of the result elements.</span></span></typeparam>
        <param name="outer"><span data-ttu-id="a55f4-929">Первая последовательность для соединения.</span><span class="sxs-lookup"><span data-stu-id="a55f4-929">The first sequence to join.</span></span></param>
        <param name="inner"><span data-ttu-id="a55f4-930">Последовательность, соединяемая с первой последовательностью.</span><span class="sxs-lookup"><span data-stu-id="a55f4-930">The sequence to join to the first sequence.</span></span></param>
        <param name="outerKeySelector"><span data-ttu-id="a55f4-931">Функция, извлекающая ключ соединения из каждого элемента первой последовательности.</span><span class="sxs-lookup"><span data-stu-id="a55f4-931">A function to extract the join key from each element of the first sequence.</span></span></param>
        <param name="innerKeySelector"><span data-ttu-id="a55f4-932">Функция, извлекающая ключ соединения из каждого элемента второй последовательности.</span><span class="sxs-lookup"><span data-stu-id="a55f4-932">A function to extract the join key from each element of the second sequence.</span></span></param>
        <param name="resultSelector"><span data-ttu-id="a55f4-933">Функция для создания результирующего элемента для пары соответствующих элементов.</span><span class="sxs-lookup"><span data-stu-id="a55f4-933">A function to create a result element from two matching elements.</span></span></param>
        <param name="comparer"><span data-ttu-id="a55f4-934">Компаратор <see cref="T:System.Collections.Generic.IEqualityComparer`1" />, используемый для хэширования и сравнения ключей.</span><span class="sxs-lookup"><span data-stu-id="a55f4-934">An <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> to hash and compare keys.</span></span></param>
        <summary><span data-ttu-id="a55f4-935">Устанавливает корреляцию между элементами двух последовательностей на основе сопоставления ключей.</span><span class="sxs-lookup"><span data-stu-id="a55f4-935">Correlates the elements of two sequences based on matching keys.</span></span> <span data-ttu-id="a55f4-936">Для сравнения ключей используется указанный компаратор <see cref="T:System.Collections.Generic.IEqualityComparer`1" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-936">A specified <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> is used to compare keys.</span></span></summary>
        <returns><span data-ttu-id="a55f4-937">Объект <see cref="T:System.Linq.IQueryable`1" />, который содержит элементы типа <paramref name="TResult" />, полученные в результате внутреннего соединения двух последовательностей.</span><span class="sxs-lookup"><span data-stu-id="a55f4-937">An <see cref="T:System.Linq.IQueryable`1" /> that has elements of type <paramref name="TResult" /> obtained by performing an inner join on two sequences.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a55f4-938">Этот метод имеет по крайней мере один параметр <xref:System.Linq.Expressions.Expression%601> типа, аргумент типа которого является одним <xref:System.Func%602> из типов.</span><span class="sxs-lookup"><span data-stu-id="a55f4-938">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="a55f4-939">Для этих параметров можно передать лямбда-выражение, которое будет скомпилировано в <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="a55f4-939">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="a55f4-940">Метод создает объект <xref:System.Linq.Expressions.MethodCallExpression> , который представляет вызов <xref:System.Linq.Queryable.Join%60%604%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%2C%60%603%7D%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%602%7D%29> самого себя как сконструированного универсального метода. <xref:System.Linq.Queryable.Join%60%604%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%2C%60%603%7D%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%602%7D%29></span><span class="sxs-lookup"><span data-stu-id="a55f4-940">The <xref:System.Linq.Queryable.Join%60%604%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%2C%60%603%7D%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%602%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Join%60%604%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%2C%60%603%7D%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%602%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="a55f4-941">Затем <xref:System.Linq.Expressions.MethodCallExpression> он передает <xref:System.Linq.IQueryProvider> методу класса, представленного `outer`свойствомпараметра <xref:System.Linq.IQueryable.Provider%2A> <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> .</span><span class="sxs-lookup"><span data-stu-id="a55f4-941">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `outer` parameter.</span></span>  
  
 <span data-ttu-id="a55f4-942">Поведение запроса, которое происходит в результате выполнения дерева выражения, представляющего вызов <xref:System.Linq.Queryable.Join%60%604%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%2C%60%603%7D%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%602%7D%29> , зависит от реализации типа `outer` параметра.</span><span class="sxs-lookup"><span data-stu-id="a55f4-942">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Join%60%604%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%601%2C%60%602%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%2C%60%603%7D%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%602%7D%29> depends on the implementation of the type of the `outer` parameter.</span></span> <span data-ttu-id="a55f4-943">Ожидаемым поведением является внутреннее соединение.</span><span class="sxs-lookup"><span data-stu-id="a55f4-943">The expected behavior is that of an inner join.</span></span> <span data-ttu-id="a55f4-944">`outer` `inner`Функции и используются`innerKeySelector` для извлечения ключей из и соответственно. `outerKeySelector`</span><span class="sxs-lookup"><span data-stu-id="a55f4-944">The `outerKeySelector` and `innerKeySelector` functions are used to extract keys from `outer` and `inner`, respectively.</span></span> <span data-ttu-id="a55f4-945">Эти ключи сравниваются на равенство с `comparer`помощью.</span><span class="sxs-lookup"><span data-stu-id="a55f4-945">These keys are compared for equality by using `comparer`.</span></span> <span data-ttu-id="a55f4-946">Результат сравнения используется для создания совпадающей пары для каждого элемента в `inner` , который соответствует элементу в. `outer`</span><span class="sxs-lookup"><span data-stu-id="a55f4-946">The outcome of the comparisons is used to create a matching pair for each element in `inner` that matches an element in `outer`.</span></span> <span data-ttu-id="a55f4-947">Затем вызывается `resultSelector` функция для проецирования результирующего объекта из каждой пары совпадающих элементов.</span><span class="sxs-lookup"><span data-stu-id="a55f4-947">Then the `resultSelector` function is invoked to project a result object from each pair of matching elements.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a55f4-948">Значение параметра <paramref name="outer" />, <paramref name="inner" />, <paramref name="outerKeySelector" />, <paramref name="innerKeySelector" /> или <paramref name="resultSelector" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-948"><paramref name="outer" /> or <paramref name="inner" /> or <paramref name="outerKeySelector" /> or <paramref name="innerKeySelector" /> or <paramref name="resultSelector" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Last&lt;TSource&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a55f4-949">Возвращает последний элемент последовательности.</span><span class="sxs-lookup"><span data-stu-id="a55f4-949">Returns the last element in a sequence.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Last&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static TSource Last&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TSource Last&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Last``1(System.Linq.IQueryable{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Last(Of TSource) (source As IQueryable(Of TSource)) As TSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TSource Last(System::Linq::IQueryable&lt;TSource&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Last : System.Linq.IQueryable&lt;'Source&gt; -&gt; 'Source" Usage="System.Linq.Queryable.Last source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TSource</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="a55f4-950">Тип элементов <paramref name="source" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-950">The type of the elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="a55f4-951">Объект <see cref="T:System.Linq.IQueryable`1" />, последний элемент которого требуется возвратить.</span><span class="sxs-lookup"><span data-stu-id="a55f4-951">An <see cref="T:System.Linq.IQueryable`1" /> to return the last element of.</span></span></param>
        <summary><span data-ttu-id="a55f4-952">Возвращает последний элемент последовательности.</span><span class="sxs-lookup"><span data-stu-id="a55f4-952">Returns the last element in a sequence.</span></span></summary>
        <returns><span data-ttu-id="a55f4-953">Значение, находящееся в последней позиции последовательности <paramref name="source" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-953">The value at the last position in <paramref name="source" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a55f4-954">Метод создает объект <xref:System.Linq.Expressions.MethodCallExpression> , который представляет вызов <xref:System.Linq.Queryable.Last%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> самого себя как сконструированного универсального метода. <xref:System.Linq.Queryable.Last%60%601%28System.Linq.IQueryable%7B%60%600%7D%29></span><span class="sxs-lookup"><span data-stu-id="a55f4-954">The <xref:System.Linq.Queryable.Last%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Last%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="a55f4-955">Затем <xref:System.Linq.Expressions.MethodCallExpression> он передает <xref:System.Linq.IQueryProvider> методу класса, представленного `source`свойствомпараметра <xref:System.Linq.IQueryable.Provider%2A> <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> .</span><span class="sxs-lookup"><span data-stu-id="a55f4-955">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="a55f4-956">Поведение запроса, которое происходит в результате выполнения дерева выражения, представляющего вызов <xref:System.Linq.Queryable.Last%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> , зависит от реализации типа `source` параметра.</span><span class="sxs-lookup"><span data-stu-id="a55f4-956">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Last%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="a55f4-957">Ожидаемое поведение заключается в том, что он возвращает последний `source`элемент в.</span><span class="sxs-lookup"><span data-stu-id="a55f4-957">The expected behavior is that it returns the last element in `source`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a55f4-958">В следующем примере кода показано, как использовать <xref:System.Linq.Queryable.Last%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> для возврата последнего элемента массива.</span><span class="sxs-lookup"><span data-stu-id="a55f4-958">The following code example demonstrates how to use <xref:System.Linq.Queryable.Last%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> to return the last element of an array.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#43](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#43)]
 [!code-vb[System.Linq.Queryable#43](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#43)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a55f4-959">Свойство <paramref name="source" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-959"><paramref name="source" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a55f4-960">Исходная последовательность пуста.</span><span class="sxs-lookup"><span data-stu-id="a55f4-960">The source sequence is empty.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Last&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static TSource Last&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,bool&gt;&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TSource Last&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, bool&gt;&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Last``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Last(Of TSource) (source As IQueryable(Of TSource), predicate As Expression(Of Func(Of TSource, Boolean))) As TSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TSource Last(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, bool&gt; ^&gt; ^ predicate);" />
      <MemberSignature Language="F#" Value="static member Last : System.Linq.IQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, bool&gt;&gt; -&gt; 'Source" Usage="System.Linq.Queryable.Last (source, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TSource</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,System.Boolean&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="a55f4-961">Тип элементов <paramref name="source" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-961">The type of the elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="a55f4-962">Объект <see cref="T:System.Linq.IQueryable`1" />, из которого требуется возвратить элемент.</span><span class="sxs-lookup"><span data-stu-id="a55f4-962">An <see cref="T:System.Linq.IQueryable`1" /> to return an element from.</span></span></param>
        <param name="predicate"><span data-ttu-id="a55f4-963">Функция для проверки каждого элемента на соответствие условию.</span><span class="sxs-lookup"><span data-stu-id="a55f4-963">A function to test each element for a condition.</span></span></param>
        <summary><span data-ttu-id="a55f4-964">Возвращает последний элемент последовательности, удовлетворяющий указанному условию.</span><span class="sxs-lookup"><span data-stu-id="a55f4-964">Returns the last element of a sequence that satisfies a specified condition.</span></span></summary>
        <returns><span data-ttu-id="a55f4-965">Последний элемент последовательности <paramref name="source" />, прошедший проверку, заданную предикатом <paramref name="predicate" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-965">The last element in <paramref name="source" /> that passes the test specified by <paramref name="predicate" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a55f4-966">Этот метод имеет по крайней мере один параметр <xref:System.Linq.Expressions.Expression%601> типа, аргумент типа которого является одним <xref:System.Func%602> из типов.</span><span class="sxs-lookup"><span data-stu-id="a55f4-966">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="a55f4-967">Для этих параметров можно передать лямбда-выражение, которое будет скомпилировано в <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="a55f4-967">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="a55f4-968">Метод создает объект <xref:System.Linq.Expressions.MethodCallExpression> , который представляет вызов <xref:System.Linq.Queryable.Last%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> самого себя как сконструированного универсального метода. <xref:System.Linq.Queryable.Last%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29></span><span class="sxs-lookup"><span data-stu-id="a55f4-968">The <xref:System.Linq.Queryable.Last%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Last%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="a55f4-969">Затем <xref:System.Linq.Expressions.MethodCallExpression> он передает <xref:System.Linq.IQueryProvider> методу класса, представленного `source`свойствомпараметра <xref:System.Linq.IQueryable.Provider%2A> <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> .</span><span class="sxs-lookup"><span data-stu-id="a55f4-969">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="a55f4-970">Поведение запроса, которое происходит в результате выполнения дерева выражения, представляющего вызов <xref:System.Linq.Queryable.Last%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> , зависит от реализации типа `source` параметра.</span><span class="sxs-lookup"><span data-stu-id="a55f4-970">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Last%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="a55f4-971">Ожидаемое поведение заключается в том, что он возвращает последний `source` элемент в, удовлетворяющий условию `predicate`, заданному параметром.</span><span class="sxs-lookup"><span data-stu-id="a55f4-971">The expected behavior is that it returns the last element in `source` that satisfies the condition specified by `predicate`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a55f4-972">В следующем примере кода показано, как использовать <xref:System.Linq.Queryable.Last%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> для возврата последнего элемента массива, удовлетворяющего условию.</span><span class="sxs-lookup"><span data-stu-id="a55f4-972">The following code example demonstrates how to use <xref:System.Linq.Queryable.Last%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> to return the last element of an array that satisfies a condition.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#44](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#44)]
 [!code-vb[System.Linq.Queryable#44](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#44)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a55f4-973">Параметр <paramref name="source" /> или <paramref name="predicate" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-973"><paramref name="source" /> or <paramref name="predicate" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a55f4-974">Ни один элемент не удовлетворяет условию предиката <paramref name="predicate" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-974">No element satisfies the condition in <paramref name="predicate" />.</span></span>  
  
<span data-ttu-id="a55f4-975">- или -</span><span class="sxs-lookup"><span data-stu-id="a55f4-975">-or-</span></span> 
<span data-ttu-id="a55f4-976">Исходная последовательность пуста.</span><span class="sxs-lookup"><span data-stu-id="a55f4-976">The source sequence is empty.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="LastOrDefault&lt;TSource&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a55f4-977">Возвращает последний элемент последовательности или значение по умолчанию, если ни одного элемента не найдено.</span><span class="sxs-lookup"><span data-stu-id="a55f4-977">Returns the last element of a sequence, or a default value if no element is found.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="LastOrDefault&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static TSource LastOrDefault&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TSource LastOrDefault&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.LastOrDefault``1(System.Linq.IQueryable{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function LastOrDefault(Of TSource) (source As IQueryable(Of TSource)) As TSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TSource LastOrDefault(System::Linq::IQueryable&lt;TSource&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member LastOrDefault : System.Linq.IQueryable&lt;'Source&gt; -&gt; 'Source" Usage="System.Linq.Queryable.LastOrDefault source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TSource</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="a55f4-978">Тип элементов <paramref name="source" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-978">The type of the elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="a55f4-979">Объект <see cref="T:System.Linq.IQueryable`1" />, последний элемент которого требуется возвратить.</span><span class="sxs-lookup"><span data-stu-id="a55f4-979">An <see cref="T:System.Linq.IQueryable`1" /> to return the last element of.</span></span></param>
        <summary><span data-ttu-id="a55f4-980">Возвращает последний элемент последовательности или значение по умолчанию, если последовательность не содержит элементов.</span><span class="sxs-lookup"><span data-stu-id="a55f4-980">Returns the last element in a sequence, or a default value if the sequence contains no elements.</span></span></summary>
        <returns><span data-ttu-id="a55f4-981"><c>default</c>(<paramref name="TSource" />), если последовательность <paramref name="source" /> пуста; в противном случае последний элемент последовательности <paramref name="source" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-981"><c>default</c>(<paramref name="TSource" />) if <paramref name="source" /> is empty; otherwise, the last element in <paramref name="source" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a55f4-982">Метод создает объект <xref:System.Linq.Expressions.MethodCallExpression> , который представляет вызов <xref:System.Linq.Queryable.LastOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> самого себя как сконструированного универсального метода. <xref:System.Linq.Queryable.LastOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%29></span><span class="sxs-lookup"><span data-stu-id="a55f4-982">The <xref:System.Linq.Queryable.LastOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.LastOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="a55f4-983">Затем <xref:System.Linq.Expressions.MethodCallExpression> он передает <xref:System.Linq.IQueryProvider> методу класса, представленного `source`свойствомпараметра <xref:System.Linq.IQueryable.Provider%2A> <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> .</span><span class="sxs-lookup"><span data-stu-id="a55f4-983">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="a55f4-984">Поведение запроса, которое происходит в результате выполнения дерева выражения, представляющего вызов <xref:System.Linq.Queryable.LastOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> , зависит от реализации типа `source` параметра.</span><span class="sxs-lookup"><span data-stu-id="a55f4-984">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.LastOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="a55f4-985">Ожидаемое поведение заключается в том, что он возвращает последний `source`элемент в или значение по умолчанию, если `source` пуст.</span><span class="sxs-lookup"><span data-stu-id="a55f4-985">The expected behavior is that it returns the last element in `source`, or a default value if `source` is empty.</span></span>  
  
 <span data-ttu-id="a55f4-986"><xref:System.Linq.Queryable.LastOrDefault%2A> Метод не предоставляет способ указания значения по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="a55f4-986">The <xref:System.Linq.Queryable.LastOrDefault%2A> method does not provide a way to specify a default value.</span></span> <span data-ttu-id="a55f4-987">Если вы хотите указать значение по умолчанию, отличное `default(TSource)`от, <xref:System.Linq.Queryable.DefaultIfEmpty%60%601%28System.Linq.IQueryable%7B%60%600%7D%2C%60%600%29> используйте метод, как описано в разделе "пример".</span><span class="sxs-lookup"><span data-stu-id="a55f4-987">If you want to specify a default value other than `default(TSource)`, use the <xref:System.Linq.Queryable.DefaultIfEmpty%60%601%28System.Linq.IQueryable%7B%60%600%7D%2C%60%600%29> method as described in the Example section.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a55f4-988">В следующем примере кода показано, как использовать <xref:System.Linq.Queryable.LastOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> для пустого массива.</span><span class="sxs-lookup"><span data-stu-id="a55f4-988">The following code example demonstrates how to use <xref:System.Linq.Queryable.LastOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> on an empty array.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#45](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#45)]
 [!code-vb[System.Linq.Queryable#45](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#45)]  
  
 <span data-ttu-id="a55f4-989">Иногда значение `default(TSource)` не является значением по умолчанию, которое вы хотите использовать, если коллекция не содержит элементов.</span><span class="sxs-lookup"><span data-stu-id="a55f4-989">Sometimes the value of `default(TSource)` is not the default value that you want to use if the collection contains no elements.</span></span> <span data-ttu-id="a55f4-990">Вместо того чтобы проверять результат для нежелательного значения по умолчанию и затем менять его при необходимости, можно <xref:System.Linq.Queryable.DefaultIfEmpty%60%601%28System.Linq.IQueryable%7B%60%600%7D%2C%60%600%29> использовать метод, чтобы указать значение по умолчанию, которое будет использоваться, если коллекция пуста.</span><span class="sxs-lookup"><span data-stu-id="a55f4-990">Instead of checking the result for the unwanted default value and then changing it if necessary, you can use the <xref:System.Linq.Queryable.DefaultIfEmpty%60%601%28System.Linq.IQueryable%7B%60%600%7D%2C%60%600%29> method to specify the default value that you want to use if the collection is empty.</span></span> <span data-ttu-id="a55f4-991">Затем вызовите <xref:System.Linq.Queryable.Last%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> метод, чтобы получить последний элемент.</span><span class="sxs-lookup"><span data-stu-id="a55f4-991">Then, call <xref:System.Linq.Queryable.Last%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> to obtain the last element.</span></span> <span data-ttu-id="a55f4-992">В следующем примере кода используются оба способа получения значения по умолчанию, равного 1, если коллекция числовых дней месяца пуста.</span><span class="sxs-lookup"><span data-stu-id="a55f4-992">The following code example uses both techniques to obtain a default value of 1 if a collection of numeric days of the month is empty.</span></span> <span data-ttu-id="a55f4-993">Так как значение по умолчанию для целого числа равно 0, что не соответствует какому-либо дню месяца, значение по умолчанию должно быть равно 1.</span><span class="sxs-lookup"><span data-stu-id="a55f4-993">Because the default value for an integer is 0, which does not correspond to any day of the month, the default value must be specified as 1 instead.</span></span> <span data-ttu-id="a55f4-994">Первая результирующая переменная проверяется на наличие нежелательного значения по умолчанию после завершения запроса.</span><span class="sxs-lookup"><span data-stu-id="a55f4-994">The first result variable is checked for the unwanted default value after the query is completed.</span></span> <span data-ttu-id="a55f4-995">Вторая результирующая переменная получается путем вызова <xref:System.Linq.Queryable.DefaultIfEmpty%60%601%28System.Linq.IQueryable%7B%60%600%7D%2C%60%600%29> метода для указания значения по умолчанию 1.</span><span class="sxs-lookup"><span data-stu-id="a55f4-995">The second result variable is obtained by calling <xref:System.Linq.Queryable.DefaultIfEmpty%60%601%28System.Linq.IQueryable%7B%60%600%7D%2C%60%600%29> to specify a default value of 1.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#132](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#132)]
 [!code-vb[System.Linq.Queryable#132](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#132)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a55f4-996">Свойство <paramref name="source" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-996"><paramref name="source" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="LastOrDefault&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static TSource LastOrDefault&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,bool&gt;&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TSource LastOrDefault&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, bool&gt;&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.LastOrDefault``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function LastOrDefault(Of TSource) (source As IQueryable(Of TSource), predicate As Expression(Of Func(Of TSource, Boolean))) As TSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TSource LastOrDefault(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, bool&gt; ^&gt; ^ predicate);" />
      <MemberSignature Language="F#" Value="static member LastOrDefault : System.Linq.IQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, bool&gt;&gt; -&gt; 'Source" Usage="System.Linq.Queryable.LastOrDefault (source, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TSource</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,System.Boolean&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="a55f4-997">Тип элементов <paramref name="source" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-997">The type of the elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="a55f4-998">Объект <see cref="T:System.Linq.IQueryable`1" />, из которого требуется возвратить элемент.</span><span class="sxs-lookup"><span data-stu-id="a55f4-998">An <see cref="T:System.Linq.IQueryable`1" /> to return an element from.</span></span></param>
        <param name="predicate"><span data-ttu-id="a55f4-999">Функция для проверки каждого элемента на соответствие условию.</span><span class="sxs-lookup"><span data-stu-id="a55f4-999">A function to test each element for a condition.</span></span></param>
        <summary><span data-ttu-id="a55f4-1000">Возвращает последний элемент последовательности, удовлетворяющий указанному условию, или значение по умолчанию, если ни одного такого элемента не найдено.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1000">Returns the last element of a sequence that satisfies a condition or a default value if no such element is found.</span></span></summary>
        <returns><span data-ttu-id="a55f4-1001"><c>default</c>(<paramref name="TSource" />), если последовательность <paramref name="source" /> пуста или ни один ее элемент не прошел проверку функцией предиката; в противном случае последний элемент последовательности <paramref name="source" />, прошедший проверку функцией предиката.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1001"><c>default</c>(<paramref name="TSource" />) if <paramref name="source" /> is empty or if no elements pass the test in the predicate function; otherwise, the last element of <paramref name="source" /> that passes the test in the predicate function.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a55f4-1002">Этот метод имеет по крайней мере один параметр <xref:System.Linq.Expressions.Expression%601> типа, аргумент типа которого является одним <xref:System.Func%602> из типов.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1002">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="a55f4-1003">Для этих параметров можно передать лямбда-выражение, которое будет скомпилировано в <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1003">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="a55f4-1004">Метод создает объект <xref:System.Linq.Expressions.MethodCallExpression> , который представляет вызов <xref:System.Linq.Queryable.LastOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> самого себя как сконструированного универсального метода. <xref:System.Linq.Queryable.LastOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%29></span><span class="sxs-lookup"><span data-stu-id="a55f4-1004">The <xref:System.Linq.Queryable.LastOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.LastOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="a55f4-1005">Затем <xref:System.Linq.Expressions.MethodCallExpression> он передает <xref:System.Linq.IQueryProvider> методу класса, представленного `source`свойствомпараметра <xref:System.Linq.IQueryable.Provider%2A> <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> .</span><span class="sxs-lookup"><span data-stu-id="a55f4-1005">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="a55f4-1006">Поведение запроса, которое происходит в результате выполнения дерева выражения, представляющего вызов <xref:System.Linq.Queryable.LastOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> , зависит от реализации типа `source` параметра.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1006">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.LastOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="a55f4-1007">Ожидаемое поведение заключается в том, что он возвращает последний `source` элемент в, удовлетворяющий условию `predicate`, заданному параметром.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1007">The expected behavior is that it returns the last element in `source` that satisfies the condition specified by `predicate`.</span></span> <span data-ttu-id="a55f4-1008">Он возвращает значение по умолчанию, если в `source`не существует такого элемента.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1008">It returns a default value if there is no such element in `source`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a55f4-1009">В следующем примере кода показано, как использовать <xref:System.Linq.Queryable.LastOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> , передав предикату.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1009">The following code example demonstrates how to use <xref:System.Linq.Queryable.LastOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> by passing in a predicate.</span></span> <span data-ttu-id="a55f4-1010">Во втором вызове метода в последовательности нет элементов, удовлетворяющих условию.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1010">In the second call to the method, there is no element in the sequence that satisfies the condition.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#46](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#46)]
 [!code-vb[System.Linq.Queryable#46](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#46)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a55f4-1011">Значение параметра <paramref name="source" /> или <paramref name="predicate" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1011"><paramref name="source" /> or <paramref name="predicate" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="LongCount&lt;TSource&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a55f4-1012">Возвращает значение типа <see cref="T:System.Int64" />, представляющее число элементов в последовательности.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1012">Returns an <see cref="T:System.Int64" /> that represents the number of elements in sequence.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="LongCount&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static long LongCount&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 LongCount&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.LongCount``1(System.Linq.IQueryable{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function LongCount(Of TSource) (source As IQueryable(Of TSource)) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static long LongCount(System::Linq::IQueryable&lt;TSource&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member LongCount : System.Linq.IQueryable&lt;'Source&gt; -&gt; int64" Usage="System.Linq.Queryable.LongCount source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="a55f4-1013">Тип элементов <paramref name="source" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1013">The type of the elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="a55f4-1014">Объект <see cref="T:System.Linq.IQueryable`1" />, содержащий элементы, которые требуется подсчитать.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1014">An <see cref="T:System.Linq.IQueryable`1" /> that contains the elements to be counted.</span></span></param>
        <summary><span data-ttu-id="a55f4-1015">Возвращает значение типа <see cref="T:System.Int64" />, представляющее общее число элементов в последовательности.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1015">Returns an <see cref="T:System.Int64" /> that represents the total number of elements in a sequence.</span></span></summary>
        <returns><span data-ttu-id="a55f4-1016">Число элементов в <paramref name="source" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1016">The number of elements in <paramref name="source" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a55f4-1017">Метод создает объект <xref:System.Linq.Expressions.MethodCallExpression> , который представляет вызов <xref:System.Linq.Queryable.LongCount%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> самого себя как сконструированного универсального метода. <xref:System.Linq.Queryable.LongCount%60%601%28System.Linq.IQueryable%7B%60%600%7D%29></span><span class="sxs-lookup"><span data-stu-id="a55f4-1017">The <xref:System.Linq.Queryable.LongCount%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.LongCount%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="a55f4-1018">Затем <xref:System.Linq.Expressions.MethodCallExpression> он передает <xref:System.Linq.IQueryProvider> методу класса, представленного `source`свойствомпараметра <xref:System.Linq.IQueryable.Provider%2A> <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> .</span><span class="sxs-lookup"><span data-stu-id="a55f4-1018">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="a55f4-1019">Поведение запроса, которое происходит в результате выполнения дерева выражения, представляющего вызов <xref:System.Linq.Queryable.LongCount%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> , зависит от реализации типа `source` параметра.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1019">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.LongCount%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="a55f4-1020">Ожидаемое поведение заключается в том, что он подсчитывает количество `source` элементов в и <xref:System.Int64>возвращает.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1020">The expected behavior is that it counts the number of items in `source` and returns an <xref:System.Int64>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a55f4-1021">В следующем примере кода показано, как использовать <xref:System.Linq.Queryable.LongCount%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> для подсчета элементов в массиве.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1021">The following code example demonstrates how to use <xref:System.Linq.Queryable.LongCount%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> to count the elements in an array.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#47](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#47)]
 [!code-vb[System.Linq.Queryable#47](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#47)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a55f4-1022">Свойство <paramref name="source" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1022"><paramref name="source" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="a55f4-1023">Число элементов больше, чем <see cref="F:System.Int64.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1023">The number of elements exceeds <see cref="F:System.Int64.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="LongCount&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static long LongCount&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,bool&gt;&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 LongCount&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, bool&gt;&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.LongCount``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function LongCount(Of TSource) (source As IQueryable(Of TSource), predicate As Expression(Of Func(Of TSource, Boolean))) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static long LongCount(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, bool&gt; ^&gt; ^ predicate);" />
      <MemberSignature Language="F#" Value="static member LongCount : System.Linq.IQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, bool&gt;&gt; -&gt; int64" Usage="System.Linq.Queryable.LongCount (source, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,System.Boolean&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="a55f4-1024">Тип элементов <paramref name="source" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1024">The type of the elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="a55f4-1025">Объект <see cref="T:System.Linq.IQueryable`1" />, содержащий элементы, которые требуется подсчитать.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1025">An <see cref="T:System.Linq.IQueryable`1" /> that contains the elements to be counted.</span></span></param>
        <param name="predicate"><span data-ttu-id="a55f4-1026">Функция для проверки каждого элемента на соответствие условию.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1026">A function to test each element for a condition.</span></span></param>
        <summary><span data-ttu-id="a55f4-1027">Возвращает значение типа <see cref="T:System.Int64" />, представляющее число элементов последовательности, удовлетворяющих заданному условию.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1027">Returns an <see cref="T:System.Int64" /> that represents the number of elements in a sequence that satisfy a condition.</span></span></summary>
        <returns><span data-ttu-id="a55f4-1028">Число элементов последовательности <paramref name="source" />, удовлетворяющих условию функции предиката.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1028">The number of elements in <paramref name="source" /> that satisfy the condition in the predicate function.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a55f4-1029">Этот метод имеет по крайней мере один параметр <xref:System.Linq.Expressions.Expression%601> типа, аргумент типа которого является одним <xref:System.Func%602> из типов.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1029">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="a55f4-1030">Для этих параметров можно передать лямбда-выражение, которое будет скомпилировано в <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1030">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="a55f4-1031">Метод создает объект <xref:System.Linq.Expressions.MethodCallExpression> , который представляет вызов <xref:System.Linq.Queryable.LongCount%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> самого себя как сконструированного универсального метода. <xref:System.Linq.Queryable.LongCount%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29></span><span class="sxs-lookup"><span data-stu-id="a55f4-1031">The <xref:System.Linq.Queryable.LongCount%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.LongCount%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="a55f4-1032">Затем <xref:System.Linq.Expressions.MethodCallExpression> он передает <xref:System.Linq.IQueryProvider> методу класса, представленного `source`свойствомпараметра <xref:System.Linq.IQueryable.Provider%2A> <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> .</span><span class="sxs-lookup"><span data-stu-id="a55f4-1032">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="a55f4-1033">Поведение запроса, которое происходит в результате выполнения дерева выражения, представляющего вызов <xref:System.Linq.Queryable.LongCount%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> , зависит от реализации типа `source` параметра.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1033">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.LongCount%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="a55f4-1034">Ожидаемое поведение заключается в том, что он подсчитывает количество `source` элементов в, удовлетворяющее условию, заданному параметром `predicate` , и возвращает <xref:System.Int64>.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1034">The expected behavior is that it counts the number of items in `source` that satisfy the condition specified by `predicate` and returns an <xref:System.Int64>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a55f4-1035">В следующем примере кода показано, как использовать <xref:System.Linq.Queryable.LongCount%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> для подсчета элементов в массиве, удовлетворяющем условию.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1035">The following code example demonstrates how to use <xref:System.Linq.Queryable.LongCount%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> to count the elements in an array that satisfy a condition.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#48](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#48)]
 [!code-vb[System.Linq.Queryable#48](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#48)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a55f4-1036">Значение параметра <paramref name="source" /> или <paramref name="predicate" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1036"><paramref name="source" /> or <paramref name="predicate" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="a55f4-1037">Число найденных элементов больше, чем <see cref="F:System.Int64.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1037">The number of matching elements exceeds <see cref="F:System.Int64.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Max&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static TSource Max&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TSource Max&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Max``1(System.Linq.IQueryable{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Max(Of TSource) (source As IQueryable(Of TSource)) As TSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TSource Max(System::Linq::IQueryable&lt;TSource&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Max : System.Linq.IQueryable&lt;'Source&gt; -&gt; 'Source" Usage="System.Linq.Queryable.Max source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TSource</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="a55f4-1038">Тип элементов <paramref name="source" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1038">The type of the elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="a55f4-1039">Последовательность значений, для которой определяется максимум.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1039">A sequence of values to determine the maximum of.</span></span></param>
        <summary><span data-ttu-id="a55f4-1040">Возвращает максимальное значение для универсального интерфейса <see cref="T:System.Linq.IQueryable`1" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1040">Returns the maximum value in a generic <see cref="T:System.Linq.IQueryable`1" />.</span></span></summary>
        <returns><span data-ttu-id="a55f4-1041">Максимальное значение в последовательности.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1041">The maximum value in the sequence.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a55f4-1042">Метод создает объект <xref:System.Linq.Expressions.MethodCallExpression> , который представляет вызов <xref:System.Linq.Queryable.Max%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> самого себя как сконструированного универсального метода. <xref:System.Linq.Queryable.Max%60%601%28System.Linq.IQueryable%7B%60%600%7D%29></span><span class="sxs-lookup"><span data-stu-id="a55f4-1042">The <xref:System.Linq.Queryable.Max%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Max%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="a55f4-1043">Затем <xref:System.Linq.Expressions.MethodCallExpression> он передает <xref:System.Linq.IQueryProvider> методу класса, представленного `source`свойствомпараметра <xref:System.Linq.IQueryable.Provider%2A> <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> .</span><span class="sxs-lookup"><span data-stu-id="a55f4-1043">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="a55f4-1044">Поведение запроса, которое происходит в результате выполнения дерева выражения, представляющего вызов <xref:System.Linq.Queryable.Max%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> , зависит от реализации типа `source` параметра.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1044">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Max%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="a55f4-1045">Ожидаемое поведение заключается в том, что он возвращает максимальное `source`значение в.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1045">The expected behavior is that it returns the maximum value in `source`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a55f4-1046">В следующем примере кода показано, как использовать <xref:System.Linq.Queryable.Max%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> для определения максимального значения в последовательности.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1046">The following code example demonstrates how to use <xref:System.Linq.Queryable.Max%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> to determine the maximum value in a sequence.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#52](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#52)]
 [!code-vb[System.Linq.Queryable#52](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#52)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a55f4-1047">Свойство <paramref name="source" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1047"><paramref name="source" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Max&lt;TSource,TResult&gt;">
      <MemberSignature Language="C#" Value="public static TResult Max&lt;TSource,TResult&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,TResult&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TResult Max&lt;TSource, TResult&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, !!TResult&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Max``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Max(Of TSource, TResult) (source As IQueryable(Of TSource), selector As Expression(Of Func(Of TSource, TResult))) As TResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TResult Max(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, TResult&gt; ^&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Max : System.Linq.IQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, 'Result&gt;&gt; -&gt; 'Result" Usage="System.Linq.Queryable.Max (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,TResult&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="a55f4-1048">Тип элементов <paramref name="source" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1048">The type of the elements of <paramref name="source" />.</span></span></typeparam>
        <typeparam name="TResult"><span data-ttu-id="a55f4-1049">Тип значения, возвращаемого функцией, заданной параметром <paramref name="selector" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1049">The type of the value returned by the function represented by <paramref name="selector" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="a55f4-1050">Последовательность значений, для которой определяется максимум.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1050">A sequence of values to determine the maximum of.</span></span></param>
        <param name="selector"><span data-ttu-id="a55f4-1051">Функция проекции, применяемая к каждому элементу.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1051">A projection function to apply to each element.</span></span></param>
        <summary><span data-ttu-id="a55f4-1052">Вызывает функцию проекции для каждого элемента универсального интерфейса <see cref="T:System.Linq.IQueryable`1" /> и возвращает максимальное результирующее значение.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1052">Invokes a projection function on each element of a generic <see cref="T:System.Linq.IQueryable`1" /> and returns the maximum resulting value.</span></span></summary>
        <returns><span data-ttu-id="a55f4-1053">Максимальное значение в последовательности.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1053">The maximum value in the sequence.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a55f4-1054">Этот метод имеет по крайней мере один параметр <xref:System.Linq.Expressions.Expression%601> типа, аргумент типа которого является одним <xref:System.Func%602> из типов.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1054">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="a55f4-1055">Для этих параметров можно передать лямбда-выражение, которое будет скомпилировано в <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1055">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="a55f4-1056">Метод создает объект <xref:System.Linq.Expressions.MethodCallExpression> , который представляет вызов <xref:System.Linq.Queryable.Max%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> самого себя как сконструированного универсального метода. <xref:System.Linq.Queryable.Max%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29></span><span class="sxs-lookup"><span data-stu-id="a55f4-1056">The <xref:System.Linq.Queryable.Max%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Max%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="a55f4-1057">Затем <xref:System.Linq.Expressions.MethodCallExpression> он передает <xref:System.Linq.IQueryProvider> методу класса, представленного `source`свойствомпараметра <xref:System.Linq.IQueryable.Provider%2A> <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> .</span><span class="sxs-lookup"><span data-stu-id="a55f4-1057">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="a55f4-1058">Поведение запроса, которое происходит в результате выполнения дерева выражения, представляющего вызов <xref:System.Linq.Queryable.Max%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> , зависит от реализации типа `source` параметра.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1058">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Max%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="a55f4-1059">Ожидаемое поведение заключается в том, что `selector` он вызывается для `source` каждого элемента в и возвращает максимальное значение.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1059">The expected behavior is that it invokes `selector` on each element in `source` and returns the maximum value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a55f4-1060">В следующем примере кода показано, как использовать <xref:System.Linq.Queryable.Max%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> для определения максимального значения в последовательности проецируемых значений.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1060">The following code example demonstrates how to use <xref:System.Linq.Queryable.Max%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> to determine the maximum value in a sequence of projected values.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#58](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#58)]
 [!code-vb[System.Linq.Queryable#58](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#58)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a55f4-1061">Параметр <paramref name="source" /> или <paramref name="selector" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1061"><paramref name="source" /> or <paramref name="selector" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Min&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static TSource Min&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TSource Min&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Min``1(System.Linq.IQueryable{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Min(Of TSource) (source As IQueryable(Of TSource)) As TSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TSource Min(System::Linq::IQueryable&lt;TSource&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Min : System.Linq.IQueryable&lt;'Source&gt; -&gt; 'Source" Usage="System.Linq.Queryable.Min source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TSource</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="a55f4-1062">Тип элементов <paramref name="source" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1062">The type of the elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="a55f4-1063">Последовательность значений, для которой определяется минимум.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1063">A sequence of values to determine the minimum of.</span></span></param>
        <summary><span data-ttu-id="a55f4-1064">Возвращает минимальное значение для универсального интерфейса <see cref="T:System.Linq.IQueryable`1" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1064">Returns the minimum value of a generic <see cref="T:System.Linq.IQueryable`1" />.</span></span></summary>
        <returns><span data-ttu-id="a55f4-1065">Минимальное значение в последовательности.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1065">The minimum value in the sequence.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a55f4-1066">Метод создает объект <xref:System.Linq.Expressions.MethodCallExpression> , который представляет вызов <xref:System.Linq.Queryable.Min%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> самого себя как сконструированного универсального метода. <xref:System.Linq.Queryable.Min%60%601%28System.Linq.IQueryable%7B%60%600%7D%29></span><span class="sxs-lookup"><span data-stu-id="a55f4-1066">The <xref:System.Linq.Queryable.Min%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Min%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="a55f4-1067">Затем <xref:System.Linq.Expressions.MethodCallExpression> он передает <xref:System.Linq.IQueryProvider> методу класса, представленного `source`свойствомпараметра <xref:System.Linq.IQueryable.Provider%2A> <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> .</span><span class="sxs-lookup"><span data-stu-id="a55f4-1067">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="a55f4-1068">Поведение запроса, которое происходит в результате выполнения дерева выражения, представляющего вызов <xref:System.Linq.Queryable.Min%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> , зависит от реализации типа `source` параметра.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1068">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Min%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="a55f4-1069">Ожидаемое поведение заключается в том, что он возвращает минимальное `source`значение в.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1069">The expected behavior is that it returns the minimum value in `source`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a55f4-1070">В следующем примере кода показано, как использовать <xref:System.Linq.Queryable.Min%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> для определения минимального значения в последовательности.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1070">The following code example demonstrates how to use <xref:System.Linq.Queryable.Min%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> to determine the minimum value in a sequence.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#60](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#60)]
 [!code-vb[System.Linq.Queryable#60](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#60)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a55f4-1071">Свойство <paramref name="source" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1071"><paramref name="source" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Min&lt;TSource,TResult&gt;">
      <MemberSignature Language="C#" Value="public static TResult Min&lt;TSource,TResult&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,TResult&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TResult Min&lt;TSource, TResult&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, !!TResult&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Min``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Min(Of TSource, TResult) (source As IQueryable(Of TSource), selector As Expression(Of Func(Of TSource, TResult))) As TResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TResult Min(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, TResult&gt; ^&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Min : System.Linq.IQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, 'Result&gt;&gt; -&gt; 'Result" Usage="System.Linq.Queryable.Min (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,TResult&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="a55f4-1072">Тип элементов <paramref name="source" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1072">The type of the elements of <paramref name="source" />.</span></span></typeparam>
        <typeparam name="TResult"><span data-ttu-id="a55f4-1073">Тип значения, возвращаемого функцией, заданной параметром <paramref name="selector" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1073">The type of the value returned by the function represented by <paramref name="selector" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="a55f4-1074">Последовательность значений, для которой определяется минимум.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1074">A sequence of values to determine the minimum of.</span></span></param>
        <param name="selector"><span data-ttu-id="a55f4-1075">Функция проекции, применяемая к каждому элементу.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1075">A projection function to apply to each element.</span></span></param>
        <summary><span data-ttu-id="a55f4-1076">Вызывает функцию проекции для каждого элемента универсального интерфейса <see cref="T:System.Linq.IQueryable`1" /> и возвращает минимальное результирующее значение.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1076">Invokes a projection function on each element of a generic <see cref="T:System.Linq.IQueryable`1" /> and returns the minimum resulting value.</span></span></summary>
        <returns><span data-ttu-id="a55f4-1077">Минимальное значение в последовательности.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1077">The minimum value in the sequence.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a55f4-1078">Этот метод имеет по крайней мере один параметр <xref:System.Linq.Expressions.Expression%601> типа, аргумент типа которого является одним <xref:System.Func%602> из типов.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1078">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="a55f4-1079">Для этих параметров можно передать лямбда-выражение, которое будет скомпилировано в <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1079">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="a55f4-1080">Метод создает объект <xref:System.Linq.Expressions.MethodCallExpression> , который представляет вызов <xref:System.Linq.Queryable.Min%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> самого себя как сконструированного универсального метода. <xref:System.Linq.Queryable.Min%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29></span><span class="sxs-lookup"><span data-stu-id="a55f4-1080">The <xref:System.Linq.Queryable.Min%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Min%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="a55f4-1081">Затем <xref:System.Linq.Expressions.MethodCallExpression> он передает <xref:System.Linq.IQueryProvider> методу класса, представленного `source`свойствомпараметра <xref:System.Linq.IQueryable.Provider%2A> <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> .</span><span class="sxs-lookup"><span data-stu-id="a55f4-1081">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="a55f4-1082">Поведение запроса, которое происходит в результате выполнения дерева выражения, представляющего вызов <xref:System.Linq.Queryable.Min%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> , зависит от реализации типа `source` параметра.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1082">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Min%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="a55f4-1083">Ожидаемое поведение заключается в том, что `selector` он вызывается для `source` каждого элемента в и возвращает минимальное значение.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1083">The expected behavior is that it invokes `selector` on each element in `source` and returns the minimum value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a55f4-1084">В следующем примере кода показано, как использовать <xref:System.Linq.Queryable.Min%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> для определения минимального значения в последовательности проецируемых значений.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1084">The following code example demonstrates how to use <xref:System.Linq.Queryable.Min%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> to determine the minimum value in a sequence of projected values.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#68](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#68)]
 [!code-vb[System.Linq.Queryable#68](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#68)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a55f4-1085">Параметр <paramref name="source" /> или <paramref name="selector" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1085"><paramref name="source" /> or <paramref name="selector" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="OfType&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;TResult&gt; OfType&lt;TResult&gt; (this System.Linq.IQueryable source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;!!TResult&gt; OfType&lt;TResult&gt;(class System.Linq.IQueryable source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.OfType``1(System.Linq.IQueryable)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OfType(Of TResult) (source As IQueryable) As IQueryable(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;TResult&gt; ^ OfType(System::Linq::IQueryable ^ source);" />
      <MemberSignature Language="F#" Value="static member OfType : System.Linq.IQueryable -&gt; System.Linq.IQueryable&lt;'Result&gt;" Usage="System.Linq.Queryable.OfType source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TResult"><span data-ttu-id="a55f4-1086">Тип, по которому фильтруются элементы последовательности.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1086">The type to filter the elements of the sequence on.</span></span></typeparam>
        <param name="source"><span data-ttu-id="a55f4-1087">Объект <see cref="T:System.Linq.IQueryable" />, элементы которого следует фильтровать.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1087">An <see cref="T:System.Linq.IQueryable" /> whose elements to filter.</span></span></param>
        <summary><span data-ttu-id="a55f4-1088">Выполняет фильтрацию элементов объекта <see cref="T:System.Linq.IQueryable" /> по заданному типу.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1088">Filters the elements of an <see cref="T:System.Linq.IQueryable" /> based on a specified type.</span></span></summary>
        <returns><span data-ttu-id="a55f4-1089">Коллекция элементов последовательности <paramref name="source" />, имеющих тип <paramref name="TResult" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1089">A collection that contains the elements from <paramref name="source" /> that have type <paramref name="TResult" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a55f4-1090">Метод создает объект <xref:System.Linq.Expressions.MethodCallExpression> , который представляет вызов `OfType` самого себя как сконструированного универсального метода. `OfType`</span><span class="sxs-lookup"><span data-stu-id="a55f4-1090">The `OfType` method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling `OfType` itself as a constructed generic method.</span></span> <span data-ttu-id="a55f4-1091">Затем <xref:System.Linq.Expressions.MethodCallExpression> он передает <xref:System.Linq.IQueryProvider> методу класса, представленного `source`свойствомпараметра <xref:System.Linq.IQueryable.Provider%2A> <xref:System.Linq.IQueryProvider.CreateQuery%28System.Linq.Expressions.Expression%29> .</span><span class="sxs-lookup"><span data-stu-id="a55f4-1091">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="a55f4-1092">Поведение запроса, которое происходит в результате выполнения дерева выражения, представляющего вызов `OfType` , зависит от реализации типа `source` параметра.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1092">The query behavior that occurs as a result of executing an expression tree that represents calling `OfType` depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="a55f4-1093">Ожидаемое поведение заключается в том, что он отфильтровывает `source` все элементы в, которые `TResult`не относятся к типу.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1093">The expected behavior is that it filters out any elements in `source` that are not of type `TResult`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a55f4-1094">В следующем примере кода показано, как использовать `OfType` для фильтрации элементов, которые не относятся к типу <xref:System.Reflection.PropertyInfo> , из списка элементов типа <xref:System.Reflection.MemberInfo>.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1094">The following code example demonstrates how to use `OfType` to filter out elements that are not of type <xref:System.Reflection.PropertyInfo> from a list of elements of type <xref:System.Reflection.MemberInfo>.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#69](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#69)]
 [!code-vb[System.Linq.Queryable#69](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#69)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a55f4-1095">Свойство <paramref name="source" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1095"><paramref name="source" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="OrderBy&lt;TSource,TKey&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a55f4-1096">Сортирует элементы последовательности в порядке возрастания.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1096">Sorts the elements of a sequence in ascending order.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OrderBy&lt;TSource,TKey&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IOrderedQueryable&lt;TSource&gt; OrderBy&lt;TSource,TKey&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,TKey&gt;&gt; keySelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IOrderedQueryable`1&lt;!!TSource&gt; OrderBy&lt;TSource, TKey&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, !!TKey&gt;&gt; keySelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.OrderBy``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OrderBy(Of TSource, TKey) (source As IQueryable(Of TSource), keySelector As Expression(Of Func(Of TSource, TKey))) As IOrderedQueryable(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IOrderedQueryable&lt;TSource&gt; ^ OrderBy(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, TKey&gt; ^&gt; ^ keySelector);" />
      <MemberSignature Language="F#" Value="static member OrderBy : System.Linq.IQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, 'Key&gt;&gt; -&gt; System.Linq.IOrderedQueryable&lt;'Source&gt;" Usage="System.Linq.Queryable.OrderBy (source, keySelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IOrderedQueryable&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,TKey&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="a55f4-1097">Тип элементов <paramref name="source" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1097">The type of the elements of <paramref name="source" />.</span></span></typeparam>
        <typeparam name="TKey"><span data-ttu-id="a55f4-1098">Тип ключа, возвращаемого функцией, заданной параметром <paramref name="keySelector" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1098">The type of the key returned by the function that is represented by <paramref name="keySelector" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="a55f4-1099">Последовательность значений, которые следует упорядочить.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1099">A sequence of values to order.</span></span></param>
        <param name="keySelector"><span data-ttu-id="a55f4-1100">Функция, извлекающая ключ из элемента.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1100">A function to extract a key from an element.</span></span></param>
        <summary><span data-ttu-id="a55f4-1101">Сортирует элементы последовательности в порядке возрастания ключа.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1101">Sorts the elements of a sequence in ascending order according to a key.</span></span></summary>
        <returns><span data-ttu-id="a55f4-1102">Объект <see cref="T:System.Linq.IOrderedQueryable`1" />, элементы которого отсортированы по ключу.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1102">An <see cref="T:System.Linq.IOrderedQueryable`1" /> whose elements are sorted according to a key.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a55f4-1103">Этот метод имеет по крайней мере один параметр <xref:System.Linq.Expressions.Expression%601> типа, аргумент типа которого является одним <xref:System.Func%602> из типов.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1103">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="a55f4-1104">Для этих параметров можно передать лямбда-выражение, которое будет скомпилировано в <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1104">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="a55f4-1105">Метод создает объект <xref:System.Linq.Expressions.MethodCallExpression> , который представляет вызов <xref:System.Linq.Queryable.OrderBy%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> самого себя как сконструированного универсального метода. <xref:System.Linq.Queryable.OrderBy%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29></span><span class="sxs-lookup"><span data-stu-id="a55f4-1105">The <xref:System.Linq.Queryable.OrderBy%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.OrderBy%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="a55f4-1106">Затем <xref:System.Linq.Expressions.MethodCallExpression> он передает <xref:System.Linq.IQueryProvider> методу класса, представленного `source`свойствомпараметра <xref:System.Linq.IQueryable.Provider%2A> <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> .</span><span class="sxs-lookup"><span data-stu-id="a55f4-1106">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span> <span data-ttu-id="a55f4-1107">Результат вызова <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> приведен к типу <xref:System.Linq.IOrderedQueryable%601> и возвращается.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1107">The result of calling <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> is cast to type <xref:System.Linq.IOrderedQueryable%601> and returned.</span></span>  
  
 <span data-ttu-id="a55f4-1108">Поведение запроса, которое происходит в результате выполнения дерева выражения, представляющего вызов <xref:System.Linq.Queryable.OrderBy%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> , зависит от реализации типа `source` параметра.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1108">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.OrderBy%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="a55f4-1109">Ожидаемое поведение заключается в том, что сортирует элементы `source` в зависимости от ключа, полученного путем `keySelector` вызова для каждого элемента `source`.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1109">The expected behavior is that it sorts the elements of `source` based on the key obtained by invoking `keySelector` on each element of `source`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a55f4-1110">В следующем примере кода показано, как использовать <xref:System.Linq.Queryable.OrderBy%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> для сортировки элементов последовательности.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1110">The following code example demonstrates how to use <xref:System.Linq.Queryable.OrderBy%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> to sort the elements of a sequence.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#70](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#70)]
 [!code-vb[System.Linq.Queryable#70](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#70)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a55f4-1111">Значение параметра <paramref name="source" /> или <paramref name="keySelector" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1111"><paramref name="source" /> or <paramref name="keySelector" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="OrderBy&lt;TSource,TKey&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IOrderedQueryable&lt;TSource&gt; OrderBy&lt;TSource,TKey&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,TKey&gt;&gt; keySelector, System.Collections.Generic.IComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IOrderedQueryable`1&lt;!!TSource&gt; OrderBy&lt;TSource, TKey&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, !!TKey&gt;&gt; keySelector, class System.Collections.Generic.IComparer`1&lt;!!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.OrderBy``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OrderBy(Of TSource, TKey) (source As IQueryable(Of TSource), keySelector As Expression(Of Func(Of TSource, TKey)), comparer As IComparer(Of TKey)) As IOrderedQueryable(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IOrderedQueryable&lt;TSource&gt; ^ OrderBy(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, TKey&gt; ^&gt; ^ keySelector, System::Collections::Generic::IComparer&lt;TKey&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member OrderBy : System.Linq.IQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, 'Key&gt;&gt; * System.Collections.Generic.IComparer&lt;'Key&gt; -&gt; System.Linq.IOrderedQueryable&lt;'Source&gt;" Usage="System.Linq.Queryable.OrderBy (source, keySelector, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IOrderedQueryable&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,TKey&gt;&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="a55f4-1112">Тип элементов <paramref name="source" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1112">The type of the elements of <paramref name="source" />.</span></span></typeparam>
        <typeparam name="TKey"><span data-ttu-id="a55f4-1113">Тип ключа, возвращаемого функцией, заданной параметром <paramref name="keySelector" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1113">The type of the key returned by the function that is represented by <paramref name="keySelector" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="a55f4-1114">Последовательность значений, которые следует упорядочить.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1114">A sequence of values to order.</span></span></param>
        <param name="keySelector"><span data-ttu-id="a55f4-1115">Функция, извлекающая ключ из элемента.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1115">A function to extract a key from an element.</span></span></param>
        <param name="comparer"><span data-ttu-id="a55f4-1116">Компаратор <see cref="T:System.Collections.Generic.IComparer`1" />, используемый для сравнения ключей.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1116">An <see cref="T:System.Collections.Generic.IComparer`1" /> to compare keys.</span></span></param>
        <summary><span data-ttu-id="a55f4-1117">Сортирует элементы последовательности в порядке возрастания с использованием указанного компаратора.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1117">Sorts the elements of a sequence in ascending order by using a specified comparer.</span></span></summary>
        <returns><span data-ttu-id="a55f4-1118">Объект <see cref="T:System.Linq.IOrderedQueryable`1" />, элементы которого отсортированы по ключу.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1118">An <see cref="T:System.Linq.IOrderedQueryable`1" /> whose elements are sorted according to a key.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a55f4-1119">Этот метод имеет по крайней мере один параметр <xref:System.Linq.Expressions.Expression%601> типа, аргумент типа которого является одним <xref:System.Func%602> из типов.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1119">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="a55f4-1120">Для этих параметров можно передать лямбда-выражение, которое будет скомпилировано в <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1120">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="a55f4-1121">Метод создает объект <xref:System.Linq.Expressions.MethodCallExpression> , который представляет вызов <xref:System.Linq.Queryable.OrderBy%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Collections.Generic.IComparer%7B%60%601%7D%29> самого себя как сконструированного универсального метода. <xref:System.Linq.Queryable.OrderBy%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Collections.Generic.IComparer%7B%60%601%7D%29></span><span class="sxs-lookup"><span data-stu-id="a55f4-1121">The <xref:System.Linq.Queryable.OrderBy%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Collections.Generic.IComparer%7B%60%601%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.OrderBy%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Collections.Generic.IComparer%7B%60%601%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="a55f4-1122">Затем <xref:System.Linq.Expressions.MethodCallExpression> он передает <xref:System.Linq.IQueryProvider> методу класса, представленного `source`свойствомпараметра <xref:System.Linq.IQueryable.Provider%2A> <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> .</span><span class="sxs-lookup"><span data-stu-id="a55f4-1122">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span> <span data-ttu-id="a55f4-1123">Результат вызова <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> приведен к типу <xref:System.Linq.IOrderedQueryable%601> и возвращается.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1123">The result of calling <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> is cast to type <xref:System.Linq.IOrderedQueryable%601> and returned.</span></span>  
  
 <span data-ttu-id="a55f4-1124">Поведение запроса, которое происходит в результате выполнения дерева выражения, представляющего вызов <xref:System.Linq.Queryable.OrderBy%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Collections.Generic.IComparer%7B%60%601%7D%29> , зависит от реализации типа `source` параметра.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1124">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.OrderBy%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Collections.Generic.IComparer%7B%60%601%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="a55f4-1125">Ожидаемое поведение заключается в том, что сортирует элементы `source` в зависимости от ключа, полученного путем `keySelector` вызова для каждого элемента `source`.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1125">The expected behavior is that it sorts the elements of `source` based on the key obtained by invoking `keySelector` on each element of `source`.</span></span> <span data-ttu-id="a55f4-1126">`comparer` Параметр используется для сравнения ключей.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1126">The `comparer` parameter is used to compare keys.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a55f4-1127">Параметр <paramref name="source" />, <paramref name="keySelector" /> или <paramref name="comparer" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1127"><paramref name="source" /> or <paramref name="keySelector" /> or <paramref name="comparer" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="OrderByDescending&lt;TSource,TKey&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a55f4-1128">Сортирует элементы последовательности в порядке убывания.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1128">Sorts the elements of a sequence in descending order.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OrderByDescending&lt;TSource,TKey&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IOrderedQueryable&lt;TSource&gt; OrderByDescending&lt;TSource,TKey&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,TKey&gt;&gt; keySelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IOrderedQueryable`1&lt;!!TSource&gt; OrderByDescending&lt;TSource, TKey&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, !!TKey&gt;&gt; keySelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.OrderByDescending``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OrderByDescending(Of TSource, TKey) (source As IQueryable(Of TSource), keySelector As Expression(Of Func(Of TSource, TKey))) As IOrderedQueryable(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IOrderedQueryable&lt;TSource&gt; ^ OrderByDescending(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, TKey&gt; ^&gt; ^ keySelector);" />
      <MemberSignature Language="F#" Value="static member OrderByDescending : System.Linq.IQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, 'Key&gt;&gt; -&gt; System.Linq.IOrderedQueryable&lt;'Source&gt;" Usage="System.Linq.Queryable.OrderByDescending (source, keySelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IOrderedQueryable&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,TKey&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="a55f4-1129">Тип элементов <paramref name="source" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1129">The type of the elements of <paramref name="source" />.</span></span></typeparam>
        <typeparam name="TKey"><span data-ttu-id="a55f4-1130">Тип ключа, возвращаемого функцией, заданной параметром <paramref name="keySelector" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1130">The type of the key returned by the function that is represented by <paramref name="keySelector" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="a55f4-1131">Последовательность значений, которые следует упорядочить.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1131">A sequence of values to order.</span></span></param>
        <param name="keySelector"><span data-ttu-id="a55f4-1132">Функция, извлекающая ключ из элемента.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1132">A function to extract a key from an element.</span></span></param>
        <summary><span data-ttu-id="a55f4-1133">Сортирует элементы последовательности в порядке убывания ключа.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1133">Sorts the elements of a sequence in descending order according to a key.</span></span></summary>
        <returns><span data-ttu-id="a55f4-1134">Объект <see cref="T:System.Linq.IOrderedQueryable`1" />, элементы которого отсортированы по ключу в порядке убывания.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1134">An <see cref="T:System.Linq.IOrderedQueryable`1" /> whose elements are sorted in descending order according to a key.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a55f4-1135">Этот метод имеет по крайней мере один параметр <xref:System.Linq.Expressions.Expression%601> типа, аргумент типа которого является одним <xref:System.Func%602> из типов.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1135">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="a55f4-1136">Для этих параметров можно передать лямбда-выражение, которое будет скомпилировано в <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1136">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="a55f4-1137">Метод создает объект <xref:System.Linq.Expressions.MethodCallExpression> , который представляет вызов <xref:System.Linq.Queryable.OrderByDescending%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> самого себя как сконструированного универсального метода. <xref:System.Linq.Queryable.OrderByDescending%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29></span><span class="sxs-lookup"><span data-stu-id="a55f4-1137">The <xref:System.Linq.Queryable.OrderByDescending%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.OrderByDescending%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="a55f4-1138">Затем <xref:System.Linq.Expressions.MethodCallExpression> он передает <xref:System.Linq.IQueryProvider> методу класса, представленного `source`свойствомпараметра <xref:System.Linq.IQueryable.Provider%2A> <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> .</span><span class="sxs-lookup"><span data-stu-id="a55f4-1138">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span> <span data-ttu-id="a55f4-1139">Результат вызова <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> приведен к типу <xref:System.Linq.IOrderedQueryable%601> и возвращается.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1139">The result of calling <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> is cast to type <xref:System.Linq.IOrderedQueryable%601> and returned.</span></span>  
  
 <span data-ttu-id="a55f4-1140">Поведение запроса, которое происходит в результате выполнения дерева выражения, представляющего вызов <xref:System.Linq.Queryable.OrderByDescending%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> , зависит от реализации типа `source` параметра.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1140">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.OrderByDescending%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="a55f4-1141">Ожидаемое поведение заключается в том, что сортирует элементы `source` в убывающем порядке на основе ключа, полученного путем `keySelector` вызова для каждого элемента `source`.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1141">The expected behavior is that it sorts the elements of `source` in descending order, based on the key obtained by invoking `keySelector` on each element of `source`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a55f4-1142">Параметр <paramref name="source" /> или <paramref name="keySelector" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1142"><paramref name="source" /> or <paramref name="keySelector" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="OrderByDescending&lt;TSource,TKey&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IOrderedQueryable&lt;TSource&gt; OrderByDescending&lt;TSource,TKey&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,TKey&gt;&gt; keySelector, System.Collections.Generic.IComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IOrderedQueryable`1&lt;!!TSource&gt; OrderByDescending&lt;TSource, TKey&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, !!TKey&gt;&gt; keySelector, class System.Collections.Generic.IComparer`1&lt;!!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.OrderByDescending``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OrderByDescending(Of TSource, TKey) (source As IQueryable(Of TSource), keySelector As Expression(Of Func(Of TSource, TKey)), comparer As IComparer(Of TKey)) As IOrderedQueryable(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IOrderedQueryable&lt;TSource&gt; ^ OrderByDescending(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, TKey&gt; ^&gt; ^ keySelector, System::Collections::Generic::IComparer&lt;TKey&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member OrderByDescending : System.Linq.IQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, 'Key&gt;&gt; * System.Collections.Generic.IComparer&lt;'Key&gt; -&gt; System.Linq.IOrderedQueryable&lt;'Source&gt;" Usage="System.Linq.Queryable.OrderByDescending (source, keySelector, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IOrderedQueryable&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,TKey&gt;&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="a55f4-1143">Тип элементов <paramref name="source" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1143">The type of the elements of <paramref name="source" />.</span></span></typeparam>
        <typeparam name="TKey"><span data-ttu-id="a55f4-1144">Тип ключа, возвращаемого функцией, заданной параметром <paramref name="keySelector" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1144">The type of the key returned by the function that is represented by <paramref name="keySelector" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="a55f4-1145">Последовательность значений, которые следует упорядочить.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1145">A sequence of values to order.</span></span></param>
        <param name="keySelector"><span data-ttu-id="a55f4-1146">Функция, извлекающая ключ из элемента.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1146">A function to extract a key from an element.</span></span></param>
        <param name="comparer"><span data-ttu-id="a55f4-1147">Компаратор <see cref="T:System.Collections.Generic.IComparer`1" />, используемый для сравнения ключей.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1147">An <see cref="T:System.Collections.Generic.IComparer`1" /> to compare keys.</span></span></param>
        <summary><span data-ttu-id="a55f4-1148">Сортирует элементы последовательности в порядке убывания с использованием указанного компаратора.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1148">Sorts the elements of a sequence in descending order by using a specified comparer.</span></span></summary>
        <returns><span data-ttu-id="a55f4-1149">Объект <see cref="T:System.Linq.IOrderedQueryable`1" />, элементы которого отсортированы по ключу в порядке убывания.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1149">An <see cref="T:System.Linq.IOrderedQueryable`1" /> whose elements are sorted in descending order according to a key.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a55f4-1150">Этот метод имеет по крайней мере один параметр <xref:System.Linq.Expressions.Expression%601> типа, аргумент типа которого является одним <xref:System.Func%602> из типов.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1150">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="a55f4-1151">Для этих параметров можно передать лямбда-выражение, которое будет скомпилировано в <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1151">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="a55f4-1152">Метод создает объект <xref:System.Linq.Expressions.MethodCallExpression> , который представляет вызов <xref:System.Linq.Queryable.OrderByDescending%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Collections.Generic.IComparer%7B%60%601%7D%29> самого себя как сконструированного универсального метода. <xref:System.Linq.Queryable.OrderByDescending%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Collections.Generic.IComparer%7B%60%601%7D%29></span><span class="sxs-lookup"><span data-stu-id="a55f4-1152">The <xref:System.Linq.Queryable.OrderByDescending%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Collections.Generic.IComparer%7B%60%601%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.OrderByDescending%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Collections.Generic.IComparer%7B%60%601%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="a55f4-1153">Затем <xref:System.Linq.Expressions.MethodCallExpression> он передает <xref:System.Linq.IQueryProvider> методу класса, представленного `source`свойствомпараметра <xref:System.Linq.IQueryable.Provider%2A> <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> .</span><span class="sxs-lookup"><span data-stu-id="a55f4-1153">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span> <span data-ttu-id="a55f4-1154">Результат вызова <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> приведен к типу <xref:System.Linq.IOrderedQueryable%601> и возвращается.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1154">The result of calling <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> is cast to type <xref:System.Linq.IOrderedQueryable%601> and returned.</span></span>  
  
 <span data-ttu-id="a55f4-1155">Поведение запроса, которое происходит в результате выполнения дерева выражения, представляющего вызов <xref:System.Linq.Queryable.OrderByDescending%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Collections.Generic.IComparer%7B%60%601%7D%29> , зависит от реализации типа `source` параметра.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1155">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.OrderByDescending%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Collections.Generic.IComparer%7B%60%601%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="a55f4-1156">Ожидаемое поведение заключается в том, что сортирует элементы `source` в убывающем порядке на основе ключа, полученного путем `keySelector` вызова для каждого элемента `source`.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1156">The expected behavior is that it sorts the elements of `source` in descending order, based on the key obtained by invoking `keySelector` on each element of `source`.</span></span> <span data-ttu-id="a55f4-1157">`comparer` Параметр используется для сравнения ключей.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1157">The `comparer` parameter is used to compare keys.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a55f4-1158">В следующем примере кода показано, как использовать <xref:System.Linq.Queryable.OrderByDescending%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Collections.Generic.IComparer%7B%60%601%7D%29> для сортировки элементов последовательности в порядке убывания с помощью пользовательского компаратора.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1158">The following code example demonstrates how to use <xref:System.Linq.Queryable.OrderByDescending%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Collections.Generic.IComparer%7B%60%601%7D%29> to sort the elements of a sequence in descending order by using a custom comparer.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#71](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#71)]
 [!code-vb[System.Linq.Queryable#71](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#71)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a55f4-1159">Параметр <paramref name="source" />, <paramref name="keySelector" /> или <paramref name="comparer" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1159"><paramref name="source" /> or <paramref name="keySelector" /> or <paramref name="comparer" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Prepend&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;TSource&gt; Prepend&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, TSource element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;!!TSource&gt; Prepend&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, !!TSource element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Prepend``1(System.Linq.IQueryable{``0},``0)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Prepend(Of TSource) (source As IQueryable(Of TSource), element As TSource) As IQueryable(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;TSource&gt; ^ Prepend(System::Linq::IQueryable&lt;TSource&gt; ^ source, TSource element);" />
      <MemberSignature Language="F#" Value="static member Prepend : System.Linq.IQueryable&lt;'Source&gt; * 'Source -&gt; System.Linq.IQueryable&lt;'Source&gt;" Usage="System.Linq.Queryable.Prepend (source, element)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="element" Type="TSource" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">To be added.</typeparam>
        <param name="source">To be added.</param>
        <param name="element">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Reverse&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;TSource&gt; Reverse&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;!!TSource&gt; Reverse&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Reverse``1(System.Linq.IQueryable{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Reverse(Of TSource) (source As IQueryable(Of TSource)) As IQueryable(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;TSource&gt; ^ Reverse(System::Linq::IQueryable&lt;TSource&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Reverse : System.Linq.IQueryable&lt;'Source&gt; -&gt; System.Linq.IQueryable&lt;'Source&gt;" Usage="System.Linq.Queryable.Reverse source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="a55f4-1160">Тип элементов <paramref name="source" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1160">The type of the elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="a55f4-1161">Последовательность значений, которые следует расставить в обратном порядке.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1161">A sequence of values to reverse.</span></span></param>
        <summary><span data-ttu-id="a55f4-1162">Изменяет порядок элементов последовательности на противоположный.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1162">Inverts the order of the elements in a sequence.</span></span></summary>
        <returns><span data-ttu-id="a55f4-1163">Объект <see cref="T:System.Linq.IQueryable`1" />, элементы которого соответствуют элементам входной последовательности, но следуют в противоположном порядке.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1163">An <see cref="T:System.Linq.IQueryable`1" /> whose elements correspond to those of the input sequence in reverse order.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a55f4-1164">Метод создает объект <xref:System.Linq.Expressions.MethodCallExpression> , который представляет вызов <xref:System.Linq.Queryable.Reverse%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> самого себя как сконструированного универсального метода. <xref:System.Linq.Queryable.Reverse%60%601%28System.Linq.IQueryable%7B%60%600%7D%29></span><span class="sxs-lookup"><span data-stu-id="a55f4-1164">The <xref:System.Linq.Queryable.Reverse%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Reverse%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="a55f4-1165">Затем <xref:System.Linq.Expressions.MethodCallExpression> он передает <xref:System.Linq.IQueryProvider> методу класса, представленного `source`свойствомпараметра <xref:System.Linq.IQueryable.Provider%2A> <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> .</span><span class="sxs-lookup"><span data-stu-id="a55f4-1165">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="a55f4-1166">Поведение запроса, которое происходит в результате выполнения дерева выражения, представляющего вызов <xref:System.Linq.Queryable.Reverse%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> , зависит от реализации типа `source` параметра.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1166">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Reverse%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="a55f4-1167">Ожидаемым поведением является обратный порядок элементов в `source`.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1167">The expected behavior is that it reverses the order of the elements in `source`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a55f4-1168">В следующем примере кода показано, как использовать <xref:System.Linq.Queryable.Reverse%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> для изменения порядка элементов в массиве на обратный.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1168">The following code example demonstrates how to use <xref:System.Linq.Queryable.Reverse%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> to reverse the order of elements in an array.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#74](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#74)]
 [!code-vb[System.Linq.Queryable#74](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#74)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a55f4-1169">Свойство <paramref name="source" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1169"><paramref name="source" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Select&lt;TSource,TResult&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a55f4-1170">Проецирует каждый элемент последовательности в новую форму.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1170">Projects each element of a sequence into a new form.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Select&lt;TSource,TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;TResult&gt; Select&lt;TSource,TResult&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,int,TResult&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;!!TResult&gt; Select&lt;TSource, TResult&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`3&lt;!!TSource, int32, !!TResult&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Select``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,``1}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Select(Of TSource, TResult) (source As IQueryable(Of TSource), selector As Expression(Of Func(Of TSource, Integer, TResult))) As IQueryable(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;TResult&gt; ^ Select(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, int, TResult&gt; ^&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Select : System.Linq.IQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, int, 'Result&gt;&gt; -&gt; System.Linq.IQueryable&lt;'Result&gt;" Usage="System.Linq.Queryable.Select (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,System.Int32,TResult&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="a55f4-1171">Тип элементов <paramref name="source" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1171">The type of the elements of <paramref name="source" />.</span></span></typeparam>
        <typeparam name="TResult"><span data-ttu-id="a55f4-1172">Тип значения, возвращаемого функцией, заданной параметром <paramref name="selector" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1172">The type of the value returned by the function represented by <paramref name="selector" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="a55f4-1173">Последовательность значений, которые следует проецировать.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1173">A sequence of values to project.</span></span></param>
        <param name="selector"><span data-ttu-id="a55f4-1174">Функция проекции, применяемая к каждому элементу.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1174">A projection function to apply to each element.</span></span></param>
        <summary><span data-ttu-id="a55f4-1175">Проецирует каждый элемент последовательности в новую форму, добавляя индекс элемента.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1175">Projects each element of a sequence into a new form by incorporating the element's index.</span></span></summary>
        <returns><span data-ttu-id="a55f4-1176">Объект <see cref="T:System.Linq.IQueryable`1" />, элементы которого получены в результате вызова функции проекции для каждого элемента последовательности <paramref name="source" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1176">An <see cref="T:System.Linq.IQueryable`1" /> whose elements are the result of invoking a projection function on each element of <paramref name="source" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a55f4-1177">Этот метод имеет по крайней мере один параметр <xref:System.Linq.Expressions.Expression%601> типа, аргумент типа которого является одним <xref:System.Func%602> из типов.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1177">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="a55f4-1178">Для этих параметров можно передать лямбда-выражение, которое будет скомпилировано в <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1178">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="a55f4-1179">Метод создает объект <xref:System.Linq.Expressions.MethodCallExpression> , который представляет вызов <xref:System.Linq.Queryable.Select%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2C%60%601%7D%7D%29> самого себя как сконструированного универсального метода. <xref:System.Linq.Queryable.Select%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2C%60%601%7D%7D%29></span><span class="sxs-lookup"><span data-stu-id="a55f4-1179">The <xref:System.Linq.Queryable.Select%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2C%60%601%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Select%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2C%60%601%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="a55f4-1180">Затем <xref:System.Linq.Expressions.MethodCallExpression> он передает <xref:System.Linq.IQueryProvider> методу класса, представленного `source`свойствомпараметра <xref:System.Linq.IQueryable.Provider%2A> <xref:System.Linq.IQueryProvider.CreateQuery%28System.Linq.Expressions.Expression%29> .</span><span class="sxs-lookup"><span data-stu-id="a55f4-1180">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="a55f4-1181">Поведение запроса, которое происходит в результате выполнения дерева выражения, представляющего вызов <xref:System.Linq.Queryable.Select%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2C%60%601%7D%7D%29> , зависит от реализации типа `source` параметра.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1181">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Select%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2C%60%601%7D%7D%29> depend on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="a55f4-1182">Ожидаемое поведение заключается в том, что `selector` он вызывается для `source` каждого элемента, чтобы проецировать его в другую форму.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1182">The expected behavior is that it invokes `selector` on each element of `source` to project it into a different form.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a55f4-1183">В следующем примере кода показано, как использовать <xref:System.Linq.Queryable.Select%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2C%60%601%7D%7D%29> для проецирования последовательности значений и использовать индекс каждого элемента в проецированной форме.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1183">The following code example demonstrates how to use <xref:System.Linq.Queryable.Select%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2C%60%601%7D%7D%29> to project over a sequence of values and use the index of each element in the projected form.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#76](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#76)]
 [!code-vb[System.Linq.Queryable#76](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#76)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a55f4-1184">Значение параметра <paramref name="source" /> или <paramref name="selector" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1184"><paramref name="source" /> or <paramref name="selector" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Select&lt;TSource,TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;TResult&gt; Select&lt;TSource,TResult&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,TResult&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;!!TResult&gt; Select&lt;TSource, TResult&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, !!TResult&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Select``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Select(Of TSource, TResult) (source As IQueryable(Of TSource), selector As Expression(Of Func(Of TSource, TResult))) As IQueryable(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;TResult&gt; ^ Select(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, TResult&gt; ^&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Select : System.Linq.IQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, 'Result&gt;&gt; -&gt; System.Linq.IQueryable&lt;'Result&gt;" Usage="System.Linq.Queryable.Select (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,TResult&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="a55f4-1185">Тип элементов <paramref name="source" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1185">The type of the elements of <paramref name="source" />.</span></span></typeparam>
        <typeparam name="TResult"><span data-ttu-id="a55f4-1186">Тип значения, возвращаемого функцией, заданной параметром <paramref name="selector" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1186">The type of the value returned by the function represented by <paramref name="selector" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="a55f4-1187">Последовательность значений, которые следует проецировать.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1187">A sequence of values to project.</span></span></param>
        <param name="selector"><span data-ttu-id="a55f4-1188">Функция проекции, применяемая к каждому элементу.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1188">A projection function to apply to each element.</span></span></param>
        <summary><span data-ttu-id="a55f4-1189">Проецирует каждый элемент последовательности в новую форму.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1189">Projects each element of a sequence into a new form.</span></span></summary>
        <returns><span data-ttu-id="a55f4-1190">Объект <see cref="T:System.Linq.IQueryable`1" />, элементы которого получены в результате вызова функции проекции для каждого элемента последовательности <paramref name="source" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1190">An <see cref="T:System.Linq.IQueryable`1" /> whose elements are the result of invoking a projection function on each element of <paramref name="source" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a55f4-1191">Этот метод имеет по крайней мере один параметр <xref:System.Linq.Expressions.Expression%601> типа, аргумент типа которого является одним <xref:System.Func%602> из типов.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1191">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="a55f4-1192">Для этих параметров можно передать лямбда-выражение, которое будет скомпилировано в <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1192">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="a55f4-1193">Метод создает объект <xref:System.Linq.Expressions.MethodCallExpression> , который представляет вызов <xref:System.Linq.Queryable.Select%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> самого себя как сконструированного универсального метода. <xref:System.Linq.Queryable.Select%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29></span><span class="sxs-lookup"><span data-stu-id="a55f4-1193">The <xref:System.Linq.Queryable.Select%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Select%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="a55f4-1194">Затем <xref:System.Linq.Expressions.MethodCallExpression> он передает <xref:System.Linq.IQueryProvider> методу класса, представленного `source`свойствомпараметра <xref:System.Linq.IQueryable.Provider%2A> <xref:System.Linq.IQueryProvider.CreateQuery%28System.Linq.Expressions.Expression%29> .</span><span class="sxs-lookup"><span data-stu-id="a55f4-1194">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="a55f4-1195">Поведение запроса, которое происходит в результате выполнения дерева выражения, представляющего вызов <xref:System.Linq.Queryable.Select%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> , зависит от реализации типа `source` параметра.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1195">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Select%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="a55f4-1196">Ожидаемое поведение заключается в том, что `selector` он вызывается для `source` каждого элемента, чтобы проецировать его в другую форму.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1196">The expected behavior is that it invokes `selector` on each element of `source` to project it into a different form.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a55f4-1197">В следующем примере кода показано, как использовать <xref:System.Linq.Queryable.Select%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> для проецирования последовательности значений.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1197">The following code example demonstrates how to use <xref:System.Linq.Queryable.Select%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> to project over a sequence of values.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#75](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#75)]
 [!code-vb[System.Linq.Queryable#75](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#75)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a55f4-1198">Значение параметра <paramref name="source" /> или <paramref name="selector" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1198"><paramref name="source" /> or <paramref name="selector" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="SelectMany&lt;TSource,TResult&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a55f4-1199">Проецирует каждый элемент последовательности в объект <see cref="T:System.Collections.Generic.IEnumerable`1" /> и объединяет результирующие последовательности в одну последовательность типа <see cref="T:System.Linq.IQueryable`1" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1199">Projects each element of a sequence to an <see cref="T:System.Collections.Generic.IEnumerable`1" /> and combines the resulting sequences into one sequence of type <see cref="T:System.Linq.IQueryable`1" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SelectMany&lt;TSource,TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;TResult&gt; SelectMany&lt;TSource,TResult&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,System.Collections.Generic.IEnumerable&lt;TResult&gt;&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;!!TResult&gt; SelectMany&lt;TSource, TResult&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, class System.Collections.Generic.IEnumerable`1&lt;!!TResult&gt;&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.SelectMany``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1}}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SelectMany(Of TSource, TResult) (source As IQueryable(Of TSource), selector As Expression(Of Func(Of TSource, IEnumerable(Of TResult)))) As IQueryable(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;TResult&gt; ^ SelectMany(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, System::Collections::Generic::IEnumerable&lt;TResult&gt; ^&gt; ^&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member SelectMany : System.Linq.IQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, seq&lt;'Result&gt;&gt;&gt; -&gt; System.Linq.IQueryable&lt;'Result&gt;" Usage="System.Linq.Queryable.SelectMany (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,System.Collections.Generic.IEnumerable&lt;TResult&gt;&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="a55f4-1200">Тип элементов <paramref name="source" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1200">The type of the elements of <paramref name="source" />.</span></span></typeparam>
        <typeparam name="TResult"><span data-ttu-id="a55f4-1201">Тип элементов последовательности, возвращаемых функцией, заданной параметром <paramref name="selector" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1201">The type of the elements of the sequence returned by the function represented by <paramref name="selector" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="a55f4-1202">Последовательность значений, которые следует проецировать.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1202">A sequence of values to project.</span></span></param>
        <param name="selector"><span data-ttu-id="a55f4-1203">Функция проекции, применяемая к каждому элементу.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1203">A projection function to apply to each element.</span></span></param>
        <summary><span data-ttu-id="a55f4-1204">Проецирует каждый элемент последовательности в объект <see cref="T:System.Collections.Generic.IEnumerable`1" /> и объединяет результирующие последовательности в одну последовательность.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1204">Projects each element of a sequence to an <see cref="T:System.Collections.Generic.IEnumerable`1" /> and combines the resulting sequences into one sequence.</span></span></summary>
        <returns><span data-ttu-id="a55f4-1205">Объект <see cref="T:System.Linq.IQueryable`1" />, элементы которого получены в результате вызова функции проекции "один ко многим" для каждого элемента входной последовательности.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1205">An <see cref="T:System.Linq.IQueryable`1" /> whose elements are the result of invoking a one-to-many projection function on each element of the input sequence.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a55f4-1206">Этот метод имеет по крайней мере один параметр <xref:System.Linq.Expressions.Expression%601> типа, аргумент типа которого является одним <xref:System.Func%602> из типов.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1206">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="a55f4-1207">Для этих параметров можно передать лямбда-выражение, которое будет скомпилировано в <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1207">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="a55f4-1208">Метод создает объект <xref:System.Linq.Expressions.MethodCallExpression> , который представляет вызов <xref:System.Linq.Queryable.SelectMany%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%7D%7D%29> самого себя как сконструированного универсального метода. <xref:System.Linq.Queryable.SelectMany%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%7D%7D%29></span><span class="sxs-lookup"><span data-stu-id="a55f4-1208">The <xref:System.Linq.Queryable.SelectMany%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.SelectMany%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="a55f4-1209">Затем <xref:System.Linq.Expressions.MethodCallExpression> он передает <xref:System.Linq.IQueryProvider> методу класса, представленного `source`свойствомпараметра <xref:System.Linq.IQueryable.Provider%2A> <xref:System.Linq.IQueryProvider.CreateQuery%28System.Linq.Expressions.Expression%29> .</span><span class="sxs-lookup"><span data-stu-id="a55f4-1209">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="a55f4-1210">Поведение запроса, которое происходит в результате выполнения дерева выражения, представляющего вызов <xref:System.Linq.Queryable.SelectMany%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%7D%7D%29> , зависит от реализации типа `source` параметра.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1210">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.SelectMany%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="a55f4-1211">Ожидаемое поведение заключается в том, что `selector` он вызывается для `source` каждого элемента, чтобы проецировать его в перечислимую форму.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1211">The expected behavior is that it invokes `selector` on each element of `source` to project it into an enumerable form.</span></span> <span data-ttu-id="a55f4-1212">Затем перечислимые результаты объединяются в одну одномерный последовательность.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1212">It then concatenates the enumerable results into a single, one-dimensional sequence.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a55f4-1213">В следующем примере кода показано, как использовать <xref:System.Linq.Queryable.SelectMany%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%7D%7D%29> для выполнения проекции "один ко многим" в массиве.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1213">The following code example demonstrates how to use <xref:System.Linq.Queryable.SelectMany%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%7D%7D%29> to perform a one-to-many projection over an array.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#77](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#77)]
 [!code-vb[System.Linq.Queryable#77](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#77)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a55f4-1214">Значение параметра <paramref name="source" /> или <paramref name="selector" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1214"><paramref name="source" /> or <paramref name="selector" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SelectMany&lt;TSource,TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;TResult&gt; SelectMany&lt;TSource,TResult&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,int,System.Collections.Generic.IEnumerable&lt;TResult&gt;&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;!!TResult&gt; SelectMany&lt;TSource, TResult&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`3&lt;!!TSource, int32, class System.Collections.Generic.IEnumerable`1&lt;!!TResult&gt;&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.SelectMany``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SelectMany(Of TSource, TResult) (source As IQueryable(Of TSource), selector As Expression(Of Func(Of TSource, Integer, IEnumerable(Of TResult)))) As IQueryable(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;TResult&gt; ^ SelectMany(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, int, System::Collections::Generic::IEnumerable&lt;TResult&gt; ^&gt; ^&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member SelectMany : System.Linq.IQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, int, seq&lt;'Result&gt;&gt;&gt; -&gt; System.Linq.IQueryable&lt;'Result&gt;" Usage="System.Linq.Queryable.SelectMany (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,System.Int32,System.Collections.Generic.IEnumerable&lt;TResult&gt;&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="a55f4-1215">Тип элементов <paramref name="source" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1215">The type of the elements of <paramref name="source" />.</span></span></typeparam>
        <typeparam name="TResult"><span data-ttu-id="a55f4-1216">Тип элементов последовательности, возвращаемых функцией, заданной параметром <paramref name="selector" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1216">The type of the elements of the sequence returned by the function represented by <paramref name="selector" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="a55f4-1217">Последовательность значений, которые следует проецировать.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1217">A sequence of values to project.</span></span></param>
        <param name="selector"><span data-ttu-id="a55f4-1218">Функция проекции, применяемая к каждому элементу; второй параметр этой функции представляет индекс исходного элемента.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1218">A projection function to apply to each element; the second parameter of this function represents the index of the source element.</span></span></param>
        <summary><span data-ttu-id="a55f4-1219">Проецирует каждый элемент последовательности в объект <see cref="T:System.Collections.Generic.IEnumerable`1" /> и объединяет результирующие последовательности в одну последовательность.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1219">Projects each element of a sequence to an <see cref="T:System.Collections.Generic.IEnumerable`1" /> and combines the resulting sequences into one sequence.</span></span> <span data-ttu-id="a55f4-1220">Индекс каждого элемента исходной последовательности используется в проецированной форме этого элемента.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1220">The index of each source element is used in the projected form of that element.</span></span></summary>
        <returns><span data-ttu-id="a55f4-1221">Объект <see cref="T:System.Linq.IQueryable`1" />, элементы которого получены в результате вызова функции проекции "один ко многим" для каждого элемента входной последовательности.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1221">An <see cref="T:System.Linq.IQueryable`1" /> whose elements are the result of invoking a one-to-many projection function on each element of the input sequence.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a55f4-1222">Этот метод имеет по крайней мере один параметр <xref:System.Linq.Expressions.Expression%601> типа, аргумент типа которого является одним <xref:System.Func%602> из типов.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1222">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="a55f4-1223">Для этих параметров можно передать лямбда-выражение, которое будет скомпилировано в <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1223">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="a55f4-1224">Метод создает объект <xref:System.Linq.Expressions.MethodCallExpression> , который представляет вызов <xref:System.Linq.Queryable.SelectMany%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%7D%7D%29> самого себя как сконструированного универсального метода. <xref:System.Linq.Queryable.SelectMany%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%7D%7D%29></span><span class="sxs-lookup"><span data-stu-id="a55f4-1224">The <xref:System.Linq.Queryable.SelectMany%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.SelectMany%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="a55f4-1225">Затем <xref:System.Linq.Expressions.MethodCallExpression> он передает <xref:System.Linq.IQueryProvider> методу класса, представленного `source`свойствомпараметра <xref:System.Linq.IQueryable.Provider%2A> <xref:System.Linq.IQueryProvider.CreateQuery%28System.Linq.Expressions.Expression%29> .</span><span class="sxs-lookup"><span data-stu-id="a55f4-1225">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="a55f4-1226">Поведение запроса, которое происходит в результате выполнения дерева выражения, представляющего вызов <xref:System.Linq.Queryable.SelectMany%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%7D%7D%29> , зависит от реализации типа `source` параметра.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1226">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.SelectMany%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="a55f4-1227">Ожидаемое поведение заключается в том, что `selector` он вызывается для `source` каждого элемента, чтобы проецировать его в перечислимую форму.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1227">The expected behavior is that it invokes `selector` on each element of `source` to project it into an enumerable form.</span></span> <span data-ttu-id="a55f4-1228">Каждый перечислимый результат включает индекс исходного элемента.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1228">Each enumerable result incorporates the index of the source element.</span></span> <span data-ttu-id="a55f4-1229">Затем перечислимые результаты объединяются в одну одномерный последовательность.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1229">It then concatenates the enumerable results into a single, one-dimensional sequence.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a55f4-1230">В следующем примере кода показано, как использовать <xref:System.Linq.Queryable.SelectMany%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%7D%7D%29> для выполнения проекции "один ко многим" в массиве и использования индекса каждого исходного элемента.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1230">The following code example demonstrates how to use <xref:System.Linq.Queryable.SelectMany%60%602%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%7D%7D%29> to perform a one-to-many projection over an array and use the index of each source element.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#78](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#78)]
 [!code-vb[System.Linq.Queryable#78](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#78)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a55f4-1231">Значение параметра <paramref name="source" /> или <paramref name="selector" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1231"><paramref name="source" /> or <paramref name="selector" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SelectMany&lt;TSource,TCollection,TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;TResult&gt; SelectMany&lt;TSource,TCollection,TResult&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,System.Collections.Generic.IEnumerable&lt;TCollection&gt;&gt;&gt; collectionSelector, System.Linq.Expressions.Expression&lt;Func&lt;TSource,TCollection,TResult&gt;&gt; resultSelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;!!TResult&gt; SelectMany&lt;TSource, TCollection, TResult&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, class System.Collections.Generic.IEnumerable`1&lt;!!TCollection&gt;&gt;&gt; collectionSelector, class System.Linq.Expressions.Expression`1&lt;class System.Func`3&lt;!!TSource, !!TCollection, !!TResult&gt;&gt; resultSelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.SelectMany``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1}}},System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SelectMany(Of TSource, TCollection, TResult) (source As IQueryable(Of TSource), collectionSelector As Expression(Of Func(Of TSource, IEnumerable(Of TCollection))), resultSelector As Expression(Of Func(Of TSource, TCollection, TResult))) As IQueryable(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TCollection, typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;TResult&gt; ^ SelectMany(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, System::Collections::Generic::IEnumerable&lt;TCollection&gt; ^&gt; ^&gt; ^ collectionSelector, System::Linq::Expressions::Expression&lt;Func&lt;TSource, TCollection, TResult&gt; ^&gt; ^ resultSelector);" />
      <MemberSignature Language="F#" Value="static member SelectMany : System.Linq.IQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, seq&lt;'Collection&gt;&gt;&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, 'Collection, 'Result&gt;&gt; -&gt; System.Linq.IQueryable&lt;'Result&gt;" Usage="System.Linq.Queryable.SelectMany (source, collectionSelector, resultSelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TCollection" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="collectionSelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,System.Collections.Generic.IEnumerable&lt;TCollection&gt;&gt;&gt;" />
        <Parameter Name="resultSelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,TCollection,TResult&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="a55f4-1232">Тип элементов <paramref name="source" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1232">The type of the elements of <paramref name="source" />.</span></span></typeparam>
        <typeparam name="TCollection"><span data-ttu-id="a55f4-1233">Тип промежуточных элементов, собранных функцией, заданной параметром <paramref name="collectionSelector" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1233">The type of the intermediate elements collected by the function represented by <paramref name="collectionSelector" />.</span></span></typeparam>
        <typeparam name="TResult"><span data-ttu-id="a55f4-1234">Тип элементов результирующей последовательности.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1234">The type of the elements of the resulting sequence.</span></span></typeparam>
        <param name="source"><span data-ttu-id="a55f4-1235">Последовательность значений, которые следует проецировать.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1235">A sequence of values to project.</span></span></param>
        <param name="collectionSelector"><span data-ttu-id="a55f4-1236">Функция проекции, применяемая к каждому элементу входной последовательности.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1236">A projection function to apply to each element of the input sequence.</span></span></param>
        <param name="resultSelector"><span data-ttu-id="a55f4-1237">Функция проекции, применяемая к каждому элементу каждой промежуточной последовательности.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1237">A projection function to apply to each element of each intermediate sequence.</span></span></param>
        <summary><span data-ttu-id="a55f4-1238">Проецирует каждый элемент последовательности в объект <see cref="T:System.Collections.Generic.IEnumerable`1" /> и вызывает функцию селектора результата для каждого элемента.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1238">Projects each element of a sequence to an <see cref="T:System.Collections.Generic.IEnumerable`1" /> and invokes a result selector function on each element therein.</span></span> <span data-ttu-id="a55f4-1239">Результирующие значения из всех промежуточных последовательностей возвращаются объединенными в одну одномерную последовательность.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1239">The resulting values from each intermediate sequence are combined into a single, one-dimensional sequence and returned.</span></span></summary>
        <returns><span data-ttu-id="a55f4-1240">Объект <see cref="T:System.Linq.IQueryable`1" />, элементы которого получены в результате вызова функции проекции "один ко многим" <paramref name="collectionSelector" /> для каждого элемента последовательности <paramref name="source" /> и последующего сопоставления каждого элемента такой промежуточной последовательности и соответствующего ему элемента последовательности <paramref name="source" /> с результирующим элементом.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1240">An <see cref="T:System.Linq.IQueryable`1" /> whose elements are the result of invoking the one-to-many projection function <paramref name="collectionSelector" /> on each element of <paramref name="source" /> and then mapping each of those sequence elements and their corresponding <paramref name="source" /> element to a result element.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a55f4-1241">Этот метод имеет по крайней мере один параметр <xref:System.Linq.Expressions.Expression%601> типа, аргумент типа которого является одним <xref:System.Func%602> из типов.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1241">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="a55f4-1242">Для этих параметров можно передать лямбда-выражение, которое будет скомпилировано в <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1242">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="a55f4-1243">Метод создает объект <xref:System.Linq.Expressions.MethodCallExpression> , который представляет вызов <xref:System.Linq.Queryable.SelectMany%60%603%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%2C%60%602%7D%7D%29> самого себя как сконструированного универсального метода. <xref:System.Linq.Queryable.SelectMany%60%603%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%2C%60%602%7D%7D%29></span><span class="sxs-lookup"><span data-stu-id="a55f4-1243">The <xref:System.Linq.Queryable.SelectMany%60%603%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%2C%60%602%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.SelectMany%60%603%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%2C%60%602%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="a55f4-1244">Затем <xref:System.Linq.Expressions.MethodCallExpression> он передает <xref:System.Linq.IQueryProvider> методу класса, представленного `source`свойствомпараметра <xref:System.Linq.IQueryable.Provider%2A> <xref:System.Linq.IQueryProvider.CreateQuery%28System.Linq.Expressions.Expression%29> .</span><span class="sxs-lookup"><span data-stu-id="a55f4-1244">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="a55f4-1245">Поведение запроса, которое происходит в результате выполнения дерева выражения, представляющего вызов <xref:System.Linq.Queryable.SelectMany%60%603%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%2C%60%602%7D%7D%29> , зависит от реализации типа `source` параметра.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1245">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.SelectMany%60%603%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%2C%60%602%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="a55f4-1246">Ожидаемое поведение заключается в том, что `collectionSelector` он вызывается для `source` каждого элемента, чтобы проецировать его в перечислимую форму.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1246">The expected behavior is that it invokes `collectionSelector` on each element of `source` to project it into an enumerable form.</span></span> <span data-ttu-id="a55f4-1247">Затем функция, представленная `resultSelector` , вызывается для каждого элемента в каждой промежуточной последовательности.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1247">Then the function represented by `resultSelector` is invoked on each element in each intermediate sequence.</span></span> <span data-ttu-id="a55f4-1248">Результирующие значения объединяются в одну одномерный последовательность.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1248">The resulting values are concatenated into a single, one-dimensional sequence.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a55f4-1249">В следующем примере кода показано, как использовать <xref:System.Linq.Queryable.SelectMany%60%603%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%2C%60%602%7D%7D%29> для выполнения проекции "один ко многим" в массиве.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1249">The following code example demonstrates how to use <xref:System.Linq.Queryable.SelectMany%60%603%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%2C%60%602%7D%7D%29> to perform a one-to-many projection over an array.</span></span> <span data-ttu-id="a55f4-1250">В этом примере используется функция селектора результата для сохранения исходного элемента, соответствующего каждой промежуточной последовательности в области, для последнего вызова `Select`.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1250">This example uses a result selector function to keep the source element that corresponds to each intermediate sequence in scope for the final call to `Select`.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#124](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#124)]
 [!code-vb[System.Linq.Queryable#124](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#124)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a55f4-1251">Параметр <paramref name="source" />, <paramref name="collectionSelector" /> или <paramref name="resultSelector" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1251"><paramref name="source" /> or <paramref name="collectionSelector" /> or <paramref name="resultSelector" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SelectMany&lt;TSource,TCollection,TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;TResult&gt; SelectMany&lt;TSource,TCollection,TResult&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,int,System.Collections.Generic.IEnumerable&lt;TCollection&gt;&gt;&gt; collectionSelector, System.Linq.Expressions.Expression&lt;Func&lt;TSource,TCollection,TResult&gt;&gt; resultSelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;!!TResult&gt; SelectMany&lt;TSource, TCollection, TResult&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`3&lt;!!TSource, int32, class System.Collections.Generic.IEnumerable`1&lt;!!TCollection&gt;&gt;&gt; collectionSelector, class System.Linq.Expressions.Expression`1&lt;class System.Func`3&lt;!!TSource, !!TCollection, !!TResult&gt;&gt; resultSelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.SelectMany``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}}},System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SelectMany(Of TSource, TCollection, TResult) (source As IQueryable(Of TSource), collectionSelector As Expression(Of Func(Of TSource, Integer, IEnumerable(Of TCollection))), resultSelector As Expression(Of Func(Of TSource, TCollection, TResult))) As IQueryable(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TCollection, typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;TResult&gt; ^ SelectMany(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, int, System::Collections::Generic::IEnumerable&lt;TCollection&gt; ^&gt; ^&gt; ^ collectionSelector, System::Linq::Expressions::Expression&lt;Func&lt;TSource, TCollection, TResult&gt; ^&gt; ^ resultSelector);" />
      <MemberSignature Language="F#" Value="static member SelectMany : System.Linq.IQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, int, seq&lt;'Collection&gt;&gt;&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, 'Collection, 'Result&gt;&gt; -&gt; System.Linq.IQueryable&lt;'Result&gt;" Usage="System.Linq.Queryable.SelectMany (source, collectionSelector, resultSelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TCollection" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="collectionSelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,System.Int32,System.Collections.Generic.IEnumerable&lt;TCollection&gt;&gt;&gt;" />
        <Parameter Name="resultSelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,TCollection,TResult&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="a55f4-1252">Тип элементов <paramref name="source" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1252">The type of the elements of <paramref name="source" />.</span></span></typeparam>
        <typeparam name="TCollection"><span data-ttu-id="a55f4-1253">Тип промежуточных элементов, собранных функцией, заданной параметром <paramref name="collectionSelector" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1253">The type of the intermediate elements collected by the function represented by <paramref name="collectionSelector" />.</span></span></typeparam>
        <typeparam name="TResult"><span data-ttu-id="a55f4-1254">Тип элементов результирующей последовательности.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1254">The type of the elements of the resulting sequence.</span></span></typeparam>
        <param name="source"><span data-ttu-id="a55f4-1255">Последовательность значений, которые следует проецировать.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1255">A sequence of values to project.</span></span></param>
        <param name="collectionSelector"><span data-ttu-id="a55f4-1256">Функция проекции, применяемая к каждому элементу входной последовательности; второй параметр этой функции представляет индекс исходного элемента.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1256">A projection function to apply to each element of the input sequence; the second parameter of this function represents the index of the source element.</span></span></param>
        <param name="resultSelector"><span data-ttu-id="a55f4-1257">Функция проекции, применяемая к каждому элементу каждой промежуточной последовательности.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1257">A projection function to apply to each element of each intermediate sequence.</span></span></param>
        <summary><span data-ttu-id="a55f4-1258">Проецирует каждый элемент последовательности в объект <see cref="T:System.Collections.Generic.IEnumerable`1" />, включающий индекс исходного элемента, на основе которого он был создан.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1258">Projects each element of a sequence to an <see cref="T:System.Collections.Generic.IEnumerable`1" /> that incorporates the index of the source element that produced it.</span></span> <span data-ttu-id="a55f4-1259">Для каждого элемента каждой промежуточной последовательности вызывается функция селектора результата, и результирующие значения возвращаются объединенными в одну одномерную последовательность.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1259">A result selector function is invoked on each element of each intermediate sequence, and the resulting values are combined into a single, one-dimensional sequence and returned.</span></span></summary>
        <returns><span data-ttu-id="a55f4-1260">Объект <see cref="T:System.Linq.IQueryable`1" />, элементы которого получены в результате вызова функции проекции "один ко многим" <paramref name="collectionSelector" /> для каждого элемента последовательности <paramref name="source" /> и последующего сопоставления каждого элемента такой промежуточной последовательности и соответствующего ему элемента последовательности <paramref name="source" /> с результирующим элементом.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1260">An <see cref="T:System.Linq.IQueryable`1" /> whose elements are the result of invoking the one-to-many projection function <paramref name="collectionSelector" /> on each element of <paramref name="source" /> and then mapping each of those sequence elements and their corresponding <paramref name="source" /> element to a result element.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a55f4-1261">Этот метод имеет по крайней мере один параметр <xref:System.Linq.Expressions.Expression%601> типа, аргумент типа которого является одним <xref:System.Func%602> из типов.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1261">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="a55f4-1262">Для этих параметров можно передать лямбда-выражение, которое будет скомпилировано в <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1262">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="a55f4-1263">Метод создает объект <xref:System.Linq.Expressions.MethodCallExpression> , который представляет вызов <xref:System.Linq.Queryable.SelectMany%60%603%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%2C%60%602%7D%7D%29> самого себя как сконструированного универсального метода. <xref:System.Linq.Queryable.SelectMany%60%603%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%2C%60%602%7D%7D%29></span><span class="sxs-lookup"><span data-stu-id="a55f4-1263">The <xref:System.Linq.Queryable.SelectMany%60%603%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%2C%60%602%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.SelectMany%60%603%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%2C%60%602%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="a55f4-1264">Затем <xref:System.Linq.Expressions.MethodCallExpression> он передает <xref:System.Linq.IQueryProvider> методу класса, представленного `source`свойствомпараметра <xref:System.Linq.IQueryable.Provider%2A> <xref:System.Linq.IQueryProvider.CreateQuery%28System.Linq.Expressions.Expression%29> .</span><span class="sxs-lookup"><span data-stu-id="a55f4-1264">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="a55f4-1265">Поведение запроса, которое происходит в результате выполнения дерева выражения, представляющего вызов <xref:System.Linq.Queryable.SelectMany%60%603%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%2C%60%602%7D%7D%29> , зависит от реализации типа `source` параметра.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1265">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.SelectMany%60%603%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2CSystem.Collections.Generic.IEnumerable%7B%60%601%7D%7D%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%2C%60%602%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="a55f4-1266">Ожидаемое поведение заключается в том, что `collectionSelector` он вызывается для `source` каждого элемента, чтобы проецировать его в перечислимую форму.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1266">The expected behavior is that it invokes `collectionSelector` on each element of `source` to project it into an enumerable form.</span></span> <span data-ttu-id="a55f4-1267">Каждый перечислимый результат включает индекс исходного элемента.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1267">Each enumerable result incorporates the source element's index.</span></span> <span data-ttu-id="a55f4-1268">Затем функция, представленная `resultSelector` , вызывается для каждого элемента в каждой промежуточной последовательности.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1268">Then the function represented by `resultSelector` is invoked on each element in each intermediate sequence.</span></span> <span data-ttu-id="a55f4-1269">Результирующие значения объединяются в одну одномерный последовательность.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1269">The resulting values are concatenated into a single, one-dimensional sequence.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a55f4-1270">Параметр <paramref name="source" />, <paramref name="collectionSelector" /> или <paramref name="resultSelector" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1270"><paramref name="source" /> or <paramref name="collectionSelector" /> or <paramref name="resultSelector" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="SequenceEqual&lt;TSource&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a55f4-1271">Определяет, совпадают ли две последовательности.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1271">Determines whether two sequences are equal.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SequenceEqual&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static bool SequenceEqual&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source1, System.Collections.Generic.IEnumerable&lt;TSource&gt; source2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool SequenceEqual&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source1, class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; source2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.SequenceEqual``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SequenceEqual(Of TSource) (source1 As IQueryable(Of TSource), source2 As IEnumerable(Of TSource)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool SequenceEqual(System::Linq::IQueryable&lt;TSource&gt; ^ source1, System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ source2);" />
      <MemberSignature Language="F#" Value="static member SequenceEqual : System.Linq.IQueryable&lt;'Source&gt; * seq&lt;'Source&gt; -&gt; bool" Usage="System.Linq.Queryable.SequenceEqual (source1, source2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source1" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="source2" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="a55f4-1272">Тип элементов входных последовательностей.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1272">The type of the elements of the input sequences.</span></span></typeparam>
        <param name="source1"><span data-ttu-id="a55f4-1273">Объект <see cref="T:System.Linq.IQueryable`1" />, элементы которого сравниваются с элементами последовательности <paramref name="source2" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1273">An <see cref="T:System.Linq.IQueryable`1" /> whose elements to compare to those of <paramref name="source2" />.</span></span></param>
        <param name="source2"><span data-ttu-id="a55f4-1274">Объект <see cref="T:System.Collections.Generic.IEnumerable`1" />, элементы которого сравниваются с элементами первой последовательности.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1274">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> whose elements to compare to those of the first sequence.</span></span></param>
        <summary><span data-ttu-id="a55f4-1275">Определяет, совпадают ли две последовательности, используя для сравнения элементов компаратор проверки на равенство по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1275">Determines whether two sequences are equal by using the default equality comparer to compare elements.</span></span></summary>
        <returns><span data-ttu-id="a55f4-1276"><see langword="true" />, если у двух исходных последовательностей одинаковая длина и соответствующие элементы совпадают, в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1276"><see langword="true" /> if the two source sequences are of equal length and their corresponding elements compare equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a55f4-1277">Метод создает объект <xref:System.Linq.Expressions.MethodCallExpression> , который представляет вызов <xref:System.Linq.Queryable.SequenceEqual%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%29> самого себя как сконструированного универсального метода. <xref:System.Linq.Queryable.SequenceEqual%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%29></span><span class="sxs-lookup"><span data-stu-id="a55f4-1277">The <xref:System.Linq.Queryable.SequenceEqual%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.SequenceEqual%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="a55f4-1278">Затем <xref:System.Linq.Expressions.MethodCallExpression> он передает <xref:System.Linq.IQueryProvider> методу класса, представленного `source1`свойствомпараметра <xref:System.Linq.IQueryable.Provider%2A> <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> .</span><span class="sxs-lookup"><span data-stu-id="a55f4-1278">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source1` parameter.</span></span>  
  
 <span data-ttu-id="a55f4-1279">Поведение запроса, которое происходит в результате выполнения дерева выражения, представляющего вызов <xref:System.Linq.Queryable.SequenceEqual%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%29> , зависит от реализации типа `source1` параметра.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1279">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.SequenceEqual%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%29> depends on the implementation of the type of the `source1` parameter.</span></span> <span data-ttu-id="a55f4-1280">Ожидаемое поведение заключается в том, что он определяет, равны ли две исходные последовательности.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1280">The expected behavior is that it determines if the two source sequences are equal.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a55f4-1281">В следующем примере кода показано, как с <xref:System.Linq.Queryable.SequenceEqual%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%29> помощью определить, равны ли две последовательности.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1281">The following code example demonstrates how to use <xref:System.Linq.Queryable.SequenceEqual%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%29> to determine whether two sequences are equal.</span></span> <span data-ttu-id="a55f4-1282">В этом примере последовательности равны.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1282">In this example the sequences are equal.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#32](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#32)]
 [!code-vb[System.Linq.Queryable#32](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#32)]  
  
 <span data-ttu-id="a55f4-1283">В следующем примере кода сравниваются две последовательности, которые не равны.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1283">The following code example compares two sequences that are not equal.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#33](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#33)]
 [!code-vb[System.Linq.Queryable#33](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#33)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a55f4-1284">Значение параметра <paramref name="source1" /> или <paramref name="source2" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1284"><paramref name="source1" /> or <paramref name="source2" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SequenceEqual&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static bool SequenceEqual&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source1, System.Collections.Generic.IEnumerable&lt;TSource&gt; source2, System.Collections.Generic.IEqualityComparer&lt;TSource&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool SequenceEqual&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source1, class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; source2, class System.Collections.Generic.IEqualityComparer`1&lt;!!TSource&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.SequenceEqual``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SequenceEqual(Of TSource) (source1 As IQueryable(Of TSource), source2 As IEnumerable(Of TSource), comparer As IEqualityComparer(Of TSource)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool SequenceEqual(System::Linq::IQueryable&lt;TSource&gt; ^ source1, System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ source2, System::Collections::Generic::IEqualityComparer&lt;TSource&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member SequenceEqual : System.Linq.IQueryable&lt;'Source&gt; * seq&lt;'Source&gt; * System.Collections.Generic.IEqualityComparer&lt;'Source&gt; -&gt; bool" Usage="System.Linq.Queryable.SequenceEqual (source1, source2, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source1" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="source2" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TSource&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="a55f4-1285">Тип элементов входных последовательностей.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1285">The type of the elements of the input sequences.</span></span></typeparam>
        <param name="source1"><span data-ttu-id="a55f4-1286">Объект <see cref="T:System.Linq.IQueryable`1" />, элементы которого сравниваются с элементами последовательности <paramref name="source2" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1286">An <see cref="T:System.Linq.IQueryable`1" /> whose elements to compare to those of <paramref name="source2" />.</span></span></param>
        <param name="source2"><span data-ttu-id="a55f4-1287">Объект <see cref="T:System.Collections.Generic.IEnumerable`1" />, элементы которого сравниваются с элементами первой последовательности.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1287">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> whose elements to compare to those of the first sequence.</span></span></param>
        <param name="comparer"><span data-ttu-id="a55f4-1288">Компаратор <see cref="T:System.Collections.Generic.IEqualityComparer`1" />, используемый для сравнения элементов.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1288">An <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> to use to compare elements.</span></span></param>
        <summary><span data-ttu-id="a55f4-1289">Определяет, совпадают ли две последовательности, используя для сравнения элементов указанный компаратор <see cref="T:System.Collections.Generic.IEqualityComparer`1" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1289">Determines whether two sequences are equal by using a specified <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> to compare elements.</span></span></summary>
        <returns><span data-ttu-id="a55f4-1290"><see langword="true" />, если у двух исходных последовательностей одинаковая длина и соответствующие элементы совпадают, в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1290"><see langword="true" /> if the two source sequences are of equal length and their corresponding elements compare equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a55f4-1291">Метод создает объект <xref:System.Linq.Expressions.MethodCallExpression> , который представляет вызов <xref:System.Linq.Queryable.SequenceEqual%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%600%7D%29> самого себя как сконструированного универсального метода. <xref:System.Linq.Queryable.SequenceEqual%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%600%7D%29></span><span class="sxs-lookup"><span data-stu-id="a55f4-1291">The <xref:System.Linq.Queryable.SequenceEqual%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%600%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.SequenceEqual%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%600%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="a55f4-1292">Затем <xref:System.Linq.Expressions.MethodCallExpression> он передает <xref:System.Linq.IQueryProvider> методу класса, представленного `source1`свойствомпараметра <xref:System.Linq.IQueryable.Provider%2A> <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> .</span><span class="sxs-lookup"><span data-stu-id="a55f4-1292">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source1` parameter.</span></span>  
  
 <span data-ttu-id="a55f4-1293">Поведение запроса, которое происходит в результате выполнения дерева выражения, представляющего вызов <xref:System.Linq.Queryable.SequenceEqual%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%600%7D%29> , зависит от реализации типа `source1` параметра.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1293">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.SequenceEqual%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%600%7D%29> depends on the implementation of the type of the `source1` parameter.</span></span> <span data-ttu-id="a55f4-1294">Ожидаемое поведение заключается в том, что он определяет, равны ли две исходные последовательности `comparer` с помощью функции для сравнения элементов.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1294">The expected behavior is that it determines if the two source sequences are equal by using `comparer` to compare elements.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a55f4-1295">Значение параметра <paramref name="source1" /> или <paramref name="source2" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1295"><paramref name="source1" /> or <paramref name="source2" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Single&lt;TSource&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a55f4-1296">Возвращает единственный конкретный элемент последовательности.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1296">Returns a single, specific element of a sequence.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Single&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static TSource Single&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TSource Single&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Single``1(System.Linq.IQueryable{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Single(Of TSource) (source As IQueryable(Of TSource)) As TSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TSource Single(System::Linq::IQueryable&lt;TSource&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Single : System.Linq.IQueryable&lt;'Source&gt; -&gt; 'Source" Usage="System.Linq.Queryable.Single source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TSource</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="a55f4-1297">Тип элементов <paramref name="source" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1297">The type of the elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="a55f4-1298">Объект <see cref="T:System.Linq.IQueryable`1" />, единственный элемент которого требуется возвратить.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1298">An <see cref="T:System.Linq.IQueryable`1" /> to return the single element of.</span></span></param>
        <summary><span data-ttu-id="a55f4-1299">Возвращает единственный элемент последовательности и генерирует исключение, если число элементов последовательности отлично от 1.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1299">Returns the only element of a sequence, and throws an exception if there is not exactly one element in the sequence.</span></span></summary>
        <returns><span data-ttu-id="a55f4-1300">Единственный элемент входной последовательности.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1300">The single element of the input sequence.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a55f4-1301">Метод создает объект <xref:System.Linq.Expressions.MethodCallExpression> , который представляет вызов <xref:System.Linq.Queryable.Single%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> самого себя как сконструированного универсального метода. <xref:System.Linq.Queryable.Single%60%601%28System.Linq.IQueryable%7B%60%600%7D%29></span><span class="sxs-lookup"><span data-stu-id="a55f4-1301">The <xref:System.Linq.Queryable.Single%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Single%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="a55f4-1302">Затем <xref:System.Linq.Expressions.MethodCallExpression> он передает <xref:System.Linq.IQueryProvider> методу класса, представленного `source`свойствомпараметра <xref:System.Linq.IQueryable.Provider%2A> <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> .</span><span class="sxs-lookup"><span data-stu-id="a55f4-1302">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="a55f4-1303">Поведение запроса, которое происходит в результате выполнения дерева выражения, представляющего вызов <xref:System.Linq.Queryable.Single%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> , зависит от реализации типа `source` параметра.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1303">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Single%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="a55f4-1304">Ожидаемое поведение заключается в том, что он возвращает единственный `source`элемент в.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1304">The expected behavior is that it returns the only element in `source`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a55f4-1305">В следующем примере кода показано, как использовать <xref:System.Linq.Queryable.Single%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> для выбора единственного элемента массива.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1305">The following code example demonstrates how to use <xref:System.Linq.Queryable.Single%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> to select the only element of an array.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#79](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#79)]
 [!code-vb[System.Linq.Queryable#79](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#79)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a55f4-1306">Свойство <paramref name="source" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1306"><paramref name="source" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a55f4-1307"><paramref name="source" /> имеет более одного элемента.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1307"><paramref name="source" /> has more than one element.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Single&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static TSource Single&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,bool&gt;&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TSource Single&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, bool&gt;&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Single``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Single(Of TSource) (source As IQueryable(Of TSource), predicate As Expression(Of Func(Of TSource, Boolean))) As TSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TSource Single(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, bool&gt; ^&gt; ^ predicate);" />
      <MemberSignature Language="F#" Value="static member Single : System.Linq.IQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, bool&gt;&gt; -&gt; 'Source" Usage="System.Linq.Queryable.Single (source, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TSource</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,System.Boolean&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="a55f4-1308">Тип элементов <paramref name="source" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1308">The type of the elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="a55f4-1309">Объект <see cref="T:System.Linq.IQueryable`1" />, из которого требуется возвратить единственный элемент.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1309">An <see cref="T:System.Linq.IQueryable`1" /> to return a single element from.</span></span></param>
        <param name="predicate"><span data-ttu-id="a55f4-1310">Функция для проверки элемента на соответствие условию.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1310">A function to test an element for a condition.</span></span></param>
        <summary><span data-ttu-id="a55f4-1311">Возвращает единственный элемент последовательности, удовлетворяющий заданному условию, и генерирует исключение, если таких элементов больше одного.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1311">Returns the only element of a sequence that satisfies a specified condition, and throws an exception if more than one such element exists.</span></span></summary>
        <returns><span data-ttu-id="a55f4-1312">Единственный элемент входной последовательности, удовлетворяющий условию предиката <paramref name="predicate" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1312">The single element of the input sequence that satisfies the condition in <paramref name="predicate" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a55f4-1313">Этот метод имеет по крайней мере один параметр <xref:System.Linq.Expressions.Expression%601> типа, аргумент типа которого является одним <xref:System.Func%602> из типов.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1313">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="a55f4-1314">Для этих параметров можно передать лямбда-выражение, которое будет скомпилировано в <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1314">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="a55f4-1315">Метод создает объект <xref:System.Linq.Expressions.MethodCallExpression> , который представляет вызов <xref:System.Linq.Queryable.Single%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> самого себя как сконструированного универсального метода. <xref:System.Linq.Queryable.Single%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29></span><span class="sxs-lookup"><span data-stu-id="a55f4-1315">The <xref:System.Linq.Queryable.Single%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Single%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="a55f4-1316">Затем <xref:System.Linq.Expressions.MethodCallExpression> он передает <xref:System.Linq.IQueryProvider> методу класса, представленного `source`свойствомпараметра <xref:System.Linq.IQueryable.Provider%2A> <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> .</span><span class="sxs-lookup"><span data-stu-id="a55f4-1316">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="a55f4-1317">Поведение запроса, которое происходит в результате выполнения дерева выражения, представляющего вызов <xref:System.Linq.Queryable.Single%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> , зависит от реализации типа `source` параметра.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1317">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Single%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="a55f4-1318">Ожидаемое поведение заключается в том, что он возвращает единственный `source` элемент в, удовлетворяющий условию `predicate`, заданному параметром.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1318">The expected behavior is that it returns the only element in `source` that satisfies the condition specified by `predicate`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a55f4-1319">В следующем примере кода показано, как использовать <xref:System.Linq.Queryable.Single%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> для выбора единственного элемента массива, удовлетворяющего условию.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1319">The following code example demonstrates how to use <xref:System.Linq.Queryable.Single%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> to select the only element of an array that satisfies a condition.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#81](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#81)]
 [!code-vb[System.Linq.Queryable#81](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#81)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a55f4-1320">Значение параметра <paramref name="source" /> или <paramref name="predicate" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1320"><paramref name="source" /> or <paramref name="predicate" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a55f4-1321">Ни один элемент не удовлетворяет условию предиката <paramref name="predicate" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1321">No element satisfies the condition in <paramref name="predicate" />.</span></span>  
  
<span data-ttu-id="a55f4-1322">- или -</span><span class="sxs-lookup"><span data-stu-id="a55f4-1322">-or-</span></span> 
<span data-ttu-id="a55f4-1323">Условию предиката <paramref name="predicate" /> удовлетворяет более одного элемента.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1323">More than one element satisfies the condition in <paramref name="predicate" />.</span></span>  
  
<span data-ttu-id="a55f4-1324">- или -</span><span class="sxs-lookup"><span data-stu-id="a55f4-1324">-or-</span></span> 
<span data-ttu-id="a55f4-1325">Исходная последовательность пуста.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1325">The source sequence is empty.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="SingleOrDefault&lt;TSource&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a55f4-1326">Возвращает единственный конкретный элемент последовательности или значение по умолчанию, если такой элемент не найден.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1326">Returns a single, specific element of a sequence, or a default value if no such element is found.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SingleOrDefault&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static TSource SingleOrDefault&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TSource SingleOrDefault&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.SingleOrDefault``1(System.Linq.IQueryable{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SingleOrDefault(Of TSource) (source As IQueryable(Of TSource)) As TSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TSource SingleOrDefault(System::Linq::IQueryable&lt;TSource&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member SingleOrDefault : System.Linq.IQueryable&lt;'Source&gt; -&gt; 'Source" Usage="System.Linq.Queryable.SingleOrDefault source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TSource</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="a55f4-1327">Тип элементов <paramref name="source" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1327">The type of the elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="a55f4-1328">Объект <see cref="T:System.Linq.IQueryable`1" />, единственный элемент которого требуется возвратить.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1328">An <see cref="T:System.Linq.IQueryable`1" /> to return the single element of.</span></span></param>
        <summary><span data-ttu-id="a55f4-1329">Возвращает единственный элемент последовательности или значение по умолчанию, если последовательность пуста; если в последовательности более одного элемента, генерируется исключение.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1329">Returns the only element of a sequence, or a default value if the sequence is empty; this method throws an exception if there is more than one element in the sequence.</span></span></summary>
        <returns><span data-ttu-id="a55f4-1330">Единственный элемент входной последовательности или <c>default</c>(<paramref name="TSource" />), если в последовательности нет элементов.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1330">The single element of the input sequence, or <c>default</c>(<paramref name="TSource" />) if the sequence contains no elements.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a55f4-1331">Метод создает объект <xref:System.Linq.Expressions.MethodCallExpression> , который представляет вызов <xref:System.Linq.Queryable.SingleOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> самого себя как сконструированного универсального метода. <xref:System.Linq.Queryable.SingleOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%29></span><span class="sxs-lookup"><span data-stu-id="a55f4-1331">The <xref:System.Linq.Queryable.SingleOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.SingleOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="a55f4-1332">Затем <xref:System.Linq.Expressions.MethodCallExpression> он передает <xref:System.Linq.IQueryProvider> методу класса, представленного `source`свойствомпараметра <xref:System.Linq.IQueryable.Provider%2A> <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> .</span><span class="sxs-lookup"><span data-stu-id="a55f4-1332">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="a55f4-1333">Поведение запроса, которое происходит в результате выполнения дерева выражения, представляющего вызов <xref:System.Linq.Queryable.SingleOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> , зависит от реализации типа `source` параметра.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1333">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.SingleOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="a55f4-1334">Ожидаемое поведение заключается в том, что он возвращает единственный `source`элемент в или значение по умолчанию, если `source` пуст.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1334">The expected behavior is that it returns the only element in `source`, or a default value if `source` is empty.</span></span>  
  
 <span data-ttu-id="a55f4-1335"><xref:System.Linq.Queryable.SingleOrDefault%2A> Метод не предоставляет способ указания значения по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1335">The <xref:System.Linq.Queryable.SingleOrDefault%2A> method does not provide a way to specify a default value.</span></span> <span data-ttu-id="a55f4-1336">Если вы хотите указать значение по умолчанию, отличное `default(TSource)`от, <xref:System.Linq.Queryable.DefaultIfEmpty%60%601%28System.Linq.IQueryable%7B%60%600%7D%2C%60%600%29> используйте метод, как описано в разделе "пример".</span><span class="sxs-lookup"><span data-stu-id="a55f4-1336">If you want to specify a default value other than `default(TSource)`, use the <xref:System.Linq.Queryable.DefaultIfEmpty%60%601%28System.Linq.IQueryable%7B%60%600%7D%2C%60%600%29> method as described in the Example section.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a55f4-1337">В следующем примере кода показано, как использовать <xref:System.Linq.Queryable.SingleOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> для выбора единственного элемента массива.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1337">The following code example demonstrates how to use <xref:System.Linq.Queryable.SingleOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> to select the only element of an array.</span></span> <span data-ttu-id="a55f4-1338">Второй запрос демонстрирует, что <xref:System.Linq.Queryable.SingleOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> возвращает значение по умолчанию, если последовательность не содержит ровно один элемент.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1338">The second query demonstrates that <xref:System.Linq.Queryable.SingleOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> returns a default value when the sequence does not contain exactly one element.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#83](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#83)]
 [!code-vb[System.Linq.Queryable#83](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#83)]  
  
 <span data-ttu-id="a55f4-1339">Иногда значение `default(TSource)` не является значением по умолчанию, которое вы хотите использовать, если коллекция не содержит элементов.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1339">Sometimes the value of `default(TSource)` is not the default value that you want to use if the collection contains no elements.</span></span> <span data-ttu-id="a55f4-1340">Вместо того чтобы проверять результат для нежелательного значения по умолчанию и затем менять его при необходимости, можно <xref:System.Linq.Queryable.DefaultIfEmpty%60%601%28System.Linq.IQueryable%7B%60%600%7D%2C%60%600%29> использовать метод, чтобы указать значение по умолчанию, которое будет использоваться, если коллекция пуста.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1340">Instead of checking the result for the unwanted default value and then changing it if necessary, you can use the <xref:System.Linq.Queryable.DefaultIfEmpty%60%601%28System.Linq.IQueryable%7B%60%600%7D%2C%60%600%29> method to specify the default value that you want to use if the collection is empty.</span></span> <span data-ttu-id="a55f4-1341">Затем вызовите <xref:System.Linq.Queryable.Single%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> метод, чтобы получить элемент.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1341">Then, call <xref:System.Linq.Queryable.Single%60%601%28System.Linq.IQueryable%7B%60%600%7D%29> to obtain the element.</span></span> <span data-ttu-id="a55f4-1342">В следующем примере кода используются оба способа получения значения по умолчанию, равного 1, если коллекция номеров страниц пуста.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1342">The following code example uses both techniques to obtain a default value of 1 if a collection of page numbers is empty.</span></span> <span data-ttu-id="a55f4-1343">Так как значение по умолчанию для целого числа равно 0, что обычно не является допустимым номером страницы, значение по умолчанию должно быть равно 1.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1343">Because the default value for an integer is 0, which is not usually a valid page number, the default value must be specified as 1 instead.</span></span> <span data-ttu-id="a55f4-1344">Первая результирующая переменная проверяется на наличие нежелательного значения по умолчанию после завершения запроса.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1344">The first result variable is checked for the unwanted default value after the query is completed.</span></span> <span data-ttu-id="a55f4-1345">Вторая результирующая переменная получается путем вызова <xref:System.Linq.Queryable.DefaultIfEmpty%60%601%28System.Linq.IQueryable%7B%60%600%7D%2C%60%600%29> метода для указания значения по умолчанию 1.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1345">The second result variable is obtained by calling <xref:System.Linq.Queryable.DefaultIfEmpty%60%601%28System.Linq.IQueryable%7B%60%600%7D%2C%60%600%29> to specify a default value of 1.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#133](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#133)]
 [!code-vb[System.Linq.Queryable#133](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#133)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a55f4-1346">Свойство <paramref name="source" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1346"><paramref name="source" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a55f4-1347"><paramref name="source" /> имеет более одного элемента.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1347"><paramref name="source" /> has more than one element.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SingleOrDefault&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static TSource SingleOrDefault&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,bool&gt;&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TSource SingleOrDefault&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, bool&gt;&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.SingleOrDefault``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SingleOrDefault(Of TSource) (source As IQueryable(Of TSource), predicate As Expression(Of Func(Of TSource, Boolean))) As TSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TSource SingleOrDefault(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, bool&gt; ^&gt; ^ predicate);" />
      <MemberSignature Language="F#" Value="static member SingleOrDefault : System.Linq.IQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, bool&gt;&gt; -&gt; 'Source" Usage="System.Linq.Queryable.SingleOrDefault (source, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TSource</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,System.Boolean&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="a55f4-1348">Тип элементов <paramref name="source" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1348">The type of the elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="a55f4-1349">Объект <see cref="T:System.Linq.IQueryable`1" />, из которого требуется возвратить единственный элемент.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1349">An <see cref="T:System.Linq.IQueryable`1" /> to return a single element from.</span></span></param>
        <param name="predicate"><span data-ttu-id="a55f4-1350">Функция для проверки элемента на соответствие условию.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1350">A function to test an element for a condition.</span></span></param>
        <summary><span data-ttu-id="a55f4-1351">Возвращает единственный элемент последовательности, удовлетворяющий заданному условию, или значение по умолчанию, если такого элемента не существует; если условию удовлетворяет более одного элемента, генерируется исключение.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1351">Returns the only element of a sequence that satisfies a specified condition or a default value if no such element exists; this method throws an exception if more than one element satisfies the condition.</span></span></summary>
        <returns><span data-ttu-id="a55f4-1352">Единственный элемент входной последовательности, удовлетворяющий условию в <paramref name="predicate" />, или <c>default</c>(<paramref name="TSource" />), если такой элемент не найден.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1352">The single element of the input sequence that satisfies the condition in <paramref name="predicate" />, or <c>default</c>(<paramref name="TSource" />) if no such element is found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a55f4-1353">Этот метод имеет по крайней мере один параметр <xref:System.Linq.Expressions.Expression%601> типа, аргумент типа которого является одним <xref:System.Func%602> из типов.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1353">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="a55f4-1354">Для этих параметров можно передать лямбда-выражение, которое будет скомпилировано в <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1354">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="a55f4-1355">Метод создает объект <xref:System.Linq.Expressions.MethodCallExpression> , который представляет вызов <xref:System.Linq.Queryable.SingleOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> самого себя как сконструированного универсального метода. <xref:System.Linq.Queryable.SingleOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29></span><span class="sxs-lookup"><span data-stu-id="a55f4-1355">The <xref:System.Linq.Queryable.SingleOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.SingleOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="a55f4-1356">Затем <xref:System.Linq.Expressions.MethodCallExpression> он передает <xref:System.Linq.IQueryProvider> методу класса, представленного `source`свойствомпараметра <xref:System.Linq.IQueryable.Provider%2A> <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> .</span><span class="sxs-lookup"><span data-stu-id="a55f4-1356">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="a55f4-1357">Поведение запроса, которое происходит в результате выполнения дерева выражения, представляющего вызов <xref:System.Linq.Queryable.SingleOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> , зависит от реализации типа `source` параметра.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1357">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.SingleOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="a55f4-1358">Ожидаемое поведение заключается в том, что он возвращает единственный `source` элемент в, удовлетворяющий условию `predicate`, заданному параметром, или значение по умолчанию, если такого элемента не существует.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1358">The expected behavior is that it returns the only element in `source` that satisfies the condition specified by `predicate`, or a default value if no such element exists.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a55f4-1359">В следующем примере кода показано, как использовать <xref:System.Linq.Queryable.SingleOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> для выбора единственного элемента массива, удовлетворяющего условию.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1359">The following code example demonstrates how to use <xref:System.Linq.Queryable.SingleOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> to select the only element of an array that satisfies a condition.</span></span> <span data-ttu-id="a55f4-1360">Второй запрос демонстрирует, что <xref:System.Linq.Queryable.SingleOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> возвращает значение по умолчанию, если последовательность не содержит ровно один элемент, удовлетворяющий условию.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1360">The second query demonstrates that <xref:System.Linq.Queryable.SingleOrDefault%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> returns a default value when the sequence does not contain exactly one element that satisfies the condition.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#85](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#85)]
 [!code-vb[System.Linq.Queryable#85](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#85)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a55f4-1361">Значение параметра <paramref name="source" /> или <paramref name="predicate" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1361"><paramref name="source" /> or <paramref name="predicate" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a55f4-1362">Условию предиката <paramref name="predicate" /> удовлетворяет более одного элемента.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1362">More than one element satisfies the condition in <paramref name="predicate" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Skip&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;TSource&gt; Skip&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;!!TSource&gt; Skip&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Skip``1(System.Linq.IQueryable{``0},System.Int32)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Skip(Of TSource) (source As IQueryable(Of TSource), count As Integer) As IQueryable(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;TSource&gt; ^ Skip(System::Linq::IQueryable&lt;TSource&gt; ^ source, int count);" />
      <MemberSignature Language="F#" Value="static member Skip : System.Linq.IQueryable&lt;'Source&gt; * int -&gt; System.Linq.IQueryable&lt;'Source&gt;" Usage="System.Linq.Queryable.Skip (source, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="a55f4-1363">Тип элементов <paramref name="source" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1363">The type of the elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="a55f4-1364">Объект <see cref="T:System.Linq.IQueryable`1" />, из которого требуется возвратить элементы.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1364">An <see cref="T:System.Linq.IQueryable`1" /> to return elements from.</span></span></param>
        <param name="count"><span data-ttu-id="a55f4-1365">Число элементов, пропускаемых перед возвращением остальных элементов.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1365">The number of elements to skip before returning the remaining elements.</span></span></param>
        <summary><span data-ttu-id="a55f4-1366">Пропускает заданное число элементов в последовательности и возвращает остальные элементы.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1366">Bypasses a specified number of elements in a sequence and then returns the remaining elements.</span></span></summary>
        <returns><span data-ttu-id="a55f4-1367">Объект <see cref="T:System.Linq.IQueryable`1" />, содержащий элементы из входной последовательности, начиная с указанного индекса.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1367">An <see cref="T:System.Linq.IQueryable`1" /> that contains elements that occur after the specified index in the input sequence.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a55f4-1368">Метод создает объект <xref:System.Linq.Expressions.MethodCallExpression> , который представляет вызов <xref:System.Linq.Queryable.Skip%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Int32%29> самого себя как сконструированного универсального метода. <xref:System.Linq.Queryable.Skip%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Int32%29></span><span class="sxs-lookup"><span data-stu-id="a55f4-1368">The <xref:System.Linq.Queryable.Skip%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Int32%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Skip%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Int32%29> itself as a constructed generic method.</span></span> <span data-ttu-id="a55f4-1369">Затем <xref:System.Linq.Expressions.MethodCallExpression> он передает <xref:System.Linq.IQueryProvider> методу класса, представленного `source`свойствомпараметра <xref:System.Linq.IQueryable.Provider%2A> <xref:System.Linq.IQueryProvider.CreateQuery%28System.Linq.Expressions.Expression%29> .</span><span class="sxs-lookup"><span data-stu-id="a55f4-1369">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="a55f4-1370">Поведение запроса, которое происходит в результате выполнения дерева выражения, представляющего вызов <xref:System.Linq.Queryable.Skip%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Int32%29> , зависит от реализации типа `source` параметра.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1370">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Skip%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Int32%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="a55f4-1371">Ожидаемое поведение заключается в том, что он пропускает `count` первые `source` элементы в и возвращает оставшиеся элементы.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1371">The expected behavior is that it skips the first `count` elements in `source` and returns the remaining elements.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a55f4-1372">В следующем примере кода показано, как использовать <xref:System.Linq.Queryable.Skip%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Int32%29> для пропуска указанного числа элементов в отсортированном массиве и возврата оставшихся элементов.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1372">The following code example demonstrates how to use <xref:System.Linq.Queryable.Skip%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Int32%29> to skip a specified number of elements in a sorted array and return the remaining elements.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#87](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#87)]
 [!code-vb[System.Linq.Queryable#87](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#87)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a55f4-1373">Свойство <paramref name="source" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1373"><paramref name="source" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SkipLast&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;TSource&gt; SkipLast&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;!!TSource&gt; SkipLast&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.SkipLast``1(System.Linq.IQueryable{``0},System.Int32)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SkipLast(Of TSource) (source As IQueryable(Of TSource), count As Integer) As IQueryable(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;TSource&gt; ^ SkipLast(System::Linq::IQueryable&lt;TSource&gt; ^ source, int count);" />
      <MemberSignature Language="F#" Value="static member SkipLast : System.Linq.IQueryable&lt;'Source&gt; * int -&gt; System.Linq.IQueryable&lt;'Source&gt;" Usage="System.Linq.Queryable.SkipLast (source, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="count" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">To be added.</typeparam>
        <param name="source">To be added.</param>
        <param name="count">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SkipWhile&lt;TSource&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a55f4-1374">Пропускает элементы в последовательности, пока они удовлетворяют заданному условию, и затем возвращает оставшиеся элементы.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1374">Bypasses elements in a sequence as long as a specified condition is true and then returns the remaining elements.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SkipWhile&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;TSource&gt; SkipWhile&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,bool&gt;&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;!!TSource&gt; SkipWhile&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, bool&gt;&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.SkipWhile``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SkipWhile(Of TSource) (source As IQueryable(Of TSource), predicate As Expression(Of Func(Of TSource, Boolean))) As IQueryable(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;TSource&gt; ^ SkipWhile(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, bool&gt; ^&gt; ^ predicate);" />
      <MemberSignature Language="F#" Value="static member SkipWhile : System.Linq.IQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, bool&gt;&gt; -&gt; System.Linq.IQueryable&lt;'Source&gt;" Usage="System.Linq.Queryable.SkipWhile (source, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,System.Boolean&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="a55f4-1375">Тип элементов <paramref name="source" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1375">The type of the elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="a55f4-1376">Объект <see cref="T:System.Linq.IQueryable`1" />, из которого требуется возвратить элементы.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1376">An <see cref="T:System.Linq.IQueryable`1" /> to return elements from.</span></span></param>
        <param name="predicate"><span data-ttu-id="a55f4-1377">Функция для проверки каждого элемента на соответствие условию.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1377">A function to test each element for a condition.</span></span></param>
        <summary><span data-ttu-id="a55f4-1378">Пропускает элементы в последовательности, пока они удовлетворяют заданному условию, и затем возвращает оставшиеся элементы.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1378">Bypasses elements in a sequence as long as a specified condition is true and then returns the remaining elements.</span></span></summary>
        <returns><span data-ttu-id="a55f4-1379">Объект <see cref="T:System.Linq.IQueryable`1" />, содержащий цепочку элементов последовательности <paramref name="source" />, начиная с первого элемента, который не прошел проверку, заданную предикатом <paramref name="predicate" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1379">An <see cref="T:System.Linq.IQueryable`1" /> that contains elements from <paramref name="source" /> starting at the first element in the linear series that does not pass the test specified by <paramref name="predicate" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a55f4-1380">Этот метод имеет по крайней мере один параметр <xref:System.Linq.Expressions.Expression%601> типа, аргумент типа которого является одним <xref:System.Func%602> из типов.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1380">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="a55f4-1381">Для этих параметров можно передать лямбда-выражение, которое будет скомпилировано в <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1381">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="a55f4-1382">Метод создает объект <xref:System.Linq.Expressions.MethodCallExpression> , который представляет вызов <xref:System.Linq.Queryable.SkipWhile%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> самого себя как сконструированного универсального метода. <xref:System.Linq.Queryable.SkipWhile%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29></span><span class="sxs-lookup"><span data-stu-id="a55f4-1382">The <xref:System.Linq.Queryable.SkipWhile%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.SkipWhile%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="a55f4-1383">Затем <xref:System.Linq.Expressions.MethodCallExpression> он передает <xref:System.Linq.IQueryProvider> методу класса, представленного `source`свойствомпараметра <xref:System.Linq.IQueryable.Provider%2A> <xref:System.Linq.IQueryProvider.CreateQuery%28System.Linq.Expressions.Expression%29> .</span><span class="sxs-lookup"><span data-stu-id="a55f4-1383">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="a55f4-1384">Поведение запроса, которое происходит в результате выполнения дерева выражения, представляющего вызов <xref:System.Linq.Queryable.SkipWhile%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> , зависит от реализации типа `source` параметра.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1384">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.SkipWhile%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="a55f4-1385">Ожидаемое поведение заключается в том, `predicate` что оно применяется к `source` каждому элементу до тех пор, `predicate` пока не будет найден элемент, для которого возвращается значение false.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1385">The expected behavior is that it applies `predicate` to each element in `source` until it finds an element for which `predicate` returns false.</span></span> <span data-ttu-id="a55f4-1386">Возвращается этот элемент и все остальные элементы.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1386">That element and all the remaining elements are returned.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a55f4-1387">В следующем примере кода показано, как использовать <xref:System.Linq.Queryable.SkipWhile%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> для пропуска элементов массива при условии, что условие имеет значение true.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1387">The following code example demonstrates how to use <xref:System.Linq.Queryable.SkipWhile%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> to skip elements of an array as long as a condition is true.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#88](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#88)]
 [!code-vb[System.Linq.Queryable#88](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#88)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a55f4-1388">Значение параметра <paramref name="source" /> или <paramref name="predicate" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1388"><paramref name="source" /> or <paramref name="predicate" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SkipWhile&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;TSource&gt; SkipWhile&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,int,bool&gt;&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;!!TSource&gt; SkipWhile&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`3&lt;!!TSource, int32, bool&gt;&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.SkipWhile``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Boolean}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SkipWhile(Of TSource) (source As IQueryable(Of TSource), predicate As Expression(Of Func(Of TSource, Integer, Boolean))) As IQueryable(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;TSource&gt; ^ SkipWhile(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, int, bool&gt; ^&gt; ^ predicate);" />
      <MemberSignature Language="F#" Value="static member SkipWhile : System.Linq.IQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, int, bool&gt;&gt; -&gt; System.Linq.IQueryable&lt;'Source&gt;" Usage="System.Linq.Queryable.SkipWhile (source, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,System.Int32,System.Boolean&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="a55f4-1389">Тип элементов <paramref name="source" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1389">The type of the elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="a55f4-1390">Объект <see cref="T:System.Linq.IQueryable`1" />, из которого требуется возвратить элементы.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1390">An <see cref="T:System.Linq.IQueryable`1" /> to return elements from.</span></span></param>
        <param name="predicate"><span data-ttu-id="a55f4-1391">Функция, применяемая к каждому элементу для проверки условия; второй параметр этой функции представляет индекс исходного элемента.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1391">A function to test each element for a condition; the second parameter of this function represents the index of the source element.</span></span></param>
        <summary><span data-ttu-id="a55f4-1392">Пропускает элементы в последовательности, пока они удовлетворяют заданному условию, и затем возвращает оставшиеся элементы.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1392">Bypasses elements in a sequence as long as a specified condition is true and then returns the remaining elements.</span></span> <span data-ttu-id="a55f4-1393">Индекс элемента используется в логике функции предиката.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1393">The element's index is used in the logic of the predicate function.</span></span></summary>
        <returns><span data-ttu-id="a55f4-1394">Объект <see cref="T:System.Linq.IQueryable`1" />, содержащий цепочку элементов последовательности <paramref name="source" />, начиная с первого элемента, который не прошел проверку, заданную предикатом <paramref name="predicate" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1394">An <see cref="T:System.Linq.IQueryable`1" /> that contains elements from <paramref name="source" /> starting at the first element in the linear series that does not pass the test specified by <paramref name="predicate" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a55f4-1395">Этот метод имеет по крайней мере один параметр <xref:System.Linq.Expressions.Expression%601> типа, аргумент типа которого является одним <xref:System.Func%602> из типов.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1395">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="a55f4-1396">Для этих параметров можно передать лямбда-выражение, которое будет скомпилировано в <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1396">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="a55f4-1397">Метод создает объект <xref:System.Linq.Expressions.MethodCallExpression> , который представляет вызов <xref:System.Linq.Queryable.SkipWhile%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2CSystem.Boolean%7D%7D%29> самого себя как сконструированного универсального метода. <xref:System.Linq.Queryable.SkipWhile%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2CSystem.Boolean%7D%7D%29></span><span class="sxs-lookup"><span data-stu-id="a55f4-1397">The <xref:System.Linq.Queryable.SkipWhile%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2CSystem.Boolean%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.SkipWhile%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2CSystem.Boolean%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="a55f4-1398">Затем <xref:System.Linq.Expressions.MethodCallExpression> он передает <xref:System.Linq.IQueryProvider> методу класса, представленного `source`свойствомпараметра <xref:System.Linq.IQueryable.Provider%2A> <xref:System.Linq.IQueryProvider.CreateQuery%28System.Linq.Expressions.Expression%29> .</span><span class="sxs-lookup"><span data-stu-id="a55f4-1398">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="a55f4-1399">Поведение запроса, которое происходит в результате выполнения дерева выражения, представляющего вызов <xref:System.Linq.Queryable.SkipWhile%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2CSystem.Boolean%7D%7D%29> , зависит от реализации типа `source` параметра.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1399">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.SkipWhile%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2CSystem.Boolean%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="a55f4-1400">Ожидаемое поведение заключается в том, `predicate` что оно применяется к `source` каждому элементу до тех пор, `predicate` пока не будет найден элемент, для которого возвращается значение false.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1400">The expected behavior is that it applies `predicate` to each element in `source` until it finds an element for which `predicate` returns false.</span></span> <span data-ttu-id="a55f4-1401">Возвращается этот элемент и все остальные элементы.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1401">That element and all the remaining elements are returned.</span></span> <span data-ttu-id="a55f4-1402">Индекс каждого исходного элемента предоставляется в качестве второго аргумента для `predicate`.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1402">The index of each source element is provided as the second argument to `predicate`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a55f4-1403">В следующем примере кода показано, как использовать <xref:System.Linq.Queryable.SkipWhile%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2CSystem.Boolean%7D%7D%29> для пропуска элементов массива, если условие, зависящее от индекса элемента, имеет значение true.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1403">The following code example demonstrates how to use <xref:System.Linq.Queryable.SkipWhile%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2CSystem.Boolean%7D%7D%29> to skip elements of an array as long as a condition that depends on the element's index is true.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#89](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#89)]
 [!code-vb[System.Linq.Queryable#89](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#89)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a55f4-1404">Значение параметра <paramref name="source" /> или <paramref name="predicate" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1404"><paramref name="source" /> or <paramref name="predicate" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Sum">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a55f4-1405">Вычисляет сумму последовательности числовых значений.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1405">Computes the sum of a sequence of numeric values.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Sum">
      <MemberSignature Language="C#" Value="public static decimal Sum (this System.Linq.IQueryable&lt;decimal&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Sum(class System.Linq.IQueryable`1&lt;valuetype System.Decimal&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Decimal})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Sum (source As IQueryable(Of Decimal)) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Decimal Sum(System::Linq::IQueryable&lt;System::Decimal&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Sum : System.Linq.IQueryable&lt;decimal&gt; -&gt; decimal" Usage="System.Linq.Queryable.Sum source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;System.Decimal&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="a55f4-1406">Последовательность значений <see cref="T:System.Decimal" />, сумму которых требуется вычислить.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1406">A sequence of <see cref="T:System.Decimal" /> values to calculate the sum of.</span></span></param>
        <summary><span data-ttu-id="a55f4-1407">Вычисляет сумму последовательности значений типа <see cref="T:System.Decimal" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1407">Computes the sum of a sequence of <see cref="T:System.Decimal" /> values.</span></span></summary>
        <returns><span data-ttu-id="a55f4-1408">Сумма последовательности значений.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1408">The sum of the values in the sequence.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a55f4-1409">Метод создает объект <xref:System.Linq.Expressions.MethodCallExpression> , который представляет вызов <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Decimal%7D%29> самого себя как сконструированного универсального метода. <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Decimal%7D%29></span><span class="sxs-lookup"><span data-stu-id="a55f4-1409">The <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Decimal%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Decimal%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="a55f4-1410">Затем <xref:System.Linq.Expressions.MethodCallExpression> он передает <xref:System.Linq.IQueryProvider> методу класса, представленного `source`свойствомпараметра <xref:System.Linq.IQueryable.Provider%2A> <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> .</span><span class="sxs-lookup"><span data-stu-id="a55f4-1410">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="a55f4-1411">Поведение запроса, которое происходит в результате выполнения дерева выражения, представляющего вызов <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Decimal%7D%29> , зависит от реализации типа `source` параметра.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1411">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Decimal%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="a55f4-1412">Ожидаемое поведение заключается в том, что он возвращает сумму значений в `source`.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1412">The expected behavior is that it returns the sum of the values in `source`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a55f4-1413">В следующем примере кода показано, как использовать <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Single%7D%29> функцию для суммирования значений последовательности.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1413">The following code example demonstrates how to use <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Single%7D%29> to sum the values of a sequence.</span></span>  
  
 [!INCLUDE[sqo_diff_overload_example_elementtype](~/includes/sqo-diff-overload-example-elementtype-md.md)]  
  
 [!code-csharp[System.Linq.Queryable#120](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#120)]
 [!code-vb[System.Linq.Queryable#120](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#120)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a55f4-1414"><paramref name="source" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1414"><paramref name="source" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="a55f4-1415">Сумма больше, чем <see cref="F:System.Decimal.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1415">The sum is larger than <see cref="F:System.Decimal.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Sum">
      <MemberSignature Language="C#" Value="public static double Sum (this System.Linq.IQueryable&lt;double&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Sum(class System.Linq.IQueryable`1&lt;float64&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Double})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Sum (source As IQueryable(Of Double)) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static double Sum(System::Linq::IQueryable&lt;double&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Sum : System.Linq.IQueryable&lt;double&gt; -&gt; double" Usage="System.Linq.Queryable.Sum source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;System.Double&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="a55f4-1416">Последовательность значений <see cref="T:System.Double" />, сумму которых требуется вычислить.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1416">A sequence of <see cref="T:System.Double" /> values to calculate the sum of.</span></span></param>
        <summary><span data-ttu-id="a55f4-1417">Вычисляет сумму последовательности значений типа <see cref="T:System.Double" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1417">Computes the sum of a sequence of <see cref="T:System.Double" /> values.</span></span></summary>
        <returns><span data-ttu-id="a55f4-1418">Сумма последовательности значений.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1418">The sum of the values in the sequence.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a55f4-1419">Метод создает объект <xref:System.Linq.Expressions.MethodCallExpression> , который представляет вызов <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Double%7D%29> самого себя как сконструированного универсального метода. <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Double%7D%29></span><span class="sxs-lookup"><span data-stu-id="a55f4-1419">The <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Double%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Double%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="a55f4-1420">Затем <xref:System.Linq.Expressions.MethodCallExpression> он передает <xref:System.Linq.IQueryProvider> методу класса, представленного `source`свойствомпараметра <xref:System.Linq.IQueryable.Provider%2A> <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> .</span><span class="sxs-lookup"><span data-stu-id="a55f4-1420">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="a55f4-1421">Поведение запроса, которое происходит в результате выполнения дерева выражения, представляющего вызов <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Double%7D%29> , зависит от реализации типа `source` параметра.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1421">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Double%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="a55f4-1422">Ожидаемое поведение заключается в том, что он возвращает сумму значений в `source`.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1422">The expected behavior is that it returns the sum of the values in `source`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a55f4-1423">В следующем примере кода показано, как использовать <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Single%7D%29> функцию для суммирования значений последовательности.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1423">The following code example demonstrates how to use <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Single%7D%29> to sum the values of a sequence.</span></span>  
  
 [!INCLUDE[sqo_diff_overload_example_elementtype](~/includes/sqo-diff-overload-example-elementtype-md.md)]  
  
 [!code-csharp[System.Linq.Queryable#120](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#120)]
 [!code-vb[System.Linq.Queryable#120](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#120)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a55f4-1424">Свойство <paramref name="source" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1424"><paramref name="source" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Sum">
      <MemberSignature Language="C#" Value="public static int Sum (this System.Linq.IQueryable&lt;int&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Sum(class System.Linq.IQueryable`1&lt;int32&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Sum (source As IQueryable(Of Integer)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int Sum(System::Linq::IQueryable&lt;int&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Sum : System.Linq.IQueryable&lt;int&gt; -&gt; int" Usage="System.Linq.Queryable.Sum source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;System.Int32&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="a55f4-1425">Последовательность значений <see cref="T:System.Int32" />, сумму которых требуется вычислить.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1425">A sequence of <see cref="T:System.Int32" /> values to calculate the sum of.</span></span></param>
        <summary><span data-ttu-id="a55f4-1426">Вычисляет сумму последовательности значений типа <see cref="T:System.Int32" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1426">Computes the sum of a sequence of <see cref="T:System.Int32" /> values.</span></span></summary>
        <returns><span data-ttu-id="a55f4-1427">Сумма последовательности значений.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1427">The sum of the values in the sequence.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a55f4-1428">Метод создает объект <xref:System.Linq.Expressions.MethodCallExpression> , который представляет вызов <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Int32%7D%29> самого себя как сконструированного универсального метода. <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Int32%7D%29></span><span class="sxs-lookup"><span data-stu-id="a55f4-1428">The <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Int32%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Int32%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="a55f4-1429">Затем <xref:System.Linq.Expressions.MethodCallExpression> он передает <xref:System.Linq.IQueryProvider> методу класса, представленного `source`свойствомпараметра <xref:System.Linq.IQueryable.Provider%2A> <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> .</span><span class="sxs-lookup"><span data-stu-id="a55f4-1429">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="a55f4-1430">Поведение запроса, которое происходит в результате выполнения дерева выражения, представляющего вызов <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Int32%7D%29> , зависит от реализации типа `source` параметра.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1430">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Int32%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="a55f4-1431">Ожидаемое поведение заключается в том, что он возвращает сумму значений в `source`.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1431">The expected behavior is that it returns the sum of the values in `source`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a55f4-1432">В следующем примере кода показано, как использовать <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Single%7D%29> функцию для суммирования значений последовательности.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1432">The following code example demonstrates how to use <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Single%7D%29> to sum the values of a sequence.</span></span>  
  
 [!INCLUDE[sqo_diff_overload_example_elementtype](~/includes/sqo-diff-overload-example-elementtype-md.md)]  
  
 [!code-csharp[System.Linq.Queryable#120](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#120)]
 [!code-vb[System.Linq.Queryable#120](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#120)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a55f4-1433"><paramref name="source" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1433"><paramref name="source" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="a55f4-1434">Сумма больше, чем <see cref="F:System.Int32.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1434">The sum is larger than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Sum">
      <MemberSignature Language="C#" Value="public static long Sum (this System.Linq.IQueryable&lt;long&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 Sum(class System.Linq.IQueryable`1&lt;int64&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Int64})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Sum (source As IQueryable(Of Long)) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static long Sum(System::Linq::IQueryable&lt;long&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Sum : System.Linq.IQueryable&lt;int64&gt; -&gt; int64" Usage="System.Linq.Queryable.Sum source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;System.Int64&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="a55f4-1435">Последовательность значений <see cref="T:System.Int64" />, сумму которых требуется вычислить.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1435">A sequence of <see cref="T:System.Int64" /> values to calculate the sum of.</span></span></param>
        <summary><span data-ttu-id="a55f4-1436">Вычисляет сумму последовательности значений типа <see cref="T:System.Int64" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1436">Computes the sum of a sequence of <see cref="T:System.Int64" /> values.</span></span></summary>
        <returns><span data-ttu-id="a55f4-1437">Сумма последовательности значений.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1437">The sum of the values in the sequence.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a55f4-1438">Метод создает объект <xref:System.Linq.Expressions.MethodCallExpression> , который представляет вызов <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Int64%7D%29> самого себя как сконструированного универсального метода. <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Int64%7D%29></span><span class="sxs-lookup"><span data-stu-id="a55f4-1438">The <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Int64%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Int64%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="a55f4-1439">Затем <xref:System.Linq.Expressions.MethodCallExpression> он передает <xref:System.Linq.IQueryProvider> методу класса, представленного `source`свойствомпараметра <xref:System.Linq.IQueryable.Provider%2A> <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> .</span><span class="sxs-lookup"><span data-stu-id="a55f4-1439">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="a55f4-1440">Поведение запроса, которое происходит в результате выполнения дерева выражения, представляющего вызов <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Int64%7D%29> , зависит от реализации типа `source` параметра.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1440">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Int64%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="a55f4-1441">Ожидаемое поведение заключается в том, что он возвращает сумму значений в `source`.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1441">The expected behavior is that it returns the sum of the values in `source`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a55f4-1442">В следующем примере кода показано, как использовать <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Single%7D%29> функцию для суммирования значений последовательности.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1442">The following code example demonstrates how to use <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Single%7D%29> to sum the values of a sequence.</span></span>  
  
 [!INCLUDE[sqo_diff_overload_example_elementtype](~/includes/sqo-diff-overload-example-elementtype-md.md)]  
  
 [!code-csharp[System.Linq.Queryable#120](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#120)]
 [!code-vb[System.Linq.Queryable#120](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#120)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a55f4-1443">Свойство <paramref name="source" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1443"><paramref name="source" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="a55f4-1444">Сумма больше, чем <see cref="F:System.Int64.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1444">The sum is larger than <see cref="F:System.Int64.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Sum">
      <MemberSignature Language="C#" Value="public static Nullable&lt;decimal&gt; Sum (this System.Linq.IQueryable&lt;Nullable&lt;decimal&gt;&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;valuetype System.Decimal&gt; Sum(class System.Linq.IQueryable`1&lt;valuetype System.Nullable`1&lt;valuetype System.Decimal&gt;&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Nullable{System.Decimal}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Sum (source As IQueryable(Of Nullable(Of Decimal))) As Nullable(Of Decimal)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;System::Decimal&gt; Sum(System::Linq::IQueryable&lt;Nullable&lt;System::Decimal&gt;&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Sum : System.Linq.IQueryable&lt;Nullable&lt;decimal&gt;&gt; -&gt; Nullable&lt;decimal&gt;" Usage="System.Linq.Queryable.Sum source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Decimal&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;System.Nullable&lt;System.Decimal&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="a55f4-1445">Последовательность значений <see cref="T:System.Decimal" /> обнуляемого типа, сумму которых требуется вычислить.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1445">A sequence of nullable <see cref="T:System.Decimal" /> values to calculate the sum of.</span></span></param>
        <summary><span data-ttu-id="a55f4-1446">Вычисляет сумму последовательности значений <see cref="T:System.Decimal" /> обнуляемого типа.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1446">Computes the sum of a sequence of nullable <see cref="T:System.Decimal" /> values.</span></span></summary>
        <returns><span data-ttu-id="a55f4-1447">Сумма последовательности значений.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1447">The sum of the values in the sequence.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a55f4-1448">Метод создает объект <xref:System.Linq.Expressions.MethodCallExpression> , который представляет вызов <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Decimal%7D%7D%29> самого себя как сконструированного универсального метода. <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Decimal%7D%7D%29></span><span class="sxs-lookup"><span data-stu-id="a55f4-1448">The <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Decimal%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Decimal%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="a55f4-1449">Затем <xref:System.Linq.Expressions.MethodCallExpression> он передает <xref:System.Linq.IQueryProvider> методу класса, представленного `source`свойствомпараметра <xref:System.Linq.IQueryable.Provider%2A> <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> .</span><span class="sxs-lookup"><span data-stu-id="a55f4-1449">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="a55f4-1450">Поведение запроса, которое происходит в результате выполнения дерева выражения, представляющего вызов <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Decimal%7D%7D%29> , зависит от реализации типа `source` параметра.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1450">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Decimal%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="a55f4-1451">Ожидаемое поведение заключается в том, что он возвращает сумму значений в `source`.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1451">The expected behavior is that it returns the sum of the values in `source`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a55f4-1452">В следующем примере кода показано, как использовать <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Single%7D%7D%29> функцию для суммирования значений последовательности.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1452">The following code example demonstrates how to use <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Single%7D%7D%29> to sum the values of a sequence.</span></span>  
  
 [!INCLUDE[sqo_diff_overload_example_elementtype](~/includes/sqo-diff-overload-example-elementtype-md.md)]  
  
 [!code-csharp[System.Linq.Queryable#121](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#121)]
 [!code-vb[System.Linq.Queryable#121](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#121)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a55f4-1453">Свойство <paramref name="source" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1453"><paramref name="source" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="a55f4-1454">Сумма больше, чем <see cref="F:System.Decimal.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1454">The sum is larger than <see cref="F:System.Decimal.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Sum">
      <MemberSignature Language="C#" Value="public static Nullable&lt;double&gt; Sum (this System.Linq.IQueryable&lt;Nullable&lt;double&gt;&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float64&gt; Sum(class System.Linq.IQueryable`1&lt;valuetype System.Nullable`1&lt;float64&gt;&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Nullable{System.Double}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Sum (source As IQueryable(Of Nullable(Of Double))) As Nullable(Of Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;double&gt; Sum(System::Linq::IQueryable&lt;Nullable&lt;double&gt;&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Sum : System.Linq.IQueryable&lt;Nullable&lt;double&gt;&gt; -&gt; Nullable&lt;double&gt;" Usage="System.Linq.Queryable.Sum source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;System.Nullable&lt;System.Double&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="a55f4-1455">Последовательность значений <see cref="T:System.Double" /> обнуляемого типа, сумму которых требуется вычислить.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1455">A sequence of nullable <see cref="T:System.Double" /> values to calculate the sum of.</span></span></param>
        <summary><span data-ttu-id="a55f4-1456">Вычисляет сумму последовательности значений <see cref="T:System.Double" /> обнуляемого типа.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1456">Computes the sum of a sequence of nullable <see cref="T:System.Double" /> values.</span></span></summary>
        <returns><span data-ttu-id="a55f4-1457">Сумма последовательности значений.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1457">The sum of the values in the sequence.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a55f4-1458">Метод создает объект <xref:System.Linq.Expressions.MethodCallExpression> , который представляет вызов <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Double%7D%7D%29> самого себя как сконструированного универсального метода. <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Double%7D%7D%29></span><span class="sxs-lookup"><span data-stu-id="a55f4-1458">The <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Double%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Double%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="a55f4-1459">Затем <xref:System.Linq.Expressions.MethodCallExpression> он передает <xref:System.Linq.IQueryProvider> методу класса, представленного `source`свойствомпараметра <xref:System.Linq.IQueryable.Provider%2A> <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> .</span><span class="sxs-lookup"><span data-stu-id="a55f4-1459">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="a55f4-1460">Поведение запроса, которое происходит в результате выполнения дерева выражения, представляющего вызов <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Double%7D%7D%29> , зависит от реализации типа `source` параметра.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1460">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Double%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="a55f4-1461">Ожидаемое поведение заключается в том, что он возвращает сумму значений в `source`.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1461">The expected behavior is that it returns the sum of the values in `source`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a55f4-1462">В следующем примере кода показано, как использовать <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Single%7D%7D%29> функцию для суммирования значений последовательности.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1462">The following code example demonstrates how to use <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Single%7D%7D%29> to sum the values of a sequence.</span></span>  
  
 [!INCLUDE[sqo_diff_overload_example_elementtype](~/includes/sqo-diff-overload-example-elementtype-md.md)]  
  
 [!code-csharp[System.Linq.Queryable#121](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#121)]
 [!code-vb[System.Linq.Queryable#121](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#121)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a55f4-1463">Свойство <paramref name="source" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1463"><paramref name="source" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Sum">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; Sum (this System.Linq.IQueryable&lt;Nullable&lt;int&gt;&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; Sum(class System.Linq.IQueryable`1&lt;valuetype System.Nullable`1&lt;int32&gt;&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Nullable{System.Int32}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Sum (source As IQueryable(Of Nullable(Of Integer))) As Nullable(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;int&gt; Sum(System::Linq::IQueryable&lt;Nullable&lt;int&gt;&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Sum : System.Linq.IQueryable&lt;Nullable&lt;int&gt;&gt; -&gt; Nullable&lt;int&gt;" Usage="System.Linq.Queryable.Sum source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;System.Nullable&lt;System.Int32&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="a55f4-1464">Последовательность значений <see cref="T:System.Int32" /> обнуляемого типа, сумму которых требуется вычислить.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1464">A sequence of nullable <see cref="T:System.Int32" /> values to calculate the sum of.</span></span></param>
        <summary><span data-ttu-id="a55f4-1465">Вычисляет сумму последовательности значений <see cref="T:System.Int32" /> обнуляемого типа.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1465">Computes the sum of a sequence of nullable <see cref="T:System.Int32" /> values.</span></span></summary>
        <returns><span data-ttu-id="a55f4-1466">Сумма последовательности значений.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1466">The sum of the values in the sequence.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a55f4-1467">Метод создает объект <xref:System.Linq.Expressions.MethodCallExpression> , который представляет вызов <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Int32%7D%7D%29> самого себя как сконструированного универсального метода. <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Int32%7D%7D%29></span><span class="sxs-lookup"><span data-stu-id="a55f4-1467">The <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Int32%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Int32%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="a55f4-1468">Затем <xref:System.Linq.Expressions.MethodCallExpression> он передает <xref:System.Linq.IQueryProvider> методу класса, представленного `source`свойствомпараметра <xref:System.Linq.IQueryable.Provider%2A> <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> .</span><span class="sxs-lookup"><span data-stu-id="a55f4-1468">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="a55f4-1469">Поведение запроса, которое происходит в результате выполнения дерева выражения, представляющего вызов <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Int32%7D%7D%29> , зависит от реализации типа `source` параметра.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1469">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Int32%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="a55f4-1470">Ожидаемое поведение заключается в том, что он возвращает сумму значений в `source`.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1470">The expected behavior is that it returns the sum of the values in `source`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a55f4-1471">В следующем примере кода показано, как использовать <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Single%7D%7D%29> функцию для суммирования значений последовательности.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1471">The following code example demonstrates how to use <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Single%7D%7D%29> to sum the values of a sequence.</span></span>  
  
 [!INCLUDE[sqo_diff_overload_example_elementtype](~/includes/sqo-diff-overload-example-elementtype-md.md)]  
  
 [!code-csharp[System.Linq.Queryable#121](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#121)]
 [!code-vb[System.Linq.Queryable#121](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#121)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a55f4-1472">Свойство <paramref name="source" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1472"><paramref name="source" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="a55f4-1473">Сумма больше, чем <see cref="F:System.Int32.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1473">The sum is larger than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Sum">
      <MemberSignature Language="C#" Value="public static Nullable&lt;long&gt; Sum (this System.Linq.IQueryable&lt;Nullable&lt;long&gt;&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int64&gt; Sum(class System.Linq.IQueryable`1&lt;valuetype System.Nullable`1&lt;int64&gt;&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Nullable{System.Int64}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Sum (source As IQueryable(Of Nullable(Of Long))) As Nullable(Of Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;long&gt; Sum(System::Linq::IQueryable&lt;Nullable&lt;long&gt;&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Sum : System.Linq.IQueryable&lt;Nullable&lt;int64&gt;&gt; -&gt; Nullable&lt;int64&gt;" Usage="System.Linq.Queryable.Sum source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;System.Nullable&lt;System.Int64&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="a55f4-1474">Последовательность значений <see cref="T:System.Int64" /> обнуляемого типа, сумму которых требуется вычислить.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1474">A sequence of nullable <see cref="T:System.Int64" /> values to calculate the sum of.</span></span></param>
        <summary><span data-ttu-id="a55f4-1475">Вычисляет сумму последовательности значений <see cref="T:System.Int64" /> обнуляемого типа.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1475">Computes the sum of a sequence of nullable <see cref="T:System.Int64" /> values.</span></span></summary>
        <returns><span data-ttu-id="a55f4-1476">Сумма последовательности значений.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1476">The sum of the values in the sequence.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a55f4-1477">Метод создает объект <xref:System.Linq.Expressions.MethodCallExpression> , который представляет вызов <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Int64%7D%7D%29> самого себя как сконструированного универсального метода. <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Int64%7D%7D%29></span><span class="sxs-lookup"><span data-stu-id="a55f4-1477">The <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Int64%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Int64%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="a55f4-1478">Затем <xref:System.Linq.Expressions.MethodCallExpression> он передает <xref:System.Linq.IQueryProvider> методу класса, представленного `source`свойствомпараметра <xref:System.Linq.IQueryable.Provider%2A> <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> .</span><span class="sxs-lookup"><span data-stu-id="a55f4-1478">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="a55f4-1479">Поведение запроса, которое происходит в результате выполнения дерева выражения, представляющего вызов <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Int64%7D%7D%29> , зависит от реализации типа `source` параметра.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1479">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Int64%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="a55f4-1480">Ожидаемое поведение заключается в том, что он возвращает сумму значений в `source`.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1480">The expected behavior is that it returns the sum of the values in `source`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a55f4-1481">В следующем примере кода показано, как использовать <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Single%7D%7D%29> функцию для суммирования значений последовательности.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1481">The following code example demonstrates how to use <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Single%7D%7D%29> to sum the values of a sequence.</span></span>  
  
 [!INCLUDE[sqo_diff_overload_example_elementtype](~/includes/sqo-diff-overload-example-elementtype-md.md)]  
  
 [!code-csharp[System.Linq.Queryable#121](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#121)]
 [!code-vb[System.Linq.Queryable#121](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#121)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a55f4-1482">Свойство <paramref name="source" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1482"><paramref name="source" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="a55f4-1483">Сумма больше, чем <see cref="F:System.Int64.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1483">The sum is larger than <see cref="F:System.Int64.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Sum">
      <MemberSignature Language="C#" Value="public static Nullable&lt;float&gt; Sum (this System.Linq.IQueryable&lt;Nullable&lt;float&gt;&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float32&gt; Sum(class System.Linq.IQueryable`1&lt;valuetype System.Nullable`1&lt;float32&gt;&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Nullable{System.Single}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Sum (source As IQueryable(Of Nullable(Of Single))) As Nullable(Of Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;float&gt; Sum(System::Linq::IQueryable&lt;Nullable&lt;float&gt;&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Sum : System.Linq.IQueryable&lt;Nullable&lt;single&gt;&gt; -&gt; Nullable&lt;single&gt;" Usage="System.Linq.Queryable.Sum source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;System.Nullable&lt;System.Single&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="a55f4-1484">Последовательность значений <see cref="T:System.Single" /> обнуляемого типа, сумму которых требуется вычислить.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1484">A sequence of nullable <see cref="T:System.Single" /> values to calculate the sum of.</span></span></param>
        <summary><span data-ttu-id="a55f4-1485">Вычисляет сумму последовательности значений <see cref="T:System.Single" /> обнуляемого типа.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1485">Computes the sum of a sequence of nullable <see cref="T:System.Single" /> values.</span></span></summary>
        <returns><span data-ttu-id="a55f4-1486">Сумма последовательности значений.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1486">The sum of the values in the sequence.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a55f4-1487">Метод создает объект <xref:System.Linq.Expressions.MethodCallExpression> , который представляет вызов <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Single%7D%7D%29> самого себя как сконструированного универсального метода. <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Single%7D%7D%29></span><span class="sxs-lookup"><span data-stu-id="a55f4-1487">The <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Single%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Single%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="a55f4-1488">Затем <xref:System.Linq.Expressions.MethodCallExpression> он передает <xref:System.Linq.IQueryProvider> методу класса, представленного `source`свойствомпараметра <xref:System.Linq.IQueryable.Provider%2A> <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> .</span><span class="sxs-lookup"><span data-stu-id="a55f4-1488">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="a55f4-1489">Поведение запроса, которое происходит в результате выполнения дерева выражения, представляющего вызов <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Single%7D%7D%29> , зависит от реализации типа `source` параметра.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1489">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Single%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="a55f4-1490">Ожидаемое поведение заключается в том, что он возвращает сумму значений в `source`.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1490">The expected behavior is that it returns the sum of the values in `source`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a55f4-1491">В следующем примере кода показано, как использовать <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Single%7D%7D%29> функцию для суммирования значений последовательности.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1491">The following code example demonstrates how to use <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Nullable%7BSystem.Single%7D%7D%29> to sum the values of a sequence.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#121](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#121)]
 [!code-vb[System.Linq.Queryable#121](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#121)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a55f4-1492"><paramref name="source" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1492"><paramref name="source" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Sum">
      <MemberSignature Language="C#" Value="public static float Sum (this System.Linq.IQueryable&lt;float&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Sum(class System.Linq.IQueryable`1&lt;float32&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Single})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Sum (source As IQueryable(Of Single)) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static float Sum(System::Linq::IQueryable&lt;float&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member Sum : System.Linq.IQueryable&lt;single&gt; -&gt; single" Usage="System.Linq.Queryable.Sum source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;System.Single&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="a55f4-1493">Последовательность значений <see cref="T:System.Single" />, сумму которых требуется вычислить.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1493">A sequence of <see cref="T:System.Single" /> values to calculate the sum of.</span></span></param>
        <summary><span data-ttu-id="a55f4-1494">Вычисляет сумму последовательности значений типа <see cref="T:System.Single" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1494">Computes the sum of a sequence of <see cref="T:System.Single" /> values.</span></span></summary>
        <returns><span data-ttu-id="a55f4-1495">Сумма последовательности значений.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1495">The sum of the values in the sequence.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a55f4-1496">Метод создает объект <xref:System.Linq.Expressions.MethodCallExpression> , который представляет вызов <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Single%7D%29> самого себя как сконструированного универсального метода. <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Single%7D%29></span><span class="sxs-lookup"><span data-stu-id="a55f4-1496">The <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Single%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Single%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="a55f4-1497">Затем <xref:System.Linq.Expressions.MethodCallExpression> он передает <xref:System.Linq.IQueryProvider> методу класса, представленного `source`свойствомпараметра <xref:System.Linq.IQueryable.Provider%2A> <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> .</span><span class="sxs-lookup"><span data-stu-id="a55f4-1497">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="a55f4-1498">Поведение запроса, которое происходит в результате выполнения дерева выражения, представляющего вызов <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Single%7D%29> , зависит от реализации типа `source` параметра.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1498">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Single%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="a55f4-1499">Ожидаемое поведение заключается в том, что он возвращает сумму значений в `source`.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1499">The expected behavior is that it returns the sum of the values in `source`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a55f4-1500">В следующем примере кода показано, как использовать <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Single%7D%29> функцию для суммирования значений последовательности.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1500">The following code example demonstrates how to use <xref:System.Linq.Queryable.Sum%28System.Linq.IQueryable%7BSystem.Single%7D%29> to sum the values of a sequence.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#120](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#120)]
 [!code-vb[System.Linq.Queryable#120](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#120)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a55f4-1501"><paramref name="source" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1501"><paramref name="source" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Sum&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static decimal Sum&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,decimal&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Sum&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, valuetype System.Decimal&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Decimal}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Sum(Of TSource) (source As IQueryable(Of TSource), selector As Expression(Of Func(Of TSource, Decimal))) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Decimal Sum(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, System::Decimal&gt; ^&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Sum : System.Linq.IQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, decimal&gt;&gt; -&gt; decimal" Usage="System.Linq.Queryable.Sum (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,System.Decimal&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="a55f4-1502">Тип элементов <paramref name="source" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1502">The type of the elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="a55f4-1503">Последовательность значений типа <paramref name="TSource" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1503">A sequence of values of type <paramref name="TSource" />.</span></span></param>
        <param name="selector"><span data-ttu-id="a55f4-1504">Функция проекции, применяемая к каждому элементу.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1504">A projection function to apply to each element.</span></span></param>
        <summary><span data-ttu-id="a55f4-1505">Вычисляет сумму последовательности значений типа <see cref="T:System.Decimal" />, получаемой в результате применения функции проекции к каждому элементу входной последовательности.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1505">Computes the sum of the sequence of <see cref="T:System.Decimal" /> values that is obtained by invoking a projection function on each element of the input sequence.</span></span></summary>
        <returns><span data-ttu-id="a55f4-1506">Сумма проецированных значений.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1506">The sum of the projected values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a55f4-1507">Этот метод имеет по крайней мере один параметр <xref:System.Linq.Expressions.Expression%601> типа, аргумент типа которого является одним <xref:System.Func%602> из типов.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1507">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="a55f4-1508">Для этих параметров можно передать лямбда-выражение, которое будет скомпилировано в <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1508">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="a55f4-1509">Метод создает объект <xref:System.Linq.Expressions.MethodCallExpression> , который представляет вызов <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Decimal%7D%7D%29> самого себя как сконструированного универсального метода. <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Decimal%7D%7D%29></span><span class="sxs-lookup"><span data-stu-id="a55f4-1509">The <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Decimal%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Decimal%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="a55f4-1510">Затем <xref:System.Linq.Expressions.MethodCallExpression> он передает <xref:System.Linq.IQueryProvider> методу класса, представленного `source`свойствомпараметра <xref:System.Linq.IQueryable.Provider%2A> <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> .</span><span class="sxs-lookup"><span data-stu-id="a55f4-1510">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="a55f4-1511">Поведение запроса, которое происходит в результате выполнения дерева выражения, представляющего вызов <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Decimal%7D%7D%29> , зависит от реализации типа `source` параметра.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1511">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Decimal%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="a55f4-1512">Ожидаемое поведение заключается `selector` в том, что он вызывается для `source` каждого элемента и возвращает сумму результирующих значений.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1512">The expected behavior is that it invokes `selector` on each element of `source` and returns the sum of the resulting values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a55f4-1513">В следующем примере кода показано, как использовать <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Double%7D%7D%29> функцию для суммирования проецируемых значений последовательности.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1513">The following code example demonstrates how to use <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Double%7D%7D%29> to sum the projected values of a sequence.</span></span>  
  
 [!INCLUDE[sqo_diff_overload_example_func](~/includes/sqo-diff-overload-example-func-md.md)]  
  
 [!code-csharp[System.Linq.Queryable#98](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#98)]
 [!code-vb[System.Linq.Queryable#98](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#98)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a55f4-1514">Значение параметра <paramref name="source" /> или <paramref name="selector" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1514"><paramref name="source" /> or <paramref name="selector" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="a55f4-1515">Сумма больше значения <see cref="F:System.Decimal.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1515">The sum is larger than <see cref="F:System.Decimal.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Sum&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static double Sum&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,double&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Sum&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, float64&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Double}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Sum(Of TSource) (source As IQueryable(Of TSource), selector As Expression(Of Func(Of TSource, Double))) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static double Sum(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, double&gt; ^&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Sum : System.Linq.IQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, double&gt;&gt; -&gt; double" Usage="System.Linq.Queryable.Sum (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,System.Double&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="a55f4-1516">Тип элементов <paramref name="source" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1516">The type of the elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="a55f4-1517">Последовательность значений типа <paramref name="TSource" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1517">A sequence of values of type <paramref name="TSource" />.</span></span></param>
        <param name="selector"><span data-ttu-id="a55f4-1518">Функция проекции, применяемая к каждому элементу.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1518">A projection function to apply to each element.</span></span></param>
        <summary><span data-ttu-id="a55f4-1519">Вычисляет сумму последовательности значений типа <see cref="T:System.Double" />, получаемой в результате применения функции проекции к каждому элементу входной последовательности.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1519">Computes the sum of the sequence of <see cref="T:System.Double" /> values that is obtained by invoking a projection function on each element of the input sequence.</span></span></summary>
        <returns><span data-ttu-id="a55f4-1520">Сумма проецированных значений.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1520">The sum of the projected values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a55f4-1521">Этот метод имеет по крайней мере один параметр <xref:System.Linq.Expressions.Expression%601> типа, аргумент типа которого является одним <xref:System.Func%602> из типов.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1521">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="a55f4-1522">Для этих параметров можно передать лямбда-выражение, которое будет скомпилировано в <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1522">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="a55f4-1523">Метод создает объект <xref:System.Linq.Expressions.MethodCallExpression> , который представляет вызов <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Double%7D%7D%29> самого себя как сконструированного универсального метода. <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Double%7D%7D%29></span><span class="sxs-lookup"><span data-stu-id="a55f4-1523">The <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Double%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Double%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="a55f4-1524">Затем <xref:System.Linq.Expressions.MethodCallExpression> он передает <xref:System.Linq.IQueryProvider> методу класса, представленного `source`свойствомпараметра <xref:System.Linq.IQueryable.Provider%2A> <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> .</span><span class="sxs-lookup"><span data-stu-id="a55f4-1524">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="a55f4-1525">Поведение запроса, которое происходит в результате выполнения дерева выражения, представляющего вызов <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Double%7D%7D%29> , зависит от реализации типа `source` параметра.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1525">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Double%7D%7D%29> depends on the implementation of the type of he `source` parameter.</span></span> <span data-ttu-id="a55f4-1526">Ожидаемое поведение заключается `selector` в том, что он вызывается для `source` каждого элемента и возвращает сумму результирующих значений.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1526">The expected behavior is that it invokes `selector` on each element of `source` and returns the sum of the resulting values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a55f4-1527">В следующем примере кода показано, как использовать <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Double%7D%7D%29> функцию для суммирования проецируемых значений последовательности.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1527">The following code example demonstrates how to use <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Double%7D%7D%29> to sum the projected values of a sequence.</span></span>  
  
 [!INCLUDE[sqo_diff_overload_example_func](~/includes/sqo-diff-overload-example-func-md.md)]  
  
 [!code-csharp[System.Linq.Queryable#98](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#98)]
 [!code-vb[System.Linq.Queryable#98](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#98)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a55f4-1528">Значение параметра <paramref name="source" /> или <paramref name="selector" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1528"><paramref name="source" /> or <paramref name="selector" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Sum&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static int Sum&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,int&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Sum&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, int32&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Sum(Of TSource) (source As IQueryable(Of TSource), selector As Expression(Of Func(Of TSource, Integer))) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int Sum(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, int&gt; ^&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Sum : System.Linq.IQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, int&gt;&gt; -&gt; int" Usage="System.Linq.Queryable.Sum (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,System.Int32&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="a55f4-1529">Тип элементов <paramref name="source" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1529">The type of the elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="a55f4-1530">Последовательность значений типа <paramref name="TSource" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1530">A sequence of values of type <paramref name="TSource" />.</span></span></param>
        <param name="selector"><span data-ttu-id="a55f4-1531">Функция проекции, применяемая к каждому элементу.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1531">A projection function to apply to each element.</span></span></param>
        <summary><span data-ttu-id="a55f4-1532">Вычисляет сумму последовательности значений типа <see cref="T:System.Int32" />, получаемой в результате применения функции проекции к каждому элементу входной последовательности.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1532">Computes the sum of the sequence of <see cref="T:System.Int32" /> values that is obtained by invoking a projection function on each element of the input sequence.</span></span></summary>
        <returns><span data-ttu-id="a55f4-1533">Сумма проецированных значений.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1533">The sum of the projected values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a55f4-1534">Этот метод имеет по крайней мере один параметр <xref:System.Linq.Expressions.Expression%601> типа, аргумент типа которого является одним <xref:System.Func%602> из типов.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1534">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="a55f4-1535">Для этих параметров можно передать лямбда-выражение, которое будет скомпилировано в <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1535">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="a55f4-1536">Метод создает объект <xref:System.Linq.Expressions.MethodCallExpression> , который представляет вызов <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%7D%7D%29> самого себя как сконструированного универсального метода. <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%7D%7D%29></span><span class="sxs-lookup"><span data-stu-id="a55f4-1536">The <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="a55f4-1537">Затем <xref:System.Linq.Expressions.MethodCallExpression> он передает <xref:System.Linq.IQueryProvider> методу класса, представленного `source`свойствомпараметра <xref:System.Linq.IQueryable.Provider%2A> <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> .</span><span class="sxs-lookup"><span data-stu-id="a55f4-1537">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="a55f4-1538">Поведение запроса, которое происходит в результате выполнения дерева выражения, представляющего вызов <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%7D%7D%29> , зависит от реализации типа `source` параметра.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1538">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="a55f4-1539">Ожидаемое поведение заключается `selector` в том, что он вызывается для `source` каждого элемента и возвращает сумму результирующих значений.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1539">The expected behavior is that it invokes `selector` on each element of `source` and returns the sum of the resulting values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a55f4-1540">В следующем примере кода показано, как использовать <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Double%7D%7D%29> функцию для суммирования проецируемых значений последовательности.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1540">The following code example demonstrates how to use <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Double%7D%7D%29> to sum the projected values of a sequence.</span></span>  
  
 [!INCLUDE[sqo_diff_overload_example_func](~/includes/sqo-diff-overload-example-func-md.md)]  
  
 [!code-csharp[System.Linq.Queryable#98](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#98)]
 [!code-vb[System.Linq.Queryable#98](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#98)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a55f4-1541">Значение параметра <paramref name="source" /> или <paramref name="selector" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1541"><paramref name="source" /> or <paramref name="selector" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="a55f4-1542">Сумма больше значения <see cref="F:System.Int32.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1542">The sum is larger than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Sum&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static long Sum&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,long&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 Sum&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, int64&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int64}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Sum(Of TSource) (source As IQueryable(Of TSource), selector As Expression(Of Func(Of TSource, Long))) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static long Sum(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, long&gt; ^&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Sum : System.Linq.IQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, int64&gt;&gt; -&gt; int64" Usage="System.Linq.Queryable.Sum (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,System.Int64&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="a55f4-1543">Тип элементов <paramref name="source" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1543">The type of the elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="a55f4-1544">Последовательность значений типа <paramref name="TSource" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1544">A sequence of values of type <paramref name="TSource" />.</span></span></param>
        <param name="selector"><span data-ttu-id="a55f4-1545">Функция проекции, применяемая к каждому элементу.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1545">A projection function to apply to each element.</span></span></param>
        <summary><span data-ttu-id="a55f4-1546">Вычисляет сумму последовательности значений типа <see cref="T:System.Int64" />, получаемой в результате применения функции проекции к каждому элементу входной последовательности.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1546">Computes the sum of the sequence of <see cref="T:System.Int64" /> values that is obtained by invoking a projection function on each element of the input sequence.</span></span></summary>
        <returns><span data-ttu-id="a55f4-1547">Сумма проецированных значений.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1547">The sum of the projected values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a55f4-1548">Этот метод имеет по крайней мере один параметр <xref:System.Linq.Expressions.Expression%601> типа, аргумент типа которого является одним <xref:System.Func%602> из типов.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1548">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="a55f4-1549">Для этих параметров можно передать лямбда-выражение, которое будет скомпилировано в <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1549">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="a55f4-1550">Метод создает объект <xref:System.Linq.Expressions.MethodCallExpression> , который представляет вызов <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int64%7D%7D%29> самого себя как сконструированного универсального метода. <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int64%7D%7D%29></span><span class="sxs-lookup"><span data-stu-id="a55f4-1550">The <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int64%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int64%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="a55f4-1551">Затем <xref:System.Linq.Expressions.MethodCallExpression> он передает <xref:System.Linq.IQueryProvider> методу класса, представленного `source`свойствомпараметра <xref:System.Linq.IQueryable.Provider%2A> <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> .</span><span class="sxs-lookup"><span data-stu-id="a55f4-1551">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="a55f4-1552">Поведение запроса, которое происходит в результате выполнения дерева выражения, представляющего вызов <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int64%7D%7D%29> , зависит от реализации типа `source` параметра.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1552">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int64%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="a55f4-1553">Ожидаемое поведение заключается `selector` в том, что он вызывается для `source` каждого элемента и возвращает сумму результирующих значений.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1553">The expected behavior is that it invokes `selector` on each element of `source` and returns the sum of the resulting values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a55f4-1554">В следующем примере кода показано, как использовать <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Double%7D%7D%29> функцию для суммирования проецируемых значений последовательности.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1554">The following code example demonstrates how to use <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Double%7D%7D%29> to sum the projected values of a sequence.</span></span>  
  
 [!INCLUDE[sqo_diff_overload_example_func](~/includes/sqo-diff-overload-example-func-md.md)]  
  
 [!code-csharp[System.Linq.Queryable#98](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#98)]
 [!code-vb[System.Linq.Queryable#98](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#98)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a55f4-1555">Значение параметра <paramref name="source" /> или <paramref name="selector" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1555"><paramref name="source" /> or <paramref name="selector" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="a55f4-1556">Сумма больше значения <see cref="F:System.Int64.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1556">The sum is larger than <see cref="F:System.Int64.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Sum&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static Nullable&lt;decimal&gt; Sum&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,Nullable&lt;decimal&gt;&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;valuetype System.Decimal&gt; Sum&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, valuetype System.Nullable`1&lt;valuetype System.Decimal&gt;&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Decimal}}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Sum(Of TSource) (source As IQueryable(Of TSource), selector As Expression(Of Func(Of TSource, Nullable(Of Decimal)))) As Nullable(Of Decimal)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;System::Decimal&gt; Sum(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, Nullable&lt;System::Decimal&gt;&gt; ^&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Sum : System.Linq.IQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, Nullable&lt;decimal&gt;&gt;&gt; -&gt; Nullable&lt;decimal&gt;" Usage="System.Linq.Queryable.Sum (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Decimal&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,System.Nullable&lt;System.Decimal&gt;&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="a55f4-1557">Тип элементов <paramref name="source" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1557">The type of the elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="a55f4-1558">Последовательность значений типа <paramref name="TSource" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1558">A sequence of values of type <paramref name="TSource" />.</span></span></param>
        <param name="selector"><span data-ttu-id="a55f4-1559">Функция проекции, применяемая к каждому элементу.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1559">A projection function to apply to each element.</span></span></param>
        <summary><span data-ttu-id="a55f4-1560">Вычисляет сумму последовательности значений <see cref="T:System.Decimal" /> обнуляемого типа, получаемой в результате применения функции проекции к каждому элементу входной последовательности.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1560">Computes the sum of the sequence of nullable <see cref="T:System.Decimal" /> values that is obtained by invoking a projection function on each element of the input sequence.</span></span></summary>
        <returns><span data-ttu-id="a55f4-1561">Сумма проецированных значений.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1561">The sum of the projected values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a55f4-1562">Этот метод имеет по крайней мере один параметр <xref:System.Linq.Expressions.Expression%601> типа, аргумент типа которого является одним <xref:System.Func%602> из типов.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1562">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="a55f4-1563">Для этих параметров можно передать лямбда-выражение, которое будет скомпилировано в <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1563">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="a55f4-1564">Метод создает объект <xref:System.Linq.Expressions.MethodCallExpression> , который представляет вызов <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Decimal%7D%7D%7D%29> самого себя как сконструированного универсального метода. <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Decimal%7D%7D%7D%29></span><span class="sxs-lookup"><span data-stu-id="a55f4-1564">The <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Decimal%7D%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Decimal%7D%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="a55f4-1565">Затем <xref:System.Linq.Expressions.MethodCallExpression> он передает <xref:System.Linq.IQueryProvider> методу класса, представленного `source`свойствомпараметра <xref:System.Linq.IQueryable.Provider%2A> <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> .</span><span class="sxs-lookup"><span data-stu-id="a55f4-1565">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="a55f4-1566">Поведение запроса, которое происходит в результате выполнения дерева выражения, представляющего вызов <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Decimal%7D%7D%7D%29> , зависит от реализации типа `source` параметра.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1566">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Decimal%7D%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="a55f4-1567">Ожидаемое поведение заключается `selector` в том, что он вызывается для `source` каждого элемента и возвращает сумму результирующих значений.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1567">The expected behavior is that it invokes `selector` on each element of `source` and returns the sum of the resulting values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a55f4-1568">В следующем примере кода показано, как использовать <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Double%7D%7D%29> функцию для суммирования проецируемых значений последовательности.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1568">The following code example demonstrates how to use <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Double%7D%7D%29> to sum the projected values of a sequence.</span></span>  
  
 [!INCLUDE[sqo_diff_overload_example_func](~/includes/sqo-diff-overload-example-func-md.md)]  
  
 [!code-csharp[System.Linq.Queryable#98](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#98)]
 [!code-vb[System.Linq.Queryable#98](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#98)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a55f4-1569">Значение параметра <paramref name="source" /> или <paramref name="selector" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1569"><paramref name="source" /> or <paramref name="selector" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="a55f4-1570">Сумма больше значения <see cref="F:System.Decimal.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1570">The sum is larger than <see cref="F:System.Decimal.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Sum&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static Nullable&lt;double&gt; Sum&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,Nullable&lt;double&gt;&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float64&gt; Sum&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, valuetype System.Nullable`1&lt;float64&gt;&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Double}}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Sum(Of TSource) (source As IQueryable(Of TSource), selector As Expression(Of Func(Of TSource, Nullable(Of Double)))) As Nullable(Of Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;double&gt; Sum(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, Nullable&lt;double&gt;&gt; ^&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Sum : System.Linq.IQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, Nullable&lt;double&gt;&gt;&gt; -&gt; Nullable&lt;double&gt;" Usage="System.Linq.Queryable.Sum (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,System.Nullable&lt;System.Double&gt;&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="a55f4-1571">Тип элементов <paramref name="source" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1571">The type of the elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="a55f4-1572">Последовательность значений типа <paramref name="TSource" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1572">A sequence of values of type <paramref name="TSource" />.</span></span></param>
        <param name="selector"><span data-ttu-id="a55f4-1573">Функция проекции, применяемая к каждому элементу.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1573">A projection function to apply to each element.</span></span></param>
        <summary><span data-ttu-id="a55f4-1574">Вычисляет сумму последовательности значений <see cref="T:System.Double" /> обнуляемого типа, получаемой в результате применения функции проекции к каждому элементу входной последовательности.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1574">Computes the sum of the sequence of nullable <see cref="T:System.Double" /> values that is obtained by invoking a projection function on each element of the input sequence.</span></span></summary>
        <returns><span data-ttu-id="a55f4-1575">Сумма проецированных значений.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1575">The sum of the projected values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a55f4-1576">Этот метод имеет по крайней мере один параметр <xref:System.Linq.Expressions.Expression%601> типа, аргумент типа которого является одним <xref:System.Func%602> из типов.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1576">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="a55f4-1577">Для этих параметров можно передать лямбда-выражение, которое будет скомпилировано в <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1577">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="a55f4-1578">Метод создает объект <xref:System.Linq.Expressions.MethodCallExpression> , который представляет вызов <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Double%7D%7D%7D%29> самого себя как сконструированного универсального метода. <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Double%7D%7D%7D%29></span><span class="sxs-lookup"><span data-stu-id="a55f4-1578">The <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Double%7D%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Double%7D%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="a55f4-1579">Затем <xref:System.Linq.Expressions.MethodCallExpression> он передает <xref:System.Linq.IQueryProvider> методу класса, представленного `source`свойствомпараметра <xref:System.Linq.IQueryable.Provider%2A> <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> .</span><span class="sxs-lookup"><span data-stu-id="a55f4-1579">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="a55f4-1580">Поведение запроса, которое происходит в результате выполнения дерева выражения, представляющего вызов <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Double%7D%7D%7D%29> , зависит от реализации типа `source` параметра.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1580">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Double%7D%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="a55f4-1581">Ожидаемое поведение заключается `selector` в том, что он вызывается для `source` каждого элемента и возвращает сумму результирующих значений.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1581">The expected behavior is that it invokes `selector` on each element of `source` and returns the sum of the resulting values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a55f4-1582">В следующем примере кода показано, как использовать <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Double%7D%7D%29> функцию для суммирования проецируемых значений последовательности.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1582">The following code example demonstrates how to use <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Double%7D%7D%29> to sum the projected values of a sequence.</span></span>  
  
 [!INCLUDE[sqo_diff_overload_example_func](~/includes/sqo-diff-overload-example-func-md.md)]  
  
 [!code-csharp[System.Linq.Queryable#98](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#98)]
 [!code-vb[System.Linq.Queryable#98](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#98)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a55f4-1583">Значение параметра <paramref name="source" /> или <paramref name="selector" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1583"><paramref name="source" /> or <paramref name="selector" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Sum&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; Sum&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,Nullable&lt;int&gt;&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; Sum&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, valuetype System.Nullable`1&lt;int32&gt;&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int32}}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Sum(Of TSource) (source As IQueryable(Of TSource), selector As Expression(Of Func(Of TSource, Nullable(Of Integer)))) As Nullable(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;int&gt; Sum(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, Nullable&lt;int&gt;&gt; ^&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Sum : System.Linq.IQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, Nullable&lt;int&gt;&gt;&gt; -&gt; Nullable&lt;int&gt;" Usage="System.Linq.Queryable.Sum (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,System.Nullable&lt;System.Int32&gt;&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="a55f4-1584">Тип элементов <paramref name="source" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1584">The type of the elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="a55f4-1585">Последовательность значений типа <paramref name="TSource" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1585">A sequence of values of type <paramref name="TSource" />.</span></span></param>
        <param name="selector"><span data-ttu-id="a55f4-1586">Функция проекции, применяемая к каждому элементу.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1586">A projection function to apply to each element.</span></span></param>
        <summary><span data-ttu-id="a55f4-1587">Вычисляет сумму последовательности значений <see cref="T:System.Int32" /> обнуляемого типа, получаемой в результате применения функции проекции к каждому элементу входной последовательности.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1587">Computes the sum of the sequence of nullable <see cref="T:System.Int32" /> values that is obtained by invoking a projection function on each element of the input sequence.</span></span></summary>
        <returns><span data-ttu-id="a55f4-1588">Сумма проецированных значений.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1588">The sum of the projected values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a55f4-1589">Этот метод имеет по крайней мере один параметр <xref:System.Linq.Expressions.Expression%601> типа, аргумент типа которого является одним <xref:System.Func%602> из типов.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1589">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="a55f4-1590">Для этих параметров можно передать лямбда-выражение, которое будет скомпилировано в <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1590">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="a55f4-1591">Метод создает объект <xref:System.Linq.Expressions.MethodCallExpression> , который представляет вызов <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Int32%7D%7D%7D%29> самого себя как сконструированного универсального метода. <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Int32%7D%7D%7D%29></span><span class="sxs-lookup"><span data-stu-id="a55f4-1591">The <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Int32%7D%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Int32%7D%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="a55f4-1592">Затем <xref:System.Linq.Expressions.MethodCallExpression> он передает <xref:System.Linq.IQueryProvider> методу класса, представленного `source`свойствомпараметра <xref:System.Linq.IQueryable.Provider%2A> <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> .</span><span class="sxs-lookup"><span data-stu-id="a55f4-1592">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="a55f4-1593">Поведение запроса, которое происходит в результате выполнения дерева выражения, представляющего вызов <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Int32%7D%7D%7D%29> , зависит от реализации типа `source` параметра.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1593">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Int32%7D%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="a55f4-1594">Ожидаемое поведение заключается `selector` в том, что он вызывается для `source` каждого элемента и возвращает сумму результирующих значений.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1594">The expected behavior is that it invokes `selector` on each element of `source` and returns the sum of the resulting values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a55f4-1595">В следующем примере кода показано, как использовать <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Double%7D%7D%29> функцию для суммирования проецируемых значений последовательности.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1595">The following code example demonstrates how to use <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Double%7D%7D%29> to sum the projected values of a sequence.</span></span>  
  
 [!INCLUDE[sqo_diff_overload_example_func](~/includes/sqo-diff-overload-example-func-md.md)]  
  
 [!code-csharp[System.Linq.Queryable#98](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#98)]
 [!code-vb[System.Linq.Queryable#98](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#98)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a55f4-1596">Параметр <paramref name="source" /> или <paramref name="selector" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1596"><paramref name="source" /> or <paramref name="selector" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="a55f4-1597">Сумма больше значения <see cref="F:System.Int32.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1597">The sum is larger than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Sum&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static Nullable&lt;long&gt; Sum&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,Nullable&lt;long&gt;&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int64&gt; Sum&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, valuetype System.Nullable`1&lt;int64&gt;&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int64}}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Sum(Of TSource) (source As IQueryable(Of TSource), selector As Expression(Of Func(Of TSource, Nullable(Of Long)))) As Nullable(Of Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;long&gt; Sum(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, Nullable&lt;long&gt;&gt; ^&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Sum : System.Linq.IQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, Nullable&lt;int64&gt;&gt;&gt; -&gt; Nullable&lt;int64&gt;" Usage="System.Linq.Queryable.Sum (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,System.Nullable&lt;System.Int64&gt;&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="a55f4-1598">Тип элементов <paramref name="source" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1598">The type of the elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="a55f4-1599">Последовательность значений типа <paramref name="TSource" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1599">A sequence of values of type <paramref name="TSource" />.</span></span></param>
        <param name="selector"><span data-ttu-id="a55f4-1600">Функция проекции, применяемая к каждому элементу.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1600">A projection function to apply to each element.</span></span></param>
        <summary><span data-ttu-id="a55f4-1601">Вычисляет сумму последовательности значений <see cref="T:System.Int64" /> обнуляемого типа, получаемой в результате применения функции проекции к каждому элементу входной последовательности.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1601">Computes the sum of the sequence of nullable <see cref="T:System.Int64" /> values that is obtained by invoking a projection function on each element of the input sequence.</span></span></summary>
        <returns><span data-ttu-id="a55f4-1602">Сумма проецированных значений.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1602">The sum of the projected values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a55f4-1603">Этот метод имеет по крайней мере один параметр <xref:System.Linq.Expressions.Expression%601> типа, аргумент типа которого является одним <xref:System.Func%602> из типов.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1603">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="a55f4-1604">Для этих параметров можно передать лямбда-выражение, которое будет скомпилировано в <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1604">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="a55f4-1605">Метод создает объект <xref:System.Linq.Expressions.MethodCallExpression> , который представляет вызов <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Int64%7D%7D%7D%29> самого себя как сконструированного универсального метода. <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Int64%7D%7D%7D%29></span><span class="sxs-lookup"><span data-stu-id="a55f4-1605">The <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Int64%7D%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Int64%7D%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="a55f4-1606">Затем <xref:System.Linq.Expressions.MethodCallExpression> он передает <xref:System.Linq.IQueryProvider> методу класса, представленного `source`свойствомпараметра <xref:System.Linq.IQueryable.Provider%2A> <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> .</span><span class="sxs-lookup"><span data-stu-id="a55f4-1606">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="a55f4-1607">Поведение запроса, которое происходит в результате выполнения дерева выражения, представляющего вызов <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Int64%7D%7D%7D%29> , зависит от реализации типа `source` параметра.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1607">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Int64%7D%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="a55f4-1608">Ожидаемое поведение заключается `selector` в том, что он вызывается для `source` каждого элемента и возвращает сумму результирующих значений.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1608">The expected behavior is that it invokes `selector` on each element of `source` and returns the sum of the resulting values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a55f4-1609">В следующем примере кода показано, как использовать <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Double%7D%7D%29> функцию для суммирования проецируемых значений последовательности.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1609">The following code example demonstrates how to use <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Double%7D%7D%29> to sum the projected values of a sequence.</span></span>  
  
 [!INCLUDE[sqo_diff_overload_example_func](~/includes/sqo-diff-overload-example-func-md.md)]  
  
 [!code-csharp[System.Linq.Queryable#98](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#98)]
 [!code-vb[System.Linq.Queryable#98](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#98)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a55f4-1610">Значение параметра <paramref name="source" /> или <paramref name="selector" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1610"><paramref name="source" /> or <paramref name="selector" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="a55f4-1611">Сумма больше значения <see cref="F:System.Int64.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1611">The sum is larger than <see cref="F:System.Int64.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Sum&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static Nullable&lt;float&gt; Sum&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,Nullable&lt;float&gt;&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float32&gt; Sum&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, valuetype System.Nullable`1&lt;float32&gt;&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Single}}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Sum(Of TSource) (source As IQueryable(Of TSource), selector As Expression(Of Func(Of TSource, Nullable(Of Single)))) As Nullable(Of Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Nullable&lt;float&gt; Sum(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, Nullable&lt;float&gt;&gt; ^&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Sum : System.Linq.IQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, Nullable&lt;single&gt;&gt;&gt; -&gt; Nullable&lt;single&gt;" Usage="System.Linq.Queryable.Sum (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,System.Nullable&lt;System.Single&gt;&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="a55f4-1612">Тип элементов <paramref name="source" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1612">The type of the elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="a55f4-1613">Последовательность значений типа <paramref name="TSource" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1613">A sequence of values of type <paramref name="TSource" />.</span></span></param>
        <param name="selector"><span data-ttu-id="a55f4-1614">Функция проекции, применяемая к каждому элементу.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1614">A projection function to apply to each element.</span></span></param>
        <summary><span data-ttu-id="a55f4-1615">Вычисляет сумму последовательности значений <see cref="T:System.Single" /> обнуляемого типа, получаемой в результате применения функции проекции к каждому элементу входной последовательности.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1615">Computes the sum of the sequence of nullable <see cref="T:System.Single" /> values that is obtained by invoking a projection function on each element of the input sequence.</span></span></summary>
        <returns><span data-ttu-id="a55f4-1616">Сумма проецированных значений.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1616">The sum of the projected values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a55f4-1617">Этот метод имеет по крайней мере один параметр <xref:System.Linq.Expressions.Expression%601> типа, аргумент типа которого является одним <xref:System.Func%602> из типов.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1617">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="a55f4-1618">Для этих параметров можно передать лямбда-выражение, которое будет скомпилировано в <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1618">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="a55f4-1619">Метод создает объект <xref:System.Linq.Expressions.MethodCallExpression> , который представляет вызов <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Single%7D%7D%7D%29> самого себя как сконструированного универсального метода. <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Single%7D%7D%7D%29></span><span class="sxs-lookup"><span data-stu-id="a55f4-1619">The <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Single%7D%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Single%7D%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="a55f4-1620">Затем <xref:System.Linq.Expressions.MethodCallExpression> он передает <xref:System.Linq.IQueryProvider> методу класса, представленного `source`свойствомпараметра <xref:System.Linq.IQueryable.Provider%2A> <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> .</span><span class="sxs-lookup"><span data-stu-id="a55f4-1620">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="a55f4-1621">Поведение запроса, которое происходит в результате выполнения дерева выражения, представляющего вызов <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Single%7D%7D%7D%29> , зависит от реализации типа `source` параметра.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1621">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Nullable%7BSystem.Single%7D%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="a55f4-1622">Ожидаемое поведение заключается `selector` в том, что он вызывается для `source` каждого элемента и возвращает сумму результирующих значений.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1622">The expected behavior is that it invokes `selector` on each element of `source` and returns the sum of the resulting values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a55f4-1623">В следующем примере кода показано, как использовать <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Double%7D%7D%29> функцию для суммирования проецируемых значений последовательности.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1623">The following code example demonstrates how to use <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Double%7D%7D%29> to sum the projected values of a sequence.</span></span>  
  
 [!INCLUDE[sqo_diff_overload_example_func](~/includes/sqo-diff-overload-example-func-md.md)]  
  
 [!code-csharp[System.Linq.Queryable#98](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#98)]
 [!code-vb[System.Linq.Queryable#98](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#98)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a55f4-1624">Значение параметра <paramref name="source" /> или <paramref name="selector" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1624"><paramref name="source" /> or <paramref name="selector" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Sum&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static float Sum&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,float&gt;&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Sum&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, float32&gt;&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Single}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Sum(Of TSource) (source As IQueryable(Of TSource), selector As Expression(Of Func(Of TSource, Single))) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static float Sum(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, float&gt; ^&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Sum : System.Linq.IQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, single&gt;&gt; -&gt; single" Usage="System.Linq.Queryable.Sum (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,System.Single&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="a55f4-1625">Тип элементов <paramref name="source" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1625">The type of the elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="a55f4-1626">Последовательность значений типа <paramref name="TSource" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1626">A sequence of values of type <paramref name="TSource" />.</span></span></param>
        <param name="selector"><span data-ttu-id="a55f4-1627">Функция проекции, применяемая к каждому элементу.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1627">A projection function to apply to each element.</span></span></param>
        <summary><span data-ttu-id="a55f4-1628">Вычисляет сумму последовательности значений типа <see cref="T:System.Single" />, получаемой в результате применения функции проекции к каждому элементу входной последовательности.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1628">Computes the sum of the sequence of <see cref="T:System.Single" /> values that is obtained by invoking a projection function on each element of the input sequence.</span></span></summary>
        <returns><span data-ttu-id="a55f4-1629">Сумма проецированных значений.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1629">The sum of the projected values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a55f4-1630">Этот метод имеет по крайней мере один параметр <xref:System.Linq.Expressions.Expression%601> типа, аргумент типа которого является одним <xref:System.Func%602> из типов.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1630">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="a55f4-1631">Для этих параметров можно передать лямбда-выражение, которое будет скомпилировано в <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1631">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="a55f4-1632">Метод создает объект <xref:System.Linq.Expressions.MethodCallExpression> , который представляет вызов <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Single%7D%7D%29> самого себя как сконструированного универсального метода. <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Single%7D%7D%29></span><span class="sxs-lookup"><span data-stu-id="a55f4-1632">The <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Single%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Single%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="a55f4-1633">Затем <xref:System.Linq.Expressions.MethodCallExpression> он передает <xref:System.Linq.IQueryProvider> методу класса, представленного `source`свойствомпараметра <xref:System.Linq.IQueryable.Provider%2A> <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> .</span><span class="sxs-lookup"><span data-stu-id="a55f4-1633">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="a55f4-1634">Поведение запроса, которое происходит в результате выполнения дерева выражения, представляющего вызов <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Single%7D%7D%29> , зависит от реализации типа `source` параметра.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1634">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Single%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="a55f4-1635">Ожидаемое поведение заключается `selector` в том, что он вызывается для `source` каждого элемента и возвращает сумму результирующих значений.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1635">The expected behavior is that it invokes `selector` on each element of `source` and returns the sum of the resulting values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a55f4-1636">В следующем примере кода показано, как использовать <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Double%7D%7D%29> функцию для суммирования проецируемых значений последовательности.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1636">The following code example demonstrates how to use <xref:System.Linq.Queryable.Sum%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Double%7D%7D%29> to sum the projected values of a sequence.</span></span>  
  
 [!INCLUDE[sqo_diff_overload_example_func](~/includes/sqo-diff-overload-example-func-md.md)]  
  
 [!code-csharp[System.Linq.Queryable#98](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#98)]
 [!code-vb[System.Linq.Queryable#98](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#98)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a55f4-1637">Значение параметра <paramref name="source" /> или <paramref name="selector" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1637"><paramref name="source" /> or <paramref name="selector" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Take&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;TSource&gt; Take&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;!!TSource&gt; Take&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Take``1(System.Linq.IQueryable{``0},System.Int32)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Take(Of TSource) (source As IQueryable(Of TSource), count As Integer) As IQueryable(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;TSource&gt; ^ Take(System::Linq::IQueryable&lt;TSource&gt; ^ source, int count);" />
      <MemberSignature Language="F#" Value="static member Take : System.Linq.IQueryable&lt;'Source&gt; * int -&gt; System.Linq.IQueryable&lt;'Source&gt;" Usage="System.Linq.Queryable.Take (source, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="a55f4-1638">Тип элементов <paramref name="source" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1638">The type of the elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="a55f4-1639">Последовательность, из которой требуется возвратить элементы.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1639">The sequence to return elements from.</span></span></param>
        <param name="count"><span data-ttu-id="a55f4-1640">Число возвращаемых элементов.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1640">The number of elements to return.</span></span></param>
        <summary><span data-ttu-id="a55f4-1641">Возвращает указанное число подряд идущих элементов с начала последовательности.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1641">Returns a specified number of contiguous elements from the start of a sequence.</span></span></summary>
        <returns><span data-ttu-id="a55f4-1642">Объект <see cref="T:System.Linq.IQueryable`1" />, содержащий заданное число элементов с начала последовательности <paramref name="source" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1642">An <see cref="T:System.Linq.IQueryable`1" /> that contains the specified number of elements from the start of <paramref name="source" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a55f4-1643">Метод создает объект <xref:System.Linq.Expressions.MethodCallExpression> , который представляет вызов <xref:System.Linq.Queryable.Take%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Int32%29> самого себя как сконструированного универсального метода. <xref:System.Linq.Queryable.Take%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Int32%29></span><span class="sxs-lookup"><span data-stu-id="a55f4-1643">The <xref:System.Linq.Queryable.Take%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Int32%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Take%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Int32%29> itself as a constructed generic method.</span></span> <span data-ttu-id="a55f4-1644">Затем <xref:System.Linq.Expressions.MethodCallExpression> он передает <xref:System.Linq.IQueryProvider> методу класса, представленного `source`свойствомпараметра <xref:System.Linq.IQueryable.Provider%2A> <xref:System.Linq.IQueryProvider.CreateQuery%28System.Linq.Expressions.Expression%29> .</span><span class="sxs-lookup"><span data-stu-id="a55f4-1644">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="a55f4-1645">Поведение запроса, которое происходит в результате выполнения дерева выражения, представляющего вызов <xref:System.Linq.Queryable.Take%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Int32%29> , зависит от реализации типа `source` параметра.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1645">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Take%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Int32%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="a55f4-1646">Ожидаемое поведение заключается в том, что он `count` принимает первые элементы из `source`начала.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1646">The expected behavior is that it takes the first `count` elements from the start of `source`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a55f4-1647">В следующем примере кода показано, как использовать <xref:System.Linq.Queryable.Take%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Int32%29> для возврата элементов с начала последовательности.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1647">The following code example demonstrates how to use <xref:System.Linq.Queryable.Take%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Int32%29> to return elements from the start of a sequence.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#99](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#99)]
 [!code-vb[System.Linq.Queryable#99](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#99)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a55f4-1648">Свойство <paramref name="source" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1648"><paramref name="source" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TakeLast&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;TSource&gt; TakeLast&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;!!TSource&gt; TakeLast&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.TakeLast``1(System.Linq.IQueryable{``0},System.Int32)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function TakeLast(Of TSource) (source As IQueryable(Of TSource), count As Integer) As IQueryable(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;TSource&gt; ^ TakeLast(System::Linq::IQueryable&lt;TSource&gt; ^ source, int count);" />
      <MemberSignature Language="F#" Value="static member TakeLast : System.Linq.IQueryable&lt;'Source&gt; * int -&gt; System.Linq.IQueryable&lt;'Source&gt;" Usage="System.Linq.Queryable.TakeLast (source, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="count" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">To be added.</typeparam>
        <param name="source">To be added.</param>
        <param name="count">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TakeWhile&lt;TSource&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a55f4-1649">Возвращает элементы последовательности, пока они удовлетворяют заданному условию, и затем пропускает оставшиеся элементы.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1649">Returns elements from a sequence as long as a specified condition is true, and then skips the remaining elements.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TakeWhile&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;TSource&gt; TakeWhile&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,bool&gt;&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;!!TSource&gt; TakeWhile&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, bool&gt;&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.TakeWhile``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function TakeWhile(Of TSource) (source As IQueryable(Of TSource), predicate As Expression(Of Func(Of TSource, Boolean))) As IQueryable(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;TSource&gt; ^ TakeWhile(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, bool&gt; ^&gt; ^ predicate);" />
      <MemberSignature Language="F#" Value="static member TakeWhile : System.Linq.IQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, bool&gt;&gt; -&gt; System.Linq.IQueryable&lt;'Source&gt;" Usage="System.Linq.Queryable.TakeWhile (source, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,System.Boolean&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="a55f4-1650">Тип элементов <paramref name="source" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1650">The type of the elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="a55f4-1651">Последовательность, из которой требуется возвратить элементы.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1651">The sequence to return elements from.</span></span></param>
        <param name="predicate"><span data-ttu-id="a55f4-1652">Функция для проверки каждого элемента на соответствие условию.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1652">A function to test each element for a condition.</span></span></param>
        <summary><span data-ttu-id="a55f4-1653">Возвращает цепочку элементов последовательности, удовлетворяющих указанному условию.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1653">Returns elements from a sequence as long as a specified condition is true.</span></span></summary>
        <returns><span data-ttu-id="a55f4-1654">Объект <see cref="T:System.Linq.IQueryable`1" />, содержащий элементы входной последовательности до первого элемента, который не прошел проверку, заданную предикатом <paramref name="predicate" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1654">An <see cref="T:System.Linq.IQueryable`1" /> that contains elements from the input sequence occurring before the element at which the test specified by <paramref name="predicate" /> no longer passes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a55f4-1655">Этот метод имеет по крайней мере один параметр <xref:System.Linq.Expressions.Expression%601> типа, аргумент типа которого является одним <xref:System.Func%602> из типов.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1655">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="a55f4-1656">Для этих параметров можно передать лямбда-выражение, которое будет скомпилировано в <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1656">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="a55f4-1657">Метод создает объект <xref:System.Linq.Expressions.MethodCallExpression> , который представляет вызов <xref:System.Linq.Queryable.TakeWhile%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> самого себя как сконструированного универсального метода. <xref:System.Linq.Queryable.TakeWhile%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29></span><span class="sxs-lookup"><span data-stu-id="a55f4-1657">The <xref:System.Linq.Queryable.TakeWhile%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.TakeWhile%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="a55f4-1658">Затем <xref:System.Linq.Expressions.MethodCallExpression> он передает <xref:System.Linq.IQueryProvider> методу класса, представленного `source`свойствомпараметра <xref:System.Linq.IQueryable.Provider%2A> <xref:System.Linq.IQueryProvider.CreateQuery%28System.Linq.Expressions.Expression%29> .</span><span class="sxs-lookup"><span data-stu-id="a55f4-1658">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="a55f4-1659">Поведение запроса, которое происходит в результате выполнения дерева выражения, представляющего вызов <xref:System.Linq.Queryable.TakeWhile%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> , зависит от реализации типа `source` параметра.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1659">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.TakeWhile%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="a55f4-1660">Ожидаемое поведение заключается в том, `predicate` что оно применяется к `source` каждому элементу до тех пор, `predicate` пока `false`не будет найден элемент, для которого возвращается.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1660">The expected behavior is that it applies `predicate` to each element in `source` until it finds an element for which `predicate` returns `false`.</span></span> <span data-ttu-id="a55f4-1661">Он возвращает все элементы вплоть до этой точки.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1661">It returns all the elements up until that point.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a55f4-1662">В следующем примере кода показано, как использовать <xref:System.Linq.Queryable.TakeWhile%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> для возврата элементов из начала последовательности, если условие имеет значение true.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1662">The following code example demonstrates how to use <xref:System.Linq.Queryable.TakeWhile%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> to return elements from the start of a sequence as long as a condition is true.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#100](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#100)]
 [!code-vb[System.Linq.Queryable#100](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#100)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a55f4-1663">Значение параметра <paramref name="source" /> или <paramref name="predicate" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1663"><paramref name="source" /> or <paramref name="predicate" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TakeWhile&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;TSource&gt; TakeWhile&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,int,bool&gt;&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;!!TSource&gt; TakeWhile&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`3&lt;!!TSource, int32, bool&gt;&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.TakeWhile``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Boolean}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function TakeWhile(Of TSource) (source As IQueryable(Of TSource), predicate As Expression(Of Func(Of TSource, Integer, Boolean))) As IQueryable(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;TSource&gt; ^ TakeWhile(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, int, bool&gt; ^&gt; ^ predicate);" />
      <MemberSignature Language="F#" Value="static member TakeWhile : System.Linq.IQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, int, bool&gt;&gt; -&gt; System.Linq.IQueryable&lt;'Source&gt;" Usage="System.Linq.Queryable.TakeWhile (source, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,System.Int32,System.Boolean&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="a55f4-1664">Тип элементов <paramref name="source" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1664">The type of the elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="a55f4-1665">Последовательность, из которой требуется возвратить элементы.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1665">The sequence to return elements from.</span></span></param>
        <param name="predicate"><span data-ttu-id="a55f4-1666">Функция, применяемая к каждому элементу для проверки условия; второй параметр этой функции представляет индекс элемента в исходной последовательности.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1666">A function to test each element for a condition; the second parameter of the function represents the index of the element in the source sequence.</span></span></param>
        <summary><span data-ttu-id="a55f4-1667">Возвращает цепочку элементов последовательности, удовлетворяющих указанному условию.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1667">Returns elements from a sequence as long as a specified condition is true.</span></span> <span data-ttu-id="a55f4-1668">Индекс элемента используется в логике функции предиката.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1668">The element's index is used in the logic of the predicate function.</span></span></summary>
        <returns><span data-ttu-id="a55f4-1669">Объект <see cref="T:System.Linq.IQueryable`1" />, содержащий элементы входной последовательности до первого элемента, который не прошел проверку, заданную предикатом <paramref name="predicate" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1669">An <see cref="T:System.Linq.IQueryable`1" /> that contains elements from the input sequence occurring before the element at which the test specified by <paramref name="predicate" /> no longer passes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a55f4-1670">Этот метод имеет по крайней мере один параметр <xref:System.Linq.Expressions.Expression%601> типа, аргумент типа которого является одним <xref:System.Func%602> из типов.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1670">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="a55f4-1671">Для этих параметров можно передать лямбда-выражение, которое будет скомпилировано в <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1671">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="a55f4-1672">Метод создает объект <xref:System.Linq.Expressions.MethodCallExpression> , который представляет вызов <xref:System.Linq.Queryable.TakeWhile%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2CSystem.Boolean%7D%7D%29> самого себя как сконструированного универсального метода. <xref:System.Linq.Queryable.TakeWhile%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2CSystem.Boolean%7D%7D%29></span><span class="sxs-lookup"><span data-stu-id="a55f4-1672">The <xref:System.Linq.Queryable.TakeWhile%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2CSystem.Boolean%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.TakeWhile%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2CSystem.Boolean%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="a55f4-1673">Затем <xref:System.Linq.Expressions.MethodCallExpression> он передает <xref:System.Linq.IQueryProvider> методу класса, представленного `source`свойствомпараметра <xref:System.Linq.IQueryable.Provider%2A> <xref:System.Linq.IQueryProvider.CreateQuery%28System.Linq.Expressions.Expression%29> .</span><span class="sxs-lookup"><span data-stu-id="a55f4-1673">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="a55f4-1674">Поведение запроса, которое происходит в результате выполнения дерева выражения, представляющего вызов <xref:System.Linq.Queryable.TakeWhile%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2CSystem.Boolean%7D%7D%29> , зависит от реализации типа `source` параметра.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1674">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.TakeWhile%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2CSystem.Boolean%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="a55f4-1675">Ожидаемое поведение заключается в том, `predicate` что оно применяется к `source` каждому элементу до тех пор, `predicate` пока `false`не будет найден элемент, для которого возвращается.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1675">The expected behavior is that it applies `predicate` to each element in `source` until it finds an element for which `predicate` returns `false`.</span></span> <span data-ttu-id="a55f4-1676">Он возвращает все элементы вплоть до этой точки.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1676">It returns all the elements up until that point.</span></span> <span data-ttu-id="a55f4-1677">Индекс каждого исходного элемента предоставляется в качестве второго аргумента для `predicate`.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1677">The index of each source element is provided as the second argument to `predicate`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a55f4-1678">В следующем примере кода показано, как использовать <xref:System.Linq.Queryable.TakeWhile%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2CSystem.Boolean%7D%7D%29> для возврата элементов с начала последовательности, если условие, использующее индекс элемента, равно true.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1678">The following code example demonstrates how to use <xref:System.Linq.Queryable.TakeWhile%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2CSystem.Boolean%7D%7D%29> to return elements from the start of a sequence as long as a condition that uses the index of the element is true.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#101](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#101)]
 [!code-vb[System.Linq.Queryable#101](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#101)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a55f4-1679">Значение параметра <paramref name="source" /> или <paramref name="predicate" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1679"><paramref name="source" /> or <paramref name="predicate" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ThenBy&lt;TSource,TKey&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a55f4-1680">Выполняет дополнительное упорядочение элементов последовательности в порядке возрастания.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1680">Performs a subsequent ordering of the elements in a sequence in ascending order.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ThenBy&lt;TSource,TKey&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IOrderedQueryable&lt;TSource&gt; ThenBy&lt;TSource,TKey&gt; (this System.Linq.IOrderedQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,TKey&gt;&gt; keySelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IOrderedQueryable`1&lt;!!TSource&gt; ThenBy&lt;TSource, TKey&gt;(class System.Linq.IOrderedQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, !!TKey&gt;&gt; keySelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.ThenBy``2(System.Linq.IOrderedQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ThenBy(Of TSource, TKey) (source As IOrderedQueryable(Of TSource), keySelector As Expression(Of Func(Of TSource, TKey))) As IOrderedQueryable(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IOrderedQueryable&lt;TSource&gt; ^ ThenBy(System::Linq::IOrderedQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, TKey&gt; ^&gt; ^ keySelector);" />
      <MemberSignature Language="F#" Value="static member ThenBy : System.Linq.IOrderedQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, 'Key&gt;&gt; -&gt; System.Linq.IOrderedQueryable&lt;'Source&gt;" Usage="System.Linq.Queryable.ThenBy (source, keySelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IOrderedQueryable&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IOrderedQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,TKey&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="a55f4-1681">Тип элементов <paramref name="source" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1681">The type of the elements of <paramref name="source" />.</span></span></typeparam>
        <typeparam name="TKey"><span data-ttu-id="a55f4-1682">Тип ключа, возвращаемого функцией, заданной параметром <paramref name="keySelector" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1682">The type of the key returned by the function represented by <paramref name="keySelector" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="a55f4-1683">Объект <see cref="T:System.Linq.IOrderedQueryable`1" />, содержащий сортируемые элементы.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1683">An <see cref="T:System.Linq.IOrderedQueryable`1" /> that contains elements to sort.</span></span></param>
        <param name="keySelector"><span data-ttu-id="a55f4-1684">Функция, извлекающая ключ из каждого элемента.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1684">A function to extract a key from each element.</span></span></param>
        <summary><span data-ttu-id="a55f4-1685">Выполняет дополнительное упорядочение элементов последовательности в порядке возрастания ключа.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1685">Performs a subsequent ordering of the elements in a sequence in ascending order according to a key.</span></span></summary>
        <returns><span data-ttu-id="a55f4-1686">Объект <see cref="T:System.Linq.IOrderedQueryable`1" />, элементы которого отсортированы по ключу.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1686">An <see cref="T:System.Linq.IOrderedQueryable`1" /> whose elements are sorted according to a key.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a55f4-1687">Этот метод имеет по крайней мере один параметр <xref:System.Linq.Expressions.Expression%601> типа, аргумент типа которого является одним <xref:System.Func%602> из типов.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1687">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="a55f4-1688">Для этих параметров можно передать лямбда-выражение, которое будет скомпилировано в <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1688">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="a55f4-1689">Метод создает объект <xref:System.Linq.Expressions.MethodCallExpression> , который представляет вызов <xref:System.Linq.Queryable.ThenBy%60%602%28System.Linq.IOrderedQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> самого себя как сконструированного универсального метода. <xref:System.Linq.Queryable.ThenBy%60%602%28System.Linq.IOrderedQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29></span><span class="sxs-lookup"><span data-stu-id="a55f4-1689">The <xref:System.Linq.Queryable.ThenBy%60%602%28System.Linq.IOrderedQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.ThenBy%60%602%28System.Linq.IOrderedQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="a55f4-1690">Затем <xref:System.Linq.Expressions.MethodCallExpression> он передает <xref:System.Linq.IQueryProvider> методу класса, представленного `source`свойствомпараметра <xref:System.Linq.IQueryable.Provider%2A> <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> .</span><span class="sxs-lookup"><span data-stu-id="a55f4-1690">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span> <span data-ttu-id="a55f4-1691">Результат вызова <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> приведен к типу <xref:System.Linq.IOrderedQueryable%601> и возвращается.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1691">The result of calling <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> is cast to type <xref:System.Linq.IOrderedQueryable%601> and returned.</span></span>  
  
 <span data-ttu-id="a55f4-1692">Поведение запроса, которое происходит в результате выполнения дерева выражения, представляющего вызов <xref:System.Linq.Queryable.ThenBy%60%602%28System.Linq.IOrderedQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> , зависит от реализации типа `source` параметра.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1692">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.ThenBy%60%602%28System.Linq.IOrderedQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="a55f4-1693">Ожидаемое поведение заключается в том, что он выполняет вторичную сортировку `source` элементов на основе ключа, полученного путем `keySelector` вызова для каждого элемента `source`.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1693">The expected behavior is that it performs a secondary sort of the elements of `source` based on the key obtained by invoking `keySelector` on each element of `source`.</span></span> <span data-ttu-id="a55f4-1694">Все ранее установленные порядок сортировки сохраняются.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1694">All previously established sort orders are preserved.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a55f4-1695">В следующем примере кода показано, как использовать <xref:System.Linq.Queryable.ThenBy%60%602%28System.Linq.IOrderedQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> для выполнения дополнительного упорядочения элементов в последовательности.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1695">The following code example demonstrates how to use <xref:System.Linq.Queryable.ThenBy%60%602%28System.Linq.IOrderedQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> to perform a secondary ordering of the elements in a sequence.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#102](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#102)]
 [!code-vb[System.Linq.Queryable#102](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#102)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a55f4-1696">Значение параметра <paramref name="source" /> или <paramref name="keySelector" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1696"><paramref name="source" /> or <paramref name="keySelector" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ThenBy&lt;TSource,TKey&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IOrderedQueryable&lt;TSource&gt; ThenBy&lt;TSource,TKey&gt; (this System.Linq.IOrderedQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,TKey&gt;&gt; keySelector, System.Collections.Generic.IComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IOrderedQueryable`1&lt;!!TSource&gt; ThenBy&lt;TSource, TKey&gt;(class System.Linq.IOrderedQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, !!TKey&gt;&gt; keySelector, class System.Collections.Generic.IComparer`1&lt;!!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.ThenBy``2(System.Linq.IOrderedQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ThenBy(Of TSource, TKey) (source As IOrderedQueryable(Of TSource), keySelector As Expression(Of Func(Of TSource, TKey)), comparer As IComparer(Of TKey)) As IOrderedQueryable(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IOrderedQueryable&lt;TSource&gt; ^ ThenBy(System::Linq::IOrderedQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, TKey&gt; ^&gt; ^ keySelector, System::Collections::Generic::IComparer&lt;TKey&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member ThenBy : System.Linq.IOrderedQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, 'Key&gt;&gt; * System.Collections.Generic.IComparer&lt;'Key&gt; -&gt; System.Linq.IOrderedQueryable&lt;'Source&gt;" Usage="System.Linq.Queryable.ThenBy (source, keySelector, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IOrderedQueryable&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IOrderedQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,TKey&gt;&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="a55f4-1697">Тип элементов <paramref name="source" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1697">The type of the elements of <paramref name="source" />.</span></span></typeparam>
        <typeparam name="TKey"><span data-ttu-id="a55f4-1698">Тип ключа, возвращаемого функцией, заданной параметром <paramref name="keySelector" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1698">The type of the key returned by the function represented by <paramref name="keySelector" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="a55f4-1699">Объект <see cref="T:System.Linq.IOrderedQueryable`1" />, содержащий сортируемые элементы.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1699">An <see cref="T:System.Linq.IOrderedQueryable`1" /> that contains elements to sort.</span></span></param>
        <param name="keySelector"><span data-ttu-id="a55f4-1700">Функция, извлекающая ключ из каждого элемента.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1700">A function to extract a key from each element.</span></span></param>
        <param name="comparer"><span data-ttu-id="a55f4-1701">Компаратор <see cref="T:System.Collections.Generic.IComparer`1" />, используемый для сравнения ключей.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1701">An <see cref="T:System.Collections.Generic.IComparer`1" /> to compare keys.</span></span></param>
        <summary><span data-ttu-id="a55f4-1702">Выполняет дополнительное упорядочение элементов последовательности в порядке возрастания с использованием указанного компаратора.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1702">Performs a subsequent ordering of the elements in a sequence in ascending order by using a specified comparer.</span></span></summary>
        <returns><span data-ttu-id="a55f4-1703">Объект <see cref="T:System.Linq.IOrderedQueryable`1" />, элементы которого отсортированы по ключу.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1703">An <see cref="T:System.Linq.IOrderedQueryable`1" /> whose elements are sorted according to a key.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a55f4-1704">Этот метод имеет по крайней мере один параметр <xref:System.Linq.Expressions.Expression%601> типа, аргумент типа которого является одним <xref:System.Func%602> из типов.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1704">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="a55f4-1705">Для этих параметров можно передать лямбда-выражение, которое будет скомпилировано в <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1705">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="a55f4-1706">Метод создает объект <xref:System.Linq.Expressions.MethodCallExpression> , который представляет вызов <xref:System.Linq.Queryable.ThenBy%60%602%28System.Linq.IOrderedQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Collections.Generic.IComparer%7B%60%601%7D%29> самого себя как сконструированного универсального метода. <xref:System.Linq.Queryable.ThenBy%60%602%28System.Linq.IOrderedQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Collections.Generic.IComparer%7B%60%601%7D%29></span><span class="sxs-lookup"><span data-stu-id="a55f4-1706">The <xref:System.Linq.Queryable.ThenBy%60%602%28System.Linq.IOrderedQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Collections.Generic.IComparer%7B%60%601%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.ThenBy%60%602%28System.Linq.IOrderedQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Collections.Generic.IComparer%7B%60%601%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="a55f4-1707">Затем <xref:System.Linq.Expressions.MethodCallExpression> он передает <xref:System.Linq.IQueryProvider> методу класса, представленного `source`свойствомпараметра <xref:System.Linq.IQueryable.Provider%2A> <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> .</span><span class="sxs-lookup"><span data-stu-id="a55f4-1707">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span> <span data-ttu-id="a55f4-1708">Результат вызова <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> приведен к типу <xref:System.Linq.IOrderedQueryable%601> и возвращается.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1708">The result of calling <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> is cast to type <xref:System.Linq.IOrderedQueryable%601> and returned.</span></span>  
  
 <span data-ttu-id="a55f4-1709">Поведение запроса, которое происходит в результате выполнения дерева выражения, представляющего вызов <xref:System.Linq.Queryable.ThenBy%60%602%28System.Linq.IOrderedQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Collections.Generic.IComparer%7B%60%601%7D%29> , зависит от реализации типа `source` параметра.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1709">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.ThenBy%60%602%28System.Linq.IOrderedQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Collections.Generic.IComparer%7B%60%601%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="a55f4-1710">Ожидаемое поведение заключается в том, что он выполняет вторичную сортировку `source` элементов на основе ключа, полученного путем `keySelector` вызова для каждого элемента `source`.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1710">The expected behavior is that it performs a secondary sort of the elements of `source` based on the key obtained by invoking `keySelector` on each element of `source`.</span></span> <span data-ttu-id="a55f4-1711">Все ранее установленные порядок сортировки сохраняются.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1711">All previously established sort orders are preserved.</span></span> <span data-ttu-id="a55f4-1712">`comparer` Параметр используется для сравнения значений ключей.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1712">The `comparer` parameter is used to compare key values.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a55f4-1713">Параметр <paramref name="source" />, <paramref name="keySelector" /> или <paramref name="comparer" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1713"><paramref name="source" /> or <paramref name="keySelector" /> or <paramref name="comparer" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ThenByDescending&lt;TSource,TKey&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a55f4-1714">Выполняет дополнительное упорядочение элементов последовательности в порядке убывания.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1714">Performs a subsequent ordering of the elements in a sequence in descending order.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ThenByDescending&lt;TSource,TKey&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IOrderedQueryable&lt;TSource&gt; ThenByDescending&lt;TSource,TKey&gt; (this System.Linq.IOrderedQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,TKey&gt;&gt; keySelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IOrderedQueryable`1&lt;!!TSource&gt; ThenByDescending&lt;TSource, TKey&gt;(class System.Linq.IOrderedQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, !!TKey&gt;&gt; keySelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.ThenByDescending``2(System.Linq.IOrderedQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ThenByDescending(Of TSource, TKey) (source As IOrderedQueryable(Of TSource), keySelector As Expression(Of Func(Of TSource, TKey))) As IOrderedQueryable(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IOrderedQueryable&lt;TSource&gt; ^ ThenByDescending(System::Linq::IOrderedQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, TKey&gt; ^&gt; ^ keySelector);" />
      <MemberSignature Language="F#" Value="static member ThenByDescending : System.Linq.IOrderedQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, 'Key&gt;&gt; -&gt; System.Linq.IOrderedQueryable&lt;'Source&gt;" Usage="System.Linq.Queryable.ThenByDescending (source, keySelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IOrderedQueryable&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IOrderedQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,TKey&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="a55f4-1715">Тип элементов <paramref name="source" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1715">The type of the elements of <paramref name="source" />.</span></span></typeparam>
        <typeparam name="TKey"><span data-ttu-id="a55f4-1716">Тип ключа, возвращаемого функцией, заданной параметром <paramref name="keySelector" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1716">The type of the key returned by the function represented by <paramref name="keySelector" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="a55f4-1717">Объект <see cref="T:System.Linq.IOrderedQueryable`1" />, содержащий сортируемые элементы.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1717">An <see cref="T:System.Linq.IOrderedQueryable`1" /> that contains elements to sort.</span></span></param>
        <param name="keySelector"><span data-ttu-id="a55f4-1718">Функция, извлекающая ключ из каждого элемента.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1718">A function to extract a key from each element.</span></span></param>
        <summary><span data-ttu-id="a55f4-1719">Выполняет дополнительное упорядочение элементов последовательности в порядке убывания ключа.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1719">Performs a subsequent ordering of the elements in a sequence in descending order, according to a key.</span></span></summary>
        <returns><span data-ttu-id="a55f4-1720">Объект <see cref="T:System.Linq.IOrderedQueryable`1" />, элементы которого отсортированы по ключу в порядке убывания.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1720">An <see cref="T:System.Linq.IOrderedQueryable`1" /> whose elements are sorted in descending order according to a key.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a55f4-1721">Этот метод имеет по крайней мере один параметр <xref:System.Linq.Expressions.Expression%601> типа, аргумент типа которого является одним <xref:System.Func%602> из типов.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1721">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="a55f4-1722">Для этих параметров можно передать лямбда-выражение, которое будет скомпилировано в <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1722">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="a55f4-1723">Метод создает объект <xref:System.Linq.Expressions.MethodCallExpression> , который представляет вызов <xref:System.Linq.Queryable.ThenByDescending%60%602%28System.Linq.IOrderedQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> самого себя как сконструированного универсального метода. <xref:System.Linq.Queryable.ThenByDescending%60%602%28System.Linq.IOrderedQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29></span><span class="sxs-lookup"><span data-stu-id="a55f4-1723">The <xref:System.Linq.Queryable.ThenByDescending%60%602%28System.Linq.IOrderedQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.ThenByDescending%60%602%28System.Linq.IOrderedQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="a55f4-1724">Затем <xref:System.Linq.Expressions.MethodCallExpression> он передает <xref:System.Linq.IQueryProvider> методу класса, представленного `source`свойствомпараметра <xref:System.Linq.IQueryable.Provider%2A> <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> .</span><span class="sxs-lookup"><span data-stu-id="a55f4-1724">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span> <span data-ttu-id="a55f4-1725">Результат вызова <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> приведен к типу <xref:System.Linq.IOrderedQueryable%601> и возвращается.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1725">The result of calling <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> is cast to type <xref:System.Linq.IOrderedQueryable%601> and returned.</span></span>  
  
 <span data-ttu-id="a55f4-1726">Поведение запроса, которое происходит в результате выполнения дерева выражения, представляющего вызов <xref:System.Linq.Queryable.ThenByDescending%60%602%28System.Linq.IOrderedQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> , зависит от реализации типа `source` параметра.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1726">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.ThenByDescending%60%602%28System.Linq.IOrderedQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="a55f4-1727">Ожидаемое поведение заключается в том, что он выполняет вторичную сортировку `source` элементов в убывающем порядке на основе ключа, полученного путем `keySelector` вызова для каждого элемента `source`.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1727">The expected behavior is that it performs a secondary sort of the elements of `source` in descending order, based on the key obtained by invoking `keySelector` on each element of `source`.</span></span> <span data-ttu-id="a55f4-1728">Все ранее установленные порядок сортировки сохраняются.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1728">All previously established sort orders are preserved.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a55f4-1729">Параметр <paramref name="source" /> или <paramref name="keySelector" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1729"><paramref name="source" /> or <paramref name="keySelector" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ThenByDescending&lt;TSource,TKey&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IOrderedQueryable&lt;TSource&gt; ThenByDescending&lt;TSource,TKey&gt; (this System.Linq.IOrderedQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,TKey&gt;&gt; keySelector, System.Collections.Generic.IComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IOrderedQueryable`1&lt;!!TSource&gt; ThenByDescending&lt;TSource, TKey&gt;(class System.Linq.IOrderedQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, !!TKey&gt;&gt; keySelector, class System.Collections.Generic.IComparer`1&lt;!!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.ThenByDescending``2(System.Linq.IOrderedQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ThenByDescending(Of TSource, TKey) (source As IOrderedQueryable(Of TSource), keySelector As Expression(Of Func(Of TSource, TKey)), comparer As IComparer(Of TKey)) As IOrderedQueryable(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IOrderedQueryable&lt;TSource&gt; ^ ThenByDescending(System::Linq::IOrderedQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, TKey&gt; ^&gt; ^ keySelector, System::Collections::Generic::IComparer&lt;TKey&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member ThenByDescending : System.Linq.IOrderedQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, 'Key&gt;&gt; * System.Collections.Generic.IComparer&lt;'Key&gt; -&gt; System.Linq.IOrderedQueryable&lt;'Source&gt;" Usage="System.Linq.Queryable.ThenByDescending (source, keySelector, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IOrderedQueryable&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IOrderedQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,TKey&gt;&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="a55f4-1730">Тип элементов <paramref name="source" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1730">The type of the elements of <paramref name="source" />.</span></span></typeparam>
        <typeparam name="TKey"><span data-ttu-id="a55f4-1731">Тип ключа, возвращаемого функцией <paramref name="keySelector" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1731">The type of the key that is returned by the <paramref name="keySelector" /> function.</span></span></typeparam>
        <param name="source"><span data-ttu-id="a55f4-1732">Объект <see cref="T:System.Linq.IOrderedQueryable`1" />, содержащий сортируемые элементы.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1732">An <see cref="T:System.Linq.IOrderedQueryable`1" /> that contains elements to sort.</span></span></param>
        <param name="keySelector"><span data-ttu-id="a55f4-1733">Функция, извлекающая ключ из каждого элемента.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1733">A function to extract a key from each element.</span></span></param>
        <param name="comparer"><span data-ttu-id="a55f4-1734">Компаратор <see cref="T:System.Collections.Generic.IComparer`1" />, используемый для сравнения ключей.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1734">An <see cref="T:System.Collections.Generic.IComparer`1" /> to compare keys.</span></span></param>
        <summary><span data-ttu-id="a55f4-1735">Выполняет дополнительное упорядочение элементов последовательности в порядке убывания с использованием указанного компаратора.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1735">Performs a subsequent ordering of the elements in a sequence in descending order by using a specified comparer.</span></span></summary>
        <returns><span data-ttu-id="a55f4-1736">Коллекция, элементы которой отсортированы по ключу в порядке убывания.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1736">A collection whose elements are sorted in descending order according to a key.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a55f4-1737">Этот метод имеет по крайней мере один параметр <xref:System.Linq.Expressions.Expression%601> типа, аргумент типа которого является одним <xref:System.Func%602> из типов.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1737">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="a55f4-1738">Для этих параметров можно передать лямбда-выражение, которое будет скомпилировано в <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1738">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="a55f4-1739">Метод создает объект <xref:System.Linq.Expressions.MethodCallExpression> , который представляет вызов <xref:System.Linq.Queryable.ThenBy%60%602%28System.Linq.IOrderedQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Collections.Generic.IComparer%7B%60%601%7D%29> самого себя как сконструированного универсального метода. <xref:System.Linq.Queryable.ThenBy%60%602%28System.Linq.IOrderedQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Collections.Generic.IComparer%7B%60%601%7D%29></span><span class="sxs-lookup"><span data-stu-id="a55f4-1739">The <xref:System.Linq.Queryable.ThenBy%60%602%28System.Linq.IOrderedQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Collections.Generic.IComparer%7B%60%601%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.ThenBy%60%602%28System.Linq.IOrderedQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Collections.Generic.IComparer%7B%60%601%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="a55f4-1740">Затем <xref:System.Linq.Expressions.MethodCallExpression> он передает <xref:System.Linq.IQueryProvider> методу класса, представленного `source`свойствомпараметра <xref:System.Linq.IQueryable.Provider%2A> <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> .</span><span class="sxs-lookup"><span data-stu-id="a55f4-1740">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span> <span data-ttu-id="a55f4-1741">Результат вызова <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> приведен к типу <xref:System.Linq.IOrderedQueryable%601> и возвращается.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1741">The result of calling <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> is cast to type <xref:System.Linq.IOrderedQueryable%601> and returned.</span></span>  
  
 <span data-ttu-id="a55f4-1742">Поведение запроса, которое происходит в результате выполнения дерева выражения, представляющего вызов <xref:System.Linq.Queryable.ThenBy%60%602%28System.Linq.IOrderedQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Collections.Generic.IComparer%7B%60%601%7D%29> , зависит от реализации типа `source` параметра.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1742">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.ThenBy%60%602%28System.Linq.IOrderedQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Collections.Generic.IComparer%7B%60%601%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="a55f4-1743">Ожидаемое поведение заключается в том, что он выполняет вторичную сортировку `source` элементов в убывающем порядке на основе ключа, полученного путем `keySelector` вызова для каждого элемента `source`.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1743">The expected behavior is that it performs a secondary sort of the elements of `source` in descending order, based on the key obtained by invoking `keySelector` on each element of `source`.</span></span> <span data-ttu-id="a55f4-1744">Все ранее установленные порядок сортировки сохраняются.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1744">All previously established sort orders are preserved.</span></span> <span data-ttu-id="a55f4-1745">`comparer` Параметр используется для сравнения значений ключей.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1745">The `comparer` parameter is used to compare key values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a55f4-1746">В следующем примере кода показано, как использовать <xref:System.Linq.Queryable.ThenByDescending%60%602%28System.Linq.IOrderedQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Collections.Generic.IComparer%7B%60%601%7D%29> для выполнения дополнительного упорядочения элементов в последовательности в порядке убывания с помощью пользовательского компаратора.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1746">The following code example demonstrates how to use <xref:System.Linq.Queryable.ThenByDescending%60%602%28System.Linq.IOrderedQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2C%60%601%7D%7D%2CSystem.Collections.Generic.IComparer%7B%60%601%7D%29> to perform a secondary ordering of the elements in a sequence in descending order by using a custom comparer.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#103](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#103)]
 [!code-vb[System.Linq.Queryable#103](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#103)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a55f4-1747">Параметр <paramref name="source" />, <paramref name="keySelector" /> или <paramref name="comparer" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1747"><paramref name="source" /> or <paramref name="keySelector" /> or <paramref name="comparer" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Union&lt;TSource&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a55f4-1748">Находит объединение множеств, представленных двумя последовательностями.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1748">Produces the set union of two sequences.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Union&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;TSource&gt; Union&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source1, System.Collections.Generic.IEnumerable&lt;TSource&gt; source2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;!!TSource&gt; Union&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source1, class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; source2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Union``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Union(Of TSource) (source1 As IQueryable(Of TSource), source2 As IEnumerable(Of TSource)) As IQueryable(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;TSource&gt; ^ Union(System::Linq::IQueryable&lt;TSource&gt; ^ source1, System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ source2);" />
      <MemberSignature Language="F#" Value="static member Union : System.Linq.IQueryable&lt;'Source&gt; * seq&lt;'Source&gt; -&gt; System.Linq.IQueryable&lt;'Source&gt;" Usage="System.Linq.Queryable.Union (source1, source2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source1" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="source2" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="a55f4-1749">Тип элементов входных последовательностей.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1749">The type of the elements of the input sequences.</span></span></typeparam>
        <param name="source1"><span data-ttu-id="a55f4-1750">Последовательность, различающиеся элементы которой образуют первое множество для операции объединения.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1750">A sequence whose distinct elements form the first set for the union operation.</span></span></param>
        <param name="source2"><span data-ttu-id="a55f4-1751">Последовательность, различающиеся элементы которой образуют второе множество для операции объединения.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1751">A sequence whose distinct elements form the second set for the union operation.</span></span></param>
        <summary><span data-ttu-id="a55f4-1752">Находит объединение множеств, представленных двумя последовательностями, используя для сравнения значений компаратор проверки на равенство по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1752">Produces the set union of two sequences by using the default equality comparer.</span></span></summary>
        <returns><span data-ttu-id="a55f4-1753">Объект <see cref="T:System.Linq.IQueryable`1" />, который содержит элементы, имеющиеся в обеих входных последовательностях, кроме дубликатов.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1753">An <see cref="T:System.Linq.IQueryable`1" /> that contains the elements from both input sequences, excluding duplicates.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a55f4-1754">Метод создает объект <xref:System.Linq.Expressions.MethodCallExpression> , который представляет вызов <xref:System.Linq.Queryable.Union%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%29> самого себя как сконструированного универсального метода. <xref:System.Linq.Queryable.Union%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%29></span><span class="sxs-lookup"><span data-stu-id="a55f4-1754">The <xref:System.Linq.Queryable.Union%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Union%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="a55f4-1755">Затем <xref:System.Linq.Expressions.MethodCallExpression> он передает <xref:System.Linq.IQueryProvider> методу класса, представленного `source1`свойствомпараметра <xref:System.Linq.IQueryable.Provider%2A> <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> .</span><span class="sxs-lookup"><span data-stu-id="a55f4-1755">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source1` parameter.</span></span>  
  
 <span data-ttu-id="a55f4-1756">Поведение запроса, которое происходит в результате выполнения дерева выражения, представляющего вызов <xref:System.Linq.Queryable.Union%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%29> , зависит от реализации типа `source1` параметра.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1756">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Union%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%29> depends on the implementation of the type of the `source1` parameter.</span></span> <span data-ttu-id="a55f4-1757">Ожидаемое поведение заключается в том, что объединение наборов элементов в `source1` и `source2` возвращается.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1757">The expected behavior is that the set union of the elements in `source1` and `source2` is returned.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a55f4-1758">В следующем примере кода показано, как использовать <xref:System.Linq.Queryable.Union%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%29> для получения объединения множеств двух последовательностей.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1758">The following code example demonstrates how to use <xref:System.Linq.Queryable.Union%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%29> to obtain the set union of two sequences.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#109](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#109)]
 [!code-vb[System.Linq.Queryable#109](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#109)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a55f4-1759">Значение параметра <paramref name="source1" /> или <paramref name="source2" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1759"><paramref name="source1" /> or <paramref name="source2" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Union&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;TSource&gt; Union&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source1, System.Collections.Generic.IEnumerable&lt;TSource&gt; source2, System.Collections.Generic.IEqualityComparer&lt;TSource&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;!!TSource&gt; Union&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source1, class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; source2, class System.Collections.Generic.IEqualityComparer`1&lt;!!TSource&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Union``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Union(Of TSource) (source1 As IQueryable(Of TSource), source2 As IEnumerable(Of TSource), comparer As IEqualityComparer(Of TSource)) As IQueryable(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;TSource&gt; ^ Union(System::Linq::IQueryable&lt;TSource&gt; ^ source1, System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ source2, System::Collections::Generic::IEqualityComparer&lt;TSource&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member Union : System.Linq.IQueryable&lt;'Source&gt; * seq&lt;'Source&gt; * System.Collections.Generic.IEqualityComparer&lt;'Source&gt; -&gt; System.Linq.IQueryable&lt;'Source&gt;" Usage="System.Linq.Queryable.Union (source1, source2, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source1" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="source2" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TSource&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="a55f4-1760">Тип элементов входных последовательностей.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1760">The type of the elements of the input sequences.</span></span></typeparam>
        <param name="source1"><span data-ttu-id="a55f4-1761">Последовательность, различающиеся элементы которой образуют первое множество для операции объединения.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1761">A sequence whose distinct elements form the first set for the union operation.</span></span></param>
        <param name="source2"><span data-ttu-id="a55f4-1762">Последовательность, различающиеся элементы которой образуют второе множество для операции объединения.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1762">A sequence whose distinct elements form the second set for the union operation.</span></span></param>
        <param name="comparer"><span data-ttu-id="a55f4-1763">Компаратор <see cref="T:System.Collections.Generic.IEqualityComparer`1" />, используемый для сравнения значений.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1763">An <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> to compare values.</span></span></param>
        <summary><span data-ttu-id="a55f4-1764">Находит объединение множеств, представленных двумя последовательностями, используя указанный компаратор <see cref="T:System.Collections.Generic.IEqualityComparer`1" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1764">Produces the set union of two sequences by using a specified <see cref="T:System.Collections.Generic.IEqualityComparer`1" />.</span></span></summary>
        <returns><span data-ttu-id="a55f4-1765">Объект <see cref="T:System.Linq.IQueryable`1" />, который содержит элементы, имеющиеся в обеих входных последовательностях, кроме дубликатов.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1765">An <see cref="T:System.Linq.IQueryable`1" /> that contains the elements from both input sequences, excluding duplicates.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a55f4-1766">Метод создает объект <xref:System.Linq.Expressions.MethodCallExpression> , который представляет вызов <xref:System.Linq.Queryable.Union%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%600%7D%29> самого себя как сконструированного универсального метода. <xref:System.Linq.Queryable.Union%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%600%7D%29></span><span class="sxs-lookup"><span data-stu-id="a55f4-1766">The <xref:System.Linq.Queryable.Union%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%600%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Union%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%600%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="a55f4-1767">Затем <xref:System.Linq.Expressions.MethodCallExpression> он передает <xref:System.Linq.IQueryProvider> методу класса, представленного `source1`свойствомпараметра <xref:System.Linq.IQueryable.Provider%2A> <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> .</span><span class="sxs-lookup"><span data-stu-id="a55f4-1767">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source1` parameter.</span></span>  
  
 <span data-ttu-id="a55f4-1768">Поведение запроса, которое происходит в результате выполнения дерева выражения, представляющего вызов <xref:System.Linq.Queryable.Union%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%600%7D%29> , зависит от реализации типа `source1` параметра.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1768">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Union%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Collections.Generic.IEqualityComparer%7B%60%600%7D%29> depends on the implementation of the type of the `source1` parameter.</span></span> <span data-ttu-id="a55f4-1769">Ожидаемое поведение заключается в том, что объединение наборов элементов в `source1` и `source2` возвращается.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1769">The expected behavior is that the set union of the elements in `source1` and `source2` is returned.</span></span> <span data-ttu-id="a55f4-1770">`comparer` Параметр используется для сравнения значений.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1770">The `comparer` parameter is used to compare values.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a55f4-1771">Значение параметра <paramref name="source1" /> или <paramref name="source2" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1771"><paramref name="source1" /> or <paramref name="source2" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Where&lt;TSource&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a55f4-1772">Выполняет фильтрацию последовательности значений на основе заданного предиката.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1772">Filters a sequence of values based on a predicate.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Where&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;TSource&gt; Where&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,bool&gt;&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;!!TSource&gt; Where&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TSource, bool&gt;&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Where``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Where(Of TSource) (source As IQueryable(Of TSource), predicate As Expression(Of Func(Of TSource, Boolean))) As IQueryable(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;TSource&gt; ^ Where(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, bool&gt; ^&gt; ^ predicate);" />
      <MemberSignature Language="F#" Value="static member Where : System.Linq.IQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, bool&gt;&gt; -&gt; System.Linq.IQueryable&lt;'Source&gt;" Usage="System.Linq.Queryable.Where (source, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,System.Boolean&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="a55f4-1773">Тип элементов <paramref name="source" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1773">The type of the elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="a55f4-1774">Объект <see cref="T:System.Linq.IQueryable`1" />, подлежащий фильтрации.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1774">An <see cref="T:System.Linq.IQueryable`1" /> to filter.</span></span></param>
        <param name="predicate"><span data-ttu-id="a55f4-1775">Функция для проверки каждого элемента на соответствие условию.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1775">A function to test each element for a condition.</span></span></param>
        <summary><span data-ttu-id="a55f4-1776">Выполняет фильтрацию последовательности значений на основе заданного предиката.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1776">Filters a sequence of values based on a predicate.</span></span></summary>
        <returns><span data-ttu-id="a55f4-1777">Объект <see cref="T:System.Linq.IQueryable`1" />, содержащий элементы входной последовательности, которые удовлетворяют условию, заданному предикатом <paramref name="predicate" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1777">An <see cref="T:System.Linq.IQueryable`1" /> that contains elements from the input sequence that satisfy the condition specified by <paramref name="predicate" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a55f4-1778">Этот метод имеет по крайней мере один параметр <xref:System.Linq.Expressions.Expression%601> типа, аргумент типа которого является одним <xref:System.Func%602> из типов.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1778">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="a55f4-1779">Для этих параметров можно передать лямбда-выражение, которое будет скомпилировано в <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1779">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="a55f4-1780">Метод создает объект <xref:System.Linq.Expressions.MethodCallExpression> , который представляет вызов <xref:System.Linq.Queryable.Where%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> самого себя как сконструированного универсального метода. <xref:System.Linq.Queryable.Where%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29></span><span class="sxs-lookup"><span data-stu-id="a55f4-1780">The <xref:System.Linq.Queryable.Where%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Where%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="a55f4-1781">Затем <xref:System.Linq.Expressions.MethodCallExpression> он передает <xref:System.Linq.IQueryProvider> методу класса, представленного `source`свойствомпараметра <xref:System.Linq.IQueryable.Provider%2A> <xref:System.Linq.IQueryProvider.CreateQuery%28System.Linq.Expressions.Expression%29> .</span><span class="sxs-lookup"><span data-stu-id="a55f4-1781">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="a55f4-1782">Поведение запроса, которое происходит в результате выполнения дерева выражения, представляющего вызов <xref:System.Linq.Queryable.Where%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> , зависит от реализации типа `source` параметра.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1782">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Where%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="a55f4-1783">Ожидаемое поведение заключается в том, что он возвращает `source` элементы из, которые соответствуют условию, заданному параметром. `predicate`</span><span class="sxs-lookup"><span data-stu-id="a55f4-1783">The expected behavior is that it returns the elements from `source` that satisfy the condition specified by `predicate`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a55f4-1784">В следующем примере кода показано, как использовать <xref:System.Linq.Queryable.Where%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> для фильтрации последовательности.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1784">The following code example demonstrates how to use <xref:System.Linq.Queryable.Where%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Boolean%7D%7D%29> to filter a sequence.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#110](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#110)]
 [!code-vb[System.Linq.Queryable#110](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#110)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a55f4-1785">Значение параметра <paramref name="source" /> или <paramref name="predicate" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1785"><paramref name="source" /> or <paramref name="predicate" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Where&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;TSource&gt; Where&lt;TSource&gt; (this System.Linq.IQueryable&lt;TSource&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;TSource,int,bool&gt;&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;!!TSource&gt; Where&lt;TSource&gt;(class System.Linq.IQueryable`1&lt;!!TSource&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`3&lt;!!TSource, int32, bool&gt;&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Where``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Boolean}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Where(Of TSource) (source As IQueryable(Of TSource), predicate As Expression(Of Func(Of TSource, Integer, Boolean))) As IQueryable(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;TSource&gt; ^ Where(System::Linq::IQueryable&lt;TSource&gt; ^ source, System::Linq::Expressions::Expression&lt;Func&lt;TSource, int, bool&gt; ^&gt; ^ predicate);" />
      <MemberSignature Language="F#" Value="static member Where : System.Linq.IQueryable&lt;'Source&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'Source, int, bool&gt;&gt; -&gt; System.Linq.IQueryable&lt;'Source&gt;" Usage="System.Linq.Queryable.Where (source, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TSource,System.Int32,System.Boolean&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="a55f4-1786">Тип элементов <paramref name="source" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1786">The type of the elements of <paramref name="source" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="a55f4-1787">Объект <see cref="T:System.Linq.IQueryable`1" />, подлежащий фильтрации.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1787">An <see cref="T:System.Linq.IQueryable`1" /> to filter.</span></span></param>
        <param name="predicate"><span data-ttu-id="a55f4-1788">Функция, применяемая к каждому элементу для проверки условия; второй параметр этой функции представляет индекс элемента в исходной последовательности.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1788">A function to test each element for a condition; the second parameter of the function represents the index of the element in the source sequence.</span></span></param>
        <summary><span data-ttu-id="a55f4-1789">Выполняет фильтрацию последовательности значений на основе заданного предиката.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1789">Filters a sequence of values based on a predicate.</span></span> <span data-ttu-id="a55f4-1790">Индекс каждого элемента используется в логике функции предиката.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1790">Each element's index is used in the logic of the predicate function.</span></span></summary>
        <returns><span data-ttu-id="a55f4-1791">Объект <see cref="T:System.Linq.IQueryable`1" />, содержащий элементы входной последовательности, которые удовлетворяют условию, заданному предикатом <paramref name="predicate" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1791">An <see cref="T:System.Linq.IQueryable`1" /> that contains elements from the input sequence that satisfy the condition specified by <paramref name="predicate" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a55f4-1792">Этот метод имеет по крайней мере один параметр <xref:System.Linq.Expressions.Expression%601> типа, аргумент типа которого является одним <xref:System.Func%602> из типов.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1792">This method has at least one parameter of type <xref:System.Linq.Expressions.Expression%601> whose type argument is one of the <xref:System.Func%602> types.</span></span> <span data-ttu-id="a55f4-1793">Для этих параметров можно передать лямбда-выражение, которое будет скомпилировано в <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1793">For these parameters, you can pass in a lambda expression and it will be compiled to an <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="a55f4-1794">Метод создает объект <xref:System.Linq.Expressions.MethodCallExpression> , который представляет вызов <xref:System.Linq.Queryable.Where%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2CSystem.Boolean%7D%7D%29> самого себя как сконструированного универсального метода. <xref:System.Linq.Queryable.Where%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2CSystem.Boolean%7D%7D%29></span><span class="sxs-lookup"><span data-stu-id="a55f4-1794">The <xref:System.Linq.Queryable.Where%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2CSystem.Boolean%7D%7D%29> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Where%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2CSystem.Boolean%7D%7D%29> itself as a constructed generic method.</span></span> <span data-ttu-id="a55f4-1795">Затем <xref:System.Linq.Expressions.MethodCallExpression> он передает <xref:System.Linq.IQueryProvider> методу класса, представленного `source`свойствомпараметра <xref:System.Linq.IQueryable.Provider%2A> <xref:System.Linq.IQueryProvider.CreateQuery%28System.Linq.Expressions.Expression%29> .</span><span class="sxs-lookup"><span data-stu-id="a55f4-1795">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source` parameter.</span></span>  
  
 <span data-ttu-id="a55f4-1796">Поведение запроса, которое происходит в результате выполнения дерева выражения, представляющего вызов <xref:System.Linq.Queryable.Where%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2CSystem.Boolean%7D%7D%29> , зависит от реализации типа `source` параметра.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1796">The query behavior that occurs as a result of executing an expression tree that represents calling <xref:System.Linq.Queryable.Where%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2CSystem.Boolean%7D%7D%29> depends on the implementation of the type of the `source` parameter.</span></span> <span data-ttu-id="a55f4-1797">Ожидаемое поведение заключается в том, что он возвращает `source` элементы из, которые соответствуют условию, заданному параметром. `predicate`</span><span class="sxs-lookup"><span data-stu-id="a55f4-1797">The expected behavior is that it returns the elements from `source` that satisfy the condition specified by `predicate`.</span></span> <span data-ttu-id="a55f4-1798">Индекс каждого исходного элемента предоставляется в качестве второго аргумента для `predicate`.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1798">The index of each source element is provided as the second argument to `predicate`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a55f4-1799">В следующем примере кода показано, как использовать <xref:System.Linq.Queryable.Where%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2CSystem.Boolean%7D%7D%29> для фильтрации последовательности на основе предиката, включающего индекс каждого элемента.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1799">The following code example demonstrates how to use <xref:System.Linq.Queryable.Where%60%601%28System.Linq.IQueryable%7B%60%600%7D%2CSystem.Linq.Expressions.Expression%7BSystem.Func%7B%60%600%2CSystem.Int32%2CSystem.Boolean%7D%7D%29> to filter a sequence based on a predicate that incorporates the index of each element.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#111](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#111)]
 [!code-vb[System.Linq.Queryable#111](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#111)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a55f4-1800">Значение параметра <paramref name="source" /> или <paramref name="predicate" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1800"><paramref name="source" /> or <paramref name="predicate" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Zip&lt;TFirst,TSecond&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;ValueTuple&lt;TFirst,TSecond&gt;&gt; Zip&lt;TFirst,TSecond&gt; (this System.Linq.IQueryable&lt;TFirst&gt; source1, System.Collections.Generic.IEnumerable&lt;TSecond&gt; source2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;valuetype System.ValueTuple`2&lt;!!TFirst, !!TSecond&gt;&gt; Zip&lt;TFirst, TSecond&gt;(class System.Linq.IQueryable`1&lt;!!TFirst&gt; source1, class System.Collections.Generic.IEnumerable`1&lt;!!TSecond&gt; source2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Zip``2(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Zip(Of TFirst, TSecond) (source1 As IQueryable(Of TFirst), source2 As IEnumerable(Of TSecond)) As IQueryable(Of ValueTuple(Of TFirst, TSecond))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TFirst, typename TSecond&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;ValueTuple&lt;TFirst, TSecond&gt;&gt; ^ Zip(System::Linq::IQueryable&lt;TFirst&gt; ^ source1, System::Collections::Generic::IEnumerable&lt;TSecond&gt; ^ source2);" />
      <MemberSignature Language="F#" Value="static member Zip : System.Linq.IQueryable&lt;'First&gt; * seq&lt;'Second&gt; -&gt; System.Linq.IQueryable&lt;ValueTuple&lt;'First, 'Second&gt;&gt;" Usage="System.Linq.Queryable.Zip (source1, source2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;System.ValueTuple&lt;TFirst,TSecond&gt;&gt;</ReturnType>
        <Attributes>
          <Attribute FrameworkAlternate="netcore-3.0">
            <AttributeName>System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "First", "Second" })</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TFirst" />
        <TypeParameter Name="TSecond" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source1" Type="System.Linq.IQueryable&lt;TFirst&gt;" RefType="this" Index="0" FrameworkAlternate="netcore-3.0" />
        <Parameter Name="source2" Type="System.Collections.Generic.IEnumerable&lt;TSecond&gt;" Index="1" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <typeparam name="TFirst"><span data-ttu-id="a55f4-1801">Тип элементов первой входной последовательности.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1801">The type of the elements of the first input sequence.</span></span></typeparam>
        <typeparam name="TSecond"><span data-ttu-id="a55f4-1802">Тип элементов второй входной последовательности.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1802">The type of the elements of the second input sequence.</span></span></typeparam>
        <param name="source1"><span data-ttu-id="a55f4-1803">Первая последовательность для объединения.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1803">The first sequence to merge.</span></span></param>
        <param name="source2"><span data-ttu-id="a55f4-1804">Вторая последовательность для объединения.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1804">The second sequence to merge.</span></span></param>
        <summary><span data-ttu-id="a55f4-1805">Создает последовательность кортежей с элементами из двух указанных последовательностей.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1805">Produces a sequence of tuples with elements from the two specified sequences.</span></span></summary>
        <returns><span data-ttu-id="a55f4-1806">Последовательность кортежей с элементами, взятыми из первой и второй последовательностей в указанном порядке.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1806">A sequence of tuples with elements taken from the first and second sequences, in that order.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Zip&lt;TFirst,TSecond,TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;TResult&gt; Zip&lt;TFirst,TSecond,TResult&gt; (this System.Linq.IQueryable&lt;TFirst&gt; source1, System.Collections.Generic.IEnumerable&lt;TSecond&gt; source2, System.Linq.Expressions.Expression&lt;Func&lt;TFirst,TSecond,TResult&gt;&gt; resultSelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;!!TResult&gt; Zip&lt;TFirst, TSecond, TResult&gt;(class System.Linq.IQueryable`1&lt;!!TFirst&gt; source1, class System.Collections.Generic.IEnumerable`1&lt;!!TSecond&gt; source2, class System.Linq.Expressions.Expression`1&lt;class System.Func`3&lt;!!TFirst, !!TSecond, !!TResult&gt;&gt; resultSelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Queryable.Zip``3(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Zip(Of TFirst, TSecond, TResult) (source1 As IQueryable(Of TFirst), source2 As IEnumerable(Of TSecond), resultSelector As Expression(Of Func(Of TFirst, TSecond, TResult))) As IQueryable(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TFirst, typename TSecond, typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Linq::IQueryable&lt;TResult&gt; ^ Zip(System::Linq::IQueryable&lt;TFirst&gt; ^ source1, System::Collections::Generic::IEnumerable&lt;TSecond&gt; ^ source2, System::Linq::Expressions::Expression&lt;Func&lt;TFirst, TSecond, TResult&gt; ^&gt; ^ resultSelector);" />
      <MemberSignature Language="F#" Value="static member Zip : System.Linq.IQueryable&lt;'First&gt; * seq&lt;'Second&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'First, 'Second, 'Result&gt;&gt; -&gt; System.Linq.IQueryable&lt;'Result&gt;" Usage="System.Linq.Queryable.Zip (source1, source2, resultSelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Queryable</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TFirst" />
        <TypeParameter Name="TSecond" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source1" Type="System.Linq.IQueryable&lt;TFirst&gt;" RefType="this" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="source2" Type="System.Collections.Generic.IEnumerable&lt;TSecond&gt;" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="resultSelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TFirst,TSecond,TResult&gt;&gt;" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <typeparam name="TFirst"><span data-ttu-id="a55f4-1807">Тип элементов первой входной последовательности.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1807">The type of the elements of the first input sequence.</span></span></typeparam>
        <typeparam name="TSecond"><span data-ttu-id="a55f4-1808">Тип элементов второй входной последовательности.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1808">The type of the elements of the second input sequence.</span></span></typeparam>
        <typeparam name="TResult"><span data-ttu-id="a55f4-1809">Тип элементов результирующей последовательности.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1809">The type of the elements of the result sequence.</span></span></typeparam>
        <param name="source1"><span data-ttu-id="a55f4-1810">Первая последовательность для объединения.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1810">The first sequence to merge.</span></span></param>
        <param name="source2"><span data-ttu-id="a55f4-1811">Вторая последовательность для объединения.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1811">The second sequence to merge.</span></span></param>
        <param name="resultSelector"><span data-ttu-id="a55f4-1812">Функция, которая определяет, как объединить элементы двух последовательностей.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1812">A function that specifies how to merge the elements from the two sequences.</span></span></param>
        <summary><span data-ttu-id="a55f4-1813">Объединяет две последовательности, используя указанную функцию предиката.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1813">Merges two sequences by using the specified predicate function.</span></span></summary>
        <returns><span data-ttu-id="a55f4-1814">Объект <see cref="T:System.Linq.IQueryable`1" />, содержащий объединенные элементы двух входных последовательностей.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1814">An <see cref="T:System.Linq.IQueryable`1" /> that contains merged elements of two input sequences.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a55f4-1815">Метод создает объект <xref:System.Linq.Expressions.MethodCallExpression> , который представляет вызов <xref:System.Linq.Queryable.Zip%2A> самого себя как сконструированного универсального метода. <xref:System.Linq.Queryable.Zip%2A></span><span class="sxs-lookup"><span data-stu-id="a55f4-1815">The <xref:System.Linq.Queryable.Zip%2A> method generates a <xref:System.Linq.Expressions.MethodCallExpression> that represents calling <xref:System.Linq.Queryable.Zip%2A> itself as a constructed generic method.</span></span> <span data-ttu-id="a55f4-1816">Затем <xref:System.Linq.Expressions.MethodCallExpression> он передает <xref:System.Linq.IQueryProvider> методу класса, представленного `source1`свойствомпараметра <xref:System.Linq.IQueryable.Provider%2A> <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> .</span><span class="sxs-lookup"><span data-stu-id="a55f4-1816">It then passes the <xref:System.Linq.Expressions.MethodCallExpression> to the <xref:System.Linq.IQueryProvider.CreateQuery%60%601%28System.Linq.Expressions.Expression%29> method of the <xref:System.Linq.IQueryProvider> represented by the <xref:System.Linq.IQueryable.Provider%2A> property of the `source1` parameter.</span></span>  
  
 <span data-ttu-id="a55f4-1817">Метод объединяет каждый элемент первой последовательности с элементом, имеющим тот же индекс во второй последовательности.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1817">The method merges each element of the first sequence with an element that has the same index in the second sequence.</span></span> <span data-ttu-id="a55f4-1818">Если последовательности не имеют одинакового количества элементов, метод выполняет слияние последовательностей, пока не достигнет конца одного из них.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1818">If the sequences do not have the same number of elements, the method merges sequences until it reaches the end of one of them.</span></span> <span data-ttu-id="a55f4-1819">Например, если одна последовательность содержит три элемента, а вторая — четыре, то результирующая последовательность будет содержать только три элемента.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1819">For example, if one sequence has three elements and the other one has four, the resulting sequence will have only three elements.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a55f4-1820">В следующем примере кода показано, как использовать <xref:System.Linq.Queryable.Zip%2A> метод для слияния двух последовательностей.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1820">The following code example demonstrates how to use the <xref:System.Linq.Queryable.Zip%2A> method to merge two sequences.</span></span>  
  
 [!code-csharp[System.Linq.Queryable#200](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Queryable/CS/queryable.cs#200)]
 [!code-vb[System.Linq.Queryable#200](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Queryable/VB/queryable.vb#200)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a55f4-1821">Значение параметра <paramref name="source1" /> или <paramref name="source2" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a55f4-1821"><paramref name="source1" /> or <paramref name="source2" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
