<Type Name="IList" FullName="System.Collections.IList">
  <Metadata><Meta Name="ms.openlocfilehash" Value="dcb0120b8e4035b79955ac0218f3ffa48655dd55" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70642676" /></Metadata><TypeSignature Language="C#" Value="public interface IList : System.Collections.ICollection" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IList implements class System.Collections.ICollection, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Collections.IList" />
  <TypeSignature Language="VB.NET" Value="Public Interface IList&#xA;Implements ICollection" />
  <TypeSignature Language="C++ CLI" Value="public interface class IList : System::Collections::ICollection" />
  <TypeSignature Language="F#" Value="type IList = interface&#xA;    interface ICollection&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="2f560-101">Представляет неуниверсальную коллекцию объектов с индивидуальным доступом, осуществляемым при помощи индекса.</span><span class="sxs-lookup"><span data-stu-id="2f560-101">Represents a non-generic collection of objects that can be individually accessed by index.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f560-102"><xref:System.Collections.IList>является потомком <xref:System.Collections.ICollection> интерфейса и является базовым интерфейсом всех списков, не являющихся универсальными.</span><span class="sxs-lookup"><span data-stu-id="2f560-102"><xref:System.Collections.IList> is a descendant of the <xref:System.Collections.ICollection> interface and is the base interface of all non-generic lists.</span></span> <span data-ttu-id="2f560-103"><xref:System.Collections.IList>реализации делятся на три категории: только чтение, фиксированный размер и переменный размер.</span><span class="sxs-lookup"><span data-stu-id="2f560-103"><xref:System.Collections.IList> implementations fall into three categories: read-only, fixed-size, and variable-size.</span></span> <span data-ttu-id="2f560-104">Изменение только <xref:System.Collections.IList> для чтения невозможно.</span><span class="sxs-lookup"><span data-stu-id="2f560-104">A read-only <xref:System.Collections.IList> cannot be modified.</span></span> <span data-ttu-id="2f560-105">Фиксированный размер <xref:System.Collections.IList> не допускает добавления или удаления элементов, но позволяет изменять существующие элементы.</span><span class="sxs-lookup"><span data-stu-id="2f560-105">A fixed-size <xref:System.Collections.IList> does not allow the addition or removal of elements, but it allows the modification of existing elements.</span></span> <span data-ttu-id="2f560-106">Переменный размер <xref:System.Collections.IList> позволяет добавлять, удалять и изменять элементы.</span><span class="sxs-lookup"><span data-stu-id="2f560-106">A variable-size <xref:System.Collections.IList> allows the addition, removal, and modification of elements.</span></span>  
  
 <span data-ttu-id="2f560-107">Общие сведения об универсальной версии этого интерфейса см <xref:System.Collections.Generic.IList%601?displayProperty=nameWithType>. в разделе.</span><span class="sxs-lookup"><span data-stu-id="2f560-107">For the generic version of this interface, see <xref:System.Collections.Generic.IList%601?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2f560-108">В следующем примере демонстрируется реализация <xref:System.Collections.IList> интерфейса для создания простого списка с фиксированным размером.</span><span class="sxs-lookup"><span data-stu-id="2f560-108">The following example demonstrates the implementation of the <xref:System.Collections.IList> interface to create a simple list, fixed-size list.</span></span>  
  
 [!code-csharp[System.Collections.IList_Implementation#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.IList_Implementation/cs/Program.cs#01)]
 [!code-vb[System.Collections.IList_Implementation#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.IList_Implementation/vb/Program.vb#01)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Collections.ArrayList" />
    <altmember cref="T:System.Collections.ICollection" />
    <altmember cref="T:System.Collections.Generic.IList`1" />
  </Docs>
  <Members>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public int Add (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Add(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.IList.Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (value As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Add(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member Add : obj -&gt; int" Usage="iList.Add value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="2f560-109">Объект, добавляемый в коллекцию <see cref="T:System.Collections.IList" />.</span><span class="sxs-lookup"><span data-stu-id="2f560-109">The object to add to the <see cref="T:System.Collections.IList" />.</span></span></param>
        <summary><span data-ttu-id="2f560-110">Добавляет элемент в коллекцию <see cref="T:System.Collections.IList" />.</span><span class="sxs-lookup"><span data-stu-id="2f560-110">Adds an item to the <see cref="T:System.Collections.IList" />.</span></span></summary>
        <returns><span data-ttu-id="2f560-111">Позиция, в которую вставлен новый элемент, или значение -1, если элемент не вставлен в коллекцию.</span><span class="sxs-lookup"><span data-stu-id="2f560-111">The position into which the new element was inserted, or -1 to indicate that the item was not inserted into the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2f560-112">В следующем примере демонстрируется реализация <xref:System.Collections.IList> интерфейса для создания простого списка фиксированного размера.</span><span class="sxs-lookup"><span data-stu-id="2f560-112">The following example demonstrates the implementation of the <xref:System.Collections.IList> interface to create a simple, fixed-size list.</span></span> <span data-ttu-id="2f560-113">Этот код является частью более крупного примера для <xref:System.Collections.IList> интерфейса.</span><span class="sxs-lookup"><span data-stu-id="2f560-113">This code is part of a larger example for the <xref:System.Collections.IList> interface.</span></span>  
  
 [!code-csharp[System.Collections.IList_Implementation#02](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.IList_Implementation/cs/Program.cs#02)]
 [!code-vb[System.Collections.IList_Implementation#02](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.IList_Implementation/vb/Program.vb#02)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="2f560-114">Объект <see cref="T:System.Collections.IList" /> доступен только для чтения.</span><span class="sxs-lookup"><span data-stu-id="2f560-114">The <see cref="T:System.Collections.IList" /> is read-only.</span></span>  
  
<span data-ttu-id="2f560-115">-или-</span><span class="sxs-lookup"><span data-stu-id="2f560-115">-or-</span></span> 
<span data-ttu-id="2f560-116"><see cref="T:System.Collections.IList" /> имеет фиксированный размер.</span><span class="sxs-lookup"><span data-stu-id="2f560-116">The <see cref="T:System.Collections.IList" /> has a fixed size.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.IList.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit" Usage="iList.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2f560-117">Удаляет все элементы из коллекции <see cref="T:System.Collections.IList" />.</span><span class="sxs-lookup"><span data-stu-id="2f560-117">Removes all items from the <see cref="T:System.Collections.IList" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f560-118">Реализации этого метода могут различаться в зависимости от того, как <xref:System.Collections.ICollection.Count%2A?displayProperty=nameWithType> они обрабатывали объект и емкость коллекции.</span><span class="sxs-lookup"><span data-stu-id="2f560-118">Implementations of this method can vary in how they handle the <xref:System.Collections.ICollection.Count%2A?displayProperty=nameWithType> and the capacity of a collection.</span></span> <span data-ttu-id="2f560-119">Как правило, счетчик имеет значение 0, а ссылки на другие объекты из элементов коллекции также освобождаются.</span><span class="sxs-lookup"><span data-stu-id="2f560-119">Typically, the count is set to zero, and references to other objects from elements of the collection are also released.</span></span> <span data-ttu-id="2f560-120">Емкость может быть равна нулю или значению по умолчанию, либо она может остаться без изменений.</span><span class="sxs-lookup"><span data-stu-id="2f560-120">The capacity can be set to zero or a default value, or it can remain unchanged.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2f560-121">В следующем примере демонстрируется реализация <xref:System.Collections.IList> интерфейса для создания простого списка с фиксированным размером.</span><span class="sxs-lookup"><span data-stu-id="2f560-121">The following example demonstrates the implementation of the <xref:System.Collections.IList> interface to create a simple list, fixed-size list.</span></span> <span data-ttu-id="2f560-122">Этот код является частью более крупного примера для <xref:System.Collections.IList> интерфейса.</span><span class="sxs-lookup"><span data-stu-id="2f560-122">This code is part of a larger example for the <xref:System.Collections.IList> interface.</span></span>  
  
 [!code-csharp[System.Collections.IList_Implementation#02](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.IList_Implementation/cs/Program.cs#02)]
 [!code-vb[System.Collections.IList_Implementation#02](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.IList_Implementation/vb/Program.vb#02)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="2f560-123">Объект <see cref="T:System.Collections.IList" /> доступен только для чтения.</span><span class="sxs-lookup"><span data-stu-id="2f560-123">The <see cref="T:System.Collections.IList" /> is read-only.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.IList.Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member Contains : obj -&gt; bool" Usage="iList.Contains value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="2f560-124">Объект для поиска в <see cref="T:System.Collections.IList" />.</span><span class="sxs-lookup"><span data-stu-id="2f560-124">The object to locate in the <see cref="T:System.Collections.IList" />.</span></span></param>
        <summary><span data-ttu-id="2f560-125">Определяет, содержит ли коллекция <see cref="T:System.Collections.IList" /> указанное значение.</span><span class="sxs-lookup"><span data-stu-id="2f560-125">Determines whether the <see cref="T:System.Collections.IList" /> contains a specific value.</span></span></summary>
        <returns><span data-ttu-id="2f560-126">Значение <see langword="true" />, если объект <see cref="T:System.Object" /> найден в <see cref="T:System.Collections.IList" />; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2f560-126"><see langword="true" /> if the <see cref="T:System.Object" /> is found in the <see cref="T:System.Collections.IList" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f560-127">Начиная с .NET Framework 2,0, этот метод использует объекты <xref:System.Object.Equals%2A> и <xref:System.IComparable.CompareTo%2A> методы `item` коллекции для определения того, существует ли элемент.</span><span class="sxs-lookup"><span data-stu-id="2f560-127">Starting with the .NET Framework 2.0, this method uses the collection's objects' <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether item exists.</span></span> <span data-ttu-id="2f560-128">В более ранних версиях .NET Framework это определение было выполнено с помощью <xref:System.Object.Equals%2A> методов `item` и <xref:System.IComparable.CompareTo%2A> параметра для объектов в коллекции.</span><span class="sxs-lookup"><span data-stu-id="2f560-128">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2f560-129">В следующем примере демонстрируется реализация <xref:System.Collections.IList> интерфейса для создания простого списка с фиксированным размером.</span><span class="sxs-lookup"><span data-stu-id="2f560-129">The following example demonstrates the implementation of the <xref:System.Collections.IList> interface to create a simple list, fixed-size list.</span></span> <span data-ttu-id="2f560-130">Этот код является частью более крупного примера для <xref:System.Collections.IList> интерфейса.</span><span class="sxs-lookup"><span data-stu-id="2f560-130">This code is part of a larger example for the <xref:System.Collections.IList> interface.</span></span>  
  
 [!code-csharp[System.Collections.IList_Implementation#02](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.IList_Implementation/cs/Program.cs#02)]
 [!code-vb[System.Collections.IList_Implementation#02](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.IList_Implementation/vb/Program.vb#02)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.IList.IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (value As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member IndexOf : obj -&gt; int" Usage="iList.IndexOf value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="2f560-131">Объект для поиска в <see cref="T:System.Collections.IList" />.</span><span class="sxs-lookup"><span data-stu-id="2f560-131">The object to locate in the <see cref="T:System.Collections.IList" />.</span></span></param>
        <summary><span data-ttu-id="2f560-132">Определяет индекс заданного элемента коллекции <see cref="T:System.Collections.IList" />.</span><span class="sxs-lookup"><span data-stu-id="2f560-132">Determines the index of a specific item in the <see cref="T:System.Collections.IList" />.</span></span></summary>
        <returns><span data-ttu-id="2f560-133">Индекс <paramref name="value" />, если он найден в списке; в противном случае — значение -1.</span><span class="sxs-lookup"><span data-stu-id="2f560-133">The index of <paramref name="value" /> if found in the list; otherwise, -1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f560-134">Начиная с .NET Framework 2,0, этот метод использует объекты <xref:System.Object.Equals%2A> и <xref:System.IComparable.CompareTo%2A> методы `item` коллекции для определения того, существует ли элемент.</span><span class="sxs-lookup"><span data-stu-id="2f560-134">Starting with the .NET Framework 2.0, this method uses the collection's objects' <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether item exists.</span></span> <span data-ttu-id="2f560-135">В более ранних версиях .NET Framework это определение было выполнено с помощью <xref:System.Object.Equals%2A> методов `item` и <xref:System.IComparable.CompareTo%2A> параметра для объектов в коллекции.</span><span class="sxs-lookup"><span data-stu-id="2f560-135">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2f560-136">В следующем примере демонстрируется реализация <xref:System.Collections.IList> интерфейса для создания простого списка с фиксированным размером.</span><span class="sxs-lookup"><span data-stu-id="2f560-136">The following example demonstrates the implementation of the <xref:System.Collections.IList> interface to create a simple list, fixed-size list.</span></span> <span data-ttu-id="2f560-137">Этот код является частью более крупного примера для <xref:System.Collections.IList> интерфейса.</span><span class="sxs-lookup"><span data-stu-id="2f560-137">This code is part of a larger example for the <xref:System.Collections.IList> interface.</span></span>  
  
 [!code-csharp[System.Collections.IList_Implementation#02](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.IList_Implementation/cs/Program.cs#02)]
 [!code-vb[System.Collections.IList_Implementation#02](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.IList_Implementation/vb/Program.vb#02)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Insert(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.IList.Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (index As Integer, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(int index, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member Insert : int * obj -&gt; unit" Usage="iList.Insert (index, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="2f560-138">Отсчитываемый от нуля индекс, по которому следует вставить элемент <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="2f560-138">The zero-based index at which <paramref name="value" /> should be inserted.</span></span></param>
        <param name="value"><span data-ttu-id="2f560-139">Объект, вставляемый в список <see cref="T:System.Collections.IList" />.</span><span class="sxs-lookup"><span data-stu-id="2f560-139">The object to insert into the <see cref="T:System.Collections.IList" />.</span></span></param>
        <summary><span data-ttu-id="2f560-140">Вставляет элемент в список <see cref="T:System.Collections.IList" /> по указанному индексу.</span><span class="sxs-lookup"><span data-stu-id="2f560-140">Inserts an item to the <see cref="T:System.Collections.IList" /> at the specified index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f560-141">Если значение параметра `index` равно количеству элементов в списке <xref:System.Collections.IList>, элемент `value` добавляется в конец списка.</span><span class="sxs-lookup"><span data-stu-id="2f560-141">If `index` equals the number of items in the <xref:System.Collections.IList>, then `value` is appended to the end.</span></span>  
  
 <span data-ttu-id="2f560-142">В коллекциях с непрерывным набором элементов, таких как списки, чтобы выделить место новому элементу, следующие за точкой вставки элементы перемещаются вниз.</span><span class="sxs-lookup"><span data-stu-id="2f560-142">In collections of contiguous elements, such as lists, the elements that follow the insertion point move down to accommodate the new element.</span></span> <span data-ttu-id="2f560-143">Если коллекция индексируется, индексы перемещенных элементов также обновляются.</span><span class="sxs-lookup"><span data-stu-id="2f560-143">If the collection is indexed, the indexes of the elements that are moved are also updated.</span></span> <span data-ttu-id="2f560-144">Такое поведение не реализуется в коллекциях, в которых элементы логически сгруппированы, например в хэш-таблицах.</span><span class="sxs-lookup"><span data-stu-id="2f560-144">This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2f560-145">В следующем примере демонстрируется реализация <xref:System.Collections.IList> интерфейса для создания простого списка с фиксированным размером.</span><span class="sxs-lookup"><span data-stu-id="2f560-145">The following example demonstrates the implementation of the <xref:System.Collections.IList> interface to create a simple list, fixed-size list.</span></span> <span data-ttu-id="2f560-146">Этот код является частью более крупного примера для <xref:System.Collections.IList> интерфейса.</span><span class="sxs-lookup"><span data-stu-id="2f560-146">This code is part of a larger example for the <xref:System.Collections.IList> interface.</span></span>  
  
 [!code-csharp[System.Collections.IList_Implementation#02](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.IList_Implementation/cs/Program.cs#02)]
 [!code-vb[System.Collections.IList_Implementation#02](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.IList_Implementation/vb/Program.vb#02)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="2f560-147"><paramref name="index" /> не является допустимым индексом в <see cref="T:System.Collections.IList" />.</span><span class="sxs-lookup"><span data-stu-id="2f560-147"><paramref name="index" /> is not a valid index in the <see cref="T:System.Collections.IList" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="2f560-148">Объект <see cref="T:System.Collections.IList" /> доступен только для чтения.</span><span class="sxs-lookup"><span data-stu-id="2f560-148">The <see cref="T:System.Collections.IList" /> is read-only.</span></span>  
  
<span data-ttu-id="2f560-149">- или -</span><span class="sxs-lookup"><span data-stu-id="2f560-149">-or-</span></span> 
<span data-ttu-id="2f560-150"><see cref="T:System.Collections.IList" /> имеет фиксированный размер.</span><span class="sxs-lookup"><span data-stu-id="2f560-150">The <see cref="T:System.Collections.IList" /> has a fixed size.</span></span></exception>
        <exception cref="T:System.NullReferenceException"><span data-ttu-id="2f560-151">Параметр <paramref name="value" /> является ссылкой со значением null в списке <see cref="T:System.Collections.IList" />.</span><span class="sxs-lookup"><span data-stu-id="2f560-151"><paramref name="value" /> is null reference in the <see cref="T:System.Collections.IList" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsFixedSize">
      <MemberSignature Language="C#" Value="public bool IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Collections.IList.IsFixedSize" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsFixedSize As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsFixedSize { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsFixedSize : bool" Usage="System.Collections.IList.IsFixedSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2f560-152">Получает значение, указывающее, имеет ли список <see cref="T:System.Collections.IList" /> фиксированный размер.</span><span class="sxs-lookup"><span data-stu-id="2f560-152">Gets a value indicating whether the <see cref="T:System.Collections.IList" /> has a fixed size.</span></span></summary>
        <value><span data-ttu-id="2f560-153">Значение <see langword="true" />, если словарь <see cref="T:System.Collections.IList" /> имеет фиксированный размер; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2f560-153"><see langword="true" /> if the <see cref="T:System.Collections.IList" /> has a fixed size; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f560-154">В созданной коллекции фиксированного размера запрещается добавлять или удалять элементы, но разрешается изменять существующие элементы.</span><span class="sxs-lookup"><span data-stu-id="2f560-154">A collection with a fixed size does not allow the addition or removal of elements after the collection is created, but it allows the modification of existing elements.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2f560-155">В следующем примере демонстрируется реализация <xref:System.Collections.IList> интерфейса для создания простого списка с фиксированным размером.</span><span class="sxs-lookup"><span data-stu-id="2f560-155">The following example demonstrates the implementation of the <xref:System.Collections.IList> interface to create a simple list, fixed-size list.</span></span> <span data-ttu-id="2f560-156">Этот код является частью более крупного примера для <xref:System.Collections.IList> интерфейса.</span><span class="sxs-lookup"><span data-stu-id="2f560-156">This code is part of a larger example for the <xref:System.Collections.IList> interface.</span></span>  
  
 [!code-csharp[System.Collections.IList_Implementation#02](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.IList_Implementation/cs/Program.cs#02)]
 [!code-vb[System.Collections.IList_Implementation#02](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.IList_Implementation/vb/Program.vb#02)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Collections.IList.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Collections.IList.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2f560-157">Получает значение, указывающее, является ли объект <see cref="T:System.Collections.IList" /> доступным только для чтения.</span><span class="sxs-lookup"><span data-stu-id="2f560-157">Gets a value indicating whether the <see cref="T:System.Collections.IList" /> is read-only.</span></span></summary>
        <value><span data-ttu-id="2f560-158">Значение <see langword="true" />, если интерфейс <see cref="T:System.Collections.IList" /> доступен только для чтения; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2f560-158"><see langword="true" /> if the <see cref="T:System.Collections.IList" /> is read-only; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f560-159">После создания коллекции, доступной только для чтения, не разрешается добавление элементов в коллекцию, их изменение или удаление.</span><span class="sxs-lookup"><span data-stu-id="2f560-159">A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2f560-160">В следующем примере демонстрируется реализация <xref:System.Collections.IList> интерфейса для создания простого списка с фиксированным размером.</span><span class="sxs-lookup"><span data-stu-id="2f560-160">The following example demonstrates the implementation of the <xref:System.Collections.IList> interface to create a simple list, fixed-size list.</span></span> <span data-ttu-id="2f560-161">Этот код является частью более крупного примера для <xref:System.Collections.IList> интерфейса.</span><span class="sxs-lookup"><span data-stu-id="2f560-161">This code is part of a larger example for the <xref:System.Collections.IList> interface.</span></span>  
  
 [!code-csharp[System.Collections.IList_Implementation#02](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.IList_Implementation/cs/Program.cs#02)]
 [!code-vb[System.Collections.IList_Implementation#02](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.IList_Implementation/vb/Program.vb#02)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Collections.IList.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(index As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : obj with get, set" Usage="System.Collections.IList.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="2f560-162">Отсчитываемый от нуля индекс элемента, который требуется возвратить или задать.</span><span class="sxs-lookup"><span data-stu-id="2f560-162">The zero-based index of the element to get or set.</span></span></param>
        <summary><span data-ttu-id="2f560-163">Возвращает или задает элемент по указанному индексу.</span><span class="sxs-lookup"><span data-stu-id="2f560-163">Gets or sets the element at the specified index.</span></span></summary>
        <value><span data-ttu-id="2f560-164">Элемент с заданным индексом.</span><span class="sxs-lookup"><span data-stu-id="2f560-164">The element at the specified index.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f560-165">Это свойство предоставляет доступ к указанному элементу коллекции при использовании следующего синтаксиса: `myCollection[index]`.</span><span class="sxs-lookup"><span data-stu-id="2f560-165">This property provides the ability to access a specific element in the collection by using the following syntax: `myCollection[index]`.</span></span>  
  
 <span data-ttu-id="2f560-166">Язык использует ключевое слово [this](~/docs/csharp/language-reference/keywords/this.md) для определения индексаторов вместо реализации <xref:System.Collections.IList.Item%2A> свойства. C#</span><span class="sxs-lookup"><span data-stu-id="2f560-166">The C# language uses the [this](~/docs/csharp/language-reference/keywords/this.md) keyword to define the indexers instead of implementing the <xref:System.Collections.IList.Item%2A> property.</span></span> <span data-ttu-id="2f560-167">В языке Visual Basic в качестве свойства по умолчанию реализовано свойство <xref:System.Collections.IList.Item%2A>, предоставляющее те же возможности индексирования.</span><span class="sxs-lookup"><span data-stu-id="2f560-167">Visual Basic implements <xref:System.Collections.IList.Item%2A> as a default property, which provides the same indexing functionality.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2f560-168">В следующем примере демонстрируется реализация <xref:System.Collections.IList> интерфейса для создания простого списка с фиксированным размером.</span><span class="sxs-lookup"><span data-stu-id="2f560-168">The following example demonstrates the implementation of the <xref:System.Collections.IList> interface to create a simple list, fixed-size list.</span></span> <span data-ttu-id="2f560-169">Этот код является частью более крупного примера для <xref:System.Collections.IList> интерфейса.</span><span class="sxs-lookup"><span data-stu-id="2f560-169">This code is part of a larger example for the <xref:System.Collections.IList> interface.</span></span>  
  
 [!code-csharp[System.Collections.IList_Implementation#02](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.IList_Implementation/cs/Program.cs#02)]
 [!code-vb[System.Collections.IList_Implementation#02](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.IList_Implementation/vb/Program.vb#02)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="2f560-170"><paramref name="index" /> не является допустимым индексом в <see cref="T:System.Collections.IList" />.</span><span class="sxs-lookup"><span data-stu-id="2f560-170"><paramref name="index" /> is not a valid index in the <see cref="T:System.Collections.IList" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="2f560-171">Свойство задано, и список <see cref="T:System.Collections.IList" /> доступен только для чтения.</span><span class="sxs-lookup"><span data-stu-id="2f560-171">The property is set and the <see cref="T:System.Collections.IList" /> is read-only.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Remove(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.IList.Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member Remove : obj -&gt; unit" Usage="iList.Remove value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="2f560-172">Объект, который необходимо удалить из коллекции <see cref="T:System.Collections.IList" />.</span><span class="sxs-lookup"><span data-stu-id="2f560-172">The object to remove from the <see cref="T:System.Collections.IList" />.</span></span></param>
        <summary><span data-ttu-id="2f560-173">Удаляет первое вхождение указанного объекта из коллекции <see cref="T:System.Collections.IList" />.</span><span class="sxs-lookup"><span data-stu-id="2f560-173">Removes the first occurrence of a specific object from the <see cref="T:System.Collections.IList" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f560-174">В коллекциях с непрерывным набором элементов, таких как списки, элементы, следующие за удаленным элементом, перемещаются вверх, занимая освободившуюся позицию.</span><span class="sxs-lookup"><span data-stu-id="2f560-174">In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.</span></span> <span data-ttu-id="2f560-175">Если коллекция индексируется, индексы перемещенных элементов также обновляются.</span><span class="sxs-lookup"><span data-stu-id="2f560-175">If the collection is indexed, the indexes of the elements that are moved are also updated.</span></span> <span data-ttu-id="2f560-176">Такое поведение не реализуется в коллекциях, в которых элементы логически сгруппированы, например в хэш-таблицах.</span><span class="sxs-lookup"><span data-stu-id="2f560-176">This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</span></span> <span data-ttu-id="2f560-177">Если параметр `value` не найден в объекте <xref:System.Collections.IList>, объект <xref:System.Collections.IList> не изменяется и исключение не вызывается.</span><span class="sxs-lookup"><span data-stu-id="2f560-177">If `value` is not found in the <xref:System.Collections.IList>, the <xref:System.Collections.IList> remains unchanged and no exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2f560-178">В следующем примере демонстрируется реализация <xref:System.Collections.IList> интерфейса для создания простого списка с фиксированным размером.</span><span class="sxs-lookup"><span data-stu-id="2f560-178">The following example demonstrates the implementation of the <xref:System.Collections.IList> interface to create a simple list, fixed-size list.</span></span> <span data-ttu-id="2f560-179">Этот код является частью более крупного примера для <xref:System.Collections.IList> интерфейса.</span><span class="sxs-lookup"><span data-stu-id="2f560-179">This code is part of a larger example for the <xref:System.Collections.IList> interface.</span></span>  
  
 [!code-csharp[System.Collections.IList_Implementation#02](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.IList_Implementation/cs/Program.cs#02)]
 [!code-vb[System.Collections.IList_Implementation#02](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.IList_Implementation/vb/Program.vb#02)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="2f560-180">Объект <see cref="T:System.Collections.IList" /> доступен только для чтения.</span><span class="sxs-lookup"><span data-stu-id="2f560-180">The <see cref="T:System.Collections.IList" /> is read-only.</span></span>  
  
<span data-ttu-id="2f560-181">- или -</span><span class="sxs-lookup"><span data-stu-id="2f560-181">-or-</span></span> 
<span data-ttu-id="2f560-182"><see cref="T:System.Collections.IList" /> имеет фиксированный размер.</span><span class="sxs-lookup"><span data-stu-id="2f560-182">The <see cref="T:System.Collections.IList" /> has a fixed size.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="2f560-183">Если <paramref name="value" /> в списке нет <see cref="M:System.Collections.IList.Remove(System.Object)" /> , метод не должен выполнять никаких действий.</span><span class="sxs-lookup"><span data-stu-id="2f560-183">If <paramref name="value" /> is not in the list, the <see cref="M:System.Collections.IList.Remove(System.Object)" /> method should do nothing.</span></span> <span data-ttu-id="2f560-184">В частности, он не должен вызывать исключение.</span><span class="sxs-lookup"><span data-stu-id="2f560-184">In particular, it should not throw an exception.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.IList.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="abstract member RemoveAt : int -&gt; unit" Usage="iList.RemoveAt index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="2f560-185">Отсчитываемый от нуля индекс удаляемого элемента.</span><span class="sxs-lookup"><span data-stu-id="2f560-185">The zero-based index of the item to remove.</span></span></param>
        <summary><span data-ttu-id="2f560-186">Удаляет элемент <see cref="T:System.Collections.IList" /> по указанному индексу.</span><span class="sxs-lookup"><span data-stu-id="2f560-186">Removes the <see cref="T:System.Collections.IList" /> item at the specified index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f560-187">В коллекциях с непрерывным набором элементов, таких как списки, элементы, следующие за удаленным элементом, перемещаются вверх, занимая освободившуюся позицию.</span><span class="sxs-lookup"><span data-stu-id="2f560-187">In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.</span></span> <span data-ttu-id="2f560-188">Если коллекция индексируется, индексы перемещенных элементов также обновляются.</span><span class="sxs-lookup"><span data-stu-id="2f560-188">If the collection is indexed, the indexes of the elements that are moved are also updated.</span></span> <span data-ttu-id="2f560-189">Такое поведение не реализуется в коллекциях, в которых элементы логически сгруппированы, например в хэш-таблицах.</span><span class="sxs-lookup"><span data-stu-id="2f560-189">This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2f560-190">В следующем примере демонстрируется реализация <xref:System.Collections.IList> интерфейса для создания простого списка с фиксированным размером.</span><span class="sxs-lookup"><span data-stu-id="2f560-190">The following example demonstrates the implementation of the <xref:System.Collections.IList> interface to create a simple list, fixed-size list.</span></span> <span data-ttu-id="2f560-191">Этот код является частью более крупного примера для <xref:System.Collections.IList> интерфейса.</span><span class="sxs-lookup"><span data-stu-id="2f560-191">This code is part of a larger example for the <xref:System.Collections.IList> interface.</span></span>  
  
 [!code-csharp[System.Collections.IList_Implementation#02](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.IList_Implementation/cs/Program.cs#02)]
 [!code-vb[System.Collections.IList_Implementation#02](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.IList_Implementation/vb/Program.vb#02)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="2f560-192"><paramref name="index" /> не является допустимым индексом в <see cref="T:System.Collections.IList" />.</span><span class="sxs-lookup"><span data-stu-id="2f560-192"><paramref name="index" /> is not a valid index in the <see cref="T:System.Collections.IList" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="2f560-193">Объект <see cref="T:System.Collections.IList" /> доступен только для чтения.</span><span class="sxs-lookup"><span data-stu-id="2f560-193">The <see cref="T:System.Collections.IList" /> is read-only.</span></span>  
  
<span data-ttu-id="2f560-194">-или-</span><span class="sxs-lookup"><span data-stu-id="2f560-194">-or-</span></span> 
<span data-ttu-id="2f560-195"><see cref="T:System.Collections.IList" /> имеет фиксированный размер.</span><span class="sxs-lookup"><span data-stu-id="2f560-195">The <see cref="T:System.Collections.IList" /> has a fixed size.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
