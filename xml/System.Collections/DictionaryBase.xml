<Type Name="DictionaryBase" FullName="System.Collections.DictionaryBase">
  <Metadata><Meta Name="ms.openlocfilehash" Value="52ec49a75d03f0123e99c301c6ae440739d2b2ea" /><Meta Name="ms.sourcegitcommit" Value="0084afad1b3b1cb2c8ad2c142ae3597d08bad4a7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="10/31/2019" /><Meta Name="ms.locfileid" Value="73375394" /></Metadata><TypeSignature Language="C#" Value="public abstract class DictionaryBase : System.Collections.IDictionary" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit DictionaryBase extends System.Object implements class System.Collections.ICollection, class System.Collections.IDictionary, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Collections.DictionaryBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class DictionaryBase&#xA;Implements IDictionary" />
  <TypeSignature Language="C++ CLI" Value="public ref class DictionaryBase abstract : System::Collections::IDictionary" />
  <TypeSignature Language="F#" Value="type DictionaryBase = class&#xA;    interface IDictionary&#xA;    interface ICollection&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Collections.NonGeneric</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IDictionary</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="20e45-101">Предоставляет базовый класс <see langword="abstract" /> для строго типизированной коллекции пар "ключ-значение".</span><span class="sxs-lookup"><span data-stu-id="20e45-101">Provides the <see langword="abstract" /> base class for a strongly typed collection of key/value pairs.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks

> [!IMPORTANT]
>  <span data-ttu-id="20e45-102">Не рекомендуется использовать класс `DictionaryBase` для новой разработки.</span><span class="sxs-lookup"><span data-stu-id="20e45-102">We don't recommend that you use the `DictionaryBase` class for new development.</span></span> <span data-ttu-id="20e45-103">Вместо этого рекомендуется использовать универсальный класс <xref:System.Collections.Generic.Dictionary%602> или <xref:System.Collections.ObjectModel.KeyedCollection%602>.</span><span class="sxs-lookup"><span data-stu-id="20e45-103">Instead, we recommend that you use the generic <xref:System.Collections.Generic.Dictionary%602> or <xref:System.Collections.ObjectModel.KeyedCollection%602> class .</span></span> <span data-ttu-id="20e45-104">Дополнительные сведения см. в разделе [неуниверсальные коллекции не следует использовать](https://github.com/dotnet/platform-compat/blob/master/docs/DE0006.md) в GitHub.</span><span class="sxs-lookup"><span data-stu-id="20e45-104">For more information, see [Non-generic collections shouldn't be used](https://github.com/dotnet/platform-compat/blob/master/docs/DE0006.md) on GitHub.</span></span>

<span data-ttu-id="20e45-105">C# Оператор [foreach](~/docs/csharp/language-reference/keywords/foreach-in.md) и Visual Basic [для каждой](~/docs/visual-basic/language-reference/statements/for-each-next-statement.md) инструкции возвращают объект типа элементов в коллекции.</span><span class="sxs-lookup"><span data-stu-id="20e45-105">The C# [foreach](~/docs/csharp/language-reference/keywords/foreach-in.md) statement and the Visual Basic [For Each](~/docs/visual-basic/language-reference/statements/for-each-next-statement.md) statement return an object of the type of the elements in the collection.</span></span> <span data-ttu-id="20e45-106">Поскольку каждый элемент <xref:System.Collections.DictionaryBase> является парой "ключ-значение", тип элемента не является типом ключа или типом значения.</span><span class="sxs-lookup"><span data-stu-id="20e45-106">Since each element of the <xref:System.Collections.DictionaryBase> is a key/value pair, the element type is not the type of the key or the type of the value.</span></span> <span data-ttu-id="20e45-107">Вместо этого тип элемента <xref:System.Collections.DictionaryEntry>.</span><span class="sxs-lookup"><span data-stu-id="20e45-107">Instead, the element type is <xref:System.Collections.DictionaryEntry>.</span></span>  
  
 <span data-ttu-id="20e45-108">Оператор `foreach` — это оболочка для перечислителя, которая разрешает только чтение из коллекции, а не запись в коллекцию.</span><span class="sxs-lookup"><span data-stu-id="20e45-108">The `foreach` statement is a wrapper around the enumerator, which only allows reading from, not writing to, the collection.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="20e45-109">Поскольку ключи могут быть унаследованы и их поведение изменяется, их абсолютная уникальность не гарантируется при сравнении с помощью метода <xref:System.Type.Equals%2A>.</span><span class="sxs-lookup"><span data-stu-id="20e45-109">Because keys can be inherited and their behavior changed, their absolute uniqueness cannot be guaranteed by comparisons using the <xref:System.Type.Equals%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="20e45-110">В следующем примере кода реализуется класс <xref:System.Collections.DictionaryBase> и используется эта реализация для создания словаря <xref:System.String> ключей и значений, в которых <xref:System.String.Length%2A> 5 символов или меньше.</span><span class="sxs-lookup"><span data-stu-id="20e45-110">The following code example implements the <xref:System.Collections.DictionaryBase> class and uses that implementation to create a dictionary of <xref:System.String> keys and values that have a <xref:System.String.Length%2A> of 5 characters or less.</span></span>  
  
 [!code-cpp[System.Collections.DictionaryBase#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.DictionaryBase/CPP/dictionarybase.cpp#1)]
 [!code-csharp[System.Collections.DictionaryBase#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.DictionaryBase/CS/dictionarybase.cs#1)]
 [!code-vb[System.Collections.DictionaryBase#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.DictionaryBase/VB/dictionarybase.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="20e45-111">Открытые статические (<see langword="Shared" /> в Visual Basic) члены этого типа являются потокобезопасными.</span><span class="sxs-lookup"><span data-stu-id="20e45-111">Public static (<see langword="Shared" /> in Visual Basic) members of this type are thread safe.</span></span> <span data-ttu-id="20e45-112">Потокобезопасность членов экземпляров не гарантируется.</span><span class="sxs-lookup"><span data-stu-id="20e45-112">Any instance members are not guaranteed to be thread safe.</span></span>  
  
<span data-ttu-id="20e45-113">Эта реализация не предоставляет синхронизированной (потокобезопасной) оболочки для <see cref="T:System.Collections.DictionaryBase" />, но производные классы могут создавать собственные синхронизированные версии <see cref="T:System.Collections.DictionaryBase" /> с помощью свойства <see cref="P:System.Collections.ICollection.SyncRoot" />.</span><span class="sxs-lookup"><span data-stu-id="20e45-113">This implementation does not provide a synchronized (thread-safe) wrapper for a <see cref="T:System.Collections.DictionaryBase" />, but derived classes can create their own synchronized versions of the <see cref="T:System.Collections.DictionaryBase" /> using the <see cref="P:System.Collections.ICollection.SyncRoot" /> property.</span></span>  
  
<span data-ttu-id="20e45-114">Перечисление коллекции не является потокобезопасной процедурой.</span><span class="sxs-lookup"><span data-stu-id="20e45-114">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="20e45-115">Даже если коллекция синхронизирована, другие потоки могут ее изменить, что приведет к тому, что перечислитель создаст исключение.</span><span class="sxs-lookup"><span data-stu-id="20e45-115">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="20e45-116">Для обеспечения потокобезопасности при перечислении можно либо заблокировать коллекцию на все время перечисления, либо перехватывать исключения, возникающие в результате изменений, внесенных другими потоками.</span><span class="sxs-lookup"><span data-stu-id="20e45-116">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span></threadsafe>
    <block subset="none" type="overrides"><para><span data-ttu-id="20e45-117">Этот базовый класс предназначен для упрощения разработчиками создания строго типизированной пользовательской коллекции.</span><span class="sxs-lookup"><span data-stu-id="20e45-117">This base class is provided to make it easier for implementers to create a strongly typed custom collection.</span></span> <span data-ttu-id="20e45-118">Разработчикам рекомендуется расширять этот базовый класс, а не создавать собственные.</span><span class="sxs-lookup"><span data-stu-id="20e45-118">Implementers are encouraged to extend this base class instead of creating their own.</span></span>  
  
 <span data-ttu-id="20e45-119">Члены этого базового класса являются защищенными и предназначены для использования только через производный класс.</span><span class="sxs-lookup"><span data-stu-id="20e45-119">Members of this base class are protected and are intended to be used through a derived class only.</span></span></para></block>
    <altmember cref="T:System.Collections.Hashtable" />
    <altmember cref="T:System.Collections.IDictionary" />
    <altmember cref="N:System.Collections.Generic" />
    <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations.md"><span data-ttu-id="20e45-120">Выполнение строковых операций, не зависящих от языка и региональных параметров</span><span class="sxs-lookup"><span data-stu-id="20e45-120">Performing Culture-Insensitive String Operations</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DictionaryBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.DictionaryBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DictionaryBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="20e45-121">Инициализирует новый экземпляр класса <see cref="T:System.Collections.DictionaryBase" />.</span><span class="sxs-lookup"><span data-stu-id="20e45-121">Initializes a new instance of the <see cref="T:System.Collections.DictionaryBase" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20e45-122">Этот конструктор является операцией `O(1)`.</span><span class="sxs-lookup"><span data-stu-id="20e45-122">This constructor is an `O(1)` operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.DictionaryBase.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit&#xA;override this.Clear : unit -&gt; unit" Usage="dictionaryBase.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="20e45-123">Удаляет содержимое экземпляра <see cref="T:System.Collections.DictionaryBase" />.</span><span class="sxs-lookup"><span data-stu-id="20e45-123">Clears the contents of the <see cref="T:System.Collections.DictionaryBase" /> instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20e45-124"><xref:System.Collections.DictionaryBase.Count%2A> имеет значение 0, а ссылки на другие объекты из элементов коллекции также освобождаются.</span><span class="sxs-lookup"><span data-stu-id="20e45-124"><xref:System.Collections.DictionaryBase.Count%2A> is set to zero, and references to other objects from elements of the collection are also released.</span></span>  
  
 <span data-ttu-id="20e45-125">Этот метод является операцией `O(n)`, где `n` — <xref:System.Collections.DictionaryBase.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="20e45-125">This method is an `O(n)` operation, where `n` is <xref:System.Collections.DictionaryBase.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.DictionaryBase.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ array, int index);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : Array * int -&gt; unit&#xA;override this.CopyTo : Array * int -&gt; unit" Usage="dictionaryBase.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="20e45-126">Одномерный массив класса <see cref="T:System.Array" />, который является назначением для объектов <see cref="T:System.Collections.DictionaryEntry" />, копируемых из экземпляра класса <see cref="T:System.Collections.DictionaryBase" />.</span><span class="sxs-lookup"><span data-stu-id="20e45-126">The one-dimensional <see cref="T:System.Array" /> that is the destination of the <see cref="T:System.Collections.DictionaryEntry" /> objects copied from the <see cref="T:System.Collections.DictionaryBase" /> instance.</span></span> <span data-ttu-id="20e45-127">Массив <see cref="T:System.Array" /> должен иметь индексацию, начинающуюся с нуля.</span><span class="sxs-lookup"><span data-stu-id="20e45-127">The <see cref="T:System.Array" /> must have zero-based indexing.</span></span></param>
        <param name="index"><span data-ttu-id="20e45-128">Отсчитываемый от нуля индекс в массиве <paramref name="array" />, указывающий начало копирования.</span><span class="sxs-lookup"><span data-stu-id="20e45-128">The zero-based index in <paramref name="array" /> at which copying begins.</span></span></param>
        <summary><span data-ttu-id="20e45-129">Копирует элементы класса <see cref="T:System.Collections.DictionaryBase" /> в одномерный массив класса <see cref="T:System.Array" /> с указанного индекса.</span><span class="sxs-lookup"><span data-stu-id="20e45-129">Copies the <see cref="T:System.Collections.DictionaryBase" /> elements to a one-dimensional <see cref="T:System.Array" /> at the specified index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20e45-130">Элементы копируются в <xref:System.Array> в том же порядке, в котором перечислитель проходит по <xref:System.Collections.DictionaryBase>.</span><span class="sxs-lookup"><span data-stu-id="20e45-130">The elements are copied to the <xref:System.Array> in the same order in which the enumerator iterates through the <xref:System.Collections.DictionaryBase>.</span></span>  
  
 <span data-ttu-id="20e45-131">Этот метод является операцией `O(n)`, где `n` — <xref:System.Collections.DictionaryBase.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="20e45-131">This method is an `O(n)` operation, where `n` is <xref:System.Collections.DictionaryBase.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="20e45-132">Свойство <paramref name="array" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="20e45-132"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="20e45-133">Значение параметра <paramref name="index" /> меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="20e45-133"><paramref name="index" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="20e45-134">Массив <paramref name="array" /> является многомерным.</span><span class="sxs-lookup"><span data-stu-id="20e45-134"><paramref name="array" /> is multidimensional.</span></span>  
  
<span data-ttu-id="20e45-135">- или -</span><span class="sxs-lookup"><span data-stu-id="20e45-135">-or-</span></span> 
<span data-ttu-id="20e45-136">Число элементов в исходной коллекции <see cref="T:System.Collections.DictionaryBase" /> больше доступного места от положения, заданного значением параметра <paramref name="index" />, до конца массива назначения <paramref name="array" />.</span><span class="sxs-lookup"><span data-stu-id="20e45-136">The number of elements in the source <see cref="T:System.Collections.DictionaryBase" /> is greater than the available space from <paramref name="index" /> to the end of the destination <paramref name="array" />.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="20e45-137">Тип исходного массива <see cref="T:System.Collections.DictionaryBase" /> не может быть автоматически приведен к типу массива назначения <paramref name="array" />.</span><span class="sxs-lookup"><span data-stu-id="20e45-137">The type of the source <see cref="T:System.Collections.DictionaryBase" /> cannot be cast automatically to the type of the destination <paramref name="array" />.</span></span></exception>
        <altmember cref="T:System.Array" />
        <altmember cref="T:System.Collections.DictionaryEntry" />
        <altmember cref="M:System.Collections.DictionaryBase.GetEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Collections.DictionaryBase.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Collections.DictionaryBase.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="20e45-138">Получает число элементов, содержащихся в экземпляре класса <see cref="T:System.Collections.DictionaryBase" />.</span><span class="sxs-lookup"><span data-stu-id="20e45-138">Gets the number of elements contained in the <see cref="T:System.Collections.DictionaryBase" /> instance.</span></span></summary>
        <value><span data-ttu-id="20e45-139">Число элементов, содержащихся в экземпляре класса <see cref="T:System.Collections.DictionaryBase" />.</span><span class="sxs-lookup"><span data-stu-id="20e45-139">The number of elements contained in the <see cref="T:System.Collections.DictionaryBase" /> instance.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20e45-140">Получение значения этого свойства является операцией `O(1)`.</span><span class="sxs-lookup"><span data-stu-id="20e45-140">Retrieving the value of this property is an `O(1)` operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dictionary">
      <MemberSignature Language="C#" Value="protected System.Collections.IDictionary Dictionary { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IDictionary Dictionary" />
      <MemberSignature Language="DocId" Value="P:System.Collections.DictionaryBase.Dictionary" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Dictionary As IDictionary" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Collections::IDictionary ^ Dictionary { System::Collections::IDictionary ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Dictionary : System.Collections.IDictionary" Usage="System.Collections.DictionaryBase.Dictionary" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="20e45-141">Получает список элементов, содержащихся в экземпляре <see cref="T:System.Collections.DictionaryBase" />.</span><span class="sxs-lookup"><span data-stu-id="20e45-141">Gets the list of elements contained in the <see cref="T:System.Collections.DictionaryBase" /> instance.</span></span></summary>
        <value><span data-ttu-id="20e45-142">Класс <see cref="T:System.Collections.IDictionary" />, предоставляющий экземпляр класса <see cref="T:System.Collections.DictionaryBase" />.</span><span class="sxs-lookup"><span data-stu-id="20e45-142">An <see cref="T:System.Collections.IDictionary" /> representing the <see cref="T:System.Collections.DictionaryBase" /> instance itself.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20e45-143">Методы On \* вызываются только для экземпляра, возвращаемого свойством <xref:System.Collections.DictionaryBase.Dictionary%2A>, но не для экземпляра, возвращаемого свойством <xref:System.Collections.DictionaryBase.InnerHashtable%2A>.</span><span class="sxs-lookup"><span data-stu-id="20e45-143">The On\* methods are invoked only on the instance returned by the <xref:System.Collections.DictionaryBase.Dictionary%2A> property, but not on the instance returned by the <xref:System.Collections.DictionaryBase.InnerHashtable%2A> property.</span></span>  
  
 <span data-ttu-id="20e45-144">Получение значения этого свойства является операцией `O(1)`.</span><span class="sxs-lookup"><span data-stu-id="20e45-144">Retrieving the value of this property is an `O(1)` operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="20e45-145">В следующем примере кода реализуется класс <xref:System.Collections.DictionaryBase> и используется эта реализация для создания словаря <xref:System.String> ключей и значений, в которых <xref:System.String.Length%2A> 5 символов или меньше.</span><span class="sxs-lookup"><span data-stu-id="20e45-145">The following code example implements the <xref:System.Collections.DictionaryBase> class and uses that implementation to create a dictionary of <xref:System.String> keys and values that have a <xref:System.String.Length%2A> of 5 characters or less.</span></span>  
  
 [!code-cpp[System.Collections.DictionaryBase#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.DictionaryBase/CPP/dictionarybase.cpp#1)]
 [!code-csharp[System.Collections.DictionaryBase#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.DictionaryBase/CS/dictionarybase.cs#1)]
 [!code-vb[System.Collections.DictionaryBase#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.DictionaryBase/VB/dictionarybase.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IDictionaryEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IDictionaryEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.DictionaryBase.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IDictionaryEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IDictionaryEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IDictionaryEnumerator&#xA;override this.GetEnumerator : unit -&gt; System.Collections.IDictionaryEnumerator" Usage="dictionaryBase.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionaryEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="20e45-146">Возвращает перечислитель <see cref="T:System.Collections.IDictionaryEnumerator" />, осуществляющий перебор элементов экземпляра класса <see cref="T:System.Collections.DictionaryBase" />.</span><span class="sxs-lookup"><span data-stu-id="20e45-146">Returns an <see cref="T:System.Collections.IDictionaryEnumerator" /> that iterates through the <see cref="T:System.Collections.DictionaryBase" /> instance.</span></span></summary>
        <returns><span data-ttu-id="20e45-147">Перечислитель <see cref="T:System.Collections.IDictionaryEnumerator" /> для экземпляра класса <see cref="T:System.Collections.DictionaryBase" />.</span><span class="sxs-lookup"><span data-stu-id="20e45-147">An <see cref="T:System.Collections.IDictionaryEnumerator" /> for the <see cref="T:System.Collections.DictionaryBase" /> instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20e45-148">Инструкция `foreach` языка C# (`for each` в Visual Basic) позволяет скрыть сложный механизм перечислителей.</span><span class="sxs-lookup"><span data-stu-id="20e45-148">The `foreach` statement of the C# language (`for each` in Visual Basic) hides the complexity of the enumerators.</span></span>  <span data-ttu-id="20e45-149">Поэтому рекомендуется вместо непосредственного использования перечислителя применять ключевое слово `foreach`.</span><span class="sxs-lookup"><span data-stu-id="20e45-149">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="20e45-150">Перечислители могут использоваться для чтения данных в коллекции, но не для ее изменения.</span><span class="sxs-lookup"><span data-stu-id="20e45-150">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="20e45-151">Изначально перечислитель располагается перед первым элементом коллекции.</span><span class="sxs-lookup"><span data-stu-id="20e45-151">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="20e45-152">Метод <xref:System.Collections.IEnumerator.Reset%2A> также переводит перечислитель в эту позицию.</span><span class="sxs-lookup"><span data-stu-id="20e45-152"><xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position.</span></span>  <span data-ttu-id="20e45-153">В этой позиции значение свойства <xref:System.Collections.IEnumerator.Current%2A> не определено.</span><span class="sxs-lookup"><span data-stu-id="20e45-153">At this position, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="20e45-154">Поэтому необходимо вызвать метод <xref:System.Collections.IEnumerator.MoveNext%2A>, чтобы переместить перечислитель к первому элементу коллекции до считывания значения свойства <xref:System.Collections.IEnumerator.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="20e45-154">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="20e45-155"><xref:System.Collections.IEnumerator.Current%2A> возвращает тот же объект, пока не будет вызван метод <xref:System.Collections.IEnumerator.MoveNext%2A> или <xref:System.Collections.IEnumerator.Reset%2A>.</span><span class="sxs-lookup"><span data-stu-id="20e45-155"><xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="20e45-156"><xref:System.Collections.IEnumerator.MoveNext%2A> задает <xref:System.Collections.IEnumerator.Current%2A> в качестве значения для следующего элемента.</span><span class="sxs-lookup"><span data-stu-id="20e45-156"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="20e45-157">Если <xref:System.Collections.IEnumerator.MoveNext%2A> передает конец коллекции, перечислитель располагается после последнего элемента в коллекции, а <xref:System.Collections.IEnumerator.MoveNext%2A> возвращает `false`.</span><span class="sxs-lookup"><span data-stu-id="20e45-157">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="20e45-158">Если перечислитель находится в этой позиции, последующие вызовы <xref:System.Collections.IEnumerator.MoveNext%2A> также возвращают `false`.</span><span class="sxs-lookup"><span data-stu-id="20e45-158">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="20e45-159">Если последний вызов <xref:System.Collections.IEnumerator.MoveNext%2A> вернул `false`, <xref:System.Collections.IEnumerator.Current%2A> не определен.</span><span class="sxs-lookup"><span data-stu-id="20e45-159">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="20e45-160">Чтобы снова задать в качестве значения свойства <xref:System.Collections.IEnumerator.Current%2A> первый элемент коллекции, можно последовательно вызвать методы <xref:System.Collections.IEnumerator.Reset%2A> и<xref:System.Collections.IEnumerator.MoveNext%2A>.</span><span class="sxs-lookup"><span data-stu-id="20e45-160">To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="20e45-161">Перечислитель остается действительным, пока коллекция не изменяется.</span><span class="sxs-lookup"><span data-stu-id="20e45-161">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="20e45-162">Если в коллекцию вносятся изменения, например добавляются, изменяются или удаляются элементы, перечислитель становится недействительным без возможности восстановление, а его поведение не определено.</span><span class="sxs-lookup"><span data-stu-id="20e45-162">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</span></span>  
  
 <span data-ttu-id="20e45-163">У перечислителя нет эксклюзивного доступа к коллекции, поэтому перечисление коллекции не является потокобезопасной процедурой.</span><span class="sxs-lookup"><span data-stu-id="20e45-163">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span>  <span data-ttu-id="20e45-164">Чтобы гарантировать потокобезопасность, можно заблокировать коллекцию на время всего перечисления.</span><span class="sxs-lookup"><span data-stu-id="20e45-164">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="20e45-165">Чтобы разрешить доступ к коллекции из нескольких потоков для чтения и записи, необходимо реализовать собственную синхронизацию.</span><span class="sxs-lookup"><span data-stu-id="20e45-165">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="20e45-166">Этот метод является операцией `O(1)`.</span><span class="sxs-lookup"><span data-stu-id="20e45-166">This method is an `O(1)` operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="20e45-167">В следующем примере кода реализуется класс <xref:System.Collections.DictionaryBase> и используется эта реализация для создания словаря <xref:System.String> ключей и значений, в которых <xref:System.String.Length%2A> 5 символов или меньше.</span><span class="sxs-lookup"><span data-stu-id="20e45-167">The following code example implements the <xref:System.Collections.DictionaryBase> class and uses that implementation to create a dictionary of <xref:System.String> keys and values that have a <xref:System.String.Length%2A> of 5 characters or less.</span></span>  
  
 [!code-cpp[System.Collections.DictionaryBase#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.DictionaryBase/CPP/dictionarybase.cpp#1)]
 [!code-csharp[System.Collections.DictionaryBase#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.DictionaryBase/CS/dictionarybase.cs#1)]
 [!code-vb[System.Collections.DictionaryBase#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.DictionaryBase/VB/dictionarybase.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IDictionaryEnumerator" />
        <altmember cref="T:System.Collections.IEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="InnerHashtable">
      <MemberSignature Language="C#" Value="protected System.Collections.Hashtable InnerHashtable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Hashtable InnerHashtable" />
      <MemberSignature Language="DocId" Value="P:System.Collections.DictionaryBase.InnerHashtable" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property InnerHashtable As Hashtable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Collections::Hashtable ^ InnerHashtable { System::Collections::Hashtable ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InnerHashtable : System.Collections.Hashtable" Usage="System.Collections.DictionaryBase.InnerHashtable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Hashtable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="20e45-168">Получает список элементов, содержащихся в экземпляре <see cref="T:System.Collections.DictionaryBase" />.</span><span class="sxs-lookup"><span data-stu-id="20e45-168">Gets the list of elements contained in the <see cref="T:System.Collections.DictionaryBase" /> instance.</span></span></summary>
        <value><span data-ttu-id="20e45-169">Объект <see cref="T:System.Collections.Hashtable" />, предоставляющий экземпляр класса <see cref="T:System.Collections.DictionaryBase" />.</span><span class="sxs-lookup"><span data-stu-id="20e45-169">A <see cref="T:System.Collections.Hashtable" /> representing the <see cref="T:System.Collections.DictionaryBase" /> instance itself.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20e45-170">Методы On \* вызываются только для экземпляра, возвращаемого свойством <xref:System.Collections.DictionaryBase.Dictionary%2A>, но не для экземпляра, возвращаемого свойством <xref:System.Collections.DictionaryBase.InnerHashtable%2A>.</span><span class="sxs-lookup"><span data-stu-id="20e45-170">The On\* methods are invoked only on the instance returned by the <xref:System.Collections.DictionaryBase.Dictionary%2A> property, but not on the instance returned by the <xref:System.Collections.DictionaryBase.InnerHashtable%2A> property.</span></span>  
  
 <span data-ttu-id="20e45-171">Получение значения этого свойства является операцией `O(1)`.</span><span class="sxs-lookup"><span data-stu-id="20e45-171">Retrieving the value of this property is an `O(1)` operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnClear">
      <MemberSignature Language="C#" Value="protected virtual void OnClear ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnClear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.DictionaryBase.OnClear" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnClear ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnClear();" />
      <MemberSignature Language="F#" Value="abstract member OnClear : unit -&gt; unit&#xA;override this.OnClear : unit -&gt; unit" Usage="dictionaryBase.OnClear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="20e45-172">Осуществляет дополнительные пользовательские действия перед удалением содержимого экземпляра класса <see cref="T:System.Collections.DictionaryBase" />.</span><span class="sxs-lookup"><span data-stu-id="20e45-172">Performs additional custom processes before clearing the contents of the <see cref="T:System.Collections.DictionaryBase" /> instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20e45-173">Реализация по умолчанию этого метода должна быть переопределена производным классом для выполнения некоторых действий перед очисткой коллекции.</span><span class="sxs-lookup"><span data-stu-id="20e45-173">The default implementation of this method is intended to be overridden by a derived class to perform some action before the collection is cleared.</span></span>  
  
 <span data-ttu-id="20e45-174">Методы On \* вызываются только для экземпляра, возвращаемого свойством <xref:System.Collections.DictionaryBase.Dictionary%2A>, но не для экземпляра, возвращаемого свойством <xref:System.Collections.DictionaryBase.InnerHashtable%2A>.</span><span class="sxs-lookup"><span data-stu-id="20e45-174">The On\* methods are invoked only on the instance returned by the <xref:System.Collections.DictionaryBase.Dictionary%2A> property, but not on the instance returned by the <xref:System.Collections.DictionaryBase.InnerHashtable%2A> property.</span></span>  
  
 <span data-ttu-id="20e45-175">Реализация по умолчанию этого метода является операцией `O(1)`.</span><span class="sxs-lookup"><span data-stu-id="20e45-175">The default implementation of this method is an `O(1)` operation.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="20e45-176">Этот метод позволяет разработчикам определять процессы, которые должны быть выполнены перед удалением всех элементов из базового <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="20e45-176">This method allows implementers to define processes that must be performed before deleting all the elements from the underlying <see cref="T:System.Collections.Hashtable" />.</span></span> <span data-ttu-id="20e45-177">Определяя этот метод, разработчики могут добавлять функции к унаследованным методам, не переопределяя все остальные методы.</span><span class="sxs-lookup"><span data-stu-id="20e45-177">By defining this method, implementers can add functionality to inherited methods without having to override all other methods.</span></span>  
  
 <span data-ttu-id="20e45-178"><see cref="M:System.Collections.DictionaryBase.OnClear" /> вызывается перед стандартным поведением по умолчанию, тогда как <see cref="M:System.Collections.DictionaryBase.OnClearComplete" /> вызывается после стандартного режима очистки.</span><span class="sxs-lookup"><span data-stu-id="20e45-178"><see cref="M:System.Collections.DictionaryBase.OnClear" /> is invoked before the standard Clear behavior, whereas <see cref="M:System.Collections.DictionaryBase.OnClearComplete" /> is invoked after the standard Clear behavior.</span></span>  
  
<span data-ttu-id="20e45-179">Например, разработчики могут исключить определенные элементы из удаления с помощью глобального Clear.</span><span class="sxs-lookup"><span data-stu-id="20e45-179">For example, implementers can exempt certain elements from deletion by a global Clear.</span></span></para></block>
        <altmember cref="M:System.Collections.DictionaryBase.OnClearComplete" />
        <altmember cref="M:System.Collections.DictionaryBase.OnRemove(System.Object,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="OnClearComplete">
      <MemberSignature Language="C#" Value="protected virtual void OnClearComplete ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnClearComplete() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.DictionaryBase.OnClearComplete" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnClearComplete ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnClearComplete();" />
      <MemberSignature Language="F#" Value="abstract member OnClearComplete : unit -&gt; unit&#xA;override this.OnClearComplete : unit -&gt; unit" Usage="dictionaryBase.OnClearComplete " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="20e45-180">Осуществляет дополнительные пользовательские действия после удаления содержимого экземпляра класса <see cref="T:System.Collections.DictionaryBase" />.</span><span class="sxs-lookup"><span data-stu-id="20e45-180">Performs additional custom processes after clearing the contents of the <see cref="T:System.Collections.DictionaryBase" /> instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20e45-181">Реализация по умолчанию этого метода должна быть переопределена производным классом для выполнения некоторых действий после очистки коллекции.</span><span class="sxs-lookup"><span data-stu-id="20e45-181">The default implementation of this method is intended to be overridden by a derived class to perform some action after the collection is cleared.</span></span>  
  
 <span data-ttu-id="20e45-182">Методы On \* вызываются только для экземпляра, возвращаемого свойством <xref:System.Collections.DictionaryBase.Dictionary%2A>, но не для экземпляра, возвращаемого свойством <xref:System.Collections.DictionaryBase.InnerHashtable%2A>.</span><span class="sxs-lookup"><span data-stu-id="20e45-182">The On\* methods are invoked only on the instance returned by the <xref:System.Collections.DictionaryBase.Dictionary%2A> property, but not on the instance returned by the <xref:System.Collections.DictionaryBase.InnerHashtable%2A> property.</span></span>  
  
 <span data-ttu-id="20e45-183">Реализация по умолчанию этого метода является операцией `O(1)`.</span><span class="sxs-lookup"><span data-stu-id="20e45-183">The default implementation of this method is an `O(1)` operation.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="20e45-184">Этот метод позволяет разработчикам определять процессы, которые должны быть выполнены после удаления всех элементов из базового <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="20e45-184">This method allows implementers to define processes that must be performed after deleting all the elements from the underlying <see cref="T:System.Collections.Hashtable" />.</span></span> <span data-ttu-id="20e45-185">Определяя этот метод, разработчики могут добавлять функции к унаследованным методам, не переопределяя все остальные методы.</span><span class="sxs-lookup"><span data-stu-id="20e45-185">By defining this method, implementers can add functionality to inherited methods without having to override all other methods.</span></span>  
  
 <span data-ttu-id="20e45-186"><see cref="M:System.Collections.DictionaryBase.OnClear" /> вызывается перед стандартным поведением по умолчанию, тогда как <see cref="M:System.Collections.DictionaryBase.OnClearComplete" /> вызывается после стандартного режима очистки.</span><span class="sxs-lookup"><span data-stu-id="20e45-186"><see cref="M:System.Collections.DictionaryBase.OnClear" /> is invoked before the standard Clear behavior, whereas <see cref="M:System.Collections.DictionaryBase.OnClearComplete" /> is invoked after the standard Clear behavior.</span></span></para></block>
        <altmember cref="M:System.Collections.DictionaryBase.OnClear" />
        <altmember cref="M:System.Collections.DictionaryBase.OnRemoveComplete(System.Object,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="OnGet">
      <MemberSignature Language="C#" Value="protected virtual object OnGet (object key, object currentValue);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object OnGet(object key, object currentValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.DictionaryBase.OnGet(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnGet (key As Object, currentValue As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Object ^ OnGet(System::Object ^ key, System::Object ^ currentValue);" />
      <MemberSignature Language="F#" Value="abstract member OnGet : obj * obj -&gt; obj&#xA;override this.OnGet : obj * obj -&gt; obj" Usage="dictionaryBase.OnGet (key, currentValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
        <Parameter Name="currentValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="20e45-187">Ключ элемента, который требуется получить.</span><span class="sxs-lookup"><span data-stu-id="20e45-187">The key of the element to get.</span></span></param>
        <param name="currentValue"><span data-ttu-id="20e45-188">Текущее значение элемента, связанного с параметром <paramref name="key" />.</span><span class="sxs-lookup"><span data-stu-id="20e45-188">The current value of the element associated with <paramref name="key" />.</span></span></param>
        <summary><span data-ttu-id="20e45-189">Получает элемент с указанными ключом и значением из экземпляра класса <see cref="T:System.Collections.DictionaryBase" />.</span><span class="sxs-lookup"><span data-stu-id="20e45-189">Gets the element with the specified key and value in the <see cref="T:System.Collections.DictionaryBase" /> instance.</span></span></summary>
        <returns><span data-ttu-id="20e45-190">Объект <see cref="T:System.Object" />, содержащий элемент с указанными ключом и значением.</span><span class="sxs-lookup"><span data-stu-id="20e45-190">An <see cref="T:System.Object" /> containing the element with the specified key and value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20e45-191">Реализация по умолчанию этого метода возвращает `currentValue`.</span><span class="sxs-lookup"><span data-stu-id="20e45-191">The default implementation of this method returns `currentValue`.</span></span> <span data-ttu-id="20e45-192">Он должен быть переопределен производным классом для выполнения дополнительных действий при извлечении указанного элемента.</span><span class="sxs-lookup"><span data-stu-id="20e45-192">It is intended to be overridden by a derived class to perform additional action when the specified element is retrieved.</span></span>  
  
 <span data-ttu-id="20e45-193">Методы On \* вызываются только для экземпляра, возвращаемого свойством <xref:System.Collections.DictionaryBase.Dictionary%2A>, но не для экземпляра, возвращаемого свойством <xref:System.Collections.DictionaryBase.InnerHashtable%2A>.</span><span class="sxs-lookup"><span data-stu-id="20e45-193">The On\* methods are invoked only on the instance returned by the <xref:System.Collections.DictionaryBase.Dictionary%2A> property, but not on the instance returned by the <xref:System.Collections.DictionaryBase.InnerHashtable%2A> property.</span></span>  
  
 <span data-ttu-id="20e45-194">Реализация по умолчанию этого метода является операцией `O(1)`.</span><span class="sxs-lookup"><span data-stu-id="20e45-194">The default implementation of this method is an `O(1)` operation.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="20e45-195">Этот метод позволяет разработчикам определять процессы, которые должны быть выполнены при выполнении стандартного поведения получения базовых <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="20e45-195">This method allows implementers to define processes that must be performed when executing the standard Get behavior of the underlying <see cref="T:System.Collections.Hashtable" />.</span></span> <span data-ttu-id="20e45-196">Определяя этот метод, разработчики могут добавлять функции к унаследованным методам, не переопределяя все остальные методы.</span><span class="sxs-lookup"><span data-stu-id="20e45-196">By defining this method, implementers can add functionality to inherited methods without having to override all other methods.</span></span>  
  
 <span data-ttu-id="20e45-197"><see cref="M:System.Collections.DictionaryBase.OnGet(System.Object,System.Object)" /> можно использовать для указания выполняемых процессов перед возвратом значения, полученного от базового <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="20e45-197"><see cref="M:System.Collections.DictionaryBase.OnGet(System.Object,System.Object)" /> can be used to specify processes to perform before returning the value retrieved from the underlying <see cref="T:System.Collections.Hashtable" />.</span></span> <span data-ttu-id="20e45-198">Например, разработчики могут привести значение к другому типу, прежде чем возвращать его.</span><span class="sxs-lookup"><span data-stu-id="20e45-198">For example, implementers can cast the value into another type before returning it.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnInsert">
      <MemberSignature Language="C#" Value="protected virtual void OnInsert (object key, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnInsert(object key, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.DictionaryBase.OnInsert(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnInsert (key As Object, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnInsert(System::Object ^ key, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member OnInsert : obj * obj -&gt; unit&#xA;override this.OnInsert : obj * obj -&gt; unit" Usage="dictionaryBase.OnInsert (key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="20e45-199">Ключ элемента, который требуется вставить.</span><span class="sxs-lookup"><span data-stu-id="20e45-199">The key of the element to insert.</span></span></param>
        <param name="value"><span data-ttu-id="20e45-200">Значение элемента, который требуется вставить.</span><span class="sxs-lookup"><span data-stu-id="20e45-200">The value of the element to insert.</span></span></param>
        <summary><span data-ttu-id="20e45-201">Выполняет дополнительные пользовательские действия перед вставкой нового элемента в экземпляр класса <see cref="T:System.Collections.DictionaryBase" />.</span><span class="sxs-lookup"><span data-stu-id="20e45-201">Performs additional custom processes before inserting a new element into the <see cref="T:System.Collections.DictionaryBase" /> instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20e45-202">Реализация по умолчанию этого метода должна быть переопределена производным классом для выполнения некоторых действий перед вставкой указанного элемента.</span><span class="sxs-lookup"><span data-stu-id="20e45-202">The default implementation of this method is intended to be overridden by a derived class to perform some action before the specified element is inserted.</span></span>  
  
 <span data-ttu-id="20e45-203">Методы On \* вызываются только для экземпляра, возвращаемого свойством <xref:System.Collections.DictionaryBase.Dictionary%2A>, но не для экземпляра, возвращаемого свойством <xref:System.Collections.DictionaryBase.InnerHashtable%2A>.</span><span class="sxs-lookup"><span data-stu-id="20e45-203">The On\* methods are invoked only on the instance returned by the <xref:System.Collections.DictionaryBase.Dictionary%2A> property, but not on the instance returned by the <xref:System.Collections.DictionaryBase.InnerHashtable%2A> property.</span></span>  
  
 <span data-ttu-id="20e45-204">Реализация по умолчанию этого метода является операцией `O(1)`.</span><span class="sxs-lookup"><span data-stu-id="20e45-204">The default implementation of this method is an `O(1)` operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="20e45-205">В следующем примере кода реализуется класс <xref:System.Collections.DictionaryBase> и используется эта реализация для создания словаря <xref:System.String> ключей и значений, в которых <xref:System.String.Length%2A> 5 символов или меньше.</span><span class="sxs-lookup"><span data-stu-id="20e45-205">The following code example implements the <xref:System.Collections.DictionaryBase> class and uses that implementation to create a dictionary of <xref:System.String> keys and values that have a <xref:System.String.Length%2A> of 5 characters or less.</span></span>  
  
 [!code-cpp[System.Collections.DictionaryBase#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.DictionaryBase/CPP/dictionarybase.cpp#1)]
 [!code-csharp[System.Collections.DictionaryBase#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.DictionaryBase/CS/dictionarybase.cs#1)]
 [!code-vb[System.Collections.DictionaryBase#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.DictionaryBase/VB/dictionarybase.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="20e45-206">Этот метод позволяет разработчикам определять процессы, которые должны быть выполнены перед вставкой элемента в базовый <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="20e45-206">This method allows implementers to define processes that must be performed before inserting the element into the underlying <see cref="T:System.Collections.Hashtable" />.</span></span> <span data-ttu-id="20e45-207">Определяя этот метод, разработчики могут добавлять функции к унаследованным методам, не переопределяя все остальные методы.</span><span class="sxs-lookup"><span data-stu-id="20e45-207">By defining this method, implementers can add functionality to inherited methods without having to override all other methods.</span></span>  
  
 <span data-ttu-id="20e45-208"><see cref="M:System.Collections.DictionaryBase.OnInsert(System.Object,System.Object)" /> вызывается до стандартного поведения вставки, тогда как <see cref="M:System.Collections.DictionaryBase.OnInsertComplete(System.Object,System.Object)" /> вызывается после стандартного поведения вставки.</span><span class="sxs-lookup"><span data-stu-id="20e45-208"><see cref="M:System.Collections.DictionaryBase.OnInsert(System.Object,System.Object)" /> is invoked before the standard Insert behavior, whereas <see cref="M:System.Collections.DictionaryBase.OnInsertComplete(System.Object,System.Object)" /> is invoked after the standard Insert behavior.</span></span>  
  
<span data-ttu-id="20e45-209">Например, разработчики могут ограничить типы объектов, которые могут быть вставлены в <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="20e45-209">For example, implementers can restrict which types of objects can be inserted into the <see cref="T:System.Collections.Hashtable" />.</span></span></para></block>
        <altmember cref="M:System.Collections.DictionaryBase.OnInsertComplete(System.Object,System.Object)" />
        <altmember cref="M:System.Collections.DictionaryBase.OnSet(System.Object,System.Object,System.Object)" />
        <altmember cref="M:System.Collections.DictionaryBase.OnValidate(System.Object,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="OnInsertComplete">
      <MemberSignature Language="C#" Value="protected virtual void OnInsertComplete (object key, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnInsertComplete(object key, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.DictionaryBase.OnInsertComplete(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnInsertComplete (key As Object, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnInsertComplete(System::Object ^ key, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member OnInsertComplete : obj * obj -&gt; unit&#xA;override this.OnInsertComplete : obj * obj -&gt; unit" Usage="dictionaryBase.OnInsertComplete (key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="20e45-210">Ключ элемента, который требуется вставить.</span><span class="sxs-lookup"><span data-stu-id="20e45-210">The key of the element to insert.</span></span></param>
        <param name="value"><span data-ttu-id="20e45-211">Значение элемента, который требуется вставить.</span><span class="sxs-lookup"><span data-stu-id="20e45-211">The value of the element to insert.</span></span></param>
        <summary><span data-ttu-id="20e45-212">Выполняет дополнительные пользовательские действия после вставки нового элемента в экземпляр класса <see cref="T:System.Collections.DictionaryBase" />.</span><span class="sxs-lookup"><span data-stu-id="20e45-212">Performs additional custom processes after inserting a new element into the <see cref="T:System.Collections.DictionaryBase" /> instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20e45-213">Реализация по умолчанию этого метода должна быть переопределена производным классом для выполнения некоторых действий после вставки указанного элемента.</span><span class="sxs-lookup"><span data-stu-id="20e45-213">The default implementation of this method is intended to be overridden by a derived class to perform some action after the specified element is inserted.</span></span>  
  
 <span data-ttu-id="20e45-214">Методы On \* вызываются только для экземпляра, возвращаемого свойством <xref:System.Collections.DictionaryBase.Dictionary%2A>, но не для экземпляра, возвращаемого свойством <xref:System.Collections.DictionaryBase.InnerHashtable%2A>.</span><span class="sxs-lookup"><span data-stu-id="20e45-214">The On\* methods are invoked only on the instance returned by the <xref:System.Collections.DictionaryBase.Dictionary%2A> property, but not on the instance returned by the <xref:System.Collections.DictionaryBase.InnerHashtable%2A> property.</span></span>  
  
 <span data-ttu-id="20e45-215">Реализация по умолчанию этого метода является операцией `O(1)`.</span><span class="sxs-lookup"><span data-stu-id="20e45-215">The default implementation of this method is an `O(1)` operation.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="20e45-216">Этот метод позволяет разработчикам определять процессы, которые должны быть выполнены после вставки элемента в базовый <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="20e45-216">This method allows implementers to define processes that must be performed after inserting the element into the underlying <see cref="T:System.Collections.Hashtable" />.</span></span> <span data-ttu-id="20e45-217">Определяя этот метод, разработчики могут добавлять функции к унаследованным методам, не переопределяя все остальные методы.</span><span class="sxs-lookup"><span data-stu-id="20e45-217">By defining this method, implementers can add functionality to inherited methods without having to override all other methods.</span></span>  
  
 <span data-ttu-id="20e45-218"><see cref="M:System.Collections.DictionaryBase.OnInsert(System.Object,System.Object)" /> вызывается до стандартного поведения вставки, тогда как <see cref="M:System.Collections.DictionaryBase.OnInsertComplete(System.Object,System.Object)" /> вызывается после стандартного поведения вставки.</span><span class="sxs-lookup"><span data-stu-id="20e45-218"><see cref="M:System.Collections.DictionaryBase.OnInsert(System.Object,System.Object)" /> is invoked before the standard Insert behavior, whereas <see cref="M:System.Collections.DictionaryBase.OnInsertComplete(System.Object,System.Object)" /> is invoked after the standard Insert behavior.</span></span></para></block>
        <altmember cref="M:System.Collections.DictionaryBase.OnInsert(System.Object,System.Object)" />
        <altmember cref="M:System.Collections.DictionaryBase.OnSetComplete(System.Object,System.Object,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="OnRemove">
      <MemberSignature Language="C#" Value="protected virtual void OnRemove (object key, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRemove(object key, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.DictionaryBase.OnRemove(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRemove (key As Object, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRemove(System::Object ^ key, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member OnRemove : obj * obj -&gt; unit&#xA;override this.OnRemove : obj * obj -&gt; unit" Usage="dictionaryBase.OnRemove (key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="20e45-219">Ключ элемента, который требуется удалить.</span><span class="sxs-lookup"><span data-stu-id="20e45-219">The key of the element to remove.</span></span></param>
        <param name="value"><span data-ttu-id="20e45-220">Значение элемента, который нужно удалить.</span><span class="sxs-lookup"><span data-stu-id="20e45-220">The value of the element to remove.</span></span></param>
        <summary><span data-ttu-id="20e45-221">Осуществляет дополнительные пользовательские действия перед удалением элемента из экземпляра класса <see cref="T:System.Collections.DictionaryBase" />.</span><span class="sxs-lookup"><span data-stu-id="20e45-221">Performs additional custom processes before removing an element from the <see cref="T:System.Collections.DictionaryBase" /> instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20e45-222">Реализация по умолчанию этого метода должна быть переопределена производным классом для выполнения некоторых действий перед удалением указанного элемента.</span><span class="sxs-lookup"><span data-stu-id="20e45-222">The default implementation of this method is intended to be overridden by a derived class to perform some action before the specified element is removed.</span></span>  
  
 <span data-ttu-id="20e45-223">Методы On \* вызываются только для экземпляра, возвращаемого свойством <xref:System.Collections.DictionaryBase.Dictionary%2A>, но не для экземпляра, возвращаемого свойством <xref:System.Collections.DictionaryBase.InnerHashtable%2A>.</span><span class="sxs-lookup"><span data-stu-id="20e45-223">The On\* methods are invoked only on the instance returned by the <xref:System.Collections.DictionaryBase.Dictionary%2A> property, but not on the instance returned by the <xref:System.Collections.DictionaryBase.InnerHashtable%2A> property.</span></span>  
  
 <span data-ttu-id="20e45-224">Реализация по умолчанию этого метода является операцией `O(1)`.</span><span class="sxs-lookup"><span data-stu-id="20e45-224">The default implementation of this method is an `O(1)` operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="20e45-225">В следующем примере кода реализуется класс <xref:System.Collections.DictionaryBase> и используется эта реализация для создания словаря <xref:System.String> ключей и значений, в которых <xref:System.String.Length%2A> 5 символов или меньше.</span><span class="sxs-lookup"><span data-stu-id="20e45-225">The following code example implements the <xref:System.Collections.DictionaryBase> class and uses that implementation to create a dictionary of <xref:System.String> keys and values that have a <xref:System.String.Length%2A> of 5 characters or less.</span></span>  
  
 [!code-cpp[System.Collections.DictionaryBase#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.DictionaryBase/CPP/dictionarybase.cpp#1)]
 [!code-csharp[System.Collections.DictionaryBase#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.DictionaryBase/CS/dictionarybase.cs#1)]
 [!code-vb[System.Collections.DictionaryBase#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.DictionaryBase/VB/dictionarybase.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="20e45-226">Этот метод позволяет разработчикам определять процессы, которые должны быть выполнены перед удалением элемента из базового <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="20e45-226">This method allows implementers to define processes that must be performed before removing the element from the underlying <see cref="T:System.Collections.Hashtable" />.</span></span> <span data-ttu-id="20e45-227">Определяя этот метод, разработчики могут добавлять функции к унаследованным методам, не переопределяя все остальные методы.</span><span class="sxs-lookup"><span data-stu-id="20e45-227">By defining this method, implementers can add functionality to inherited methods without having to override all other methods.</span></span>  
  
 <span data-ttu-id="20e45-228"><see cref="M:System.Collections.DictionaryBase.OnRemove(System.Object,System.Object)" /> вызывается перед стандартным поведением удаления, тогда как <see cref="M:System.Collections.DictionaryBase.OnRemoveComplete(System.Object,System.Object)" /> вызывается после стандартного поведения удаления.</span><span class="sxs-lookup"><span data-stu-id="20e45-228"><see cref="M:System.Collections.DictionaryBase.OnRemove(System.Object,System.Object)" /> is invoked before the standard Remove behavior, whereas <see cref="M:System.Collections.DictionaryBase.OnRemoveComplete(System.Object,System.Object)" /> is invoked after the standard Remove behavior.</span></span>  
  
<span data-ttu-id="20e45-229">Например, разработчики могут предотвратить удаление элементов, всегда вызывая исключение в <see cref="M:System.Collections.DictionaryBase.OnRemove(System.Object,System.Object)" />.</span><span class="sxs-lookup"><span data-stu-id="20e45-229">For example, implementers can prevent removal of elements by always throwing an exception in <see cref="M:System.Collections.DictionaryBase.OnRemove(System.Object,System.Object)" />.</span></span></para></block>
        <altmember cref="M:System.Collections.DictionaryBase.OnRemoveComplete(System.Object,System.Object)" />
        <altmember cref="M:System.Collections.DictionaryBase.OnClear" />
      </Docs>
    </Member>
    <Member MemberName="OnRemoveComplete">
      <MemberSignature Language="C#" Value="protected virtual void OnRemoveComplete (object key, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRemoveComplete(object key, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.DictionaryBase.OnRemoveComplete(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRemoveComplete (key As Object, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRemoveComplete(System::Object ^ key, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member OnRemoveComplete : obj * obj -&gt; unit&#xA;override this.OnRemoveComplete : obj * obj -&gt; unit" Usage="dictionaryBase.OnRemoveComplete (key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="20e45-230">Ключ элемента, который требуется удалить.</span><span class="sxs-lookup"><span data-stu-id="20e45-230">The key of the element to remove.</span></span></param>
        <param name="value"><span data-ttu-id="20e45-231">Значение элемента, который нужно удалить.</span><span class="sxs-lookup"><span data-stu-id="20e45-231">The value of the element to remove.</span></span></param>
        <summary><span data-ttu-id="20e45-232">Осуществляет дополнительные пользовательские действия после удаления элемента из экземпляра класса <see cref="T:System.Collections.DictionaryBase" />.</span><span class="sxs-lookup"><span data-stu-id="20e45-232">Performs additional custom processes after removing an element from the <see cref="T:System.Collections.DictionaryBase" /> instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20e45-233">Реализация по умолчанию этого метода должна быть переопределена производным классом для выполнения некоторых действий после удаления указанного элемента.</span><span class="sxs-lookup"><span data-stu-id="20e45-233">The default implementation of this method is intended to be overridden by a derived class to perform some action after the specified element is removed.</span></span>  
  
 <span data-ttu-id="20e45-234">Методы On \* вызываются только для экземпляра, возвращаемого свойством <xref:System.Collections.DictionaryBase.Dictionary%2A>, но не для экземпляра, возвращаемого свойством <xref:System.Collections.DictionaryBase.InnerHashtable%2A>.</span><span class="sxs-lookup"><span data-stu-id="20e45-234">The On\* methods are invoked only on the instance returned by the <xref:System.Collections.DictionaryBase.Dictionary%2A> property, but not on the instance returned by the <xref:System.Collections.DictionaryBase.InnerHashtable%2A> property.</span></span>  
  
 <span data-ttu-id="20e45-235">Реализация по умолчанию этого метода является операцией `O(1)`.</span><span class="sxs-lookup"><span data-stu-id="20e45-235">The default implementation of this method is an `O(1)` operation.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="20e45-236">Этот метод позволяет разработчикам определять процессы, которые должны быть выполнены после удаления элемента из базового <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="20e45-236">This method allows implementers to define processes that must be performed after removing the element from the underlying <see cref="T:System.Collections.Hashtable" />.</span></span> <span data-ttu-id="20e45-237">Определяя этот метод, разработчики могут добавлять функции к унаследованным методам, не переопределяя все остальные методы.</span><span class="sxs-lookup"><span data-stu-id="20e45-237">By defining this method, implementers can add functionality to inherited methods without having to override all other methods.</span></span>  
  
 <span data-ttu-id="20e45-238"><see cref="M:System.Collections.DictionaryBase.OnRemove(System.Object,System.Object)" /> вызывается перед стандартным поведением удаления, тогда как <see cref="M:System.Collections.DictionaryBase.OnRemoveComplete(System.Object,System.Object)" /> вызывается после стандартного поведения удаления.</span><span class="sxs-lookup"><span data-stu-id="20e45-238"><see cref="M:System.Collections.DictionaryBase.OnRemove(System.Object,System.Object)" /> is invoked before the standard Remove behavior, whereas <see cref="M:System.Collections.DictionaryBase.OnRemoveComplete(System.Object,System.Object)" /> is invoked after the standard Remove behavior.</span></span></para></block>
        <altmember cref="M:System.Collections.DictionaryBase.OnRemove(System.Object,System.Object)" />
        <altmember cref="M:System.Collections.DictionaryBase.OnClearComplete" />
      </Docs>
    </Member>
    <Member MemberName="OnSet">
      <MemberSignature Language="C#" Value="protected virtual void OnSet (object key, object oldValue, object newValue);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSet(object key, object oldValue, object newValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.DictionaryBase.OnSet(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSet (key As Object, oldValue As Object, newValue As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSet(System::Object ^ key, System::Object ^ oldValue, System::Object ^ newValue);" />
      <MemberSignature Language="F#" Value="abstract member OnSet : obj * obj * obj -&gt; unit&#xA;override this.OnSet : obj * obj * obj -&gt; unit" Usage="dictionaryBase.OnSet (key, oldValue, newValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
        <Parameter Name="oldValue" Type="System.Object" />
        <Parameter Name="newValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="20e45-239">Ключ элемента, который требуется найти.</span><span class="sxs-lookup"><span data-stu-id="20e45-239">The key of the element to locate.</span></span></param>
        <param name="oldValue"><span data-ttu-id="20e45-240">Прежнее значение элемента, связанного с параметром <paramref name="key" />.</span><span class="sxs-lookup"><span data-stu-id="20e45-240">The old value of the element associated with <paramref name="key" />.</span></span></param>
        <param name="newValue"><span data-ttu-id="20e45-241">Новое значение элемента, связанного с параметром <paramref name="key" />.</span><span class="sxs-lookup"><span data-stu-id="20e45-241">The new value of the element associated with <paramref name="key" />.</span></span></param>
        <summary><span data-ttu-id="20e45-242">Выполняет дополнительные пользовательские действия перед заданием значения в экземпляре класса <see cref="T:System.Collections.DictionaryBase" />.</span><span class="sxs-lookup"><span data-stu-id="20e45-242">Performs additional custom processes before setting a value in the <see cref="T:System.Collections.DictionaryBase" /> instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20e45-243">Реализация по умолчанию этого метода должна быть переопределена производным классом для выполнения некоторых действий до установки указанного элемента.</span><span class="sxs-lookup"><span data-stu-id="20e45-243">The default implementation of this method is intended to be overridden by a derived class to perform some action before the specified element is set.</span></span>  
  
 <span data-ttu-id="20e45-244">Методы On \* вызываются только для экземпляра, возвращаемого свойством <xref:System.Collections.DictionaryBase.Dictionary%2A>, но не для экземпляра, возвращаемого свойством <xref:System.Collections.DictionaryBase.InnerHashtable%2A>.</span><span class="sxs-lookup"><span data-stu-id="20e45-244">The On\* methods are invoked only on the instance returned by the <xref:System.Collections.DictionaryBase.Dictionary%2A> property, but not on the instance returned by the <xref:System.Collections.DictionaryBase.InnerHashtable%2A> property.</span></span>  
  
 <span data-ttu-id="20e45-245">Реализация по умолчанию этого метода является операцией `O(1)`.</span><span class="sxs-lookup"><span data-stu-id="20e45-245">The default implementation of this method is an `O(1)` operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="20e45-246">В следующем примере кода реализуется класс <xref:System.Collections.DictionaryBase> и используется эта реализация для создания словаря <xref:System.String> ключей и значений, в которых <xref:System.String.Length%2A> 5 символов или меньше.</span><span class="sxs-lookup"><span data-stu-id="20e45-246">The following code example implements the <xref:System.Collections.DictionaryBase> class and uses that implementation to create a dictionary of <xref:System.String> keys and values that have a <xref:System.String.Length%2A> of 5 characters or less.</span></span>  
  
 [!code-cpp[System.Collections.DictionaryBase#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.DictionaryBase/CPP/dictionarybase.cpp#1)]
 [!code-csharp[System.Collections.DictionaryBase#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.DictionaryBase/CS/dictionarybase.cs#1)]
 [!code-vb[System.Collections.DictionaryBase#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.DictionaryBase/VB/dictionarybase.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="20e45-247">Этот метод позволяет разработчикам определять процессы, которые должны быть выполнены перед заданием указанного элемента в базовом <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="20e45-247">This method allows implementers to define processes that must be performed before setting the specified element in the underlying <see cref="T:System.Collections.Hashtable" />.</span></span> <span data-ttu-id="20e45-248">Определяя этот метод, разработчики могут добавлять функции к унаследованным методам, не переопределяя все остальные методы.</span><span class="sxs-lookup"><span data-stu-id="20e45-248">By defining this method, implementers can add functionality to inherited methods without having to override all other methods.</span></span>  
  
 <span data-ttu-id="20e45-249"><see cref="M:System.Collections.DictionaryBase.OnSet(System.Object,System.Object,System.Object)" /> вызывается перед стандартным поведением набора, тогда как <see cref="M:System.Collections.DictionaryBase.OnSetComplete(System.Object,System.Object,System.Object)" /> вызывается после стандартного поведения набора.</span><span class="sxs-lookup"><span data-stu-id="20e45-249"><see cref="M:System.Collections.DictionaryBase.OnSet(System.Object,System.Object,System.Object)" /> is invoked before the standard Set behavior, whereas <see cref="M:System.Collections.DictionaryBase.OnSetComplete(System.Object,System.Object,System.Object)" /> is invoked after the standard Set behavior.</span></span>  
  
<span data-ttu-id="20e45-250">Например, разработчики могут ограничивать, какие значения могут быть перезаписаны, выполняя проверку в <see cref="M:System.Collections.DictionaryBase.OnSet(System.Object,System.Object,System.Object)" />.</span><span class="sxs-lookup"><span data-stu-id="20e45-250">For example, implementers can restrict which values can be overwritten by performing a check inside <see cref="M:System.Collections.DictionaryBase.OnSet(System.Object,System.Object,System.Object)" />.</span></span></para></block>
        <altmember cref="M:System.Collections.DictionaryBase.OnSetComplete(System.Object,System.Object,System.Object)" />
        <altmember cref="M:System.Collections.DictionaryBase.OnInsert(System.Object,System.Object)" />
        <altmember cref="M:System.Collections.DictionaryBase.OnValidate(System.Object,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="OnSetComplete">
      <MemberSignature Language="C#" Value="protected virtual void OnSetComplete (object key, object oldValue, object newValue);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSetComplete(object key, object oldValue, object newValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.DictionaryBase.OnSetComplete(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSetComplete (key As Object, oldValue As Object, newValue As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSetComplete(System::Object ^ key, System::Object ^ oldValue, System::Object ^ newValue);" />
      <MemberSignature Language="F#" Value="abstract member OnSetComplete : obj * obj * obj -&gt; unit&#xA;override this.OnSetComplete : obj * obj * obj -&gt; unit" Usage="dictionaryBase.OnSetComplete (key, oldValue, newValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
        <Parameter Name="oldValue" Type="System.Object" />
        <Parameter Name="newValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="20e45-251">Ключ элемента, который требуется найти.</span><span class="sxs-lookup"><span data-stu-id="20e45-251">The key of the element to locate.</span></span></param>
        <param name="oldValue"><span data-ttu-id="20e45-252">Прежнее значение элемента, связанного с параметром <paramref name="key" />.</span><span class="sxs-lookup"><span data-stu-id="20e45-252">The old value of the element associated with <paramref name="key" />.</span></span></param>
        <param name="newValue"><span data-ttu-id="20e45-253">Новое значение элемента, связанного с параметром <paramref name="key" />.</span><span class="sxs-lookup"><span data-stu-id="20e45-253">The new value of the element associated with <paramref name="key" />.</span></span></param>
        <summary><span data-ttu-id="20e45-254">Выполняет дополнительные пользовательские действия после задания значения в экземпляре класса <see cref="T:System.Collections.DictionaryBase" />.</span><span class="sxs-lookup"><span data-stu-id="20e45-254">Performs additional custom processes after setting a value in the <see cref="T:System.Collections.DictionaryBase" /> instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20e45-255">Реализация по умолчанию этого метода должна быть переопределена производным классом для выполнения некоторых действий после установки указанного элемента.</span><span class="sxs-lookup"><span data-stu-id="20e45-255">The default implementation of this method is intended to be overridden by a derived class to perform some action after the specified element is set.</span></span>  
  
 <span data-ttu-id="20e45-256">Методы On \* вызываются только для экземпляра, возвращаемого свойством <xref:System.Collections.DictionaryBase.Dictionary%2A>, но не для экземпляра, возвращаемого свойством <xref:System.Collections.DictionaryBase.InnerHashtable%2A>.</span><span class="sxs-lookup"><span data-stu-id="20e45-256">The On\* methods are invoked only on the instance returned by the <xref:System.Collections.DictionaryBase.Dictionary%2A> property, but not on the instance returned by the <xref:System.Collections.DictionaryBase.InnerHashtable%2A> property.</span></span>  
  
 <span data-ttu-id="20e45-257">Реализация по умолчанию этого метода является операцией `O(1)`.</span><span class="sxs-lookup"><span data-stu-id="20e45-257">The default implementation of this method is an `O(1)` operation.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="20e45-258">Этот метод позволяет разработчикам определять процессы, которые должны быть выполнены после задания указанного элемента в базовом <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="20e45-258">This method allows implementers to define processes that must be performed after setting the specified element in the underlying <see cref="T:System.Collections.Hashtable" />.</span></span> <span data-ttu-id="20e45-259">Определяя этот метод, разработчики могут добавлять функции к унаследованным методам, не переопределяя все остальные методы.</span><span class="sxs-lookup"><span data-stu-id="20e45-259">By defining this method, implementers can add functionality to inherited methods without having to override all other methods.</span></span>  
  
 <span data-ttu-id="20e45-260"><see cref="M:System.Collections.DictionaryBase.OnSet(System.Object,System.Object,System.Object)" /> вызывается перед стандартным поведением набора, тогда как <see cref="M:System.Collections.DictionaryBase.OnSetComplete(System.Object,System.Object,System.Object)" /> вызывается после стандартного поведения набора.</span><span class="sxs-lookup"><span data-stu-id="20e45-260"><see cref="M:System.Collections.DictionaryBase.OnSet(System.Object,System.Object,System.Object)" /> is invoked before the standard Set behavior, whereas <see cref="M:System.Collections.DictionaryBase.OnSetComplete(System.Object,System.Object,System.Object)" /> is invoked after the standard Set behavior.</span></span></para></block>
        <altmember cref="M:System.Collections.DictionaryBase.OnSet(System.Object,System.Object,System.Object)" />
        <altmember cref="M:System.Collections.DictionaryBase.OnInsertComplete(System.Object,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="OnValidate">
      <MemberSignature Language="C#" Value="protected virtual void OnValidate (object key, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnValidate(object key, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.DictionaryBase.OnValidate(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnValidate (key As Object, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnValidate(System::Object ^ key, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member OnValidate : obj * obj -&gt; unit&#xA;override this.OnValidate : obj * obj -&gt; unit" Usage="dictionaryBase.OnValidate (key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="20e45-261">Ключ элемента, который требуется проверить.</span><span class="sxs-lookup"><span data-stu-id="20e45-261">The key of the element to validate.</span></span></param>
        <param name="value"><span data-ttu-id="20e45-262">Значение элемента, который требуется проверить.</span><span class="sxs-lookup"><span data-stu-id="20e45-262">The value of the element to validate.</span></span></param>
        <summary><span data-ttu-id="20e45-263">Выполняет дополнительные пользовательские операции при проверке элемента с указанными ключом и значением.</span><span class="sxs-lookup"><span data-stu-id="20e45-263">Performs additional custom processes when validating the element with the specified key and value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20e45-264">Реализация по умолчанию этого метода должна быть переопределена производным классом для выполнения некоторых действий при проверке указанного элемента.</span><span class="sxs-lookup"><span data-stu-id="20e45-264">The default implementation of this method is intended to be overridden by a derived class to perform some action when the specified element is validated.</span></span>  
  
 <span data-ttu-id="20e45-265">Методы On \* вызываются только для экземпляра, возвращаемого свойством <xref:System.Collections.DictionaryBase.Dictionary%2A>, но не для экземпляра, возвращаемого свойством <xref:System.Collections.DictionaryBase.InnerHashtable%2A>.</span><span class="sxs-lookup"><span data-stu-id="20e45-265">The On\* methods are invoked only on the instance returned by the <xref:System.Collections.DictionaryBase.Dictionary%2A> property, but not on the instance returned by the <xref:System.Collections.DictionaryBase.InnerHashtable%2A> property.</span></span>  
  
 <span data-ttu-id="20e45-266">Реализация по умолчанию этого метода является операцией `O(1)`.</span><span class="sxs-lookup"><span data-stu-id="20e45-266">The default implementation of this method is an `O(1)` operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="20e45-267">В следующем примере кода реализуется класс <xref:System.Collections.DictionaryBase> и используется эта реализация для создания словаря <xref:System.String> ключей и значений, в которых <xref:System.String.Length%2A> 5 символов или меньше.</span><span class="sxs-lookup"><span data-stu-id="20e45-267">The following code example implements the <xref:System.Collections.DictionaryBase> class and uses that implementation to create a dictionary of <xref:System.String> keys and values that have a <xref:System.String.Length%2A> of 5 characters or less.</span></span>  
  
 [!code-cpp[System.Collections.DictionaryBase#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.DictionaryBase/CPP/dictionarybase.cpp#1)]
 [!code-csharp[System.Collections.DictionaryBase#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.DictionaryBase/CS/dictionarybase.cs#1)]
 [!code-vb[System.Collections.DictionaryBase#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.DictionaryBase/VB/dictionarybase.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="20e45-268">Этот метод позволяет разработчикам определять процессы, которые должны выполняться при выполнении стандартного поведения базового <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="20e45-268">This method allows implementers to define processes that must be performed when executing the standard behavior of the underlying <see cref="T:System.Collections.Hashtable" />.</span></span> <span data-ttu-id="20e45-269">Определяя этот метод, разработчики могут добавлять функции к унаследованным методам, не переопределяя все остальные методы.</span><span class="sxs-lookup"><span data-stu-id="20e45-269">By defining this method, implementers can add functionality to inherited methods without having to override all other methods.</span></span>  
  
 <span data-ttu-id="20e45-270"><see cref="M:System.Collections.DictionaryBase.OnValidate(System.Object,System.Object)" /> можно использовать для наложения ограничений на тип объектов, которые принимаются в коллекции.</span><span class="sxs-lookup"><span data-stu-id="20e45-270"><see cref="M:System.Collections.DictionaryBase.OnValidate(System.Object,System.Object)" /> can be used to impose restrictions on the type of objects that are accepted into the collection.</span></span> <span data-ttu-id="20e45-271">Реализация по умолчанию предотвращает добавление или удаление <see langword="null" /> из базового <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="20e45-271">The default implementation prevents <see langword="null" /> from being added to or removed from the underlying <see cref="T:System.Collections.Hashtable" />.</span></span></para></block>
        <altmember cref="M:System.Collections.DictionaryBase.OnSet(System.Object,System.Object,System.Object)" />
        <altmember cref="M:System.Collections.DictionaryBase.OnInsert(System.Object,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Collections.DictionaryBase.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::ICollection::IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="20e45-272">Возвращает значение, указывающее на то, является ли доступ к объекту <see cref="T:System.Collections.DictionaryBase" /> синхронизированным (потокобезопасным).</span><span class="sxs-lookup"><span data-stu-id="20e45-272">Gets a value indicating whether access to a <see cref="T:System.Collections.DictionaryBase" /> object is synchronized (thread safe).</span></span></summary>
        <value><span data-ttu-id="20e45-273">Значение <see langword="true" />, если доступ к объекту <see cref="T:System.Collections.DictionaryBase" /> является синхронизированным (потокобезопасным); в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="20e45-273"><see langword="true" /> if access to the <see cref="T:System.Collections.DictionaryBase" /> object is synchronized (thread safe); otherwise, <see langword="false" />.</span></span> <span data-ttu-id="20e45-274">Значение по умолчанию — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="20e45-274">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20e45-275">Объект <xref:System.Collections.DictionaryBase> не синхронизирован.</span><span class="sxs-lookup"><span data-stu-id="20e45-275">A <xref:System.Collections.DictionaryBase> object is not synchronized.</span></span> <span data-ttu-id="20e45-276">Производные классы могут предоставлять синхронизированную версию класса <xref:System.Collections.DictionaryBase> с помощью свойства <xref:System.Collections.ICollection.SyncRoot%2A>.</span><span class="sxs-lookup"><span data-stu-id="20e45-276">Derived classes can provide a synchronized version of the <xref:System.Collections.DictionaryBase> class using the <xref:System.Collections.ICollection.SyncRoot%2A> property.</span></span>  
  
 <span data-ttu-id="20e45-277">Перечисление коллекции не является потокобезопасной процедурой.</span><span class="sxs-lookup"><span data-stu-id="20e45-277">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="20e45-278">Даже если коллекция синхронизирована, другие потоки могут ее изменить, что приведет к тому, что перечислитель создаст исключение.</span><span class="sxs-lookup"><span data-stu-id="20e45-278">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="20e45-279">Для обеспечения потокобезопасности при перечислении можно либо заблокировать коллекцию на все время перечисления, либо перехватывать исключения, возникающие в результате изменений, внесенных другими потоками.</span><span class="sxs-lookup"><span data-stu-id="20e45-279">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="20e45-280">В следующем примере кода показано, как заблокировать коллекцию с помощью свойства <xref:System.Collections.ICollection.SyncRoot%2A> во всем перечислении.</span><span class="sxs-lookup"><span data-stu-id="20e45-280">The following code example shows how to lock the collection using the <xref:System.Collections.ICollection.SyncRoot%2A> property during the entire enumeration.</span></span>  
  
 [!code-cpp[System.Collections.DictionaryBase#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.DictionaryBase/CPP/source2.cpp#3)]
 [!code-csharp[System.Collections.DictionaryBase#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.DictionaryBase/CS/source2.cs#3)]
 [!code-vb[System.Collections.DictionaryBase#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.DictionaryBase/VB/source2.vb#3)]  
  
 <span data-ttu-id="20e45-281">Получение значения этого свойства является операцией `O(1)`.</span><span class="sxs-lookup"><span data-stu-id="20e45-281">Retrieving the value of this property is an `O(1)` operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Hashtable.Synchronized(System.Collections.Hashtable)" />
        <altmember cref="P:System.Collections.ICollection.SyncRoot" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Collections.DictionaryBase.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::ICollection::SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="20e45-282">Получает объект, который позволяет синхронизировать доступ к объекту <see cref="T:System.Collections.DictionaryBase" />.</span><span class="sxs-lookup"><span data-stu-id="20e45-282">Gets an object that can be used to synchronize access to a <see cref="T:System.Collections.DictionaryBase" /> object.</span></span></summary>
        <value><span data-ttu-id="20e45-283">Объект, который позволяет синхронизировать доступ к объекту <see cref="T:System.Collections.DictionaryBase" />.</span><span class="sxs-lookup"><span data-stu-id="20e45-283">An object that can be used to synchronize access to the <see cref="T:System.Collections.DictionaryBase" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20e45-284">Производные классы могут предоставлять собственную синхронизированную версию класса <xref:System.Collections.DictionaryBase> с помощью свойства <xref:System.Collections.ICollection.SyncRoot%2A>.</span><span class="sxs-lookup"><span data-stu-id="20e45-284">Derived classes can provide their own synchronized version of the <xref:System.Collections.DictionaryBase> class using the <xref:System.Collections.ICollection.SyncRoot%2A> property.</span></span> <span data-ttu-id="20e45-285">Синхронизирующий код должен выполнять операции со свойством <xref:System.Collections.ICollection.SyncRoot%2A> объекта <xref:System.Collections.DictionaryBase>, а не непосредственно с объектом <xref:System.Collections.DictionaryBase>.</span><span class="sxs-lookup"><span data-stu-id="20e45-285">The synchronizing code must perform operations on the <xref:System.Collections.ICollection.SyncRoot%2A> property of the <xref:System.Collections.DictionaryBase> object, not directly on the <xref:System.Collections.DictionaryBase> object.</span></span> <span data-ttu-id="20e45-286">Это обеспечивает правильную работу коллекций, являющихся производными других объектов.</span><span class="sxs-lookup"><span data-stu-id="20e45-286">This ensures proper operation of collections that are derived from other objects.</span></span> <span data-ttu-id="20e45-287">В частности, он поддерживает правильную синхронизацию с другими потоками, которые могут одновременно изменять объект <xref:System.Collections.DictionaryBase>.</span><span class="sxs-lookup"><span data-stu-id="20e45-287">Specifically, it maintains proper synchronization with other threads that might be simultaneously modifying the <xref:System.Collections.DictionaryBase> object.</span></span>  
  
 <span data-ttu-id="20e45-288">Перечисление коллекции не является потокобезопасной процедурой.</span><span class="sxs-lookup"><span data-stu-id="20e45-288">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="20e45-289">Даже если коллекция синхронизирована, другие потоки могут ее изменить, что приведет к тому, что перечислитель создаст исключение.</span><span class="sxs-lookup"><span data-stu-id="20e45-289">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="20e45-290">Для обеспечения потокобезопасности при перечислении можно либо заблокировать коллекцию на все время перечисления, либо перехватывать исключения, возникающие в результате изменений, внесенных другими потоками.</span><span class="sxs-lookup"><span data-stu-id="20e45-290">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="20e45-291">В следующем примере кода показано, как заблокировать коллекцию с помощью свойства <xref:System.Collections.ICollection.SyncRoot%2A> во всем перечислении.</span><span class="sxs-lookup"><span data-stu-id="20e45-291">The following code example shows how to lock the collection using the <xref:System.Collections.ICollection.SyncRoot%2A> property during the entire enumeration.</span></span>  
  
 [!code-cpp[System.Collections.DictionaryBase#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.DictionaryBase/CPP/source2.cpp#3)]
 [!code-csharp[System.Collections.DictionaryBase#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.DictionaryBase/CS/source2.cs#3)]
 [!code-vb[System.Collections.DictionaryBase#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.DictionaryBase/VB/source2.vb#3)]  
  
 <span data-ttu-id="20e45-292">Получение значения этого свойства является операцией `O(1)`.</span><span class="sxs-lookup"><span data-stu-id="20e45-292">Retrieving the value of this property is an `O(1)` operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ICollection.IsSynchronized" />
        <altmember cref="M:System.Collections.Hashtable.Synchronized(System.Collections.Hashtable)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.Add">
      <MemberSignature Language="C#" Value="void IDictionary.Add (object key, object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IDictionary.Add(object key, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.DictionaryBase.System#Collections#IDictionary#Add(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Add (key As Object, value As Object) Implements IDictionary.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IDictionary.Add(System::Object ^ key, System::Object ^ value) = System::Collections::IDictionary::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.Add(System.Object,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="20e45-293">Ключ добавляемого элемента.</span><span class="sxs-lookup"><span data-stu-id="20e45-293">The key of the element to add.</span></span></param>
        <param name="value"><span data-ttu-id="20e45-294">Добавляемое значение элемента.</span><span class="sxs-lookup"><span data-stu-id="20e45-294">The value of the element to add.</span></span></param>
        <summary><span data-ttu-id="20e45-295">Добавляет элемент с указанными ключом и значением в словарь <see cref="T:System.Collections.DictionaryBase" />.</span><span class="sxs-lookup"><span data-stu-id="20e45-295">Adds an element with the specified key and value into the <see cref="T:System.Collections.DictionaryBase" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20e45-296">Объект, не имеющий корреляции между его состоянием и значением хэш-кода, обычно не должен использоваться в качестве ключа.</span><span class="sxs-lookup"><span data-stu-id="20e45-296">An object that has no correlation between its state and its hash code value should typically not be used as the key.</span></span> <span data-ttu-id="20e45-297">Например, <xref:System.String> объекты лучше, чем <xref:System.Text.StringBuilder> объекты для использования в качестве ключей.</span><span class="sxs-lookup"><span data-stu-id="20e45-297">For example, <xref:System.String> objects are better than <xref:System.Text.StringBuilder> objects for use as keys.</span></span>  
  
 <span data-ttu-id="20e45-298">Можно также использовать свойство <xref:System.Collections.IDictionary.Item%2A>, чтобы добавить новые элементы, задав значение ключа, который не существует в <xref:System.Collections.DictionaryBase>; Например, `myCollection["myNonexistentKey"] = myValue`.</span><span class="sxs-lookup"><span data-stu-id="20e45-298">You can also use the <xref:System.Collections.IDictionary.Item%2A> property to add new elements by setting the value of a key that does not exist in the <xref:System.Collections.DictionaryBase>; for example, `myCollection["myNonexistentKey"] = myValue`.</span></span> <span data-ttu-id="20e45-299">Однако если указанный ключ уже существует в <xref:System.Collections.DictionaryBase>, установка свойства <xref:System.Collections.IDictionary.Item%2A> перезаписывает старое значение.</span><span class="sxs-lookup"><span data-stu-id="20e45-299">However, if the specified key already exists in the <xref:System.Collections.DictionaryBase>, setting the <xref:System.Collections.IDictionary.Item%2A> property overwrites the old value.</span></span> <span data-ttu-id="20e45-300">В отличие от этого, метод <xref:System.Collections.IDictionary.Add%2A> не изменяет существующие элементы.</span><span class="sxs-lookup"><span data-stu-id="20e45-300">In contrast, the <xref:System.Collections.IDictionary.Add%2A> method does not modify existing elements.</span></span>  
  
 <span data-ttu-id="20e45-301">Этот метод является операцией `O(1)`.</span><span class="sxs-lookup"><span data-stu-id="20e45-301">This method is an `O(1)` operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="20e45-302">В следующем примере кода реализуется класс <xref:System.Collections.DictionaryBase> и используется эта реализация для создания словаря <xref:System.String> ключей и значений, в которых <xref:System.String.Length%2A> 5 символов или меньше.</span><span class="sxs-lookup"><span data-stu-id="20e45-302">The following code example implements the <xref:System.Collections.DictionaryBase> class and uses that implementation to create a dictionary of <xref:System.String> keys and values that have a <xref:System.String.Length%2A> of 5 characters or less.</span></span>  
  
 [!code-cpp[System.Collections.DictionaryBase#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.DictionaryBase/CPP/dictionarybase.cpp#1)]
 [!code-csharp[System.Collections.DictionaryBase#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.DictionaryBase/CS/dictionarybase.cs#1)]
 [!code-vb[System.Collections.DictionaryBase#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.DictionaryBase/VB/dictionarybase.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="20e45-303">Свойство <paramref name="key" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="20e45-303"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="20e45-304">Элемент с таким ключом уже существует в <see cref="T:System.Collections.DictionaryBase" />.</span><span class="sxs-lookup"><span data-stu-id="20e45-304">An element with the same key already exists in the <see cref="T:System.Collections.DictionaryBase" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="20e45-305">Объект <see cref="T:System.Collections.DictionaryBase" /> доступен только для чтения.</span><span class="sxs-lookup"><span data-stu-id="20e45-305">The <see cref="T:System.Collections.DictionaryBase" /> is read-only.</span></span>  
  
<span data-ttu-id="20e45-306">- или -</span><span class="sxs-lookup"><span data-stu-id="20e45-306">-or-</span></span> 
<span data-ttu-id="20e45-307"><see cref="T:System.Collections.DictionaryBase" /> имеет фиксированный размер.</span><span class="sxs-lookup"><span data-stu-id="20e45-307">The <see cref="T:System.Collections.DictionaryBase" /> has a fixed size.</span></span></exception>
        <altmember cref="M:System.Collections.IDictionary.Remove(System.Object)" />
        <altmember cref="P:System.Collections.IDictionary.Item(System.Object)" />
        <altmember cref="M:System.Collections.IDictionary.Add(System.Object,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.Contains">
      <MemberSignature Language="C#" Value="bool IDictionary.Contains (object key);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IDictionary.Contains(object key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.DictionaryBase.System#Collections#IDictionary#Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (key As Object) As Boolean Implements IDictionary.Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IDictionary.Contains(System::Object ^ key) = System::Collections::IDictionary::Contains;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="20e45-308">Ключ, который требуется найти в <see cref="T:System.Collections.DictionaryBase" />.</span><span class="sxs-lookup"><span data-stu-id="20e45-308">The key to locate in the <see cref="T:System.Collections.DictionaryBase" />.</span></span></param>
        <summary><span data-ttu-id="20e45-309">Определяет, содержит ли объект <see cref="T:System.Collections.DictionaryBase" /> указанный ключ.</span><span class="sxs-lookup"><span data-stu-id="20e45-309">Determines whether the <see cref="T:System.Collections.DictionaryBase" /> contains a specific key.</span></span></summary>
        <returns><span data-ttu-id="20e45-310"><see langword="true" />, если <see cref="T:System.Collections.DictionaryBase" /> содержит элемент с указанным ключом, в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="20e45-310"><see langword="true" /> if the <see cref="T:System.Collections.DictionaryBase" /> contains an element with the specified key; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20e45-311">Этот метод является операцией `O(1)`.</span><span class="sxs-lookup"><span data-stu-id="20e45-311">This method is an `O(1)` operation.</span></span>  
  
 <span data-ttu-id="20e45-312">Начиная с .NET Framework 2,0, этот метод использует методы <xref:System.Object.Equals%2A> и <xref:System.IComparable.CompareTo%2A> коллекции для `key`, чтобы определить, существует ли `item`.</span><span class="sxs-lookup"><span data-stu-id="20e45-312">Starting with the .NET Framework 2.0, this method uses the collection's objects' <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `key` to determine whether `item` exists.</span></span> <span data-ttu-id="20e45-313">В более ранних версиях .NET Framework это определение было выполнено с помощью методов <xref:System.Object.Equals%2A> и <xref:System.IComparable.CompareTo%2A> параметра `key` для объектов в коллекции.</span><span class="sxs-lookup"><span data-stu-id="20e45-313">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `key` parameter on the objects in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="20e45-314">В следующем примере кода реализуется класс <xref:System.Collections.DictionaryBase> и используется эта реализация для создания словаря <xref:System.String> ключей и значений, в которых <xref:System.String.Length%2A> 5 символов или меньше.</span><span class="sxs-lookup"><span data-stu-id="20e45-314">The following code example implements the <xref:System.Collections.DictionaryBase> class and uses that implementation to create a dictionary of <xref:System.String> keys and values that have a <xref:System.String.Length%2A> of 5 characters or less.</span></span>  
  
 [!code-cpp[System.Collections.DictionaryBase#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.DictionaryBase/CPP/dictionarybase.cpp#1)]
 [!code-csharp[System.Collections.DictionaryBase#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.DictionaryBase/CS/dictionarybase.cs#1)]
 [!code-vb[System.Collections.DictionaryBase#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.DictionaryBase/VB/dictionarybase.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="20e45-315"><paramref name="key" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="20e45-315"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations.md"><span data-ttu-id="20e45-316">Выполнение строковых операций, не зависящих от языка и региональных параметров</span><span class="sxs-lookup"><span data-stu-id="20e45-316">Performing Culture-Insensitive String Operations</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IDictionary.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IDictionary.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Collections.DictionaryBase.System#Collections#IDictionary#IsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsFixedSize As Boolean Implements IDictionary.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::IDictionary::IsFixedSize { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IDictionary.IsFixedSize" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="20e45-317">Получает значение, показывающее, имеет ли объект <see cref="T:System.Collections.DictionaryBase" /> фиксированный размер.</span><span class="sxs-lookup"><span data-stu-id="20e45-317">Gets a value indicating whether a <see cref="T:System.Collections.DictionaryBase" /> object has a fixed size.</span></span></summary>
        <value><span data-ttu-id="20e45-318"><see langword="true" />, если объект <see cref="T:System.Collections.DictionaryBase" /> имеет фиксированный размер, в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="20e45-318"><see langword="true" /> if the <see cref="T:System.Collections.DictionaryBase" /> object has a fixed size; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="20e45-319">Значение по умолчанию — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="20e45-319">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20e45-320">Коллекция с фиксированным размером не допускает добавление или удаление элементов после создания коллекции, но позволяет изменять существующие элементы.</span><span class="sxs-lookup"><span data-stu-id="20e45-320">A collection with a fixed size does not allow the addition or removal of elements after the collection is created, but does allow the modification of existing elements.</span></span>  
  
 <span data-ttu-id="20e45-321">Коллекция с фиксированным размером — это просто коллекция с оболочкой, которая предотвращает добавление и удаление элементов. Таким образом, если в базовую коллекцию вносятся изменения, включая добавление или удаление элементов, Коллекция фиксированного размера отражает эти изменения.</span><span class="sxs-lookup"><span data-stu-id="20e45-321">A collection with a fixed size is simply a collection with a wrapper that prevents adding and removing elements; therefore, if changes are made to the underlying collection, including the addition or removal of elements, the fixed-size collection reflects those changes.</span></span>  
  
 <span data-ttu-id="20e45-322">Получение значения этого свойства является операцией `O(1)`.</span><span class="sxs-lookup"><span data-stu-id="20e45-322">Retrieving the value of this property is an `O(1)` operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.IDictionary.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IDictionary.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Collections.DictionaryBase.System#Collections#IDictionary#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements IDictionary.IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::IDictionary::IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IDictionary.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="20e45-323">Возвращает значение, указывающее, является ли объект <see cref="T:System.Collections.DictionaryBase" /> доступным только для чтения.</span><span class="sxs-lookup"><span data-stu-id="20e45-323">Gets a value indicating whether a <see cref="T:System.Collections.DictionaryBase" /> object is read-only.</span></span></summary>
        <value><span data-ttu-id="20e45-324">Значение <see langword="true" />, если объект <see cref="T:System.Collections.DictionaryBase" /> доступен только для чтения; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="20e45-324"><see langword="true" /> if the <see cref="T:System.Collections.DictionaryBase" /> object is read-only; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="20e45-325">Значение по умолчанию — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="20e45-325">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20e45-326">После создания коллекции, доступной только для чтения, не разрешается добавление элементов в коллекцию, их изменение или удаление.</span><span class="sxs-lookup"><span data-stu-id="20e45-326">A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.</span></span>  
  
 <span data-ttu-id="20e45-327">Коллекция, доступная только для чтения, — это просто коллекция с оболочкой, которая предотвращает изменение коллекции. Таким образом, если в базовую коллекцию вносятся изменения, то эти изменения отражаются в коллекции только для чтения.</span><span class="sxs-lookup"><span data-stu-id="20e45-327">A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.</span></span>  
  
 <span data-ttu-id="20e45-328">Получение значения этого свойства является операцией `O(1)`.</span><span class="sxs-lookup"><span data-stu-id="20e45-328">Retrieving the value of this property is an `O(1)` operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IDictionary.Item[object key] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IDictionary.Item(object)" />
      <MemberSignature Language="DocId" Value="P:System.Collections.DictionaryBase.System#Collections#IDictionary#Item(System.Object)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(key As Object) As Object Implements IDictionary.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::IDictionary::Item[System::Object ^] { System::Object ^ get(System::Object ^ key); void set(System::Object ^ key, System::Object ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IDictionary.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.Item(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="20e45-329">Задаваемое или получаемое значение ключа.</span><span class="sxs-lookup"><span data-stu-id="20e45-329">The key whose value to get or set.</span></span></param>
        <summary><span data-ttu-id="20e45-330">Получает или задает значение, связанное с заданным ключом.</span><span class="sxs-lookup"><span data-stu-id="20e45-330">Gets or sets the value associated with the specified key.</span></span></summary>
        <value><span data-ttu-id="20e45-331">Значение, связанное с указанным ключом.</span><span class="sxs-lookup"><span data-stu-id="20e45-331">The value associated with the specified key.</span></span> <span data-ttu-id="20e45-332">Если указанный ключ не найден, при попытке его получения возвращается значение <see langword="null" />, а при попытке задания ключа создается новый элемент с использованием указанного ключа.</span><span class="sxs-lookup"><span data-stu-id="20e45-332">If the specified key is not found, attempting to get it returns <see langword="null" />, and attempting to set it creates a new element using the specified key.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20e45-333">Это свойство предоставляет доступ к указанному элементу коллекции при использовании следующего синтаксиса: `myCollection[key]`.</span><span class="sxs-lookup"><span data-stu-id="20e45-333">This property provides the ability to access a specific element in the collection by using the following syntax: `myCollection[key]`.</span></span>  
  
 <span data-ttu-id="20e45-334">Можно также использовать свойство <xref:System.Collections.IDictionary.Item%2A>, чтобы добавить новые элементы, задав значение ключа, который не существует в <xref:System.Collections.DictionaryBase>; Например, `myCollection["myNonexistentKey"] = myValue`.</span><span class="sxs-lookup"><span data-stu-id="20e45-334">You can also use the <xref:System.Collections.IDictionary.Item%2A> property to add new elements by setting the value of a key that does not exist in the <xref:System.Collections.DictionaryBase>; for example, `myCollection["myNonexistentKey"] = myValue`.</span></span> <span data-ttu-id="20e45-335">Однако если указанный ключ уже существует в <xref:System.Collections.DictionaryBase>, установка свойства <xref:System.Collections.IDictionary.Item%2A> перезаписывает старое значение.</span><span class="sxs-lookup"><span data-stu-id="20e45-335">However, if the specified key already exists in the <xref:System.Collections.DictionaryBase>, setting the <xref:System.Collections.IDictionary.Item%2A> property overwrites the old value.</span></span> <span data-ttu-id="20e45-336">В отличие от этого, метод <xref:System.Collections.IDictionary.Add%2A> не изменяет существующие элементы.</span><span class="sxs-lookup"><span data-stu-id="20e45-336">In contrast, the <xref:System.Collections.IDictionary.Add%2A> method does not modify existing elements.</span></span>  
  
 <span data-ttu-id="20e45-337">Получение значения этого свойства является операцией `O(1)`; Задание свойства также является операцией `O(1)`.</span><span class="sxs-lookup"><span data-stu-id="20e45-337">Retrieving the value of this property is an `O(1)` operation; setting the property is also an `O(1)` operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="20e45-338">В следующем примере кода реализуется класс <xref:System.Collections.DictionaryBase> и используется эта реализация для создания словаря <xref:System.String> ключей и значений, в которых <xref:System.String.Length%2A> 5 символов или меньше.</span><span class="sxs-lookup"><span data-stu-id="20e45-338">The following code example implements the <xref:System.Collections.DictionaryBase> class and uses that implementation to create a dictionary of <xref:System.String> keys and values that have a <xref:System.String.Length%2A> of 5 characters or less.</span></span>  
  
 [!code-cpp[System.Collections.DictionaryBase#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.DictionaryBase/CPP/dictionarybase.cpp#1)]
 [!code-csharp[System.Collections.DictionaryBase#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.DictionaryBase/CS/dictionarybase.cs#1)]
 [!code-vb[System.Collections.DictionaryBase#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.DictionaryBase/VB/dictionarybase.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="20e45-339">Свойство <paramref name="key" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="20e45-339"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="20e45-340">Свойство задано, и список <see cref="T:System.Collections.DictionaryBase" /> доступен только для чтения.</span><span class="sxs-lookup"><span data-stu-id="20e45-340">The property is set and the <see cref="T:System.Collections.DictionaryBase" /> is read-only.</span></span>  
  
<span data-ttu-id="20e45-341">- или -</span><span class="sxs-lookup"><span data-stu-id="20e45-341">-or-</span></span> 
<span data-ttu-id="20e45-342">Свойство задано, <paramref name="key" /> не существует в коллекции, а <see cref="T:System.Collections.DictionaryBase" /> имеет фиксированный размер.</span><span class="sxs-lookup"><span data-stu-id="20e45-342">The property is set, <paramref name="key" /> does not exist in the collection, and the <see cref="T:System.Collections.DictionaryBase" /> has a fixed size.</span></span></exception>
        <altmember cref="M:System.Collections.IDictionary.Add(System.Object,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.Keys">
      <MemberSignature Language="C#" Value="System.Collections.ICollection System.Collections.IDictionary.Keys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection System.Collections.IDictionary.Keys" />
      <MemberSignature Language="DocId" Value="P:System.Collections.DictionaryBase.System#Collections#IDictionary#Keys" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Keys As ICollection Implements IDictionary.Keys" />
      <MemberSignature Language="C++ CLI" Value="property System::Collections::ICollection ^ System::Collections::IDictionary::Keys { System::Collections::ICollection ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IDictionary.Keys" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.Keys</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="20e45-343">Получает объект <see cref="T:System.Collections.ICollection" />, содержащий ключи из объекта <see cref="T:System.Collections.DictionaryBase" />.</span><span class="sxs-lookup"><span data-stu-id="20e45-343">Gets an <see cref="T:System.Collections.ICollection" /> object containing the keys in the <see cref="T:System.Collections.DictionaryBase" /> object.</span></span></summary>
        <value><span data-ttu-id="20e45-344">Объект <see cref="T:System.Collections.ICollection" />, содержащий ключи из объекта <see cref="T:System.Collections.DictionaryBase" />.</span><span class="sxs-lookup"><span data-stu-id="20e45-344">An <see cref="T:System.Collections.ICollection" /> object containing the keys in the <see cref="T:System.Collections.DictionaryBase" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20e45-345">Порядок ключей в объекте <xref:System.Collections.ICollection> не задан, но совпадает с порядком значений в объекте <xref:System.Collections.ICollection>, возвращенном свойством <xref:System.Collections.IDictionary.Values%2A>.</span><span class="sxs-lookup"><span data-stu-id="20e45-345">The order of the keys in the <xref:System.Collections.ICollection> object is unspecified, but is the same order as the associated values in the <xref:System.Collections.ICollection> object returned by the <xref:System.Collections.IDictionary.Values%2A> property.</span></span>  
  
 <span data-ttu-id="20e45-346">Возвращенный <xref:System.Collections.ICollection> не является статической копией; Вместо этого <xref:System.Collections.ICollection> ссылается на ключи в исходном объекте <xref:System.Collections.DictionaryBase>.</span><span class="sxs-lookup"><span data-stu-id="20e45-346">The returned <xref:System.Collections.ICollection> is not a static copy; instead, the <xref:System.Collections.ICollection> refers back to the keys in the original <xref:System.Collections.DictionaryBase> object.</span></span> <span data-ttu-id="20e45-347">Поэтому изменения в <xref:System.Collections.DictionaryBase> продолжают отражаться в возвращаемом <xref:System.Collections.ICollection>.</span><span class="sxs-lookup"><span data-stu-id="20e45-347">Therefore, changes to the <xref:System.Collections.DictionaryBase> continue to be reflected in the returned <xref:System.Collections.ICollection>.</span></span>  
  
 <span data-ttu-id="20e45-348">Получение значения этого свойства является операцией `O(1)`.</span><span class="sxs-lookup"><span data-stu-id="20e45-348">Retrieving the value of this property is an `O(1)` operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="20e45-349">В следующем примере кода реализуется класс <xref:System.Collections.DictionaryBase> и используется реализация для создания словаря <xref:System.String> ключей и значений, у которых свойство <xref:System.String.Length%2A> имеет 5 символов или меньше.</span><span class="sxs-lookup"><span data-stu-id="20e45-349">The following code example implements the <xref:System.Collections.DictionaryBase> class and uses that implementation to create a dictionary of <xref:System.String> keys and values that have a <xref:System.String.Length%2A> property of 5 characters or less.</span></span>  
  
 [!code-cpp[System.Collections.DictionaryBase#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.DictionaryBase/CPP/dictionarybase.cpp#1)]
 [!code-csharp[System.Collections.DictionaryBase#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.DictionaryBase/CS/dictionarybase.cs#1)]
 [!code-vb[System.Collections.DictionaryBase#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.DictionaryBase/VB/dictionarybase.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.ICollection" />
        <altmember cref="P:System.Collections.IDictionary.Values" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.Remove">
      <MemberSignature Language="C#" Value="void IDictionary.Remove (object key);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IDictionary.Remove(object key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.DictionaryBase.System#Collections#IDictionary#Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Remove (key As Object) Implements IDictionary.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IDictionary.Remove(System::Object ^ key) = System::Collections::IDictionary::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="20e45-350">Ключ элемента, который требуется удалить.</span><span class="sxs-lookup"><span data-stu-id="20e45-350">The key of the element to remove.</span></span></param>
        <summary><span data-ttu-id="20e45-351">Удаляет элемент с указанным ключом из объекта <see cref="T:System.Collections.DictionaryBase" />.</span><span class="sxs-lookup"><span data-stu-id="20e45-351">Removes the element with the specified key from the <see cref="T:System.Collections.DictionaryBase" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20e45-352">Если <xref:System.Collections.DictionaryBase> не содержит элемент с указанным ключом, <xref:System.Collections.DictionaryBase> остается без изменений.</span><span class="sxs-lookup"><span data-stu-id="20e45-352">If the <xref:System.Collections.DictionaryBase> does not contain an element with the specified key, the <xref:System.Collections.DictionaryBase> remains unchanged.</span></span> <span data-ttu-id="20e45-353">Исключение не возникает.</span><span class="sxs-lookup"><span data-stu-id="20e45-353">No exception is thrown.</span></span>  
  
 <span data-ttu-id="20e45-354">Этот метод является операцией `O(1)`.</span><span class="sxs-lookup"><span data-stu-id="20e45-354">This method is an `O(1)` operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="20e45-355">В следующем примере кода реализуется класс <xref:System.Collections.DictionaryBase> и используется эта реализация для создания словаря <xref:System.String> ключей и значений, в которых <xref:System.String.Length%2A> 5 символов или меньше.</span><span class="sxs-lookup"><span data-stu-id="20e45-355">The following code example implements the <xref:System.Collections.DictionaryBase> class and uses that implementation to create a dictionary of <xref:System.String> keys and values that have a <xref:System.String.Length%2A> of 5 characters or less.</span></span>  
  
 [!code-cpp[System.Collections.DictionaryBase#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.DictionaryBase/CPP/dictionarybase.cpp#1)]
 [!code-csharp[System.Collections.DictionaryBase#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.DictionaryBase/CS/dictionarybase.cs#1)]
 [!code-vb[System.Collections.DictionaryBase#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.DictionaryBase/VB/dictionarybase.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="20e45-356">Свойство <paramref name="key" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="20e45-356"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="20e45-357">Объект <see cref="T:System.Collections.DictionaryBase" /> доступен только для чтения.</span><span class="sxs-lookup"><span data-stu-id="20e45-357">The <see cref="T:System.Collections.DictionaryBase" /> is read-only.</span></span>  
  
<span data-ttu-id="20e45-358">- или -</span><span class="sxs-lookup"><span data-stu-id="20e45-358">-or-</span></span> 
<span data-ttu-id="20e45-359"><see cref="T:System.Collections.DictionaryBase" /> имеет фиксированный размер.</span><span class="sxs-lookup"><span data-stu-id="20e45-359">The <see cref="T:System.Collections.DictionaryBase" /> has a fixed size.</span></span></exception>
        <altmember cref="M:System.Collections.IDictionary.Add(System.Object,System.Object)" />
        <altmember cref="M:System.Collections.IDictionary.Remove(System.Object)" />
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations.md"><span data-ttu-id="20e45-360">Выполнение строковых операций, не зависящих от языка и региональных параметров</span><span class="sxs-lookup"><span data-stu-id="20e45-360">Performing Culture-Insensitive String Operations</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.Values">
      <MemberSignature Language="C#" Value="System.Collections.ICollection System.Collections.IDictionary.Values { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection System.Collections.IDictionary.Values" />
      <MemberSignature Language="DocId" Value="P:System.Collections.DictionaryBase.System#Collections#IDictionary#Values" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Values As ICollection Implements IDictionary.Values" />
      <MemberSignature Language="C++ CLI" Value="property System::Collections::ICollection ^ System::Collections::IDictionary::Values { System::Collections::ICollection ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IDictionary.Values" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.Values</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="20e45-361">Получает объект <see cref="T:System.Collections.ICollection" />, содержащий значения из объекта <see cref="T:System.Collections.DictionaryBase" />.</span><span class="sxs-lookup"><span data-stu-id="20e45-361">Gets an <see cref="T:System.Collections.ICollection" /> object containing the values in the <see cref="T:System.Collections.DictionaryBase" /> object.</span></span></summary>
        <value><span data-ttu-id="20e45-362">Объект <see cref="T:System.Collections.ICollection" />, содержащий значения из объекта <see cref="T:System.Collections.DictionaryBase" />.</span><span class="sxs-lookup"><span data-stu-id="20e45-362">An <see cref="T:System.Collections.ICollection" /> object containing the values in the <see cref="T:System.Collections.DictionaryBase" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20e45-363">Порядок значений в объекте <xref:System.Collections.ICollection> не задан, но совпадает с порядком связанных ключей в объекте <xref:System.Collections.ICollection>, возвращенном свойством <xref:System.Collections.IDictionary.Keys%2A>.</span><span class="sxs-lookup"><span data-stu-id="20e45-363">The order of the values in the <xref:System.Collections.ICollection> object is unspecified, but is the same order as the associated keys in the <xref:System.Collections.ICollection> object returned by the <xref:System.Collections.IDictionary.Keys%2A> property.</span></span>  
  
 <span data-ttu-id="20e45-364">Возвращенный <xref:System.Collections.ICollection> не является статической копией; Вместо этого <xref:System.Collections.ICollection> ссылается на значения в исходном объекте <xref:System.Collections.DictionaryBase>.</span><span class="sxs-lookup"><span data-stu-id="20e45-364">The returned <xref:System.Collections.ICollection> is not a static copy; instead, the <xref:System.Collections.ICollection> refers back to the values in the original <xref:System.Collections.DictionaryBase> object.</span></span> <span data-ttu-id="20e45-365">Поэтому изменения в <xref:System.Collections.DictionaryBase> продолжают отражаться в возвращаемом <xref:System.Collections.ICollection>.</span><span class="sxs-lookup"><span data-stu-id="20e45-365">Therefore, changes to the <xref:System.Collections.DictionaryBase> continue to be reflected in the returned <xref:System.Collections.ICollection>.</span></span>  
  
 <span data-ttu-id="20e45-366">Получение значения этого свойства является операцией `O(1)`.</span><span class="sxs-lookup"><span data-stu-id="20e45-366">Retrieving the value of this property is an `O(1)` operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="20e45-367">В следующем примере кода реализуется класс <xref:System.Collections.DictionaryBase> и используется реализация для создания словаря <xref:System.String> ключей и значений, у которых свойство <xref:System.String.Length%2A> имеет 5 символов или меньше.</span><span class="sxs-lookup"><span data-stu-id="20e45-367">The following code example implements the <xref:System.Collections.DictionaryBase> class and uses that implementation to create a dictionary of <xref:System.String> keys and values that have a <xref:System.String.Length%2A> property of 5 characters or less.</span></span>  
  
 [!code-cpp[System.Collections.DictionaryBase#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.DictionaryBase/CPP/dictionarybase.cpp#1)]
 [!code-csharp[System.Collections.DictionaryBase#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.DictionaryBase/CS/dictionarybase.cs#1)]
 [!code-vb[System.Collections.DictionaryBase#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.DictionaryBase/VB/dictionarybase.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.ICollection" />
        <altmember cref="P:System.Collections.IDictionary.Keys" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.DictionaryBase.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="20e45-368">Возвращает объект <see cref="T:System.Collections.IEnumerator" />, осуществляющий перебор <see cref="T:System.Collections.DictionaryBase" />.</span><span class="sxs-lookup"><span data-stu-id="20e45-368">Returns an <see cref="T:System.Collections.IEnumerator" /> that iterates through the <see cref="T:System.Collections.DictionaryBase" />.</span></span></summary>
        <returns><span data-ttu-id="20e45-369">Интерфейс <see cref="T:System.Collections.IEnumerator" /> для <see cref="T:System.Collections.DictionaryBase" />.</span><span class="sxs-lookup"><span data-stu-id="20e45-369">An <see cref="T:System.Collections.IEnumerator" /> for the <see cref="T:System.Collections.DictionaryBase" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20e45-370">Инструкция `foreach` языка C# (`for each` в Visual Basic) позволяет скрыть сложный механизм перечислителей.</span><span class="sxs-lookup"><span data-stu-id="20e45-370">The `foreach` statement of the C# language (`for each` in Visual Basic) hides the complexity of the enumerators.</span></span> <span data-ttu-id="20e45-371">Поэтому рекомендуется вместо непосредственного использования перечислителя применять ключевое слово `foreach`.</span><span class="sxs-lookup"><span data-stu-id="20e45-371">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="20e45-372">Перечислители могут использоваться для чтения данных в коллекции, но не для ее изменения.</span><span class="sxs-lookup"><span data-stu-id="20e45-372">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="20e45-373">Изначально перечислитель располагается перед первым элементом коллекции.</span><span class="sxs-lookup"><span data-stu-id="20e45-373">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="20e45-374">Метод <xref:System.Collections.IEnumerator.Reset%2A> также переводит перечислитель в эту позицию.</span><span class="sxs-lookup"><span data-stu-id="20e45-374"><xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position.</span></span> <span data-ttu-id="20e45-375">В этой позиции вызов <xref:System.Collections.IEnumerator.Current%2A> создает исключение.</span><span class="sxs-lookup"><span data-stu-id="20e45-375">At this position, calling <xref:System.Collections.IEnumerator.Current%2A> throws an exception.</span></span> <span data-ttu-id="20e45-376">Поэтому необходимо вызвать метод <xref:System.Collections.IEnumerator.MoveNext%2A>, чтобы переместить перечислитель к первому элементу коллекции до считывания значения свойства <xref:System.Collections.IEnumerator.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="20e45-376">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="20e45-377"><xref:System.Collections.IEnumerator.Current%2A> возвращает тот же объект, пока не будет вызван метод <xref:System.Collections.IEnumerator.MoveNext%2A> или <xref:System.Collections.IEnumerator.Reset%2A>.</span><span class="sxs-lookup"><span data-stu-id="20e45-377"><xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="20e45-378"><xref:System.Collections.IEnumerator.MoveNext%2A> задает <xref:System.Collections.IEnumerator.Current%2A> в качестве значения для следующего элемента.</span><span class="sxs-lookup"><span data-stu-id="20e45-378"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="20e45-379">Если <xref:System.Collections.IEnumerator.MoveNext%2A> передает конец коллекции, перечислитель располагается после последнего элемента в коллекции, а <xref:System.Collections.IEnumerator.MoveNext%2A> возвращает `false`.</span><span class="sxs-lookup"><span data-stu-id="20e45-379">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="20e45-380">Если перечислитель находится в этой позиции, последующие вызовы <xref:System.Collections.IEnumerator.MoveNext%2A> также возвращают `false`.</span><span class="sxs-lookup"><span data-stu-id="20e45-380">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="20e45-381">Если последний вызов <xref:System.Collections.IEnumerator.MoveNext%2A> вернул `false`, вызов <xref:System.Collections.IEnumerator.Current%2A> выдаст исключение.</span><span class="sxs-lookup"><span data-stu-id="20e45-381">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, calling <xref:System.Collections.IEnumerator.Current%2A> throws an exception.</span></span> <span data-ttu-id="20e45-382">Чтобы снова задать в качестве значения свойства <xref:System.Collections.IEnumerator.Current%2A> первый элемент коллекции, можно последовательно вызвать методы <xref:System.Collections.IEnumerator.Reset%2A> и<xref:System.Collections.IEnumerator.MoveNext%2A>.</span><span class="sxs-lookup"><span data-stu-id="20e45-382">To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="20e45-383">Перечислитель остается действительным, пока коллекция не изменяется.</span><span class="sxs-lookup"><span data-stu-id="20e45-383">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="20e45-384">Если в коллекцию вносятся изменения, такие как добавление, изменение или удаление элементов, перечислитель становится необратимо недействительным, а следующий вызов <xref:System.Collections.IEnumerator.MoveNext%2A> или <xref:System.Collections.IEnumerator.Reset%2A> вызывает исключение <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="20e45-384">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span> <span data-ttu-id="20e45-385">Если коллекция изменяется между <xref:System.Collections.IEnumerator.MoveNext%2A> и <xref:System.Collections.IEnumerator.Current%2A>, <xref:System.Collections.IEnumerator.Current%2A> Возвращает элемент, для которого он задан, даже если перечислитель уже недействителен.</span><span class="sxs-lookup"><span data-stu-id="20e45-385">If the collection is modified between <xref:System.Collections.IEnumerator.MoveNext%2A> and <xref:System.Collections.IEnumerator.Current%2A>, <xref:System.Collections.IEnumerator.Current%2A> returns the element that it is set to, even if the enumerator is already invalidated.</span></span>  
  
 <span data-ttu-id="20e45-386">У перечислителя нет эксклюзивного доступа к коллекции, поэтому перечисление коллекции не является потокобезопасной процедурой.</span><span class="sxs-lookup"><span data-stu-id="20e45-386">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="20e45-387">Даже если коллекция синхронизирована, другие потоки могут ее изменить, что приведет к тому, что перечислитель создаст исключение.</span><span class="sxs-lookup"><span data-stu-id="20e45-387">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="20e45-388">Для обеспечения потокобезопасности при перечислении можно либо заблокировать коллекцию на все время перечисления, либо перехватывать исключения, возникающие в результате изменений, внесенных другими потоками.</span><span class="sxs-lookup"><span data-stu-id="20e45-388">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
 <span data-ttu-id="20e45-389">Этот метод является операцией `O(1)`.</span><span class="sxs-lookup"><span data-stu-id="20e45-389">This method is an `O(1)` operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IDictionaryEnumerator" />
        <altmember cref="T:System.Collections.IEnumerator" />
      </Docs>
    </Member>
  </Members>
</Type>
