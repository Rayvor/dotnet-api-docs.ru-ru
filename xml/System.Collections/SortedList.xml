<Type Name="SortedList" FullName="System.Collections.SortedList">
  <Metadata><Meta Name="ms.openlocfilehash" Value="23e5d8d5e03c1249285d4642fc657c83c0e4e4ab" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70498770" /></Metadata><TypeSignature Language="C#" Value="public class SortedList : ICloneable, System.Collections.IDictionary" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit SortedList extends System.Object implements class System.Collections.ICollection, class System.Collections.IDictionary, class System.Collections.IEnumerable, class System.ICloneable" />
  <TypeSignature Language="DocId" Value="T:System.Collections.SortedList" />
  <TypeSignature Language="VB.NET" Value="Public Class SortedList&#xA;Implements ICloneable, IDictionary" />
  <TypeSignature Language="C++ CLI" Value="public ref class SortedList : ICloneable, System::Collections::IDictionary" />
  <TypeSignature Language="F#" Value="type SortedList = class&#xA;    interface IDictionary&#xA;    interface ICloneable&#xA;    interface ICollection&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Collections.NonGeneric</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IDictionary</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Diagnostics.DebuggerDisplay("Count = {Count}")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Diagnostics.DebuggerTypeProxy(typeof(System.Collections.SortedList/SortedListDebugView))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="e8f0b-101">Предоставляет коллекцию пар "ключ-значение", упорядоченных по ключам. Доступ к парам можно получить по ключу и по индексу.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-101">Represents a collection of key/value pairs that are sorted by the keys and are accessible by key and by index.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="e8f0b-102">Доступ к <xref:System.Collections.IDictionary> <xref:System.Collections.IList> элементу может осуществляться по его ключу, например элементу в любой реализации или по индексу, например элементу в любой реализации. <xref:System.Collections.SortedList></span><span class="sxs-lookup"><span data-stu-id="e8f0b-102">A <xref:System.Collections.SortedList> element can be accessed by its key, like an element in any <xref:System.Collections.IDictionary> implementation, or by its index, like an element in any <xref:System.Collections.IList> implementation.</span></span>  

> [!IMPORTANT]
> <span data-ttu-id="e8f0b-103">Мы не рекомендуем использовать `SortedList` класс для новой разработки.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-103">We don't recommend that you use the `SortedList` class for new development.</span></span> <span data-ttu-id="e8f0b-104">Вместо этого рекомендуется использовать универсальный <xref:System.Collections.Generic.SortedList%602?displayProperty=nameWithType> класс.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-104">Instead, we recommend that you use the generic <xref:System.Collections.Generic.SortedList%602?displayProperty=nameWithType> class.</span></span> <span data-ttu-id="e8f0b-105">Дополнительные сведения см. в разделе [неуниверсальные коллекции не следует использовать](https://github.com/dotnet/platform-compat/blob/master/docs/DE0006.md) в GitHub.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-105">For more information, see [Non-generic collections shouldn't be used](https://github.com/dotnet/platform-compat/blob/master/docs/DE0006.md) on GitHub.</span></span>

 <span data-ttu-id="e8f0b-106"><xref:System.Collections.SortedList> Объект внутренне поддерживает два массива для хранения элементов списка, то есть один массив для ключей и другой массив для связанных значений.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-106">A <xref:System.Collections.SortedList> object internally maintains two arrays to store the elements of the list; that is, one array for the keys and another array for the associated values.</span></span> <span data-ttu-id="e8f0b-107">Каждый элемент представляет собой пару "ключ-значение", доступ к которой <xref:System.Collections.DictionaryEntry> можно получить как к объекту.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-107">Each element is a key/value pair that can be accessed as a <xref:System.Collections.DictionaryEntry> object.</span></span> <span data-ttu-id="e8f0b-108">Ключ не может быть `null`, а значение может быть.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-108">A key cannot be `null`, but a value can be.</span></span>  
  
 <span data-ttu-id="e8f0b-109">Емкость <xref:System.Collections.SortedList> объекта — это количество элементов, <xref:System.Collections.SortedList> которые может содержать.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-109">The capacity of a <xref:System.Collections.SortedList> object is the number of elements the <xref:System.Collections.SortedList> can hold.</span></span> <span data-ttu-id="e8f0b-110">Когда элементы добавляются в <xref:System.Collections.SortedList>, емкость автоматически увеличивается по мере необходимости путем перераспределения.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-110">As elements are added to a <xref:System.Collections.SortedList>, the capacity is automatically increased as required through reallocation.</span></span> <span data-ttu-id="e8f0b-111">Емкость можно уменьшить, вызвав <xref:System.Collections.SortedList.TrimToSize%2A> или явно <xref:System.Collections.SortedList.Capacity%2A> задав свойство.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-111">The capacity can be decreased by calling <xref:System.Collections.SortedList.TrimToSize%2A> or by setting the <xref:System.Collections.SortedList.Capacity%2A> property explicitly.</span></span>  
  
 <span data-ttu-id="e8f0b-112">**Только .NET Framework:** Для очень больших <xref:System.Collections.SortedList> объектов можно увеличить максимальную емкость до 2 000 000 000 элементов в 64-разрядной системе, `enabled` задав атрибут [`<gcAllowVeryLargeObjects>`](~/docs/framework/configure-apps/file-schema/runtime/gcallowverylargeobjects-element.md) элемента `true` конфигурации в среде выполнения.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-112">**.NET Framework only:** For very large <xref:System.Collections.SortedList> objects, you can increase the maximum capacity to 2 billion elements on a 64-bit system by setting the `enabled` attribute of the [`<gcAllowVeryLargeObjects>`](~/docs/framework/configure-apps/file-schema/runtime/gcallowverylargeobjects-element.md) configuration element to `true` in the run-time environment.</span></span>  
  
 <span data-ttu-id="e8f0b-113">Элементы <xref:System.Collections.SortedList> объекта сортируются по ключам в соответствии с конкретной <xref:System.Collections.IComparer> реализацией, <xref:System.Collections.SortedList> заданной при создании или в соответствии <xref:System.IComparable> с реализацией, предоставляемой самими ключами.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-113">The elements of a <xref:System.Collections.SortedList> object are sorted by the keys either according to a specific <xref:System.Collections.IComparer> implementation specified when the <xref:System.Collections.SortedList> is created or according to the <xref:System.IComparable> implementation provided by the keys themselves.</span></span> <span data-ttu-id="e8f0b-114">В любом случае, a <xref:System.Collections.SortedList> не допускает дублирования ключей.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-114">In either case, a <xref:System.Collections.SortedList> does not allow duplicate keys.</span></span>  
  
 <span data-ttu-id="e8f0b-115">Последовательность индексов основана на последовательности сортировки.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-115">The index sequence is based on the sort sequence.</span></span> <span data-ttu-id="e8f0b-116">При добавлении элемента он вставляется <xref:System.Collections.SortedList> в правильный порядок сортировки, а индексирование корректируется соответствующим образом.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-116">When an element is added, it is inserted into <xref:System.Collections.SortedList> in the correct sort order, and the indexing adjusts accordingly.</span></span> <span data-ttu-id="e8f0b-117">При удалении элемента индексирование также корректируется соответствующим образом.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-117">When an element is removed, the indexing also adjusts accordingly.</span></span> <span data-ttu-id="e8f0b-118">Таким образом, индекс определенной пары «ключ-значение» может измениться по мере добавления или удаления элементов из <xref:System.Collections.SortedList> объекта.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-118">Therefore, the index of a specific key/value pair might change as elements are added or removed from the <xref:System.Collections.SortedList> object.</span></span>  
  
 <span data-ttu-id="e8f0b-119">Операции с <xref:System.Collections.SortedList> объектом, как правило, выполняются медленнее, чем <xref:System.Collections.Hashtable> операции с объектом из-за сортировки.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-119">Operations on a <xref:System.Collections.SortedList> object tend to be slower than operations on a <xref:System.Collections.Hashtable> object because of the sorting.</span></span> <span data-ttu-id="e8f0b-120"><xref:System.Collections.SortedList> Однако обеспечивает большую гибкость, предоставляя доступ к значениям через связанные ключи или через индексы.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-120">However, the <xref:System.Collections.SortedList> offers more flexibility by allowing access to the values either through the associated keys or through the indexes.</span></span>  
  
 <span data-ttu-id="e8f0b-121">Доступ к элементам в этой коллекции можно получить с помощью целочисленного индекса.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-121">Elements in this collection can be accessed using an integer index.</span></span>  <span data-ttu-id="e8f0b-122">Индексы в этой коллекции отсчитываются от нуля.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-122">Indexes in this collection are zero-based.</span></span>  
  
 <span data-ttu-id="e8f0b-123">Оператор языка ( `for each`  в Visual Basic) возвращает объект типа элементов в коллекции. C# `foreach`</span><span class="sxs-lookup"><span data-stu-id="e8f0b-123">The `foreach` statement of the C# language (`for each` in Visual Basic) returns an object of the type of the elements in the collection.</span></span> <span data-ttu-id="e8f0b-124">Поскольку каждый элемент <xref:System.Collections.SortedList> объекта является парой "ключ-значение", тип элемента не является типом ключа или типом значения.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-124">Since each element of the <xref:System.Collections.SortedList> object is a key/value pair, the element type is not the type of the key or the type of the value.</span></span> <span data-ttu-id="e8f0b-125">Вместо этого тип элемента — <xref:System.Collections.DictionaryEntry>.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-125">Rather, the element type is <xref:System.Collections.DictionaryEntry>.</span></span> <span data-ttu-id="e8f0b-126">Например:</span><span class="sxs-lookup"><span data-stu-id="e8f0b-126">For example:</span></span>  
  
 [!code-cpp[Classic SortedList Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList Example/CPP/remarks.cpp#2)]
 [!code-csharp[Classic SortedList Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList Example/CS/remarks.cs#2)]
 [!code-vb[Classic SortedList Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList Example/VB/remarks.vb#2)]  
  
 <span data-ttu-id="e8f0b-127">`foreach` Оператор является оболочкой для перечислителя, который позволяет только считывать из коллекции, а не записывать в нее.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-127">The `foreach` statement is a wrapper around the enumerator, which allows only reading from, not writing to, the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e8f0b-128">В следующем примере кода показано, как создать и инициализировать <xref:System.Collections.SortedList> объект и как вывести его ключи и значения.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-128">The following code example shows how to create and initialize a <xref:System.Collections.SortedList> object and how to print out its keys and values.</span></span>  
  
 [!code-cpp[Classic SortedList Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SortedList Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList Example/CS/source.cs#1)]
 [!code-vb[Classic SortedList Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="e8f0b-129">Открытые статические (<see langword="Shared" /> в Visual Basic) члены этого типа являются потокобезопасными.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-129">Public static (<see langword="Shared" /> in Visual Basic) members of this type are thread safe.</span></span> <span data-ttu-id="e8f0b-130">Потокобезопасность членов экземпляров не гарантируется.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-130">Any instance members are not guaranteed to be thread safe.</span></span>  
  
<span data-ttu-id="e8f0b-131"><see cref="T:System.Collections.SortedList" /> Объект может поддерживать несколько модулей чтения параллельно, пока коллекция не изменяется.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-131">A <see cref="T:System.Collections.SortedList" /> object can support multiple readers concurrently, as long as the collection is not modified.</span></span> <span data-ttu-id="e8f0b-132">Чтобы обеспечить потокобезопасность <see cref="T:System.Collections.SortedList" />, все операции должны выполняться через оболочку, возвращенную <see cref="M:System.Collections.SortedList.Synchronized(System.Collections.SortedList)" /> методом.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-132">To guarantee the thread safety of the <see cref="T:System.Collections.SortedList" />, all operations must be done through the wrapper returned by the <see cref="M:System.Collections.SortedList.Synchronized(System.Collections.SortedList)" /> method.</span></span>  
  
<span data-ttu-id="e8f0b-133">Перечисление коллекции не является потокобезопасной процедурой.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-133">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="e8f0b-134">Даже если коллекция синхронизирована, другие потоки могут ее изменить, что приведет к тому, что перечислитель создаст исключение.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-134">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="e8f0b-135">Для обеспечения потокобезопасности при перечислении можно либо заблокировать коллекцию на все время перечисления, либо перехватывать исключения, возникающие в результате изменений, внесенных другими потоками.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-135">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span></threadsafe>
    <altmember cref="T:System.IComparable" />
    <altmember cref="T:System.Collections.IComparer" />
    <altmember cref="T:System.Collections.IDictionary" />
    <altmember cref="T:System.Collections.Hashtable" />
    <altmember cref="T:System.Collections.Generic.SortedList`2" />
    <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections.md"><span data-ttu-id="e8f0b-136">Выполнение в коллекциях строковых операций, не зависящих от языка и региональных параметров</span><span class="sxs-lookup"><span data-stu-id="e8f0b-136">Performing Culture-Insensitive String Operations in Collections</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e8f0b-137">Инициализирует новый экземпляр класса <see cref="T:System.Collections.SortedList" />.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-137">Initializes a new instance of the <see cref="T:System.Collections.SortedList" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SortedList ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SortedList();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e8f0b-138">Инициализирует новый пустой экземпляр класса <see cref="T:System.Collections.SortedList" /> с начальной емкостью по умолчанию, упорядоченный в соответствии с интерфейсом <see cref="T:System.IComparable" />, который реализован каждым ключом, добавленным в объект <see cref="T:System.Collections.SortedList" />.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-138">Initializes a new instance of the <see cref="T:System.Collections.SortedList" /> class that is empty, has the default initial capacity, and is sorted according to the <see cref="T:System.IComparable" /> interface implemented by each key added to the <see cref="T:System.Collections.SortedList" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8f0b-139">Каждый ключ должен реализовывать <xref:System.IComparable> интерфейс, чтобы обеспечить возможность сравнения с любым другим ключом <xref:System.Collections.SortedList> в объекте.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-139">Each key must implement the <xref:System.IComparable> interface to be capable of comparisons with every other key in the <xref:System.Collections.SortedList> object.</span></span> <span data-ttu-id="e8f0b-140">Элементы сортируются в соответствии <xref:System.IComparable> с реализацией каждого ключа, <xref:System.Collections.SortedList>добавленного в.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-140">The elements are sorted according to the <xref:System.IComparable> implementation of each key added to the <xref:System.Collections.SortedList>.</span></span>  
  
 <span data-ttu-id="e8f0b-141">Емкость <xref:System.Collections.SortedList> объекта — это количество элементов <xref:System.Collections.SortedList> , которые может содержать объект.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-141">The capacity of a <xref:System.Collections.SortedList> object is the number of elements that the <xref:System.Collections.SortedList> can hold.</span></span> <span data-ttu-id="e8f0b-142">Когда элементы добавляются в <xref:System.Collections.SortedList>, емкость автоматически увеличивается по мере необходимости путем перераспределения внутреннего массива.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-142">As elements are added to a <xref:System.Collections.SortedList>, the capacity is automatically increased as required by reallocating the internal array.</span></span>  
  
 <span data-ttu-id="e8f0b-143">Если размер коллекции можно оценить, указание начальной емкости избавляет от необходимости выполнять несколько операций изменения размера при добавлении элементов в <xref:System.Collections.SortedList> объект.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-143">If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.SortedList> object.</span></span>  
  
 <span data-ttu-id="e8f0b-144">Этот конструктор является операцией O (1).</span><span class="sxs-lookup"><span data-stu-id="e8f0b-144">This constructor is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e8f0b-145">В следующем примере кода создаются коллекции с использованием <xref:System.Collections.SortedList> различных конструкторов и демонстрируются различия в поведении коллекций.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-145">The following code example creates collections using different <xref:System.Collections.SortedList> constructors and demonstrates the differences in the behavior of the collections.</span></span>  
  
 [!code-cpp[System.Collections.SortedList_ctor#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.SortedList_ctor/CPP/sortedlist_ctor.cpp#1)]
 [!code-csharp[System.Collections.SortedList_ctor#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.SortedList_ctor/CS/sortedlist_ctor.cs#1)]
 [!code-vb[System.Collections.SortedList_ctor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.SortedList_ctor/VB/sortedlist_ctor.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IComparable" />
        <altmember cref="P:System.Collections.SortedList.Capacity" />
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections.md"><span data-ttu-id="e8f0b-146">Выполнение в коллекциях строковых операций, не зависящих от языка и региональных параметров</span><span class="sxs-lookup"><span data-stu-id="e8f0b-146">Performing Culture-Insensitive String Operations in Collections</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SortedList (System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.#ctor(System.Collections.IComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (comparer As IComparer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SortedList(System::Collections::IComparer ^ comparer);" />
      <MemberSignature Language="F#" Value="new System.Collections.SortedList : System.Collections.IComparer -&gt; System.Collections.SortedList" Usage="new System.Collections.SortedList comparer" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="comparer"><span data-ttu-id="e8f0b-147">Реализация интерфейса <see cref="T:System.Collections.IComparer" />, используемая при сравнении ключей.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-147">The <see cref="T:System.Collections.IComparer" /> implementation to use when comparing keys.</span></span>  
  
<span data-ttu-id="e8f0b-148">- или -</span><span class="sxs-lookup"><span data-stu-id="e8f0b-148">-or-</span></span> 
 <span data-ttu-id="e8f0b-149">Значение <see langword="null" />, используемое в реализации интерфейса <see cref="T:System.IComparable" /> каждого ключа.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-149"><see langword="null" /> to use the <see cref="T:System.IComparable" /> implementation of each key.</span></span></param>
        <summary><span data-ttu-id="e8f0b-150">Инициализирует новый пустой экземпляр класса <see cref="T:System.Collections.SortedList" /> с начальной емкостью по умолчанию, упорядоченный в соответствии с указанным интерфейсом <see cref="T:System.Collections.IComparer" />.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-150">Initializes a new instance of the <see cref="T:System.Collections.SortedList" /> class that is empty, has the default initial capacity, and is sorted according to the specified <see cref="T:System.Collections.IComparer" /> interface.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8f0b-151">Элементы сортируются в соответствии с указанной <xref:System.Collections.IComparer> реализацией.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-151">The elements are sorted according to the specified <xref:System.Collections.IComparer> implementation.</span></span> <span data-ttu-id="e8f0b-152">`null` <xref:System.IComparable> <xref:System.IComparable> Если параметр имеет значение, используется реализация каждого ключа, поэтому каждый ключ должен реализовывать интерфейс, чтобы <xref:System.Collections.SortedList> обеспечить возможность сравнения с любым другим ключом в объекте. `comparer`</span><span class="sxs-lookup"><span data-stu-id="e8f0b-152">If the `comparer` parameter is `null`, the <xref:System.IComparable> implementation of each key is used; therefore, each key must implement the <xref:System.IComparable> interface to be capable of comparisons with every other key in the <xref:System.Collections.SortedList> object.</span></span>  
  
 <span data-ttu-id="e8f0b-153">Емкость <xref:System.Collections.SortedList> объекта — это количество элементов <xref:System.Collections.SortedList> , которые может содержать объект.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-153">The capacity of a <xref:System.Collections.SortedList> object is the number of elements that the <xref:System.Collections.SortedList> can hold.</span></span> <span data-ttu-id="e8f0b-154">Когда элементы добавляются в <xref:System.Collections.SortedList>, емкость автоматически увеличивается по мере необходимости путем перераспределения внутреннего массива.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-154">As elements are added to a <xref:System.Collections.SortedList>, the capacity is automatically increased as required by reallocating the internal array.</span></span>  
  
 <span data-ttu-id="e8f0b-155">Если размер коллекции можно оценить, указание начальной емкости избавляет от необходимости выполнять несколько операций изменения размера при добавлении элементов в <xref:System.Collections.SortedList> объект.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-155">If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.SortedList> object.</span></span>  
  
 <span data-ttu-id="e8f0b-156">Этот конструктор является операцией O (1).</span><span class="sxs-lookup"><span data-stu-id="e8f0b-156">This constructor is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e8f0b-157">В следующем примере кода создаются коллекции с использованием <xref:System.Collections.SortedList> различных конструкторов и демонстрируются различия в поведении коллекций.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-157">The following code example creates collections using different <xref:System.Collections.SortedList> constructors and demonstrates the differences in the behavior of the collections.</span></span>  
  
 [!code-cpp[System.Collections.SortedList_ctor#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.SortedList_ctor/CPP/sortedlist_ctor.cpp#1)]
 [!code-csharp[System.Collections.SortedList_ctor#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.SortedList_ctor/CS/sortedlist_ctor.cs#1)]
 [!code-vb[System.Collections.SortedList_ctor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.SortedList_ctor/VB/sortedlist_ctor.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IComparer" />
        <altmember cref="T:System.IComparable" />
        <altmember cref="P:System.Collections.SortedList.Capacity" />
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections.md"><span data-ttu-id="e8f0b-158">Выполнение в коллекциях строковых операций, не зависящих от языка и региональных параметров</span><span class="sxs-lookup"><span data-stu-id="e8f0b-158">Performing Culture-Insensitive String Operations in Collections</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SortedList (System.Collections.IDictionary d);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.IDictionary d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.#ctor(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (d As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SortedList(System::Collections::IDictionary ^ d);" />
      <MemberSignature Language="F#" Value="new System.Collections.SortedList : System.Collections.IDictionary -&gt; System.Collections.SortedList" Usage="new System.Collections.SortedList d" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="d" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="e8f0b-159">Реализация интерфейса <see cref="T:System.Collections.IDictionary" /> для копирования в новый объект <see cref="T:System.Collections.SortedList" />.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-159">The <see cref="T:System.Collections.IDictionary" /> implementation to copy to a new <see cref="T:System.Collections.SortedList" /> object.</span></span></param>
        <summary><span data-ttu-id="e8f0b-160">Инициализирует новый экземпляр <see cref="T:System.Collections.SortedList" />, содержащий элементы, скопированные из указанного словаря, обладающий начальной емкостью, равной количеству скопированных элементов и упорядоченный в соответствии с реализацией интерфейса <see cref="T:System.IComparable" /> каждого ключа.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-160">Initializes a new instance of the <see cref="T:System.Collections.SortedList" /> class that contains elements copied from the specified dictionary, has the same initial capacity as the number of elements copied, and is sorted according to the <see cref="T:System.IComparable" /> interface implemented by each key.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8f0b-161">Каждый ключ должен реализовывать <xref:System.IComparable> интерфейс, чтобы обеспечить возможность сравнения с любым другим ключом <xref:System.Collections.SortedList> в объекте.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-161">Each key must implement the <xref:System.IComparable> interface to be capable of comparisons with every other key in the <xref:System.Collections.SortedList> object.</span></span> <span data-ttu-id="e8f0b-162">Элементы сортируются в соответствии <xref:System.IComparable> с реализацией каждого ключа, <xref:System.Collections.SortedList>добавленного в.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-162">The elements are sorted according to the <xref:System.IComparable> implementation of each key added to the <xref:System.Collections.SortedList>.</span></span>  
  
 <span data-ttu-id="e8f0b-163">Объект — это пример <xref:System.Collections.IDictionary> реализации, которую можно передать этому конструктору. <xref:System.Collections.Hashtable></span><span class="sxs-lookup"><span data-stu-id="e8f0b-163">A <xref:System.Collections.Hashtable> object is an example of an <xref:System.Collections.IDictionary> implementation that can be passed to this constructor.</span></span> <span data-ttu-id="e8f0b-164">Новый <xref:System.Collections.SortedList> объект содержит копию ключей и значений, хранящихся <xref:System.Collections.Hashtable>в.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-164">The new <xref:System.Collections.SortedList> object contains a copy of the keys and values stored in the <xref:System.Collections.Hashtable>.</span></span>  
  
 <span data-ttu-id="e8f0b-165">Емкость <xref:System.Collections.SortedList> объекта — это количество элементов <xref:System.Collections.SortedList> , которые может содержать объект.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-165">The capacity of a <xref:System.Collections.SortedList> object is the number of elements that the <xref:System.Collections.SortedList> can hold.</span></span> <span data-ttu-id="e8f0b-166">Когда элементы добавляются в <xref:System.Collections.SortedList>, емкость автоматически увеличивается по мере необходимости путем перераспределения внутреннего массива.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-166">As elements are added to a <xref:System.Collections.SortedList>, the capacity is automatically increased as required by reallocating the internal array.</span></span>  
  
 <span data-ttu-id="e8f0b-167">Если размер коллекции можно оценить, указание начальной емкости избавляет от необходимости выполнять несколько операций изменения размера при добавлении элементов в <xref:System.Collections.SortedList> объект.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-167">If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.SortedList> object.</span></span>  
  
 <span data-ttu-id="e8f0b-168">Этот конструктор является операцией O`n`(), где `n` — число элементов в `d`.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-168">This constructor is an O(`n`) operation, where `n` is the number of elements in `d`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e8f0b-169">В следующем примере кода создаются коллекции с использованием <xref:System.Collections.SortedList> различных конструкторов и демонстрируются различия в поведении коллекций.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-169">The following code example creates collections using different <xref:System.Collections.SortedList> constructors and demonstrates the differences in the behavior of the collections.</span></span>  
  
 [!code-cpp[System.Collections.SortedList_ctorDictionary#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.SortedList_ctorDictionary/CPP/sortedlist_ctordictionary.cpp#1)]
 [!code-csharp[System.Collections.SortedList_ctorDictionary#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.SortedList_ctorDictionary/CS/sortedlist_ctordictionary.cs#1)]
 [!code-vb[System.Collections.SortedList_ctorDictionary#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.SortedList_ctorDictionary/VB/sortedlist_ctordictionary.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e8f0b-170"><paramref name="d" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-170"><paramref name="d" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="e8f0b-171">Один или несколько элементов в массиве <paramref name="d" /> не реализуют интерфейс <see cref="T:System.IComparable" />.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-171">One or more elements in <paramref name="d" /> do not implement the <see cref="T:System.IComparable" /> interface.</span></span></exception>
        <altmember cref="T:System.Collections.IDictionary" />
        <altmember cref="T:System.IComparable" />
        <altmember cref="T:System.Collections.Hashtable" />
        <altmember cref="P:System.Collections.SortedList.Capacity" />
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections.md"><span data-ttu-id="e8f0b-172">Выполнение в коллекциях строковых операций, не зависящих от языка и региональных параметров</span><span class="sxs-lookup"><span data-stu-id="e8f0b-172">Performing Culture-Insensitive String Operations in Collections</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SortedList (int initialCapacity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 initialCapacity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (initialCapacity As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SortedList(int initialCapacity);" />
      <MemberSignature Language="F#" Value="new System.Collections.SortedList : int -&gt; System.Collections.SortedList" Usage="new System.Collections.SortedList initialCapacity" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="initialCapacity" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="initialCapacity"><span data-ttu-id="e8f0b-173">Начальное количество элементов, которое может содержать объект <see cref="T:System.Collections.SortedList" />.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-173">The initial number of elements that the <see cref="T:System.Collections.SortedList" /> object can contain.</span></span></param>
        <summary><span data-ttu-id="e8f0b-174">Инициализирует новый пустой экземпляр класса <see cref="T:System.Collections.SortedList" /> с указанной начальной емкостью, упорядоченный в соответствии с интерфейсом <see cref="T:System.IComparable" />, который реализован каждым ключом, добавленным в объект <see cref="T:System.Collections.SortedList" />.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-174">Initializes a new instance of the <see cref="T:System.Collections.SortedList" /> class that is empty, has the specified initial capacity, and is sorted according to the <see cref="T:System.IComparable" /> interface implemented by each key added to the <see cref="T:System.Collections.SortedList" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8f0b-175">Каждый ключ должен реализовывать <xref:System.IComparable> интерфейс, чтобы обеспечить возможность сравнения с любым другим ключом <xref:System.Collections.SortedList> в объекте.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-175">Each key must implement the <xref:System.IComparable> interface to be capable of comparisons with every other key in the <xref:System.Collections.SortedList> object.</span></span> <span data-ttu-id="e8f0b-176">Элементы сортируются в соответствии <xref:System.IComparable> с реализацией каждого ключа, <xref:System.Collections.SortedList>добавленного в.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-176">The elements are sorted according to the <xref:System.IComparable> implementation of each key added to the <xref:System.Collections.SortedList>.</span></span>  
  
 <span data-ttu-id="e8f0b-177">Емкость <xref:System.Collections.SortedList> объекта — это количество элементов <xref:System.Collections.SortedList> , которые может содержать объект.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-177">The capacity of a <xref:System.Collections.SortedList> object is the number of elements that the <xref:System.Collections.SortedList> can hold.</span></span> <span data-ttu-id="e8f0b-178">Когда элементы добавляются в <xref:System.Collections.SortedList>, емкость автоматически увеличивается по мере необходимости путем перераспределения внутреннего массива.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-178">As elements are added to a <xref:System.Collections.SortedList>, the capacity is automatically increased as required by reallocating the internal array.</span></span>  
  
 <span data-ttu-id="e8f0b-179">Если размер коллекции можно оценить, указание начальной емкости избавляет от необходимости выполнять несколько операций изменения размера при добавлении элементов в <xref:System.Collections.SortedList> объект.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-179">If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.SortedList> object.</span></span>  
  
 <span data-ttu-id="e8f0b-180">Этот конструктор является операцией O`n`(), где `n` имеет `initialCapacity`.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-180">This constructor is an O(`n`) operation, where `n` is `initialCapacity`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e8f0b-181">В следующем примере кода создаются коллекции с использованием <xref:System.Collections.SortedList> различных конструкторов и демонстрируются различия в поведении коллекций.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-181">The following code example creates collections using different <xref:System.Collections.SortedList> constructors and demonstrates the differences in the behavior of the collections.</span></span>  
  
 [!code-cpp[System.Collections.SortedList_ctorInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.SortedList_ctorInt/CPP/sortedlist_ctorint.cpp#1)]
 [!code-csharp[System.Collections.SortedList_ctorInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.SortedList_ctorInt/CS/sortedlist_ctorint.cs#1)]
 [!code-vb[System.Collections.SortedList_ctorInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.SortedList_ctorInt/VB/sortedlist_ctorint.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e8f0b-182">Значение параметра <paramref name="initialCapacity" /> меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-182"><paramref name="initialCapacity" /> is less than zero.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="e8f0b-183">Недостаточно свободной памяти для создания объекта <see cref="T:System.Collections.SortedList" /> с указанным значением параметра <paramref name="initialCapacity" />.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-183">There is not enough available memory to create a <see cref="T:System.Collections.SortedList" /> object with the specified <paramref name="initialCapacity" />.</span></span></exception>
        <altmember cref="T:System.IComparable" />
        <altmember cref="P:System.Collections.SortedList.Capacity" />
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections.md"><span data-ttu-id="e8f0b-184">Выполнение в коллекциях строковых операций, не зависящих от языка и региональных параметров</span><span class="sxs-lookup"><span data-stu-id="e8f0b-184">Performing Culture-Insensitive String Operations in Collections</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SortedList (System.Collections.IComparer comparer, int capacity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.IComparer comparer, int32 capacity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.#ctor(System.Collections.IComparer,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (comparer As IComparer, capacity As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SortedList(System::Collections::IComparer ^ comparer, int capacity);" />
      <MemberSignature Language="F#" Value="new System.Collections.SortedList : System.Collections.IComparer * int -&gt; System.Collections.SortedList" Usage="new System.Collections.SortedList (comparer, capacity)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
        <Parameter Name="capacity" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="comparer"><span data-ttu-id="e8f0b-185">Реализация интерфейса <see cref="T:System.Collections.IComparer" />, используемая при сравнении ключей.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-185">The <see cref="T:System.Collections.IComparer" /> implementation to use when comparing keys.</span></span>  
  
<span data-ttu-id="e8f0b-186">- или -</span><span class="sxs-lookup"><span data-stu-id="e8f0b-186">-or-</span></span> 
 <span data-ttu-id="e8f0b-187">Значение <see langword="null" />, используемое в реализации интерфейса <see cref="T:System.IComparable" /> каждого ключа.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-187"><see langword="null" /> to use the <see cref="T:System.IComparable" /> implementation of each key.</span></span></param>
        <param name="capacity"><span data-ttu-id="e8f0b-188">Начальное количество элементов, которое может содержать объект <see cref="T:System.Collections.SortedList" />.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-188">The initial number of elements that the <see cref="T:System.Collections.SortedList" /> object can contain.</span></span></param>
        <summary><span data-ttu-id="e8f0b-189">Инициализирует новый пустой экземпляр класса <see cref="T:System.Collections.SortedList" /> с указанной начальной емкостью, упорядоченный в соответствии с указанным интерфейсом <see cref="T:System.Collections.IComparer" />.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-189">Initializes a new instance of the <see cref="T:System.Collections.SortedList" /> class that is empty, has the specified initial capacity, and is sorted according to the specified <see cref="T:System.Collections.IComparer" /> interface.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8f0b-190">Элементы сортируются в соответствии с указанной <xref:System.Collections.IComparer> реализацией.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-190">The elements are sorted according to the specified <xref:System.Collections.IComparer> implementation.</span></span> <span data-ttu-id="e8f0b-191">`null` <xref:System.IComparable> <xref:System.IComparable> Если параметр имеет значение, используется реализация каждого ключа, поэтому каждый ключ должен реализовывать интерфейс, чтобы <xref:System.Collections.SortedList> обеспечить возможность сравнения с любым другим ключом в объекте. `comparer`</span><span class="sxs-lookup"><span data-stu-id="e8f0b-191">If the `comparer` parameter is `null`, the <xref:System.IComparable> implementation of each key is used; therefore, each key must implement the <xref:System.IComparable> interface to be capable of comparisons with every other key in the <xref:System.Collections.SortedList> object.</span></span>  
  
 <span data-ttu-id="e8f0b-192">Емкость <xref:System.Collections.SortedList> объекта — это количество элементов <xref:System.Collections.SortedList> , которые может содержать объект.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-192">The capacity of a <xref:System.Collections.SortedList> object is the number of elements that the <xref:System.Collections.SortedList> can hold.</span></span> <span data-ttu-id="e8f0b-193">Когда элементы добавляются в <xref:System.Collections.SortedList>, емкость автоматически увеличивается по мере необходимости путем перераспределения внутреннего массива.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-193">As elements are added to a <xref:System.Collections.SortedList>, the capacity is automatically increased as required by reallocating the internal array.</span></span>  
  
 <span data-ttu-id="e8f0b-194">Если размер коллекции можно оценить, указание начальной емкости избавляет от необходимости выполнять несколько операций изменения размера при добавлении элементов в <xref:System.Collections.SortedList> объект.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-194">If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.SortedList> object.</span></span>  
  
 <span data-ttu-id="e8f0b-195">Этот конструктор является операцией O`n`(), где `n` имеет `capacity`.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-195">This constructor is an O(`n`) operation, where `n` is `capacity`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e8f0b-196">В следующем примере кода создаются коллекции с использованием <xref:System.Collections.SortedList> различных конструкторов и демонстрируются различия в поведении коллекций.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-196">The following code example creates collections using different <xref:System.Collections.SortedList> constructors and demonstrates the differences in the behavior of the collections.</span></span>  
  
 [!code-cpp[System.Collections.SortedList_ctorInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.SortedList_ctorInt/CPP/sortedlist_ctorint.cpp#1)]
 [!code-csharp[System.Collections.SortedList_ctorInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.SortedList_ctorInt/CS/sortedlist_ctorint.cs#1)]
 [!code-vb[System.Collections.SortedList_ctorInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.SortedList_ctorInt/VB/sortedlist_ctorint.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e8f0b-197">Значение параметра <paramref name="capacity" /> меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-197"><paramref name="capacity" /> is less than zero.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="e8f0b-198">Недостаточно свободной памяти для создания объекта <see cref="T:System.Collections.SortedList" /> с указанным значением параметра <paramref name="capacity" />.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-198">There is not enough available memory to create a <see cref="T:System.Collections.SortedList" /> object with the specified <paramref name="capacity" />.</span></span></exception>
        <altmember cref="T:System.Collections.IComparer" />
        <altmember cref="T:System.IComparable" />
        <altmember cref="P:System.Collections.SortedList.Capacity" />
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections.md"><span data-ttu-id="e8f0b-199">Выполнение в коллекциях строковых операций, не зависящих от языка и региональных параметров</span><span class="sxs-lookup"><span data-stu-id="e8f0b-199">Performing Culture-Insensitive String Operations in Collections</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SortedList (System.Collections.IDictionary d, System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.IDictionary d, class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.#ctor(System.Collections.IDictionary,System.Collections.IComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (d As IDictionary, comparer As IComparer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SortedList(System::Collections::IDictionary ^ d, System::Collections::IComparer ^ comparer);" />
      <MemberSignature Language="F#" Value="new System.Collections.SortedList : System.Collections.IDictionary * System.Collections.IComparer -&gt; System.Collections.SortedList" Usage="new System.Collections.SortedList (d, comparer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="d" Type="System.Collections.IDictionary" />
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="e8f0b-200">Реализация интерфейса <see cref="T:System.Collections.IDictionary" /> для копирования в новый объект <see cref="T:System.Collections.SortedList" />.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-200">The <see cref="T:System.Collections.IDictionary" /> implementation to copy to a new <see cref="T:System.Collections.SortedList" /> object.</span></span></param>
        <param name="comparer"><span data-ttu-id="e8f0b-201">Реализация интерфейса <see cref="T:System.Collections.IComparer" />, используемая при сравнении ключей.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-201">The <see cref="T:System.Collections.IComparer" /> implementation to use when comparing keys.</span></span>  
  
<span data-ttu-id="e8f0b-202">- или -</span><span class="sxs-lookup"><span data-stu-id="e8f0b-202">-or-</span></span> 
 <span data-ttu-id="e8f0b-203">Значение <see langword="null" />, используемое в реализации интерфейса <see cref="T:System.IComparable" /> каждого ключа.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-203"><see langword="null" /> to use the <see cref="T:System.IComparable" /> implementation of each key.</span></span></param>
        <summary><span data-ttu-id="e8f0b-204">Инициализирует новый экземпляр <see cref="T:System.Collections.SortedList" />, содержащий элементы, скопированные из указанного словаря, обладающий начальной емкостью, равной количеству скопированных элементов и упорядоченный в соответствии с указанным интерфейсом <see cref="T:System.Collections.IComparer" />.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-204">Initializes a new instance of the <see cref="T:System.Collections.SortedList" /> class that contains elements copied from the specified dictionary, has the same initial capacity as the number of elements copied, and is sorted according to the specified <see cref="T:System.Collections.IComparer" /> interface.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8f0b-205">Элементы сортируются в соответствии с указанной <xref:System.Collections.IComparer> реализацией.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-205">The elements are sorted according to the specified <xref:System.Collections.IComparer> implementation.</span></span> <span data-ttu-id="e8f0b-206">`null` <xref:System.IComparable> <xref:System.IComparable> Если параметр имеет значение, используется реализация каждого ключа, поэтому каждый ключ должен реализовывать интерфейс, чтобы <xref:System.Collections.SortedList> обеспечить возможность сравнения с любым другим ключом в объекте. `comparer`</span><span class="sxs-lookup"><span data-stu-id="e8f0b-206">If the `comparer` parameter is `null`, the <xref:System.IComparable> implementation of each key is used; therefore, each key must implement the <xref:System.IComparable> interface to be capable of comparisons with every other key in the <xref:System.Collections.SortedList> object.</span></span>  
  
 <span data-ttu-id="e8f0b-207">Объект — это пример <xref:System.Collections.IDictionary> реализации, которую можно передать этому конструктору. <xref:System.Collections.Hashtable></span><span class="sxs-lookup"><span data-stu-id="e8f0b-207">A <xref:System.Collections.Hashtable> object is an example of an <xref:System.Collections.IDictionary> implementation that can be passed to this constructor.</span></span> <span data-ttu-id="e8f0b-208">Новый <xref:System.Collections.SortedList> объект содержит копию ключей и значений, хранящихся <xref:System.Collections.Hashtable>в.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-208">The new <xref:System.Collections.SortedList> object contains a copy of the keys and values stored in the <xref:System.Collections.Hashtable>.</span></span>  
  
 <span data-ttu-id="e8f0b-209">Емкость <xref:System.Collections.SortedList> объекта — это количество элементов <xref:System.Collections.SortedList> , которые может содержать объект.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-209">The capacity of a <xref:System.Collections.SortedList> object is the number of elements that the <xref:System.Collections.SortedList> can hold.</span></span> <span data-ttu-id="e8f0b-210">Когда элементы добавляются в <xref:System.Collections.SortedList>, емкость автоматически увеличивается по мере необходимости путем перераспределения внутреннего массива.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-210">As elements are added to a <xref:System.Collections.SortedList>, the capacity is automatically increased as required by reallocating the internal array.</span></span>  
  
 <span data-ttu-id="e8f0b-211">Если размер коллекции можно оценить, указание начальной емкости избавляет от необходимости выполнять несколько операций изменения размера при добавлении элементов в <xref:System.Collections.SortedList> объект.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-211">If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.SortedList> object.</span></span>  
  
 <span data-ttu-id="e8f0b-212">Этот конструктор является операцией O`n`(), где `n` — число элементов в `d`.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-212">This constructor is an O(`n`) operation, where `n` is the number of elements in `d`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e8f0b-213">В следующем примере кода создаются коллекции с использованием <xref:System.Collections.SortedList> различных конструкторов и демонстрируются различия в поведении коллекций.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-213">The following code example creates collections using different <xref:System.Collections.SortedList> constructors and demonstrates the differences in the behavior of the collections.</span></span>  
  
 [!code-cpp[System.Collections.SortedList_ctorDictionary#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.SortedList_ctorDictionary/CPP/sortedlist_ctordictionary.cpp#1)]
 [!code-csharp[System.Collections.SortedList_ctorDictionary#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.SortedList_ctorDictionary/CS/sortedlist_ctordictionary.cs#1)]
 [!code-vb[System.Collections.SortedList_ctorDictionary#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.SortedList_ctorDictionary/VB/sortedlist_ctordictionary.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e8f0b-214">Свойство <paramref name="d" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-214"><paramref name="d" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="e8f0b-215">Значение параметра <paramref name="comparer" /> — <see langword="null" />, а один или несколько элементов в параметре <paramref name="d" /> не реализуют интерфейс <see cref="T:System.IComparable" />.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-215"><paramref name="comparer" /> is <see langword="null" />, and one or more elements in <paramref name="d" /> do not implement the <see cref="T:System.IComparable" /> interface.</span></span></exception>
        <altmember cref="T:System.Collections.IDictionary" />
        <altmember cref="T:System.Collections.IComparer" />
        <altmember cref="T:System.IComparable" />
        <altmember cref="T:System.Collections.Hashtable" />
        <altmember cref="P:System.Collections.SortedList.Capacity" />
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections.md"><span data-ttu-id="e8f0b-216">Выполнение в коллекциях строковых операций, не зависящих от языка и региональных параметров</span><span class="sxs-lookup"><span data-stu-id="e8f0b-216">Performing Culture-Insensitive String Operations in Collections</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual void Add (object key, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(object key, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.Add(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Add (key As Object, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Add(System::Object ^ key, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member Add : obj * obj -&gt; unit&#xA;override this.Add : obj * obj -&gt; unit" Usage="sortedList.Add (key, value)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.Add(System.Object,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="e8f0b-217">Ключ добавляемого элемента.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-217">The key of the element to add.</span></span></param>
        <param name="value"><span data-ttu-id="e8f0b-218">Добавляемое значение элемента.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-218">The value of the element to add.</span></span> <span data-ttu-id="e8f0b-219">Допускается значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-219">The value can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="e8f0b-220">Добавляет элемент с указанными ключом и значением в объект <see cref="T:System.Collections.SortedList" />.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-220">Adds an element with the specified key and value to a <see cref="T:System.Collections.SortedList" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8f0b-221">Точка вставки определяется по выбранному компаратору явным образом или по умолчанию при <xref:System.Collections.SortedList> создании объекта.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-221">The insertion point is determined based on the comparer selected, either explicitly or by default, when the <xref:System.Collections.SortedList> object was created.</span></span>  
  
 <span data-ttu-id="e8f0b-222">Если <xref:System.Collections.SortedList.Count%2A> значение уже <xref:System.Collections.SortedList.Capacity%2A> равно <xref:System.Collections.SortedList>  , емкость объекта увеличивается путем автоматического перераспределения внутреннего массива, а существующие элементы копируются в новый массив перед добавлением нового элемента.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-222">If <xref:System.Collections.SortedList.Count%2A> already equals <xref:System.Collections.SortedList.Capacity%2A>, the capacity of the <xref:System.Collections.SortedList> object is increased by automatically reallocating the internal array, and the existing elements are copied to the new array before the new element is added.</span></span>  
  
 <span data-ttu-id="e8f0b-223">Можно также использовать <xref:System.Collections.SortedList.Item%2A> свойство для добавления новых элементов, задав значение ключа, который не существует <xref:System.Collections.SortedList> в объекте (например, `myCollection["myNonexistentKey"] = myValue`).</span><span class="sxs-lookup"><span data-stu-id="e8f0b-223">You can also use the <xref:System.Collections.SortedList.Item%2A> property to add new elements by setting the value of a key that does not exist in the <xref:System.Collections.SortedList> object (for example, `myCollection["myNonexistentKey"] = myValue`).</span></span> <span data-ttu-id="e8f0b-224">Однако если указанный ключ уже существует в <xref:System.Collections.SortedList>, <xref:System.Collections.SortedList.Item%2A> установка свойства перезаписывает старое значение.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-224">However, if the specified key already exists in the <xref:System.Collections.SortedList>, setting the <xref:System.Collections.SortedList.Item%2A> property overwrites the old value.</span></span> <span data-ttu-id="e8f0b-225">В отличие от этого <xref:System.Collections.SortedList.Add%2A> , метод не изменяет существующие элементы.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-225">In contrast, the <xref:System.Collections.SortedList.Add%2A> method does not modify existing elements.</span></span>  
  
 <span data-ttu-id="e8f0b-226">Элементы <xref:System.Collections.SortedList> объекта сортируются по ключам в соответствии с конкретной <xref:System.Collections.IComparer> реализацией, <xref:System.Collections.SortedList> заданной при создании или в соответствии <xref:System.IComparable> с реализацией, предоставляемой самими ключами.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-226">The elements of a <xref:System.Collections.SortedList> object are sorted by the keys either according to a specific <xref:System.Collections.IComparer> implementation specified when the <xref:System.Collections.SortedList> is created or according to the <xref:System.IComparable> implementation provided by the keys themselves.</span></span>  
  
 <span data-ttu-id="e8f0b-227">Ключ не может быть `null`, а значение может быть.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-227">A key cannot be `null`, but a value can be.</span></span>  
  
 <span data-ttu-id="e8f0b-228">Этот метод является операцией O`n`() для несортированных данных, где `n` имеет <xref:System.Collections.SortedList.Count%2A>тип.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-228">This method is an O(`n`) operation for unsorted data, where `n` is <xref:System.Collections.SortedList.Count%2A>.</span></span> <span data-ttu-id="e8f0b-229">Это операция O (log `n`), если новый элемент добавляется в конец списка.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-229">It is an O(log `n`) operation if the new element is added at the end of the list.</span></span> <span data-ttu-id="e8f0b-230">Если вставка приводит к изменению размера, операция является операцией`n`O ().</span><span class="sxs-lookup"><span data-stu-id="e8f0b-230">If insertion causes a resize, the operation is O(`n`).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e8f0b-231">В следующем примере кода показано, как добавить элементы в <xref:System.Collections.SortedList> объект.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-231">The following code example shows how to add elements to a <xref:System.Collections.SortedList> object.</span></span>  
  
 [!code-cpp[Classic SortedList.Add Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList.Add Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SortedList.Add Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList.Add Example/CS/source.cs#1)]
 [!code-vb[Classic SortedList.Add Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList.Add Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e8f0b-232">Свойство <paramref name="key" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-232"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e8f0b-233">Элемент с указанным значением параметра <paramref name="key" /> уже существует в объекте <see cref="T:System.Collections.SortedList" />.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-233">An element with the specified <paramref name="key" /> already exists in the <see cref="T:System.Collections.SortedList" /> object.</span></span>  
  
<span data-ttu-id="e8f0b-234">- или -</span><span class="sxs-lookup"><span data-stu-id="e8f0b-234">-or-</span></span> 
<span data-ttu-id="e8f0b-235">Для объекта <see cref="T:System.Collections.SortedList" /> задано использование интерфейса <see cref="T:System.IComparable" />, а параметр <paramref name="key" /> не реализует интерфейс <see cref="T:System.IComparable" />.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-235">The <see cref="T:System.Collections.SortedList" /> is set to use the <see cref="T:System.IComparable" /> interface, and <paramref name="key" /> does not implement the <see cref="T:System.IComparable" /> interface.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="e8f0b-236">Объект <see cref="T:System.Collections.SortedList" /> доступен только для чтения.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-236">The <see cref="T:System.Collections.SortedList" /> is read-only.</span></span>  
  
<span data-ttu-id="e8f0b-237">- или -</span><span class="sxs-lookup"><span data-stu-id="e8f0b-237">-or-</span></span> 
<span data-ttu-id="e8f0b-238"><see cref="T:System.Collections.SortedList" /> имеет фиксированный размер.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-238">The <see cref="T:System.Collections.SortedList" /> has a fixed size.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="e8f0b-239">Недостаточно свободной памяти для добавления элемента в объект <see cref="T:System.Collections.SortedList" />.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-239">There is not enough available memory to add the element to the <see cref="T:System.Collections.SortedList" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e8f0b-240">Средство сравнения выдает исключение.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-240">The comparer throws an exception.</span></span></exception>
        <altmember cref="P:System.Collections.SortedList.Item(System.Object)" />
        <altmember cref="T:System.Collections.IComparer" />
        <altmember cref="T:System.IComparable" />
        <altmember cref="P:System.Collections.SortedList.Capacity" />
      </Docs>
    </Member>
    <Member MemberName="Capacity">
      <MemberSignature Language="C#" Value="public virtual int Capacity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Capacity" />
      <MemberSignature Language="DocId" Value="P:System.Collections.SortedList.Capacity" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Capacity As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Capacity { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Capacity : int with get, set" Usage="System.Collections.SortedList.Capacity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e8f0b-241">Возвращает или задает емкость объекта <see cref="T:System.Collections.SortedList" />.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-241">Gets or sets the capacity of a <see cref="T:System.Collections.SortedList" /> object.</span></span></summary>
        <value><span data-ttu-id="e8f0b-242">Начальное количество элементов, которое может содержать объект <see cref="T:System.Collections.SortedList" />.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-242">The number of elements that the <see cref="T:System.Collections.SortedList" /> object can contain.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8f0b-243"><xref:System.Collections.SortedList.Capacity%2A>число элементов, которые <xref:System.Collections.SortedList> может хранить объект.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-243"><xref:System.Collections.SortedList.Capacity%2A> is the number of elements that the <xref:System.Collections.SortedList> object can store.</span></span> <span data-ttu-id="e8f0b-244"><xref:System.Collections.SortedList.Count%2A>число элементов, которые фактически находятся в <xref:System.Collections.SortedList>.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-244"><xref:System.Collections.SortedList.Count%2A> is the number of elements that are actually in the <xref:System.Collections.SortedList>.</span></span>  
  
 <span data-ttu-id="e8f0b-245"><xref:System.Collections.SortedList.Capacity%2A>всегда больше или равно <xref:System.Collections.SortedList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-245"><xref:System.Collections.SortedList.Capacity%2A> is always greater than or equal to <xref:System.Collections.SortedList.Count%2A>.</span></span> <span data-ttu-id="e8f0b-246">Если <xref:System.Collections.SortedList.Count%2A> превышено <xref:System.Collections.SortedList.Capacity%2A> время добавления элементов, емкость автоматически увеличивается путем перераспределения внутреннего массива перед копированием старых элементов и добавлением новых элементов.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-246">If <xref:System.Collections.SortedList.Count%2A> exceeds <xref:System.Collections.SortedList.Capacity%2A> while adding elements, the capacity is automatically increased by reallocating the internal array before copying the old elements and adding the new elements.</span></span>  
  
 <span data-ttu-id="e8f0b-247">Емкость можно уменьшить, вызвав <xref:System.Collections.SortedList.TrimToSize%2A> или явно <xref:System.Collections.SortedList.Capacity%2A> задав свойство.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-247">The capacity can be decreased by calling <xref:System.Collections.SortedList.TrimToSize%2A> or by setting the <xref:System.Collections.SortedList.Capacity%2A> property explicitly.</span></span> <span data-ttu-id="e8f0b-248">Если значение <xref:System.Collections.SortedList.Capacity%2A> задано явно, внутренний массив также перераспределяется в соответствии с заданной емкостью.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-248">When the value of <xref:System.Collections.SortedList.Capacity%2A> is set explicitly, the internal array is also reallocated to accommodate the specified capacity.</span></span>  
  
 <span data-ttu-id="e8f0b-249">Получение значения этого свойства является операцией O (1); Задание свойства является операцией O (`n`), где `n` — это новая емкость.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-249">Retrieving the value of this property is an O(1) operation; setting the property is an O(`n`) operation, where `n` is the new capacity.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e8f0b-250">Присваиваемое значение меньше, чем текущее число элементов в объекте <see cref="T:System.Collections.SortedList" />.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-250">The value assigned is less than the current number of elements in the <see cref="T:System.Collections.SortedList" /> object.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="e8f0b-251">Не хватает памяти в системе.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-251">There is not enough memory available on the system.</span></span></exception>
        <altmember cref="M:System.Collections.SortedList.TrimToSize" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public virtual void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit&#xA;override this.Clear : unit -&gt; unit" Usage="sortedList.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e8f0b-252">Удаляет все элементы из объекта <see cref="T:System.Collections.SortedList" />.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-252">Removes all elements from a <see cref="T:System.Collections.SortedList" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8f0b-253"><xref:System.Collections.SortedList.Count%2A>имеет нулевое значение, а ссылки на другие объекты из элементов коллекции также освобождаются.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-253"><xref:System.Collections.SortedList.Count%2A> is set to zero and references to other objects from elements of the collection are also released.</span></span>  
  
 <span data-ttu-id="e8f0b-254"><xref:System.Collections.SortedList.Capacity%2A>не изменяется.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-254"><xref:System.Collections.SortedList.Capacity%2A> remains unchanged.</span></span> <span data-ttu-id="e8f0b-255">Чтобы сбросить емкость <xref:System.Collections.SortedList> объекта, вызовите <xref:System.Collections.SortedList.TrimToSize%2A> или задайте <xref:System.Collections.SortedList.Capacity%2A> свойство напрямую.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-255">To reset the capacity of the <xref:System.Collections.SortedList> object, call <xref:System.Collections.SortedList.TrimToSize%2A> or set the <xref:System.Collections.SortedList.Capacity%2A> property directly.</span></span> <span data-ttu-id="e8f0b-256">Удаление пустой <xref:System.Collections.SortedList> задает емкость объекта <xref:System.Collections.SortedList> емкость по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-256">Trimming an empty <xref:System.Collections.SortedList> sets the capacity of the <xref:System.Collections.SortedList> to the default capacity.</span></span>  
  
 <span data-ttu-id="e8f0b-257">Этот метод является операцией O`n`(), где `n` имеет <xref:System.Collections.SortedList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-257">This method is an O(`n`) operation, where `n` is <xref:System.Collections.SortedList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e8f0b-258">В следующем примере кода показано, как обрезать неиспользуемые части <xref:System.Collections.SortedList> объекта и как очистить значения. <xref:System.Collections.SortedList></span><span class="sxs-lookup"><span data-stu-id="e8f0b-258">The following code example shows how to trim the unused portions of a <xref:System.Collections.SortedList> object and how to clear the values of the <xref:System.Collections.SortedList>.</span></span>  
  
 [!code-cpp[Classic SortedList.Clear Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList.Clear Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SortedList.Clear Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList.Clear Example/CS/source.cs#1)]
 [!code-vb[Classic SortedList.Clear Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList.Clear Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="e8f0b-259">Объект <see cref="T:System.Collections.SortedList" /> доступен только для чтения.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-259">The <see cref="T:System.Collections.SortedList" /> object is read-only.</span></span>  
  
<span data-ttu-id="e8f0b-260">- или -</span><span class="sxs-lookup"><span data-stu-id="e8f0b-260">-or-</span></span> 
<span data-ttu-id="e8f0b-261"><see cref="T:System.Collections.SortedList" /> имеет фиксированный размер.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-261">The <see cref="T:System.Collections.SortedList" /> has a fixed size.</span></span></exception>
        <altmember cref="M:System.Collections.SortedList.TrimToSize" />
        <altmember cref="P:System.Collections.SortedList.Capacity" />
        <altmember cref="P:System.Collections.SortedList.Count" />
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public virtual object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; obj&#xA;override this.Clone : unit -&gt; obj" Usage="sortedList.Clone " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e8f0b-262">Создает неполную копию объекта <see cref="T:System.Collections.SortedList" />.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-262">Creates a shallow copy of a <see cref="T:System.Collections.SortedList" /> object.</span></span></summary>
        <returns><span data-ttu-id="e8f0b-263">Неполная копия объекта <see cref="T:System.Collections.SortedList" />.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-263">A shallow copy of the <see cref="T:System.Collections.SortedList" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8f0b-264">Неполная копия коллекции копирует только элементы коллекции, будь то ссылочные типы или типы значений, но не копирует объекты, на которые ссылаются ссылки.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-264">A shallow copy of a collection copies only the elements of the collection, whether they are reference types or value types, but does not copy the objects that the references refer to.</span></span> <span data-ttu-id="e8f0b-265">Ссылки в новой коллекции указывают на те же объекты, на которые указывает ссылка в исходной коллекции.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-265">The references in the new collection point to the same objects that the references in the original collection point to.</span></span>  
  
 <span data-ttu-id="e8f0b-266">В отличие от этого, глубокая копия коллекции копирует элементы и все, на которые прямо или косвенно ссылаются элементы.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-266">In contrast, a deep copy of a collection copies the elements and everything directly or indirectly referenced by the elements.</span></span>  
  
 <span data-ttu-id="e8f0b-267">Этот метод является операцией O`n`(), где `n` имеет <xref:System.Collections.SortedList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-267">This method is an O(`n`) operation, where `n` is <xref:System.Collections.SortedList.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.SortedList.CopyTo(System.Array,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public virtual bool Contains (object key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(object key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Contains (key As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Contains(System::Object ^ key);" />
      <MemberSignature Language="F#" Value="abstract member Contains : obj -&gt; bool&#xA;override this.Contains : obj -&gt; bool" Usage="sortedList.Contains key" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="e8f0b-268">Ключ для размещения в объекте <see cref="T:System.Collections.SortedList" />.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-268">The key to locate in the <see cref="T:System.Collections.SortedList" /> object.</span></span></param>
        <summary><span data-ttu-id="e8f0b-269">Определяет, содержит ли объект <see cref="T:System.Collections.SortedList" /> указанный ключ.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-269">Determines whether a <see cref="T:System.Collections.SortedList" /> object contains a specific key.</span></span></summary>
        <returns><span data-ttu-id="e8f0b-270">Значение <see langword="true" />, если объект <see cref="T:System.Collections.SortedList" /> содержит элемент с указанным значением параметра <paramref name="key" />; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-270"><see langword="true" /> if the <see cref="T:System.Collections.SortedList" /> object contains an element with the specified <paramref name="key" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8f0b-271">Элементы <xref:System.Collections.SortedList> объекта сортируются по ключам в соответствии с конкретной <xref:System.Collections.IComparer> реализацией, <xref:System.Collections.SortedList> заданной при создании или в соответствии <xref:System.IComparable> с реализацией, предоставляемой самими ключами.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-271">The elements of a <xref:System.Collections.SortedList> object are sorted by the keys either according to a specific <xref:System.Collections.IComparer> implementation specified when the <xref:System.Collections.SortedList> is created or according to the <xref:System.IComparable> implementation provided by the keys themselves.</span></span>  
  
 <span data-ttu-id="e8f0b-272">Объект <xref:System.Collections.SortedList.Contains%2A> реализует интерфейс <xref:System.Collections.IDictionary.Contains%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-272"><xref:System.Collections.SortedList.Contains%2A> implements <xref:System.Collections.IDictionary.Contains%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="e8f0b-273">Он ведет себя точно так же <xref:System.Collections.SortedList.ContainsKey%2A>, как.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-273">It behaves exactly as <xref:System.Collections.SortedList.ContainsKey%2A>.</span></span>  
  
 <span data-ttu-id="e8f0b-274">Этот метод использует алгоритм двоичного поиска. Таким образом, этот метод является операцией O `n`(log), `n` где <xref:System.Collections.SortedList.Count%2A>—.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-274">This method uses a binary search algorithm; therefore, this method is an O(log `n`) operation, where `n` is <xref:System.Collections.SortedList.Count%2A>.</span></span>  
  
 <span data-ttu-id="e8f0b-275">Начиная с .NET Framework 2,0, этот метод использует объекты <xref:System.Object.Equals%2A> и <xref:System.IComparable.CompareTo%2A> методы `item` коллекции для определения того, существует ли элемент.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-275">Starting with the .NET Framework 2.0, this method uses the collection's objects' <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether item exists.</span></span> <span data-ttu-id="e8f0b-276">В более ранних версиях .NET Framework это определение было выполнено с помощью <xref:System.Object.Equals%2A> методов `item` и <xref:System.IComparable.CompareTo%2A> параметра для объектов в коллекции.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-276">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e8f0b-277">В следующем примере кода показано, как определить, <xref:System.Collections.SortedList> содержит ли объект определенный элемент.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-277">The following code example shows how to determine whether a <xref:System.Collections.SortedList> object contains a specific element.</span></span>  
  
 [!code-cpp[Classic SortedList.Contains Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList.Contains Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SortedList.Contains Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList.Contains Example/CS/source.cs#1)]
 [!code-vb[Classic SortedList.Contains Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList.Contains Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e8f0b-278"><paramref name="key" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-278"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e8f0b-279">Средство сравнения выдает исключение.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-279">The comparer throws an exception.</span></span></exception>
        <altmember cref="M:System.Collections.SortedList.ContainsKey(System.Object)" />
        <altmember cref="M:System.Collections.SortedList.IndexOfKey(System.Object)" />
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections.md"><span data-ttu-id="e8f0b-280">Выполнение в коллекциях строковых операций, не зависящих от языка и региональных параметров</span><span class="sxs-lookup"><span data-stu-id="e8f0b-280">Performing Culture-Insensitive String Operations in Collections</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ContainsKey">
      <MemberSignature Language="C#" Value="public virtual bool ContainsKey (object key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ContainsKey(object key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.ContainsKey(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ContainsKey (key As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ContainsKey(System::Object ^ key);" />
      <MemberSignature Language="F#" Value="abstract member ContainsKey : obj -&gt; bool&#xA;override this.ContainsKey : obj -&gt; bool" Usage="sortedList.ContainsKey key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="e8f0b-281">Ключ для размещения в объекте <see cref="T:System.Collections.SortedList" />.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-281">The key to locate in the <see cref="T:System.Collections.SortedList" /> object.</span></span></param>
        <summary><span data-ttu-id="e8f0b-282">Определяет, содержит ли объект <see cref="T:System.Collections.SortedList" /> указанный ключ.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-282">Determines whether a <see cref="T:System.Collections.SortedList" /> object contains a specific key.</span></span></summary>
        <returns><span data-ttu-id="e8f0b-283">Значение <see langword="true" />, если объект <see cref="T:System.Collections.SortedList" /> содержит элемент с указанным значением параметра <paramref name="key" />; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-283"><see langword="true" /> if the <see cref="T:System.Collections.SortedList" /> object contains an element with the specified <paramref name="key" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8f0b-284">Элементы <xref:System.Collections.SortedList> объекта сортируются по ключам в соответствии с конкретной <xref:System.Collections.IComparer> реализацией, <xref:System.Collections.SortedList> заданной при создании или в соответствии <xref:System.IComparable> с реализацией, предоставляемой самими ключами.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-284">The elements of a <xref:System.Collections.SortedList> object are sorted by the keys either according to a specific <xref:System.Collections.IComparer> implementation specified when the <xref:System.Collections.SortedList> is created or according to the <xref:System.IComparable> implementation provided by the keys themselves.</span></span>  
  
 <span data-ttu-id="e8f0b-285">Этот метод ведет себя точно так же, <xref:System.Collections.SortedList.Contains%2A> как метод.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-285">This method behaves exactly as the <xref:System.Collections.SortedList.Contains%2A> method.</span></span>  
  
 <span data-ttu-id="e8f0b-286">Этот метод использует алгоритм двоичного поиска. Таким образом, этот метод является операцией O `n`(log), `n` где <xref:System.Collections.SortedList.Count%2A>—.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-286">This method uses a binary search algorithm; therefore, this method is an O(log `n`) operation, where `n` is <xref:System.Collections.SortedList.Count%2A>.</span></span>  
  
 <span data-ttu-id="e8f0b-287">Начиная с .NET Framework 2,0, этот метод использует объекты <xref:System.Object.Equals%2A> и <xref:System.IComparable.CompareTo%2A> методы `item` коллекции для определения того, существует ли элемент.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-287">Starting with the .NET Framework 2.0, this method uses the collection's objects' <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether item exists.</span></span> <span data-ttu-id="e8f0b-288">В более ранних версиях .NET Framework это определение было выполнено с помощью <xref:System.Object.Equals%2A> методов `item` и <xref:System.IComparable.CompareTo%2A> параметра для объектов в коллекции.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-288">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e8f0b-289">В следующем примере кода показано, как определить, <xref:System.Collections.SortedList> содержит ли объект определенный элемент.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-289">The following code example shows how to determine whether a <xref:System.Collections.SortedList> object contains a specific element.</span></span>  
  
 [!code-cpp[Classic SortedList.Contains Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList.Contains Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SortedList.Contains Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList.Contains Example/CS/source.cs#1)]
 [!code-vb[Classic SortedList.Contains Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList.Contains Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e8f0b-290"><paramref name="key" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-290"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e8f0b-291">Средство сравнения выдает исключение.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-291">The comparer throws an exception.</span></span></exception>
        <altmember cref="M:System.Collections.SortedList.Contains(System.Object)" />
        <altmember cref="M:System.Collections.SortedList.ContainsValue(System.Object)" />
        <altmember cref="M:System.Collections.SortedList.IndexOfKey(System.Object)" />
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections.md"><span data-ttu-id="e8f0b-292">Выполнение в коллекциях строковых операций, не зависящих от языка и региональных параметров</span><span class="sxs-lookup"><span data-stu-id="e8f0b-292">Performing Culture-Insensitive String Operations in Collections</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ContainsValue">
      <MemberSignature Language="C#" Value="public virtual bool ContainsValue (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ContainsValue(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.ContainsValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ContainsValue (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ContainsValue(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member ContainsValue : obj -&gt; bool&#xA;override this.ContainsValue : obj -&gt; bool" Usage="sortedList.ContainsValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="e8f0b-293">Значение, которое требуется найти в объекте <see cref="T:System.Collections.SortedList" />.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-293">The value to locate in the <see cref="T:System.Collections.SortedList" /> object.</span></span> <span data-ttu-id="e8f0b-294">Допускается значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-294">The value can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="e8f0b-295">Определяет, содержит ли объект <see cref="T:System.Collections.SortedList" /> указанное значение.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-295">Determines whether a <see cref="T:System.Collections.SortedList" /> object contains a specific value.</span></span></summary>
        <returns><span data-ttu-id="e8f0b-296">Значение <see langword="true" />, если объект <see cref="T:System.Collections.SortedList" /> содержит элемент с указанным значением параметра <paramref name="value" />; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-296"><see langword="true" /> if the <see cref="T:System.Collections.SortedList" /> object contains an element with the specified <paramref name="value" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8f0b-297">Значения элементов <xref:System.Collections.SortedList> объекта сравниваются с указанным значением <xref:System.Object.Equals%2A> с помощью метода.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-297">The values of the elements of the <xref:System.Collections.SortedList> object are compared to the specified value using the <xref:System.Object.Equals%2A> method.</span></span>  
  
 <span data-ttu-id="e8f0b-298">Этот метод выполняет линейный поиск. Таким образом, среднее время выполнения пропорционально значению <xref:System.Collections.SortedList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-298">This method performs a linear search; therefore, the average execution time is proportional to <xref:System.Collections.SortedList.Count%2A>.</span></span> <span data-ttu-id="e8f0b-299">То есть, этот метод является операцией O`n`(), где `n` имеет <xref:System.Collections.SortedList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-299">That is, this method is an O(`n`) operation, where `n` is <xref:System.Collections.SortedList.Count%2A>.</span></span>  
  
 <span data-ttu-id="e8f0b-300">Начиная с .NET Framework 2,0, этот метод использует объекты <xref:System.Object.Equals%2A> и <xref:System.IComparable.CompareTo%2A> методы `item` коллекции для определения того, существует ли элемент.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-300">Starting with the .NET Framework 2.0, this method uses the collection's objects' <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether item exists.</span></span> <span data-ttu-id="e8f0b-301">В более ранних версиях .NET Framework это определение было выполнено с помощью <xref:System.Object.Equals%2A> методов `item` и <xref:System.IComparable.CompareTo%2A> параметра для объектов в коллекции.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-301">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e8f0b-302">В следующем примере кода показано, как определить, <xref:System.Collections.SortedList> содержит ли объект определенный элемент.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-302">The following code example shows how to determine whether a <xref:System.Collections.SortedList> object contains a specific element.</span></span>  
  
 [!code-cpp[Classic SortedList.Contains Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList.Contains Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SortedList.Contains Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList.Contains Example/CS/source.cs#1)]
 [!code-vb[Classic SortedList.Contains Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList.Contains Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.SortedList.ContainsKey(System.Object)" />
        <altmember cref="M:System.Collections.SortedList.IndexOfValue(System.Object)" />
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections.md"><span data-ttu-id="e8f0b-303">Выполнение в коллекциях строковых операций, не зависящих от языка и региональных параметров</span><span class="sxs-lookup"><span data-stu-id="e8f0b-303">Performing Culture-Insensitive String Operations in Collections</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public virtual void CopyTo (Array array, int arrayIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array array, int32 arrayIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ array, int arrayIndex);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : Array * int -&gt; unit&#xA;override this.CopyTo : Array * int -&gt; unit" Usage="sortedList.CopyTo (array, arrayIndex)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="arrayIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="e8f0b-304">Одномерный объект <see cref="T:System.Array" />, который является конечным объектом для объектов <see cref="T:System.Collections.DictionaryEntry" />, копируемых из объекта <see cref="T:System.Collections.SortedList" />.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-304">The one-dimensional <see cref="T:System.Array" /> object that is the destination of the <see cref="T:System.Collections.DictionaryEntry" /> objects copied from <see cref="T:System.Collections.SortedList" />.</span></span> <span data-ttu-id="e8f0b-305">Массив <see cref="T:System.Array" /> должен иметь индексацию, начинающуюся с нуля.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-305">The <see cref="T:System.Array" /> must have zero-based indexing.</span></span></param>
        <param name="arrayIndex"><span data-ttu-id="e8f0b-306">Отсчитываемый от нуля индекс в массиве <paramref name="array" />, указывающий начало копирования.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-306">The zero-based index in <paramref name="array" /> at which copying begins.</span></span></param>
        <summary><span data-ttu-id="e8f0b-307">Копирует элементы объекта <see cref="T:System.Collections.SortedList" /> в одномерный объект <see cref="T:System.Array" /> начиная с указанного значения индекса массива.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-307">Copies <see cref="T:System.Collections.SortedList" /> elements to a one-dimensional <see cref="T:System.Array" /> object, starting at the specified index in the array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8f0b-308">Пары "ключ-значение" копируются <xref:System.Array> в объект в том же порядке, в котором перечислитель проходит <xref:System.Collections.SortedList> по объекту.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-308">The key/value pairs are copied to the <xref:System.Array> object in the same order in which the enumerator iterates through the <xref:System.Collections.SortedList> object.</span></span>  
  
 <span data-ttu-id="e8f0b-309">Чтобы скопировать только ключи в <xref:System.Collections.SortedList>, используйте. `SortedList.Keys.CopyTo`</span><span class="sxs-lookup"><span data-stu-id="e8f0b-309">To copy only the keys in the <xref:System.Collections.SortedList>, use `SortedList.Keys.CopyTo`.</span></span>  
  
 <span data-ttu-id="e8f0b-310">Чтобы скопировать только значения в <xref:System.Collections.SortedList>, используйте. `SortedList.Values.CopyTo`</span><span class="sxs-lookup"><span data-stu-id="e8f0b-310">To copy only the values in the <xref:System.Collections.SortedList>, use `SortedList.Values.CopyTo`.</span></span>  
  
 <span data-ttu-id="e8f0b-311">Этот метод является операцией O`n`(), где `n` имеет <xref:System.Collections.SortedList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-311">This method is an O(`n`) operation, where `n` is <xref:System.Collections.SortedList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e8f0b-312">В следующем примере кода показано, как скопировать значения <xref:System.Collections.SortedList> объекта в одномерный <xref:System.Array> объект.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-312">The following code example shows how to copy the values in a <xref:System.Collections.SortedList> object into a one-dimensional <xref:System.Array> object.</span></span>  
  
 [!code-cpp[Classic SortedList.CopyTo Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList.CopyTo Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SortedList.CopyTo Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList.CopyTo Example/CS/source.cs#1)]
 [!code-vb[Classic SortedList.CopyTo Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList.CopyTo Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e8f0b-313">Свойство <paramref name="array" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-313"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e8f0b-314">Значение параметра <paramref name="arrayIndex" /> меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-314"><paramref name="arrayIndex" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e8f0b-315">Массив <paramref name="array" /> является многомерным.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-315"><paramref name="array" /> is multidimensional.</span></span>  
  
<span data-ttu-id="e8f0b-316">-или-</span><span class="sxs-lookup"><span data-stu-id="e8f0b-316">-or-</span></span> 
<span data-ttu-id="e8f0b-317">Количество элементов в исходном объекте <see cref="T:System.Collections.SortedList" /> превышает размер доступного места, начиная с индекса массива <paramref name="arrayIndex" /> и до конца массива назначения <paramref name="array" />.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-317">The number of elements in the source <see cref="T:System.Collections.SortedList" /> object is greater than the available space from <paramref name="arrayIndex" /> to the end of the destination <paramref name="array" />.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="e8f0b-318">Тип исходного массива <see cref="T:System.Collections.SortedList" /> не может быть автоматически приведен к типу массива назначения <paramref name="array" />.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-318">The type of the source <see cref="T:System.Collections.SortedList" /> cannot be cast automatically to the type of the destination <paramref name="array" />.</span></span></exception>
        <altmember cref="T:System.Array" />
        <altmember cref="T:System.Collections.DictionaryEntry" />
        <altmember cref="M:System.Collections.SortedList.GetEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public virtual int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Collections.SortedList.Count" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Collections.SortedList.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e8f0b-319">Получает количество элементов, содержащихся в объекте <see cref="T:System.Collections.SortedList" />.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-319">Gets the number of elements contained in a <see cref="T:System.Collections.SortedList" /> object.</span></span></summary>
        <value><span data-ttu-id="e8f0b-320">Количество элементов, содержащихся в объекте <see cref="T:System.Collections.SortedList" />.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-320">The number of elements contained in the <see cref="T:System.Collections.SortedList" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8f0b-321">Каждый элемент представляет собой пару "ключ-значение", доступ к которой <xref:System.Collections.DictionaryEntry> можно получить как к объекту.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-321">Each element is a key/value pair that can be accessed as a <xref:System.Collections.DictionaryEntry> object.</span></span>  
  
 <span data-ttu-id="e8f0b-322"><xref:System.Collections.SortedList.Capacity%2A>число элементов, которые <xref:System.Collections.SortedList> может хранить объект.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-322"><xref:System.Collections.SortedList.Capacity%2A> is the number of elements that the <xref:System.Collections.SortedList> object can store.</span></span> <span data-ttu-id="e8f0b-323"><xref:System.Collections.SortedList.Count%2A>число элементов, которые фактически находятся в <xref:System.Collections.SortedList>.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-323"><xref:System.Collections.SortedList.Count%2A> is the number of elements that are actually in the <xref:System.Collections.SortedList>.</span></span>  
  
 <span data-ttu-id="e8f0b-324"><xref:System.Collections.SortedList.Capacity%2A>всегда больше или равно <xref:System.Collections.SortedList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-324"><xref:System.Collections.SortedList.Capacity%2A> is always greater than or equal to <xref:System.Collections.SortedList.Count%2A>.</span></span> <span data-ttu-id="e8f0b-325">Если <xref:System.Collections.SortedList.Count%2A> превышено <xref:System.Collections.SortedList.Capacity%2A> время добавления элементов, емкость автоматически увеличивается путем перераспределения внутреннего массива перед копированием старых элементов и добавлением новых элементов.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-325">If <xref:System.Collections.SortedList.Count%2A> exceeds <xref:System.Collections.SortedList.Capacity%2A> while adding elements, the capacity is automatically increased by reallocating the internal array before copying the old elements and adding the new elements.</span></span>  
  
 <span data-ttu-id="e8f0b-326">Получение значения данного свойства является операцией порядка сложности O(1).</span><span class="sxs-lookup"><span data-stu-id="e8f0b-326">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.SortedList.Capacity" />
      </Docs>
    </Member>
    <Member MemberName="GetByIndex">
      <MemberSignature Language="C#" Value="public virtual object GetByIndex (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetByIndex(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.GetByIndex(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetByIndex (index As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetByIndex(int index);" />
      <MemberSignature Language="F#" Value="abstract member GetByIndex : int -&gt; obj&#xA;override this.GetByIndex : int -&gt; obj" Usage="sortedList.GetByIndex index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="e8f0b-327">Отсчитываемый от нуля индекс значения, которое нужно получить.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-327">The zero-based index of the value to get.</span></span></param>
        <summary><span data-ttu-id="e8f0b-328">Получает значение с указанным индексом из объекта <see cref="T:System.Collections.SortedList" />.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-328">Gets the value at the specified index of a <see cref="T:System.Collections.SortedList" /> object.</span></span></summary>
        <returns><span data-ttu-id="e8f0b-329">Возвращает значение по указанному индексу в классе <see cref="T:System.Collections.SortedList" />.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-329">The value at the specified index of the <see cref="T:System.Collections.SortedList" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8f0b-330">Последовательность индексов основана на последовательности сортировки.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-330">The index sequence is based on the sort sequence.</span></span> <span data-ttu-id="e8f0b-331">При добавлении элемента он вставляется <xref:System.Collections.SortedList> в правильный порядок сортировки, а индексирование корректируется соответствующим образом.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-331">When an element is added, it is inserted into <xref:System.Collections.SortedList> in the correct sort order, and the indexing adjusts accordingly.</span></span> <span data-ttu-id="e8f0b-332">При удалении элемента индексирование также корректируется соответствующим образом.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-332">When an element is removed, the indexing also adjusts accordingly.</span></span> <span data-ttu-id="e8f0b-333">Таким образом, индекс определенной пары «ключ-значение» может измениться по мере добавления или удаления элементов из <xref:System.Collections.SortedList> объекта.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-333">Therefore, the index of a specific key/value pair might change as elements are added or removed from the <xref:System.Collections.SortedList> object.</span></span>  
  
 <span data-ttu-id="e8f0b-334">Этот метод является операцией O (1).</span><span class="sxs-lookup"><span data-stu-id="e8f0b-334">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e8f0b-335">В следующем примере кода показано, как получить один или все ключи или значения в <xref:System.Collections.SortedList> объекте.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-335">The following code example shows how to get one or all the keys or values in a <xref:System.Collections.SortedList> object.</span></span>  
  
 [!code-cpp[Classic SortedList.GetByIndex Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList.GetByIndex Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SortedList.GetByIndex Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList.GetByIndex Example/CS/source.cs#1)]
 [!code-vb[Classic SortedList.GetByIndex Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList.GetByIndex Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e8f0b-336">Значение <paramref name="index" /> находится вне диапазона допустимых индексов объекта <see cref="T:System.Collections.SortedList" />.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-336"><paramref name="index" /> is outside the range of valid indexes for the <see cref="T:System.Collections.SortedList" /> object.</span></span></exception>
        <altmember cref="M:System.Collections.SortedList.IndexOfKey(System.Object)" />
        <altmember cref="M:System.Collections.SortedList.IndexOfValue(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public virtual System.Collections.IDictionaryEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IDictionaryEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEnumerator () As IDictionaryEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IDictionaryEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IDictionaryEnumerator&#xA;override this.GetEnumerator : unit -&gt; System.Collections.IDictionaryEnumerator" Usage="sortedList.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionaryEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e8f0b-337">Возвращает объект <see cref="T:System.Collections.IDictionaryEnumerator" />, осуществляющий перебор элементов объекта <see cref="T:System.Collections.SortedList" />.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-337">Returns an <see cref="T:System.Collections.IDictionaryEnumerator" /> object that iterates through a <see cref="T:System.Collections.SortedList" /> object.</span></span></summary>
        <returns><span data-ttu-id="e8f0b-338">Объект <see cref="T:System.Collections.IDictionaryEnumerator" /> для объекта <see cref="T:System.Collections.SortedList" />.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-338">An <see cref="T:System.Collections.IDictionaryEnumerator" /> object for the <see cref="T:System.Collections.SortedList" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8f0b-339">Инструкция `foreach` языка C# (`for each` в Visual Basic) позволяет скрыть сложный механизм перечислителей.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-339">The `foreach` statement of the C# language (`for each` in Visual Basic) hides the complexity of the enumerators.</span></span>  <span data-ttu-id="e8f0b-340">Поэтому рекомендуется вместо непосредственного использования перечислителя применять ключевое слово `foreach`.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-340">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="e8f0b-341">Перечислители могут использоваться для чтения данных в коллекции, но не для ее изменения.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-341">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="e8f0b-342">Изначально перечислитель располагается перед первым элементом коллекции.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-342">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="e8f0b-343">Метод <xref:System.Collections.IEnumerator.Reset%2A> также переводит перечислитель в эту позицию.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-343"><xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position.</span></span>  <span data-ttu-id="e8f0b-344">В этой позиции значение свойства <xref:System.Collections.IEnumerator.Current%2A> не определено.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-344">At this position, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="e8f0b-345">Поэтому необходимо вызвать метод <xref:System.Collections.IEnumerator.MoveNext%2A>, чтобы переместить перечислитель к первому элементу коллекции до считывания значения свойства <xref:System.Collections.IEnumerator.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-345">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="e8f0b-346"><xref:System.Collections.IEnumerator.Current%2A> возвращает тот же объект, пока не будет вызван метод <xref:System.Collections.IEnumerator.MoveNext%2A> или <xref:System.Collections.IEnumerator.Reset%2A>.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-346"><xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="e8f0b-347"><xref:System.Collections.IEnumerator.MoveNext%2A> задает <xref:System.Collections.IEnumerator.Current%2A> в качестве значения для следующего элемента.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-347"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="e8f0b-348">Если <xref:System.Collections.IEnumerator.MoveNext%2A> передает конец коллекции, перечислитель располагается после последнего элемента в коллекции и <xref:System.Collections.IEnumerator.MoveNext%2A> возвращает `false`.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-348">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="e8f0b-349">Если перечислитель находится в этой позиции, последующие вызовы <xref:System.Collections.IEnumerator.MoveNext%2A> также возвращают. `false`</span><span class="sxs-lookup"><span data-stu-id="e8f0b-349">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="e8f0b-350">Если последний вызов <xref:System.Collections.IEnumerator.MoveNext%2A> возвращен `false`, <xref:System.Collections.IEnumerator.Current%2A> значение не определено.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-350">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="e8f0b-351">Чтобы снова задать в качестве значения свойства <xref:System.Collections.IEnumerator.Current%2A> первый элемент коллекции, можно последовательно вызвать методы <xref:System.Collections.IEnumerator.Reset%2A> и<xref:System.Collections.IEnumerator.MoveNext%2A>.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-351">To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="e8f0b-352">Перечислитель остается действительным, пока коллекция не изменяется.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-352">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="e8f0b-353">Если в коллекцию вносятся изменения, например добавляются, изменяются или удаляются элементы, перечислитель становится недействительным без возможности восстановление, а его поведение не определено.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-353">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</span></span>  
  
 <span data-ttu-id="e8f0b-354">У перечислителя нет эксклюзивного доступа к коллекции, поэтому перечисление коллекции не является потокобезопасной процедурой.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-354">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span>  <span data-ttu-id="e8f0b-355">Чтобы гарантировать потокобезопасность, можно заблокировать коллекцию на время всего перечисления.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-355">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="e8f0b-356">Чтобы разрешить доступ к коллекции из нескольких потоков для чтения и записи, необходимо реализовать собственную синхронизацию.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-356">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="e8f0b-357">Этот метод является операцией O (1).</span><span class="sxs-lookup"><span data-stu-id="e8f0b-357">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IDictionaryEnumerator" />
        <altmember cref="T:System.Collections.IEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="GetKey">
      <MemberSignature Language="C#" Value="public virtual object GetKey (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetKey(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.GetKey(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetKey (index As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetKey(int index);" />
      <MemberSignature Language="F#" Value="abstract member GetKey : int -&gt; obj&#xA;override this.GetKey : int -&gt; obj" Usage="sortedList.GetKey index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="e8f0b-358">Отсчитываемый от нуля индекс получаемого ключа.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-358">The zero-based index of the key to get.</span></span></param>
        <summary><span data-ttu-id="e8f0b-359">Получает ключ с указанным индексом из объекта <see cref="T:System.Collections.SortedList" />.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-359">Gets the key at the specified index of a <see cref="T:System.Collections.SortedList" /> object.</span></span></summary>
        <returns><span data-ttu-id="e8f0b-360">Ключ с указанным значением индекса из объекта<see cref="T:System.Collections.SortedList" />.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-360">The key at the specified index of the <see cref="T:System.Collections.SortedList" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8f0b-361">Последовательность индексов основана на последовательности сортировки.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-361">The index sequence is based on the sort sequence.</span></span> <span data-ttu-id="e8f0b-362">При добавлении элемента он вставляется <xref:System.Collections.SortedList> в правильный порядок сортировки, а индексирование корректируется соответствующим образом.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-362">When an element is added, it is inserted into <xref:System.Collections.SortedList> in the correct sort order, and the indexing adjusts accordingly.</span></span> <span data-ttu-id="e8f0b-363">При удалении элемента индексирование также корректируется соответствующим образом.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-363">When an element is removed, the indexing also adjusts accordingly.</span></span> <span data-ttu-id="e8f0b-364">Таким образом, индекс определенной пары «ключ-значение» может измениться по мере добавления или удаления элементов из <xref:System.Collections.SortedList> объекта.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-364">Therefore, the index of a specific key/value pair might change as elements are added or removed from the <xref:System.Collections.SortedList> object.</span></span>  
  
 <span data-ttu-id="e8f0b-365">Этот метод является операцией O (1).</span><span class="sxs-lookup"><span data-stu-id="e8f0b-365">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e8f0b-366">В следующем примере кода показано, как получить один или все ключи или значения в <xref:System.Collections.SortedList> объекте.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-366">The following code example shows how to get one or all the keys or values in a <xref:System.Collections.SortedList> object.</span></span>  
  
 [!code-cpp[Classic SortedList.GetByIndex Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList.GetByIndex Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SortedList.GetByIndex Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList.GetByIndex Example/CS/source.cs#1)]
 [!code-vb[Classic SortedList.GetByIndex Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList.GetByIndex Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e8f0b-367">Значение <paramref name="index" /> находится вне диапазона допустимых индексов объекта <see cref="T:System.Collections.SortedList" />.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-367"><paramref name="index" /> is outside the range of valid indexes for the <see cref="T:System.Collections.SortedList" /> object.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetKeyList">
      <MemberSignature Language="C#" Value="public virtual System.Collections.IList GetKeyList ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IList GetKeyList() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.GetKeyList" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetKeyList () As IList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IList ^ GetKeyList();" />
      <MemberSignature Language="F#" Value="abstract member GetKeyList : unit -&gt; System.Collections.IList&#xA;override this.GetKeyList : unit -&gt; System.Collections.IList" Usage="sortedList.GetKeyList " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e8f0b-368">Получает ключи из объекта <see cref="T:System.Collections.SortedList" />.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-368">Gets the keys in a <see cref="T:System.Collections.SortedList" /> object.</span></span></summary>
        <returns><span data-ttu-id="e8f0b-369">Объект <see cref="T:System.Collections.IList" />, содержащий ключи из объекта <see cref="T:System.Collections.SortedList" />.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-369">An <see cref="T:System.Collections.IList" /> object containing the keys in the <see cref="T:System.Collections.SortedList" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8f0b-370">Возвращаемый <xref:System.Collections.IList> объект является представлением ключей <xref:System.Collections.SortedList> объекта, предназначенным только для чтения.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-370">The returned <xref:System.Collections.IList> object is a read-only view of the keys of the <xref:System.Collections.SortedList> object.</span></span> <span data-ttu-id="e8f0b-371">Изменения, вносимые в базовый <xref:System.Collections.SortedList> объект, немедленно отражаются <xref:System.Collections.IList>в.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-371">Modifications made to the underlying <xref:System.Collections.SortedList> are immediately reflected in the <xref:System.Collections.IList>.</span></span>  
  
 <span data-ttu-id="e8f0b-372">Элементы возвращаемых <xref:System.Collections.IList> элементов сортируются в том же порядке, что и ключи <xref:System.Collections.SortedList>объекта.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-372">The elements of the returned <xref:System.Collections.IList> are sorted in the same order as the keys of the <xref:System.Collections.SortedList>.</span></span>  
  
 <span data-ttu-id="e8f0b-373">Этот метод аналогичен <xref:System.Collections.SortedList.Keys%2A> свойству, но <xref:System.Collections.IList> возвращает объект, а не <xref:System.Collections.ICollection> объект.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-373">This method is similar to the <xref:System.Collections.SortedList.Keys%2A> property, but returns an <xref:System.Collections.IList> object instead of an <xref:System.Collections.ICollection> object.</span></span>  
  
 <span data-ttu-id="e8f0b-374">Этот метод является операцией O (1).</span><span class="sxs-lookup"><span data-stu-id="e8f0b-374">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e8f0b-375">В следующем примере кода показано, как получить один или все ключи или значения в <xref:System.Collections.SortedList> объекте.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-375">The following code example shows how to get one or all the keys or values in a <xref:System.Collections.SortedList> object.</span></span>  
  
 [!code-cpp[Classic SortedList.GetByIndex Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList.GetByIndex Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SortedList.GetByIndex Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList.GetByIndex Example/CS/source.cs#1)]
 [!code-vb[Classic SortedList.GetByIndex Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList.GetByIndex Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IList" />
        <altmember cref="M:System.Collections.SortedList.GetValueList" />
        <altmember cref="P:System.Collections.SortedList.Keys" />
      </Docs>
    </Member>
    <Member MemberName="GetValueList">
      <MemberSignature Language="C#" Value="public virtual System.Collections.IList GetValueList ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IList GetValueList() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.GetValueList" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetValueList () As IList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IList ^ GetValueList();" />
      <MemberSignature Language="F#" Value="abstract member GetValueList : unit -&gt; System.Collections.IList&#xA;override this.GetValueList : unit -&gt; System.Collections.IList" Usage="sortedList.GetValueList " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e8f0b-376">Получает значения из объекта <see cref="T:System.Collections.SortedList" />.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-376">Gets the values in a <see cref="T:System.Collections.SortedList" /> object.</span></span></summary>
        <returns><span data-ttu-id="e8f0b-377">Объект <see cref="T:System.Collections.IList" />, содержащий значения из объекта <see cref="T:System.Collections.SortedList" />.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-377">An <see cref="T:System.Collections.IList" /> object containing the values in the <see cref="T:System.Collections.SortedList" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8f0b-378">Возвращаемый <xref:System.Collections.IList> объект является представлением значений <xref:System.Collections.SortedList> объекта только для чтения.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-378">The returned <xref:System.Collections.IList> object is a read-only view of the values of the <xref:System.Collections.SortedList> object.</span></span> <span data-ttu-id="e8f0b-379">Изменения, вносимые в базовый <xref:System.Collections.SortedList> объект, немедленно отражаются <xref:System.Collections.IList>в.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-379">Modifications made to the underlying <xref:System.Collections.SortedList> are immediately reflected in the <xref:System.Collections.IList>.</span></span>  
  
 <span data-ttu-id="e8f0b-380">Элементы возвращаемых <xref:System.Collections.IList> элементов сортируются в том же порядке, что и значения <xref:System.Collections.SortedList>объекта.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-380">The elements of the returned <xref:System.Collections.IList> are sorted in the same order as the values of the <xref:System.Collections.SortedList>.</span></span>  
  
 <span data-ttu-id="e8f0b-381">Этот метод аналогичен <xref:System.Collections.SortedList.Values%2A> свойству, но <xref:System.Collections.IList> возвращает объект, а не <xref:System.Collections.ICollection> объект.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-381">This method is similar to the <xref:System.Collections.SortedList.Values%2A> property, but returns an <xref:System.Collections.IList> object instead of an <xref:System.Collections.ICollection> object.</span></span>  
  
 <span data-ttu-id="e8f0b-382">Этот метод является операцией O (1).</span><span class="sxs-lookup"><span data-stu-id="e8f0b-382">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e8f0b-383">В следующем примере кода показано, как получить один или все ключи или значения в <xref:System.Collections.SortedList> объекте.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-383">The following code example shows how to get one or all the keys or values in a <xref:System.Collections.SortedList> object.</span></span>  
  
 [!code-cpp[Classic SortedList.GetByIndex Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList.GetByIndex Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SortedList.GetByIndex Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList.GetByIndex Example/CS/source.cs#1)]
 [!code-vb[Classic SortedList.GetByIndex Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList.GetByIndex Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IList" />
        <altmember cref="M:System.Collections.SortedList.GetKeyList" />
        <altmember cref="P:System.Collections.SortedList.Values" />
      </Docs>
    </Member>
    <Member MemberName="IndexOfKey">
      <MemberSignature Language="C#" Value="public virtual int IndexOfKey (object key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOfKey(object key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.IndexOfKey(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOfKey (key As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOfKey(System::Object ^ key);" />
      <MemberSignature Language="F#" Value="abstract member IndexOfKey : obj -&gt; int&#xA;override this.IndexOfKey : obj -&gt; int" Usage="sortedList.IndexOfKey key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="e8f0b-384">Ключ для размещения в объекте <see cref="T:System.Collections.SortedList" />.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-384">The key to locate in the <see cref="T:System.Collections.SortedList" /> object.</span></span></param>
        <summary><span data-ttu-id="e8f0b-385">Возвращает индекс (с нуля) указанного ключа в объекте <see cref="T:System.Collections.SortedList" />.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-385">Returns the zero-based index of the specified key in a <see cref="T:System.Collections.SortedList" /> object.</span></span></summary>
        <returns><span data-ttu-id="e8f0b-386">Индекс (с нуля) параметра <paramref name="key" />, если параметр <paramref name="key" /> найден в объекте <see cref="T:System.Collections.SortedList" />; в противном случае — значение -1.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-386">The zero-based index of the <paramref name="key" /> parameter, if <paramref name="key" /> is found in the <see cref="T:System.Collections.SortedList" /> object; otherwise, -1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8f0b-387">Элементы <xref:System.Collections.SortedList> объекта сортируются по ключам в соответствии с конкретной <xref:System.Collections.IComparer> реализацией, заданной при <xref:System.Collections.SortedList> создании, или в соответствии <xref:System.IComparable> с реализацией, предоставляемой самими ключами.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-387">The elements of a <xref:System.Collections.SortedList> object are sorted by the keys either according to a specific <xref:System.Collections.IComparer> implementation specified when the <xref:System.Collections.SortedList> is created, or according to the <xref:System.IComparable> implementation provided by the keys themselves.</span></span>  
  
 <span data-ttu-id="e8f0b-388">Последовательность индексов основана на последовательности сортировки.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-388">The index sequence is based on the sort sequence.</span></span> <span data-ttu-id="e8f0b-389">При добавлении элемента он вставляется <xref:System.Collections.SortedList> в правильный порядок сортировки, а индексирование корректируется соответствующим образом.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-389">When an element is added, it is inserted into <xref:System.Collections.SortedList> in the correct sort order, and the indexing adjusts accordingly.</span></span> <span data-ttu-id="e8f0b-390">При удалении элемента индексирование также корректируется соответствующим образом.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-390">When an element is removed, the indexing also adjusts accordingly.</span></span> <span data-ttu-id="e8f0b-391">Таким образом, индекс определенной пары «ключ-значение» может измениться по мере добавления или удаления элементов из <xref:System.Collections.SortedList>.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-391">Therefore, the index of a specific key/value pair might change as elements are added or removed from the <xref:System.Collections.SortedList>.</span></span>  
  
 <span data-ttu-id="e8f0b-392">Этот метод использует алгоритм двоичного поиска. Таким образом, этот метод является операцией O `n`(log), `n` где <xref:System.Collections.SortedList.Count%2A>—.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-392">This method uses a binary search algorithm; therefore, this method is an O(log `n`) operation, where `n` is <xref:System.Collections.SortedList.Count%2A>.</span></span>  
  
 <span data-ttu-id="e8f0b-393">Начиная с .NET Framework 2,0, этот метод использует объекты <xref:System.Object.Equals%2A> и <xref:System.IComparable.CompareTo%2A> методы `item` коллекции для определения того, существует ли элемент.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-393">Starting with the .NET Framework 2.0, this method uses the collection's objects' <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether item exists.</span></span> <span data-ttu-id="e8f0b-394">В более ранних версиях .NET Framework это определение было выполнено с помощью <xref:System.Object.Equals%2A> методов `item` и <xref:System.IComparable.CompareTo%2A> параметра для объектов в коллекции.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-394">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e8f0b-395">В следующем примере кода показано, как определить индекс ключа или значение в <xref:System.Collections.SortedList> объекте.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-395">The following code example shows how to determine the index of a key or a value in a <xref:System.Collections.SortedList> object.</span></span>  
  
 [!code-cpp[Classic SortedList.IndexOfKey Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList.IndexOfKey Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SortedList.IndexOfKey Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList.IndexOfKey Example/CS/source.cs#1)]
 [!code-vb[Classic SortedList.IndexOfKey Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList.IndexOfKey Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e8f0b-396"><paramref name="key" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-396"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e8f0b-397">Средство сравнения выдает исключение.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-397">The comparer throws an exception.</span></span></exception>
        <altmember cref="M:System.Collections.SortedList.ContainsKey(System.Object)" />
        <altmember cref="M:System.Collections.SortedList.IndexOfValue(System.Object)" />
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections.md"><span data-ttu-id="e8f0b-398">Выполнение в коллекциях строковых операций, не зависящих от языка и региональных параметров</span><span class="sxs-lookup"><span data-stu-id="e8f0b-398">Performing Culture-Insensitive String Operations in Collections</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="IndexOfValue">
      <MemberSignature Language="C#" Value="public virtual int IndexOfValue (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOfValue(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.IndexOfValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOfValue (value As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOfValue(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member IndexOfValue : obj -&gt; int&#xA;override this.IndexOfValue : obj -&gt; int" Usage="sortedList.IndexOfValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="e8f0b-399">Значение, которое требуется найти в объекте <see cref="T:System.Collections.SortedList" />.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-399">The value to locate in the <see cref="T:System.Collections.SortedList" /> object.</span></span> <span data-ttu-id="e8f0b-400">Допускается значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-400">The value can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="e8f0b-401">Индекс (с нуля) первого вхождения указанного значения в объекте <see cref="T:System.Collections.SortedList" />.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-401">Returns the zero-based index of the first occurrence of the specified value in a <see cref="T:System.Collections.SortedList" /> object.</span></span></summary>
        <returns><span data-ttu-id="e8f0b-402">Индекс (с нуля) первого вхождения значения параметра <paramref name="value" />, если значение <paramref name="value" /> найдено в объекте <see cref="T:System.Collections.SortedList" />; в противном случае — значение -1.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-402">The zero-based index of the first occurrence of the <paramref name="value" /> parameter, if <paramref name="value" /> is found in the <see cref="T:System.Collections.SortedList" /> object; otherwise, -1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8f0b-403">Последовательность индексов основана на последовательности сортировки.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-403">The index sequence is based on the sort sequence.</span></span> <span data-ttu-id="e8f0b-404">При добавлении элемента он вставляется <xref:System.Collections.SortedList> в правильный порядок сортировки, а индексирование корректируется соответствующим образом.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-404">When an element is added, it is inserted into <xref:System.Collections.SortedList> in the correct sort order, and the indexing adjusts accordingly.</span></span> <span data-ttu-id="e8f0b-405">При удалении элемента индексирование также корректируется соответствующим образом.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-405">When an element is removed, the indexing also adjusts accordingly.</span></span> <span data-ttu-id="e8f0b-406">Таким образом, индекс определенной пары «ключ-значение» может измениться по мере добавления или удаления элементов из <xref:System.Collections.SortedList> объекта.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-406">Therefore, the index of a specific key/value pair might change as elements are added or removed from the <xref:System.Collections.SortedList> object.</span></span>  
  
 <span data-ttu-id="e8f0b-407">Значения элементов массива <xref:System.Collections.SortedList> сравниваются с указанным значением <xref:System.Object.Equals%2A> с помощью метода.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-407">The values of the elements of the <xref:System.Collections.SortedList> are compared to the specified value using the <xref:System.Object.Equals%2A> method.</span></span>  
  
 <span data-ttu-id="e8f0b-408">Этот метод использует линейный поиск. Таким образом, этот метод является операцией`n`O (), `n` где <xref:System.Collections.SortedList.Count%2A>имеет.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-408">This method uses a linear search; therefore, this method is an O(`n`) operation, where `n` is <xref:System.Collections.SortedList.Count%2A>.</span></span>  
  
 <span data-ttu-id="e8f0b-409">Начиная с .NET Framework 2,0, этот метод использует объекты <xref:System.Object.Equals%2A> и <xref:System.IComparable.CompareTo%2A> методы `item` коллекции для определения того, существует ли элемент.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-409">Starting with the .NET Framework 2.0, this method uses the collection's objects' <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether item exists.</span></span> <span data-ttu-id="e8f0b-410">В более ранних версиях .NET Framework это определение было выполнено с помощью <xref:System.Object.Equals%2A> методов `item` и <xref:System.IComparable.CompareTo%2A> параметра для объектов в коллекции.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-410">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e8f0b-411">В следующем примере кода показано, как определить индекс ключа или значение в <xref:System.Collections.SortedList> объекте.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-411">The following code example shows how to determine the index of a key or a value in a <xref:System.Collections.SortedList> object.</span></span>  
  
 [!code-cpp[Classic SortedList.IndexOfKey Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList.IndexOfKey Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SortedList.IndexOfKey Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList.IndexOfKey Example/CS/source.cs#1)]
 [!code-vb[Classic SortedList.IndexOfKey Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList.IndexOfKey Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.SortedList.ContainsValue(System.Object)" />
        <altmember cref="M:System.Collections.SortedList.IndexOfKey(System.Object)" />
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections.md"><span data-ttu-id="e8f0b-412">Выполнение в коллекциях строковых операций, не зависящих от языка и региональных параметров</span><span class="sxs-lookup"><span data-stu-id="e8f0b-412">Performing Culture-Insensitive String Operations in Collections</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="IsFixedSize">
      <MemberSignature Language="C#" Value="public virtual bool IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Collections.SortedList.IsFixedSize" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsFixedSize As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsFixedSize { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsFixedSize : bool" Usage="System.Collections.SortedList.IsFixedSize" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e8f0b-413">Получает значение, показывающее, имеет ли объект <see cref="T:System.Collections.SortedList" /> фиксированный размер.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-413">Gets a value indicating whether a <see cref="T:System.Collections.SortedList" /> object has a fixed size.</span></span></summary>
        <value><span data-ttu-id="e8f0b-414"><see langword="true" />, если объект <see cref="T:System.Collections.SortedList" /> имеет фиксированный размер, в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-414"><see langword="true" /> if the <see cref="T:System.Collections.SortedList" /> object has a fixed size; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="e8f0b-415">Значение по умолчанию — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-415">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8f0b-416">Коллекция с фиксированным размером не допускает добавление или удаление элементов после создания коллекции, но позволяет изменять существующие элементы.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-416">A collection with a fixed size does not allow the addition or removal of elements after the collection is created, but does allow the modification of existing elements.</span></span>  
  
 <span data-ttu-id="e8f0b-417">Коллекция с фиксированным размером — это просто коллекция с оболочкой, которая предотвращает добавление и удаление элементов. Таким образом, если в базовую коллекцию вносятся изменения, включая добавление или удаление элементов, Коллекция фиксированного размера отражает эти изменения.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-417">A collection with a fixed size is simply a collection with a wrapper that prevents adding and removing elements; therefore, if changes are made to the underlying collection, including the addition or removal of elements, the fixed-size collection reflects those changes.</span></span>  
  
 <span data-ttu-id="e8f0b-418">Получение значения данного свойства является операцией порядка сложности O(1).</span><span class="sxs-lookup"><span data-stu-id="e8f0b-418">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public virtual bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Collections.SortedList.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Collections.SortedList.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e8f0b-419">Возвращает значение, указывающее, является ли объект <see cref="T:System.Collections.SortedList" /> доступным только для чтения.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-419">Gets a value indicating whether a <see cref="T:System.Collections.SortedList" /> object is read-only.</span></span></summary>
        <value><span data-ttu-id="e8f0b-420">Значение <see langword="true" />, если объект <see cref="T:System.Collections.SortedList" /> доступен только для чтения; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-420"><see langword="true" /> if the <see cref="T:System.Collections.SortedList" /> object is read-only; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="e8f0b-421">Значение по умолчанию — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-421">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8f0b-422">После создания коллекции, доступной только для чтения, не разрешается добавление элементов в коллекцию, их изменение или удаление.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-422">A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.</span></span>  
  
 <span data-ttu-id="e8f0b-423">Коллекция, доступная только для чтения, — это просто коллекция с оболочкой, которая предотвращает изменение коллекции. Таким образом, если в базовую коллекцию вносятся изменения, то эти изменения отражаются в коллекции только для чтения.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-423">A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.</span></span>  
  
 <span data-ttu-id="e8f0b-424">Получение значения данного свойства является операцией порядка сложности O(1).</span><span class="sxs-lookup"><span data-stu-id="e8f0b-424">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="public virtual bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Collections.SortedList.IsSynchronized" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsSynchronized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSynchronized : bool" Usage="System.Collections.SortedList.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e8f0b-425">Возвращает значение, указывающее на то, является ли доступ к объекту <see cref="T:System.Collections.SortedList" /> синхронизированным (потокобезопасным).</span><span class="sxs-lookup"><span data-stu-id="e8f0b-425">Gets a value indicating whether access to a <see cref="T:System.Collections.SortedList" /> object is synchronized (thread safe).</span></span></summary>
        <value><span data-ttu-id="e8f0b-426">Значение <see langword="true" />, если доступ к объекту <see cref="T:System.Collections.SortedList" /> является синхронизированным (потокобезопасным); в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-426"><see langword="true" /> if access to the <see cref="T:System.Collections.SortedList" /> object is synchronized (thread safe); otherwise, <see langword="false" />.</span></span> <span data-ttu-id="e8f0b-427">Значение по умолчанию — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-427">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8f0b-428">Чтобы обеспечить потокобезопасность <xref:System.Collections.SortedList> объекта, все операции должны выполняться через оболочку, возвращенную <xref:System.Collections.SortedList.Synchronized%2A> методом.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-428">To guarantee the thread safety of a <xref:System.Collections.SortedList> object, all operations must be done through the wrapper returned by the <xref:System.Collections.SortedList.Synchronized%2A> method.</span></span>  
  
 <span data-ttu-id="e8f0b-429">Перечисление коллекции не является потокобезопасной процедурой.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-429">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="e8f0b-430">Даже если коллекция синхронизирована, другие потоки могут ее изменить, что приведет к тому, что перечислитель создаст исключение.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-430">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="e8f0b-431">Для обеспечения потокобезопасности при перечислении можно либо заблокировать коллекцию на все время перечисления, либо перехватывать исключения, возникающие в результате изменений, внесенных другими потоками.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-431">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e8f0b-432">В следующем примере кода показано, как заблокировать коллекцию с помощью <xref:System.Collections.SortedList.SyncRoot%2A> свойства во всем перечислении.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-432">The following code example shows how to lock a collection using the <xref:System.Collections.SortedList.SyncRoot%2A> property during the entire enumeration.</span></span>  
  
 [!code-cpp[Classic SortedList.IsSynchronized Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList.IsSynchronized Example/CPP/source2.cpp#2)]
 [!code-csharp[Classic SortedList.IsSynchronized Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList.IsSynchronized Example/CS/source2.cs#2)]
 [!code-vb[Classic SortedList.IsSynchronized Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList.IsSynchronized Example/VB/source2.vb#2)]  
  
 <span data-ttu-id="e8f0b-433">Получение значения данного свойства является операцией порядка сложности O(1).</span><span class="sxs-lookup"><span data-stu-id="e8f0b-433">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 <span data-ttu-id="e8f0b-434">В следующем примере кода показано, как синхронизировать <xref:System.Collections.SortedList> объект, определить, <xref:System.Collections.SortedList> является ли он синхронизированным, и использовать синхронизированный <xref:System.Collections.SortedList>.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-434">The following code example shows how to synchronize a <xref:System.Collections.SortedList> object, determine whether a <xref:System.Collections.SortedList> is synchronized, and use a synchronized <xref:System.Collections.SortedList>.</span></span>  
  
 [!code-cpp[Classic SortedList.IsSynchronized Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList.IsSynchronized Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SortedList.IsSynchronized Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList.IsSynchronized Example/CS/source.cs#1)]
 [!code-vb[Classic SortedList.IsSynchronized Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList.IsSynchronized Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.SortedList.SyncRoot" />
        <altmember cref="M:System.Collections.SortedList.Synchronized(System.Collections.SortedList)" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual object this[object key] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(object)" />
      <MemberSignature Language="DocId" Value="P:System.Collections.SortedList.Item(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable Property Item(key As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ default[System::Object ^] { System::Object ^ get(System::Object ^ key); void set(System::Object ^ key, System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(obj) : obj with get, set" Usage="System.Collections.SortedList.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.Item(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="e8f0b-435">Ключ, связанный с задаваемым или возвращаемым значением.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-435">The key associated with the value to get or set.</span></span></param>
        <summary><span data-ttu-id="e8f0b-436">Получает или задает значение, связанное с указанным ключом в объекте <see cref="T:System.Collections.SortedList" />.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-436">Gets or sets the value associated with a specific key in a <see cref="T:System.Collections.SortedList" /> object.</span></span></summary>
        <value><span data-ttu-id="e8f0b-437">Значение, связанное с параметром <paramref name="key" /> в объекте <see cref="T:System.Collections.SortedList" />, если ключ <paramref name="key" /> найден; в противном случае — значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-437">The value associated with the <paramref name="key" /> parameter in the <see cref="T:System.Collections.SortedList" /> object, if <paramref name="key" /> is found; otherwise, <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8f0b-438"><xref:System.Collections.SortedList.Item%2A> Свойство можно использовать для доступа к определенному элементу в коллекции, указав следующий синтаксис: `myCollection[key]`.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-438">You can use the <xref:System.Collections.SortedList.Item%2A> property to access a specific element in a collection by specifying the following syntax: `myCollection[key]`.</span></span>  
  
 <span data-ttu-id="e8f0b-439">Это свойство также можно использовать для добавления новых элементов путем установки значения ключа, который не существует в <xref:System.Collections.SortedList> объекте (например,. `myCollection["myNonexistentKey"] = myValue)`</span><span class="sxs-lookup"><span data-stu-id="e8f0b-439">You can also use this property to add new elements by setting the value of a key that does not exist in the <xref:System.Collections.SortedList> object (for example, `myCollection["myNonexistentKey"] = myValue)`.</span></span> <span data-ttu-id="e8f0b-440">Однако если указанный ключ уже существует в <xref:System.Collections.SortedList>, <xref:System.Collections.SortedList.Item%2A> установка свойства перезаписывает старое значение.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-440">However, if the specified key already exists in the <xref:System.Collections.SortedList>, setting the <xref:System.Collections.SortedList.Item%2A> property overwrites the old value.</span></span> <span data-ttu-id="e8f0b-441">В отличие от этого <xref:System.Collections.SortedList.Add%2A> , метод не изменяет существующие элементы.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-441">In contrast, the <xref:System.Collections.SortedList.Add%2A> method does not modify existing elements.</span></span>  
  
 <span data-ttu-id="e8f0b-442">Ключ не может быть `null`, а значение может быть.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-442">A key cannot be `null`, but a value can be.</span></span> <span data-ttu-id="e8f0b-443">Для различения `null` возвращается, так как указанный ключ не найден и `null` возвращается, поскольку значение указанного <xref:System.Collections.SortedList.Contains%2A> ключа равно `null`, используйте метод или <xref:System.Collections.SortedList.ContainsKey%2A> метод, чтобы определить, ключ существует в списке.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-443">To distinguish between `null` that is returned because the specified key is not found and `null` that is returned because the value of the specified key is `null`, use the <xref:System.Collections.SortedList.Contains%2A> method or the <xref:System.Collections.SortedList.ContainsKey%2A> method to determine if the key exists in the list.</span></span>  
  
 <span data-ttu-id="e8f0b-444">Элементы объекта <xref:System.Collections.SortedList> сортируются по ключам в соответствии с конкретной <xref:System.Collections.IComparer> реализацией, <xref:System.Collections.SortedList> заданной при создании или в соответствии <xref:System.IComparable> с реализацией, предоставляемой самими ключами.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-444">The elements of a <xref:System.Collections.SortedList> are sorted by the keys either according to a specific <xref:System.Collections.IComparer> implementation specified when the <xref:System.Collections.SortedList> is created or according to the <xref:System.IComparable> implementation provided by the keys themselves.</span></span>  
  
 <span data-ttu-id="e8f0b-445">C# Язык использует [`this`](~/docs/csharp/language-reference/keywords/this.md) ключевое слово для определения индексаторов <xref:System.Collections.SortedList.Keys%2A> вместо реализации свойства.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-445">The C# language uses the [`this`](~/docs/csharp/language-reference/keywords/this.md) keyword to define the indexers instead of implementing the <xref:System.Collections.SortedList.Keys%2A> property.</span></span> <span data-ttu-id="e8f0b-446">В языке Visual Basic в качестве свойства по умолчанию реализовано свойство <xref:System.Collections.SortedList.Item%2A>, предоставляющее те же возможности индексирования.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-446">Visual Basic implements <xref:System.Collections.SortedList.Item%2A> as a default property, which provides the same indexing functionality.</span></span>  
  
 <span data-ttu-id="e8f0b-447">Получение значения этого свойства является операцией O (log `n`), где `n` имеет <xref:System.Collections.SortedList.Count%2A>значение.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-447">Retrieving the value of this property is an O(log `n`) operation, where `n` is <xref:System.Collections.SortedList.Count%2A>.</span></span> <span data-ttu-id="e8f0b-448">Установка свойства является операцией O (log `n`), если ключ уже находится <xref:System.Collections.SortedList>в.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-448">Setting the property is an O(log `n`) operation if the key is already in the <xref:System.Collections.SortedList>.</span></span> <span data-ttu-id="e8f0b-449">Если ключ отсутствует в списке, задание свойства является операцией o (`n`) для несортированных данных или O (log `n`), если новый элемент добавляется в конец списка.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-449">If the key is not in the list, setting the property is an O(`n`) operation for unsorted data, or O(log `n`) if the new element is added at the end of the list.</span></span> <span data-ttu-id="e8f0b-450">Если вставка приводит к изменению размера, операция является операцией`n`O ().</span><span class="sxs-lookup"><span data-stu-id="e8f0b-450">If insertion causes a resize, the operation is O(`n`).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e8f0b-451"><paramref name="key" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-451"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="e8f0b-452">Свойство задано, и объект <see cref="T:System.Collections.SortedList" /> доступен только для чтения.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-452">The property is set and the <see cref="T:System.Collections.SortedList" /> object is read-only.</span></span>  
  
<span data-ttu-id="e8f0b-453">- или -</span><span class="sxs-lookup"><span data-stu-id="e8f0b-453">-or-</span></span> 
<span data-ttu-id="e8f0b-454">Свойство задано, <paramref name="key" /> не существует в коллекции, а <see cref="T:System.Collections.SortedList" /> имеет фиксированный размер.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-454">The property is set, <paramref name="key" /> does not exist in the collection, and the <see cref="T:System.Collections.SortedList" /> has a fixed size.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="e8f0b-455">Недостаточно свободной памяти для добавления элемента в объект <see cref="T:System.Collections.SortedList" />.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-455">There is not enough available memory to add the element to the <see cref="T:System.Collections.SortedList" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e8f0b-456">Средство сравнения выдает исключение.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-456">The comparer throws an exception.</span></span></exception>
        <altmember cref="M:System.Collections.SortedList.Add(System.Object,System.Object)" />
        <altmember cref="M:System.Collections.SortedList.Contains(System.Object)" />
        <altmember cref="M:System.Collections.SortedList.ContainsKey(System.Object)" />
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections.md"><span data-ttu-id="e8f0b-457">Выполнение в коллекциях строковых операций, не зависящих от языка и региональных параметров</span><span class="sxs-lookup"><span data-stu-id="e8f0b-457">Performing Culture-Insensitive String Operations in Collections</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Keys">
      <MemberSignature Language="C#" Value="public virtual System.Collections.ICollection Keys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection Keys" />
      <MemberSignature Language="DocId" Value="P:System.Collections.SortedList.Keys" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Keys As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::ICollection ^ Keys { System::Collections::ICollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Keys : System.Collections.ICollection" Usage="System.Collections.SortedList.Keys" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.Keys</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e8f0b-458">Получает ключи из объекта <see cref="T:System.Collections.SortedList" />.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-458">Gets the keys in a <see cref="T:System.Collections.SortedList" /> object.</span></span></summary>
        <value><span data-ttu-id="e8f0b-459">Объект <see cref="T:System.Collections.ICollection" />, содержащий ключи из объекта <see cref="T:System.Collections.SortedList" />.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-459">An <see cref="T:System.Collections.ICollection" /> object containing the keys in the <see cref="T:System.Collections.SortedList" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8f0b-460">Объект является представлением ключей <xref:System.Collections.SortedList> объекта, предназначенным только для чтения. <xref:System.Collections.ICollection></span><span class="sxs-lookup"><span data-stu-id="e8f0b-460">The <xref:System.Collections.ICollection> object is a read-only view of the keys of the <xref:System.Collections.SortedList> object.</span></span> <span data-ttu-id="e8f0b-461">Изменения, вносимые в базовый <xref:System.Collections.SortedList> объект, немедленно отражаются <xref:System.Collections.ICollection>в.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-461">Modifications made to the underlying <xref:System.Collections.SortedList> are immediately reflected in the <xref:System.Collections.ICollection>.</span></span>  
  
 <span data-ttu-id="e8f0b-462">Элементы <xref:System.Collections.ICollection> объекта сортируются в том же порядке, что и ключи <xref:System.Collections.SortedList>.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-462">The elements of the <xref:System.Collections.ICollection> are sorted in the same order as the keys of the <xref:System.Collections.SortedList>.</span></span>  
  
 <span data-ttu-id="e8f0b-463">Это свойство аналогично <xref:System.Collections.SortedList.GetKeyList%2A> методу, но <xref:System.Collections.ICollection> возвращает объект, а не <xref:System.Collections.IList> объект.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-463">This property is similar to the <xref:System.Collections.SortedList.GetKeyList%2A> method, but returns an <xref:System.Collections.ICollection> object instead of an <xref:System.Collections.IList> object.</span></span>  
  
 <span data-ttu-id="e8f0b-464">Этот метод является операцией O (1).</span><span class="sxs-lookup"><span data-stu-id="e8f0b-464">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.ICollection" />
        <altmember cref="P:System.Collections.SortedList.Values" />
        <altmember cref="M:System.Collections.SortedList.GetKeyList" />
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections.md"><span data-ttu-id="e8f0b-465">Выполнение в коллекциях строковых операций, не зависящих от языка и региональных параметров</span><span class="sxs-lookup"><span data-stu-id="e8f0b-465">Performing Culture-Insensitive String Operations in Collections</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public virtual void Remove (object key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Remove(object key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Remove (key As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Remove(System::Object ^ key);" />
      <MemberSignature Language="F#" Value="abstract member Remove : obj -&gt; unit&#xA;override this.Remove : obj -&gt; unit" Usage="sortedList.Remove key" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="e8f0b-466">Ключ элемента, который требуется удалить.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-466">The key of the element to remove.</span></span></param>
        <summary><span data-ttu-id="e8f0b-467">Удаляет элемент с указанным ключом из объекта <see cref="T:System.Collections.SortedList" />.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-467">Removes the element with the specified key from a <see cref="T:System.Collections.SortedList" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8f0b-468">Если объект <xref:System.Collections.SortedList> не содержит элемент с указанным ключом, объект <xref:System.Collections.SortedList> не изменяется.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-468">If the <xref:System.Collections.SortedList> object does not contain an element with the specified key, the <xref:System.Collections.SortedList> remains unchanged.</span></span> <span data-ttu-id="e8f0b-469">Исключение не возникает.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-469">No exception is thrown.</span></span>  
  
 <span data-ttu-id="e8f0b-470">В коллекциях с непрерывным набором элементов, таких как списки, элементы, следующие за удаленным элементом, перемещаются вверх, занимая освободившуюся позицию.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-470">In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.</span></span> <span data-ttu-id="e8f0b-471">Если коллекция индексируется, индексы перемещенных элементов также обновляются.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-471">If the collection is indexed, the indexes of the elements that are moved are also updated.</span></span> <span data-ttu-id="e8f0b-472">Такое поведение не реализуется в коллекциях, в которых элементы логически сгруппированы, например в хэш-таблицах.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-472">This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</span></span>  
  
 <span data-ttu-id="e8f0b-473">Этот метод является операцией O`n`(), где `n` имеет <xref:System.Collections.SortedList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-473">This method is an O(`n`) operation, where `n` is <xref:System.Collections.SortedList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e8f0b-474">В следующем примере кода показано, как удалить элементы из <xref:System.Collections.SortedList> объекта.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-474">The following code example shows how to remove elements from a <xref:System.Collections.SortedList> object.</span></span>  
  
 [!code-cpp[Classic SortedList.RemoveAt Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList.RemoveAt Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SortedList.RemoveAt Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList.RemoveAt Example/CS/source.cs#1)]
 [!code-vb[Classic SortedList.RemoveAt Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList.RemoveAt Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e8f0b-475">Свойство <paramref name="key" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-475"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="e8f0b-476">Объект <see cref="T:System.Collections.SortedList" /> доступен только для чтения.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-476">The <see cref="T:System.Collections.SortedList" /> object is read-only.</span></span>  
  
<span data-ttu-id="e8f0b-477">-или-</span><span class="sxs-lookup"><span data-stu-id="e8f0b-477">-or-</span></span> 
<span data-ttu-id="e8f0b-478"><see cref="T:System.Collections.SortedList" /> имеет фиксированный размер.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-478">The <see cref="T:System.Collections.SortedList" /> has a fixed size.</span></span></exception>
        <altmember cref="M:System.Collections.SortedList.RemoveAt(System.Int32)" />
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections.md"><span data-ttu-id="e8f0b-479">Выполнение в коллекциях строковых операций, не зависящих от языка и региональных параметров</span><span class="sxs-lookup"><span data-stu-id="e8f0b-479">Performing Culture-Insensitive String Operations in Collections</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public virtual void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="abstract member RemoveAt : int -&gt; unit&#xA;override this.RemoveAt : int -&gt; unit" Usage="sortedList.RemoveAt index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="e8f0b-480">Индекс (с нуля) элемента, который требуется удалить.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-480">The zero-based index of the element to remove.</span></span></param>
        <summary><span data-ttu-id="e8f0b-481">Удаляет элемент с указанным индексом из объекта <see cref="T:System.Collections.SortedList" />.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-481">Removes the element at the specified index of a <see cref="T:System.Collections.SortedList" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8f0b-482">Последовательность индексов основана на последовательности сортировки.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-482">The index sequence is based on the sort sequence.</span></span> <span data-ttu-id="e8f0b-483">При добавлении элемента он вставляется <xref:System.Collections.SortedList> в правильный порядок сортировки, а индексирование корректируется соответствующим образом.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-483">When an element is added, it is inserted into <xref:System.Collections.SortedList> in the correct sort order, and the indexing adjusts accordingly.</span></span> <span data-ttu-id="e8f0b-484">При удалении элемента индексирование также корректируется соответствующим образом.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-484">When an element is removed, the indexing also adjusts accordingly.</span></span> <span data-ttu-id="e8f0b-485">Таким образом, индекс определенной пары «ключ-значение» может измениться по мере добавления или удаления элементов из <xref:System.Collections.SortedList> объекта.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-485">Therefore, the index of a specific key/value pair might change as elements are added or removed from the <xref:System.Collections.SortedList> object.</span></span>  
  
 <span data-ttu-id="e8f0b-486">В коллекциях с непрерывным набором элементов, таких как списки, элементы, следующие за удаленным элементом, перемещаются вверх, занимая освободившуюся позицию.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-486">In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.</span></span> <span data-ttu-id="e8f0b-487">Если коллекция индексируется, индексы перемещенных элементов также обновляются.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-487">If the collection is indexed, the indexes of the elements that are moved are also updated.</span></span> <span data-ttu-id="e8f0b-488">Такое поведение не реализуется в коллекциях, в которых элементы логически сгруппированы, например в хэш-таблицах.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-488">This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</span></span>  
  
 <span data-ttu-id="e8f0b-489">Этот метод является операцией O`n`(), где `n` имеет <xref:System.Collections.SortedList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-489">This method is an O(`n`) operation, where `n` is <xref:System.Collections.SortedList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e8f0b-490">В следующем примере кода показано, как удалить элементы из <xref:System.Collections.SortedList> объекта.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-490">The following code example shows how to remove elements from a <xref:System.Collections.SortedList> object.</span></span>  
  
 [!code-cpp[Classic SortedList.RemoveAt Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList.RemoveAt Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SortedList.RemoveAt Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList.RemoveAt Example/CS/source.cs#1)]
 [!code-vb[Classic SortedList.RemoveAt Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList.RemoveAt Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e8f0b-491">Значение <paramref name="index" /> находится вне диапазона допустимых индексов объекта <see cref="T:System.Collections.SortedList" />.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-491"><paramref name="index" /> is outside the range of valid indexes for the <see cref="T:System.Collections.SortedList" /> object.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="e8f0b-492">Объект <see cref="T:System.Collections.SortedList" /> доступен только для чтения.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-492">The <see cref="T:System.Collections.SortedList" /> is read-only.</span></span>  
  
<span data-ttu-id="e8f0b-493">-или-</span><span class="sxs-lookup"><span data-stu-id="e8f0b-493">-or-</span></span> 
<span data-ttu-id="e8f0b-494"><see cref="T:System.Collections.SortedList" /> имеет фиксированный размер.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-494">The <see cref="T:System.Collections.SortedList" /> has a fixed size.</span></span></exception>
        <altmember cref="M:System.Collections.SortedList.Remove(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="SetByIndex">
      <MemberSignature Language="C#" Value="public virtual void SetByIndex (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetByIndex(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.SetByIndex(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetByIndex (index As Integer, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetByIndex(int index, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member SetByIndex : int * obj -&gt; unit&#xA;override this.SetByIndex : int * obj -&gt; unit" Usage="sortedList.SetByIndex (index, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="e8f0b-495">Индекс (с нуля) сохраняемого параметра <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-495">The zero-based index at which to save <paramref name="value" />.</span></span></param>
        <param name="value"><span data-ttu-id="e8f0b-496">Объект <see cref="T:System.Object" />, сохраняемый в объекте <see cref="T:System.Collections.SortedList" />.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-496">The <see cref="T:System.Object" /> to save into the <see cref="T:System.Collections.SortedList" /> object.</span></span> <span data-ttu-id="e8f0b-497">Допускается значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-497">The value can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="e8f0b-498">Заменяет значение по указанному индексу в объекте <see cref="T:System.Collections.SortedList" />.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-498">Replaces the value at a specific index in a <see cref="T:System.Collections.SortedList" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8f0b-499">Последовательность индексов основана на последовательности сортировки.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-499">The index sequence is based on the sort sequence.</span></span> <span data-ttu-id="e8f0b-500">При добавлении элемента он вставляется <xref:System.Collections.SortedList> в правильный порядок сортировки, а индексирование корректируется соответствующим образом.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-500">When an element is added, it is inserted into <xref:System.Collections.SortedList> in the correct sort order, and the indexing adjusts accordingly.</span></span> <span data-ttu-id="e8f0b-501">При удалении элемента индексирование также корректируется соответствующим образом.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-501">When an element is removed, the indexing also adjusts accordingly.</span></span> <span data-ttu-id="e8f0b-502">Таким образом, индекс определенной пары «ключ-значение» может измениться по мере добавления или удаления элементов из <xref:System.Collections.SortedList> объекта.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-502">Therefore, the index of a specific key/value pair might change as elements are added or removed from the <xref:System.Collections.SortedList> object.</span></span>  
  
 <span data-ttu-id="e8f0b-503">Этот метод является операцией O (1).</span><span class="sxs-lookup"><span data-stu-id="e8f0b-503">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e8f0b-504">В следующем примере кода показано, как заменить значение существующего элемента в <xref:System.Collections.SortedList> объекте.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-504">The following code example shows how to replace the value of an existing element in a <xref:System.Collections.SortedList> object.</span></span>  
  
 [!code-cpp[Classic SortedList.SetByIndex Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList.SetByIndex Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SortedList.SetByIndex Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList.SetByIndex Example/CS/source.cs#1)]
 [!code-vb[Classic SortedList.SetByIndex Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList.SetByIndex Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e8f0b-505">Значение <paramref name="index" /> находится вне диапазона допустимых индексов объекта <see cref="T:System.Collections.SortedList" />.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-505"><paramref name="index" /> is outside the range of valid indexes for the <see cref="T:System.Collections.SortedList" /> object.</span></span></exception>
        <altmember cref="M:System.Collections.SortedList.IndexOfKey(System.Object)" />
        <altmember cref="M:System.Collections.SortedList.IndexOfValue(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Synchronized">
      <MemberSignature Language="C#" Value="public static System.Collections.SortedList Synchronized (System.Collections.SortedList list);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.SortedList Synchronized(class System.Collections.SortedList list) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.Synchronized(System.Collections.SortedList)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Synchronized (list As SortedList) As SortedList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::SortedList ^ Synchronized(System::Collections::SortedList ^ list);" />
      <MemberSignature Language="F#" Value="static member Synchronized : System.Collections.SortedList -&gt; System.Collections.SortedList" Usage="System.Collections.SortedList.Synchronized list" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.SortedList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.SortedList" />
      </Parameters>
      <Docs>
        <param name="list"><span data-ttu-id="e8f0b-506">Синхронизируемый объект <see cref="T:System.Collections.SortedList" />.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-506">The <see cref="T:System.Collections.SortedList" /> object to synchronize.</span></span></param>
        <summary><span data-ttu-id="e8f0b-507">Возвращает синхронизированную (потокобезопасную) оболочку объекта <see cref="T:System.Collections.SortedList" />.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-507">Returns a synchronized (thread-safe) wrapper for a <see cref="T:System.Collections.SortedList" /> object.</span></span></summary>
        <returns><span data-ttu-id="e8f0b-508">Синхронизированная (потокобезопасная) оболочка объекта <see cref="T:System.Collections.SortedList" />.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-508">A synchronized (thread-safe) wrapper for the <see cref="T:System.Collections.SortedList" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8f0b-509">Чтобы обеспечить потокобезопасность <xref:System.Collections.SortedList> объекта, все операции должны выполняться только через эту оболочку.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-509">To guarantee the thread safety of a <xref:System.Collections.SortedList> object, all operations must be done through this wrapper only.</span></span>  
  
 <span data-ttu-id="e8f0b-510">Перечисление коллекции не является потокобезопасной процедурой.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-510">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="e8f0b-511">Даже если коллекция синхронизирована, другие потоки могут ее изменить, что приведет к тому, что перечислитель создаст исключение.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-511">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="e8f0b-512">Для обеспечения потокобезопасности при перечислении можно либо заблокировать коллекцию на все время перечисления, либо перехватывать исключения, возникающие в результате изменений, внесенных другими потоками.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-512">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e8f0b-513">В следующем примере кода показано, как заблокировать коллекцию с помощью <xref:System.Collections.SortedList.SyncRoot%2A> свойства во всем перечислении.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-513">The following code example shows how to lock the collection using the <xref:System.Collections.SortedList.SyncRoot%2A> property during the entire enumeration.</span></span>  
  
 [!code-cpp[Classic SortedList.IsSynchronized Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList.IsSynchronized Example/CPP/source2.cpp#2)]
 [!code-csharp[Classic SortedList.IsSynchronized Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList.IsSynchronized Example/CS/source2.cs#2)]
 [!code-vb[Classic SortedList.IsSynchronized Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList.IsSynchronized Example/VB/source2.vb#2)]  
  
 <span data-ttu-id="e8f0b-514">Этот метод является операцией O (1).</span><span class="sxs-lookup"><span data-stu-id="e8f0b-514">This method is an O(1) operation.</span></span>  
  
 <span data-ttu-id="e8f0b-515">В следующем примере кода показано, как синхронизировать <xref:System.Collections.SortedList> объект, определить, <xref:System.Collections.SortedList> является ли он синхронизированным, и использовать синхронизированный <xref:System.Collections.SortedList>.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-515">The following code example shows how to synchronize a <xref:System.Collections.SortedList> object, determine whether a <xref:System.Collections.SortedList> is synchronized, and use a synchronized <xref:System.Collections.SortedList>.</span></span>  
  
 [!code-cpp[Classic SortedList.IsSynchronized Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList.IsSynchronized Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SortedList.IsSynchronized Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList.IsSynchronized Example/CS/source.cs#1)]
 [!code-vb[Classic SortedList.IsSynchronized Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList.IsSynchronized Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e8f0b-516">Свойство <paramref name="list" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-516"><paramref name="list" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="P:System.Collections.SortedList.IsSynchronized" />
        <altmember cref="P:System.Collections.SortedList.SyncRoot" />
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public virtual object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Collections.SortedList.SyncRoot" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SyncRoot As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SyncRoot : obj" Usage="System.Collections.SortedList.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e8f0b-517">Получает объект, который позволяет синхронизировать доступ к объекту <see cref="T:System.Collections.SortedList" />.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-517">Gets an object that can be used to synchronize access to a <see cref="T:System.Collections.SortedList" /> object.</span></span></summary>
        <value><span data-ttu-id="e8f0b-518">Объект, который позволяет синхронизировать доступ к объекту <see cref="T:System.Collections.SortedList" />.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-518">An object that can be used to synchronize access to the <see cref="T:System.Collections.SortedList" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8f0b-519">Чтобы создать синхронизированную версию <xref:System.Collections.SortedList> объекта, <xref:System.Collections.SortedList.Synchronized%2A> используйте метод.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-519">To create a synchronized version of the <xref:System.Collections.SortedList> object, use the <xref:System.Collections.SortedList.Synchronized%2A> method.</span></span> <span data-ttu-id="e8f0b-520">Однако производные классы могут предоставлять собственную синхронизированную версию <xref:System.Collections.SortedList> <xref:System.Collections.SortedList.SyncRoot%2A> с помощью свойства.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-520">However, derived classes can provide their own synchronized version of the <xref:System.Collections.SortedList> using the <xref:System.Collections.SortedList.SyncRoot%2A> property.</span></span> <span data-ttu-id="e8f0b-521">Синхронизирующий код должен выполнять операции <xref:System.Collections.SortedList.SyncRoot%2A> <xref:System.Collections.SortedList>в <xref:System.Collections.SortedList>, а не непосредственно на.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-521">The synchronizing code must perform operations on the <xref:System.Collections.SortedList.SyncRoot%2A> of the <xref:System.Collections.SortedList>, not directly on the <xref:System.Collections.SortedList>.</span></span> <span data-ttu-id="e8f0b-522">Это обеспечивает правильную работу коллекций, являющихся производными других объектов.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-522">This ensures proper operation of collections that are derived from other objects.</span></span> <span data-ttu-id="e8f0b-523">В частности, он поддерживает правильную синхронизацию с другими потоками, которые <xref:System.Collections.SortedList> могут одновременно изменять объект.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-523">Specifically, it maintains proper synchronization with other threads that might be simultaneously modifying the <xref:System.Collections.SortedList> object.</span></span>  
  
 <span data-ttu-id="e8f0b-524">Перечисление коллекции не является потокобезопасной процедурой.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-524">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="e8f0b-525">Даже если коллекция синхронизирована, другие потоки могут ее изменить, что приведет к тому, что перечислитель создаст исключение.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-525">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="e8f0b-526">Для обеспечения потокобезопасности при перечислении можно либо заблокировать коллекцию на все время перечисления, либо перехватывать исключения, возникающие в результате изменений, внесенных другими потоками.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-526">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e8f0b-527">В следующем примере кода показано, как заблокировать коллекцию с помощью <xref:System.Collections.SortedList.SyncRoot%2A> свойства во всем перечислении.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-527">The following code example shows how to lock the collection using the <xref:System.Collections.SortedList.SyncRoot%2A> property during the entire enumeration.</span></span>  
  
 [!code-cpp[Classic SortedList.IsSynchronized Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList.IsSynchronized Example/CPP/source2.cpp#2)]
 [!code-csharp[Classic SortedList.IsSynchronized Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList.IsSynchronized Example/CS/source2.cs#2)]
 [!code-vb[Classic SortedList.IsSynchronized Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList.IsSynchronized Example/VB/source2.vb#2)]  
  
 <span data-ttu-id="e8f0b-528">Получение значения данного свойства является операцией порядка сложности O(1).</span><span class="sxs-lookup"><span data-stu-id="e8f0b-528">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.SortedList.IsSynchronized" />
        <altmember cref="M:System.Collections.SortedList.Synchronized(System.Collections.SortedList)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e8f0b-529">Возвращает объект <see cref="T:System.Collections.IEnumerator" />, осуществляющий перебор <see cref="T:System.Collections.SortedList" />.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-529">Returns an <see cref="T:System.Collections.IEnumerator" /> that iterates through the <see cref="T:System.Collections.SortedList" />.</span></span></summary>
        <returns><span data-ttu-id="e8f0b-530">Интерфейс <see cref="T:System.Collections.IEnumerator" /> для <see cref="T:System.Collections.SortedList" />.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-530">An <see cref="T:System.Collections.IEnumerator" /> for the <see cref="T:System.Collections.SortedList" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8f0b-531">[Visual Basic, C#]</span><span class="sxs-lookup"><span data-stu-id="e8f0b-531">[Visual Basic, C#]</span></span>  
  
 <span data-ttu-id="e8f0b-532">Инструкция `foreach` языка C# (`for each` в Visual Basic) позволяет скрыть сложный механизм перечислителей.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-532">The `foreach` statement of the C# language (`for each` in Visual Basic) hides the complexity of the enumerators.</span></span>  <span data-ttu-id="e8f0b-533">Поэтому рекомендуется вместо непосредственного использования перечислителя применять ключевое слово `foreach`.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-533">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="e8f0b-534">Перечислители могут использоваться для чтения данных в коллекции, но не для ее изменения.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-534">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="e8f0b-535">Изначально перечислитель располагается перед первым элементом коллекции.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-535">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="e8f0b-536">Метод <xref:System.Collections.IEnumerator.Reset%2A> также переводит перечислитель в эту позицию.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-536"><xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position.</span></span> <span data-ttu-id="e8f0b-537">В этой позиции вызов <xref:System.Collections.IEnumerator.Current%2A> создает исключение.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-537">At this position, calling <xref:System.Collections.IEnumerator.Current%2A> throws an exception.</span></span> <span data-ttu-id="e8f0b-538">Поэтому необходимо вызвать метод <xref:System.Collections.IEnumerator.MoveNext%2A>, чтобы переместить перечислитель к первому элементу коллекции до считывания значения свойства <xref:System.Collections.IEnumerator.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-538">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="e8f0b-539"><xref:System.Collections.IEnumerator.Current%2A> возвращает тот же объект, пока не будет вызван метод <xref:System.Collections.IEnumerator.MoveNext%2A> или <xref:System.Collections.IEnumerator.Reset%2A>.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-539"><xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="e8f0b-540"><xref:System.Collections.IEnumerator.MoveNext%2A> задает <xref:System.Collections.IEnumerator.Current%2A> в качестве значения для следующего элемента.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-540"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="e8f0b-541">Если <xref:System.Collections.IEnumerator.MoveNext%2A> передает конец коллекции, перечислитель располагается после последнего элемента в коллекции и <xref:System.Collections.IEnumerator.MoveNext%2A> возвращает `false`.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-541">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="e8f0b-542">Если перечислитель находится в этой позиции, последующие вызовы <xref:System.Collections.IEnumerator.MoveNext%2A> также возвращают. `false`</span><span class="sxs-lookup"><span data-stu-id="e8f0b-542">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="e8f0b-543">Если последний вызов <xref:System.Collections.IEnumerator.MoveNext%2A> возвращал `false`, вызов <xref:System.Collections.IEnumerator.Current%2A> создает исключение.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-543">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, calling <xref:System.Collections.IEnumerator.Current%2A> throws an exception.</span></span> <span data-ttu-id="e8f0b-544">Чтобы снова задать в качестве значения свойства <xref:System.Collections.IEnumerator.Current%2A> первый элемент коллекции, можно последовательно вызвать методы <xref:System.Collections.IEnumerator.Reset%2A> и<xref:System.Collections.IEnumerator.MoveNext%2A>.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-544">To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="e8f0b-545">Перечислитель остается действительным, пока коллекция не изменяется.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-545">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="e8f0b-546">Если в коллекцию вносятся изменения, такие как добавление, изменение или удаление элементов, перечислитель становится необратимо недействительным, а следующий вызов <xref:System.Collections.IEnumerator.MoveNext%2A> или <xref:System.Collections.IEnumerator.Reset%2A> вызывает <xref:System.InvalidOperationException>исключение.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-546">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span> <span data-ttu-id="e8f0b-547">Если коллекция изменяется между <xref:System.Collections.IEnumerator.MoveNext%2A> и <xref:System.Collections.IEnumerator.Current%2A>, <xref:System.Collections.IEnumerator.Current%2A> Возвращает элемент, для которого он установлен, даже если перечислитель уже недействителен.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-547">If the collection is modified between <xref:System.Collections.IEnumerator.MoveNext%2A> and <xref:System.Collections.IEnumerator.Current%2A>, <xref:System.Collections.IEnumerator.Current%2A> returns the element that it is set to, even if the enumerator is already invalidated.</span></span>  
  
 <span data-ttu-id="e8f0b-548">У перечислителя нет эксклюзивного доступа к коллекции, поэтому перечисление коллекции не является потокобезопасной процедурой.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-548">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="e8f0b-549">Даже если коллекция синхронизирована, другие потоки могут ее изменить, что приведет к тому, что перечислитель создаст исключение.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-549">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="e8f0b-550">Для обеспечения потокобезопасности при перечислении можно либо заблокировать коллекцию на все время перечисления, либо перехватывать исключения, возникающие в результате изменений, внесенных другими потоками.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-550">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
 <span data-ttu-id="e8f0b-551">Этот метод является операцией O (1).</span><span class="sxs-lookup"><span data-stu-id="e8f0b-551">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IDictionaryEnumerator" />
        <altmember cref="T:System.Collections.IEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="TrimToSize">
      <MemberSignature Language="C#" Value="public virtual void TrimToSize ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void TrimToSize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.TrimToSize" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub TrimToSize ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void TrimToSize();" />
      <MemberSignature Language="F#" Value="abstract member TrimToSize : unit -&gt; unit&#xA;override this.TrimToSize : unit -&gt; unit" Usage="sortedList.TrimToSize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e8f0b-552">Задает значение емкости, равное действительному количеству элементов в объекте <see cref="T:System.Collections.SortedList" />.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-552">Sets the capacity to the actual number of elements in a <see cref="T:System.Collections.SortedList" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8f0b-553">Этот метод можно использовать для снижения нагрузки на память коллекции, если в коллекцию не добавляются новые элементы.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-553">This method can be used to minimize a collection's memory overhead if no new elements will be added to the collection.</span></span>  
  
 <span data-ttu-id="e8f0b-554">Чтобы сбросить <xref:System.Collections.SortedList> объект до исходного состояния, <xref:System.Collections.SortedList.Clear%2A> вызовите метод перед вызовом <xref:System.Collections.SortedList.TrimToSize%2A>метода.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-554">To reset a <xref:System.Collections.SortedList> object to its initial state, call the <xref:System.Collections.SortedList.Clear%2A> method before calling <xref:System.Collections.SortedList.TrimToSize%2A>.</span></span> <span data-ttu-id="e8f0b-555">Удаление пустой <xref:System.Collections.SortedList> задает емкость объекта <xref:System.Collections.SortedList> емкость по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-555">Trimming an empty <xref:System.Collections.SortedList> sets the capacity of the <xref:System.Collections.SortedList> to the default capacity.</span></span>  
  
 <span data-ttu-id="e8f0b-556">Этот метод является операцией O`n`(), где `n` имеет <xref:System.Collections.SortedList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-556">This method is an O(`n`) operation, where `n` is <xref:System.Collections.SortedList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e8f0b-557">В следующем примере кода показано, как обрезать неиспользуемые части <xref:System.Collections.SortedList> объекта и как очистить его значения.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-557">The following code example shows how to trim the unused portions of a <xref:System.Collections.SortedList> object and how to clear its values.</span></span>  
  
 [!code-cpp[Classic SortedList.Clear Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList.Clear Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SortedList.Clear Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList.Clear Example/CS/source.cs#1)]
 [!code-vb[Classic SortedList.Clear Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList.Clear Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="e8f0b-558">Объект <see cref="T:System.Collections.SortedList" /> доступен только для чтения.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-558">The <see cref="T:System.Collections.SortedList" /> object is read-only.</span></span>  
  
<span data-ttu-id="e8f0b-559">-или-</span><span class="sxs-lookup"><span data-stu-id="e8f0b-559">-or-</span></span> 
<span data-ttu-id="e8f0b-560"><see cref="T:System.Collections.SortedList" /> имеет фиксированный размер.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-560">The <see cref="T:System.Collections.SortedList" /> has a fixed size.</span></span></exception>
        <altmember cref="M:System.Collections.SortedList.Clear" />
        <altmember cref="P:System.Collections.SortedList.Capacity" />
        <altmember cref="P:System.Collections.SortedList.Count" />
      </Docs>
    </Member>
    <Member MemberName="Values">
      <MemberSignature Language="C#" Value="public virtual System.Collections.ICollection Values { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection Values" />
      <MemberSignature Language="DocId" Value="P:System.Collections.SortedList.Values" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Values As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::ICollection ^ Values { System::Collections::ICollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Values : System.Collections.ICollection" Usage="System.Collections.SortedList.Values" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.Values</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e8f0b-561">Получает значения из объекта <see cref="T:System.Collections.SortedList" />.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-561">Gets the values in a <see cref="T:System.Collections.SortedList" /> object.</span></span></summary>
        <value><span data-ttu-id="e8f0b-562">Объект <see cref="T:System.Collections.ICollection" />, содержащий значения из объекта <see cref="T:System.Collections.SortedList" />.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-562">An <see cref="T:System.Collections.ICollection" /> object containing the values in the <see cref="T:System.Collections.SortedList" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8f0b-563">Объект является представлением значений <xref:System.Collections.SortedList> объекта только для чтения. <xref:System.Collections.ICollection></span><span class="sxs-lookup"><span data-stu-id="e8f0b-563">The <xref:System.Collections.ICollection> object is a read-only view of the values of the <xref:System.Collections.SortedList> object.</span></span> <span data-ttu-id="e8f0b-564">Изменения, вносимые в базовый <xref:System.Collections.SortedList> объект, немедленно отражаются <xref:System.Collections.ICollection>в.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-564">Modifications made to the underlying <xref:System.Collections.SortedList> are immediately reflected in the <xref:System.Collections.ICollection>.</span></span>  
  
 <span data-ttu-id="e8f0b-565">Элементы объекта <xref:System.Collections.ICollection> сортируются в том же порядке, что и значения <xref:System.Collections.SortedList>объекта.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-565">The elements of the <xref:System.Collections.ICollection> are sorted in the same order as the values of the <xref:System.Collections.SortedList>.</span></span>  
  
 <span data-ttu-id="e8f0b-566">Это свойство аналогично <xref:System.Collections.SortedList.GetValueList%2A> методу, но <xref:System.Collections.ICollection> возвращает объект, а не <xref:System.Collections.IList> объект.</span><span class="sxs-lookup"><span data-stu-id="e8f0b-566">This property is similar to the <xref:System.Collections.SortedList.GetValueList%2A> method, but returns an <xref:System.Collections.ICollection> object instead of an <xref:System.Collections.IList> object.</span></span>  
  
 <span data-ttu-id="e8f0b-567">Этот метод является операцией O (1).</span><span class="sxs-lookup"><span data-stu-id="e8f0b-567">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.ICollection" />
        <altmember cref="P:System.Collections.SortedList.Keys" />
        <altmember cref="M:System.Collections.SortedList.GetValueList" />
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections.md"><span data-ttu-id="e8f0b-568">Выполнение в коллекциях строковых операций, не зависящих от языка и региональных параметров</span><span class="sxs-lookup"><span data-stu-id="e8f0b-568">Performing Culture-Insensitive String Operations in Collections</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
