<Type Name="IStructuralEquatable" FullName="System.Collections.IStructuralEquatable">
  <Metadata><Meta Name="ms.openlocfilehash" Value="46e9881e5a687f951730fba30e320133ed7f95be" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69333686" /></Metadata><TypeSignature Language="C#" Value="public interface IStructuralEquatable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IStructuralEquatable" />
  <TypeSignature Language="DocId" Value="T:System.Collections.IStructuralEquatable" />
  <TypeSignature Language="VB.NET" Value="Public Interface IStructuralEquatable" />
  <TypeSignature Language="C++ CLI" Value="public interface class IStructuralEquatable" />
  <TypeSignature Language="F#" Value="type IStructuralEquatable = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Определяет методы для поддержки операций сравнения объектов с целью определения их структурного равенства.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Структурное равенство означает, что два объекта равны, так как они имеют одинаковые значения. Он отличается от равенства ссылок, который указывает, что две ссылки на объекты равны, так как они ссылаются на один и тот же физический объект. <xref:System.Collections.IStructuralEquatable> Интерфейс позволяет реализовать пользовательские сравнения для проверки структурного равенства объектов коллекции. То есть можно создать собственное определение структурного равенства и указать, что это определение должно использоваться с типом коллекции, который принимает <xref:System.Collections.IStructuralEquatable> интерфейс. Интерфейс имеет два члена: <xref:System.Collections.IStructuralEquatable.Equals%2A>, который проверяет равенство с помощью указанной <xref:System.Collections.IEqualityComparer> реализации, и <xref:System.Collections.IStructuralEquatable.GetHashCode%2A>, который возвращает идентичные хэш-коды для объектов, которые равны.  
  
> [!NOTE]
>  <xref:System.Collections.IStructuralEquatable> Интерфейс поддерживает только пользовательские сравнения для структурного равенства. <xref:System.Collections.IStructuralComparable> Интерфейс поддерживает пользовательские структурные сравнения для сортировки и упорядочения.  
  
 .NET Framework также предоставляет компараторы равенства по умолчанию, которые возвращаются <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> свойствами и. <xref:System.Collections.StructuralComparisons.StructuralEqualityComparer%2A?displayProperty=nameWithType> Дополнительные сведения см. в примере.  
  
 Универсальные классы кортежей<xref:System.Tuple%601>( <xref:System.Tuple%602>, <xref:System.Tuple%603>, и т. д.) <xref:System.Array> и класс предоставляют явные реализации <xref:System.Collections.IStructuralEquatable> интерфейса. Путем приведения ( C#в) или преобразования (в Visual Basic) текущего экземпляра массива или кортежа в <xref:System.Collections.IStructuralEquatable> <xref:System.Collections.IEqualityComparer> значение интерфейса и предоставления реализации в качестве аргумента для <xref:System.Collections.IStructuralEquatable.Equals%2A> метода можно определить пользовательское равенство Сравнение для массива или коллекции.  
  
   
  
## Examples  
 По умолчанию компаратор `EqualityComparer<Object>.Default.Equals`проверки на равенство считает `NaN` два значения равными. Однако в некоторых случаях может потребоваться, чтобы сравнение `NaN` значений равенства возвращалось `false`, что означает, что значения нельзя сравнивать. В следующем примере определяется класс `NanComparer` , реализующий интерфейс <xref:System.Collections.IStructuralEquatable> . Он сравнивает два <xref:System.Double> или два <xref:System.Single> значения с помощью оператора равенства. Он передает значения любого другого типа в компаратор проверки на равенство по умолчанию.  
  
 [!code-csharp[System.Collections.IStructuralEquatable#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.istructuralequatable/cs/nanexample1.cs#1)]
 [!code-vb[System.Collections.IStructuralEquatable#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.istructuralequatable/vb/nanexample1.vb#1)]  
  
 В следующем примере создаются два идентичных объекта трех кортежей, компоненты которых состоят <xref:System.Double> из трех значений. Вторым компонентом является <xref:System.Double.NaN?displayProperty=nameWithType>значение. Затем в примере вызывается <xref:System.Tuple%603.Equals%2A?displayProperty=nameWithType> метод, который <xref:System.Collections.IStructuralEquatable.Equals%2A?displayProperty=nameWithType> вызывает метод три раза. В первый раз он передает компаратор проверки на равенство по умолчанию, возвращаемый <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> свойством. Второй раз он передает компаратор проверки на равенство по умолчанию, возвращаемый <xref:System.Collections.StructuralComparisons.StructuralEqualityComparer%2A?displayProperty=nameWithType> свойством. В третье время он передает пользовательский `NanComparer` объект. Как видно из выходных данных примера, первые три метода вызывают Return `true`, тогда как четвертый вызов возвращает. `false`  
  
 [!code-csharp[System.Collections.IStructuralEquatable#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.istructuralequatable/cs/nanexample1.cs#2)]
 [!code-vb[System.Collections.IStructuralEquatable#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.istructuralequatable/vb/nanexample1.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Collections.IEqualityComparer" />
    <altmember cref="T:System.Collections.IStructuralComparable" />
    <altmember cref="P:System.Collections.StructuralComparisons.StructuralEqualityComparer" />
  </Docs>
  <Members>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (object other, System.Collections.IEqualityComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(object other, class System.Collections.IEqualityComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As Object, comparer As IEqualityComparer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equals(System::Object ^ other, System::Collections::IEqualityComparer ^ comparer);" />
      <MemberSignature Language="F#" Value="abstract member Equals : obj * System.Collections.IEqualityComparer -&gt; bool" Usage="iStructuralEquatable.Equals (other, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Object" />
        <Parameter Name="comparer" Type="System.Collections.IEqualityComparer" />
      </Parameters>
      <Docs>
        <param name="other">Объект для сравнения с текущим экземпляром.</param>
        <param name="comparer">Объект, определяющий, равны ли текущий экземпляр и объект <paramref name="other" />.</param>
        <summary>Определяет, соблюдается ли структурное равенство между объектом и текущим экземпляром.</summary>
        <returns>Значение <see langword="true" />, если эти два объекта равны; в противном случае — значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Collections.IStructuralEquatable.Equals%2A> Метод поддерживает пользовательское структурное сравнение объектов Array и Tuple. Этот метод, в свою очередь `comparer` , вызывает <xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType> метод объекта для сравнения отдельных элементов массива или компонентов кортежа, начиная с первого элемента или компонента. Отдельные вызовы <xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType> End <xref:System.Collections.IStructuralEquatable.Equals%2A?displayProperty=nameWithType> и метод возвращают значение, если вызов метода возвращает `false` или после сравнения всех элементов массива или компонентов кортежа.  
  
   
  
## Examples  
 По умолчанию компаратор `EqualityComparer<Object>.Default.Equals`проверки на равенство считает `NaN` два значения равными. Однако в некоторых случаях может потребоваться, чтобы сравнение `NaN` значений равенства возвращалось `false`, что означает, что значения нельзя сравнивать. В следующем примере определяется класс `NanComparer` , реализующий интерфейс <xref:System.Collections.IStructuralEquatable> . Он сравнивает два <xref:System.Double> или два <xref:System.Single> значения с помощью оператора равенства. Он передает значения любого другого типа в компаратор проверки на равенство по умолчанию.  
  
 [!code-csharp[System.Collections.IStructuralEquatable#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.istructuralequatable/cs/nanexample1.cs#1)]
 [!code-vb[System.Collections.IStructuralEquatable#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.istructuralequatable/vb/nanexample1.vb#1)]  
  
 В следующем примере создаются два идентичных объекта трех кортежей, компоненты которых состоят <xref:System.Double> из трех значений. Вторым компонентом является <xref:System.Double.NaN?displayProperty=nameWithType>значение. Затем в примере вызывается <xref:System.Tuple%603.Equals%2A?displayProperty=nameWithType> метод, который <xref:System.Collections.IStructuralEquatable.Equals%2A?displayProperty=nameWithType> вызывает метод три раза. В первый раз он передает компаратор проверки на равенство по умолчанию, возвращаемый <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> свойством. Второй раз он передает компаратор проверки на равенство по умолчанию, возвращаемый <xref:System.Collections.StructuralComparisons.StructuralEqualityComparer%2A?displayProperty=nameWithType> свойством. В третье время он передает пользовательский `NanComparer` объект. Как видно из выходных данных примера, первые три метода вызывают Return `true`, тогда как четвертый вызов возвращает. `false`  
  
 [!code-csharp[System.Collections.IStructuralEquatable#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.istructuralequatable/cs/nanexample1.cs#2)]
 [!code-vb[System.Collections.IStructuralEquatable#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.istructuralequatable/vb/nanexample1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.StructuralComparisons.StructuralEqualityComparer" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public int GetHashCode (System.Collections.IEqualityComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetHashCode(class System.Collections.IEqualityComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.IStructuralEquatable.GetHashCode(System.Collections.IEqualityComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetHashCode (comparer As IEqualityComparer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetHashCode(System::Collections::IEqualityComparer ^ comparer);" />
      <MemberSignature Language="F#" Value="abstract member GetHashCode : System.Collections.IEqualityComparer -&gt; int" Usage="iStructuralEquatable.GetHashCode comparer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.IEqualityComparer" />
      </Parameters>
      <Docs>
        <param name="comparer">Объект, вычисляющий хэш-код текущего объекта.</param>
        <summary>Возвращает хэш-код текущего экземпляра.</summary>
        <returns>Хэш-код для текущего экземпляра.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Реализуйте этот метод для возврата настраиваемых хэш-кодов для объектов коллекции, которые соответствуют настраиваемому сравнению структурного <xref:System.Collections.IStructuralEquatable.Equals%2A> равенства, обеспечиваемого методом.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Если метод возвращает <see langword="true" /> для двух объектов, значения, возвращаемые <see cref="M:System.Collections.IStructuralEquatable.GetHashCode(System.Collections.IEqualityComparer)" /> методом для двух объектов, также должны быть равны. <see cref="M:System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)" /></para></block>
      </Docs>
    </Member>
  </Members>
</Type>
