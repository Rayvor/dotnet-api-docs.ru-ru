<Type Name="Hashtable" FullName="System.Collections.Hashtable">
  <Metadata><Meta Name="ms.openlocfilehash" Value="153f1973d094497347a92986c8222bc9e4cc7d79" /><Meta Name="ms.sourcegitcommit" Value="1bb00d2f4343e73ae8d58668f02297a3cf10a4c1" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="06/15/2019" /><Meta Name="ms.locfileid" Value="63906946" /></Metadata><TypeSignature Language="C#" Value="public class Hashtable : ICloneable, System.Collections.IDictionary, System.Runtime.Serialization.IDeserializationCallback, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit Hashtable extends System.Object implements class System.Collections.ICollection, class System.Collections.IDictionary, class System.Collections.IEnumerable, class System.ICloneable, class System.Runtime.Serialization.IDeserializationCallback, class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Hashtable" />
  <TypeSignature Language="VB.NET" Value="Public Class Hashtable&#xA;Implements ICloneable, IDeserializationCallback, IDictionary, ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Hashtable : ICloneable, System::Collections::IDictionary, System::Runtime::Serialization::IDeserializationCallback, System::Runtime::Serialization::ISerializable" />
  <TypeSignature Language="F#" Value="type Hashtable = class&#xA;    interface IDictionary&#xA;    interface ISerializable&#xA;    interface IDeserializationCallback&#xA;    interface ICloneable&#xA;    interface ICollection&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Collections.NonGeneric</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IDictionary</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.IDeserializationCallback</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Diagnostics.DebuggerDisplay("Count = {Count}")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Diagnostics.DebuggerTypeProxy(typeof(System.Collections.Hashtable/HashtableDebugView))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="ad0ea-101">Представляет коллекцию пар «ключ-значение», которые упорядочены по хэш-коду ключа.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-101">Represents a collection of key/value pairs that are organized based on the hash code of the key.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks

<span data-ttu-id="ad0ea-102">Каждый элемент представляет пару ключ значение, хранящиеся в <xref:System.Collections.DictionaryEntry> объекта.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-102">Each element is a key/value pair stored in a <xref:System.Collections.DictionaryEntry> object.</span></span> <span data-ttu-id="ad0ea-103">Ключ не может быть `null`, но может быть значение.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-103">A key cannot be `null`, but a value can be.</span></span>  

> [!IMPORTANT]
>  <span data-ttu-id="ad0ea-104">Мы не рекомендуем использовать `Hashtable` класса для разработки новых приложений.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-104">We don't recommend that you use the `Hashtable` class for new development.</span></span> <span data-ttu-id="ad0ea-105">Вместо этого мы рекомендуем использовать универсальный <xref:System.Collections.Generic.Dictionary%602> класса.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-105">Instead, we recommend that you use the generic <xref:System.Collections.Generic.Dictionary%602> class.</span></span> <span data-ttu-id="ad0ea-106">Дополнительные сведения см. в разделе [неуниверсальные коллекции не должны использоваться](https://github.com/dotnet/platform-compat/blob/master/docs/DE0006.md) на сайте GitHub.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-106">For more information, see [Non-generic collections shouldn't be used](https://github.com/dotnet/platform-compat/blob/master/docs/DE0006.md) on GitHub.</span></span>
  
 <span data-ttu-id="ad0ea-107">Объекты, используемые в качестве ключей с <xref:System.Collections.Hashtable> требуется переопределять <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> метод (или <xref:System.Collections.IHashCodeProvider> интерфейс) и <xref:System.Object.Equals%2A?displayProperty=nameWithType> метод (или <xref:System.Collections.IComparer> интерфейс).</span><span class="sxs-lookup"><span data-stu-id="ad0ea-107">The objects used as keys by a <xref:System.Collections.Hashtable> are required to override the <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> method (or the <xref:System.Collections.IHashCodeProvider> interface) and the <xref:System.Object.Equals%2A?displayProperty=nameWithType> method (or the <xref:System.Collections.IComparer> interface).</span></span> <span data-ttu-id="ad0ea-108">Реализация методов и интерфейсов должна обрабатывать чувствительность к регистру одинаково. в противном случае <xref:System.Collections.Hashtable> может работать неправильно.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-108">The implementation of both methods and interfaces must handle case sensitivity the same way; otherwise, the <xref:System.Collections.Hashtable> might behave incorrectly.</span></span> <span data-ttu-id="ad0ea-109">Например, при создании <xref:System.Collections.Hashtable>, необходимо использовать <xref:System.Collections.CaseInsensitiveHashCodeProvider> класс (или без учета регистра в любом <xref:System.Collections.IHashCodeProvider> реализации) с <xref:System.Collections.CaseInsensitiveComparer> класс (или без учета регистра в любом <xref:System.Collections.IComparer> реализации).</span><span class="sxs-lookup"><span data-stu-id="ad0ea-109">For example, when creating a <xref:System.Collections.Hashtable>, you must use the <xref:System.Collections.CaseInsensitiveHashCodeProvider> class (or any case-insensitive <xref:System.Collections.IHashCodeProvider> implementation) with the <xref:System.Collections.CaseInsensitiveComparer> class (or any case-insensitive <xref:System.Collections.IComparer> implementation).</span></span>  
  
 <span data-ttu-id="ad0ea-110">Более того, эти методы должны быть те же результаты при вызове с теми же параметрами, если ключ существует в <xref:System.Collections.Hashtable>.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-110">Furthermore, these methods must produce the same results when called with the same parameters while the key exists in the <xref:System.Collections.Hashtable>.</span></span> <span data-ttu-id="ad0ea-111">Альтернативой является использование <xref:System.Collections.Hashtable> конструктор с <xref:System.Collections.IEqualityComparer> параметра.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-111">An alternative is to use a <xref:System.Collections.Hashtable> constructor with an <xref:System.Collections.IEqualityComparer> parameter.</span></span> <span data-ttu-id="ad0ea-112">Если равенства ключей были просто равенство ссылок, но унаследованной реализации <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> и <xref:System.Object.Equals%2A?displayProperty=nameWithType> было бы достаточно.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-112">If key equality were simply reference equality, the inherited implementation of <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> and <xref:System.Object.Equals%2A?displayProperty=nameWithType> would suffice.</span></span>  
  
 <span data-ttu-id="ad0ea-113">Ключевые объекты должны быть постоянным, до тех пор, пока они используются как ключи в <xref:System.Collections.Hashtable>.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-113">Key objects must be immutable as long as they are used as keys in the <xref:System.Collections.Hashtable>.</span></span>  
  
 <span data-ttu-id="ad0ea-114">При добавлении элемента <xref:System.Collections.Hashtable>, элемент помещается в сегмент, в зависимости от хэш-код ключа.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-114">When an element is added to the <xref:System.Collections.Hashtable>, the element is placed into a bucket based on the hash code of the key.</span></span> <span data-ttu-id="ad0ea-115">Последующих уточняющих запросов ключа служит хэш-код ключа для поиска в только определенном сегменте, по большей части, уменьшая количество ключей сравнений, необходимое для поиска элемента.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-115">Subsequent lookups of the key use the hash code of the key to search in only one particular bucket, thus substantially reducing the number of key comparisons required to find an element.</span></span>  
  
 <span data-ttu-id="ad0ea-116">Фактор нагрузки <xref:System.Collections.Hashtable> определяет максимальное отношение количества элементов к количеству сегментов.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-116">The load factor of a <xref:System.Collections.Hashtable> determines the maximum ratio of elements to buckets.</span></span> <span data-ttu-id="ad0ea-117">Снижение показателя загрузки уменьшает среднее время поиска за счет увеличения объема используемой памяти.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-117">Smaller load factors cause faster average lookup times at the cost of increased memory consumption.</span></span> <span data-ttu-id="ad0ea-118">По умолчанию показателем загрузки, 1,0 обычно обеспечивает оптимальный баланс между скоростью и размер.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-118">The default load factor of 1.0 generally provides the best balance between speed and size.</span></span> <span data-ttu-id="ad0ea-119">Также может быть другой показатель загрузки при <xref:System.Collections.Hashtable> создается.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-119">A different load factor can also be specified when the <xref:System.Collections.Hashtable> is created.</span></span>  
  
 <span data-ttu-id="ad0ea-120">При добавлении элементов к <xref:System.Collections.Hashtable>, коэффициент фактической нагрузки <xref:System.Collections.Hashtable> увеличивается.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-120">As elements are added to a <xref:System.Collections.Hashtable>, the actual load factor of the <xref:System.Collections.Hashtable> increases.</span></span> <span data-ttu-id="ad0ea-121">Когда фактический показатель загрузки достигает указанным показателем загрузки, количество сегментов в <xref:System.Collections.Hashtable> автоматически увеличивается до наименьшего простого числа, большего, чем вдвое превышает текущее число <xref:System.Collections.Hashtable> сегментов.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-121">When the actual load factor reaches the specified load factor, the number of buckets in the <xref:System.Collections.Hashtable> is automatically increased to the smallest prime number that is larger than twice the current number of <xref:System.Collections.Hashtable> buckets.</span></span>  
  
 <span data-ttu-id="ad0ea-122">Каждый ключевой объект в <xref:System.Collections.Hashtable> необходимо предоставить собственный хэш-функцией, к которому можно получить, вызвав <xref:System.Collections.Hashtable.GetHash%2A>.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-122">Each key object in the <xref:System.Collections.Hashtable> must provide its own hash function, which can be accessed by calling <xref:System.Collections.Hashtable.GetHash%2A>.</span></span> <span data-ttu-id="ad0ea-123">Тем не менее, любой объект, реализующий <xref:System.Collections.IHashCodeProvider> могут передаваться <xref:System.Collections.Hashtable> конструктор, и что для всех объектов в таблице используется хэш-функции.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-123">However, any object implementing <xref:System.Collections.IHashCodeProvider> can be passed to a <xref:System.Collections.Hashtable> constructor, and that hash function is used for all objects in the table.</span></span>  
  
 <span data-ttu-id="ad0ea-124">Емкость <xref:System.Collections.Hashtable> — количество элементов <xref:System.Collections.Hashtable> может содержать.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-124">The capacity of a <xref:System.Collections.Hashtable> is the number of elements the <xref:System.Collections.Hashtable> can hold.</span></span> <span data-ttu-id="ad0ea-125">При добавлении элементов к <xref:System.Collections.Hashtable>, емкость автоматически увеличивается должным образом посредством перераспределения.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-125">As elements are added to a <xref:System.Collections.Hashtable>, the capacity is automatically increased as required through reallocation.</span></span>  
  
 <span data-ttu-id="ad0ea-126">**.NET framework:** Для очень больших <xref:System.Collections.Hashtable> объектов, можно увеличить максимальную емкость с элементами 2 миллиарда на 64-разрядной системе, задав `enabled` атрибут [ `<gcAllowVeryLargeObjects>` ](~/docs/framework/configure-apps/file-schema/runtime/gcallowverylargeobjects-element.md) элемент конфигурации, `true` в Среда времени выполнения.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-126">**.NET Framework only:** For very large <xref:System.Collections.Hashtable> objects, you can increase the maximum capacity to 2 billion elements on a 64-bit system by setting the `enabled` attribute of the [`<gcAllowVeryLargeObjects>`](~/docs/framework/configure-apps/file-schema/runtime/gcallowverylargeobjects-element.md) configuration element to `true` in the run-time environment.</span></span>  
  
 <span data-ttu-id="ad0ea-127">`foreach` Инструкции языка C# (`For Each` в Visual Basic) возвращает объект типа элементов в коллекции.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-127">The `foreach` statement of the C# language (`For Each` in Visual Basic) returns an object of the type of the elements in the collection.</span></span> <span data-ttu-id="ad0ea-128">Так как каждый элемент из <xref:System.Collections.Hashtable> — это пара ключ/значение, тип элемента не является типом ключа или тип значения.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-128">Since each element of the <xref:System.Collections.Hashtable> is a key/value pair, the element type is not the type of the key or the type of the value.</span></span> <span data-ttu-id="ad0ea-129">Вместо этого тип элемента — это <xref:System.Collections.DictionaryEntry>.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-129">Instead, the element type is <xref:System.Collections.DictionaryEntry>.</span></span> <span data-ttu-id="ad0ea-130">Например:</span><span class="sxs-lookup"><span data-stu-id="ad0ea-130">For example:</span></span>  
  
 [!code-cpp[System.Collections.Hashtable_ClassExample#01](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Hashtable_ClassExample/cpp/remarks.cpp#01)]
 [!code-csharp[System.Collections.Hashtable_ClassExample#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Hashtable_ClassExample/cs/remarks.cs#01)]
 [!code-vb[System.Collections.Hashtable_ClassExample#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Hashtable_ClassExample/vb/remarks.vb#01)]  
  
 <span data-ttu-id="ad0ea-131">`foreach` Инструкция — это оболочка вокруг перечислитель, который допускает только чтение из, но не запись в коллекции.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-131">The `foreach` statement is a wrapper around the enumerator, which only allows reading from, not writing to, the collection.</span></span>  
  
 <span data-ttu-id="ad0ea-132">Поскольку сериализация и десериализация перечислитель для <xref:System.Collections.Hashtable> может привести к элементы, которые становятся переупорядочить, это не обязательно для продолжения перечисления без вызова <xref:System.Collections.IEnumerator.Reset%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-132">Because serializing and deserializing an enumerator for a <xref:System.Collections.Hashtable> can cause the elements to become reordered, it is not possible to continue enumeration without calling the <xref:System.Collections.IEnumerator.Reset%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ad0ea-133">Так как может быть унаследован ключи и их поведение изменено, абсолютная уникальность не гарантируется при сравнении с <xref:System.Type.Equals%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-133">Because keys can be inherited and their behavior changed, their absolute uniqueness cannot be guaranteed by comparisons using the <xref:System.Type.Equals%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ad0ea-134">В следующем примере показано, как создание, инициализация и выполняют различные функции для <xref:System.Collections.Hashtable> и способ вывода его ключей и значений.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-134">The following example shows how to create, initialize and perform various functions to a <xref:System.Collections.Hashtable> and how to print out its keys and values.</span></span>  
  
 [!code-cpp[System.Collections.Hashtable_ClassExample#00](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Hashtable_ClassExample/cpp/hashtable_example.cpp#00)]
 [!code-csharp[System.Collections.Hashtable_ClassExample#00](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Hashtable_ClassExample/cs/hashtable_example.cs#00)]
 [!code-vb[System.Collections.Hashtable_ClassExample#00](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Hashtable_ClassExample/vb/hashtable_example.vb#00)]
 [!code-powershell[System.Collections.Hashtable_ClassExample#00](~/samples/snippets/powershell/VS_Snippets_CLR_System/system.collections.hashtable.class/ps/hashtable.ps1#00)]  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="ad0ea-135"><see cref="T:System.Collections.Hashtable" /> является потокобезопасным, для использования несколькими потоками чтения и одним потоком записи.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-135"><see cref="T:System.Collections.Hashtable" /> is thread safe for use by multiple reader threads and a single writing thread.</span></span> <span data-ttu-id="ad0ea-136">Он является поточно-ориентированным многопоточную использовать, когда только один из потоков выполнения операций записи (обновление), что позволяет без блокировки операций чтения, при условии, что авторы сериализуются в <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-136">It is thread safe for multi-thread use when only one of the threads perform write (update) operations, which allows for lock-free reads provided that the writers are serialized to the <see cref="T:System.Collections.Hashtable" />.</span></span> <span data-ttu-id="ad0ea-137">Для обеспечения потокобезопасности все операции на <see cref="T:System.Collections.Hashtable" /> должны осуществляться через оболочку, возвращенную <see cref="M:System.Collections.Hashtable.Synchronized(System.Collections.Hashtable)" /> метод, что отсутствуют потоки чтения <see cref="T:System.Collections.Hashtable" /> объекта.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-137">To support multiple writers all operations on the <see cref="T:System.Collections.Hashtable" /> must be done through the wrapper returned by the <see cref="M:System.Collections.Hashtable.Synchronized(System.Collections.Hashtable)" /> method, provided that there are no threads reading the <see cref="T:System.Collections.Hashtable" /> object.</span></span>  
  
<span data-ttu-id="ad0ea-138">Перечисление коллекции само по себе не является потокобезопасной процедурой.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-138">Enumerating through a collection is intrinsically not a thread safe procedure.</span></span> <span data-ttu-id="ad0ea-139">Даже если коллекция синхронизирована, другие потоки могут ее изменить, что приведет к тому, что перечислитель создаст исключение.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-139">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="ad0ea-140">Для обеспечения потокобезопасности при перечислении можно либо заблокировать коллекцию на все время перечисления, либо перехватывать исключения, возникающие в результате изменений, внесенных другими потоками.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-140">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span></threadsafe>
    <altmember cref="T:System.Collections.IDictionary" />
    <altmember cref="T:System.Collections.IHashCodeProvider" />
    <altmember cref="M:System.Object.GetHashCode" />
    <altmember cref="M:System.Object.Equals(System.Object)" />
    <altmember cref="T:System.Collections.DictionaryEntry" />
    <altmember cref="T:System.Collections.Generic.Dictionary`2" />
    <altmember cref="T:System.Collections.IEqualityComparer" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ad0ea-141">Инициализирует новый экземпляр класса <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-141">Initializes a new instance of the <see cref="T:System.Collections.Hashtable" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Hashtable ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Hashtable();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ad0ea-142">Инициализирует новый пустой экземпляр класса <see cref="T:System.Collections.Hashtable" /> с заданными по умолчанию начальной емкостью, показателем загрузки, поставщиком хэш-кода и объектом сравнения.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-142">Initializes a new, empty instance of the <see cref="T:System.Collections.Hashtable" /> class using the default initial capacity, load factor, hash code provider, and comparer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad0ea-143">Емкость хэш-таблица используется для вычисления оптимального количества сегментов хэш-таблицы, исходя из показателем загрузки.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-143">A hash table's capacity is used to calculate the optimal number of hash table buckets based on the load factor.</span></span> <span data-ttu-id="ad0ea-144">Емкость автоматически увеличивается при необходимости.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-144">Capacity is automatically increased as required.</span></span>  
  
 <span data-ttu-id="ad0ea-145">Показатель загрузки определяет максимальное отношение количества элементов к количеству сегментов.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-145">The load factor is the maximum ratio of elements to buckets.</span></span> <span data-ttu-id="ad0ea-146">Фактор нагрузки на небольших означает более быстрый поиск, за счет увеличения объема используемой памяти.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-146">A smaller load factor means faster lookup at the cost of increased memory consumption.</span></span>  
  
 <span data-ttu-id="ad0ea-147">Когда фактический показатель загрузки достигает указанным показателем загрузки, количество сегментов автоматически увеличивается до наименьшего простого числа, большего, чем дважды текущего количества сегментов.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-147">When the actual load factor reaches the specified load factor, the number of buckets is automatically increased to the smallest prime number that is larger than twice the current number of buckets.</span></span>  
  
 <span data-ttu-id="ad0ea-148">Поставщик хэш-кода распределяет хеш-коды для ключей в <xref:System.Collections.Hashtable> объекта.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-148">The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Hashtable> object.</span></span> <span data-ttu-id="ad0ea-149">Хеш-кода по умолчанию является реализацией метода <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-149">The default hash code provider is the key's implementation of <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="ad0ea-150">Функция сравнения определяет, равны ли два ключа.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-150">The comparer determines whether two keys are equal.</span></span> <span data-ttu-id="ad0ea-151">Каждый ключ в <xref:System.Collections.Hashtable> должно быть уникальным.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-151">Every key in a <xref:System.Collections.Hashtable> must be unique.</span></span> <span data-ttu-id="ad0ea-152">Компаратор по умолчанию является реализацией метода <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-152">The default comparer is the key's implementation of <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="ad0ea-153">Этот конструктор является операцией o(1).</span><span class="sxs-lookup"><span data-stu-id="ad0ea-153">This constructor is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ad0ea-154">В следующем примере кода создает хэш-таблицы с помощью разных <xref:System.Collections.Hashtable> конструкторы и демонстрирует различия в поведении хэш-таблиц, даже если каждый из них содержит те же элементы.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-154">The following code example creates hash tables using different <xref:System.Collections.Hashtable> constructors and demonstrates the differences in the behavior of the hash tables, even if each one contains the same elements.</span></span>  
  
 [!code-cpp[System.Collections.Hashtable_ctor#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctor/CPP/hashtable_ctor.cpp#1)]
 [!code-csharp[System.Collections.Hashtable_ctor#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctor/CS/hashtable_ctor.cs#1)]
 [!code-vb[System.Collections.Hashtable_ctor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Hashtable_ctor/VB/hashtable_ctor.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.GetHashCode" />
        <altmember cref="M:System.Object.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Hashtable (System.Collections.IDictionary d);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.IDictionary d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.#ctor(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (d As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Hashtable(System::Collections::IDictionary ^ d);" />
      <MemberSignature Language="F#" Value="new System.Collections.Hashtable : System.Collections.IDictionary -&gt; System.Collections.Hashtable" Usage="new System.Collections.Hashtable d" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="d" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="ad0ea-155">Объект <see cref="T:System.Collections.IDictionary" />, предназначенный для копирования в новый объект <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-155">The <see cref="T:System.Collections.IDictionary" /> object to copy to a new <see cref="T:System.Collections.Hashtable" /> object.</span></span></param>
        <summary><span data-ttu-id="ad0ea-156">Инициализирует новый пустой экземпляр класса <see cref="T:System.Collections.Hashtable" /> посредством копирования элементов из указанного словаря в новый объект <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-156">Initializes a new instance of the <see cref="T:System.Collections.Hashtable" /> class by copying the elements from the specified dictionary to the new <see cref="T:System.Collections.Hashtable" /> object.</span></span> <span data-ttu-id="ad0ea-157">У нового объекта <see cref="T:System.Collections.Hashtable" /> исходная емкость равна числу копируемых элементов, и он обладает заданными по умолчанию показателем загрузки, поставщиком хэш-кода и объектом сравнения.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-157">The new <see cref="T:System.Collections.Hashtable" /> object has an initial capacity equal to the number of elements copied, and uses the default load factor, hash code provider, and comparer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad0ea-158">Исходная емкость присваивается количество элементов в исходном словаре.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-158">The initial capacity is set to the number of elements in the source dictionary.</span></span> <span data-ttu-id="ad0ea-159">Емкость — автоматически увеличивается в соответствии с показателем загрузки.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-159">Capacity is automatically increased as required based on the load factor.</span></span>  
  
 <span data-ttu-id="ad0ea-160">Показатель загрузки определяет максимальное отношение количества элементов к количеству сегментов.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-160">The load factor is the maximum ratio of elements to buckets.</span></span> <span data-ttu-id="ad0ea-161">Фактор нагрузки на небольших означает более быстрый поиск, за счет увеличения объема используемой памяти.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-161">A smaller load factor means faster lookup at the cost of increased memory consumption.</span></span>  
  
 <span data-ttu-id="ad0ea-162">Когда фактический показатель загрузки достигает указанным показателем загрузки, количество сегментов автоматически увеличивается до наименьшего простого числа, большего, чем дважды текущего количества сегментов.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-162">When the actual load factor reaches the specified load factor, the number of buckets is automatically increased to the smallest prime number that is larger than twice the current number of buckets.</span></span>  
  
 <span data-ttu-id="ad0ea-163">Поставщик хэш-кода распределяет хеш-коды для ключей в <xref:System.Collections.Hashtable> объекта.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-163">The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Hashtable> object.</span></span> <span data-ttu-id="ad0ea-164">Хеш-кода по умолчанию является реализацией метода <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-164">The default hash code provider is the key's implementation of <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="ad0ea-165">Функция сравнения определяет, равны ли два ключа.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-165">The comparer determines whether two keys are equal.</span></span> <span data-ttu-id="ad0ea-166">Каждый ключ в <xref:System.Collections.Hashtable> должно быть уникальным.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-166">Every key in a <xref:System.Collections.Hashtable> must be unique.</span></span> <span data-ttu-id="ad0ea-167">Компаратор по умолчанию является реализацией метода <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-167">The default comparer is the key's implementation of <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="ad0ea-168">Элементы нового <xref:System.Collections.Hashtable> сортируются в том же порядке, в котором перечислитель перемещается по <xref:System.Collections.IDictionary> объекта.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-168">The elements of the new <xref:System.Collections.Hashtable> are sorted in the same order in which the enumerator iterates through the <xref:System.Collections.IDictionary> object.</span></span>  
  
 <span data-ttu-id="ad0ea-169">Этот конструктор является операцией O (`n`) операции, где `n` — количество элементов в `d` параметра.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-169">This constructor is an O(`n`) operation, where `n` is the number of elements in the `d` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ad0ea-170">В следующем примере кода создает хэш-таблицы с помощью разных <xref:System.Collections.Hashtable> конструкторы и демонстрирует различия в поведении хэш-таблиц, даже если каждый из них содержит те же элементы.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-170">The following code example creates hash tables using different <xref:System.Collections.Hashtable> constructors and demonstrates the differences in the behavior of the hash tables, even if each one contains the same elements.</span></span>  
  
 [!code-cpp[System.Collections.Hashtable_ctorDictionary#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorDictionary/CPP/hashtable_ctordictionary.cpp#1)]
 [!code-csharp[System.Collections.Hashtable_ctorDictionary#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorDictionary/CS/hashtable_ctordictionary.cs#1)]
 [!code-vb[System.Collections.Hashtable_ctorDictionary#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorDictionary/VB/hashtable_ctordictionary.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ad0ea-171"><paramref name="d" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-171"><paramref name="d" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Collections.IDictionary" />
        <altmember cref="M:System.Object.GetHashCode" />
        <altmember cref="M:System.Object.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Hashtable (System.Collections.IEqualityComparer equalityComparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.IEqualityComparer equalityComparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.#ctor(System.Collections.IEqualityComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (equalityComparer As IEqualityComparer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Hashtable(System::Collections::IEqualityComparer ^ equalityComparer);" />
      <MemberSignature Language="F#" Value="new System.Collections.Hashtable : System.Collections.IEqualityComparer -&gt; System.Collections.Hashtable" Usage="new System.Collections.Hashtable equalityComparer" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="equalityComparer" Type="System.Collections.IEqualityComparer" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="equalityComparer"><span data-ttu-id="ad0ea-172"><see cref="T:System.Collections.IEqualityComparer" /> — это объект, определяющий поставщик хэш-кода и объект сравнения для использования с объектом <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-172">The <see cref="T:System.Collections.IEqualityComparer" /> object that defines the hash code provider and the comparer to use with the <see cref="T:System.Collections.Hashtable" /> object.</span></span>  
  
<span data-ttu-id="ad0ea-173">-или-</span><span class="sxs-lookup"><span data-stu-id="ad0ea-173">-or-</span></span> 
 <span data-ttu-id="ad0ea-174">Значение <see langword="null" /> предусмотрено для использования поставщика хэш-кодов по умолчанию и объекта сравнения по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-174"><see langword="null" /> to use the default hash code provider and the default comparer.</span></span> <span data-ttu-id="ad0ea-175">Поставщик хэш-кода по умолчанию является реализацией метода <see cref="M:System.Object.GetHashCode" />, а средство сравнения по умолчанию является реализацией метода <see cref="M:System.Object.Equals(System.Object)" />.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-175">The default hash code provider is each key's implementation of <see cref="M:System.Object.GetHashCode" /> and the default comparer is each key's implementation of <see cref="M:System.Object.Equals(System.Object)" />.</span></span></param>
        <summary><span data-ttu-id="ad0ea-176">Инициализирует новый пустой экземпляр класса <see cref="T:System.Collections.Hashtable" /> с заданными по умолчанию исходной емкостью и показателем загрузки и указанным объектом сравнения <see cref="T:System.Collections.IEqualityComparer" />.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-176">Initializes a new, empty instance of the <see cref="T:System.Collections.Hashtable" /> class using the default initial capacity and load factor, and the specified <see cref="T:System.Collections.IEqualityComparer" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad0ea-177">Емкость хэш-таблица используется для вычисления оптимального количества сегментов хэш-таблицы, исходя из показателем загрузки.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-177">A hash table's capacity is used to calculate the optimal number of hash table buckets based on the load factor.</span></span> <span data-ttu-id="ad0ea-178">Емкость автоматически увеличивается при необходимости.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-178">Capacity is automatically increased as required.</span></span>  
  
 <span data-ttu-id="ad0ea-179">Показатель загрузки определяет максимальное отношение количества элементов к количеству сегментов.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-179">The load factor is the maximum ratio of elements to buckets.</span></span> <span data-ttu-id="ad0ea-180">Фактор нагрузки на небольших означает более быстрый поиск, за счет увеличения объема используемой памяти.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-180">A smaller load factor means faster lookup at the cost of increased memory consumption.</span></span>  
  
 <span data-ttu-id="ad0ea-181">Когда фактический показатель загрузки достигает указанным показателем загрузки, количество сегментов автоматически увеличивается до наименьшего простого числа, большего, чем дважды текущего количества сегментов.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-181">When the actual load factor reaches the specified load factor, the number of buckets is automatically increased to the smallest prime number that is larger than twice the current number of buckets.</span></span>  
  
 <span data-ttu-id="ad0ea-182"><xref:System.Collections.IEqualityComparer> Объект включает в себя, поставщиком хэш-кода и объект сравнения.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-182">The <xref:System.Collections.IEqualityComparer> object includes both the hash code provider and the comparer.</span></span> <span data-ttu-id="ad0ea-183">Если <xref:System.Collections.IEqualityComparer> используется в <xref:System.Collections.Hashtable> конструктор, объекты, используемые в качестве ключей в <xref:System.Collections.Hashtable> объекта не требуется переопределять <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> и <xref:System.Object.Equals%2A?displayProperty=nameWithType> методы.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-183">If an <xref:System.Collections.IEqualityComparer> is used in the <xref:System.Collections.Hashtable> constructor, the objects used as keys in the <xref:System.Collections.Hashtable> object are not required to override the <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> and <xref:System.Object.Equals%2A?displayProperty=nameWithType> methods.</span></span>  
  
 <span data-ttu-id="ad0ea-184">Поставщик хэш-кода распределяет хеш-коды для ключей в <xref:System.Collections.Hashtable>.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-184">The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Hashtable>.</span></span> <span data-ttu-id="ad0ea-185">Хеш-кода по умолчанию является реализацией метода <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-185">The default hash code provider is the key's implementation of <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="ad0ea-186">Функция сравнения определяет, равны ли два ключа.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-186">The comparer determines whether two keys are equal.</span></span> <span data-ttu-id="ad0ea-187">Каждый ключ в <xref:System.Collections.Hashtable> должно быть уникальным.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-187">Every key in a <xref:System.Collections.Hashtable> must be unique.</span></span> <span data-ttu-id="ad0ea-188">Компаратор по умолчанию является реализацией метода <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-188">The default comparer is the key's implementation of <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="ad0ea-189"><xref:System.Collections.IEqualityComparer> Позволяет реализовать сценарии, например, при поиске строк без учета регистра.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-189">The <xref:System.Collections.IEqualityComparer> enables scenarios such as doing lookups with case-insensitive strings.</span></span>  
  
 <span data-ttu-id="ad0ea-190">Этот конструктор является операцией o(1).</span><span class="sxs-lookup"><span data-stu-id="ad0ea-190">This constructor is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ad0ea-191">В следующем примере кода создает хэш-таблицы с помощью разных <xref:System.Collections.Hashtable> конструкторы и демонстрирует различия в поведении хэш-таблиц, даже если каждый из них содержит те же элементы.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-191">The following code example creates hash tables using different <xref:System.Collections.Hashtable> constructors and demonstrates the differences in the behavior of the hash tables, even if each one contains the same elements.</span></span>  
  
 [!code-cpp[System.Collections.Hashtable_ctor#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctor/CPP/hashtable_ctor.cpp#1)]
 [!code-csharp[System.Collections.Hashtable_ctor#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctor/CS/hashtable_ctor.cs#1)]
 [!code-vb[System.Collections.Hashtable_ctor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Hashtable_ctor/VB/hashtable_ctor.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IEqualityComparer" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Hashtable (int capacity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 capacity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (capacity As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Hashtable(int capacity);" />
      <MemberSignature Language="F#" Value="new System.Collections.Hashtable : int -&gt; System.Collections.Hashtable" Usage="new System.Collections.Hashtable capacity" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="capacity" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="capacity"><span data-ttu-id="ad0ea-192">Приблизительное количество элементов, которое может первоначально содержать объект <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-192">The approximate number of elements that the <see cref="T:System.Collections.Hashtable" /> object can initially contain.</span></span></param>
        <summary><span data-ttu-id="ad0ea-193">Инициализирует новый пустой экземпляр класса <see cref="T:System.Collections.Hashtable" /> с указанной исходной емкостью и заданными по умолчанию показателем загрузки, поставщиком хэш-кода и объектом сравнения.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-193">Initializes a new, empty instance of the <see cref="T:System.Collections.Hashtable" /> class using the specified initial capacity, and the default load factor, hash code provider, and comparer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad0ea-194">Указание исходной емкости избавляет от необходимости выполнять операции изменения размера при добавлении элементов в <xref:System.Collections.Hashtable> объекта.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-194">Specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Hashtable> object.</span></span> <span data-ttu-id="ad0ea-195">Емкость — автоматически увеличивается в соответствии с показателем загрузки.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-195">Capacity is automatically increased as required based on the load factor.</span></span>  
  
 <span data-ttu-id="ad0ea-196">Показатель загрузки определяет максимальное отношение количества элементов к количеству сегментов.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-196">The load factor is the maximum ratio of elements to buckets.</span></span> <span data-ttu-id="ad0ea-197">Фактор нагрузки на небольших означает более быстрый поиск, за счет увеличения объема используемой памяти.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-197">A smaller load factor means faster lookup at the cost of increased memory consumption.</span></span>  
  
 <span data-ttu-id="ad0ea-198">Когда фактический показатель загрузки достигает указанным показателем загрузки, количество сегментов автоматически увеличивается до наименьшего простого числа, большего, чем дважды текущего количества сегментов.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-198">When the actual load factor reaches the specified load factor, the number of buckets is automatically increased to the smallest prime number that is larger than twice the current number of buckets.</span></span>  
  
 <span data-ttu-id="ad0ea-199">Поставщик хэш-кода распределяет хеш-коды для ключей в <xref:System.Collections.Hashtable>.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-199">The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Hashtable>.</span></span> <span data-ttu-id="ad0ea-200">Хеш-кода по умолчанию является реализацией метода <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-200">The default hash code provider is the key's implementation of <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="ad0ea-201">Функция сравнения определяет, равны ли два ключа.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-201">The comparer determines whether two keys are equal.</span></span> <span data-ttu-id="ad0ea-202">Каждый ключ в <xref:System.Collections.Hashtable> должно быть уникальным.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-202">Every key in a <xref:System.Collections.Hashtable> must be unique.</span></span> <span data-ttu-id="ad0ea-203">Компаратор по умолчанию является реализацией метода <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-203">The default comparer is the key's implementation of <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="ad0ea-204">Этот конструктор является операцией O (`n`) операции, где `n` является `capacity`.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-204">This constructor is an O(`n`) operation, where `n` is `capacity`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ad0ea-205">В следующем примере кода создает хэш-таблицы с помощью разных <xref:System.Collections.Hashtable> конструкторы и демонстрирует различия в поведении хэш-таблиц, даже если каждый из них содержит те же элементы.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-205">The following code example creates hash tables using different <xref:System.Collections.Hashtable> constructors and demonstrates the differences in the behavior of the hash tables, even if each one contains the same elements.</span></span>  
  
 [!code-cpp[System.Collections.Hashtable_ctorInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorInt/CPP/hashtable_ctorint.cpp#1)]
 [!code-csharp[System.Collections.Hashtable_ctorInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorInt/CS/hashtable_ctorint.cs#1)]
 [!code-vb[System.Collections.Hashtable_ctorInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorInt/VB/hashtable_ctorint.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="ad0ea-206">Значение параметра <paramref name="capacity" /> меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-206"><paramref name="capacity" /> is less than zero.</span></span></exception>
        <altmember cref="M:System.Object.GetHashCode" />
        <altmember cref="M:System.Object.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Hashtable (System.Collections.IDictionary d, System.Collections.IEqualityComparer equalityComparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.IDictionary d, class System.Collections.IEqualityComparer equalityComparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.#ctor(System.Collections.IDictionary,System.Collections.IEqualityComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (d As IDictionary, equalityComparer As IEqualityComparer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Hashtable(System::Collections::IDictionary ^ d, System::Collections::IEqualityComparer ^ equalityComparer);" />
      <MemberSignature Language="F#" Value="new System.Collections.Hashtable : System.Collections.IDictionary * System.Collections.IEqualityComparer -&gt; System.Collections.Hashtable" Usage="new System.Collections.Hashtable (d, equalityComparer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="d" Type="System.Collections.IDictionary" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="equalityComparer" Type="System.Collections.IEqualityComparer" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="ad0ea-207">Объект <see cref="T:System.Collections.IDictionary" />, предназначенный для копирования в новый объект <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-207">The <see cref="T:System.Collections.IDictionary" /> object to copy to a new <see cref="T:System.Collections.Hashtable" /> object.</span></span></param>
        <param name="equalityComparer"><span data-ttu-id="ad0ea-208"><see cref="T:System.Collections.IEqualityComparer" /> — это объект, определяющий поставщик хэш-кода и объект сравнения для использования с объектом <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-208">The <see cref="T:System.Collections.IEqualityComparer" /> object that defines the hash code provider and the comparer to use with the <see cref="T:System.Collections.Hashtable" />.</span></span>  
  
<span data-ttu-id="ad0ea-209">-или-</span><span class="sxs-lookup"><span data-stu-id="ad0ea-209">-or-</span></span> 
 <span data-ttu-id="ad0ea-210">Значение <see langword="null" /> предусмотрено для использования поставщика хэш-кодов по умолчанию и объекта сравнения по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-210"><see langword="null" /> to use the default hash code provider and the default comparer.</span></span> <span data-ttu-id="ad0ea-211">Поставщик хэш-кода по умолчанию является реализацией метода <see cref="M:System.Object.GetHashCode" />, а средство сравнения по умолчанию является реализацией метода <see cref="M:System.Object.Equals(System.Object)" />.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-211">The default hash code provider is each key's implementation of <see cref="M:System.Object.GetHashCode" /> and the default comparer is each key's implementation of <see cref="M:System.Object.Equals(System.Object)" />.</span></span></param>
        <summary><span data-ttu-id="ad0ea-212">Инициализирует новый пустой экземпляр класса <see cref="T:System.Collections.Hashtable" /> посредством копирования элементов из указанного словаря в новый объект <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-212">Initializes a new instance of the <see cref="T:System.Collections.Hashtable" /> class by copying the elements from the specified dictionary to a new <see cref="T:System.Collections.Hashtable" /> object.</span></span> <span data-ttu-id="ad0ea-213">У нового объекта <see cref="T:System.Collections.Hashtable" /> исходная емкость равна числу копируемых элементов, и он обладает заданным по умолчанию показателем загрузки и указанным объектом сравнения <see cref="T:System.Collections.IEqualityComparer" />.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-213">The new <see cref="T:System.Collections.Hashtable" /> object has an initial capacity equal to the number of elements copied, and uses the default load factor and the specified <see cref="T:System.Collections.IEqualityComparer" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad0ea-214">Исходная емкость присваивается количество элементов в исходном словаре.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-214">The initial capacity is set to the number of elements in the source dictionary.</span></span> <span data-ttu-id="ad0ea-215">Емкость — автоматически увеличивается в соответствии с показателем загрузки.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-215">Capacity is automatically increased as required based on the load factor.</span></span>  
  
 <span data-ttu-id="ad0ea-216">Показатель загрузки определяет максимальное отношение количества элементов к количеству сегментов.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-216">The load factor is the maximum ratio of elements to buckets.</span></span> <span data-ttu-id="ad0ea-217">Фактор нагрузки на небольших означает более быстрый поиск, за счет увеличения объема используемой памяти.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-217">A smaller load factor means faster lookup at the cost of increased memory consumption.</span></span>  
  
 <span data-ttu-id="ad0ea-218">Когда фактический показатель загрузки достигает указанным показателем загрузки, количество сегментов автоматически увеличивается до наименьшего простого числа, большего, чем дважды текущего количества сегментов.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-218">When the actual load factor reaches the specified load factor, the number of buckets is automatically increased to the smallest prime number that is larger than twice the current number of buckets.</span></span>  
  
 <span data-ttu-id="ad0ea-219"><xref:System.Collections.IEqualityComparer> Объект включает в себя, поставщиком хэш-кода и объект сравнения.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-219">The <xref:System.Collections.IEqualityComparer> object includes both the hash code provider and the comparer.</span></span> <span data-ttu-id="ad0ea-220">Если <xref:System.Collections.IEqualityComparer> используется в <xref:System.Collections.Hashtable> конструктор, объекты, используемые в качестве ключей в <xref:System.Collections.Hashtable> объекта не требуется переопределять <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> и <xref:System.Object.Equals%2A?displayProperty=nameWithType> методы.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-220">If an <xref:System.Collections.IEqualityComparer> is used in the <xref:System.Collections.Hashtable> constructor, the objects used as keys in the <xref:System.Collections.Hashtable> object are not required to override the <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> and <xref:System.Object.Equals%2A?displayProperty=nameWithType> methods.</span></span>  
  
 <span data-ttu-id="ad0ea-221">Поставщик хэш-кода распределяет хеш-коды для ключей в <xref:System.Collections.Hashtable>.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-221">The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Hashtable>.</span></span> <span data-ttu-id="ad0ea-222">Хеш-кода по умолчанию является реализацией метода <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-222">The default hash code provider is the key's implementation of <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="ad0ea-223">Функция сравнения определяет, равны ли два ключа.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-223">The comparer determines whether two keys are equal.</span></span> <span data-ttu-id="ad0ea-224">Каждый ключ в <xref:System.Collections.Hashtable> должно быть уникальным.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-224">Every key in a <xref:System.Collections.Hashtable> must be unique.</span></span> <span data-ttu-id="ad0ea-225">Компаратор по умолчанию является реализацией метода <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-225">The default comparer is the key's implementation of <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="ad0ea-226"><xref:System.Collections.IEqualityComparer> Позволяет реализовать сценарии, например, при поиске строк без учета регистра.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-226">The <xref:System.Collections.IEqualityComparer> enables scenarios such as doing lookups with case-insensitive strings.</span></span>  
  
 <span data-ttu-id="ad0ea-227">Элементы нового <xref:System.Collections.Hashtable> сортируются в том же порядке, в котором перечислитель перемещается по <xref:System.Collections.IDictionary> объекта.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-227">The elements of the new <xref:System.Collections.Hashtable> are sorted in the same order in which the enumerator iterates through the <xref:System.Collections.IDictionary> object.</span></span>  
  
 <span data-ttu-id="ad0ea-228">Этот конструктор является операцией O (`n`) операции, где `n` — количество элементов в `d` параметра.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-228">This constructor is an O(`n`) operation, where `n` is the number of elements in the `d` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ad0ea-229">В следующем примере кода создает хэш-таблицы с помощью разных <xref:System.Collections.Hashtable> конструкторы и демонстрирует различия в поведении хэш-таблиц, даже если каждый из них содержит те же элементы.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-229">The following code example creates hash tables using different <xref:System.Collections.Hashtable> constructors and demonstrates the differences in the behavior of the hash tables, even if each one contains the same elements.</span></span>  
  
 [!code-cpp[System.Collections.Hashtable_ctorDictionary#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorDictionary/CPP/hashtable_ctordictionary.cpp#1)]
 [!code-csharp[System.Collections.Hashtable_ctorDictionary#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorDictionary/CS/hashtable_ctordictionary.cs#1)]
 [!code-vb[System.Collections.Hashtable_ctorDictionary#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorDictionary/VB/hashtable_ctordictionary.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ad0ea-230"><paramref name="d" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-230"><paramref name="d" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Collections.IDictionary" />
        <altmember cref="T:System.Collections.IEqualityComparer" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Hashtable (System.Collections.IDictionary d, float loadFactor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.IDictionary d, float32 loadFactor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.#ctor(System.Collections.IDictionary,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (d As IDictionary, loadFactor As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Hashtable(System::Collections::IDictionary ^ d, float loadFactor);" />
      <MemberSignature Language="F#" Value="new System.Collections.Hashtable : System.Collections.IDictionary * single -&gt; System.Collections.Hashtable" Usage="new System.Collections.Hashtable (d, loadFactor)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="d" Type="System.Collections.IDictionary" />
        <Parameter Name="loadFactor" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="ad0ea-231">Объект <see cref="T:System.Collections.IDictionary" />, предназначенный для копирования в новый объект <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-231">The <see cref="T:System.Collections.IDictionary" /> object to copy to a new <see cref="T:System.Collections.Hashtable" /> object.</span></span></param>
        <param name="loadFactor"><span data-ttu-id="ad0ea-232">Число в диапазоне от 0,1 до 1,0, умноженное на значение по умолчанию, обеспечивающее наилучшую производительность.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-232">A number in the range from 0.1 through 1.0 that is multiplied by the default value which provides the best performance.</span></span> <span data-ttu-id="ad0ea-233">Результат определяет максимальное отношение количества элементов к количеству сегментов.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-233">The result is the maximum ratio of elements to buckets.</span></span></param>
        <summary><span data-ttu-id="ad0ea-234">Инициализирует новый пустой экземпляр класса <see cref="T:System.Collections.Hashtable" /> посредством копирования элементов из указанного словаря в новый объект <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-234">Initializes a new instance of the <see cref="T:System.Collections.Hashtable" /> class by copying the elements from the specified dictionary to the new <see cref="T:System.Collections.Hashtable" /> object.</span></span> <span data-ttu-id="ad0ea-235">У нового объекта <see cref="T:System.Collections.Hashtable" /> исходная емкость равна числу копируемых элементов, и он обладает указанным показателем загрузки и заданными по умолчанию поставщиком хэш-кода и объектом сравнения.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-235">The new <see cref="T:System.Collections.Hashtable" /> object has an initial capacity equal to the number of elements copied, and uses the specified load factor, and the default hash code provider and comparer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad0ea-236">Исходная емкость присваивается количество элементов в исходном словаре.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-236">The initial capacity is set to the number of elements in the source dictionary.</span></span> <span data-ttu-id="ad0ea-237">Емкость — автоматически увеличивается в соответствии с показателем загрузки.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-237">Capacity is automatically increased as required based on the load factor.</span></span>  
  
 <span data-ttu-id="ad0ea-238">Показатель загрузки определяет максимальное отношение количества элементов к количеству сегментов.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-238">The load factor is the maximum ratio of elements to buckets.</span></span> <span data-ttu-id="ad0ea-239">Фактор нагрузки на небольших означает более быстрый поиск, за счет увеличения объема используемой памяти.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-239">A smaller load factor means faster lookup at the cost of increased memory consumption.</span></span> <span data-ttu-id="ad0ea-240">Фактор нагрузки на 1.0 — это оптимальный баланс между скоростью и размер.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-240">A load factor of 1.0 is the best balance between speed and size.</span></span>  
  
 <span data-ttu-id="ad0ea-241">Когда фактический показатель загрузки достигает указанным показателем загрузки, количество сегментов автоматически увеличивается до наименьшего простого числа, большего, чем дважды текущего количества сегментов.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-241">When the actual load factor reaches the specified load factor, the number of buckets is automatically increased to the smallest prime number that is larger than twice the current number of buckets.</span></span>  
  
 <span data-ttu-id="ad0ea-242">Поставщик хэш-кода распределяет хеш-коды для ключей в <xref:System.Collections.Hashtable> объекта.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-242">The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Hashtable> object.</span></span> <span data-ttu-id="ad0ea-243">Хеш-кода по умолчанию является реализацией метода <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-243">The default hash code provider is the key's implementation of <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="ad0ea-244">Функция сравнения определяет, равны ли два ключа.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-244">The comparer determines whether two keys are equal.</span></span> <span data-ttu-id="ad0ea-245">Каждый ключ в <xref:System.Collections.Hashtable> должно быть уникальным.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-245">Every key in a <xref:System.Collections.Hashtable> must be unique.</span></span> <span data-ttu-id="ad0ea-246">Компаратор по умолчанию является реализацией метода <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-246">The default comparer is the key's implementation of <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="ad0ea-247">Элементы нового <xref:System.Collections.Hashtable> сортируются в том же порядке, в котором перечислитель перемещается по <xref:System.Collections.IDictionary> объекта.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-247">The elements of the new <xref:System.Collections.Hashtable> are sorted in the same order in which the enumerator iterates through the <xref:System.Collections.IDictionary> object.</span></span>  
  
 <span data-ttu-id="ad0ea-248">Этот конструктор является операцией O (`n`) операции, где `n` — количество элементов в `d` параметра.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-248">This constructor is an O(`n`) operation, where `n` is the number of elements in the `d` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ad0ea-249">В следующем примере кода создает хэш-таблицы с помощью разных <xref:System.Collections.Hashtable> конструкторы и демонстрирует различия в поведении хэш-таблиц, даже если каждый из них содержит те же элементы.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-249">The following code example creates hash tables using different <xref:System.Collections.Hashtable> constructors and demonstrates the differences in the behavior of the hash tables, even if each one contains the same elements.</span></span>  
  
 [!code-cpp[System.Collections.Hashtable_ctorDictionaryFloat#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorDictionaryFloat/CPP/hashtable_ctordictionaryfloat.cpp#1)]
 [!code-csharp[System.Collections.Hashtable_ctorDictionaryFloat#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorDictionaryFloat/CS/hashtable_ctordictionaryfloat.cs#1)]
 [!code-vb[System.Collections.Hashtable_ctorDictionaryFloat#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorDictionaryFloat/VB/hashtable_ctordictionaryfloat.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ad0ea-250"><paramref name="d" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-250"><paramref name="d" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="ad0ea-251">Значение <paramref name="loadFactor" /> меньше 0,1.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-251"><paramref name="loadFactor" /> is less than 0.1.</span></span>  
  
<span data-ttu-id="ad0ea-252">-или-</span><span class="sxs-lookup"><span data-stu-id="ad0ea-252">-or-</span></span> 
 <span data-ttu-id="ad0ea-253">Значение <paramref name="loadFactor" /> больше 1,0.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-253"><paramref name="loadFactor" /> is greater than 1.0.</span></span></exception>
        <altmember cref="T:System.Collections.IDictionary" />
        <altmember cref="M:System.Object.GetHashCode" />
        <altmember cref="M:System.Object.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Hashtable (System.Collections.IHashCodeProvider hcp, System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.IHashCodeProvider hcp, class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.#ctor(System.Collections.IHashCodeProvider,System.Collections.IComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (hcp As IHashCodeProvider, comparer As IComparer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Hashtable(System::Collections::IHashCodeProvider ^ hcp, System::Collections::IComparer ^ comparer);" />
      <MemberSignature Language="F#" Value="new System.Collections.Hashtable : System.Collections.IHashCodeProvider * System.Collections.IComparer -&gt; System.Collections.Hashtable" Usage="new System.Collections.Hashtable (hcp, comparer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.Obsolete("Please use Hashtable(IEqualityComparer) instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="hcp" Type="System.Collections.IHashCodeProvider" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="comparer" Type="System.Collections.IComparer" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="hcp"><span data-ttu-id="ad0ea-254">Интерфейс <see cref="T:System.Collections.IHashCodeProvider" /> — это объект, поставляющий хэш-коды для всех ключей в объекте <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-254">The <see cref="T:System.Collections.IHashCodeProvider" /> object that supplies the hash codes for all keys in the <see cref="T:System.Collections.Hashtable" /> object.</span></span>  
  
<span data-ttu-id="ad0ea-255">-или-</span><span class="sxs-lookup"><span data-stu-id="ad0ea-255">-or-</span></span> 
 <span data-ttu-id="ad0ea-256">Значение <see langword="null" /> предусмотрено для использования поставщика хэш-кода по умолчанию, являющегося реализацией метода <see cref="M:System.Object.GetHashCode" /> для каждого ключа.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-256"><see langword="null" /> to use the default hash code provider, which is each key's implementation of <see cref="M:System.Object.GetHashCode" />.</span></span></param>
        <param name="comparer"><span data-ttu-id="ad0ea-257">Интерфейс <see cref="T:System.Collections.IComparer" />, который используется для определения равенства двух ключей.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-257">The <see cref="T:System.Collections.IComparer" /> object to use to determine whether two keys are equal.</span></span>  
  
<span data-ttu-id="ad0ea-258">-или-</span><span class="sxs-lookup"><span data-stu-id="ad0ea-258">-or-</span></span> 
 <span data-ttu-id="ad0ea-259">Значение <see langword="null" /> для использования блока сравнения по умолчанию, который является реализацией метода <see cref="M:System.Object.Equals(System.Object)" /> для каждого ключа.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-259"><see langword="null" /> to use the default comparer, which is each key's implementation of <see cref="M:System.Object.Equals(System.Object)" />.</span></span></param>
        <summary><span data-ttu-id="ad0ea-260">Инициализирует новый пустой экземпляр класса <see cref="T:System.Collections.Hashtable" /> с заданными по умолчанию исходной емкостью и показателем загрузки и указанными поставщиком хэш-кода и объектом сравнения.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-260">Initializes a new, empty instance of the <see cref="T:System.Collections.Hashtable" /> class using the default initial capacity and load factor, and the specified hash code provider and comparer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad0ea-261">Емкость хэш-таблица используется для вычисления оптимального количества сегментов хэш-таблицы, исходя из показателем загрузки.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-261">A hash table's capacity is used to calculate the optimal number of hash table buckets based on the load factor.</span></span> <span data-ttu-id="ad0ea-262">Емкость автоматически увеличивается при необходимости.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-262">Capacity is automatically increased as required.</span></span>  
  
 <span data-ttu-id="ad0ea-263">Показатель загрузки определяет максимальное отношение количества элементов к количеству сегментов.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-263">The load factor is the maximum ratio of elements to buckets.</span></span> <span data-ttu-id="ad0ea-264">Фактор нагрузки на небольших означает более быстрый поиск, за счет увеличения объема используемой памяти.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-264">A smaller load factor means faster lookup at the cost of increased memory consumption.</span></span>  
  
 <span data-ttu-id="ad0ea-265">Когда фактический показатель загрузки достигает указанным показателем загрузки, количество сегментов автоматически увеличивается до наименьшего простого числа, большего, чем дважды текущего количества сегментов.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-265">When the actual load factor reaches the specified load factor, the number of buckets is automatically increased to the smallest prime number that is larger than twice the current number of buckets.</span></span>  
  
 <span data-ttu-id="ad0ea-266">Поставщик хэш-кода распределяет хеш-коды для ключей в <xref:System.Collections.Hashtable> объекта.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-266">The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Hashtable> object.</span></span> <span data-ttu-id="ad0ea-267">Хеш-кода по умолчанию является реализацией метода <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-267">The default hash code provider is the key's implementation of <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="ad0ea-268">Функция сравнения определяет, равны ли два ключа.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-268">The comparer determines whether two keys are equal.</span></span> <span data-ttu-id="ad0ea-269">Каждый ключ в <xref:System.Collections.Hashtable> должно быть уникальным.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-269">Every key in a <xref:System.Collections.Hashtable> must be unique.</span></span> <span data-ttu-id="ad0ea-270">Компаратор по умолчанию является реализацией метода <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-270">The default comparer is the key's implementation of <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="ad0ea-271">Хеш-кода и пользовательского модуля сравнения поддерживают сценарии, например при поиске строк без учета регистра.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-271">The custom hash code provider and the custom comparer enable scenarios such as doing lookups with case-insensitive strings.</span></span>  
  
 <span data-ttu-id="ad0ea-272">Этот конструктор является операцией o(1).</span><span class="sxs-lookup"><span data-stu-id="ad0ea-272">This constructor is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ad0ea-273">В следующем примере кода создает хэш-таблицы с помощью разных <xref:System.Collections.Hashtable> конструкторы и демонстрирует различия в поведении хэш-таблиц, даже если каждый из них содержит те же элементы.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-273">The following code example creates hash tables using different <xref:System.Collections.Hashtable> constructors and demonstrates the differences in the behavior of the hash tables, even if each one contains the same elements.</span></span>  
  
 [!code-cpp[System.Collections.Hashtable_ctor#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctor/CPP/hashtable_ctor.cpp#1)]
 [!code-csharp[System.Collections.Hashtable_ctor#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctor/CS/hashtable_ctor.cs#1)]
 [!code-vb[System.Collections.Hashtable_ctor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Hashtable_ctor/VB/hashtable_ctor.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IHashCodeProvider" />
        <altmember cref="T:System.Collections.IComparer" />
        <altmember cref="M:System.Object.GetHashCode" />
        <altmember cref="M:System.Object.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Hashtable (int capacity, System.Collections.IEqualityComparer equalityComparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 capacity, class System.Collections.IEqualityComparer equalityComparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.#ctor(System.Int32,System.Collections.IEqualityComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (capacity As Integer, equalityComparer As IEqualityComparer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Hashtable(int capacity, System::Collections::IEqualityComparer ^ equalityComparer);" />
      <MemberSignature Language="F#" Value="new System.Collections.Hashtable : int * System.Collections.IEqualityComparer -&gt; System.Collections.Hashtable" Usage="new System.Collections.Hashtable (capacity, equalityComparer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="capacity" Type="System.Int32" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="equalityComparer" Type="System.Collections.IEqualityComparer" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="capacity"><span data-ttu-id="ad0ea-274">Приблизительное количество элементов, которое может первоначально содержать объект <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-274">The approximate number of elements that the <see cref="T:System.Collections.Hashtable" /> object can initially contain.</span></span></param>
        <param name="equalityComparer"><span data-ttu-id="ad0ea-275"><see cref="T:System.Collections.IEqualityComparer" /> — это объект, определяющий поставщик хэш-кода и объект сравнения для использования с объектом <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-275">The <see cref="T:System.Collections.IEqualityComparer" /> object that defines the hash code provider and the comparer to use with the <see cref="T:System.Collections.Hashtable" />.</span></span>  
  
<span data-ttu-id="ad0ea-276">-или-</span><span class="sxs-lookup"><span data-stu-id="ad0ea-276">-or-</span></span> 
 <span data-ttu-id="ad0ea-277">Значение <see langword="null" /> предусмотрено для использования поставщика хэш-кодов по умолчанию и объекта сравнения по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-277"><see langword="null" /> to use the default hash code provider and the default comparer.</span></span> <span data-ttu-id="ad0ea-278">Поставщик хэш-кода по умолчанию является реализацией метода <see cref="M:System.Object.GetHashCode" />, а средство сравнения по умолчанию является реализацией метода <see cref="M:System.Object.Equals(System.Object)" />.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-278">The default hash code provider is each key's implementation of <see cref="M:System.Object.GetHashCode" /> and the default comparer is each key's implementation of <see cref="M:System.Object.Equals(System.Object)" />.</span></span></param>
        <summary><span data-ttu-id="ad0ea-279">Инициализирует новый пустой экземпляр класса <see cref="T:System.Collections.Hashtable" /> с указанными исходной емкостью и объектом сравнения <see cref="T:System.Collections.IEqualityComparer" /> и заданным по умолчанию показателем загрузки.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-279">Initializes a new, empty instance of the <see cref="T:System.Collections.Hashtable" /> class using the specified initial capacity and <see cref="T:System.Collections.IEqualityComparer" />, and the default load factor.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad0ea-280">Указание исходной емкости избавляет от необходимости выполнять операции изменения размера при добавлении элементов в <xref:System.Collections.Hashtable> объекта.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-280">Specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Hashtable> object.</span></span> <span data-ttu-id="ad0ea-281">Емкость — автоматически увеличивается в соответствии с показателем загрузки.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-281">Capacity is automatically increased as required based on the load factor.</span></span>  
  
 <span data-ttu-id="ad0ea-282">Показатель загрузки определяет максимальное отношение количества элементов к количеству сегментов.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-282">The load factor is the maximum ratio of elements to buckets.</span></span> <span data-ttu-id="ad0ea-283">Фактор нагрузки на небольших означает более быстрый поиск, за счет увеличения объема используемой памяти.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-283">A smaller load factor means faster lookup at the cost of increased memory consumption.</span></span>  
  
 <span data-ttu-id="ad0ea-284">Когда фактический показатель загрузки достигает указанным показателем загрузки, количество сегментов автоматически увеличивается до наименьшего простого числа, большего, чем дважды текущего количества сегментов.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-284">When the actual load factor reaches the specified load factor, the number of buckets is automatically increased to the smallest prime number that is larger than twice the current number of buckets.</span></span>  
  
 <span data-ttu-id="ad0ea-285"><xref:System.Collections.IEqualityComparer> Объект включает в себя, поставщиком хэш-кода и объект сравнения.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-285">The <xref:System.Collections.IEqualityComparer> object includes both the hash code provider and the comparer.</span></span> <span data-ttu-id="ad0ea-286">Если <xref:System.Collections.IEqualityComparer> используется в <xref:System.Collections.Hashtable> конструктор, объекты, используемые в качестве ключей в <xref:System.Collections.Hashtable> не требуется переопределять <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> и <xref:System.Object.Equals%2A?displayProperty=nameWithType> методы.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-286">If an <xref:System.Collections.IEqualityComparer> is used in the <xref:System.Collections.Hashtable> constructor, the objects used as keys in the <xref:System.Collections.Hashtable> are not required to override the <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> and <xref:System.Object.Equals%2A?displayProperty=nameWithType> methods.</span></span>  
  
 <span data-ttu-id="ad0ea-287">Поставщик хэш-кода распределяет хеш-коды для ключей в <xref:System.Collections.Hashtable>.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-287">The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Hashtable>.</span></span> <span data-ttu-id="ad0ea-288">Хеш-кода по умолчанию является реализацией метода <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-288">The default hash code provider is the key's implementation of <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="ad0ea-289">Функция сравнения определяет, равны ли два ключа.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-289">The comparer determines whether two keys are equal.</span></span> <span data-ttu-id="ad0ea-290">Каждый ключ в <xref:System.Collections.Hashtable> должно быть уникальным.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-290">Every key in a <xref:System.Collections.Hashtable> must be unique.</span></span> <span data-ttu-id="ad0ea-291">Компаратор по умолчанию является реализацией метода <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-291">The default comparer is the key's implementation of <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="ad0ea-292"><xref:System.Collections.IEqualityComparer> Позволяет реализовать сценарии, например, при поиске строк без учета регистра.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-292">The <xref:System.Collections.IEqualityComparer> enables scenarios such as doing lookups with case-insensitive strings.</span></span>  
  
 <span data-ttu-id="ad0ea-293">Этот конструктор является операцией O (`n`) операции, где `n` является `capacity` параметра.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-293">This constructor is an O(`n`) operation, where `n` is the `capacity` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ad0ea-294">В следующем примере кода создает хэш-таблицы с помощью разных <xref:System.Collections.Hashtable> конструкторы и демонстрирует различия в поведении хэш-таблиц, даже если каждый из них содержит те же элементы.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-294">The following code example creates hash tables using different <xref:System.Collections.Hashtable> constructors and demonstrates the differences in the behavior of the hash tables, even if each one contains the same elements.</span></span>  
  
 [!code-cpp[System.Collections.Hashtable_ctorInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorInt/CPP/hashtable_ctorint.cpp#1)]
 [!code-csharp[System.Collections.Hashtable_ctorInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorInt/CS/hashtable_ctorint.cs#1)]
 [!code-vb[System.Collections.Hashtable_ctorInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorInt/VB/hashtable_ctorint.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="ad0ea-295">Значение параметра <paramref name="capacity" /> меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-295"><paramref name="capacity" /> is less than zero.</span></span></exception>
        <altmember cref="T:System.Collections.IEqualityComparer" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Hashtable (int capacity, float loadFactor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 capacity, float32 loadFactor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.#ctor(System.Int32,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (capacity As Integer, loadFactor As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Hashtable(int capacity, float loadFactor);" />
      <MemberSignature Language="F#" Value="new System.Collections.Hashtable : int * single -&gt; System.Collections.Hashtable" Usage="new System.Collections.Hashtable (capacity, loadFactor)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="capacity" Type="System.Int32" />
        <Parameter Name="loadFactor" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="capacity"><span data-ttu-id="ad0ea-296">Приблизительное количество элементов, которое может первоначально содержать объект <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-296">The approximate number of elements that the <see cref="T:System.Collections.Hashtable" /> object can initially contain.</span></span></param>
        <param name="loadFactor"><span data-ttu-id="ad0ea-297">Число в диапазоне от 0,1 до 1,0, умноженное на значение по умолчанию, обеспечивающее наилучшую производительность.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-297">A number in the range from 0.1 through 1.0 that is multiplied by the default value which provides the best performance.</span></span> <span data-ttu-id="ad0ea-298">Результат определяет максимальное отношение количества элементов к количеству сегментов.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-298">The result is the maximum ratio of elements to buckets.</span></span></param>
        <summary><span data-ttu-id="ad0ea-299">Инициализирует новый пустой экземпляр класса <see cref="T:System.Collections.Hashtable" /> с указанными исходной емкостью и показателем загрузки и заданными по умолчанию поставщиком хэш-кода и объектом сравнения.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-299">Initializes a new, empty instance of the <see cref="T:System.Collections.Hashtable" /> class using the specified initial capacity and load factor, and the default hash code provider and comparer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad0ea-300">Указание исходной емкости избавляет от необходимости выполнять операции изменения размера при добавлении элементов в <xref:System.Collections.Hashtable> объекта.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-300">Specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Hashtable> object.</span></span> <span data-ttu-id="ad0ea-301">Емкость — автоматически увеличивается в соответствии с показателем загрузки.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-301">Capacity is automatically increased as required based on the load factor.</span></span>  
  
 <span data-ttu-id="ad0ea-302">Показатель загрузки определяет максимальное отношение количества элементов к количеству сегментов.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-302">The load factor is the maximum ratio of elements to buckets.</span></span> <span data-ttu-id="ad0ea-303">Фактор нагрузки на небольших означает более быстрый поиск, за счет увеличения объема используемой памяти.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-303">A smaller load factor means faster lookup at the cost of increased memory consumption.</span></span> <span data-ttu-id="ad0ea-304">Фактор нагрузки на 1.0 — это оптимальный баланс между скоростью и размер.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-304">A load factor of 1.0 is the best balance between speed and size.</span></span>  
  
 <span data-ttu-id="ad0ea-305">Когда фактический показатель загрузки достигает указанным показателем загрузки, количество сегментов автоматически увеличивается до наименьшего простого числа, большего, чем дважды текущего количества сегментов.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-305">When the actual load factor reaches the specified load factor, the number of buckets is automatically increased to the smallest prime number that is larger than twice the current number of buckets.</span></span>  
  
 <span data-ttu-id="ad0ea-306">Поставщик хэш-кода распределяет хеш-коды для ключей в <xref:System.Collections.Hashtable>.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-306">The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Hashtable>.</span></span> <span data-ttu-id="ad0ea-307">Хеш-кода по умолчанию является реализацией метода <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-307">The default hash code provider is the key's implementation of <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="ad0ea-308">Функция сравнения определяет, равны ли два ключа.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-308">The comparer determines whether two keys are equal.</span></span> <span data-ttu-id="ad0ea-309">Каждый ключ в <xref:System.Collections.Hashtable> должно быть уникальным.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-309">Every key in a <xref:System.Collections.Hashtable> must be unique.</span></span> <span data-ttu-id="ad0ea-310">Компаратор по умолчанию является реализацией метода <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-310">The default comparer is the key's implementation of <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="ad0ea-311">Этот конструктор является операцией O (`n`) операции, где `n` является `capacity` параметра.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-311">This constructor is an O(`n`) operation, where `n` is the `capacity` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ad0ea-312">В следующем примере кода создает хэш-таблицы с помощью разных <xref:System.Collections.Hashtable> конструкторы и демонстрирует различия в поведении хэш-таблиц, даже если каждый из них содержит те же элементы.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-312">The following code example creates hash tables using different <xref:System.Collections.Hashtable> constructors and demonstrates the differences in the behavior of the hash tables, even if each one contains the same elements.</span></span>  
  
 [!code-cpp[System.Collections.Hashtable_ctorIntFloat#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorIntFloat/CPP/hashtable_ctorintfloat.cpp#1)]
 [!code-csharp[System.Collections.Hashtable_ctorIntFloat#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorIntFloat/CS/hashtable_ctorintfloat.cs#1)]
 [!code-vb[System.Collections.Hashtable_ctorIntFloat#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorIntFloat/VB/hashtable_ctorintfloat.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="ad0ea-313">Значение параметра <paramref name="capacity" /> меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-313"><paramref name="capacity" /> is less than zero.</span></span>  
  
<span data-ttu-id="ad0ea-314">-или-</span><span class="sxs-lookup"><span data-stu-id="ad0ea-314">-or-</span></span> 
 <span data-ttu-id="ad0ea-315">Значение <paramref name="loadFactor" /> меньше 0,1.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-315"><paramref name="loadFactor" /> is less than 0.1.</span></span>  
  
<span data-ttu-id="ad0ea-316">-или-</span><span class="sxs-lookup"><span data-stu-id="ad0ea-316">-or-</span></span> 
 <span data-ttu-id="ad0ea-317">Значение <paramref name="loadFactor" /> больше 1,0.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-317"><paramref name="loadFactor" /> is greater than 1.0.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ad0ea-318"><paramref name="capacity" /> приводит к переполнению.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-318"><paramref name="capacity" /> is causing an overflow.</span></span></exception>
        <altmember cref="M:System.Object.GetHashCode" />
        <altmember cref="M:System.Object.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Hashtable (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Hashtable(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new System.Collections.Hashtable : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; System.Collections.Hashtable" Usage="new System.Collections.Hashtable (info, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="ad0ea-319">Объект <see cref="T:System.Runtime.Serialization.SerializationInfo" />, содержащий сведения, которые требуются для сериализации объекта <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-319">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object containing the information required to serialize the <see cref="T:System.Collections.Hashtable" /> object.</span></span></param>
        <param name="context"><span data-ttu-id="ad0ea-320">Объект <see cref="T:System.Runtime.Serialization.StreamingContext" />, содержащий исходный объект и объект назначения для сериализованного потока, связанного с коллекцией <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-320">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> object containing the source and destination of the serialized stream associated with the <see cref="T:System.Collections.Hashtable" />.</span></span></param>
        <summary><span data-ttu-id="ad0ea-321">Инициализирует новый пустой экземпляр класса <see cref="T:System.Collections.Hashtable" />, который может быть сериализован с помощью объектов <see cref="T:System.Runtime.Serialization.SerializationInfo" /> и <see cref="T:System.Runtime.Serialization.StreamingContext" />.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-321">Initializes a new, empty instance of the <see cref="T:System.Collections.Hashtable" /> class that is serializable using the specified <see cref="T:System.Runtime.Serialization.SerializationInfo" /> and <see cref="T:System.Runtime.Serialization.StreamingContext" /> objects.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad0ea-322">Емкость хэш-таблица используется для вычисления оптимального количества сегментов хэш-таблицы, исходя из показателем загрузки.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-322">A hash table's capacity is used to calculate the optimal number of hash table buckets based on the load factor.</span></span> <span data-ttu-id="ad0ea-323">Емкость автоматически увеличивается при необходимости.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-323">Capacity is automatically increased as required.</span></span>  
  
 <span data-ttu-id="ad0ea-324">Показатель загрузки определяет максимальное отношение количества элементов к количеству сегментов.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-324">The load factor is the maximum ratio of elements to buckets.</span></span> <span data-ttu-id="ad0ea-325">Фактор нагрузки на небольших означает более быстрый поиск, за счет увеличения объема используемой памяти.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-325">A smaller load factor means faster lookup at the cost of increased memory consumption.</span></span>  
  
 <span data-ttu-id="ad0ea-326">Когда фактический показатель загрузки достигает указанным показателем загрузки, количество сегментов автоматически увеличивается до наименьшего простого числа, большего, чем дважды текущего количества сегментов.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-326">When the actual load factor reaches the specified load factor, the number of buckets is automatically increased to the smallest prime number that is larger than twice the current number of buckets.</span></span>  
  
 <span data-ttu-id="ad0ea-327">Поставщик хэш-кода распределяет хеш-коды для ключей в <xref:System.Collections.Hashtable> объекта.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-327">The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Hashtable> object.</span></span> <span data-ttu-id="ad0ea-328">Хеш-кода по умолчанию является реализацией метода <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-328">The default hash code provider is the key's implementation of <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="ad0ea-329">Функция сравнения определяет, равны ли два ключа.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-329">The comparer determines whether two keys are equal.</span></span> <span data-ttu-id="ad0ea-330">Каждый ключ в <xref:System.Collections.Hashtable> должно быть уникальным.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-330">Every key in a <xref:System.Collections.Hashtable> must be unique.</span></span> <span data-ttu-id="ad0ea-331">Компаратор по умолчанию является реализацией метода <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-331">The default comparer is the key's implementation of <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="ad0ea-332">Этот конструктор является операцией O (`n`) операции, где `n` является <xref:System.Collections.Hashtable.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-332">This constructor is an O(`n`) operation, where `n` is <xref:System.Collections.Hashtable.Count%2A>.</span></span>  
  
 <span data-ttu-id="ad0ea-333">Поскольку сериализация и десериализация перечислитель для <xref:System.Collections.Hashtable> может привести к элементы, которые становятся переупорядочить, это не обязательно для продолжения перечисления без вызова <xref:System.Collections.IEnumerator.Reset%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-333">Because serializing and deserializing an enumerator for a <xref:System.Collections.Hashtable> can cause the elements to become reordered, it is not possible to continue enumeration without calling the <xref:System.Collections.IEnumerator.Reset%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ad0ea-334"><paramref name="info" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-334"><paramref name="info" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Runtime.Serialization.ISerializable" />
        <altmember cref="T:System.Runtime.Serialization.SerializationInfo" />
        <altmember cref="T:System.Runtime.Serialization.StreamingContext" />
        <altmember cref="M:System.Collections.Hashtable.OnDeserialization(System.Object)" />
        <altmember cref="M:System.Object.GetHashCode" />
        <altmember cref="M:System.Object.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Hashtable (System.Collections.IDictionary d, System.Collections.IHashCodeProvider hcp, System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.IDictionary d, class System.Collections.IHashCodeProvider hcp, class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.#ctor(System.Collections.IDictionary,System.Collections.IHashCodeProvider,System.Collections.IComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (d As IDictionary, hcp As IHashCodeProvider, comparer As IComparer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Hashtable(System::Collections::IDictionary ^ d, System::Collections::IHashCodeProvider ^ hcp, System::Collections::IComparer ^ comparer);" />
      <MemberSignature Language="F#" Value="new System.Collections.Hashtable : System.Collections.IDictionary * System.Collections.IHashCodeProvider * System.Collections.IComparer -&gt; System.Collections.Hashtable" Usage="new System.Collections.Hashtable (d, hcp, comparer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.Obsolete("Please use Hashtable(IDictionary, IEqualityComparer) instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="d" Type="System.Collections.IDictionary" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="hcp" Type="System.Collections.IHashCodeProvider" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="comparer" Type="System.Collections.IComparer" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="ad0ea-335">Объект <see cref="T:System.Collections.IDictionary" />, предназначенный для копирования в новый объект <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-335">The <see cref="T:System.Collections.IDictionary" /> object to copy to a new <see cref="T:System.Collections.Hashtable" /> object.</span></span></param>
        <param name="hcp"><span data-ttu-id="ad0ea-336">Интерфейс <see cref="T:System.Collections.IHashCodeProvider" /> — это объект, поставляющий хэш-коды для всех ключей в объекте <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-336">The <see cref="T:System.Collections.IHashCodeProvider" /> object that supplies the hash codes for all keys in the <see cref="T:System.Collections.Hashtable" />.</span></span>  
  
<span data-ttu-id="ad0ea-337">-или-</span><span class="sxs-lookup"><span data-stu-id="ad0ea-337">-or-</span></span> 
 <span data-ttu-id="ad0ea-338">Значение <see langword="null" /> предусмотрено для использования поставщика хэш-кода по умолчанию, являющегося реализацией метода <see cref="M:System.Object.GetHashCode" /> для каждого ключа.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-338"><see langword="null" /> to use the default hash code provider, which is each key's implementation of <see cref="M:System.Object.GetHashCode" />.</span></span></param>
        <param name="comparer"><span data-ttu-id="ad0ea-339">Интерфейс <see cref="T:System.Collections.IComparer" />, который используется для определения равенства двух ключей.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-339">The <see cref="T:System.Collections.IComparer" /> object to use to determine whether two keys are equal.</span></span>  
  
<span data-ttu-id="ad0ea-340">-или-</span><span class="sxs-lookup"><span data-stu-id="ad0ea-340">-or-</span></span> 
 <span data-ttu-id="ad0ea-341">Значение <see langword="null" /> для использования блока сравнения по умолчанию, который является реализацией метода <see cref="M:System.Object.Equals(System.Object)" /> для каждого ключа.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-341"><see langword="null" /> to use the default comparer, which is each key's implementation of <see cref="M:System.Object.Equals(System.Object)" />.</span></span></param>
        <summary><span data-ttu-id="ad0ea-342">Инициализирует новый пустой экземпляр класса <see cref="T:System.Collections.Hashtable" /> посредством копирования элементов из указанного словаря в новый объект <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-342">Initializes a new instance of the <see cref="T:System.Collections.Hashtable" /> class by copying the elements from the specified dictionary to the new <see cref="T:System.Collections.Hashtable" /> object.</span></span> <span data-ttu-id="ad0ea-343">У нового объекта <see cref="T:System.Collections.Hashtable" /> исходная емкость равна числу копируемых элементов, и он обладает заданным по умолчанию показателем загрузки и указанными поставщиком хэш-кода и объектом сравнения.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-343">The new <see cref="T:System.Collections.Hashtable" /> object has an initial capacity equal to the number of elements copied, and uses the default load factor, and the specified hash code provider and comparer.</span></span> <span data-ttu-id="ad0ea-344">Этот API устарел.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-344">This API is obsolete.</span></span> <span data-ttu-id="ad0ea-345">См. <see cref="M:System.Collections.Hashtable.#ctor(System.Collections.IDictionary,System.Collections.IEqualityComparer)" /> для альтернативных шагов.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-345">For an alternative, see <see cref="M:System.Collections.Hashtable.#ctor(System.Collections.IDictionary,System.Collections.IEqualityComparer)" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad0ea-346">Исходная емкость присваивается количество элементов в исходном словаре.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-346">The initial capacity is set to the number of elements in the source dictionary.</span></span> <span data-ttu-id="ad0ea-347">Емкость — автоматически увеличивается в соответствии с показателем загрузки.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-347">Capacity is automatically increased as required based on the load factor.</span></span>  
  
 <span data-ttu-id="ad0ea-348">Показатель загрузки определяет максимальное отношение количества элементов к количеству сегментов.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-348">The load factor is the maximum ratio of elements to buckets.</span></span> <span data-ttu-id="ad0ea-349">Фактор нагрузки на небольших означает более быстрый поиск, за счет увеличения объема используемой памяти.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-349">A smaller load factor means faster lookup at the cost of increased memory consumption.</span></span>  
  
 <span data-ttu-id="ad0ea-350">Когда фактический показатель загрузки достигает указанным показателем загрузки, количество сегментов автоматически увеличивается до наименьшего простого числа, большего, чем дважды текущего количества сегментов.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-350">When the actual load factor reaches the specified load factor, the number of buckets is automatically increased to the smallest prime number that is larger than twice the current number of buckets.</span></span>  
  
 <span data-ttu-id="ad0ea-351">Поставщик хэш-кода распределяет хеш-коды для ключей в <xref:System.Collections.Hashtable> объекта.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-351">The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Hashtable> object.</span></span> <span data-ttu-id="ad0ea-352">Хеш-кода по умолчанию является реализацией метода <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-352">The default hash code provider is the key's implementation of <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="ad0ea-353">Функция сравнения определяет, равны ли два ключа.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-353">The comparer determines whether two keys are equal.</span></span> <span data-ttu-id="ad0ea-354">Каждый ключ в <xref:System.Collections.Hashtable> должно быть уникальным.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-354">Every key in a <xref:System.Collections.Hashtable> must be unique.</span></span> <span data-ttu-id="ad0ea-355">Компаратор по умолчанию является реализацией метода <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-355">The default comparer is the key's implementation of <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="ad0ea-356">Хеш-кода и пользовательского модуля сравнения поддерживают сценарии, например при поиске строк без учета регистра.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-356">The custom hash code provider and the custom comparer enable scenarios such as doing lookups with case-insensitive strings.</span></span>  
  
 <span data-ttu-id="ad0ea-357">Элементы нового <xref:System.Collections.Hashtable> сортируются в том же порядке, в котором перечислитель перемещается по <xref:System.Collections.IDictionary> объекта.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-357">The elements of the new <xref:System.Collections.Hashtable> are sorted in the same order in which the enumerator iterates through the <xref:System.Collections.IDictionary> object.</span></span>  
  
 <span data-ttu-id="ad0ea-358">Этот конструктор является операцией O (`n`) операции, где `n` — количество элементов в `d` параметра.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-358">This constructor is an O(`n`) operation, where `n` is the number of elements in the `d` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ad0ea-359">В следующем примере кода создает хэш-таблицы с помощью разных <xref:System.Collections.Hashtable> конструкторы и демонстрирует различия в поведении хэш-таблиц, даже если каждый из них содержит те же элементы.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-359">The following code example creates hash tables using different <xref:System.Collections.Hashtable> constructors and demonstrates the differences in the behavior of the hash tables, even if each one contains the same elements.</span></span>  
  
 [!code-cpp[System.Collections.Hashtable_ctorDictionary#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorDictionary/CPP/hashtable_ctordictionary.cpp#1)]
 [!code-csharp[System.Collections.Hashtable_ctorDictionary#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorDictionary/CS/hashtable_ctordictionary.cs#1)]
 [!code-vb[System.Collections.Hashtable_ctorDictionary#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorDictionary/VB/hashtable_ctordictionary.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ad0ea-360"><paramref name="d" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-360"><paramref name="d" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Collections.IDictionary" />
        <altmember cref="T:System.Collections.IHashCodeProvider" />
        <altmember cref="T:System.Collections.IComparer" />
        <altmember cref="M:System.Object.GetHashCode" />
        <altmember cref="M:System.Object.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Hashtable (System.Collections.IDictionary d, float loadFactor, System.Collections.IEqualityComparer equalityComparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.IDictionary d, float32 loadFactor, class System.Collections.IEqualityComparer equalityComparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.#ctor(System.Collections.IDictionary,System.Single,System.Collections.IEqualityComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (d As IDictionary, loadFactor As Single, equalityComparer As IEqualityComparer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Hashtable(System::Collections::IDictionary ^ d, float loadFactor, System::Collections::IEqualityComparer ^ equalityComparer);" />
      <MemberSignature Language="F#" Value="new System.Collections.Hashtable : System.Collections.IDictionary * single * System.Collections.IEqualityComparer -&gt; System.Collections.Hashtable" Usage="new System.Collections.Hashtable (d, loadFactor, equalityComparer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="d" Type="System.Collections.IDictionary" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="loadFactor" Type="System.Single" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="equalityComparer" Type="System.Collections.IEqualityComparer" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="ad0ea-361">Объект <see cref="T:System.Collections.IDictionary" />, предназначенный для копирования в новый объект <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-361">The <see cref="T:System.Collections.IDictionary" /> object to copy to a new <see cref="T:System.Collections.Hashtable" /> object.</span></span></param>
        <param name="loadFactor"><span data-ttu-id="ad0ea-362">Число в диапазоне от 0,1 до 1,0, умноженное на значение по умолчанию, обеспечивающее наилучшую производительность.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-362">A number in the range from 0.1 through 1.0 that is multiplied by the default value which provides the best performance.</span></span> <span data-ttu-id="ad0ea-363">Результат определяет максимальное отношение количества элементов к количеству сегментов.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-363">The result is the maximum ratio of elements to buckets.</span></span></param>
        <param name="equalityComparer"><span data-ttu-id="ad0ea-364"><see cref="T:System.Collections.IEqualityComparer" /> — это объект, определяющий поставщик хэш-кода и объект сравнения для использования с объектом <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-364">The <see cref="T:System.Collections.IEqualityComparer" /> object that defines the hash code provider and the comparer to use with the <see cref="T:System.Collections.Hashtable" />.</span></span>  
  
<span data-ttu-id="ad0ea-365">-или-</span><span class="sxs-lookup"><span data-stu-id="ad0ea-365">-or-</span></span> 
 <span data-ttu-id="ad0ea-366">Значение <see langword="null" /> предусмотрено для использования поставщика хэш-кодов по умолчанию и объекта сравнения по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-366"><see langword="null" /> to use the default hash code provider and the default comparer.</span></span> <span data-ttu-id="ad0ea-367">Поставщик хэш-кода по умолчанию является реализацией метода <see cref="M:System.Object.GetHashCode" />, а средство сравнения по умолчанию является реализацией метода <see cref="M:System.Object.Equals(System.Object)" />.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-367">The default hash code provider is each key's implementation of <see cref="M:System.Object.GetHashCode" /> and the default comparer is each key's implementation of <see cref="M:System.Object.Equals(System.Object)" />.</span></span></param>
        <summary><span data-ttu-id="ad0ea-368">Инициализирует новый пустой экземпляр класса <see cref="T:System.Collections.Hashtable" /> посредством копирования элементов из указанного словаря в новый объект <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-368">Initializes a new instance of the <see cref="T:System.Collections.Hashtable" /> class by copying the elements from the specified dictionary to the new <see cref="T:System.Collections.Hashtable" /> object.</span></span> <span data-ttu-id="ad0ea-369">У нового объекта <see cref="T:System.Collections.Hashtable" /> исходная емкость равна числу копируемых элементов, и он обладает указанными показателем загрузки и объектом сравнения <see cref="T:System.Collections.IEqualityComparer" />.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-369">The new <see cref="T:System.Collections.Hashtable" /> object has an initial capacity equal to the number of elements copied, and uses the specified load factor and <see cref="T:System.Collections.IEqualityComparer" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad0ea-370">Исходная емкость присваивается количество элементов в исходном словаре.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-370">The initial capacity is set to the number of elements in the source dictionary.</span></span> <span data-ttu-id="ad0ea-371">Емкость — автоматически увеличивается в соответствии с показателем загрузки.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-371">Capacity is automatically increased as required based on the load factor.</span></span>  
  
 <span data-ttu-id="ad0ea-372">Показатель загрузки определяет максимальное отношение количества элементов к количеству сегментов.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-372">The load factor is the maximum ratio of elements to buckets.</span></span> <span data-ttu-id="ad0ea-373">Фактор нагрузки на небольших означает более быстрый поиск, за счет увеличения объема используемой памяти.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-373">A smaller load factor means faster lookup at the cost of increased memory consumption.</span></span> <span data-ttu-id="ad0ea-374">Фактор нагрузки на 1.0 — это оптимальный баланс между скоростью и размер.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-374">A load factor of 1.0 is the best balance between speed and size.</span></span>  
  
 <span data-ttu-id="ad0ea-375">Когда фактический показатель загрузки достигает указанным показателем загрузки, количество сегментов автоматически увеличивается до наименьшего простого числа, большего, чем дважды текущего количества сегментов.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-375">When the actual load factor reaches the specified load factor, the number of buckets is automatically increased to the smallest prime number that is larger than twice the current number of buckets.</span></span>  
  
 <span data-ttu-id="ad0ea-376"><xref:System.Collections.IEqualityComparer> Объект включает в себя, поставщиком хэш-кода и объект сравнения.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-376">The <xref:System.Collections.IEqualityComparer> object includes both the hash code provider and the comparer.</span></span> <span data-ttu-id="ad0ea-377">Если <xref:System.Collections.IEqualityComparer> используется в <xref:System.Collections.Hashtable> конструктор, объекты, используемые в качестве ключей в <xref:System.Collections.Hashtable> объекта не требуется переопределять <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> и <xref:System.Object.Equals%2A?displayProperty=nameWithType> методы.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-377">If an <xref:System.Collections.IEqualityComparer> is used in the <xref:System.Collections.Hashtable> constructor, the objects used as keys in the <xref:System.Collections.Hashtable> object are not required to override the <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> and <xref:System.Object.Equals%2A?displayProperty=nameWithType> methods.</span></span>  
  
 <span data-ttu-id="ad0ea-378">Поставщик хэш-кода распределяет хеш-коды для ключей в <xref:System.Collections.Hashtable>.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-378">The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Hashtable>.</span></span> <span data-ttu-id="ad0ea-379">Хеш-кода по умолчанию является реализацией метода <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-379">The default hash code provider is the key's implementation of <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="ad0ea-380">Функция сравнения определяет, равны ли два ключа.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-380">The comparer determines whether two keys are equal.</span></span> <span data-ttu-id="ad0ea-381">Каждый ключ в <xref:System.Collections.Hashtable> должно быть уникальным.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-381">Every key in a <xref:System.Collections.Hashtable> must be unique.</span></span> <span data-ttu-id="ad0ea-382">Компаратор по умолчанию является реализацией метода <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-382">The default comparer is the key's implementation of <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="ad0ea-383"><xref:System.Collections.IEqualityComparer> Позволяет реализовать сценарии, например, при поиске строк без учета регистра.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-383">The <xref:System.Collections.IEqualityComparer> enables scenarios such as doing lookups with case-insensitive strings.</span></span>  
  
 <span data-ttu-id="ad0ea-384">Элементы нового <xref:System.Collections.Hashtable> сортируются в том же порядке, в котором перечислитель перемещается по <xref:System.Collections.IDictionary> объекта.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-384">The elements of the new <xref:System.Collections.Hashtable> are sorted in the same order in which the enumerator iterates through the <xref:System.Collections.IDictionary> object.</span></span>  
  
 <span data-ttu-id="ad0ea-385">Этот конструктор является операцией O (`n`) операции, где `n` — количество элементов в `d` параметра.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-385">This constructor is an O(`n`) operation, where `n` is the number of elements in the `d` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ad0ea-386">В следующем примере кода создает хэш-таблицы с помощью разных <xref:System.Collections.Hashtable> конструкторы и демонстрирует различия в поведении хэш-таблиц, даже если каждый из них содержит те же элементы.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-386">The following code example creates hash tables using different <xref:System.Collections.Hashtable> constructors and demonstrates the differences in the behavior of the hash tables, even if each one contains the same elements.</span></span>  
  
 [!code-cpp[System.Collections.Hashtable_ctorDictionaryFloat#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorDictionaryFloat/CPP/hashtable_ctordictionaryfloat.cpp#1)]
 [!code-csharp[System.Collections.Hashtable_ctorDictionaryFloat#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorDictionaryFloat/CS/hashtable_ctordictionaryfloat.cs#1)]
 [!code-vb[System.Collections.Hashtable_ctorDictionaryFloat#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorDictionaryFloat/VB/hashtable_ctordictionaryfloat.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ad0ea-387"><paramref name="d" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-387"><paramref name="d" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="ad0ea-388">Значение <paramref name="loadFactor" /> меньше 0,1.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-388"><paramref name="loadFactor" /> is less than 0.1.</span></span>  
  
<span data-ttu-id="ad0ea-389">-или-</span><span class="sxs-lookup"><span data-stu-id="ad0ea-389">-or-</span></span> 
 <span data-ttu-id="ad0ea-390">Значение <paramref name="loadFactor" /> больше 1,0.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-390"><paramref name="loadFactor" /> is greater than 1.0.</span></span></exception>
        <altmember cref="T:System.Collections.IEqualityComparer" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Hashtable (int capacity, System.Collections.IHashCodeProvider hcp, System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 capacity, class System.Collections.IHashCodeProvider hcp, class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.#ctor(System.Int32,System.Collections.IHashCodeProvider,System.Collections.IComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (capacity As Integer, hcp As IHashCodeProvider, comparer As IComparer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Hashtable(int capacity, System::Collections::IHashCodeProvider ^ hcp, System::Collections::IComparer ^ comparer);" />
      <MemberSignature Language="F#" Value="new System.Collections.Hashtable : int * System.Collections.IHashCodeProvider * System.Collections.IComparer -&gt; System.Collections.Hashtable" Usage="new System.Collections.Hashtable (capacity, hcp, comparer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.Obsolete("Please use Hashtable(int, IEqualityComparer) instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="capacity" Type="System.Int32" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="hcp" Type="System.Collections.IHashCodeProvider" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="comparer" Type="System.Collections.IComparer" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="capacity"><span data-ttu-id="ad0ea-391">Приблизительное количество элементов, которое может первоначально содержать объект <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-391">The approximate number of elements that the <see cref="T:System.Collections.Hashtable" /> object can initially contain.</span></span></param>
        <param name="hcp"><span data-ttu-id="ad0ea-392">Интерфейс <see cref="T:System.Collections.IHashCodeProvider" /> — это объект, поставляющий хэш-коды для всех ключей в объекте <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-392">The <see cref="T:System.Collections.IHashCodeProvider" /> object that supplies the hash codes for all keys in the <see cref="T:System.Collections.Hashtable" />.</span></span>  
  
<span data-ttu-id="ad0ea-393">-или-</span><span class="sxs-lookup"><span data-stu-id="ad0ea-393">-or-</span></span> 
 <span data-ttu-id="ad0ea-394">Значение <see langword="null" /> предусмотрено для использования поставщика хэш-кода по умолчанию, являющегося реализацией метода <see cref="M:System.Object.GetHashCode" /> для каждого ключа.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-394"><see langword="null" /> to use the default hash code provider, which is each key's implementation of <see cref="M:System.Object.GetHashCode" />.</span></span></param>
        <param name="comparer"><span data-ttu-id="ad0ea-395">Интерфейс <see cref="T:System.Collections.IComparer" />, который используется для определения равенства двух ключей.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-395">The <see cref="T:System.Collections.IComparer" /> object to use to determine whether two keys are equal.</span></span>  
  
<span data-ttu-id="ad0ea-396">-или-</span><span class="sxs-lookup"><span data-stu-id="ad0ea-396">-or-</span></span> 
 <span data-ttu-id="ad0ea-397">Значение <see langword="null" /> для использования блока сравнения по умолчанию, который является реализацией метода <see cref="M:System.Object.Equals(System.Object)" /> для каждого ключа.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-397"><see langword="null" /> to use the default comparer, which is each key's implementation of <see cref="M:System.Object.Equals(System.Object)" />.</span></span></param>
        <summary><span data-ttu-id="ad0ea-398">Инициализирует новый пустой экземпляр класса <see cref="T:System.Collections.Hashtable" /> с указанными исходной емкостью, поставщиком хэш-кода и объектом сравнения и заданным по умолчанию показателем загрузки.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-398">Initializes a new, empty instance of the <see cref="T:System.Collections.Hashtable" /> class using the specified initial capacity, hash code provider, comparer, and the default load factor.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad0ea-399">Указание исходной емкости избавляет от необходимости выполнять операции изменения размера при добавлении элементов в <xref:System.Collections.Hashtable> объекта.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-399">Specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Hashtable> object.</span></span> <span data-ttu-id="ad0ea-400">Емкость — автоматически увеличивается в соответствии с показателем загрузки.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-400">Capacity is automatically increased as required based on the load factor.</span></span>  
  
 <span data-ttu-id="ad0ea-401">Показатель загрузки определяет максимальное отношение количества элементов к количеству сегментов.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-401">The load factor is the maximum ratio of elements to buckets.</span></span> <span data-ttu-id="ad0ea-402">Фактор нагрузки на небольших означает более быстрый поиск, за счет увеличения объема используемой памяти.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-402">A smaller load factor means faster lookup at the cost of increased memory consumption.</span></span>  
  
 <span data-ttu-id="ad0ea-403">Когда фактический показатель загрузки достигает указанным показателем загрузки, количество сегментов автоматически увеличивается до наименьшего простого числа, большего, чем дважды текущего количества сегментов.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-403">When the actual load factor reaches the specified load factor, the number of buckets is automatically increased to the smallest prime number that is larger than twice the current number of buckets.</span></span>  
  
 <span data-ttu-id="ad0ea-404">Поставщик хэш-кода распределяет хеш-коды для ключей в <xref:System.Collections.Hashtable>.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-404">The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Hashtable>.</span></span> <span data-ttu-id="ad0ea-405">Хеш-кода по умолчанию является реализацией метода <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-405">The default hash code provider is the key's implementation of <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="ad0ea-406">Функция сравнения определяет, равны ли два ключа.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-406">The comparer determines whether two keys are equal.</span></span> <span data-ttu-id="ad0ea-407">Каждый ключ в <xref:System.Collections.Hashtable> должно быть уникальным.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-407">Every key in a <xref:System.Collections.Hashtable> must be unique.</span></span> <span data-ttu-id="ad0ea-408">Компаратор по умолчанию является реализацией метода <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-408">The default comparer is the key's implementation of <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="ad0ea-409">Хеш-кода и пользовательского модуля сравнения поддерживают сценарии, например при поиске строк без учета регистра.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-409">The custom hash code provider and the custom comparer enable scenarios such as doing lookups with case-insensitive strings.</span></span>  
  
 <span data-ttu-id="ad0ea-410">Этот конструктор является операцией O (`n`) операции, где `n` является `capacity` параметра.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-410">This constructor is an O(`n`) operation, where `n` is the `capacity` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ad0ea-411">В следующем примере кода создает хэш-таблицы с помощью разных <xref:System.Collections.Hashtable> конструкторы и демонстрирует различия в поведении хэш-таблиц, даже если каждый из них содержит те же элементы.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-411">The following code example creates hash tables using different <xref:System.Collections.Hashtable> constructors and demonstrates the differences in the behavior of the hash tables, even if each one contains the same elements.</span></span>  
  
 [!code-cpp[System.Collections.Hashtable_ctorInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorInt/CPP/hashtable_ctorint.cpp#1)]
 [!code-csharp[System.Collections.Hashtable_ctorInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorInt/CS/hashtable_ctorint.cs#1)]
 [!code-vb[System.Collections.Hashtable_ctorInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorInt/VB/hashtable_ctorint.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="ad0ea-412">Значение параметра <paramref name="capacity" /> меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-412"><paramref name="capacity" /> is less than zero.</span></span></exception>
        <altmember cref="T:System.Collections.IHashCodeProvider" />
        <altmember cref="T:System.Collections.IComparer" />
        <altmember cref="M:System.Object.GetHashCode" />
        <altmember cref="M:System.Object.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Hashtable (int capacity, float loadFactor, System.Collections.IEqualityComparer equalityComparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 capacity, float32 loadFactor, class System.Collections.IEqualityComparer equalityComparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.#ctor(System.Int32,System.Single,System.Collections.IEqualityComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (capacity As Integer, loadFactor As Single, equalityComparer As IEqualityComparer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Hashtable(int capacity, float loadFactor, System::Collections::IEqualityComparer ^ equalityComparer);" />
      <MemberSignature Language="F#" Value="new System.Collections.Hashtable : int * single * System.Collections.IEqualityComparer -&gt; System.Collections.Hashtable" Usage="new System.Collections.Hashtable (capacity, loadFactor, equalityComparer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="capacity" Type="System.Int32" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="loadFactor" Type="System.Single" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="equalityComparer" Type="System.Collections.IEqualityComparer" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="capacity"><span data-ttu-id="ad0ea-413">Приблизительное количество элементов, которое может первоначально содержать объект <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-413">The approximate number of elements that the <see cref="T:System.Collections.Hashtable" /> object can initially contain.</span></span></param>
        <param name="loadFactor"><span data-ttu-id="ad0ea-414">Число в диапазоне от 0,1 до 1,0, умноженное на значение по умолчанию, обеспечивающее наилучшую производительность.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-414">A number in the range from 0.1 through 1.0 that is multiplied by the default value which provides the best performance.</span></span> <span data-ttu-id="ad0ea-415">Результат определяет максимальное отношение количества элементов к количеству сегментов.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-415">The result is the maximum ratio of elements to buckets.</span></span></param>
        <param name="equalityComparer"><span data-ttu-id="ad0ea-416"><see cref="T:System.Collections.IEqualityComparer" /> — это объект, определяющий поставщик хэш-кода и объект сравнения для использования с объектом <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-416">The <see cref="T:System.Collections.IEqualityComparer" /> object that defines the hash code provider and the comparer to use with the <see cref="T:System.Collections.Hashtable" />.</span></span>  
  
<span data-ttu-id="ad0ea-417">-или-</span><span class="sxs-lookup"><span data-stu-id="ad0ea-417">-or-</span></span> 
 <span data-ttu-id="ad0ea-418">Значение <see langword="null" /> предусмотрено для использования поставщика хэш-кодов по умолчанию и объекта сравнения по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-418"><see langword="null" /> to use the default hash code provider and the default comparer.</span></span> <span data-ttu-id="ad0ea-419">Поставщик хэш-кода по умолчанию является реализацией метода <see cref="M:System.Object.GetHashCode" />, а средство сравнения по умолчанию является реализацией метода <see cref="M:System.Object.Equals(System.Object)" />.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-419">The default hash code provider is each key's implementation of <see cref="M:System.Object.GetHashCode" /> and the default comparer is each key's implementation of <see cref="M:System.Object.Equals(System.Object)" />.</span></span></param>
        <summary><span data-ttu-id="ad0ea-420">Инициализирует новый пустой экземпляр класса <see cref="T:System.Collections.Hashtable" /> с указанными исходной емкостью, показателем загрузки и объектом сравнения <see cref="T:System.Collections.IEqualityComparer" />.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-420">Initializes a new, empty instance of the <see cref="T:System.Collections.Hashtable" /> class using the specified initial capacity, load factor, and <see cref="T:System.Collections.IEqualityComparer" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad0ea-421">Указание исходной емкости избавляет от необходимости выполнять операции изменения размера при добавлении элементов в <xref:System.Collections.Hashtable> объекта.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-421">Specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Hashtable> object.</span></span> <span data-ttu-id="ad0ea-422">Емкость — автоматически увеличивается в соответствии с показателем загрузки.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-422">Capacity is automatically increased as required based on the load factor.</span></span>  
  
 <span data-ttu-id="ad0ea-423">Показатель загрузки определяет максимальное отношение количества элементов к количеству сегментов.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-423">The load factor is the maximum ratio of elements to buckets.</span></span> <span data-ttu-id="ad0ea-424">Фактор нагрузки на небольших означает более быстрый поиск, за счет увеличения объема используемой памяти.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-424">A smaller load factor means faster lookup at the cost of increased memory consumption.</span></span> <span data-ttu-id="ad0ea-425">Фактор нагрузки на 1.0 — это оптимальный баланс между скоростью и размер.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-425">A load factor of 1.0 is the best balance between speed and size.</span></span>  
  
 <span data-ttu-id="ad0ea-426">Когда фактический показатель загрузки достигает указанным показателем загрузки, количество сегментов автоматически увеличивается до наименьшего простого числа, большего, чем дважды текущего количества сегментов.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-426">When the actual load factor reaches the specified load factor, the number of buckets is automatically increased to the smallest prime number that is larger than twice the current number of buckets.</span></span>  
  
 <span data-ttu-id="ad0ea-427"><xref:System.Collections.IEqualityComparer> Объект включает в себя, поставщиком хэш-кода и объект сравнения.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-427">The <xref:System.Collections.IEqualityComparer> object includes both the hash code provider and the comparer.</span></span> <span data-ttu-id="ad0ea-428">Если <xref:System.Collections.IEqualityComparer> используется в <xref:System.Collections.Hashtable> конструктор, объекты, используемые в качестве ключей в <xref:System.Collections.Hashtable> не требуется переопределять <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> и <xref:System.Object.Equals%2A?displayProperty=nameWithType> методы.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-428">If an <xref:System.Collections.IEqualityComparer> is used in the <xref:System.Collections.Hashtable> constructor, the objects used as keys in the <xref:System.Collections.Hashtable> are not required to override the <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> and <xref:System.Object.Equals%2A?displayProperty=nameWithType> methods.</span></span>  
  
 <span data-ttu-id="ad0ea-429">Поставщик хэш-кода распределяет хеш-коды для ключей в <xref:System.Collections.Hashtable>.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-429">The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Hashtable>.</span></span> <span data-ttu-id="ad0ea-430">Хеш-кода по умолчанию является реализацией метода <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-430">The default hash code provider is the key's implementation of <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="ad0ea-431">Функция сравнения определяет, равны ли два ключа.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-431">The comparer determines whether two keys are equal.</span></span> <span data-ttu-id="ad0ea-432">Каждый ключ в <xref:System.Collections.Hashtable> должно быть уникальным.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-432">Every key in a <xref:System.Collections.Hashtable> must be unique.</span></span> <span data-ttu-id="ad0ea-433">Компаратор по умолчанию является реализацией метода <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-433">The default comparer is the key's implementation of <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="ad0ea-434"><xref:System.Collections.IEqualityComparer> Позволяет реализовать сценарии, например, при поиске строк без учета регистра.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-434">The <xref:System.Collections.IEqualityComparer> enables scenarios such as doing lookups with case-insensitive strings.</span></span>  
  
 <span data-ttu-id="ad0ea-435">Этот конструктор является операцией O (`n`) операции, где `n` является `capacity` параметра.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-435">This constructor is an O(`n`) operation, where `n` is the `capacity` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ad0ea-436">В следующем примере кода создает хэш-таблицы с помощью разных <xref:System.Collections.Hashtable> конструкторы и демонстрирует различия в поведении хэш-таблиц, даже если каждый из них содержит те же элементы.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-436">The following code example creates hash tables using different <xref:System.Collections.Hashtable> constructors and demonstrates the differences in the behavior of the hash tables, even if each one contains the same elements.</span></span>  
  
 [!code-cpp[System.Collections.Hashtable_ctorIntFloat#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorIntFloat/CPP/hashtable_ctorintfloat.cpp#1)]
 [!code-csharp[System.Collections.Hashtable_ctorIntFloat#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorIntFloat/CS/hashtable_ctorintfloat.cs#1)]
 [!code-vb[System.Collections.Hashtable_ctorIntFloat#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorIntFloat/VB/hashtable_ctorintfloat.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="ad0ea-437">Значение параметра <paramref name="capacity" /> меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-437"><paramref name="capacity" /> is less than zero.</span></span>  
  
<span data-ttu-id="ad0ea-438">-или-</span><span class="sxs-lookup"><span data-stu-id="ad0ea-438">-or-</span></span> 
 <span data-ttu-id="ad0ea-439">Значение <paramref name="loadFactor" /> меньше 0,1.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-439"><paramref name="loadFactor" /> is less than 0.1.</span></span>  
  
<span data-ttu-id="ad0ea-440">-или-</span><span class="sxs-lookup"><span data-stu-id="ad0ea-440">-or-</span></span> 
 <span data-ttu-id="ad0ea-441">Значение <paramref name="loadFactor" /> больше 1,0.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-441"><paramref name="loadFactor" /> is greater than 1.0.</span></span></exception>
        <altmember cref="T:System.Collections.IEqualityComparer" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Hashtable (System.Collections.IDictionary d, float loadFactor, System.Collections.IHashCodeProvider hcp, System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.IDictionary d, float32 loadFactor, class System.Collections.IHashCodeProvider hcp, class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.#ctor(System.Collections.IDictionary,System.Single,System.Collections.IHashCodeProvider,System.Collections.IComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (d As IDictionary, loadFactor As Single, hcp As IHashCodeProvider, comparer As IComparer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Hashtable(System::Collections::IDictionary ^ d, float loadFactor, System::Collections::IHashCodeProvider ^ hcp, System::Collections::IComparer ^ comparer);" />
      <MemberSignature Language="F#" Value="new System.Collections.Hashtable : System.Collections.IDictionary * single * System.Collections.IHashCodeProvider * System.Collections.IComparer -&gt; System.Collections.Hashtable" Usage="new System.Collections.Hashtable (d, loadFactor, hcp, comparer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.Obsolete("Please use Hashtable(IDictionary, float, IEqualityComparer) instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="d" Type="System.Collections.IDictionary" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="loadFactor" Type="System.Single" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="hcp" Type="System.Collections.IHashCodeProvider" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="comparer" Type="System.Collections.IComparer" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="ad0ea-442">Объект <see cref="T:System.Collections.IDictionary" />, предназначенный для копирования в новый объект <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-442">The <see cref="T:System.Collections.IDictionary" /> object to copy to a new <see cref="T:System.Collections.Hashtable" /> object.</span></span></param>
        <param name="loadFactor"><span data-ttu-id="ad0ea-443">Число в диапазоне от 0,1 до 1,0, умноженное на значение по умолчанию, обеспечивающее наилучшую производительность.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-443">A number in the range from 0.1 through 1.0 that is multiplied by the default value which provides the best performance.</span></span> <span data-ttu-id="ad0ea-444">Результат определяет максимальное отношение количества элементов к количеству сегментов.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-444">The result is the maximum ratio of elements to buckets.</span></span></param>
        <param name="hcp"><span data-ttu-id="ad0ea-445">Интерфейс <see cref="T:System.Collections.IHashCodeProvider" /> — это объект, поставляющий хэш-коды для всех ключей в объекте <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-445">The <see cref="T:System.Collections.IHashCodeProvider" /> object that supplies the hash codes for all keys in the <see cref="T:System.Collections.Hashtable" />.</span></span>  
  
<span data-ttu-id="ad0ea-446">-или-</span><span class="sxs-lookup"><span data-stu-id="ad0ea-446">-or-</span></span> 
 <span data-ttu-id="ad0ea-447">Значение <see langword="null" /> предусмотрено для использования поставщика хэш-кода по умолчанию, являющегося реализацией метода <see cref="M:System.Object.GetHashCode" /> для каждого ключа.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-447"><see langword="null" /> to use the default hash code provider, which is each key's implementation of <see cref="M:System.Object.GetHashCode" />.</span></span></param>
        <param name="comparer"><span data-ttu-id="ad0ea-448">Интерфейс <see cref="T:System.Collections.IComparer" />, который используется для определения равенства двух ключей.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-448">The <see cref="T:System.Collections.IComparer" /> object to use to determine whether two keys are equal.</span></span>  
  
<span data-ttu-id="ad0ea-449">-или-</span><span class="sxs-lookup"><span data-stu-id="ad0ea-449">-or-</span></span> 
 <span data-ttu-id="ad0ea-450">Значение <see langword="null" /> для использования блока сравнения по умолчанию, который является реализацией метода <see cref="M:System.Object.Equals(System.Object)" /> для каждого ключа.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-450"><see langword="null" /> to use the default comparer, which is each key's implementation of <see cref="M:System.Object.Equals(System.Object)" />.</span></span></param>
        <summary><span data-ttu-id="ad0ea-451">Инициализирует новый пустой экземпляр класса <see cref="T:System.Collections.Hashtable" /> посредством копирования элементов из указанного словаря в новый объект <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-451">Initializes a new instance of the <see cref="T:System.Collections.Hashtable" /> class by copying the elements from the specified dictionary to the new <see cref="T:System.Collections.Hashtable" /> object.</span></span> <span data-ttu-id="ad0ea-452">У нового объекта <see cref="T:System.Collections.Hashtable" /> исходная емкость равна числу копируемых элементов, и он обладает указанными показателем загрузки, поставщиком хэш-кода и объектом сравнения.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-452">The new <see cref="T:System.Collections.Hashtable" /> object has an initial capacity equal to the number of elements copied, and uses the specified load factor, hash code provider, and comparer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad0ea-453">Исходная емкость присваивается количество элементов в исходном словаре.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-453">The initial capacity is set to the number of elements in the source dictionary.</span></span> <span data-ttu-id="ad0ea-454">Емкость — автоматически увеличивается в соответствии с показателем загрузки.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-454">Capacity is automatically increased as required based on the load factor.</span></span>  
  
 <span data-ttu-id="ad0ea-455">Показатель загрузки определяет максимальное отношение количества элементов к количеству сегментов.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-455">The load factor is the maximum ratio of elements to buckets.</span></span> <span data-ttu-id="ad0ea-456">Фактор нагрузки на небольших означает более быстрый поиск, за счет увеличения объема используемой памяти.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-456">A smaller load factor means faster lookup at the cost of increased memory consumption.</span></span> <span data-ttu-id="ad0ea-457">Фактор нагрузки на 1.0 — это оптимальный баланс между скоростью и размер.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-457">A load factor of 1.0 is the best balance between speed and size.</span></span>  
  
 <span data-ttu-id="ad0ea-458">Когда фактический показатель загрузки достигает указанным показателем загрузки, количество сегментов автоматически увеличивается до наименьшего простого числа, большего, чем дважды текущего количества сегментов.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-458">When the actual load factor reaches the specified load factor, the number of buckets is automatically increased to the smallest prime number that is larger than twice the current number of buckets.</span></span>  
  
 <span data-ttu-id="ad0ea-459">Поставщик хэш-кода распределяет хеш-коды для ключей в <xref:System.Collections.Hashtable> объекта.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-459">The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Hashtable> object.</span></span> <span data-ttu-id="ad0ea-460">Хеш-кода по умолчанию является реализацией метода <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-460">The default hash code provider is the key's implementation of <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="ad0ea-461">Функция сравнения определяет, равны ли два ключа.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-461">The comparer determines whether two keys are equal.</span></span> <span data-ttu-id="ad0ea-462">Каждый ключ в <xref:System.Collections.Hashtable> должно быть уникальным.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-462">Every key in a <xref:System.Collections.Hashtable> must be unique.</span></span> <span data-ttu-id="ad0ea-463">Компаратор по умолчанию является реализацией метода <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-463">The default comparer is the key's implementation of <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="ad0ea-464">Хеш-кода и пользовательского модуля сравнения поддерживают сценарии, например при поиске строк без учета регистра.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-464">The custom hash code provider and the custom comparer enable scenarios such as doing lookups with case-insensitive strings.</span></span>  
  
 <span data-ttu-id="ad0ea-465">Элементы нового <xref:System.Collections.Hashtable> сортируются в том же порядке, в котором перечислитель перемещается по <xref:System.Collections.IDictionary> объекта.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-465">The elements of the new <xref:System.Collections.Hashtable> are sorted in the same order in which the enumerator iterates through the <xref:System.Collections.IDictionary> object.</span></span>  
  
 <span data-ttu-id="ad0ea-466">Этот конструктор является операцией O (`n`) операции, где `n` — количество элементов в `d` параметра.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-466">This constructor is an O(`n`) operation, where `n` is the number of elements in the `d` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ad0ea-467">В следующем примере кода создает хэш-таблицы с помощью разных <xref:System.Collections.Hashtable> конструкторы и демонстрирует различия в поведении хэш-таблиц, даже если каждый из них содержит те же элементы.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-467">The following code example creates hash tables using different <xref:System.Collections.Hashtable> constructors and demonstrates the differences in the behavior of the hash tables, even if each one contains the same elements.</span></span>  
  
 [!code-cpp[System.Collections.Hashtable_ctorDictionaryFloat#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorDictionaryFloat/CPP/hashtable_ctordictionaryfloat.cpp#1)]
 [!code-csharp[System.Collections.Hashtable_ctorDictionaryFloat#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorDictionaryFloat/CS/hashtable_ctordictionaryfloat.cs#1)]
 [!code-vb[System.Collections.Hashtable_ctorDictionaryFloat#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorDictionaryFloat/VB/hashtable_ctordictionaryfloat.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ad0ea-468"><paramref name="d" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-468"><paramref name="d" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="ad0ea-469">Значение <paramref name="loadFactor" /> меньше 0,1.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-469"><paramref name="loadFactor" /> is less than 0.1.</span></span>  
  
<span data-ttu-id="ad0ea-470">-или-</span><span class="sxs-lookup"><span data-stu-id="ad0ea-470">-or-</span></span> 
 <span data-ttu-id="ad0ea-471">Значение <paramref name="loadFactor" /> больше 1,0.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-471"><paramref name="loadFactor" /> is greater than 1.0.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Hashtable (int capacity, float loadFactor, System.Collections.IHashCodeProvider hcp, System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 capacity, float32 loadFactor, class System.Collections.IHashCodeProvider hcp, class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.#ctor(System.Int32,System.Single,System.Collections.IHashCodeProvider,System.Collections.IComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (capacity As Integer, loadFactor As Single, hcp As IHashCodeProvider, comparer As IComparer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Hashtable(int capacity, float loadFactor, System::Collections::IHashCodeProvider ^ hcp, System::Collections::IComparer ^ comparer);" />
      <MemberSignature Language="F#" Value="new System.Collections.Hashtable : int * single * System.Collections.IHashCodeProvider * System.Collections.IComparer -&gt; System.Collections.Hashtable" Usage="new System.Collections.Hashtable (capacity, loadFactor, hcp, comparer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.Obsolete("Please use Hashtable(int, float, IEqualityComparer) instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="capacity" Type="System.Int32" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="loadFactor" Type="System.Single" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="hcp" Type="System.Collections.IHashCodeProvider" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="comparer" Type="System.Collections.IComparer" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="capacity"><span data-ttu-id="ad0ea-472">Приблизительное количество элементов, которое может первоначально содержать объект <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-472">The approximate number of elements that the <see cref="T:System.Collections.Hashtable" /> object can initially contain.</span></span></param>
        <param name="loadFactor"><span data-ttu-id="ad0ea-473">Число в диапазоне от 0,1 до 1,0, умноженное на значение по умолчанию, обеспечивающее наилучшую производительность.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-473">A number in the range from 0.1 through 1.0 that is multiplied by the default value which provides the best performance.</span></span> <span data-ttu-id="ad0ea-474">Результат определяет максимальное отношение количества элементов к количеству сегментов.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-474">The result is the maximum ratio of elements to buckets.</span></span></param>
        <param name="hcp"><span data-ttu-id="ad0ea-475">Интерфейс <see cref="T:System.Collections.IHashCodeProvider" /> — это объект, поставляющий хэш-коды для всех ключей в объекте <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-475">The <see cref="T:System.Collections.IHashCodeProvider" /> object that supplies the hash codes for all keys in the <see cref="T:System.Collections.Hashtable" />.</span></span>  
  
<span data-ttu-id="ad0ea-476">-или-</span><span class="sxs-lookup"><span data-stu-id="ad0ea-476">-or-</span></span> 
 <span data-ttu-id="ad0ea-477">Значение <see langword="null" /> предусмотрено для использования поставщика хэш-кода по умолчанию, являющегося реализацией метода <see cref="M:System.Object.GetHashCode" /> для каждого ключа.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-477"><see langword="null" /> to use the default hash code provider, which is each key's implementation of <see cref="M:System.Object.GetHashCode" />.</span></span></param>
        <param name="comparer"><span data-ttu-id="ad0ea-478">Интерфейс <see cref="T:System.Collections.IComparer" />, который используется для определения равенства двух ключей.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-478">The <see cref="T:System.Collections.IComparer" /> object to use to determine whether two keys are equal.</span></span>  
  
<span data-ttu-id="ad0ea-479">-или-</span><span class="sxs-lookup"><span data-stu-id="ad0ea-479">-or-</span></span> 
 <span data-ttu-id="ad0ea-480">Значение <see langword="null" /> для использования блока сравнения по умолчанию, который является реализацией метода <see cref="M:System.Object.Equals(System.Object)" /> для каждого ключа.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-480"><see langword="null" /> to use the default comparer, which is each key's implementation of <see cref="M:System.Object.Equals(System.Object)" />.</span></span></param>
        <summary><span data-ttu-id="ad0ea-481">Инициализирует новый пустой экземпляр класса <see cref="T:System.Collections.Hashtable" /> с указанными начальной емкостью, показателем загрузки, поставщиком хэш-кода и объектом сравнения.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-481">Initializes a new, empty instance of the <see cref="T:System.Collections.Hashtable" /> class using the specified initial capacity, load factor, hash code provider, and comparer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad0ea-482">Указание исходной емкости избавляет от необходимости выполнять операции изменения размера при добавлении элементов в <xref:System.Collections.Hashtable> объекта.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-482">Specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Hashtable> object.</span></span> <span data-ttu-id="ad0ea-483">Емкость — автоматически увеличивается в соответствии с показателем загрузки.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-483">Capacity is automatically increased as required based on the load factor.</span></span>  
  
 <span data-ttu-id="ad0ea-484">Показатель загрузки определяет максимальное отношение количества элементов к количеству сегментов.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-484">The load factor is the maximum ratio of elements to buckets.</span></span> <span data-ttu-id="ad0ea-485">Фактор нагрузки на небольших означает более быстрый поиск, за счет увеличения объема используемой памяти.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-485">A smaller load factor means faster lookup at the cost of increased memory consumption.</span></span> <span data-ttu-id="ad0ea-486">Фактор нагрузки на 1.0 — это оптимальный баланс между скоростью и размер.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-486">A load factor of 1.0 is the best balance between speed and size.</span></span>  
  
 <span data-ttu-id="ad0ea-487">Когда фактический показатель загрузки достигает указанным показателем загрузки, количество сегментов автоматически увеличивается до наименьшего простого числа, большего, чем дважды текущего количества сегментов.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-487">When the actual load factor reaches the specified load factor, the number of buckets is automatically increased to the smallest prime number that is larger than twice the current number of buckets.</span></span>  
  
 <span data-ttu-id="ad0ea-488">Поставщик хэш-кода распределяет хеш-коды для ключей в <xref:System.Collections.Hashtable>.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-488">The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Hashtable>.</span></span> <span data-ttu-id="ad0ea-489">Хеш-кода по умолчанию является реализацией метода <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-489">The default hash code provider is the key's implementation of <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="ad0ea-490">Функция сравнения определяет, равны ли два ключа.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-490">The comparer determines whether two keys are equal.</span></span> <span data-ttu-id="ad0ea-491">Каждый ключ в <xref:System.Collections.Hashtable> должно быть уникальным.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-491">Every key in a <xref:System.Collections.Hashtable> must be unique.</span></span> <span data-ttu-id="ad0ea-492">Компаратор по умолчанию является реализацией метода <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-492">The default comparer is the key's implementation of <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="ad0ea-493">Хеш-кода и пользовательского модуля сравнения поддерживают сценарии, например при поиске строк без учета регистра.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-493">The custom hash code provider and the custom comparer enable scenarios such as doing lookups with case-insensitive strings.</span></span>  
  
 <span data-ttu-id="ad0ea-494">Этот конструктор является операцией O (`n`) операции, где `n` является `capacity` параметра.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-494">This constructor is an O(`n`) operation, where `n` is the `capacity` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ad0ea-495">В следующем примере кода создает хэш-таблицы с помощью разных <xref:System.Collections.Hashtable> конструкторы и демонстрирует различия в поведении хэш-таблиц, даже если каждый из них содержит те же элементы.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-495">The following code example creates hash tables using different <xref:System.Collections.Hashtable> constructors and demonstrates the differences in the behavior of the hash tables, even if each one contains the same elements.</span></span>  
  
 [!code-cpp[System.Collections.Hashtable_ctorIntFloat#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorIntFloat/CPP/hashtable_ctorintfloat.cpp#1)]
 [!code-csharp[System.Collections.Hashtable_ctorIntFloat#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorIntFloat/CS/hashtable_ctorintfloat.cs#1)]
 [!code-vb[System.Collections.Hashtable_ctorIntFloat#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorIntFloat/VB/hashtable_ctorintfloat.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="ad0ea-496">Значение параметра <paramref name="capacity" /> меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-496"><paramref name="capacity" /> is less than zero.</span></span>  
  
<span data-ttu-id="ad0ea-497">-или-</span><span class="sxs-lookup"><span data-stu-id="ad0ea-497">-or-</span></span> 
 <span data-ttu-id="ad0ea-498">Значение <paramref name="loadFactor" /> меньше 0,1.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-498"><paramref name="loadFactor" /> is less than 0.1.</span></span>  
  
<span data-ttu-id="ad0ea-499">-или-</span><span class="sxs-lookup"><span data-stu-id="ad0ea-499">-or-</span></span> 
 <span data-ttu-id="ad0ea-500">Значение <paramref name="loadFactor" /> больше 1,0.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-500"><paramref name="loadFactor" /> is greater than 1.0.</span></span></exception>
        <altmember cref="T:System.Collections.IHashCodeProvider" />
        <altmember cref="T:System.Collections.IComparer" />
        <altmember cref="M:System.Object.GetHashCode" />
        <altmember cref="M:System.Object.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual void Add (object key, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(object key, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.Add(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Add (key As Object, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Add(System::Object ^ key, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member Add : obj * obj -&gt; unit&#xA;override this.Add : obj * obj -&gt; unit" Usage="hashtable.Add (key, value)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.Add(System.Object,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="ad0ea-501">Ключ добавляемого элемента.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-501">The key of the element to add.</span></span></param>
        <param name="value"><span data-ttu-id="ad0ea-502">Добавляемое значение элемента.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-502">The value of the element to add.</span></span> <span data-ttu-id="ad0ea-503">Допускается значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-503">The value can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="ad0ea-504">Добавляет элемент с указанными ключом и значением в словарь <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-504">Adds an element with the specified key and value into the <see cref="T:System.Collections.Hashtable" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad0ea-505">Ключ не может быть `null`, но может быть значение.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-505">A key cannot be `null`, but a value can be.</span></span>  
  
 <span data-ttu-id="ad0ea-506">Объект, нет зависимости между его состоянием и хэш-кодом, обычно не используется в качестве ключа.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-506">An object that has no correlation between its state and its hash code value should typically not be used as the key.</span></span> <span data-ttu-id="ad0ea-507">Например строковые объекты являются лучше, чем объекты типа StringBuilder для использования в качестве ключей.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-507">For example, String objects are better than StringBuilder objects for use as keys.</span></span>  
  
 <span data-ttu-id="ad0ea-508">Можно также использовать <xref:System.Collections.Hashtable.Item%2A> свойство для добавления новых элементов, задав значение ключа, который не существует в <xref:System.Collections.Hashtable>, например `myCollection["myNonexistentKey"] = myValue`.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-508">You can also use the <xref:System.Collections.Hashtable.Item%2A> property to add new elements by setting the value of a key that does not exist in the <xref:System.Collections.Hashtable>; for example, `myCollection["myNonexistentKey"] = myValue`.</span></span> <span data-ttu-id="ad0ea-509">Тем не менее если указанный ключ уже существует в <xref:System.Collections.Hashtable>, задание <xref:System.Collections.Hashtable.Item%2A> свойство перезаписывает прежнее значение.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-509">However, if the specified key already exists in the <xref:System.Collections.Hashtable>, setting the <xref:System.Collections.Hashtable.Item%2A> property overwrites the old value.</span></span> <span data-ttu-id="ad0ea-510">Напротив <xref:System.Collections.Hashtable.Add%2A> метод не изменяет существующие элементы.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-510">In contrast, the <xref:System.Collections.Hashtable.Add%2A> method does not modify existing elements.</span></span>  
  
 <span data-ttu-id="ad0ea-511">Если <xref:System.Collections.Hashtable.Count%2A> меньше, чем емкость <xref:System.Collections.Hashtable>, этот метод является операцией O(1).</span><span class="sxs-lookup"><span data-stu-id="ad0ea-511">If <xref:System.Collections.Hashtable.Count%2A> is less than the capacity of the <xref:System.Collections.Hashtable>, this method is an O(1) operation.</span></span> <span data-ttu-id="ad0ea-512">Если емкость требуется увеличить для размещения нового элемента, этот метод становится операцией O (`n`) операции, где `n` является <xref:System.Collections.Hashtable.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-512">If the capacity needs to be increased to accommodate the new element, this method becomes an O(`n`) operation, where `n` is <xref:System.Collections.Hashtable.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ad0ea-513">В следующем примере показано, как добавить элементы в <xref:System.Collections.Hashtable>.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-513">The following example shows how to add elements to the <xref:System.Collections.Hashtable>.</span></span>  
  
 [!code-cpp[Classic Hashtable.Add Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Hashtable.Add Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Hashtable.Add Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Hashtable.Add Example/CS/source.cs#1)]
 [!code-vb[Classic Hashtable.Add Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Hashtable.Add Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ad0ea-514"><paramref name="key" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-514"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ad0ea-515">Элемент с таким ключом уже существует в <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-515">An element with the same key already exists in the <see cref="T:System.Collections.Hashtable" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="ad0ea-516">Объект <see cref="T:System.Collections.Hashtable" /> доступен только для чтения.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-516">The <see cref="T:System.Collections.Hashtable" /> is read-only.</span></span>  
  
<span data-ttu-id="ad0ea-517">-или-</span><span class="sxs-lookup"><span data-stu-id="ad0ea-517">-or-</span></span> 
<span data-ttu-id="ad0ea-518"><see cref="T:System.Collections.Hashtable" /> имеет фиксированный размер.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-518">The <see cref="T:System.Collections.Hashtable" /> has a fixed size.</span></span></exception>
        <altmember cref="M:System.Collections.Hashtable.Remove(System.Object)" />
        <altmember cref="P:System.Collections.Hashtable.Item(System.Object)" />
        <altmember cref="M:System.Collections.IDictionary.Add(System.Object,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public virtual void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit&#xA;override this.Clear : unit -&gt; unit" Usage="hashtable.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ad0ea-519">Удаляет из коллекции <see cref="T:System.Collections.Hashtable" /> все элементы.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-519">Removes all elements from the <see cref="T:System.Collections.Hashtable" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad0ea-520"><xref:System.Collections.Hashtable.Count%2A> является равным нулю, и ссылки на другие объекты из элементов коллекции также освобождаются.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-520"><xref:System.Collections.Hashtable.Count%2A> is set to zero, and references to other objects from elements of the collection are also released.</span></span> <span data-ttu-id="ad0ea-521">Емкость остается без изменений.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-521">The capacity remains unchanged.</span></span>  
  
 <span data-ttu-id="ad0ea-522">Этот метод является операцией O (`n`) операции, где `n` является <xref:System.Collections.Hashtable.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-522">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Hashtable.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ad0ea-523">В следующем примере показано, как для очистки значения <xref:System.Collections.Hashtable>.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-523">The following example shows how to clear the values of the <xref:System.Collections.Hashtable>.</span></span>  
  
 [!code-cpp[Classic Hashtable.Clear Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Hashtable.Clear Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Hashtable.Clear Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Hashtable.Clear Example/CS/source.cs#1)]
 [!code-vb[Classic Hashtable.Clear Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Hashtable.Clear Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="ad0ea-524">Объект <see cref="T:System.Collections.Hashtable" /> доступен только для чтения.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-524">The <see cref="T:System.Collections.Hashtable" /> is read-only.</span></span></exception>
        <altmember cref="M:System.Collections.IDictionary.Clear" />
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public virtual object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; obj&#xA;override this.Clone : unit -&gt; obj" Usage="hashtable.Clone " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ad0ea-525">Создает неполную копию <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-525">Creates a shallow copy of the <see cref="T:System.Collections.Hashtable" />.</span></span></summary>
        <returns><span data-ttu-id="ad0ea-526">Неполная копия <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-526">A shallow copy of the <see cref="T:System.Collections.Hashtable" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad0ea-527">Неполная копия коллекции копируются только элементы коллекции, они являются ссылочными типами или типами значений, но он не копирует объекты, которые ссылаются на.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-527">A shallow copy of a collection copies only the elements of the collection, whether they are reference types or value types, but it does not copy the objects that the references refer to.</span></span> <span data-ttu-id="ad0ea-528">Ссылки в новой коллекции указывают на те же объекты, которые указывают ссылки в исходной коллекции.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-528">The references in the new collection point to the same objects that the references in the original collection point to.</span></span>  
  
 <span data-ttu-id="ad0ea-529">Напротив глубокую копию коллекции копирует элементы и все, что прямо или косвенно ссылаются элементы.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-529">In contrast, a deep copy of a collection copies the elements and everything directly or indirectly referenced by the elements.</span></span>  
  
 <span data-ttu-id="ad0ea-530"><xref:System.Collections.Hashtable> Клон имеет одинаковым количеством, такую же емкость же <xref:System.Collections.IHashCodeProvider> реализации и имеет одинаковые <xref:System.Collections.IComparer> как и исходный <xref:System.Collections.Hashtable>.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-530">The <xref:System.Collections.Hashtable> clone has the same count, the same capacity, the same <xref:System.Collections.IHashCodeProvider> implementation, and the same <xref:System.Collections.IComparer> implementation as the original <xref:System.Collections.Hashtable>.</span></span>  
  
 <span data-ttu-id="ad0ea-531">Этот метод является операцией O (`n`) операции, где `n` является <xref:System.Collections.Hashtable.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-531">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Hashtable.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Hashtable.CopyTo(System.Array,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="comparer">
      <MemberSignature Language="C#" Value="protected System.Collections.IComparer comparer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IComparer comparer" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Hashtable.comparer" />
      <MemberSignature Language="VB.NET" Value="Protected Property comparer As IComparer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Collections::IComparer ^ comparer { System::Collections::IComparer ^ get(); void set(System::Collections::IComparer ^ value); };" />
      <MemberSignature Language="F#" Value="member this.comparer : System.Collections.IComparer with get, set" Usage="System.Collections.Hashtable.comparer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.Obsolete("Please use KeyComparer properties.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IComparer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ad0ea-532">Получает или задает интерфейс <see cref="T:System.Collections.IComparer" /> для использования применительно к коллекции <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-532">Gets or sets the <see cref="T:System.Collections.IComparer" /> to use for the <see cref="T:System.Collections.Hashtable" />.</span></span></summary>
        <value><span data-ttu-id="ad0ea-533">Интерфейс <see cref="T:System.Collections.IComparer" />, предназначенный для использования применительно к коллекции <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-533">The <see cref="T:System.Collections.IComparer" /> to use for the <see cref="T:System.Collections.Hashtable" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad0ea-534">Получение значения данного свойства является операцией порядка сложности O(1).</span><span class="sxs-lookup"><span data-stu-id="ad0ea-534">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ad0ea-535">Свойству присвоено значение, однако хэш-таблица была создана с помощью объекта <see cref="T:System.Collections.IEqualityComparer" />.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-535">The property is set to a value, but the hash table was created using an <see cref="T:System.Collections.IEqualityComparer" />.</span></span></exception>
        <altmember cref="T:System.Collections.IComparer" />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public virtual bool Contains (object key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(object key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Contains (key As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Contains(System::Object ^ key);" />
      <MemberSignature Language="F#" Value="abstract member Contains : obj -&gt; bool&#xA;override this.Contains : obj -&gt; bool" Usage="hashtable.Contains key" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="ad0ea-536">Ключ, который требуется найти в <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-536">The key to locate in the <see cref="T:System.Collections.Hashtable" />.</span></span></param>
        <summary><span data-ttu-id="ad0ea-537">Определяет, содержит ли объект <see cref="T:System.Collections.Hashtable" /> указанный ключ.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-537">Determines whether the <see cref="T:System.Collections.Hashtable" /> contains a specific key.</span></span></summary>
        <returns><span data-ttu-id="ad0ea-538"><see langword="true" />, если <see cref="T:System.Collections.Hashtable" /> содержит элемент с указанным ключом, в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-538"><see langword="true" /> if the <see cref="T:System.Collections.Hashtable" /> contains an element with the specified key; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad0ea-539">Объект <xref:System.Collections.Hashtable.Contains%2A> реализует интерфейс <xref:System.Collections.IDictionary.Contains%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-539"><xref:System.Collections.Hashtable.Contains%2A> implements <xref:System.Collections.IDictionary.Contains%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="ad0ea-540">Он ведет себя точно так, как <xref:System.Collections.Hashtable.ContainsKey%2A>.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-540">It behaves exactly as <xref:System.Collections.Hashtable.ContainsKey%2A>.</span></span>  
  
 <span data-ttu-id="ad0ea-541">Этот метод является операцией o(1).</span><span class="sxs-lookup"><span data-stu-id="ad0ea-541">This method is an O(1) operation.</span></span>  
  
 <span data-ttu-id="ad0ea-542">Начиная с .NET Framework 2.0, этот метод использует объекты коллекции <xref:System.Object.Equals%2A> и <xref:System.IComparable.CompareTo%2A> методы `item` для определения наличия элемента.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-542">Starting with the .NET Framework 2.0, this method uses the collection's objects' <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether item exists.</span></span> <span data-ttu-id="ad0ea-543">В более ранних версиях платформы .NET Framework, такое определение осуществлялось с помощью <xref:System.Object.Equals%2A> и <xref:System.IComparable.CompareTo%2A> методы `item` параметр для объектов в коллекции.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-543">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ad0ea-544">В следующем примере показано, как определить, является ли <xref:System.Collections.Hashtable> содержит определенный элемент.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-544">The following example shows how to determine whether the <xref:System.Collections.Hashtable> contains a specific element.</span></span>  
  
 [!code-cpp[Classic Hashtable.Contains Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Hashtable.Contains Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Hashtable.Contains Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Hashtable.Contains Example/CS/source.cs#1)]
 [!code-vb[Classic Hashtable.Contains Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Hashtable.Contains Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ad0ea-545"><paramref name="key" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-545"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Collections.Hashtable.ContainsKey(System.Object)" />
        <altmember cref="T:System.Collections.IDictionary" />
      </Docs>
    </Member>
    <Member MemberName="ContainsKey">
      <MemberSignature Language="C#" Value="public virtual bool ContainsKey (object key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ContainsKey(object key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.ContainsKey(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ContainsKey (key As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ContainsKey(System::Object ^ key);" />
      <MemberSignature Language="F#" Value="abstract member ContainsKey : obj -&gt; bool&#xA;override this.ContainsKey : obj -&gt; bool" Usage="hashtable.ContainsKey key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="ad0ea-546">Ключ, который требуется найти в <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-546">The key to locate in the <see cref="T:System.Collections.Hashtable" />.</span></span></param>
        <summary><span data-ttu-id="ad0ea-547">Определяет, содержит ли объект <see cref="T:System.Collections.Hashtable" /> указанный ключ.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-547">Determines whether the <see cref="T:System.Collections.Hashtable" /> contains a specific key.</span></span></summary>
        <returns><span data-ttu-id="ad0ea-548"><see langword="true" />, если <see cref="T:System.Collections.Hashtable" /> содержит элемент с указанным ключом, в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-548"><see langword="true" /> if the <see cref="T:System.Collections.Hashtable" /> contains an element with the specified key; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad0ea-549">Этот метод работает точно так, как <xref:System.Collections.Hashtable.Contains%2A>.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-549">This method behaves exactly as <xref:System.Collections.Hashtable.Contains%2A>.</span></span>  
  
 <span data-ttu-id="ad0ea-550">Этот метод является операцией o(1).</span><span class="sxs-lookup"><span data-stu-id="ad0ea-550">This method is an O(1) operation.</span></span>  
  
 <span data-ttu-id="ad0ea-551">Начиная с .NET Framework 2.0, этот метод использует объекты коллекции <xref:System.Object.Equals%2A> и <xref:System.IComparable.CompareTo%2A> методы `item` для определения наличия элемента.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-551">Starting with the .NET Framework 2.0, this method uses the collection's objects' <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether item exists.</span></span> <span data-ttu-id="ad0ea-552">В более ранних версиях платформы .NET Framework, такое определение осуществлялось с помощью <xref:System.Object.Equals%2A> и <xref:System.IComparable.CompareTo%2A> методы `item` параметр для объектов в коллекции.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-552">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ad0ea-553">В следующем примере показано, как определить, является ли <xref:System.Collections.Hashtable> содержит определенный элемент.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-553">The following example shows how to determine whether the <xref:System.Collections.Hashtable> contains a specific element.</span></span>  
  
 [!code-cpp[Classic Hashtable.Contains Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Hashtable.Contains Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Hashtable.Contains Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Hashtable.Contains Example/CS/source.cs#1)]
 [!code-vb[Classic Hashtable.Contains Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Hashtable.Contains Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ad0ea-554"><paramref name="key" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-554"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Collections.Hashtable.Contains(System.Object)" />
        <altmember cref="M:System.Collections.Hashtable.ContainsValue(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ContainsValue">
      <MemberSignature Language="C#" Value="public virtual bool ContainsValue (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ContainsValue(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.ContainsValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ContainsValue (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ContainsValue(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member ContainsValue : obj -&gt; bool&#xA;override this.ContainsValue : obj -&gt; bool" Usage="hashtable.ContainsValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="ad0ea-555">Значение, которое требуется найти в словаре <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-555">The value to locate in the <see cref="T:System.Collections.Hashtable" />.</span></span> <span data-ttu-id="ad0ea-556">Допускается значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-556">The value can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="ad0ea-557">Определяет, содержит ли коллекция <see cref="T:System.Collections.Hashtable" /> указанное значение.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-557">Determines whether the <see cref="T:System.Collections.Hashtable" /> contains a specific value.</span></span></summary>
        <returns><span data-ttu-id="ad0ea-558">Значение <see langword="true" />, если объект <see cref="T:System.Collections.Hashtable" /> содержит элемент с указанным значением параметра <paramref name="value" />; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-558"><see langword="true" /> if the <see cref="T:System.Collections.Hashtable" /> contains an element with the specified <paramref name="value" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad0ea-559">Значения элементов <xref:System.Collections.Hashtable> сравниваются с указанным значением с помощью <xref:System.Object.Equals%2A?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-559">The values of the elements of the <xref:System.Collections.Hashtable> are compared to the specified value using the <xref:System.Object.Equals%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="ad0ea-560">Этот метод выполняет линейный поиск; Таким образом, этот метод является операцией O (`n`) операции, где `n` является <xref:System.Collections.Hashtable.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-560">This method performs a linear search; therefore, this method is an O(`n`) operation, where `n` is <xref:System.Collections.Hashtable.Count%2A>.</span></span>  
  
 <span data-ttu-id="ad0ea-561">Начиная с .NET Framework 2.0, этот метод использует объекты коллекции <xref:System.Object.Equals%2A> и <xref:System.IComparable.CompareTo%2A> методы `item` для определения наличия элемента.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-561">Starting with the .NET Framework 2.0, this method uses the collection's objects' <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether item exists.</span></span> <span data-ttu-id="ad0ea-562">В более ранних версиях платформы .NET Framework, такое определение осуществлялось с помощью <xref:System.Object.Equals%2A> и <xref:System.IComparable.CompareTo%2A> методы `item` параметр для объектов в коллекции.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-562">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ad0ea-563">В следующем примере показано, как определить, является ли <xref:System.Collections.Hashtable> содержит определенный элемент.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-563">The following example shows how to determine whether the <xref:System.Collections.Hashtable> contains a specific element.</span></span>  
  
 [!code-cpp[Classic Hashtable.Contains Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Hashtable.Contains Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Hashtable.Contains Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Hashtable.Contains Example/CS/source.cs#1)]
 [!code-vb[Classic Hashtable.Contains Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Hashtable.Contains Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Hashtable.ContainsKey(System.Object)" />
        <altmember cref="M:System.Object.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public virtual void CopyTo (Array array, int arrayIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array array, int32 arrayIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ array, int arrayIndex);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : Array * int -&gt; unit&#xA;override this.CopyTo : Array * int -&gt; unit" Usage="hashtable.CopyTo (array, arrayIndex)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="arrayIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="ad0ea-564">Одномерный массив <see cref="T:System.Array" />, который является назначением для объектов <see cref="T:System.Collections.DictionaryEntry" />, копируемых из коллекции <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-564">The one-dimensional <see cref="T:System.Array" /> that is the destination of the <see cref="T:System.Collections.DictionaryEntry" /> objects copied from <see cref="T:System.Collections.Hashtable" />.</span></span> <span data-ttu-id="ad0ea-565">Массив <see cref="T:System.Array" /> должен иметь индексацию, начинающуюся с нуля.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-565">The <see cref="T:System.Array" /> must have zero-based indexing.</span></span></param>
        <param name="arrayIndex"><span data-ttu-id="ad0ea-566">Отсчитываемый от нуля индекс в массиве <paramref name="array" />, указывающий начало копирования.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-566">The zero-based index in <paramref name="array" /> at which copying begins.</span></span></param>
        <summary><span data-ttu-id="ad0ea-567">Копирует элементы коллекции <see cref="T:System.Collections.Hashtable" /> в экземпляр класса одномерного массива <see cref="T:System.Array" /> по указанному индексу.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-567">Copies the <see cref="T:System.Collections.Hashtable" /> elements to a one-dimensional <see cref="T:System.Array" /> instance at the specified index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad0ea-568">Элементы копируются <xref:System.Array> в том же порядке, в котором перечислитель перемещается по <xref:System.Collections.Hashtable>.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-568">The elements are copied to the <xref:System.Array> in the same order in which the enumerator iterates through the <xref:System.Collections.Hashtable>.</span></span>  
  
 <span data-ttu-id="ad0ea-569">Чтобы скопировать только ключи в <xref:System.Collections.Hashtable>, используйте `Hashtable.Keys.CopyTo`.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-569">To copy only the keys in the <xref:System.Collections.Hashtable>, use `Hashtable.Keys.CopyTo`.</span></span>  
  
 <span data-ttu-id="ad0ea-570">Чтобы скопировать нужные значения в <xref:System.Collections.Hashtable>, используйте `Hashtable.Values.CopyTo`.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-570">To copy only the values in the <xref:System.Collections.Hashtable>, use `Hashtable.Values.CopyTo`.</span></span>  
  
 <span data-ttu-id="ad0ea-571">Этот метод является операцией O (`n`) операции, где `n` является <xref:System.Collections.Hashtable.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-571">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Hashtable.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ad0ea-572">В следующем примере показано, как скопировать список ключей или список значений в <xref:System.Collections.Hashtable> в одномерный <xref:System.Array>.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-572">The following example shows how to copy the list of keys or the list of values in a <xref:System.Collections.Hashtable> into a one-dimensional <xref:System.Array>.</span></span>  
  
 [!code-cpp[Classic Hashtable.CopyTo Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Hashtable.CopyTo Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Hashtable.CopyTo Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Hashtable.CopyTo Example/CS/source.cs#1)]
 [!code-vb[Classic Hashtable.CopyTo Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Hashtable.CopyTo Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ad0ea-573"><paramref name="array" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-573"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="ad0ea-574">Значение параметра <paramref name="arrayIndex" /> меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-574"><paramref name="arrayIndex" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ad0ea-575">Массив <paramref name="array" /> является многомерным.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-575"><paramref name="array" /> is multidimensional.</span></span>  
  
<span data-ttu-id="ad0ea-576">-или-</span><span class="sxs-lookup"><span data-stu-id="ad0ea-576">-or-</span></span> 
<span data-ttu-id="ad0ea-577">Число элементов в исходной коллекции <see cref="T:System.Collections.Hashtable" /> больше доступного места от положения, заданного значением параметра <paramref name="arrayIndex" />, до конца массива назначения <paramref name="array" />.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-577">The number of elements in the source <see cref="T:System.Collections.Hashtable" /> is greater than the available space from <paramref name="arrayIndex" /> to the end of the destination <paramref name="array" />.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="ad0ea-578">Тип исходного массива <see cref="T:System.Collections.Hashtable" /> не может быть автоматически приведен к типу массива назначения <paramref name="array" />.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-578">The type of the source <see cref="T:System.Collections.Hashtable" /> cannot be cast automatically to the type of the destination <paramref name="array" />.</span></span></exception>
        <altmember cref="T:System.Array" />
        <altmember cref="T:System.Collections.DictionaryEntry" />
        <altmember cref="M:System.Collections.Hashtable.GetEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public virtual int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Hashtable.Count" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Collections.Hashtable.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ad0ea-579">Возвращает число пар "ключ-значение", содержащихся в словаре <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-579">Gets the number of key/value pairs contained in the <see cref="T:System.Collections.Hashtable" />.</span></span></summary>
        <value><span data-ttu-id="ad0ea-580">Число пар "ключ-значение", содержащихся в словаре <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-580">The number of key/value pairs contained in the <see cref="T:System.Collections.Hashtable" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad0ea-581">Получение значения данного свойства является операцией порядка сложности O(1).</span><span class="sxs-lookup"><span data-stu-id="ad0ea-581">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EqualityComparer">
      <MemberSignature Language="C#" Value="protected System.Collections.IEqualityComparer EqualityComparer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IEqualityComparer EqualityComparer" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Hashtable.EqualityComparer" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property EqualityComparer As IEqualityComparer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Collections::IEqualityComparer ^ EqualityComparer { System::Collections::IEqualityComparer ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EqualityComparer : System.Collections.IEqualityComparer" Usage="System.Collections.Hashtable.EqualityComparer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEqualityComparer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ad0ea-582">Получает объект <see cref="T:System.Collections.IEqualityComparer" />, предназначенный для использования применительно к коллекции <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-582">Gets the <see cref="T:System.Collections.IEqualityComparer" /> to use for the <see cref="T:System.Collections.Hashtable" />.</span></span></summary>
        <value><span data-ttu-id="ad0ea-583">Интерфейс <see cref="T:System.Collections.IEqualityComparer" />, предназначенный для использования применительно к коллекции <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-583">The <see cref="T:System.Collections.IEqualityComparer" /> to use for the <see cref="T:System.Collections.Hashtable" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad0ea-584"><xref:System.Collections.IEqualityComparer> Включает в себя функцию сравнения и поставщик хэш-кода.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-584">The <xref:System.Collections.IEqualityComparer> includes both the comparer and the hash code provider.</span></span> <span data-ttu-id="ad0ea-585">Если <xref:System.Collections.IEqualityComparer> используется в <xref:System.Collections.Hashtable> конструктор, объекты, используемые в качестве ключей в <xref:System.Collections.Hashtable> не требуется переопределять <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> и <xref:System.Object.Equals%2A?displayProperty=nameWithType> методы.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-585">If an <xref:System.Collections.IEqualityComparer> is used in the <xref:System.Collections.Hashtable> constructor, the objects used as keys in the <xref:System.Collections.Hashtable> are not required to override the <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> and <xref:System.Object.Equals%2A?displayProperty=nameWithType> methods.</span></span>  
  
 <span data-ttu-id="ad0ea-586">Получение значения данного свойства является операцией порядка сложности O(1).</span><span class="sxs-lookup"><span data-stu-id="ad0ea-586">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ad0ea-587">Свойству присвоено значение, однако хэш-таблица была создана с помощью интерфейсов <see cref="T:System.Collections.IHashCodeProvider" /> и <see cref="T:System.Collections.IComparer" />.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-587">The property is set to a value, but the hash table was created using an <see cref="T:System.Collections.IHashCodeProvider" /> and an <see cref="T:System.Collections.IComparer" />.</span></span></exception>
        <altmember cref="T:System.Collections.Comparer" />
        <altmember cref="T:System.Collections.IEqualityComparer" />
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public virtual System.Collections.IDictionaryEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IDictionaryEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEnumerator () As IDictionaryEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IDictionaryEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IDictionaryEnumerator&#xA;override this.GetEnumerator : unit -&gt; System.Collections.IDictionaryEnumerator" Usage="hashtable.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionaryEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ad0ea-588">Возвращает объект <see cref="T:System.Collections.IDictionaryEnumerator" />, осуществляющий перебор <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-588">Returns an <see cref="T:System.Collections.IDictionaryEnumerator" /> that iterates through the <see cref="T:System.Collections.Hashtable" />.</span></span></summary>
        <returns><span data-ttu-id="ad0ea-589">Интерфейс <see cref="T:System.Collections.IDictionaryEnumerator" /> для <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-589">An <see cref="T:System.Collections.IDictionaryEnumerator" /> for the <see cref="T:System.Collections.Hashtable" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad0ea-590">[Visual Basic, C#]</span><span class="sxs-lookup"><span data-stu-id="ad0ea-590">[Visual Basic, C#]</span></span>  
  
 <span data-ttu-id="ad0ea-591">Инструкция `foreach` языка C# (`for each` в Visual Basic) позволяет скрыть сложный механизм перечислителей.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-591">The `foreach` statement of the C# language (`for each` in Visual Basic) hides the complexity of the enumerators.</span></span>  <span data-ttu-id="ad0ea-592">Поэтому рекомендуется вместо непосредственного использования перечислителя применять ключевое слово `foreach`.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-592">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="ad0ea-593">Перечислители могут использоваться для чтения данных в коллекции, но не для ее изменения.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-593">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="ad0ea-594">Изначально перечислитель располагается перед первым элементом коллекции.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-594">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="ad0ea-595">Метод <xref:System.Collections.IEnumerator.Reset%2A> также переводит перечислитель в эту позицию.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-595"><xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position.</span></span>  <span data-ttu-id="ad0ea-596">В этой позиции значение свойства <xref:System.Collections.IEnumerator.Current%2A> не определено.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-596">At this position, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="ad0ea-597">Поэтому необходимо вызвать метод <xref:System.Collections.IEnumerator.MoveNext%2A>, чтобы переместить перечислитель к первому элементу коллекции до считывания значения свойства <xref:System.Collections.IEnumerator.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-597">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="ad0ea-598"><xref:System.Collections.IEnumerator.Current%2A> возвращает тот же объект, пока не будет вызван метод <xref:System.Collections.IEnumerator.MoveNext%2A> или <xref:System.Collections.IEnumerator.Reset%2A>.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-598"><xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="ad0ea-599"><xref:System.Collections.IEnumerator.MoveNext%2A> задает <xref:System.Collections.IEnumerator.Current%2A> в качестве значения для следующего элемента.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-599"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="ad0ea-600">Если <xref:System.Collections.IEnumerator.MoveNext%2A> передает в конец коллекции, перечислитель помещается за последним элементом в коллекции и <xref:System.Collections.IEnumerator.MoveNext%2A> возвращает `false`.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-600">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="ad0ea-601">Если перечислитель находится в этой позиции, последующие вызовы <xref:System.Collections.IEnumerator.MoveNext%2A> также возвращать `false`.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-601">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="ad0ea-602">Если последний вызов <xref:System.Collections.IEnumerator.MoveNext%2A> возвращается `false`, <xref:System.Collections.IEnumerator.Current%2A> не определено.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-602">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="ad0ea-603">Чтобы снова задать в качестве значения свойства <xref:System.Collections.IEnumerator.Current%2A> первый элемент коллекции, можно последовательно вызвать методы <xref:System.Collections.IEnumerator.Reset%2A> и<xref:System.Collections.IEnumerator.MoveNext%2A>.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-603">To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="ad0ea-604">Перечислитель остается действительным, пока коллекция не изменяется.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-604">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="ad0ea-605">Если в коллекцию вносятся изменения, например добавляются, изменяются или удаляются элементы, перечислитель становится недействительным без возможности восстановление, а его поведение не определено.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-605">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</span></span>  
  
 <span data-ttu-id="ad0ea-606">Перечислитель не имеет монопольного доступа к коллекции, поэтому перечисление элементов коллекции само по себе не является потокобезопасной процедурой.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-606">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread safe procedure.</span></span>  <span data-ttu-id="ad0ea-607">Чтобы гарантировать потокобезопасность, можно заблокировать коллекцию на время всего перечисления.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-607">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="ad0ea-608">Чтобы разрешить доступ к коллекции из нескольких потоков для чтения и записи, необходимо реализовать собственную синхронизацию.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-608">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="ad0ea-609">Этот метод является операцией o(1).</span><span class="sxs-lookup"><span data-stu-id="ad0ea-609">This method is an O(1) operation.</span></span>  
  
 <span data-ttu-id="ad0ea-610">Поскольку сериализация и десериализация перечислитель для <xref:System.Collections.Hashtable> может привести к элементы, которые становятся переупорядочить, это не обязательно для продолжения перечисления без вызова <xref:System.Collections.IEnumerator.Reset%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-610">Because serializing and deserializing an enumerator for a <xref:System.Collections.Hashtable> can cause the elements to become reordered, it is not possible to continue enumeration without calling the <xref:System.Collections.IEnumerator.Reset%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ad0ea-611">В следующем примере сравнивается использование <xref:System.Collections.Hashtable.GetEnumerator%2A> и `foreach` перечислить содержимое <xref:System.Collections.Hashtable>.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-611">The following example compares the use of <xref:System.Collections.Hashtable.GetEnumerator%2A> and `foreach` to enumerate the contents of a <xref:System.Collections.Hashtable>.</span></span>  
  
 [!code-cpp[Classic Hashtable Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Hashtable Example/CPP/source2.cpp#2)]
 [!code-csharp[Classic Hashtable Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Hashtable Example/CS/source2.cs#2)]
 [!code-vb[Classic Hashtable Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Hashtable Example/VB/source2.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IDictionaryEnumerator" />
        <altmember cref="T:System.Collections.IEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="GetHash">
      <MemberSignature Language="C#" Value="protected virtual int GetHash (object key);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 GetHash(object key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.GetHash(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetHash (key As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int GetHash(System::Object ^ key);" />
      <MemberSignature Language="F#" Value="abstract member GetHash : obj -&gt; int&#xA;override this.GetHash : obj -&gt; int" Usage="hashtable.GetHash key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="ad0ea-612">Объект <see cref="T:System.Object" />, для которого необходимо вернуть хэш-код.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-612">The <see cref="T:System.Object" /> for which a hash code is to be returned.</span></span></param>
        <summary><span data-ttu-id="ad0ea-613">Возвращает хэш-код указанного ключа.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-613">Returns the hash code for the specified key.</span></span></summary>
        <returns><span data-ttu-id="ad0ea-614">Хэш-код параметра <paramref name="key" />.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-614">The hash code for <paramref name="key" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad0ea-615">Если хэш-таблица была создана с определенным <xref:System.Collections.IHashCodeProvider> реализации, этот метод используется, поставщиком хэш-кода; в противном случае используется <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> реализацию `key`.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-615">If the hash table was created with a specific <xref:System.Collections.IHashCodeProvider> implementation, this method uses that hash code provider; otherwise, it uses the <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> implementation of `key`.</span></span>  
  
 <span data-ttu-id="ad0ea-616">Этот метод является операцией o(1).</span><span class="sxs-lookup"><span data-stu-id="ad0ea-616">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NullReferenceException"><span data-ttu-id="ad0ea-617"><paramref name="key" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-617"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Object.GetHashCode" />
        <altmember cref="T:System.Object" />
        <altmember cref="T:System.Collections.IHashCodeProvider" />
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="public virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="abstract member GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit&#xA;override this.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="hashtable.GetObjectData (info, context)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="ad0ea-618">Объект <see cref="T:System.Runtime.Serialization.SerializationInfo" />, который содержит сведения, требуемые для сериализации коллекции <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-618">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object containing the information required to serialize the <see cref="T:System.Collections.Hashtable" />.</span></span></param>
        <param name="context"><span data-ttu-id="ad0ea-619">Объект <see cref="T:System.Runtime.Serialization.StreamingContext" />, содержащий исходный объект и объект назначения для сериализованного потока, связанного с коллекцией <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-619">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> object containing the source and destination of the serialized stream associated with the <see cref="T:System.Collections.Hashtable" />.</span></span></param>
        <summary><span data-ttu-id="ad0ea-620">Реализует интерфейс <see cref="T:System.Runtime.Serialization.ISerializable" /> и возвращает данные, необходимые для сериализации коллекции <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-620">Implements the <see cref="T:System.Runtime.Serialization.ISerializable" /> interface and returns the data needed to serialize the <see cref="T:System.Collections.Hashtable" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad0ea-621">Этот метод является операцией O (`n`) операции, где `n` является <xref:System.Collections.Hashtable.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-621">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Hashtable.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ad0ea-622"><paramref name="info" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-622"><paramref name="info" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ad0ea-623">Коллекция была изменена.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-623">The collection was modified.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ad0ea-624">Требует полного доверия для непосредственного вызывающего объекта.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-624">requires full trust for the immediate caller.</span></span> <span data-ttu-id="ad0ea-625">Этот член не может использоваться частично доверенным или прозрачным кодом.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-625">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="T:System.Runtime.Serialization.ISerializable" />
        <altmember cref="T:System.Runtime.Serialization.SerializationInfo" />
        <altmember cref="T:System.Runtime.Serialization.StreamingContext" />
        <altmember cref="M:System.Collections.Hashtable.OnDeserialization(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="hcp">
      <MemberSignature Language="C#" Value="protected System.Collections.IHashCodeProvider hcp { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IHashCodeProvider hcp" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Hashtable.hcp" />
      <MemberSignature Language="VB.NET" Value="Protected Property hcp As IHashCodeProvider" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Collections::IHashCodeProvider ^ hcp { System::Collections::IHashCodeProvider ^ get(); void set(System::Collections::IHashCodeProvider ^ value); };" />
      <MemberSignature Language="F#" Value="member this.hcp : System.Collections.IHashCodeProvider with get, set" Usage="System.Collections.Hashtable.hcp" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.Obsolete("Please use EqualityComparer property.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IHashCodeProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ad0ea-626">Получает или задает объект, который может распределять хэш-коды.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-626">Gets or sets the object that can dispense hash codes.</span></span></summary>
        <value><span data-ttu-id="ad0ea-627">Объект, который может распределять хэш-коды.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-627">The object that can dispense hash codes.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad0ea-628">Получение значения данного свойства является операцией порядка сложности O(1).</span><span class="sxs-lookup"><span data-stu-id="ad0ea-628">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ad0ea-629">Свойству присвоено значение, однако хэш-таблица была создана с помощью объекта <see cref="T:System.Collections.IEqualityComparer" />.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-629">The property is set to a value, but the hash table was created using an <see cref="T:System.Collections.IEqualityComparer" />.</span></span></exception>
        <altmember cref="T:System.Collections.IHashCodeProvider" />
      </Docs>
    </Member>
    <Member MemberName="IsFixedSize">
      <MemberSignature Language="C#" Value="public virtual bool IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Hashtable.IsFixedSize" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsFixedSize As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsFixedSize { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsFixedSize : bool" Usage="System.Collections.Hashtable.IsFixedSize" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ad0ea-630">Получает значение, указывающее, имеет ли список <see cref="T:System.Collections.Hashtable" /> фиксированный размер.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-630">Gets a value indicating whether the <see cref="T:System.Collections.Hashtable" /> has a fixed size.</span></span></summary>
        <value><span data-ttu-id="ad0ea-631">Значение <see langword="true" />, если словарь <see cref="T:System.Collections.Hashtable" /> имеет фиксированный размер; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-631"><see langword="true" /> if the <see cref="T:System.Collections.Hashtable" /> has a fixed size; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="ad0ea-632">Значение по умолчанию — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-632">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad0ea-633">В созданной коллекции фиксированного размера запрещается добавлять или удалять элементы, но разрешается изменять существующие элементы.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-633">A collection with a fixed size does not allow the addition or removal of elements after the collection is created, but it allows the modification of existing elements.</span></span>  
  
 <span data-ttu-id="ad0ea-634">Коллекция с фиксированным размером является просто коллекцией с оболочкой, предотвращает добавление и удаление элементов; Поэтому если были внесены изменения в базовую коллекцию, включая добавление или удаление элементов, эти изменения отражаются в коллекции фиксированного размера.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-634">A collection with a fixed size is simply a collection with a wrapper that prevents adding and removing elements; therefore, if changes are made to the underlying collection, including the addition or removal of elements, the fixed-size collection reflects those changes.</span></span>  
  
 <span data-ttu-id="ad0ea-635">Получение значения данного свойства является операцией порядка сложности O(1).</span><span class="sxs-lookup"><span data-stu-id="ad0ea-635">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public virtual bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Hashtable.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Collections.Hashtable.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ad0ea-636">Получает значение, указывающее, является ли объект <see cref="T:System.Collections.Hashtable" /> доступным только для чтения.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-636">Gets a value indicating whether the <see cref="T:System.Collections.Hashtable" /> is read-only.</span></span></summary>
        <value><span data-ttu-id="ad0ea-637">Значение <see langword="true" />, если интерфейс <see cref="T:System.Collections.Hashtable" /> доступен только для чтения; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-637"><see langword="true" /> if the <see cref="T:System.Collections.Hashtable" /> is read-only; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="ad0ea-638">Значение по умолчанию — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-638">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad0ea-639">После создания коллекции, доступной только для чтения, не разрешается добавление элементов в коллекцию, их изменение или удаление.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-639">A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.</span></span>  
  
 <span data-ttu-id="ad0ea-640">Коллекция, которая доступна только для чтения — это просто коллекция с оболочкой, предотвращает изменение коллекции; Таким образом при внесении изменений в базовую коллекцию, эти изменения отражаются в коллекции только для чтения.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-640">A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.</span></span>  
  
 <span data-ttu-id="ad0ea-641">Получение значения данного свойства является операцией порядка сложности O(1).</span><span class="sxs-lookup"><span data-stu-id="ad0ea-641">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="public virtual bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Hashtable.IsSynchronized" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsSynchronized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSynchronized : bool" Usage="System.Collections.Hashtable.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ad0ea-642">Возвращает значение, показывающее, является ли доступ к коллекции <see cref="T:System.Collections.Hashtable" /> синхронизированным (потокобезопасным).</span><span class="sxs-lookup"><span data-stu-id="ad0ea-642">Gets a value indicating whether access to the <see cref="T:System.Collections.Hashtable" /> is synchronized (thread safe).</span></span></summary>
        <value><span data-ttu-id="ad0ea-643"><see langword="true" />, если доступ к классу <see cref="T:System.Collections.Hashtable" /> является синхронизированным (потокобезопасным); в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-643"><see langword="true" /> if access to the <see cref="T:System.Collections.Hashtable" /> is synchronized (thread safe); otherwise, <see langword="false" />.</span></span> <span data-ttu-id="ad0ea-644">Значение по умолчанию — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-644">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad0ea-645">Объект <xref:System.Collections.Hashtable> может поддерживать один поток и несколько читающих одновременно.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-645">A <xref:System.Collections.Hashtable> can support one writer and multiple readers concurrently.</span></span> <span data-ttu-id="ad0ea-646">Для обеспечения потокобезопасности, все операции должны осуществляться через оболочку, возвращенную <xref:System.Collections.Hashtable.Synchronized%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-646">To support multiple writers, all operations must be done through the wrapper returned by the <xref:System.Collections.Hashtable.Synchronized%2A> method.</span></span>  
  
 <span data-ttu-id="ad0ea-647">Перечисление коллекции само по себе не является потокобезопасной процедурой.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-647">Enumerating through a collection is intrinsically not a thread safe procedure.</span></span> <span data-ttu-id="ad0ea-648">Даже если коллекция синхронизирована, другие потоки могут ее изменить, что приведет к тому, что перечислитель создаст исключение.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-648">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="ad0ea-649">Для обеспечения потокобезопасности при перечислении можно либо заблокировать коллекцию на все время перечисления, либо перехватывать исключения, возникающие в результате изменений, внесенных другими потоками.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-649">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
 <span data-ttu-id="ad0ea-650">В следующем примере кода показано, как заблокировать коллекцию с помощью <xref:System.Collections.Hashtable.SyncRoot%2A> на все время перечисления:</span><span class="sxs-lookup"><span data-stu-id="ad0ea-650">The following code example shows how to lock the collection using the <xref:System.Collections.Hashtable.SyncRoot%2A> during the entire enumeration:</span></span>  
  
 [!code-cpp[Classic Hashtable.IsSynchronized Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Hashtable.IsSynchronized Example/CPP/remarks.cpp#2)]
 [!code-csharp[Classic Hashtable.IsSynchronized Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Hashtable.IsSynchronized Example/CS/remarks.cs#2)]
 [!code-vb[Classic Hashtable.IsSynchronized Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Hashtable.IsSynchronized Example/VB/remarks.vb#2)]  
  
   
  
## Examples  
 <span data-ttu-id="ad0ea-651">В следующем примере показано, как синхронизировать <xref:System.Collections.Hashtable>, определить <xref:System.Collections.Hashtable> синхронизированным и использовать синхронизированный <xref:System.Collections.Hashtable>.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-651">The following example shows how to synchronize a <xref:System.Collections.Hashtable>, determine if a <xref:System.Collections.Hashtable> is synchronized, and use a synchronized <xref:System.Collections.Hashtable>.</span></span>  
  
 [!code-cpp[Classic Hashtable.IsSynchronized Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Hashtable.IsSynchronized Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Hashtable.IsSynchronized Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Hashtable.IsSynchronized Example/CS/source.cs#1)]
 [!code-vb[Classic Hashtable.IsSynchronized Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Hashtable.IsSynchronized Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Hashtable.Synchronized(System.Collections.Hashtable)" />
        <altmember cref="P:System.Collections.Hashtable.SyncRoot" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual object this[object key] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(object)" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Hashtable.Item(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable Property Item(key As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ default[System::Object ^] { System::Object ^ get(System::Object ^ key); void set(System::Object ^ key, System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(obj) : obj with get, set" Usage="System.Collections.Hashtable.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.Item(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="ad0ea-652">Задаваемое или получаемое значение ключа.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-652">The key whose value to get or set.</span></span></param>
        <summary><span data-ttu-id="ad0ea-653">Получает или задает значение, связанное с заданным ключом.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-653">Gets or sets the value associated with the specified key.</span></span></summary>
        <value><span data-ttu-id="ad0ea-654">Значение, связанное с указанным ключом.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-654">The value associated with the specified key.</span></span> <span data-ttu-id="ad0ea-655">Если указанный ключ не найден, при попытке его получения возвращается значение <see langword="null" />, а при попытке задания ключа создается новый элемент с использованием указанного ключа.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-655">If the specified key is not found, attempting to get it returns <see langword="null" />, and attempting to set it creates a new element using the specified key.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad0ea-656">Это свойство предоставляет доступ к указанному элементу коллекции при использовании следующего синтаксиса: `myCollection[key]`.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-656">This property provides the ability to access a specific element in the collection by using the following syntax: `myCollection[key]`.</span></span>  
  
 <span data-ttu-id="ad0ea-657">Можно также использовать <xref:System.Collections.Hashtable.Item%2A> свойство для добавления новых элементов, задав значение ключа, который не существует в <xref:System.Collections.Hashtable>, например `myCollection["myNonexistentKey"] = myValue`.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-657">You can also use the <xref:System.Collections.Hashtable.Item%2A> property to add new elements by setting the value of a key that does not exist in the <xref:System.Collections.Hashtable>; for example, `myCollection["myNonexistentKey"] = myValue`.</span></span> <span data-ttu-id="ad0ea-658">Тем не менее если указанный ключ уже существует в <xref:System.Collections.Hashtable>, задание <xref:System.Collections.Hashtable.Item%2A> свойство перезаписывает прежнее значение.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-658">However, if the specified key already exists in the <xref:System.Collections.Hashtable>, setting the <xref:System.Collections.Hashtable.Item%2A> property overwrites the old value.</span></span> <span data-ttu-id="ad0ea-659">Напротив <xref:System.Collections.Hashtable.Add%2A> метод не изменяет существующие элементы.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-659">In contrast, the <xref:System.Collections.Hashtable.Add%2A> method does not modify existing elements.</span></span>  
  
 <span data-ttu-id="ad0ea-660">Ключ не может быть `null`, но может быть значение.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-660">A key cannot be `null`, but a value can be.</span></span> <span data-ttu-id="ad0ea-661">Чтобы различать `null` , возвращается, так как указанный ключ не найден и `null` , возвращается, так как значение указанного ключа `null`, использовать <xref:System.Collections.Hashtable.Contains%2A> метод или <xref:System.Collections.Hashtable.ContainsKey%2A> метод на предмет ключ существует в списке.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-661">To distinguish between `null` that is returned because the specified key is not found and `null` that is returned because the value of the specified key is `null`, use the <xref:System.Collections.Hashtable.Contains%2A> method or the <xref:System.Collections.Hashtable.ContainsKey%2A> method to determine if the key exists in the list.</span></span>  
  
 <span data-ttu-id="ad0ea-662">Получение значения этого свойства является операцией o(1). Задание этого свойства также является операцией o(1).</span><span class="sxs-lookup"><span data-stu-id="ad0ea-662">Retrieving the value of this property is an O(1) operation; setting the property is also an O(1) operation.</span></span>  
  
 <span data-ttu-id="ad0ea-663">C# Использует язык [ `this` ](~/docs/csharp/language-reference/keywords/this.md) ключевое слово для определения индексаторов вместо реализации <xref:System.Collections.IList.Item%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-663">The C# language uses the [`this`](~/docs/csharp/language-reference/keywords/this.md) keyword to define the indexers instead of implementing the <xref:System.Collections.IList.Item%2A> property.</span></span> <span data-ttu-id="ad0ea-664">В языке Visual Basic в качестве свойства по умолчанию реализовано свойство <xref:System.Collections.Hashtable.Item%2A>, предоставляющее те же возможности индексирования.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-664">Visual Basic implements <xref:System.Collections.Hashtable.Item%2A> as a default property, which provides the same indexing functionality.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ad0ea-665"><paramref name="key" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-665"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="ad0ea-666">Свойство задано, и список <see cref="T:System.Collections.Hashtable" /> доступен только для чтения.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-666">The property is set and the <see cref="T:System.Collections.Hashtable" /> is read-only.</span></span>  
  
<span data-ttu-id="ad0ea-667">-или-</span><span class="sxs-lookup"><span data-stu-id="ad0ea-667">-or-</span></span> 
<span data-ttu-id="ad0ea-668">Свойство задано, <paramref name="key" /> не существует в коллекции, а <see cref="T:System.Collections.Hashtable" /> имеет фиксированный размер.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-668">The property is set, <paramref name="key" /> does not exist in the collection, and the <see cref="T:System.Collections.Hashtable" /> has a fixed size.</span></span></exception>
        <altmember cref="M:System.Collections.Hashtable.Add(System.Object,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="KeyEquals">
      <MemberSignature Language="C#" Value="protected virtual bool KeyEquals (object item, object key);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool KeyEquals(object item, object key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.KeyEquals(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function KeyEquals (item As Object, key As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool KeyEquals(System::Object ^ item, System::Object ^ key);" />
      <MemberSignature Language="F#" Value="abstract member KeyEquals : obj * obj -&gt; bool&#xA;override this.KeyEquals : obj * obj -&gt; bool" Usage="hashtable.KeyEquals (item, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="ad0ea-669">Объект класса <see cref="T:System.Object" />, который требуется сравнить со значением ключа <paramref name="key" />.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-669">The <see cref="T:System.Object" /> to compare with <paramref name="key" />.</span></span></param>
        <param name="key"><span data-ttu-id="ad0ea-670">Ключ, существующий в коллекции <see cref="T:System.Collections.Hashtable" />, который требуется сравнить со значением параметра <paramref name="item" />.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-670">The key in the <see cref="T:System.Collections.Hashtable" /> to compare with <paramref name="item" />.</span></span></param>
        <summary><span data-ttu-id="ad0ea-671">Сравнивает указанный объект класса <see cref="T:System.Object" /> с указанным ключом, который содержится в коллекции <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-671">Compares a specific <see cref="T:System.Object" /> with a specific key in the <see cref="T:System.Collections.Hashtable" />.</span></span></summary>
        <returns><span data-ttu-id="ad0ea-672">Значение <see langword="true" />, если <paramref name="item" /> и <paramref name="key" /> равны; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-672"><see langword="true" /> if <paramref name="item" /> and <paramref name="key" /> are equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad0ea-673">Если хэш-таблица была создана с определенным <xref:System.Collections.IComparer> реализации, этот метод использует этот класс сравнения; это, <xref:System.Collections.IComparer.Compare%2A> (`item`, `key`).</span><span class="sxs-lookup"><span data-stu-id="ad0ea-673">If the hash table was created with a specific <xref:System.Collections.IComparer> implementation, this method uses that comparer; that is, <xref:System.Collections.IComparer.Compare%2A> (`item`, `key`).</span></span> <span data-ttu-id="ad0ea-674">В противном случае он использует `item.Equals(key)`.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-674">Otherwise, it uses `item.Equals(key)`.</span></span>  
  
 <span data-ttu-id="ad0ea-675">Этот метод является операцией o(1).</span><span class="sxs-lookup"><span data-stu-id="ad0ea-675">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ad0ea-676"><paramref name="item" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-676"><paramref name="item" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="ad0ea-677">-или-</span><span class="sxs-lookup"><span data-stu-id="ad0ea-677">-or-</span></span> 
 <span data-ttu-id="ad0ea-678"><paramref name="key" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-678"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Object" />
        <altmember cref="M:System.Collections.IComparer.Compare(System.Object,System.Object)" />
        <altmember cref="M:System.Object.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Keys">
      <MemberSignature Language="C#" Value="public virtual System.Collections.ICollection Keys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection Keys" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Hashtable.Keys" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Keys As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::ICollection ^ Keys { System::Collections::ICollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Keys : System.Collections.ICollection" Usage="System.Collections.Hashtable.Keys" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.Keys</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ad0ea-679">Получает коллекцию <see cref="T:System.Collections.ICollection" />, содержащую ключи из коллекции <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-679">Gets an <see cref="T:System.Collections.ICollection" /> containing the keys in the <see cref="T:System.Collections.Hashtable" />.</span></span></summary>
        <value><span data-ttu-id="ad0ea-680">Коллекция <see cref="T:System.Collections.ICollection" />, содержащая ключи из коллекции <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-680">An <see cref="T:System.Collections.ICollection" /> containing the keys in the <see cref="T:System.Collections.Hashtable" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad0ea-681">Порядок следования ключей в <xref:System.Collections.ICollection> не определен, но это же порядке, что связанные значения в <xref:System.Collections.ICollection> возвращаемые <xref:System.Collections.Hashtable.Values%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-681">The order of the keys in the <xref:System.Collections.ICollection> is unspecified, but it is the same order as the associated values in the <xref:System.Collections.ICollection> returned by the <xref:System.Collections.Hashtable.Values%2A> method.</span></span>  
  
 <span data-ttu-id="ad0ea-682">Возвращенный <xref:System.Collections.ICollection> не является статической копией; вместо этого <xref:System.Collections.ICollection> ссылается на ключи в исходном <xref:System.Collections.Hashtable>.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-682">The returned <xref:System.Collections.ICollection> is not a static copy; instead, the <xref:System.Collections.ICollection> refers back to the keys in the original <xref:System.Collections.Hashtable>.</span></span> <span data-ttu-id="ad0ea-683">Следовательно, изменения для <xref:System.Collections.Hashtable> отражаться в по-прежнему <xref:System.Collections.ICollection>.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-683">Therefore, changes to the <xref:System.Collections.Hashtable> continue to be reflected in the <xref:System.Collections.ICollection>.</span></span>  
  
 <span data-ttu-id="ad0ea-684">Получение значения данного свойства является операцией порядка сложности O(1).</span><span class="sxs-lookup"><span data-stu-id="ad0ea-684">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.ICollection" />
        <altmember cref="P:System.Collections.Hashtable.Values" />
      </Docs>
    </Member>
    <Member MemberName="OnDeserialization">
      <MemberSignature Language="C#" Value="public virtual void OnDeserialization (object sender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnDeserialization(object sender) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.OnDeserialization(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnDeserialization (sender As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnDeserialization(System::Object ^ sender);" />
      <MemberSignature Language="F#" Value="abstract member OnDeserialization : obj -&gt; unit&#xA;override this.OnDeserialization : obj -&gt; unit" Usage="hashtable.OnDeserialization sender" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="sender"><span data-ttu-id="ad0ea-685">Источник события десериализации.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-685">The source of the deserialization event.</span></span></param>
        <summary><span data-ttu-id="ad0ea-686">Реализует интерфейс <see cref="T:System.Runtime.Serialization.ISerializable" /> и вызывает событие десериализации при завершении десериализации.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-686">Implements the <see cref="T:System.Runtime.Serialization.ISerializable" /> interface and raises the deserialization event when the deserialization is complete.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad0ea-687">Этот метод является операцией O (`n`) операции, где `n` является <xref:System.Collections.Hashtable.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-687">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Hashtable.Count%2A>.</span></span>  
  
 <span data-ttu-id="ad0ea-688">Поскольку сериализация и десериализация перечислитель для <xref:System.Collections.Hashtable> может привести к элементы, которые становятся переупорядочить, это не обязательно для продолжения перечисления без вызова <xref:System.Collections.IEnumerator.Reset%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-688">Because serializing and deserializing an enumerator for a <xref:System.Collections.Hashtable> can cause the elements to become reordered, it is not possible to continue enumeration without calling the <xref:System.Collections.IEnumerator.Reset%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.Serialization.SerializationException"><span data-ttu-id="ad0ea-689">Объект <see cref="T:System.Runtime.Serialization.SerializationInfo" />, связанный с текущей коллекцией <see cref="T:System.Collections.Hashtable" />, недействителен.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-689">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object associated with the current <see cref="T:System.Collections.Hashtable" /> is invalid.</span></span></exception>
        <altmember cref="T:System.Runtime.Serialization.ISerializable" />
        <altmember cref="M:System.Collections.Hashtable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public virtual void Remove (object key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Remove(object key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Remove (key As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Remove(System::Object ^ key);" />
      <MemberSignature Language="F#" Value="abstract member Remove : obj -&gt; unit&#xA;override this.Remove : obj -&gt; unit" Usage="hashtable.Remove key" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="ad0ea-690">Ключ элемента, который требуется удалить.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-690">The key of the element to remove.</span></span></param>
        <summary><span data-ttu-id="ad0ea-691">Удаляет элемент с указанным ключом из объекта <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-691">Removes the element with the specified key from the <see cref="T:System.Collections.Hashtable" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad0ea-692">Если <xref:System.Collections.Hashtable> не содержит элемент с указанным ключом, <xref:System.Collections.Hashtable> остается неизменным.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-692">If the <xref:System.Collections.Hashtable> does not contain an element with the specified key, the <xref:System.Collections.Hashtable> remains unchanged.</span></span> <span data-ttu-id="ad0ea-693">Исключение не возникает.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-693">No exception is thrown.</span></span>  
  
 <span data-ttu-id="ad0ea-694">Этот метод является операцией o(1).</span><span class="sxs-lookup"><span data-stu-id="ad0ea-694">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ad0ea-695">В следующем примере показано, как для удаления элементов из <xref:System.Collections.Hashtable>.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-695">The following example shows how to remove elements from the <xref:System.Collections.Hashtable>.</span></span>  
  
 [!code-cpp[Classic Hashtable.Remove Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Hashtable.Remove Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Hashtable.Remove Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Hashtable.Remove Example/CS/source.cs#1)]
 [!code-vb[Classic Hashtable.Remove Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Hashtable.Remove Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ad0ea-696"><paramref name="key" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-696"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="ad0ea-697">Объект <see cref="T:System.Collections.Hashtable" /> доступен только для чтения.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-697">The <see cref="T:System.Collections.Hashtable" /> is read-only.</span></span>  
  
<span data-ttu-id="ad0ea-698">-или-</span><span class="sxs-lookup"><span data-stu-id="ad0ea-698">-or-</span></span> 
<span data-ttu-id="ad0ea-699"><see cref="T:System.Collections.Hashtable" /> имеет фиксированный размер.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-699">The <see cref="T:System.Collections.Hashtable" /> has a fixed size.</span></span></exception>
        <altmember cref="M:System.Collections.Hashtable.Add(System.Object,System.Object)" />
        <altmember cref="M:System.Collections.IDictionary.Remove(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Synchronized">
      <MemberSignature Language="C#" Value="public static System.Collections.Hashtable Synchronized (System.Collections.Hashtable table);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Hashtable Synchronized(class System.Collections.Hashtable table) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.Synchronized(System.Collections.Hashtable)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Synchronized (table As Hashtable) As Hashtable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Hashtable ^ Synchronized(System::Collections::Hashtable ^ table);" />
      <MemberSignature Language="F#" Value="static member Synchronized : System.Collections.Hashtable -&gt; System.Collections.Hashtable" Usage="System.Collections.Hashtable.Synchronized table" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Hashtable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="table" Type="System.Collections.Hashtable" />
      </Parameters>
      <Docs>
        <param name="table"><span data-ttu-id="ad0ea-700">Коллекция <see cref="T:System.Collections.Hashtable" />, которую требуется синхронизировать.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-700">The <see cref="T:System.Collections.Hashtable" /> to synchronize.</span></span></param>
        <summary><span data-ttu-id="ad0ea-701">Возвращает синхронизированную (потокобезопасную) оболочку коллекции <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-701">Returns a synchronized (thread-safe) wrapper for the <see cref="T:System.Collections.Hashtable" />.</span></span></summary>
        <returns><span data-ttu-id="ad0ea-702">Синхронизированная (потокобезопасная) оболочка коллекции <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-702">A synchronized (thread-safe) wrapper for the <see cref="T:System.Collections.Hashtable" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad0ea-703"><xref:System.Collections.Hashtable.Synchronized%2A> Метод является поточно-ориентированным для нескольких модулей чтения и записи.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-703">The <xref:System.Collections.Hashtable.Synchronized%2A> method is thread safe for multiple readers and writers.</span></span> <span data-ttu-id="ad0ea-704">Более того синхронизированная оболочка гарантирует, что имеется только один поток записи за раз.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-704">Furthermore, the synchronized wrapper ensures that there is only one writer writing at a time.</span></span>  
  
 <span data-ttu-id="ad0ea-705">Перечисление коллекции не является потокобезопасной процедурой.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-705">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="ad0ea-706">Даже если коллекция синхронизирована, другие потоки могут ее изменить, что приведет к тому, что перечислитель создаст исключение.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-706">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="ad0ea-707">Для обеспечения потокобезопасности при перечислении можно либо заблокировать коллекцию на все время перечисления, либо перехватывать исключения, возникающие в результате изменений, внесенных другими потоками.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-707">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
 <span data-ttu-id="ad0ea-708">В следующем примере кода показано, как заблокировать коллекцию с помощью <xref:System.Collections.Hashtable.SyncRoot%2A> на все время перечисления:</span><span class="sxs-lookup"><span data-stu-id="ad0ea-708">The following code example shows how to lock the collection using the <xref:System.Collections.Hashtable.SyncRoot%2A> during the entire enumeration:</span></span>  
  
 [!code-cpp[Classic Hashtable.IsSynchronized Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Hashtable.IsSynchronized Example/CPP/remarks.cpp#2)]
 [!code-csharp[Classic Hashtable.IsSynchronized Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Hashtable.IsSynchronized Example/CS/remarks.cs#2)]
 [!code-vb[Classic Hashtable.IsSynchronized Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Hashtable.IsSynchronized Example/VB/remarks.vb#2)]  
  
 <span data-ttu-id="ad0ea-709">Этот метод является операцией o(1).</span><span class="sxs-lookup"><span data-stu-id="ad0ea-709">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ad0ea-710">В следующем примере показано, как синхронизировать <xref:System.Collections.Hashtable>, определить <xref:System.Collections.Hashtable> синхронизированным и использовать синхронизированный <xref:System.Collections.Hashtable>.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-710">The following example shows how to synchronize a <xref:System.Collections.Hashtable>, determine if a <xref:System.Collections.Hashtable> is synchronized, and use a synchronized <xref:System.Collections.Hashtable>.</span></span>  
  
 [!code-cpp[Classic Hashtable.IsSynchronized Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Hashtable.IsSynchronized Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Hashtable.IsSynchronized Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Hashtable.IsSynchronized Example/CS/source.cs#1)]
 [!code-vb[Classic Hashtable.IsSynchronized Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Hashtable.IsSynchronized Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ad0ea-711"><paramref name="table" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-711"><paramref name="table" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="P:System.Collections.Hashtable.IsSynchronized" />
        <altmember cref="P:System.Collections.Hashtable.SyncRoot" />
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public virtual object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Hashtable.SyncRoot" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SyncRoot As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SyncRoot : obj" Usage="System.Collections.Hashtable.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ad0ea-712">Получает объект, с помощью которого можно синхронизировать доступ к коллекции <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-712">Gets an object that can be used to synchronize access to the <see cref="T:System.Collections.Hashtable" />.</span></span></summary>
        <value><span data-ttu-id="ad0ea-713">Объект, который может использоваться для синхронизации доступа к <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-713">An object that can be used to synchronize access to the <see cref="T:System.Collections.Hashtable" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad0ea-714">Чтобы создать синхронизированную версию <xref:System.Collections.Hashtable>, используйте <xref:System.Collections.Hashtable.Synchronized%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-714">To create a synchronized version of the <xref:System.Collections.Hashtable>, use the <xref:System.Collections.Hashtable.Synchronized%2A> method.</span></span> <span data-ttu-id="ad0ea-715">Однако производные классы могут предоставлять собственную синхронизированную версию <xref:System.Collections.Hashtable> с помощью <xref:System.Collections.Hashtable.SyncRoot%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-715">However, derived classes can provide their own synchronized version of the <xref:System.Collections.Hashtable> using the <xref:System.Collections.Hashtable.SyncRoot%2A> property.</span></span> <span data-ttu-id="ad0ea-716">Синхронизированный код должен выполнять операции над <xref:System.Collections.Hashtable.SyncRoot%2A> из <xref:System.Collections.Hashtable>, но не с самим <xref:System.Collections.Hashtable> .</span><span class="sxs-lookup"><span data-stu-id="ad0ea-716">The synchronizing code must perform operations on the <xref:System.Collections.Hashtable.SyncRoot%2A> of the <xref:System.Collections.Hashtable>, not directly on the <xref:System.Collections.Hashtable> .</span></span> <span data-ttu-id="ad0ea-717">Это обеспечивает правильную работу коллекций, являющихся производными других объектов.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-717">This ensures proper operation of collections that are derived from other objects.</span></span> <span data-ttu-id="ad0ea-718">В частности, это обеспечивает правильную синхронизацию с другими потоками, которые могут одновременно вносить изменения <xref:System.Collections.Hashtable> объекта.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-718">Specifically, it maintains proper synchronization with other threads that might be simultaneously modifying the <xref:System.Collections.Hashtable> object.</span></span>  
  
 <span data-ttu-id="ad0ea-719">Перечисление коллекции само по себе не является потокобезопасной процедурой.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-719">Enumerating through a collection is intrinsically not a thread safe procedure.</span></span> <span data-ttu-id="ad0ea-720">Даже если коллекция синхронизирована, другие потоки могут ее изменить, что приведет к тому, что перечислитель создаст исключение.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-720">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="ad0ea-721">Для обеспечения потокобезопасности при перечислении можно либо заблокировать коллекцию на все время перечисления, либо перехватывать исключения, возникающие в результате изменений, внесенных другими потоками.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-721">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
 <span data-ttu-id="ad0ea-722">В следующем примере кода показано, как заблокировать коллекцию с помощью <xref:System.Collections.Hashtable.SyncRoot%2A> на все время перечисления:</span><span class="sxs-lookup"><span data-stu-id="ad0ea-722">The following code example shows how to lock the collection using the <xref:System.Collections.Hashtable.SyncRoot%2A> during the entire enumeration:</span></span>  
  
 [!code-cpp[Classic Hashtable.IsSynchronized Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Hashtable.IsSynchronized Example/CPP/remarks.cpp#2)]
 [!code-csharp[Classic Hashtable.IsSynchronized Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Hashtable.IsSynchronized Example/CS/remarks.cs#2)]
 [!code-vb[Classic Hashtable.IsSynchronized Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Hashtable.IsSynchronized Example/VB/remarks.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.Hashtable.IsSynchronized" />
        <altmember cref="M:System.Collections.Hashtable.Synchronized(System.Collections.Hashtable)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ad0ea-723">Возвращает перечислитель, который осуществляет итерацию по коллекции.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-723">Returns an enumerator that iterates through a collection.</span></span></summary>
        <returns><span data-ttu-id="ad0ea-724">Объект <see cref="T:System.Collections.IEnumerator" />, который может использоваться для итерации элементов коллекции.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-724">An <see cref="T:System.Collections.IEnumerator" /> that can be used to iterate through the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad0ea-725">[Visual Basic, C#]</span><span class="sxs-lookup"><span data-stu-id="ad0ea-725">[Visual Basic, C#]</span></span>  
  
 <span data-ttu-id="ad0ea-726">Инструкция `foreach` языка C# (`for each` в Visual Basic) позволяет скрыть сложный механизм перечислителей.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-726">The `foreach` statement of the C# language (`for each` in Visual Basic) hides the complexity of the enumerators.</span></span>  <span data-ttu-id="ad0ea-727">Поэтому рекомендуется вместо непосредственного использования перечислителя применять ключевое слово `foreach`.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-727">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="ad0ea-728">Перечислители могут использоваться для чтения данных в коллекции, но не для ее изменения.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-728">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="ad0ea-729">Изначально перечислитель располагается перед первым элементом коллекции.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-729">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="ad0ea-730">Метод <xref:System.Collections.IEnumerator.Reset%2A> также переводит перечислитель в эту позицию.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-730"><xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position.</span></span> <span data-ttu-id="ad0ea-731">В этой позиции вызов <xref:System.Collections.IEnumerator.Current%2A> возникло исключение.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-731">At this position, calling <xref:System.Collections.IEnumerator.Current%2A> throws an exception.</span></span> <span data-ttu-id="ad0ea-732">Поэтому необходимо вызвать метод <xref:System.Collections.IEnumerator.MoveNext%2A>, чтобы переместить перечислитель к первому элементу коллекции до считывания значения свойства <xref:System.Collections.IEnumerator.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-732">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="ad0ea-733"><xref:System.Collections.IEnumerator.Current%2A> возвращает тот же объект, пока не будет вызван метод <xref:System.Collections.IEnumerator.MoveNext%2A> или <xref:System.Collections.IEnumerator.Reset%2A>.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-733"><xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="ad0ea-734"><xref:System.Collections.IEnumerator.MoveNext%2A> задает <xref:System.Collections.IEnumerator.Current%2A> в качестве значения для следующего элемента.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-734"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="ad0ea-735">Если <xref:System.Collections.IEnumerator.MoveNext%2A> передает в конец коллекции, перечислитель помещается за последним элементом в коллекции и <xref:System.Collections.IEnumerator.MoveNext%2A> возвращает `false`.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-735">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="ad0ea-736">Если перечислитель находится в этой позиции, последующие вызовы <xref:System.Collections.IEnumerator.MoveNext%2A> также возвращать `false`.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-736">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="ad0ea-737">Если последний вызов <xref:System.Collections.IEnumerator.MoveNext%2A> возвращается `false`, вызов <xref:System.Collections.IEnumerator.Current%2A> возникло исключение.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-737">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, calling <xref:System.Collections.IEnumerator.Current%2A> throws an exception.</span></span> <span data-ttu-id="ad0ea-738">Чтобы снова задать в качестве значения свойства <xref:System.Collections.IEnumerator.Current%2A> первый элемент коллекции, можно последовательно вызвать методы <xref:System.Collections.IEnumerator.Reset%2A> и<xref:System.Collections.IEnumerator.MoveNext%2A>.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-738">To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="ad0ea-739">Перечислитель остается действительным, пока коллекция не изменяется.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-739">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="ad0ea-740">При внесении изменений в коллекцию, такие как добавление, изменение, или удаление элементов, перечислитель может стать недействительным, и следующий вызов <xref:System.Collections.IEnumerator.MoveNext%2A> или <xref:System.Collections.IEnumerator.Reset%2A> вызывает <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-740">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator can be invalidated and the next call to <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span> <span data-ttu-id="ad0ea-741">Если коллекция изменяется между <xref:System.Collections.IEnumerator.MoveNext%2A> и <xref:System.Collections.IEnumerator.Current%2A>, <xref:System.Collections.IEnumerator.Current%2A> возвращает элемент, он имеет значение, даже если перечислитель уже недействителен.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-741">If the collection is modified between <xref:System.Collections.IEnumerator.MoveNext%2A> and <xref:System.Collections.IEnumerator.Current%2A>, <xref:System.Collections.IEnumerator.Current%2A> returns the element that it is set to, even if the enumerator is already invalidated.</span></span>  
  
 <span data-ttu-id="ad0ea-742">Перечислитель не имеет монопольного доступа к коллекции, поэтому перечисление элементов коллекции само по себе не является потокобезопасной процедурой.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-742">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread safe procedure.</span></span> <span data-ttu-id="ad0ea-743">Даже если коллекция синхронизирована, другие потоки могут ее изменить, что приведет к тому, что перечислитель создаст исключение.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-743">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="ad0ea-744">Для обеспечения потокобезопасности при перечислении можно либо заблокировать коллекцию на все время перечисления, либо перехватывать исключения, возникающие в результате изменений, внесенных другими потоками.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-744">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
 <span data-ttu-id="ad0ea-745">Этот метод является операцией o(1).</span><span class="sxs-lookup"><span data-stu-id="ad0ea-745">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="Values">
      <MemberSignature Language="C#" Value="public virtual System.Collections.ICollection Values { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection Values" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Hashtable.Values" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Values As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::ICollection ^ Values { System::Collections::ICollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Values : System.Collections.ICollection" Usage="System.Collections.Hashtable.Values" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.Values</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ad0ea-746">Возвращает интерфейс <see cref="T:System.Collections.ICollection" />, содержащий значения из <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-746">Gets an <see cref="T:System.Collections.ICollection" /> containing the values in the <see cref="T:System.Collections.Hashtable" />.</span></span></summary>
        <value><span data-ttu-id="ad0ea-747">Коллекция <see cref="T:System.Collections.ICollection" />, содержащая значения из словаря <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-747">An <see cref="T:System.Collections.ICollection" /> containing the values in the <see cref="T:System.Collections.Hashtable" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad0ea-748">Порядок значений в <xref:System.Collections.ICollection> не определен, но это же порядке, что связанные ключи в <xref:System.Collections.ICollection> возвращаемые <xref:System.Collections.Hashtable.Keys%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-748">The order of the values in the <xref:System.Collections.ICollection> is unspecified, but it is the same order as the associated keys in the <xref:System.Collections.ICollection> returned by the <xref:System.Collections.Hashtable.Keys%2A> method.</span></span>  
  
 <span data-ttu-id="ad0ea-749">Возвращенный <xref:System.Collections.ICollection> не является статической копией; вместо этого <xref:System.Collections.ICollection> ссылается на значения в исходном <xref:System.Collections.Hashtable>.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-749">The returned <xref:System.Collections.ICollection> is not a static copy; instead, the <xref:System.Collections.ICollection> refers back to the values in the original <xref:System.Collections.Hashtable>.</span></span> <span data-ttu-id="ad0ea-750">Следовательно, изменения для <xref:System.Collections.Hashtable> отражаться в по-прежнему <xref:System.Collections.ICollection>.</span><span class="sxs-lookup"><span data-stu-id="ad0ea-750">Therefore, changes to the <xref:System.Collections.Hashtable> continue to be reflected in the <xref:System.Collections.ICollection>.</span></span>  
  
 <span data-ttu-id="ad0ea-751">Получение значения данного свойства является операцией порядка сложности O(1).</span><span class="sxs-lookup"><span data-stu-id="ad0ea-751">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.ICollection" />
        <altmember cref="P:System.Collections.Hashtable.Keys" />
      </Docs>
    </Member>
  </Members>
</Type>