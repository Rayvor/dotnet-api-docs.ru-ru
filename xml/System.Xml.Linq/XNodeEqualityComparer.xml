<Type Name="XNodeEqualityComparer" FullName="System.Xml.Linq.XNodeEqualityComparer">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5efca26d693aa5e5e1b0f556e8003df7a7841223" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75181141" /></Metadata><TypeSignature Language="C#" Value="public sealed class XNodeEqualityComparer : System.Collections.Generic.IEqualityComparer&lt;System.Xml.Linq.XNode&gt;, System.Collections.IEqualityComparer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit XNodeEqualityComparer extends System.Object implements class System.Collections.Generic.IEqualityComparer`1&lt;class System.Xml.Linq.XNode&gt;, class System.Collections.IEqualityComparer" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Linq.XNodeEqualityComparer" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class XNodeEqualityComparer&#xA;Implements IEqualityComparer, IEqualityComparer(Of XNode)" />
  <TypeSignature Language="C++ CLI" Value="public ref class XNodeEqualityComparer sealed : System::Collections::Generic::IEqualityComparer&lt;System::Xml::Linq::XNode ^&gt;, System::Collections::IEqualityComparer" />
  <TypeSignature Language="F#" Value="type XNodeEqualityComparer = class&#xA;    interface IEqualityComparer&#xA;    interface IEqualityComparer&lt;XNode&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.XDocument</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.Linq</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEqualityComparer&lt;System.Xml.Linq.XNode&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEqualityComparer</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="91331-101">Сравнивает узлы, чтобы определить, эквивалентны ли они.</span><span class="sxs-lookup"><span data-stu-id="91331-101">Compares nodes to determine whether they are equal.</span></span> <span data-ttu-id="91331-102">Этот класс не наследуется.</span><span class="sxs-lookup"><span data-stu-id="91331-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91331-103">Этот класс предназначен для реализации <xref:System.Collections.IEqualityComparer?displayProperty=nameWithType> и <xref:System.Collections.Generic.IEqualityComparer%601?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="91331-103">The purpose of this class is to implement <xref:System.Collections.IEqualityComparer?displayProperty=nameWithType> and <xref:System.Collections.Generic.IEqualityComparer%601?displayProperty=nameWithType>.</span></span> <span data-ttu-id="91331-104">Для классов, для которых требуется удостоверение (например, <xref:System.Collections.Generic.Dictionary%602>), требуется экземпляр класса, который реализует один из этих интерфейсов.</span><span class="sxs-lookup"><span data-stu-id="91331-104">Classes that require identity (such as <xref:System.Collections.Generic.Dictionary%602> ) require an instance of a class that implements one of these interfaces.</span></span>  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/f0fe21e9-ee43-4a55-b91a-0800e5782c13"><span data-ttu-id="91331-105">LINQ to XML</span><span class="sxs-lookup"><span data-stu-id="91331-105">LINQ to XML</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XNodeEqualityComparer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XNodeEqualityComparer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XNodeEqualityComparer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="91331-106">Инициализирует новый экземпляр класса <see cref="T:System.Xml.Linq.XNodeEqualityComparer" />.</span><span class="sxs-lookup"><span data-stu-id="91331-106">Initializes a new instance of the <see cref="T:System.Xml.Linq.XNodeEqualityComparer" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="91331-107">В следующем примере этот класс используется для определения того, равны ли два узла.</span><span class="sxs-lookup"><span data-stu-id="91331-107">The following example uses this class to determine whether two nodes are equal.</span></span>  
  
```csharp  
XElement xmlTree1 = new XElement("Root",  
    new XAttribute("Att1", 1),  
    new XAttribute("Att2", 2),  
    new XElement("Child1", 1),  
    new XElement("Child2", "some content")  
);  
XElement xmlTree2 = new XElement("Root",  
    new XAttribute("Att1", 1),  
    new XAttribute("Att2", 2),  
    new XElement("Child1", 1),  
    new XElement("Child2", "some content")  
);  
XNodeEqualityComparer equalityComparer = new XNodeEqualityComparer();  
Console.WriteLine(equalityComparer.Equals(xmlTree1, xmlTree2));  
xmlTree2.Add(new XElement("NewChild", "new content"));  
Console.WriteLine(equalityComparer.Equals(xmlTree1, xmlTree2));  
```  
  
 <span data-ttu-id="91331-108">В этом примере выводятся следующие данные:</span><span class="sxs-lookup"><span data-stu-id="91331-108">This example produces the following output:</span></span>  
  
```  
True  
False  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/f0fe21e9-ee43-4a55-b91a-0800e5782c13"><span data-ttu-id="91331-109">LINQ to XML</span><span class="sxs-lookup"><span data-stu-id="91331-109">LINQ to XML</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Xml.Linq.XNode x, System.Xml.Linq.XNode y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(class System.Xml.Linq.XNode x, class System.Xml.Linq.XNode y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XNodeEqualityComparer.Equals(System.Xml.Linq.XNode,System.Xml.Linq.XNode)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (x As XNode, y As XNode) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Xml::Linq::XNode ^ x, System::Xml::Linq::XNode ^ y);" />
      <MemberSignature Language="F#" Value="override this.Equals : System.Xml.Linq.XNode * System.Xml.Linq.XNode -&gt; bool" Usage="xNodeEqualityComparer.Equals (x, y)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Xml.Linq.XNode" />
        <Parameter Name="y" Type="System.Xml.Linq.XNode" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="91331-110">Первый экземпляр <see cref="T:System.Xml.Linq.XNode" /> для сравнения.</span><span class="sxs-lookup"><span data-stu-id="91331-110">The first <see cref="T:System.Xml.Linq.XNode" /> to compare.</span></span></param>
        <param name="y"><span data-ttu-id="91331-111">Второй экземпляр <see cref="T:System.Xml.Linq.XNode" /> для сравнения.</span><span class="sxs-lookup"><span data-stu-id="91331-111">The second <see cref="T:System.Xml.Linq.XNode" /> to compare.</span></span></param>
        <summary><span data-ttu-id="91331-112">Сравнивает значения двух узлов.</span><span class="sxs-lookup"><span data-stu-id="91331-112">Compares the values of two nodes.</span></span></summary>
        <returns><span data-ttu-id="91331-113"><see cref="T:System.Boolean" />, показывающий — эквивалентны ли узлы.</span><span class="sxs-lookup"><span data-stu-id="91331-113">A <see cref="T:System.Boolean" /> indicating if the nodes are equal.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91331-114">Следующие критерии определяют, равны ли два узла:</span><span class="sxs-lookup"><span data-stu-id="91331-114">The following criteria determine whether two nodes are equal:</span></span>  
  
-   <span data-ttu-id="91331-115">Узел `null` равен другому узлу `null`, но не равен узлу, не являющемуся`null`.</span><span class="sxs-lookup"><span data-stu-id="91331-115">A `null` node is equal to another `null` node but unequal to a non-`null` node.</span></span>  
  
-   <span data-ttu-id="91331-116">Два объекта <xref:System.Xml.Linq.XNode> разных типов никогда не равны.</span><span class="sxs-lookup"><span data-stu-id="91331-116">Two <xref:System.Xml.Linq.XNode> objects of different types are never equal.</span></span>  
  
-   <span data-ttu-id="91331-117">Два <xref:System.Xml.Linq.XText> узлов равны, если они содержат один и тот же текст.</span><span class="sxs-lookup"><span data-stu-id="91331-117">Two <xref:System.Xml.Linq.XText> nodes are equal if they contain the same text.</span></span>  
  
-   <span data-ttu-id="91331-118">Два <xref:System.Xml.Linq.XElement> узлов равны, если они имеют одинаковое имя тега, один и тот же набор атрибутов с одинаковыми значениями и (игнорируя комментарии и инструкции по обработке) содержит две последовательности одинаковой длины для попарных равных узлов содержимого.</span><span class="sxs-lookup"><span data-stu-id="91331-118">Two <xref:System.Xml.Linq.XElement> nodes are equal if they have the same tag name, the same set of attributes with the same values, and (ignoring comments and processing instructions), contain two equal-length sequences of pairwise equal content nodes.</span></span>  
  
-   <span data-ttu-id="91331-119">Два <xref:System.Xml.Linq.XDocument> объектов равны, если их корневые узлы равны.</span><span class="sxs-lookup"><span data-stu-id="91331-119">Two <xref:System.Xml.Linq.XDocument> objects are equal if their root nodes are equal.</span></span>  
  
-   <span data-ttu-id="91331-120">Два <xref:System.Xml.Linq.XComment> узлов равны, если они содержат один и тот же текст комментария.</span><span class="sxs-lookup"><span data-stu-id="91331-120">Two <xref:System.Xml.Linq.XComment> nodes are equal if they contain the same comment text.</span></span>  
  
-   <span data-ttu-id="91331-121">Два <xref:System.Xml.Linq.XProcessingInstruction> узлов равны, если они имеют одинаковые целевые объекты и данные.</span><span class="sxs-lookup"><span data-stu-id="91331-121">Two <xref:System.Xml.Linq.XProcessingInstruction> nodes are equal if they have the same target and data.</span></span>  
  
-   <span data-ttu-id="91331-122">Два <xref:System.Xml.Linq.XDocumentType> узлов равны, если имеют одинаковое имя, Открытый идентификатор, системный идентификатор и внутреннее подмножество.</span><span class="sxs-lookup"><span data-stu-id="91331-122">Two <xref:System.Xml.Linq.XDocumentType> nodes are equal if the have the same name, public ID, system ID, and internal subset.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="91331-123">В следующем примере этот класс используется для сравнения двух узлов.</span><span class="sxs-lookup"><span data-stu-id="91331-123">The following example uses this class to compare two nodes.</span></span>  
  
```csharp  
XElement xmlTree1 = new XElement("Root",  
    new XAttribute("Att1", 1),  
    new XAttribute("Att2", 2),  
    new XElement("Child1", 1),  
    new XElement("Child2", "some content")  
);  
XElement xmlTree2 = new XElement("Root",  
    new XAttribute("Att1", 1),  
    new XAttribute("Att2", 2),  
    new XElement("Child1", 1),  
    new XElement("Child2", "some content")  
);  
XNodeEqualityComparer equalityComparer = new XNodeEqualityComparer();  
Console.WriteLine(equalityComparer.Equals(xmlTree1, xmlTree2));  
xmlTree2.Add(new XElement("NewChild", "new content"));  
Console.WriteLine(equalityComparer.Equals(xmlTree1, xmlTree2));  
```  
  
 <span data-ttu-id="91331-124">В этом примере выводятся следующие данные:</span><span class="sxs-lookup"><span data-stu-id="91331-124">This example produces the following output:</span></span>  
  
```  
True  
False  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/f0fe21e9-ee43-4a55-b91a-0800e5782c13"><span data-ttu-id="91331-125">LINQ to XML</span><span class="sxs-lookup"><span data-stu-id="91331-125">LINQ to XML</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public int GetHashCode (System.Xml.Linq.XNode obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetHashCode(class System.Xml.Linq.XNode obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XNodeEqualityComparer.GetHashCode(System.Xml.Linq.XNode)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetHashCode (obj As XNode) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetHashCode(System::Xml::Linq::XNode ^ obj);" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : System.Xml.Linq.XNode -&gt; int" Usage="xNodeEqualityComparer.GetHashCode obj" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Xml.Linq.XNode" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="91331-126"><see cref="T:System.Xml.Linq.XNode" /> для хэширования.</span><span class="sxs-lookup"><span data-stu-id="91331-126">The <see cref="T:System.Xml.Linq.XNode" /> to hash.</span></span></param>
        <summary><span data-ttu-id="91331-127">Возвращает хэш-код, основанный на <see cref="T:System.Xml.Linq.XNode" />.</span><span class="sxs-lookup"><span data-stu-id="91331-127">Returns a hash code based on an <see cref="T:System.Xml.Linq.XNode" />.</span></span></summary>
        <returns><span data-ttu-id="91331-128"><see cref="T:System.Int32" /> содержит основанный на некотором значении хэш-код для узла.</span><span class="sxs-lookup"><span data-stu-id="91331-128">A <see cref="T:System.Int32" /> that contains a value-based hash code for the node.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91331-129"><xref:System.Xml.Linq.XNode> реализация <xref:System.Object.GetHashCode%2A> основана на ссылочной идентификации узла.</span><span class="sxs-lookup"><span data-stu-id="91331-129">The <xref:System.Xml.Linq.XNode> implementation of  <xref:System.Object.GetHashCode%2A> is based on the referential identity of the node.</span></span> <span data-ttu-id="91331-130">Этот метод выполняет вычисление глубокого хэш-кода на основе значения узла и всех потомков.</span><span class="sxs-lookup"><span data-stu-id="91331-130">This method computes a deep hash code based on the value of the node and all descendants.</span></span> <span data-ttu-id="91331-131">Хэш-код отражает все атрибуты и все дочерние узлы.</span><span class="sxs-lookup"><span data-stu-id="91331-131">The hash code reflects all attributes and all descendent nodes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="91331-132">В следующем примере этот метод используется для получения глубокого хэш-кода для XML-дерева.</span><span class="sxs-lookup"><span data-stu-id="91331-132">The following example uses this method to get a deep hash code for an XML tree.</span></span>  
  
```csharp  
XElement xmlTree = new XElement("Root",  
    new XAttribute("Att1", 1),  
    new XAttribute("Att2", 2),  
    new XElement("Child1", 1),  
    new XElement("Child2", "some content")  
);  
XNodeEqualityComparer equalityComparer = new XNodeEqualityComparer();  
Console.WriteLine("HashCode: {0}", equalityComparer.GetHashCode(xmlTree).ToString("X"));  
xmlTree.Add(new XElement("NewChild", "new content"));  
Console.WriteLine("HashCode: {0}", equalityComparer.GetHashCode(xmlTree).ToString("X"));  
```  
  
 <span data-ttu-id="91331-133">В этом примере выводятся следующие данные:</span><span class="sxs-lookup"><span data-stu-id="91331-133">This example produces the following output:</span></span>  
  
```  
HashCode: 958CCD0  
HashCode: AD26516B  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/f0fe21e9-ee43-4a55-b91a-0800e5782c13"><span data-ttu-id="91331-134">LINQ to XML</span><span class="sxs-lookup"><span data-stu-id="91331-134">LINQ to XML</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEqualityComparer.Equals">
      <MemberSignature Language="C#" Value="bool IEqualityComparer.Equals (object x, object y);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IEqualityComparer.Equals(object x, object y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XNodeEqualityComparer.System#Collections#IEqualityComparer#Equals(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Equals (x As Object, y As Object) As Boolean Implements IEqualityComparer.Equals" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IEqualityComparer.Equals(System::Object ^ x, System::Object ^ y) = System::Collections::IEqualityComparer::Equals;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEqualityComparer.Equals(System.Object,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Object" />
        <Parameter Name="y" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="91331-135">Первый экземпляр <see cref="T:System.Xml.Linq.XNode" /> для сравнения.</span><span class="sxs-lookup"><span data-stu-id="91331-135">The first <see cref="T:System.Xml.Linq.XNode" /> to compare.</span></span></param>
        <param name="y"><span data-ttu-id="91331-136">Второй экземпляр <see cref="T:System.Xml.Linq.XNode" /> для сравнения.</span><span class="sxs-lookup"><span data-stu-id="91331-136">The second <see cref="T:System.Xml.Linq.XNode" /> to compare.</span></span></param>
        <summary><span data-ttu-id="91331-137">Сравнивает значения двух узлов.</span><span class="sxs-lookup"><span data-stu-id="91331-137">Compares the values of two nodes.</span></span></summary>
        <returns><span data-ttu-id="91331-138">Значение <see langword="true" />, если узлы равны; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="91331-138"><see langword="true" /> if the nodes are equal; otherwise <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91331-139">Следующие критерии определяют, равны ли два узла:</span><span class="sxs-lookup"><span data-stu-id="91331-139">The following criteria determine whether two nodes are equal:</span></span>  
  
-   <span data-ttu-id="91331-140">Узел `null` равен другому узлу `null`, но не равен узлу, не являющемуся`null`.</span><span class="sxs-lookup"><span data-stu-id="91331-140">A `null` node is equal to another `null` node but unequal to a non-`null` node.</span></span>  
  
-   <span data-ttu-id="91331-141">Два объекта <xref:System.Xml.Linq.XNode> разных типов никогда не равны.</span><span class="sxs-lookup"><span data-stu-id="91331-141">Two <xref:System.Xml.Linq.XNode> objects of different types are never equal.</span></span>  
  
-   <span data-ttu-id="91331-142">Два <xref:System.Xml.Linq.XText> узлов равны, если они содержат один и тот же текст.</span><span class="sxs-lookup"><span data-stu-id="91331-142">Two <xref:System.Xml.Linq.XText> nodes are equal if they contain the same text.</span></span>  
  
-   <span data-ttu-id="91331-143">Два <xref:System.Xml.Linq.XElement> узлов равны, если они имеют одно и то же имя тега, один и тот же набор атрибутов с одинаковыми значениями и (игнорируя комментарии и инструкции по обработке) содержит две последовательности попарных равных узлов содержимого екуа.</span><span class="sxs-lookup"><span data-stu-id="91331-143">Two <xref:System.Xml.Linq.XElement> nodes are equal if they have the same tag name, the same set of attributes with the same values, and (ignoring comments and processing instructions), contain two equa-length sequences of pairwise equal content nodes.</span></span>  
  
-   <span data-ttu-id="91331-144">Два <xref:System.Xml.Linq.XDocument> объектов равны, если их корневые узлы равны.</span><span class="sxs-lookup"><span data-stu-id="91331-144">Two <xref:System.Xml.Linq.XDocument> objects are equal if their root nodes are equal.</span></span>  
  
-   <span data-ttu-id="91331-145">Два <xref:System.Xml.Linq.XComment> узлов равны, если они содержат один и тот же текст комментария.</span><span class="sxs-lookup"><span data-stu-id="91331-145">Two <xref:System.Xml.Linq.XComment> nodes are equal if they contain the same comment text.</span></span>  
  
-   <span data-ttu-id="91331-146">Два <xref:System.Xml.Linq.XProcessingInstruction> узлов равны, если они имеют одинаковые целевые объекты и данные.</span><span class="sxs-lookup"><span data-stu-id="91331-146">Two <xref:System.Xml.Linq.XProcessingInstruction> nodes are equal if they have the same target and data.</span></span>  
  
-   <span data-ttu-id="91331-147">Два <xref:System.Xml.Linq.XDocumentType> узлов равны, если имеют одинаковое имя, Открытый идентификатор, системный идентификатор и внутреннее подмножество.</span><span class="sxs-lookup"><span data-stu-id="91331-147">Two <xref:System.Xml.Linq.XDocumentType> nodes are equal if the have the same name, public ID, system ID, and internal subset.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEqualityComparer.GetHashCode">
      <MemberSignature Language="C#" Value="int IEqualityComparer.GetHashCode (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IEqualityComparer.GetHashCode(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XNodeEqualityComparer.System#Collections#IEqualityComparer#GetHashCode(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function GetHashCode (obj As Object) As Integer Implements IEqualityComparer.GetHashCode" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IEqualityComparer.GetHashCode(System::Object ^ obj) = System::Collections::IEqualityComparer::GetHashCode;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEqualityComparer.GetHashCode(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="91331-148">Узел для хэширования.</span><span class="sxs-lookup"><span data-stu-id="91331-148">The node to hash.</span></span></param>
        <summary><span data-ttu-id="91331-149">Возвращает хэш-код, основанный на значении узла.</span><span class="sxs-lookup"><span data-stu-id="91331-149">Returns a hash code based on the value of a node.</span></span></summary>
        <returns><span data-ttu-id="91331-150"><see cref="T:System.Int32" /> содержит основанный на некотором значении хэш-код для узла.</span><span class="sxs-lookup"><span data-stu-id="91331-150">A <see cref="T:System.Int32" /> that contains a value-based hash code for the node.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91331-151"><xref:System.Xml.Linq.XNode> реализация <xref:System.Object.GetHashCode%2A> основана на ссылочной идентификации узла.</span><span class="sxs-lookup"><span data-stu-id="91331-151">The <xref:System.Xml.Linq.XNode> implementation of <xref:System.Object.GetHashCode%2A> is based on the referential identity of the node.</span></span> <span data-ttu-id="91331-152">Этот метод выполняет вычисление глубокого хэш-кода на основе значения узла, его атрибутов и потомков.</span><span class="sxs-lookup"><span data-stu-id="91331-152">This method computes a deep hash code based on the value of the node, its attributes, and its descendants.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
