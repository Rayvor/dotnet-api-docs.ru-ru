<Type Name="XDocumentType" FullName="System.Xml.Linq.XDocumentType">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2743c001fda249ea3712cee798b25db7d7c0e88c" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69415706" /></Metadata><TypeSignature Language="C#" Value="public class XDocumentType : System.Xml.Linq.XNode" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XDocumentType extends System.Xml.Linq.XNode" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Linq.XDocumentType" />
  <TypeSignature Language="VB.NET" Value="Public Class XDocumentType&#xA;Inherits XNode" />
  <TypeSignature Language="C++ CLI" Value="public ref class XDocumentType : System::Xml::Linq::XNode" />
  <TypeSignature Language="F#" Value="type XDocumentType = class&#xA;    inherit XNode" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.XDocument</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.Linq</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Xml.Linq.XNode</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="b1205-101">Представляет определение типа документов XML (DTD).</span><span class="sxs-lookup"><span data-stu-id="b1205-101">Represents an XML Document Type Definition (DTD).</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1205-102">Определения типов данных (DTD) в XML — это способ сделать следующее:</span><span class="sxs-lookup"><span data-stu-id="b1205-102">Data Type Definitions (DTD) in XML are a way to do the following:</span></span>  
  
-   <span data-ttu-id="b1205-103">Проверяйте XML-деревья в ограниченном экстенте.</span><span class="sxs-lookup"><span data-stu-id="b1205-103">Validate XML trees to a limited extent.</span></span>  
  
-   <span data-ttu-id="b1205-104">Разверните элемент сущности, представляющие собой форму замены текста.</span><span class="sxs-lookup"><span data-stu-id="b1205-104">Expand entities, which is a form of text replacement.</span></span>  
  
-   <span data-ttu-id="b1205-105">Укажите атрибуты по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="b1205-105">Supply default attributes.</span></span>  
  
 <span data-ttu-id="b1205-106">Этот класс представляет концепцию XML DTD.</span><span class="sxs-lookup"><span data-stu-id="b1205-106">This class represents the XML concept of a DTD.</span></span>  
  
 <span data-ttu-id="b1205-107">Поддержка DTD в [!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)] ограничена.</span><span class="sxs-lookup"><span data-stu-id="b1205-107">DTD support in [!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)] is limited.</span></span>  
  
 [!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)]<span data-ttu-id="b1205-108">по умолчанию разворачивает внутренние сущности, но не будет разрешать внешние ссылки на сущности <xref:System.Xml.XmlReader> , если для <xref:System.Xml.XmlResolver> загрузки XML-дерева не используется объект с соответствующим объектом.</span><span class="sxs-lookup"><span data-stu-id="b1205-108">will expand internal entities by default, but it will not resolve external entity references unless an <xref:System.Xml.XmlReader> with an associated <xref:System.Xml.XmlResolver> is used to load the XML tree.</span></span>  
  
 [!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)]<span data-ttu-id="b1205-109">не будет проверять документ на соответствие DTD, но при необходимости можно использовать проверку <xref:System.Xml.XmlReader> для выполнения проверки DTD.</span><span class="sxs-lookup"><span data-stu-id="b1205-109">will not validate a document against a DTD, but you can use a validating <xref:System.Xml.XmlReader> to perform DTD validation if necessary.</span></span>  
  
 <span data-ttu-id="b1205-110">Чтобы проверить [!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)] дерево по схеме XML, <xref:System.Xml.Schema.Extensions.Validate%2A> используйте метод.</span><span class="sxs-lookup"><span data-stu-id="b1205-110">To validate an [!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)] tree against an XML schema, use the <xref:System.Xml.Schema.Extensions.Validate%2A> method.</span></span>  
  
 <span data-ttu-id="b1205-111">Если документ содержит ссылки на сущности, определенные в DTD, то ссылки расширяются после создания XML-дерева.</span><span class="sxs-lookup"><span data-stu-id="b1205-111">When a document contains entity references that are defined in a DTD, the references are expanded upon creation of the XML tree.</span></span> <span data-ttu-id="b1205-112">Однако при сериализации или сохранении XML-дерева содержимое развернутых сущностей сохраняется; ссылки на сущности не являются.</span><span class="sxs-lookup"><span data-stu-id="b1205-112">However, when you serialize or save the XML tree, the content of the expanded entities is preserved; the entity references are not.</span></span>  
  
 <span data-ttu-id="b1205-113">Атрибуты по умолчанию из DTD будут материализоваться как обычные атрибуты в XML-дереве.</span><span class="sxs-lookup"><span data-stu-id="b1205-113">Default attributes from the DTD will be materialized as regular attributes in the XML tree.</span></span> <span data-ttu-id="b1205-114">После материализации атрибута по умолчанию из DTD невозможно определить, что атрибут был атрибутом по умолчанию из DTD.</span><span class="sxs-lookup"><span data-stu-id="b1205-114">After a default attribute from the DTD is materialized, there is no way to determine that the attribute was a default attribute from the DTD.</span></span>  
  
 <span data-ttu-id="b1205-115">Можно заполнить XML-дерево XML-документом, содержащим внутренний DTD.</span><span class="sxs-lookup"><span data-stu-id="b1205-115">You can populate an XML tree with an XML document that contains an internal DTD.</span></span> <span data-ttu-id="b1205-116">XML-дерево будет содержать <xref:System.Xml.Linq.XDocument.DocumentType%2A> узел.</span><span class="sxs-lookup"><span data-stu-id="b1205-116">The XML tree will then contain a <xref:System.Xml.Linq.XDocument.DocumentType%2A> node.</span></span> <span data-ttu-id="b1205-117">При сериализации или сохранении дерева внутреннее определение DTD также будет сохранено как часть документа.</span><span class="sxs-lookup"><span data-stu-id="b1205-117">When you serialize or save the tree, the internal DTD will also be saved as part of the document.</span></span>  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/f0fe21e9-ee43-4a55-b91a-0800e5782c13"><span data-ttu-id="b1205-118">LINQ to XML</span><span class="sxs-lookup"><span data-stu-id="b1205-118">LINQ to XML</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b1205-119">Инициализирует новый экземпляр класса <see cref="T:System.Xml.Linq.XDocumentType" />.</span><span class="sxs-lookup"><span data-stu-id="b1205-119">Initializes a new instance of the <see cref="T:System.Xml.Linq.XDocumentType" /> class.</span></span></summary>
        <related type="Article" href="https://msdn.microsoft.com/library/f0fe21e9-ee43-4a55-b91a-0800e5782c13"><span data-ttu-id="b1205-120">LINQ to XML</span><span class="sxs-lookup"><span data-stu-id="b1205-120">LINQ to XML</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XDocumentType (System.Xml.Linq.XDocumentType other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.Linq.XDocumentType other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XDocumentType.#ctor(System.Xml.Linq.XDocumentType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (other As XDocumentType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XDocumentType(System::Xml::Linq::XDocumentType ^ other);" />
      <MemberSignature Language="F#" Value="new System.Xml.Linq.XDocumentType : System.Xml.Linq.XDocumentType -&gt; System.Xml.Linq.XDocumentType" Usage="new System.Xml.Linq.XDocumentType other" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="other" Type="System.Xml.Linq.XDocumentType" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="b1205-121">Объект <see cref="T:System.Xml.Linq.XDocumentType" /> для копирования.</span><span class="sxs-lookup"><span data-stu-id="b1205-121">An <see cref="T:System.Xml.Linq.XDocumentType" /> object to copy from.</span></span></param>
        <summary><span data-ttu-id="b1205-122">Инициализирует экземпляр класса <see cref="T:System.Xml.Linq.XDocumentType" /> из другого объекта <see cref="T:System.Xml.Linq.XDocumentType" />.</span><span class="sxs-lookup"><span data-stu-id="b1205-122">Initializes an instance of the <see cref="T:System.Xml.Linq.XDocumentType" /> class from another <see cref="T:System.Xml.Linq.XDocumentType" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1205-123">Этот конструктор в основном используется для внутренних целей при создании глубокой копии XML-дерева.</span><span class="sxs-lookup"><span data-stu-id="b1205-123">This constructor is primarily used internally when making a deep copy of an XML tree.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/f0fe21e9-ee43-4a55-b91a-0800e5782c13"><span data-ttu-id="b1205-124">LINQ to XML</span><span class="sxs-lookup"><span data-stu-id="b1205-124">LINQ to XML</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XDocumentType (string name, string publicId, string systemId, string internalSubset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, string publicId, string systemId, string internalSubset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XDocumentType.#ctor(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, publicId As String, systemId As String, internalSubset As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XDocumentType(System::String ^ name, System::String ^ publicId, System::String ^ systemId, System::String ^ internalSubset);" />
      <MemberSignature Language="F#" Value="new System.Xml.Linq.XDocumentType : string * string * string * string -&gt; System.Xml.Linq.XDocumentType" Usage="new System.Xml.Linq.XDocumentType (name, publicId, systemId, internalSubset)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="publicId" Type="System.String" />
        <Parameter Name="systemId" Type="System.String" />
        <Parameter Name="internalSubset" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="b1205-125"><see cref="T:System.String" />, содержащий определенное имя DTD, совпадающее с определенным именем корневого элемента документа XML.</span><span class="sxs-lookup"><span data-stu-id="b1205-125">A <see cref="T:System.String" /> that contains the qualified name of the DTD, which is the same as the qualified name of the root element of the XML document.</span></span></param>
        <param name="publicId"><span data-ttu-id="b1205-126"><see cref="T:System.String" />, в котором содержится открытый идентификатор внешнего открытого DTD.</span><span class="sxs-lookup"><span data-stu-id="b1205-126">A <see cref="T:System.String" /> that contains the public identifier of an external public DTD.</span></span></param>
        <param name="systemId"><span data-ttu-id="b1205-127"><see cref="T:System.String" />, в котором содержится системный идентификатор внешнего частного DTD.</span><span class="sxs-lookup"><span data-stu-id="b1205-127">A <see cref="T:System.String" /> that contains the system identifier of an external private DTD.</span></span></param>
        <param name="internalSubset"><span data-ttu-id="b1205-128"><see cref="T:System.String" /> содержит внутреннее подмножество для внутреннего DTD.</span><span class="sxs-lookup"><span data-stu-id="b1205-128">A <see cref="T:System.String" /> that contains the internal subset for an internal DTD.</span></span></param>
        <summary><span data-ttu-id="b1205-129">Инициализирует экземпляр класса <see cref="T:System.Xml.Linq.XDocumentType" />.</span><span class="sxs-lookup"><span data-stu-id="b1205-129">Initializes an instance of the <see cref="T:System.Xml.Linq.XDocumentType" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b1205-130">В следующем примере создается документ с внутренним DTD.</span><span class="sxs-lookup"><span data-stu-id="b1205-130">The following example creates a document with an internal DTD.</span></span> <span data-ttu-id="b1205-131">При создании <xref:System.Xml.Linq.XDocumentType> объекта он указывает полное имя DTD (Pubs) и строку, содержащую внутреннее подмножество.</span><span class="sxs-lookup"><span data-stu-id="b1205-131">When it creates the <xref:System.Xml.Linq.XDocumentType> object, it specifies the qualified name of the DTD (Pubs), and a string that contains the internal subset.</span></span> <span data-ttu-id="b1205-132">Поскольку документ не использует открытый или частный внешний DTD, `publicId` для `null`свойств и `systemId` устанавливается значение.</span><span class="sxs-lookup"><span data-stu-id="b1205-132">Because the document does not use a public or private external DTD, the `publicId` and `systemId` are set to `null`.</span></span>  
  
```csharp  
string internalSubset = @"<!ELEMENT Pubs (Book+)>  
<!ELEMENT Book (Title, Author)>  
<!ELEMENT Title (#PCDATA)>  
<!ELEMENT Author (#PCDATA)>";  
  
string target = "xml-stylesheet";  
string data = "href=\"mystyle.css\" title=\"Compact\" type=\"text/css\"";  
  
XDocument doc = new XDocument(  
    new XComment("This is a comment."),  
    new XProcessingInstruction(target, data),  
    new XDocumentType("Pubs", null, null, internalSubset),  
    new XElement("Pubs",   
        new XElement("Book",  
            new XElement("Title", "Artifacts of Roman Civilization"),  
            new XElement("Author", "Moreno, Jordao")  
        ),  
        new XElement("Book",  
            new XElement("Title", "Midieval Tools and Implements"),  
            new XElement("Author", "Gazit, Inbar")  
        )  
    ),  
    new XComment("This is another comment.")  
);  
doc.Declaration = new XDeclaration("1.0", "utf-8", "true");  
  
Console.WriteLine(doc);  
```  
  
```vb  
Dim internalSubset = _  
    "<!ELEMENT Pubs (Book+)>" & Environment.NewLine & _  
    "<!ELEMENT Book (Title, Author)>" & Environment.NewLine & _  
    "<!ELEMENT Title (#PCDATA)>" & Environment.NewLine & _  
    "<!ELEMENT Author (#PCDATA)>"  
  
Dim doc As XDocument = _  
    <?xml version="1.0" encoding="utf-8" standalone="yes"?>  
    <!--This is a comment.-->  
    <?xml-stylesheet href="mystyle.css" title="Compact" type="text/css"?>  
    <Pubs>  
        <Book>  
            <Title>Artifacts of Roman Civilization</Title>  
            <Author>Moreno, Jordao</Author>  
        </Book>  
        <Book>  
            <Title>Midieval Tools and Implements</Title>  
            <Author>Gazit, Inbar</Author>  
        </Book>  
    </Pubs>  
    <!--This is another comment.-->  
  
doc.FirstNode.NextNode.AddAfterSelf(new XDocumentType("Pubs", Nothing, Nothing, internalSubset))  
  
Console.WriteLine(doc)  
```  
  
 <span data-ttu-id="b1205-133">В этом примере выводятся следующие данные:</span><span class="sxs-lookup"><span data-stu-id="b1205-133">This example produces the following output:</span></span>  
  
```xml  
<!--This is a comment.-->  
<?xml-stylesheet href="mystyle.css" title="Compact" type="text/css"?>  
<!DOCTYPE Pubs [<!ELEMENT Pubs (Book+)>  
<!ELEMENT Book (Title, Author)>  
<!ELEMENT Title (#PCDATA)>  
<!ELEMENT Author (#PCDATA)>]>  
<Pubs>  
  <Book>  
    <Title>Artifacts of Roman Civilization</Title>  
    <Author>Moreno, Jordao</Author>  
  </Book>  
  <Book>  
    <Title>Midieval Tools and Implements</Title>  
    <Author>Gazit, Inbar</Author>  
  </Book>  
</Pubs>  
<!--This is another comment.-->  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/f0fe21e9-ee43-4a55-b91a-0800e5782c13"><span data-ttu-id="b1205-134">LINQ to XML</span><span class="sxs-lookup"><span data-stu-id="b1205-134">LINQ to XML</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="InternalSubset">
      <MemberSignature Language="C#" Value="public string InternalSubset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InternalSubset" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Linq.XDocumentType.InternalSubset" />
      <MemberSignature Language="VB.NET" Value="Public Property InternalSubset As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ InternalSubset { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InternalSubset : string with get, set" Usage="System.Xml.Linq.XDocumentType.InternalSubset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b1205-135">Получает или задает внутреннее подмножество для этого Определения типа документа (DTD).</span><span class="sxs-lookup"><span data-stu-id="b1205-135">Gets or sets the internal subset for this Document Type Definition (DTD).</span></span></summary>
        <value><span data-ttu-id="b1205-136"><see cref="T:System.String" /> содержит внутреннее подмножество для этого Определения типа документа (DTD).</span><span class="sxs-lookup"><span data-stu-id="b1205-136">A <see cref="T:System.String" /> that contains the internal subset for this Document Type Definition (DTD).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b1205-137">В следующем примере создается документ с DTD, содержащим внутреннее подмножество.</span><span class="sxs-lookup"><span data-stu-id="b1205-137">The following example creates a document with a DTD that contains an internal subset.</span></span>  
  
```csharp  
string internalSubset = @"<!ELEMENT Pubs (Book+)>  
<!ELEMENT Book (Title, Author)>  
<!ELEMENT Title (#PCDATA)>  
<!ELEMENT Author (#PCDATA)>";  
  
string target = "xml-stylesheet";  
string data = "href=\"mystyle.css\" title=\"Compact\" type=\"text/css\"";  
  
XDocument doc = new XDocument(  
    new XComment("This is a comment."),  
    new XProcessingInstruction(target, data),  
    new XDocumentType("Pubs", null, null, internalSubset),  
    new XElement("Pubs",   
        new XElement("Book",  
            new XElement("Title", "Artifacts of Roman Civilization"),  
            new XElement("Author", "Moreno, Jordao")  
        ),  
        new XElement("Book",  
            new XElement("Title", "Midieval Tools and Implements"),  
            new XElement("Author", "Gazit, Inbar")  
        )  
    ),  
    new XComment("This is another comment.")  
);  
doc.Declaration = new XDeclaration("1.0", "utf-8", "true");  
  
Console.WriteLine(doc.DocumentType.InternalSubset);  
```  
  
```vb  
Dim internalSubset = _  
    "<!ELEMENT Pubs (Book+)>" & Environment.NewLine & _  
    "<!ELEMENT Book (Title, Author)>" & Environment.NewLine & _  
    "<!ELEMENT Title (#PCDATA)>" & Environment.NewLine & _  
    "<!ELEMENT Author (#PCDATA)>"  
  
Dim doc As XDocument = _  
    <?xml version="1.0" encoding="utf-8" standalone="yes"?>  
    <!--This is a comment.-->  
    <?xml-stylesheet href='mystyle.css' title='Compact' type='text/css'?>  
    <Pubs>  
        <Book>  
            <Title>Artifacts of Roman Civilization</Title>  
            <Author>Moreno, Jordao</Author>  
        </Book>  
        <Book>  
            <Title>Midieval Tools and Implements</Title>  
            <Author>Gazit, Inbar</Author>  
        </Book>  
    </Pubs>  
    <!--This is another comment.-->  
  
doc.FirstNode.AddAfterSelf(new XDocumentType("Pubs", Nothing, Nothing, internalSubset))  
  
Console.WriteLine(doc.DocumentType.InternalSubset)  
```  
  
 <span data-ttu-id="b1205-138">В этом примере выводятся следующие данные:</span><span class="sxs-lookup"><span data-stu-id="b1205-138">This example produces the following output:</span></span>  
  
```  
<!ELEMENT Pubs (Book+)>  
<!ELEMENT Book (Title, Author)>  
<!ELEMENT Title (#PCDATA)>  
<!ELEMENT Author (#PCDATA)>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/f0fe21e9-ee43-4a55-b91a-0800e5782c13"><span data-ttu-id="b1205-139">LINQ to XML</span><span class="sxs-lookup"><span data-stu-id="b1205-139">LINQ to XML</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Linq.XDocumentType.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Xml.Linq.XDocumentType.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b1205-140">Получает или задает имя для этого Определения типа документа (DTD).</span><span class="sxs-lookup"><span data-stu-id="b1205-140">Gets or sets the name for this Document Type Definition (DTD).</span></span></summary>
        <value><span data-ttu-id="b1205-141"><see cref="T:System.String" /> содержит имя для этого Определения типа документа (DTD).</span><span class="sxs-lookup"><span data-stu-id="b1205-141">A <see cref="T:System.String" /> that contains the name for this Document Type Definition (DTD).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b1205-142">В следующем примере создается XML-документ, содержащий DTD.</span><span class="sxs-lookup"><span data-stu-id="b1205-142">The following example creates an XML document that contains a DTD.</span></span> <span data-ttu-id="b1205-143">После создания документа он получает полное имя DTD с помощью этого свойства.</span><span class="sxs-lookup"><span data-stu-id="b1205-143">After creating the document, it retrieves the qualified name of the DTD using this property.</span></span>  
  
```csharp  
string internalSubset = @"<!ELEMENT Pubs (Book+)>  
<!ELEMENT Book (Title, Author)>  
<!ELEMENT Title (#PCDATA)>  
<!ELEMENT Author (#PCDATA)>";  
  
string target = "xml-stylesheet";  
string data = "href=\"mystyle.css\" title=\"Compact\" type=\"text/css\"";  
  
XDocument doc = new XDocument(  
    new XComment("This is a comment."),  
    new XProcessingInstruction(target, data),  
    new XDocumentType("Pubs", null, null, internalSubset),  
    new XElement("Pubs",   
        new XElement("Book",  
            new XElement("Title", "Artifacts of Roman Civilization"),  
            new XElement("Author", "Moreno, Jordao")  
        ),  
        new XElement("Book",  
            new XElement("Title", "Midieval Tools and Implements"),  
            new XElement("Author", "Gazit, Inbar")  
        )  
    ),  
    new XComment("This is another comment.")  
);  
doc.Declaration = new XDeclaration("1.0", "utf-8", "true");  
  
Console.WriteLine(doc.DocumentType.Name);  
```  
  
```vb  
Dim internalSubset = _  
    "<!ELEMENT Pubs (Book+)>" & Environment.NewLine & _  
    "<!ELEMENT Book (Title, Author)>" & Environment.NewLine & _  
    "<!ELEMENT Title (#PCDATA)>" & Environment.NewLine & _  
    "<!ELEMENT Author (#PCDATA)>"  
  
Dim doc As XDocument = _  
    <?xml version="1.0" encoding="utf-8" standalone="yes"?>  
    <!--This is a comment.-->  
    <?xml-stylesheet href='mystyle.css' title='Compact' type='text/css'?>  
    <Pubs>  
        <Book>  
            <Title>Artifacts of Roman Civilization</Title>  
            <Author>Moreno, Jordao</Author>  
            </Book>  
        <Book>  
            <Title>Midieval Tools and Implements</Title>  
            <Author>Gazit, Inbar</Author>  
        </Book>  
    </Pubs>  
    <!--This is another comment.-->  
  
doc.FirstNode.AddAfterSelf(new XDocumentType("Pubs", Nothing, Nothing, internalSubset))  
  
Console.WriteLine(doc.DocumentType.Name)  
```  
  
 <span data-ttu-id="b1205-144">В этом примере выводятся следующие данные:</span><span class="sxs-lookup"><span data-stu-id="b1205-144">This example produces the following output:</span></span>  
  
```  
Pubs  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/f0fe21e9-ee43-4a55-b91a-0800e5782c13"><span data-ttu-id="b1205-145">LINQ to XML</span><span class="sxs-lookup"><span data-stu-id="b1205-145">LINQ to XML</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="NodeType">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlNodeType NodeType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.XmlNodeType NodeType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Linq.XDocumentType.NodeType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property NodeType As XmlNodeType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlNodeType NodeType { System::Xml::XmlNodeType get(); };" />
      <MemberSignature Language="F#" Value="member this.NodeType : System.Xml.XmlNodeType" Usage="System.Xml.Linq.XDocumentType.NodeType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b1205-146">Получает тип узла для этого узла.</span><span class="sxs-lookup"><span data-stu-id="b1205-146">Gets the node type for this node.</span></span></summary>
        <value><span data-ttu-id="b1205-147">Тип узла.</span><span class="sxs-lookup"><span data-stu-id="b1205-147">The node type.</span></span> <span data-ttu-id="b1205-148">Для объектов <see cref="T:System.Xml.Linq.XDocumentType" /> это значение равно <see cref="F:System.Xml.XmlNodeType.DocumentType" />.</span><span class="sxs-lookup"><span data-stu-id="b1205-148">For <see cref="T:System.Xml.Linq.XDocumentType" /> objects, this value is <see cref="F:System.Xml.XmlNodeType.DocumentType" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1205-149">Поскольку все классы, производные от <xref:System.Xml.Linq.XObject> , <xref:System.Xml.Linq.XObject.NodeType%2A> содержат свойство, можно написать код, который работает с <xref:System.Xml.Linq.XObject>коллекциями конкретного подкласса.</span><span class="sxs-lookup"><span data-stu-id="b1205-149">Because all classes that derive from <xref:System.Xml.Linq.XObject> contain a <xref:System.Xml.Linq.XObject.NodeType%2A> property, you can write code that operates on collections of concrete subclass of <xref:System.Xml.Linq.XObject>.</span></span> <span data-ttu-id="b1205-150">Затем код может проверить тип узла каждого узла в коллекции.</span><span class="sxs-lookup"><span data-stu-id="b1205-150">Your code can then test for the node type of each node in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b1205-151">В следующем примере показано использование этого свойства для получения типа узла для <xref:System.Xml.Linq.XDocumentType> объекта.</span><span class="sxs-lookup"><span data-stu-id="b1205-151">The following example shows the use of this property to retrieve the node type for an <xref:System.Xml.Linq.XDocumentType> object.</span></span>  
  
```csharp  
string internalSubset = @"<!ELEMENT Pubs (Book+)>  
<!ELEMENT Book (Title, Author)>  
<!ELEMENT Title (#PCDATA)>  
<!ELEMENT Author (#PCDATA)>";  
  
string target = "xml-stylesheet";  
string data = "href=\"mystyle.css\" title=\"Compact\" type=\"text/css\"";  
  
XDocument doc = new XDocument(  
    new XComment("This is a comment."),  
    new XProcessingInstruction(target, data),  
    new XDocumentType("Pubs", null, null, internalSubset),  
    new XElement("Pubs",   
        new XElement("Book",  
            new XElement("Title", "Artifacts of Roman Civilization"),  
            new XElement("Author", "Moreno, Jordao")  
        ),  
        new XElement("Book",  
            new XElement("Title", "Midieval Tools and Implements"),  
            new XElement("Author", "Gazit, Inbar")  
        )  
    ),  
    new XComment("This is another comment.")  
);  
doc.Declaration = new XDeclaration("1.0", "utf-8", "true");  
  
Console.WriteLine(doc.DocumentType.NodeType);  
```  
  
```vb  
Dim internalSubset = _  
    "<!ELEMENT Pubs (Book+)>" & Environment.NewLine & _  
    "<!ELEMENT Book (Title, Author)>" & Environment.NewLine & _  
    "<!ELEMENT Title (#PCDATA)>" & Environment.NewLine & _  
    "<!ELEMENT Author (#PCDATA)>"  
  
Dim doc As XDocument = _   
    <?xml version="1.0" encoding="utf-8" standalone="yes"?>  
    <!--This is a comment.-->  
    <?xml-stylesheet href='mystyle.css' title='Compact' type='text/css'?>  
    <Pubs>  
        <Book>  
            <Title>Artifacts of Roman Civilization</Title>  
            <Author>Moreno, Jordao</Author>  
        </Book>  
        <Book>  
            <Title>Midieval Tools and Implements</Title>  
            <Author>Gazit, Inbar</Author>  
        </Book>  
    </Pubs>  
    <!--This is another comment.-->  
  
doc.FirstNode.AddAfterSelf(new XDocumentType("Pubs", Nothing, Nothing, internalSubset))  
  
Console.WriteLine(doc.DocumentType.NodeType.ToString())  
```  
  
 <span data-ttu-id="b1205-152">В этом примере выводятся следующие данные:</span><span class="sxs-lookup"><span data-stu-id="b1205-152">This example produces the following output:</span></span>  
  
```  
DocumentType  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/f0fe21e9-ee43-4a55-b91a-0800e5782c13"><span data-ttu-id="b1205-153">LINQ to XML</span><span class="sxs-lookup"><span data-stu-id="b1205-153">LINQ to XML</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="PublicId">
      <MemberSignature Language="C#" Value="public string PublicId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PublicId" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Linq.XDocumentType.PublicId" />
      <MemberSignature Language="VB.NET" Value="Public Property PublicId As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PublicId { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PublicId : string with get, set" Usage="System.Xml.Linq.XDocumentType.PublicId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b1205-154">Получает или задает открытый идентификатор для этого Определения типа документа (DTD).</span><span class="sxs-lookup"><span data-stu-id="b1205-154">Gets or sets the public identifier for this Document Type Definition (DTD).</span></span></summary>
        <value><span data-ttu-id="b1205-155"><see cref="T:System.String" /> содержит открытый идентификатор для этого Определения типа документа (DTD).</span><span class="sxs-lookup"><span data-stu-id="b1205-155">A <see cref="T:System.String" /> that contains the public identifier for this Document Type Definition (DTD).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1205-156">Если XML-документ использует внешнее общедоступное DTD, это свойство будет содержать открытый идентификатор внешнего DTD.</span><span class="sxs-lookup"><span data-stu-id="b1205-156">If an XML document uses an external public DTD, this property will contain the public identifier of the external DTD.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/f0fe21e9-ee43-4a55-b91a-0800e5782c13"><span data-ttu-id="b1205-157">LINQ to XML</span><span class="sxs-lookup"><span data-stu-id="b1205-157">LINQ to XML</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SystemId">
      <MemberSignature Language="C#" Value="public string SystemId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SystemId" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Linq.XDocumentType.SystemId" />
      <MemberSignature Language="VB.NET" Value="Public Property SystemId As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SystemId { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SystemId : string with get, set" Usage="System.Xml.Linq.XDocumentType.SystemId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b1205-158">Получает или задает системный идентификатор для этого Определения типа документа (DTD).</span><span class="sxs-lookup"><span data-stu-id="b1205-158">Gets or sets the system identifier for this Document Type Definition (DTD).</span></span></summary>
        <value><span data-ttu-id="b1205-159"><see cref="T:System.String" /> содержит системный идентификатор для этого Определения типа документа (DTD).</span><span class="sxs-lookup"><span data-stu-id="b1205-159">A <see cref="T:System.String" /> that contains the system identifier for this Document Type Definition (DTD).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1205-160">Если XML-документ использует внешнее закрытое DTD, это свойство будет содержать частный идентификатор внешнего DTD.</span><span class="sxs-lookup"><span data-stu-id="b1205-160">If an XML document uses an external private DTD, this property will contain the private identifier of the external DTD.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b1205-161">В следующем примере создается XML-документ, ссылающийся на внешнее закрытое определение DTD.</span><span class="sxs-lookup"><span data-stu-id="b1205-161">The following example creates an XML document that refers to an external private DTD.</span></span> <span data-ttu-id="b1205-162">DTD не имеет внутреннего подмножества.</span><span class="sxs-lookup"><span data-stu-id="b1205-162">The DTD does not have an internal subset.</span></span> <span data-ttu-id="b1205-163">Вызов <xref:System.Xml.Linq.XDocumentType> конструктора отражает использование внешнего частного DTD.</span><span class="sxs-lookup"><span data-stu-id="b1205-163">The call to the <xref:System.Xml.Linq.XDocumentType> constructor reflects the use of the external private DTD.</span></span> <span data-ttu-id="b1205-164">Он передается `null` во внутреннее подмножество.</span><span class="sxs-lookup"><span data-stu-id="b1205-164">It passes `null` for the internal subset.</span></span>  
  
```csharp  
string pubsDtd =  
@"<!ELEMENT Pubs (Book+)>  
<!ELEMENT Book (Title, Author)>  
<!ELEMENT Title (#PCDATA)>  
<!ELEMENT Author (#PCDATA)>";  
File.WriteAllText("Pubs.dtd", pubsDtd);  
  
string target = "xml-stylesheet";  
string data = "href=\"mystyle.css\" title=\"Compact\" type=\"text/css\"";  
  
XDocument doc = new XDocument(  
    new XDocumentType("Pubs", null, "Pubs.dtd", null),  
    new XElement("Pubs",   
        new XElement("Book",  
            new XElement("Title", "Artifacts of Roman Civilization"),  
            new XElement("Author", "Moreno, Jordao")  
        ),  
        new XElement("Book",  
            new XElement("Title", "Midieval Tools and Implements"),  
            new XElement("Author", "Gazit, Inbar")  
        )  
    ),  
    new XComment("This is another comment.")  
);  
doc.Declaration = new XDeclaration("1.0", "utf-8", "true");  
doc.Save("Pubs.xml");  
  
// Validate Pubs.xml against Pubs.dtd.  
XmlReaderSettings xrs = new XmlReaderSettings();  
xrs.ProhibitDtd = false;  
xrs.ValidationType = ValidationType.DTD;  
xrs.ConformanceLevel = ConformanceLevel.Auto;  
XmlReader xr = XmlReader.Create("Pubs.xml", xrs);  
XDocument doc2 = XDocument.Load(xr);  
  
XDocumentType dt = doc2.Document.DocumentType;  
Console.WriteLine("SystemId:{0}", dt.SystemId);  
```  
  
```vb  
Dim pubsDtd As String = _   
    "<!ELEMENT Pubs (Book+)>" & Environment.NewLine & _  
    "<!ELEMENT Book (Title, Author)>" & Environment.NewLine & _  
    "<!ELEMENT Title (#PCDATA)>" & Environment.NewLine & _  
    "<!ELEMENT Author (#PCDATA)>"  
File.WriteAllText("Pubs.dtd", pubsDtd)  
  
Dim target As String = "xml-stylesheet"  
Dim data As String = "href='mystyle.css' title='Compact' type='text/css'"  
  
Dim doc As XDocument = _  
    <?xml version='1.0'?>  
    <Pubs>  
        <Book>  
            <Title>Artifacts of Roman Civilization</Title>  
            <Author>Moreno, Jordao</Author>  
        </Book>  
        <Book>  
            <Title>Midieval Tools and Implements</Title>  
            <Author>Gazit, Inbar</Author>  
        </Book>  
    </Pubs>  
    <!--This is another comment.-->  
  
doc _  
.FirstNode _  
.AddBeforeSelf(New XDocumentType("Pubs", Nothing, "Pubs.dtd", Nothing))  
  
doc.Declaration = New XDeclaration("1.0", "utf-8", "true")  
doc.Save("Pubs.xml")  
  
' Validate Pubs.xml against Pubs.dtd.  
Dim xrs As XmlReaderSettings = New XmlReaderSettings()  
xrs.ProhibitDtd = False  
xrs.ValidationType = ValidationType.DTD  
xrs.ConformanceLevel = ConformanceLevel.Auto  
Dim xr As XmlReader = XmlReader.Create("Pubs.xml", xrs)  
Dim doc2 As XDocument = XDocument.Load(xr)  
  
Dim dt As XDocumentType = doc2.Document.DocumentType  
Console.WriteLine("SystemId:{0}", dt.SystemId)  
```  
  
 <span data-ttu-id="b1205-165">В этом примере выводятся следующие данные:</span><span class="sxs-lookup"><span data-stu-id="b1205-165">This example produces the following output:</span></span>  
  
```  
SystemId:Pubs.dtd  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/f0fe21e9-ee43-4a55-b91a-0800e5782c13"><span data-ttu-id="b1205-166">LINQ to XML</span><span class="sxs-lookup"><span data-stu-id="b1205-166">LINQ to XML</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteTo">
      <MemberSignature Language="C#" Value="public override void WriteTo (System.Xml.XmlWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteTo(class System.Xml.XmlWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XDocumentType.WriteTo(System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteTo (writer As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteTo(System::Xml::XmlWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.WriteTo : System.Xml.XmlWriter -&gt; unit" Usage="xDocumentType.WriteTo writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="b1205-167">Объект <see cref="T:System.Xml.XmlWriter" />, в который данный метод будет выполнять запись.</span><span class="sxs-lookup"><span data-stu-id="b1205-167">An <see cref="T:System.Xml.XmlWriter" /> into which this method will write.</span></span></param>
        <summary><span data-ttu-id="b1205-168">Запишите этот <see cref="T:System.Xml.Linq.XDocumentType" /> на <see cref="T:System.Xml.XmlWriter" />.</span><span class="sxs-lookup"><span data-stu-id="b1205-168">Write this <see cref="T:System.Xml.Linq.XDocumentType" /> to an <see cref="T:System.Xml.XmlWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1205-169">Этот метод в основном используется методами, записывающими дерево XML в <xref:System.Xml.XmlWriter>.</span><span class="sxs-lookup"><span data-stu-id="b1205-169">This method is primarily used internally by the methods that write an XML tree to an <xref:System.Xml.XmlWriter>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/f0fe21e9-ee43-4a55-b91a-0800e5782c13"><span data-ttu-id="b1205-170">LINQ to XML</span><span class="sxs-lookup"><span data-stu-id="b1205-170">LINQ to XML</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteToAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task WriteToAsync (System.Xml.XmlWriter writer, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task WriteToAsync(class System.Xml.XmlWriter writer, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XDocumentType.WriteToAsync(System.Xml.XmlWriter,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ WriteToAsync(System::Xml::XmlWriter ^ writer, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.WriteToAsync : System.Xml.XmlWriter * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="xDocumentType.WriteToAsync (writer, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="writer">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
