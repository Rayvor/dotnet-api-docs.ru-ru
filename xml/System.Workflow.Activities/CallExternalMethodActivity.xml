<Type Name="CallExternalMethodActivity" FullName="System.Workflow.Activities.CallExternalMethodActivity">
  <Metadata><Meta Name="ms.openlocfilehash" Value="181d8deb4fecaa15038583f7cbf06f0e347750ef" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69443289" /></Metadata><TypeSignature Language="C#" Value="public class CallExternalMethodActivity : System.Workflow.ComponentModel.Activity, System.Workflow.ComponentModel.IDynamicPropertyTypeProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CallExternalMethodActivity extends System.Workflow.ComponentModel.Activity implements class System.Workflow.ComponentModel.IDynamicPropertyTypeProvider" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.Activities.CallExternalMethodActivity" />
  <TypeSignature Language="VB.NET" Value="Public Class CallExternalMethodActivity&#xA;Inherits Activity&#xA;Implements IDynamicPropertyTypeProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class CallExternalMethodActivity : System::Workflow::ComponentModel::Activity, System::Workflow::ComponentModel::IDynamicPropertyTypeProvider" />
  <TypeSignature Language="F#" Value="type CallExternalMethodActivity = class&#xA;    inherit Activity&#xA;    interface IDynamicPropertyTypeProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.Activities</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Workflow.ComponentModel.Activity</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Workflow.ComponentModel.IDynamicPropertyTypeProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("MethodInvoking")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer(typeof(System.Workflow.Activities.CallExternalMethodActivityDesigner), typeof(System.ComponentModel.Design.IDesigner))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Workflow.ComponentModel.Compiler.ActivityValidator(typeof(System.Workflow.Activities.CallExternalMethodActivityValidator))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Определяет коммуникационное действие рабочего процесса, используемое для вызова метода в локальной службе. Это действие применяется для передачи данных из рабочего процесса в основное приложение через локальную службу.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 Локальная служба — это класс, реализующий интерфейс локальной службы (отмеченный атрибутом <xref:System.Workflow.Activities.ExternalDataExchangeAttribute>). Эта служба добавляется в службу <xref:System.Workflow.Activities.ExternalDataExchangeService>.  
  
> [!NOTE]
>  При вызове внешнего метода все параметры этого метода клонируются. Если типы параметров реализуют <xref:System.ICloneable>, вызывается метод `Clone`, или они сериализуются и десериализуются с помощью <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter>.  
  
   
  
## Examples  
 В следующем примере кода показано использование <xref:System.Workflow.Activities.CallExternalMethodActivity> в пользовательском действии для вызова внешнего метода. Данный пример кода является частью образца пакета SDK «Listen» из файла PurchaseOrderWorkflow.Designer.cs. Дополнительные сведения см. в разделе [Пример прослушивания](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741698(v=vs.90)).  
  
 [!code-csharp[wf_samples#213](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets19.cs#213)]
 [!code-vb[wf_samples#213](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets19.vb#213)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms734739(v=vs.90)">Использование действия CallExternalMethod</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.CallExternalMethodActivity" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере показано создание экземпляра класса `CallExternalMethodActivity`.  Это пример из примера SDK "PersistenceHost" из файла DocumentApprovalWorkflow.designer.cs. Дополнительные сведения см. в разделе [Образец узла сохраняемости](https://msdn.microsoft.com/library/8ba72a8f-eb95-410f-bb00-180f3c35f251).  
  
 [!code-csharp[wf_samples#278](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#278)]
 [!code-vb[wf_samples#278](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#278)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms734739(v=vs.90)">Использование действия CallExternalMethod</related>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CallExternalMethodActivity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.CallExternalMethodActivity.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CallExternalMethodActivity();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.CallExternalMethodActivity" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере кода показана инициализация нового экземпляра класса <xref:System.Workflow.Activities.CallExternalMethodActivity>. Этот код инициализирует также новые экземпляры классов <xref:System.Workflow.Activities.ListenActivity>, <xref:System.Workflow.Activities.EventDrivenActivity>, <xref:System.Workflow.Activities.HandleExternalEventActivity>, <xref:System.Workflow.Activities.DelayActivity> и <xref:System.Workflow.Activities.CodeActivity>. Данный пример кода является частью образца пакета SDK «Listen» из файла PurchaseOrderWorkflow.Designer.cs. Дополнительные сведения см. в разделе [Пример прослушивания](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741698(v=vs.90)).  
  
 [!code-csharp[wf_samples#214](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets19.cs#214)]
 [!code-vb[wf_samples#214](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets19.vb#214)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CallExternalMethodActivity (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.CallExternalMethodActivity.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CallExternalMethodActivity(System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Workflow.Activities.CallExternalMethodActivity : string -&gt; System.Workflow.Activities.CallExternalMethodActivity" Usage="new System.Workflow.Activities.CallExternalMethodActivity name" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Определенное пользователем имя действия, используемое для инициализации свойства имени действия.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.CallExternalMethodActivity" />, используя имя действия.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CorrelationToken">
      <MemberSignature Language="C#" Value="public virtual System.Workflow.Runtime.CorrelationToken CorrelationToken { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Workflow.Runtime.CorrelationToken CorrelationToken" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Activities.CallExternalMethodActivity.CorrelationToken" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CorrelationToken As CorrelationToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Workflow::Runtime::CorrelationToken ^ CorrelationToken { System::Workflow::Runtime::CorrelationToken ^ get(); void set(System::Workflow::Runtime::CorrelationToken ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CorrelationToken : System.Workflow.Runtime.CorrelationToken with get, set" Usage="System.Workflow.Activities.CallExternalMethodActivity.CorrelationToken" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Workflow.Activities.CorrelationTokenTypeConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Workflow.Runtime.CorrelationToken</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает <see cref="T:System.Workflow.Runtime.CorrelationToken" /> для внешнего метода.</summary>
        <value>Маркер корреляции для внешнего метода.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это свойство определяет, из какого конкретного действия <xref:System.Workflow.Activities.CallExternalMethodActivity> поступает вызов данного внешнего метода. Это значение может быть затем использовано в полезной нагрузке события локальной службы связи для направления этого события в соответствующее действие <xref:System.Workflow.Activities.HandleExternalEventActivity>.  
  
 Пример корреляции см. в разделе [Пример коррелированной локальной службы](https://msdn.microsoft.com/library/5a3d0733-bbea-4dbf-88ee-a8316db55fbd).  
  
   
  
## Examples  
 В следующем примере показано, как получить доступ к свойству `CorrelationToken` объекта `CallExternalMethodActivity`. Это пример из примера SDK "Correlated Local Service" из файла CorrelatedLocalServiceWorkflow.designer.cs. Дополнительные сведения см. в разделе [Пример коррелированной локальной службы](https://msdn.microsoft.com/library/5a3d0733-bbea-4dbf-88ee-a8316db55fbd).  
  
 [!code-csharp[wf_samples#200](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets19.cs#200)]
 [!code-vb[wf_samples#200](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets19.vb#200)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms734739(v=vs.90)">Использование действия CallExternalMethod</related>
      </Docs>
    </Member>
    <Member MemberName="CorrelationTokenProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Workflow.ComponentModel.DependencyProperty CorrelationTokenProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Workflow.ComponentModel.DependencyProperty CorrelationTokenProperty" />
      <MemberSignature Language="DocId" Value="F:System.Workflow.Activities.CallExternalMethodActivity.CorrelationTokenProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CorrelationTokenProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Workflow::ComponentModel::DependencyProperty ^ CorrelationTokenProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable CorrelationTokenProperty : System.Workflow.ComponentModel.DependencyProperty" Usage="System.Workflow.Activities.CallExternalMethodActivity.CorrelationTokenProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Представляет объект <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />, который нацелен на свойство <see cref="P:System.Workflow.Activities.CallExternalMethodActivity.CorrelationToken" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[DependencyPropertyRemark](~/includes/dependencypropertyremark-md.md)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms734739(v=vs.90)">Использование действия CallExternalMethod</related>
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="protected override sealed System.Workflow.ComponentModel.ActivityExecutionStatus Execute (System.Workflow.ComponentModel.ActivityExecutionContext executionContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Workflow.ComponentModel.ActivityExecutionStatus Execute(class System.Workflow.ComponentModel.ActivityExecutionContext executionContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.CallExternalMethodActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function Execute (executionContext As ActivityExecutionContext) As ActivityExecutionStatus" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Workflow::ComponentModel::ActivityExecutionStatus Execute(System::Workflow::ComponentModel::ActivityExecutionContext ^ executionContext);" />
      <MemberSignature Language="F#" Value="override this.Execute : System.Workflow.ComponentModel.ActivityExecutionContext -&gt; System.Workflow.ComponentModel.ActivityExecutionStatus" Usage="callExternalMethodActivity.Execute executionContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.ActivityExecutionStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="executionContext" Type="System.Workflow.ComponentModel.ActivityExecutionContext" />
      </Parameters>
      <Docs>
        <param name="executionContext">Объект <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" />, содержащий среду выполнения, в которой требуется выполнить действие <see cref="T:System.Workflow.Activities.CallExternalMethodActivity" />.</param>
        <summary>Пытается выполнить действие <see cref="T:System.Workflow.Activities.CallExternalMethodActivity" /> с заданным контекстом <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" />.</summary>
        <returns>Одно из значений перечисления <see cref="T:System.Workflow.ComponentModel.ActivityExecutionStatus" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">Это значение <see cref="P:System.Workflow.Activities.CallExternalMethodActivity.InterfaceType" /> является пустой ссылкой (<see langword="Nothing" /> в Visual Basic).</exception>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="executionContext" /> является неопределенной ссылкой (<see langword="Nothing" /> в Visual Basic).</exception>
        <exception cref="T:System.InvalidOperationException">Объект обслуживания для параметра <paramref name="executionContext" /> является пустой ссылкой (<see langword="Nothing" /> в Visual Basic).</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms734739(v=vs.90)">Использование действия CallExternalMethod</related>
      </Docs>
    </Member>
    <Member MemberName="InitializeProperties">
      <MemberSignature Language="C#" Value="protected override void InitializeProperties ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void InitializeProperties() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.CallExternalMethodActivity.InitializeProperties" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub InitializeProperties ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void InitializeProperties();" />
      <MemberSignature Language="F#" Value="override this.InitializeProperties : unit -&gt; unit" Usage="callExternalMethodActivity.InitializeProperties " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Выполняет инициализацию в свойствах зависимостей.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод инициализирует свойство <xref:System.Workflow.Activities.CallExternalMethodActivity.CorrelationToken%2A> и проверяет, что свойства <xref:System.Workflow.Activities.CallExternalMethodActivity.InterfaceType%2A> и <xref:System.Workflow.Activities.CallExternalMethodActivity.MethodName%2A> заданы и что событие, на которое ссылается свойство <xref:System.Workflow.Activities.CallExternalMethodActivity.MethodName%2A>, можно обнаружить в интерфейсе, на который ссылается свойство <xref:System.Workflow.Activities.CallExternalMethodActivity.InterfaceType%2A>.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms734739(v=vs.90)">Использование действия CallExternalMethodActivity</related>
      </Docs>
    </Member>
    <Member MemberName="InterfaceType">
      <MemberSignature Language="C#" Value="public virtual Type InterfaceType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type InterfaceType" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Activities.CallExternalMethodActivity.InterfaceType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property InterfaceType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ InterfaceType { Type ^ get(); void set(Type ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InterfaceType : Type with get, set" Usage="System.Workflow.Activities.CallExternalMethodActivity.InterfaceType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor(typeof(System.Workflow.ComponentModel.Design.TypeBrowserEditor), typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Workflow.ComponentModel.Design.TypeFilterProvider(typeof(System.Workflow.Activities.ExternalDataExchangeInterfaceTypeFilterProvider))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает объявляющий интерфейс внешнего метода, имеющий атрибут <see cref="T:System.Workflow.Activities.ExternalDataExchangeAttribute" />.</summary>
        <value>Объявляющий интерфейс внешнего метода, имеющий атрибут <see cref="T:System.Workflow.Activities.ExternalDataExchangeAttribute" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере кода показано задание свойства <xref:System.Workflow.Activities.CallExternalMethodActivity.InterfaceType%2A>. Тип интерфейса должен иметь атрибут <xref:System.Workflow.Activities.ExternalDataExchangeAttribute>. Данный пример кода является частью образца пакета SDK «Listen» из файла PurchaseOrderWorkflow.Designer.cs. Дополнительные сведения см. в разделе [Пример прослушивания](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741698(v=vs.90)).  
  
 [!code-csharp[wf_samples#217](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets19.cs#217)]
 [!code-vb[wf_samples#217](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets19.vb#217)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms734739(v=vs.90)">Использование действия CallExternalMethod</related>
      </Docs>
    </Member>
    <Member MemberName="InterfaceTypeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Workflow.ComponentModel.DependencyProperty InterfaceTypeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Workflow.ComponentModel.DependencyProperty InterfaceTypeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Workflow.Activities.CallExternalMethodActivity.InterfaceTypeProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly InterfaceTypeProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Workflow::ComponentModel::DependencyProperty ^ InterfaceTypeProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable InterfaceTypeProperty : System.Workflow.ComponentModel.DependencyProperty" Usage="System.Workflow.Activities.CallExternalMethodActivity.InterfaceTypeProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Представляет объект <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />, который нацелен на свойство <see cref="P:System.Workflow.Activities.CallExternalMethodActivity.InterfaceType" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Свойство <xref:System.Workflow.Activities.CallExternalMethodActivity.InterfaceType%2A> соответствует имени интерфейса, который был отмечен атрибутом <xref:System.Workflow.Activities.ExternalDataExchangeAttribute>.  
  
 [!INCLUDE[DependencyPropertyRemark](~/includes/dependencypropertyremark-md.md)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms734739(v=vs.90)">Использование действия CallExternalMethod</related>
      </Docs>
    </Member>
    <Member MemberName="MethodInvoking">
      <MemberSignature Language="C#" Value="public event EventHandler MethodInvoking;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler MethodInvoking" />
      <MemberSignature Language="DocId" Value="E:System.Workflow.Activities.CallExternalMethodActivity.MethodInvoking" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MethodInvoking As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ MethodInvoking;" />
      <MemberSignature Language="F#" Value="member this.MethodInvoking : EventHandler " Usage="member this.MethodInvoking : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит перед вызовом метода.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере кода показано использование события <xref:System.Workflow.Activities.CallExternalMethodActivity.MethodInvoking> для задания метода, который требуется вызвать перед вызовом внешнего метода. Данный пример кода является частью образца пакета SDK «Listen» из файла PurchaseOrderWorkflow.Designer.cs. Дополнительные сведения см. в разделе [Пример прослушивания](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741698(v=vs.90)).  
  
 [!code-csharp[wf_samples#217](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets19.cs#217)]
 [!code-vb[wf_samples#217](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets19.vb#217)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms734739(v=vs.90)">Использование действия CallExternalMethod</related>
      </Docs>
    </Member>
    <Member MemberName="MethodInvokingEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Workflow.ComponentModel.DependencyProperty MethodInvokingEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Workflow.ComponentModel.DependencyProperty MethodInvokingEvent" />
      <MemberSignature Language="DocId" Value="F:System.Workflow.Activities.CallExternalMethodActivity.MethodInvokingEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MethodInvokingEvent As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Workflow::ComponentModel::DependencyProperty ^ MethodInvokingEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MethodInvokingEvent : System.Workflow.ComponentModel.DependencyProperty" Usage="System.Workflow.Activities.CallExternalMethodActivity.MethodInvokingEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Представляет объект <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />, который нацелен на событие <see cref="E:System.Workflow.Activities.CallExternalMethodActivity.MethodInvoking" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Событие <xref:System.Workflow.Activities.CallExternalMethodActivity.MethodInvoking> определяет делегат события, который выполняется перед тем, как действие вызывает внешний метод в локальной службе.  
  
 [!INCLUDE[DependencyPropertyRemark](~/includes/dependencypropertyremark-md.md)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms734739(v=vs.90)">Использование действия CallExternalMethod</related>
      </Docs>
    </Member>
    <Member MemberName="MethodName">
      <MemberSignature Language="C#" Value="public virtual string MethodName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MethodName" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Activities.CallExternalMethodActivity.MethodName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property MethodName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ MethodName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MethodName : string with get, set" Usage="System.Workflow.Activities.CallExternalMethodActivity.MethodName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Workflow.Activities.Common.PropertyValueProviderTypeConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Workflow.ComponentModel.Design.PropertyValueProviderTypeConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает имя метода, который должен быть вызван в локальной службе, зарегистрированной службой <see cref="T:System.Workflow.Activities.ExternalDataExchangeService" />.</summary>
        <value>Имя метода интерфейса <see cref="T:System.Workflow.Activities.ExternalDataExchangeService" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере кода показано использование свойства <xref:System.Workflow.Activities.CallExternalMethodActivity.MethodName%2A> для задания имени внешнего метода. Данный пример кода является частью образца пакета SDK «Listen» из файла PurchaseOrderWorkflow.Designer.cs. Дополнительные сведения см. в разделе [Пример прослушивания](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741698(v=vs.90)).  
  
 [!code-csharp[wf_samples#217](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets19.cs#217)]
 [!code-vb[wf_samples#217](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets19.vb#217)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms734739(v=vs.90)">Использование действия CallExternalMethod</related>
      </Docs>
    </Member>
    <Member MemberName="MethodNameProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Workflow.ComponentModel.DependencyProperty MethodNameProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Workflow.ComponentModel.DependencyProperty MethodNameProperty" />
      <MemberSignature Language="DocId" Value="F:System.Workflow.Activities.CallExternalMethodActivity.MethodNameProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MethodNameProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Workflow::ComponentModel::DependencyProperty ^ MethodNameProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable MethodNameProperty : System.Workflow.ComponentModel.DependencyProperty" Usage="System.Workflow.Activities.CallExternalMethodActivity.MethodNameProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Представляет объект <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />, который нацелен на свойство <see cref="P:System.Workflow.Activities.CallExternalMethodActivity.MethodName" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Свойство <xref:System.Workflow.Activities.CallExternalMethodActivity.MethodName%2A> соответствует имени метода, содержащегося в интерфейсе, который отмечен атрибутом <xref:System.Workflow.Activities.ExternalDataExchangeAttribute>.  
  
 [!INCLUDE[DependencyPropertyRemark](~/includes/dependencypropertyremark-md.md)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms734739(v=vs.90)">Использование действия CallExternalMethod</related>
      </Docs>
    </Member>
    <Member MemberName="OnMethodInvoked">
      <MemberSignature Language="C#" Value="protected virtual void OnMethodInvoked (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMethodInvoked(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.CallExternalMethodActivity.OnMethodInvoked(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMethodInvoked (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMethodInvoked(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMethodInvoked : EventArgs -&gt; unit&#xA;override this.OnMethodInvoked : EventArgs -&gt; unit" Usage="callExternalMethodActivity.OnMethodInvoked e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Объект <see cref="T:System.EventArgs" />, содержащий данные для события <see cref="E:System.Workflow.Activities.CallExternalMethodActivity.MethodInvoking" />.</param>
        <summary>Предоставляет обработчик для производных классов для извлечения и возврата значений из свойства <see cref="P:System.Workflow.Activities.CallExternalMethodActivity.ParameterBindings" />. Этот метод вызывается после выполнения внешнего метода.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере показана реализация метода `OnMethodInvoked`.  
  
 [!code-csharp[wf_samples#1](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#1)]
 [!code-vb[wf_samples#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms734739(v=vs.90)">Использование действия CallExternalMethod</related>
      </Docs>
    </Member>
    <Member MemberName="OnMethodInvoking">
      <MemberSignature Language="C#" Value="protected virtual void OnMethodInvoking (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMethodInvoking(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.CallExternalMethodActivity.OnMethodInvoking(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMethodInvoking (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMethodInvoking(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMethodInvoking : EventArgs -&gt; unit&#xA;override this.OnMethodInvoking : EventArgs -&gt; unit" Usage="callExternalMethodActivity.OnMethodInvoking e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Объект <see cref="T:System.EventArgs" />, содержащий данные для события <see cref="E:System.Workflow.Activities.CallExternalMethodActivity.MethodInvoking" />.</param>
        <summary>Предоставляет обработчик для производных классов для задания свойства <see cref="P:System.Workflow.Activities.CallExternalMethodActivity.ParameterBindings" />. Этот метод вызывается перед выполнением внешнего метода.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере показана реализация метода `OnMethodInvoking`. Это пример из примера SDK "Correlated Local Service" из файла CreateTask.cs. Дополнительные сведения см. в разделе [Пример коррелированной локальной службы](https://msdn.microsoft.com/library/5a3d0733-bbea-4dbf-88ee-a8316db55fbd).  
  
 [!code-csharp[wf_samples#207](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets19.cs#207)]
 [!code-vb[wf_samples#207](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets19.vb#207)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms734739(v=vs.90)">Использование действия CallExternalMethod</related>
      </Docs>
    </Member>
    <Member MemberName="ParameterBindings">
      <MemberSignature Language="C#" Value="public System.Workflow.ComponentModel.WorkflowParameterBindingCollection ParameterBindings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Workflow.ComponentModel.WorkflowParameterBindingCollection ParameterBindings" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Activities.CallExternalMethodActivity.ParameterBindings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ParameterBindings As WorkflowParameterBindingCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Workflow::ComponentModel::WorkflowParameterBindingCollection ^ ParameterBindings { System::Workflow::ComponentModel::WorkflowParameterBindingCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ParameterBindings : System.Workflow.ComponentModel.WorkflowParameterBindingCollection" Usage="System.Workflow.Activities.CallExternalMethodActivity.ParameterBindings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.WorkflowParameterBindingCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает коллекцию привязываемых параметров, обнаруженных в списке формальных параметров внешнего метода.</summary>
        <value>Коллекция <see cref="T:System.Workflow.ComponentModel.WorkflowParameterBindingCollection" /> параметров, к которым требуется выполнить привязку.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере показано добавление привязки параметров в коллекцию привязок параметров. Это пример из образца пакета SDK «Host Communication» из файла VotingServiceWorkflow.designer.cs. Дополнительные сведения см. в разделе [пример обмена данными с узлом](https://msdn.microsoft.com/library/ce4b0b8c-bfa3-4c24-b85a-5835a440ea8f).  
  
 [!code-csharp[WF_Samples#301](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets38.cs#301)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms734739(v=vs.90)">Использование действия CallExternalMethod</related>
      </Docs>
    </Member>
    <Member MemberName="ParameterBindingsProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Workflow.ComponentModel.DependencyProperty ParameterBindingsProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Workflow.ComponentModel.DependencyProperty ParameterBindingsProperty" />
      <MemberSignature Language="DocId" Value="F:System.Workflow.Activities.CallExternalMethodActivity.ParameterBindingsProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ParameterBindingsProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Workflow::ComponentModel::DependencyProperty ^ ParameterBindingsProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ParameterBindingsProperty : System.Workflow.ComponentModel.DependencyProperty" Usage="System.Workflow.Activities.CallExternalMethodActivity.ParameterBindingsProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Представляет объект <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />, который нацелен на свойство <see cref="P:System.Workflow.Activities.CallExternalMethodActivity.ParameterBindings" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[DependencyPropertyRemark](~/includes/dependencypropertyremark-md.md)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms734739(v=vs.90)">Использование действия CallExternalMethod</related>
      </Docs>
    </Member>
    <Member MemberName="System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType">
      <MemberSignature Language="C#" Value="System.Workflow.ComponentModel.Compiler.AccessTypes IDynamicPropertyTypeProvider.GetAccessType (IServiceProvider serviceProvider, string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.Workflow.ComponentModel.Compiler.AccessTypes System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType(class System.IServiceProvider serviceProvider, string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.CallExternalMethodActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetAccessType(System.IServiceProvider,System.String)" />
      <MemberSignature Language="VB.NET" Value="Function GetAccessType (serviceProvider As IServiceProvider, propertyName As String) As AccessTypes Implements IDynamicPropertyTypeProvider.GetAccessType" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Workflow::ComponentModel::Compiler::AccessTypes System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType(IServiceProvider ^ serviceProvider, System::String ^ propertyName) = System::Workflow::ComponentModel::IDynamicPropertyTypeProvider::GetAccessType;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType(System.IServiceProvider,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Compiler.AccessTypes</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="serviceProvider">Объект, реализующий интерфейс <see cref="T:System.IServiceProvider" /> для предоставления доступа к службам времени разработки, если они требуются.</param>
        <param name="propertyName">Имя свойства.</param>
        <summary>Возвращает тип доступа для заданного свойства.</summary>
        <returns>Значение перечисления <see cref="T:System.Workflow.ComponentModel.Compiler.AccessTypes" />, указывающее уровень доступа свойства.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используется во время компиляции для проверки, правильно ли свойства связаны друг с другом. Без данного интерфейса эта информация выводится непосредственно из методов задания и считывания свойства.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType">
      <MemberSignature Language="C#" Value="Type IDynamicPropertyTypeProvider.GetPropertyType (IServiceProvider serviceProvider, string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Type System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType(class System.IServiceProvider serviceProvider, string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.CallExternalMethodActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetPropertyType(System.IServiceProvider,System.String)" />
      <MemberSignature Language="VB.NET" Value="Function GetPropertyType (serviceProvider As IServiceProvider, propertyName As String) As Type Implements IDynamicPropertyTypeProvider.GetPropertyType" />
      <MemberSignature Language="C++ CLI" Value=" virtual Type ^ System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType(IServiceProvider ^ serviceProvider, System::String ^ propertyName) = System::Workflow::ComponentModel::IDynamicPropertyTypeProvider::GetPropertyType;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType(System.IServiceProvider,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="serviceProvider">Объект, реализующий интерфейс <see cref="T:System.IServiceProvider" /> для предоставления доступа к службам времени разработки, если они требуются.</param>
        <param name="propertyName">Имя свойства.</param>
        <summary>Возвращает тип <see cref="T:System.Type" /> заданного свойства.</summary>
        <returns>Тип <see cref="T:System.Type" /> для свойства, имя которого передано в качестве параметра <paramref name="propertyName" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используется во время компиляции для проверки, правильно ли свойства связаны друг с другом.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
