<Type Name="ExternalDataEventArgs" FullName="System.Workflow.Activities.ExternalDataEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f71fb1e94a4f2c46011689c42ce6989305eb2719" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69443172" /></Metadata><TypeSignature Language="C#" Value="public class ExternalDataEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit ExternalDataEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.Activities.ExternalDataEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class ExternalDataEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class ExternalDataEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type ExternalDataEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.Activities</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Представляет данные, отправленные при возникновении события с помощью действия <see cref="T:System.Workflow.Activities.HandleExternalEventActivity" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 Интерфейс локального взаимодействия, отмеченный атрибутом <xref:System.Workflow.Activities.ExternalDataExchangeAttribute>, должен объявить тип, наследуемый от <xref:System.Workflow.Activities.ExternalDataEventArgs>, в определении интерфейса для соответствующего события, которое должно обрабатываться в рабочем процессе с помощью действия <xref:System.Workflow.Activities.HandleExternalEventActivity>.  
  
   
  
## Examples  
 Класс события, наследующий от <xref:System.Workflow.Activities.ExternalDataEventArgs>, должен реализовывать конструктор, использующий конструктор `:base(instanceId)`. Кроме того, новый класс событий должен быть помечен как `Serializable`, как показано в приведенном ниже коде.  
  
```csharp  
[Serializable]  
public class TaskEventArgs : ExternalDataEventArgs  
{  
    private string orderName;  
  
    public TaskEventArgs(Guid instanceId, string id)  
        :base(instanceId)  
    {  
        orderName = id;  
    }  
  
    public string Id  
    {  
        get { return orderName; }  
        set { orderName = value; }  
    }  
}  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.ExternalDataEventArgs" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В приведенном ниже примере показано, как вызвать базовый конструктор <xref:System.Workflow.Activities.ExternalDataEventArgs> из конструктора производного класса. Это пример из примера SDK "Ordering State Machine". Дополнительные сведения см. в разделе [Пример упорядочивания конечного автомата](https://msdn.microsoft.com/library/59272cf4-bc98-439c-bcfa-b66999ebce5c).  
  
 [!code-csharp[wf_samples#121](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets1.cs#121)]
 [!code-vb[wf_samples#121](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets1.vb#121)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ExternalDataEventArgs ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.ExternalDataEventArgs.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ExternalDataEventArgs();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.ExternalDataEventArgs" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ExternalDataEventArgs (Guid instanceId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Guid instanceId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.ExternalDataEventArgs.#ctor(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (instanceId As Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ExternalDataEventArgs(Guid instanceId);" />
      <MemberSignature Language="F#" Value="new System.Workflow.Activities.ExternalDataEventArgs : Guid -&gt; System.Workflow.Activities.ExternalDataEventArgs" Usage="new System.Workflow.Activities.ExternalDataEventArgs instanceId" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="instanceId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="instanceId">Идентификатор экземпляра рабочего процесса, содержащего объект <see cref="T:System.Workflow.Activities.HandleExternalEventActivity" />, который должен обрабатывать событие.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.ExternalDataEventArgs" />, используя идентификатор экземпляра рабочего процесса.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ExternalDataEventArgs (Guid instanceId, System.Workflow.Runtime.IPendingWork workHandler, object workItem);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Guid instanceId, class System.Workflow.Runtime.IPendingWork workHandler, object workItem) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.ExternalDataEventArgs.#ctor(System.Guid,System.Workflow.Runtime.IPendingWork,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (instanceId As Guid, workHandler As IPendingWork, workItem As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ExternalDataEventArgs(Guid instanceId, System::Workflow::Runtime::IPendingWork ^ workHandler, System::Object ^ workItem);" />
      <MemberSignature Language="F#" Value="new System.Workflow.Activities.ExternalDataEventArgs : Guid * System.Workflow.Runtime.IPendingWork * obj -&gt; System.Workflow.Activities.ExternalDataEventArgs" Usage="new System.Workflow.Activities.ExternalDataEventArgs (instanceId, workHandler, workItem)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="instanceId" Type="System.Guid" />
        <Parameter Name="workHandler" Type="System.Workflow.Runtime.IPendingWork" />
        <Parameter Name="workItem" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instanceId">Идентификатор экземпляра рабочего процесса, содержащего объект <see cref="T:System.Workflow.Activities.HandleExternalEventActivity" />, который должен обрабатывать событие.</param>
        <param name="workHandler">Объект <see cref="T:System.Workflow.Runtime.IPendingWork" />, разрешающий внешнему коду, который порождает событие, участвовать в пакете.</param>
        <param name="workItem">Объект, содержащий внешний код, который порождает событие.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.ExternalDataEventArgs" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ExternalDataEventArgs (Guid instanceId, System.Workflow.Runtime.IPendingWork workHandler, object workItem, bool waitForIdle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Guid instanceId, class System.Workflow.Runtime.IPendingWork workHandler, object workItem, bool waitForIdle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.ExternalDataEventArgs.#ctor(System.Guid,System.Workflow.Runtime.IPendingWork,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (instanceId As Guid, workHandler As IPendingWork, workItem As Object, waitForIdle As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ExternalDataEventArgs(Guid instanceId, System::Workflow::Runtime::IPendingWork ^ workHandler, System::Object ^ workItem, bool waitForIdle);" />
      <MemberSignature Language="F#" Value="new System.Workflow.Activities.ExternalDataEventArgs : Guid * System.Workflow.Runtime.IPendingWork * obj * bool -&gt; System.Workflow.Activities.ExternalDataEventArgs" Usage="new System.Workflow.Activities.ExternalDataEventArgs (instanceId, workHandler, workItem, waitForIdle)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="instanceId" Type="System.Guid" />
        <Parameter Name="workHandler" Type="System.Workflow.Runtime.IPendingWork" />
        <Parameter Name="workItem" Type="System.Object" />
        <Parameter Name="waitForIdle" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="instanceId">Идентификатор экземпляра рабочего процесса, содержащего объект <see cref="T:System.Workflow.Activities.HandleExternalEventActivity" />, который должен обрабатывать событие.</param>
        <param name="workHandler">Объект <see cref="T:System.Workflow.Runtime.IPendingWork" />, разрешающий внешнему коду, который инициирует событие, участвовать в пакете.</param>
        <param name="workItem">Объект, содержащий внешний код, который порождает событие.</param>
        <param name="waitForIdle">Значение, указывающее, должен ли рабочий процесс переходить в состояние простоя перед инициированием события; в противном случае — <see langword="false" />.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.ExternalDataEventArgs" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Identity">
      <MemberSignature Language="C#" Value="public string Identity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Identity" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Activities.ExternalDataEventArgs.Identity" />
      <MemberSignature Language="VB.NET" Value="Public Property Identity As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Identity { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Identity : string with get, set" Usage="System.Workflow.Activities.ExternalDataEventArgs.Identity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает идентификацию пользователя, породившего событие.</summary>
        <value>Идентификация пользователя, породившего событие.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это свойство оценивается действием <xref:System.Workflow.Activities.HandleExternalEventActivity>. Если значение, заданное в свойстве <xref:System.Workflow.Activities.HandleExternalEventActivity.Roles%2A> этого действия, не соответствует ни одной из ролей, связанных с идентификатором пользователя, выполнение действия не разрешается.  
  
 Объектом, инициирующим событие, может быть пользователь или компьютер.  
  
 Идентификация используется функцией ролей для проверки, разрешено ли этому объекту отправлять данные в этот рабочий процесс.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InstanceId">
      <MemberSignature Language="C#" Value="public Guid InstanceId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid InstanceId" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Activities.ExternalDataEventArgs.InstanceId" />
      <MemberSignature Language="VB.NET" Value="Public Property InstanceId As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Guid InstanceId { Guid get(); void set(Guid value); };" />
      <MemberSignature Language="F#" Value="member this.InstanceId : Guid with get, set" Usage="System.Workflow.Activities.ExternalDataEventArgs.InstanceId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает идентификатор экземпляра рабочего процесса, содержащего объект <see cref="T:System.Workflow.Activities.HandleExternalEventActivity" />, который должен обрабатывать событие.</summary>
        <value>Идентификатор экземпляра рабочего процесса, содержащего объект <see cref="T:System.Workflow.Activities.HandleExternalEventActivity" />, который должен обрабатывать событие.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это обязательное свойство.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WaitForIdle">
      <MemberSignature Language="C#" Value="public bool WaitForIdle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool WaitForIdle" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Activities.ExternalDataEventArgs.WaitForIdle" />
      <MemberSignature Language="VB.NET" Value="Public Property WaitForIdle As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool WaitForIdle { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.WaitForIdle : bool with get, set" Usage="System.Workflow.Activities.ExternalDataEventArgs.WaitForIdle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, указывающее, должно ли событие порождаться немедленно или рабочий процесс должен переходить в состояние простоя перед порождением события.</summary>
        <value><see langword="true" />, если рабочий процесс должен переходить в состояние простоя перед порождением события; в противном случае — <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Значение по умолчанию — `false`.  
  
 Значение `true` указывает, что данные были отправлены в рабочий процесс с помощью <xref:System.Workflow.Runtime.WorkflowInstance.EnqueueItemOnIdle%2A>. Значение `false` указывает, что данные были отправлены в рабочий процесс с помощью <xref:System.Workflow.Runtime.WorkflowInstance.EnqueueItem%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WorkHandler">
      <MemberSignature Language="C#" Value="public System.Workflow.Runtime.IPendingWork WorkHandler { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Workflow.Runtime.IPendingWork WorkHandler" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Activities.ExternalDataEventArgs.WorkHandler" />
      <MemberSignature Language="VB.NET" Value="Public Property WorkHandler As IPendingWork" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Workflow::Runtime::IPendingWork ^ WorkHandler { System::Workflow::Runtime::IPendingWork ^ get(); void set(System::Workflow::Runtime::IPendingWork ^ value); };" />
      <MemberSignature Language="F#" Value="member this.WorkHandler : System.Workflow.Runtime.IPendingWork with get, set" Usage="System.Workflow.Activities.ExternalDataEventArgs.WorkHandler" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.Runtime.IPendingWork</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает объект <see cref="T:System.Workflow.Runtime.IPendingWork" />, разрешающий внешнему коду, который порождает событие, участвовать в пакете.</summary>
        <value>Объект <see cref="T:System.Workflow.Runtime.IPendingWork" />, разрешающий внешнему коду, который порождает событие, участвовать в пакете.</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Workflow.Runtime.IPendingWork" />
      </Docs>
    </Member>
    <Member MemberName="WorkItem">
      <MemberSignature Language="C#" Value="public object WorkItem { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object WorkItem" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Activities.ExternalDataEventArgs.WorkItem" />
      <MemberSignature Language="VB.NET" Value="Public Property WorkItem As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ WorkItem { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.WorkItem : obj with get, set" Usage="System.Workflow.Activities.ExternalDataEventArgs.WorkItem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает объект, содержащий внешний код, который инициирует событие.</summary>
        <value>Объект, содержащий внешний код, который порождает событие.</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Workflow.Runtime.IPendingWork" />
      </Docs>
    </Member>
  </Members>
</Type>
