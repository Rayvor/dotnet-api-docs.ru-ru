<Type Name="SpellCheck" FullName="System.Windows.Controls.SpellCheck">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b60f19df42df8f06840315f9f241fa5b58737ae8" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75175304" /></Metadata><TypeSignature Language="C#" Value="public sealed class SpellCheck" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SpellCheck extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.SpellCheck" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SpellCheck" />
  <TypeSignature Language="C++ CLI" Value="public ref class SpellCheck sealed" />
  <TypeSignature Language="F#" Value="type SpellCheck = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Обеспечивает функциональную возможность проверки правописания в реальном времени для элементов управления редактирования текста, включая <see cref="T:System.Windows.Controls.TextBox" /> и <see cref="T:System.Windows.Controls.RichTextBox" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Чтобы включить средство проверки орфографии, установите для свойства <xref:System.Windows.Controls.SpellCheck.IsEnabled%2A?displayProperty=nameWithType> значение `true` в элементе управления редактированием текста. Если эта проверка орфографии включена, слова с ошибками подчеркиваются красной волнистой линией, как показано на следующем рисунке. Средство проверки орфографии поддерживается только в том случае, если WPF предоставляет словарь по умолчанию. В [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]WPF предоставляет словари для английского, французского, немецкого и испанского языков.  
  
 ![Текстовое поле с&#45;проверкой орфографии](~/add/media/editing-textbox-with-spellchecking.png "Textbox с проверкой правописания")  
  
 Чтобы добавить пользовательский словарь, добавьте расположение файла лексикона в коллекцию <xref:System.Windows.Controls.SpellCheck.CustomDictionaries%2A>.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CustomDictionaries">
      <MemberSignature Language="C#" Value="public System.Collections.IList CustomDictionaries { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IList CustomDictionaries" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.SpellCheck.CustomDictionaries" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CustomDictionaries As IList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::IList ^ CustomDictionaries { System::Collections::IList ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CustomDictionaries : System.Collections.IList" Usage="System.Windows.Controls.SpellCheck.CustomDictionaries" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает коллекцию расположений файлов словарей, используемых для пользовательской проверки правописания.</summary>
        <value>Коллекция расположений файлов словарей.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 В пользовательских словарях используются файлы лексикона, являющиеся текстовыми файлами с расширением lex. Каждая строка файла лексики содержит одно слово, которое принимается как законное правописание. В первой строке файла можно указать код локали (LCID), к которому применяется словарь. Если языковой стандарт не указан, словарь применяется ко всем языкам. Дополнительные сведения см. в разделе [коды языков](https://go.microsoft.com/fwlink/?LinkId=165561). В следующем примере показаны первые несколько строк файла лексики для английского языка.  
  
```  
#LID 1033  
TextBlock  
TextBox  
ListBox  
```  
  
 Чтобы указать один или несколько пользовательских словарей для <xref:System.Windows.Controls.TextBox> или для любого класса, производного от <xref:System.Windows.Controls.Primitives.TextBoxBase>, укажите расположение файла лексикона, добавив универсальный код ресурса (URI) для файла в коллекцию <xref:System.Windows.Controls.SpellCheck.CustomDictionaries%2A>.  
  
> [!NOTE]
>  Использование <xref:System.Collections.IList.Insert%2A> для добавления файла в коллекцию <xref:System.Windows.Controls.SpellCheck.CustomDictionaries%2A> вызывает исключение. Вместо этого используйте <xref:System.Collections.IList.Add%2A> и <xref:System.Collections.IList.Remove%2A> для обновления коллекции.  
  
 Файлы лексикона можно включить в приложение как файлы содержимого, установленные на локальном компьютере, или как файлы ресурсов, скомпилированные в локальную сборку, на которую указывает ссылка. Ссылаться на этот файл можно с помощью URI типа pack. Дополнительные сведения см. в разделе [URI типа "pack" в WPF](~/docs/framework/wpf/app-development/pack-uris-in-wpf.md).  
  
 Чтобы включить средство проверки орфографии, установите свойство <xref:System.Windows.Controls.SpellCheck.IsEnabled%2A?displayProperty=nameWithType> в значение `true` на <xref:System.Windows.Controls.TextBox> или в любом классе, производном от <xref:System.Windows.Controls.Primitives.TextBoxBase>. Все пользовательские словари для этого <xref:System.Windows.Controls.TextBox> используются в дополнение к средству проверки орфографии по умолчанию. Дополнительные сведения о средстве проверки орфографии см. в разделе <xref:System.Windows.Controls.SpellCheck>.  
  
   
  
## Examples  
 В следующем примере показано, как добавить два пользовательских словаря в <xref:System.Windows.Controls.RichTextBox>. В XAML добавляется первый пользовательский словарь (кустомвордс. lex). Файл включается в приложение как файл содержимого и копируется в выходной каталог. Чтобы использовать элемент <xref:System.Uri>, необходимо включить пространство имен System.  
  
 `xmlns:sys="clr-namespace:System;assembly=System"`  
  
 Второй пользовательский словарь (customwords2. lex) добавляется в обработчик событий <xref:System.Windows.Controls.Primitives.ButtonBase.Click>. Файл включается в качестве файла ресурсов и компилируется в сборку приложения с именем Впфкустомдиктионари.  
  
 [!code-xaml[WpfCustomDictionary#1](~/samples/snippets/csharp/VS_Snippets_Wpf/wpfcustomdictionary/cs/window1.xaml#1)]  
  
 [!code-csharp[WpfCustomDictionary#2](~/samples/snippets/csharp/VS_Snippets_Wpf/wpfcustomdictionary/cs/window1.xaml.cs#2)]
 [!code-vb[WpfCustomDictionary#2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/wpfcustomdictionary/vb/mainwindow.xaml.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.SpellCheck" />
        <altmember cref="T:System.Windows.Controls.TextBox" />
        <altmember cref="T:System.Windows.Controls.RichTextBox" />
        <altmember cref="M:System.Windows.Controls.SpellCheck.GetCustomDictionaries(System.Windows.Controls.Primitives.TextBoxBase)" />
      </Docs>
    </Member>
    <Member MemberName="CustomDictionariesProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CustomDictionariesProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CustomDictionariesProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.SpellCheck.CustomDictionariesProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CustomDictionariesProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ CustomDictionariesProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable CustomDictionariesProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.SpellCheck.CustomDictionariesProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Идентифицирует свойство зависимостей <see cref="P:System.Windows.Controls.SpellCheck.CustomDictionaries" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCustomDictionaries">
      <MemberSignature Language="C#" Value="public static System.Collections.IList GetCustomDictionaries (System.Windows.Controls.Primitives.TextBoxBase textBoxBase);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.IList GetCustomDictionaries(class System.Windows.Controls.Primitives.TextBoxBase textBoxBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.SpellCheck.GetCustomDictionaries(System.Windows.Controls.Primitives.TextBoxBase)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::IList ^ GetCustomDictionaries(System::Windows::Controls::Primitives::TextBoxBase ^ textBoxBase);" />
      <MemberSignature Language="F#" Value="static member GetCustomDictionaries : System.Windows.Controls.Primitives.TextBoxBase -&gt; System.Collections.IList" Usage="System.Windows.Controls.SpellCheck.GetCustomDictionaries textBoxBase" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textBoxBase" Type="System.Windows.Controls.Primitives.TextBoxBase" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="textBoxBase">Элемент управления редактированием текста, для которого извлекается коллекция файлов словарей.</param>
        <summary>Получает коллекцию расположений файлов словарей, используемых для пользовательских функций проверки правописания для заданного элемента управления редактированием текста.</summary>
        <returns>Коллекция расположений файлов словарей.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 В пользовательских словарях используются файлы лексикона, являющиеся простыми текстовыми файлами с расширением lex. Каждая строка файла лексики содержит одно слово, которое принимается как законное правописание. В первой строке файла можно указать код локали (LCID), к которому применяется словарь. Если языковой стандарт не указан, словарь применяется ко всем языкам. Дополнительные сведения см. в разделе [коды языков](https://go.microsoft.com/fwlink/?LinkId=165561). В следующем примере показаны первые несколько строк файла лексики для английского языка.  
  
```  
#LID 1033  
TextBlock  
TextBox  
ListBox  
```  
  
 Чтобы указать один или несколько пользовательских словарей для <xref:System.Windows.Controls.TextBox> или любого класса, производного от <xref:System.Windows.Controls.Primitives.TextBoxBase>, укажите расположение файла лексикона, добавив универсальный код ресурса (URI) для файла в <xref:System.Collections.IList>, возвращаемый методом <xref:System.Windows.Controls.SpellCheck.GetCustomDictionaries%2A>.  
  
 Чтобы включить средство проверки орфографии, установите свойство <xref:System.Windows.Controls.SpellCheck.IsEnabled%2A?displayProperty=nameWithType> в значение `true` на <xref:System.Windows.Controls.TextBox> или в любом классе, производном от <xref:System.Windows.Controls.Primitives.TextBoxBase>. Все пользовательские словари для этого <xref:System.Windows.Controls.TextBox> используются в дополнение к средству проверки орфографии по умолчанию. Дополнительные сведения о средстве проверки орфографии см. в разделе <xref:System.Windows.Controls.SpellCheck>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="textBoxBase" /> — <see langword="null" />.</exception>
        <altmember cref="P:System.Windows.Controls.SpellCheck.CustomDictionaries" />
        <altmember cref="T:System.Windows.Controls.SpellCheck" />
        <altmember cref="T:System.Windows.Controls.TextBox" />
        <altmember cref="T:System.Windows.Controls.RichTextBox" />
      </Docs>
    </Member>
    <Member MemberName="GetIsEnabled">
      <MemberSignature Language="C#" Value="public static bool GetIsEnabled (System.Windows.Controls.Primitives.TextBoxBase textBoxBase);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetIsEnabled(class System.Windows.Controls.Primitives.TextBoxBase textBoxBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.SpellCheck.GetIsEnabled(System.Windows.Controls.Primitives.TextBoxBase)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool GetIsEnabled(System::Windows::Controls::Primitives::TextBoxBase ^ textBoxBase);" />
      <MemberSignature Language="F#" Value="static member GetIsEnabled : System.Windows.Controls.Primitives.TextBoxBase -&gt; bool" Usage="System.Windows.Controls.SpellCheck.GetIsEnabled textBoxBase" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textBoxBase" Type="System.Windows.Controls.Primitives.TextBoxBase" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="textBoxBase">Элемент управления редактированием текста, который необходимо проверить. Примерами элементов управления могут служить <see cref="T:System.Windows.Controls.TextBox" /> и <see cref="T:System.Windows.Controls.RichTextBox" />.</param>
        <summary>Возвращает значение, указывающее, включена ли проверка правописания для заданного элемента управления редактированием текста.</summary>
        <returns>Значение <see langword="true" />, если проверка правописания в элементе управления редактирования текста включена; в противном случае — значение <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="textBoxBase" /> — <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsEnabled">
      <MemberSignature Language="C#" Value="public bool IsEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.SpellCheck.IsEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property IsEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsEnabled : bool with get, set" Usage="System.Windows.Controls.SpellCheck.IsEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает значение, указывающее, включена ли проверка орфографии в этом элементе управления для редактирования текста, например в <see cref="T:System.Windows.Controls.TextBox" /> или <see cref="T:System.Windows.Controls.RichTextBox" />.</summary>
        <value>Значение <see langword="true" />, если проверка орфографии в этом элементе управления включена; в противном случае — значение <see langword="false" />. Значение по умолчанию — <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это свойство зависимости также имеет специализированное использование присоединенного свойства только для чтения. [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] синтаксис для задания свойства `<`*текстбоксбасекласс* **проверкой орфографии.** <xref:System.Windows.Controls.Primitives.TextBoxBase>`="`*булвалуе*`" .../>`, где *текстбоксбасекласс* — это объектный элемент для класса, производного от `true`, а *булвалуе* — либо `false`, либо (без учета регистра). Чтобы задать свойство как присоединенное свойство в коде, см. метод <xref:System.Windows.Controls.SpellCheck.SetIsEnabled%2A>. Соответствующий метод доступа `GetIsEnabled` отсутствует. Чтобы получить значение, получите текущий объект <xref:System.Windows.Controls.SpellCheck> из свойства <xref:System.Windows.Controls.Primitives.TextBoxBase.SpellCheck%2A?displayProperty=nameWithType>, а затем получите значение свойства <xref:System.Windows.Controls.SpellCheck.IsEnabled%2A> из этого <xref:System.Windows.Controls.SpellCheck>.  
  
<a name="dependencyPropertyInfo_IsEnabled"></a>   
## <a name="dependency-property-information"></a>Сведения о свойстве зависимостей  
  
|||  
|-|-|  
|Поле идентификатора|<xref:System.Windows.Controls.SpellCheck.IsEnabledProperty>|  
|Для свойств метаданных задано значение `true`|Нет|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEnabledProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsEnabledProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsEnabledProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.SpellCheck.IsEnabledProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsEnabledProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsEnabledProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsEnabledProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.SpellCheck.IsEnabledProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Идентифицирует свойство зависимостей <see cref="P:System.Windows.Controls.SpellCheck.IsEnabled" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetIsEnabled">
      <MemberSignature Language="C#" Value="public static void SetIsEnabled (System.Windows.Controls.Primitives.TextBoxBase textBoxBase, bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetIsEnabled(class System.Windows.Controls.Primitives.TextBoxBase textBoxBase, bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.SpellCheck.SetIsEnabled(System.Windows.Controls.Primitives.TextBoxBase,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetIsEnabled(System::Windows::Controls::Primitives::TextBoxBase ^ textBoxBase, bool value);" />
      <MemberSignature Language="F#" Value="static member SetIsEnabled : System.Windows.Controls.Primitives.TextBoxBase * bool -&gt; unit" Usage="System.Windows.Controls.SpellCheck.SetIsEnabled (textBoxBase, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textBoxBase" Type="System.Windows.Controls.Primitives.TextBoxBase" />
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="textBoxBase">Элемент управления редактирования текста, для которого необходимо включить или отключить проверку орфографии. Примерами элементов управления могут служить <see cref="T:System.Windows.Controls.TextBox" /> и <see cref="T:System.Windows.Controls.RichTextBox" />.</param>
        <param name="value">Логическое значение, указывающее, включена ли проверка орфографии в элементе управления редактирования текста.</param>
        <summary>Включает или выключает функцию проверки орфографии для указанного элемента управления редактирования текста (например, <see cref="T:System.Windows.Controls.TextBox" /> или <see cref="T:System.Windows.Controls.RichTextBox" />).</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод включает использование присоединенного свойства для свойства <xref:System.Windows.Controls.SpellCheck.IsEnabled%2A> в [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]. В следующем примере показано использование [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetSpellingReform">
      <MemberSignature Language="C#" Value="public static void SetSpellingReform (System.Windows.Controls.Primitives.TextBoxBase textBoxBase, System.Windows.Controls.SpellingReform value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetSpellingReform(class System.Windows.Controls.Primitives.TextBoxBase textBoxBase, valuetype System.Windows.Controls.SpellingReform value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.SpellCheck.SetSpellingReform(System.Windows.Controls.Primitives.TextBoxBase,System.Windows.Controls.SpellingReform)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetSpellingReform(System::Windows::Controls::Primitives::TextBoxBase ^ textBoxBase, System::Windows::Controls::SpellingReform value);" />
      <MemberSignature Language="F#" Value="static member SetSpellingReform : System.Windows.Controls.Primitives.TextBoxBase * System.Windows.Controls.SpellingReform -&gt; unit" Usage="System.Windows.Controls.SpellCheck.SetSpellingReform (textBoxBase, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textBoxBase" Type="System.Windows.Controls.Primitives.TextBoxBase" />
        <Parameter Name="value" Type="System.Windows.Controls.SpellingReform" />
      </Parameters>
      <Docs>
        <param name="textBoxBase">Элемент управления редактированием текста, к которому применяется функция проверки правописания. Примерами элементов управления могут служить <see cref="T:System.Windows.Controls.TextBox" /> и <see cref="T:System.Windows.Controls.RichTextBox" />.</param>
        <param name="value">Значение <see cref="P:System.Windows.Controls.SpellCheck.SpellingReform" />, определяющее новые правила написания.</param>
        <summary>Определяет новые правила правописания, используемые функцией проверки правописания.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Новые правила правописания, к которым обращается этот метод, относятся к реформс правописаниям 1990 года. Этот метод не действует при использовании с любым другим языком.  
  
 Этот метод включает использование присоединенного свойства для свойства <xref:System.Windows.Controls.SpellCheck.SpellingReform%2A> в [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SpellingReform">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.SpellingReform SpellingReform { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.SpellingReform SpellingReform" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.SpellCheck.SpellingReform" />
      <MemberSignature Language="VB.NET" Value="Public Property SpellingReform As SpellingReform" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::SpellingReform SpellingReform { System::Windows::Controls::SpellingReform get(); void set(System::Windows::Controls::SpellingReform value); };" />
      <MemberSignature Language="F#" Value="member this.SpellingReform : System.Windows.Controls.SpellingReform with get, set" Usage="System.Windows.Controls.SpellCheck.SpellingReform" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.SpellingReform</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает новые правила, используемые средством проверки орфографии.</summary>
        <value>Новые правила, используемые средством проверки орфографии. Значение по умолчанию — <see cref="F:System.Windows.Controls.SpellingReform.PreAndPostreform" /> для французского и <see cref="F:System.Windows.Controls.SpellingReform.Postreform" /> для немецкого языка.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Новые правила правописания, определяемые этим свойством, относятся к реформс правописаниям на французском и немецком языках. Это свойство не действует при использовании с любым другим языком.  
  
 Это свойство зависимости также имеет специализированное использование присоединенного свойства только для чтения. [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] синтаксис для задания свойства — `<`*текстбоксбасекласс* **проверкой орфографии. спеллингреформ**`="`*EnumValue*`" .../>`, где *текстбоксбасекласс* — это объектный элемент для класса, производного от <xref:System.Windows.Controls.Primitives.TextBoxBase>, а *enumValue* — это строковое имя для значения перечисления <xref:System.Windows.Controls.SpellingReform>. Чтобы задать свойство как присоединенное свойство в коде, см. метод <xref:System.Windows.Controls.SpellCheck.SetSpellingReform%2A>. Соответствующий метод доступа `GetSpellingReform` отсутствует. Чтобы получить значение, получите текущий объект <xref:System.Windows.Controls.SpellCheck> из свойства <xref:System.Windows.Controls.Primitives.TextBoxBase.SpellCheck%2A?displayProperty=nameWithType>, а затем получите значение свойства <xref:System.Windows.Controls.SpellCheck.SpellingReform%2A> из этого <xref:System.Windows.Controls.SpellCheck>.  
  
<a name="dependencyPropertyInfo_SpellingReform"></a>   
## <a name="dependency-property-information"></a>Сведения о свойстве зависимостей  
  
|||  
|-|-|  
|Поле идентификатора|<xref:System.Windows.Controls.SpellCheck.SpellingReformProperty>|  
|Для свойств метаданных задано значение `true`|Нет|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SpellingReformProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty SpellingReformProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty SpellingReformProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.SpellCheck.SpellingReformProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SpellingReformProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ SpellingReformProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable SpellingReformProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.SpellCheck.SpellingReformProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Идентифицирует свойство зависимостей <see cref="P:System.Windows.Controls.SpellCheck.SpellingReform" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
