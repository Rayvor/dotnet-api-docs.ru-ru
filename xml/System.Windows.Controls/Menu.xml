<Type Name="Menu" FullName="System.Windows.Controls.Menu">
  <Metadata><Meta Name="ms.openlocfilehash" Value="988d8c2f24c0e01be5a9b5d29543ac228d5ae476" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69213937" /></Metadata><TypeSignature Language="C#" Value="public class Menu : System.Windows.Controls.Primitives.MenuBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi Menu extends System.Windows.Controls.Primitives.MenuBase" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.Menu" />
  <TypeSignature Language="VB.NET" Value="Public Class Menu&#xA;Inherits MenuBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class Menu : System::Windows::Controls::Primitives::MenuBase" />
  <TypeSignature Language="F#" Value="type Menu = class&#xA;    inherit MenuBase" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Controls.Primitives.MenuBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="48b45-101">Представляет элемент управления меню Windows, дающий возможность иерархически организовывать элементы, связанные с командами и обработчиками событий.</span><span class="sxs-lookup"><span data-stu-id="48b45-101">Represents a Windows menu control that enables you to hierarchically organize elements associated with commands and event handlers.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48b45-102"><xref:System.Windows.Controls.Menu> Элемент управления представляет собой список элементов, указывающих команды или параметры для приложения.</span><span class="sxs-lookup"><span data-stu-id="48b45-102">The <xref:System.Windows.Controls.Menu> control presents a list of items that specify commands or options for an application.</span></span> <span data-ttu-id="48b45-103">Как правило, щелчок элемента в меню открывает подменю или заставляет приложение выполнить команду.</span><span class="sxs-lookup"><span data-stu-id="48b45-103">Typically, clicking an item on a menu opens a submenu or causes an application to carry out a command.</span></span>  
  
 <span data-ttu-id="48b45-104"><xref:System.Windows.Controls.Menu>— Это <xref:System.Windows.Controls.ItemsControl>, то есть может содержать коллекцию объектов любого типа (например, строку, изображение или панель).</span><span class="sxs-lookup"><span data-stu-id="48b45-104"><xref:System.Windows.Controls.Menu> is an <xref:System.Windows.Controls.ItemsControl>, which means it can contain a collection of objects of any type (such as string, image, or panel).</span></span> <span data-ttu-id="48b45-105">Дополнительные сведения см. в описании класса <xref:System.Windows.Controls.ItemsControl>.</span><span class="sxs-lookup"><span data-stu-id="48b45-105">For more information, see the <xref:System.Windows.Controls.ItemsControl> class.</span></span> <span data-ttu-id="48b45-106">— Наиболее распространенный тип элемента <xref:System.Windows.Controls.Menu>в. <xref:System.Windows.Controls.MenuItem></span><span class="sxs-lookup"><span data-stu-id="48b45-106">The <xref:System.Windows.Controls.MenuItem> is the most common type of item in a <xref:System.Windows.Controls.Menu>.</span></span> <span data-ttu-id="48b45-107"><xref:System.Windows.Controls.MenuItem> Может содержать дочерние элементы.</span><span class="sxs-lookup"><span data-stu-id="48b45-107">A <xref:System.Windows.Controls.MenuItem> can contain child items.</span></span> <span data-ttu-id="48b45-108">Дочерние элементы будут отображаться во вложенном меню, когда пользователь выберет родительский <xref:System.Windows.Controls.MenuItem>элемент.</span><span class="sxs-lookup"><span data-stu-id="48b45-108">The child items will appear in a submenu when the user chooses a parent <xref:System.Windows.Controls.MenuItem>.</span></span>  
  
## <a name="customizing-the-menu-control"></a><span data-ttu-id="48b45-109">Настройка элемента управления Menu</span><span class="sxs-lookup"><span data-stu-id="48b45-109">Customizing the Menu Control</span></span>  
 <span data-ttu-id="48b45-110">Чтобы применить одни и те же параметры свойств <xref:System.Windows.Controls.Menu> к нескольким элементам управления <xref:System.Windows.FrameworkElement.Style%2A> , используйте свойство.</span><span class="sxs-lookup"><span data-stu-id="48b45-110">To apply the same property settings to multiple <xref:System.Windows.Controls.Menu> controls, use the <xref:System.Windows.FrameworkElement.Style%2A> property.</span></span> <span data-ttu-id="48b45-111">Можно изменить значение по умолчанию <xref:System.Windows.Controls.ControlTemplate> , чтобы обеспечить уникальность внешнего вида элемента управления.</span><span class="sxs-lookup"><span data-stu-id="48b45-111">You can modify the default <xref:System.Windows.Controls.ControlTemplate> to give the control a unique appearance.</span></span> <span data-ttu-id="48b45-112">Дополнительные сведения о создании <xref:System.Windows.Controls.ControlTemplate>см. в разделе [Настройка внешнего вида существующего элемента управления путем создания объекта ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).</span><span class="sxs-lookup"><span data-stu-id="48b45-112">For more information about creating a <xref:System.Windows.Controls.ControlTemplate>, see [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).</span></span>  <span data-ttu-id="48b45-113">Части и состояния, относящиеся к <xref:System.Windows.Controls.Menu>, см. в разделе [стили и шаблоны меню](~/docs/framework/wpf/controls/menu-styles-and-templates.md).</span><span class="sxs-lookup"><span data-stu-id="48b45-113">To see the parts and states that are specific to the <xref:System.Windows.Controls.Menu>, see [Menu Styles and Templates](~/docs/framework/wpf/controls/menu-styles-and-templates.md).</span></span>  
  
 <span data-ttu-id="48b45-114">Свойства зависимостей для этого элемента управления могут быть установлены стилем элемента управления по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="48b45-114">Dependency properties for this control might be set by the control's default style.</span></span>  <span data-ttu-id="48b45-115">Если свойство задано стилем по умолчанию, свойство может измениться по умолчанию, когда элемент управления появится в приложении.</span><span class="sxs-lookup"><span data-stu-id="48b45-115">If a property is set by a default style, the property might change from its default value when the control appears in the application.</span></span> <span data-ttu-id="48b45-116">Стиль по умолчанию определяется тем, какая тема рабочего стола используется при запуске приложения.</span><span class="sxs-lookup"><span data-stu-id="48b45-116">The default style is determined by which desktop theme is used when the application is running.</span></span>  <span data-ttu-id="48b45-117">Дополнительные сведения см. в разделе [темы WPF по умолчанию](https://go.microsoft.com/fwlink/?LinkID=158252).</span><span class="sxs-lookup"><span data-stu-id="48b45-117">For more information, see [Default WPF Themes](https://go.microsoft.com/fwlink/?LinkID=158252).</span></span>  
  
[!INCLUDE[setting-a-visual-property](~/includes/visual-property-note.md)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Controls.MenuItem" />
    <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=160053"><span data-ttu-id="48b45-118">Пример коллекции элементов управления WPF</span><span class="sxs-lookup"><span data-stu-id="48b45-118">WPF Controls Gallery Sample</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Menu ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Menu.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Menu();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="48b45-119">Инициализирует новый экземпляр класса <see cref="T:System.Windows.Controls.Menu" />.</span><span class="sxs-lookup"><span data-stu-id="48b45-119">Initializes a new instance of the <see cref="T:System.Windows.Controls.Menu" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HandleMouseButton">
      <MemberSignature Language="C#" Value="protected override void HandleMouseButton (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void HandleMouseButton(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Menu.HandleMouseButton(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub HandleMouseButton (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void HandleMouseButton(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.HandleMouseButton : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="menu.HandleMouseButton e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="48b45-120">Объект <see cref="T:System.Windows.Input.MouseButtonEventArgs" />, содержащий данные события.</span><span class="sxs-lookup"><span data-stu-id="48b45-120">A <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="48b45-121">Вызывается нажатием или освобождением любой кнопки мыши.</span><span class="sxs-lookup"><span data-stu-id="48b45-121">Called when any mouse button is pressed or released.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMainMenu">
      <MemberSignature Language="C#" Value="public bool IsMainMenu { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMainMenu" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Menu.IsMainMenu" />
      <MemberSignature Language="VB.NET" Value="Public Property IsMainMenu As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsMainMenu { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsMainMenu : bool with get, set" Usage="System.Windows.Controls.Menu.IsMainMenu" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="48b45-122">Возвращает или задает значение, показывающее, получает ли <see cref="T:System.Windows.Controls.Menu" /> уведомления об активации основного меню.</span><span class="sxs-lookup"><span data-stu-id="48b45-122">Gets or sets a value that indicates whether this <see cref="T:System.Windows.Controls.Menu" /> receives a main menu activation notification.</span></span></summary>
        <value><span data-ttu-id="48b45-123"><see langword="true" />, если меню получает уведомление об активации основного меню; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="48b45-123"><see langword="true" /> if the menu receives a main menu activation notification; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="48b45-124">Значение по умолчанию — <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="48b45-124">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48b45-125">Если на странице имеется <xref:System.Windows.Controls.Menu> несколько элементов управления, <xref:System.Windows.Controls.Menu> то элементы управления, которые не должны получать уведомления с помощью клавиш ALT или F10, `false`должны установить это свойство в значение.</span><span class="sxs-lookup"><span data-stu-id="48b45-125">If there are multiple <xref:System.Windows.Controls.Menu> controls on a page, <xref:System.Windows.Controls.Menu> controls that should not receive ALT or F10 key notifications should set this property to `false`.</span></span>  
  
<a name="dependencyPropertyInfo_IsMainMenu"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="48b45-126">Сведения о свойстве зависимостей</span><span class="sxs-lookup"><span data-stu-id="48b45-126">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="48b45-127">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="48b45-127">Identifier field</span></span>|<xref:System.Windows.Controls.Menu.IsMainMenuProperty>|  
|<span data-ttu-id="48b45-128">Свойства метаданных, для которых задано значение`true`</span><span class="sxs-lookup"><span data-stu-id="48b45-128">Metadata properties set to `true`</span></span>|<span data-ttu-id="48b45-129">Нет</span><span class="sxs-lookup"><span data-stu-id="48b45-129">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="48b45-130">В следующем примере показано <xref:System.Windows.Controls.Menu.IsMainMenu%2A> <xref:System.Windows.Controls.Menu> , как использовать свойство для создания, который не получает уведомления об активации.</span><span class="sxs-lookup"><span data-stu-id="48b45-130">The following example shows how to use the <xref:System.Windows.Controls.Menu.IsMainMenu%2A> property to create a <xref:System.Windows.Controls.Menu> that does not receive activation notification.</span></span>  
  
 [!code-xaml[MenuStylesSnippet#MenuIsMainMenu](~/samples/snippets/csharp/VS_Snippets_Wpf/MenuStylesSnippet/CS/pane1.xaml#menuismainmenu)]   
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=160053"><span data-ttu-id="48b45-131">Пример коллекции элементов управления WPF</span><span class="sxs-lookup"><span data-stu-id="48b45-131">WPF Controls Gallery Sample</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="IsMainMenuProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsMainMenuProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsMainMenuProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Menu.IsMainMenuProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsMainMenuProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsMainMenuProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsMainMenuProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Menu.IsMainMenuProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="48b45-132">Идентифицирует свойство зависимостей <see cref="P:System.Windows.Controls.Menu.IsMainMenu" />.</span><span class="sxs-lookup"><span data-stu-id="48b45-132">Identifies the <see cref="P:System.Windows.Controls.Menu.IsMainMenu" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCreateAutomationPeer">
      <MemberSignature Language="C#" Value="protected override System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Menu.OnCreateAutomationPeer" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnCreateAutomationPeer () As AutomationPeer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Automation::Peers::AutomationPeer ^ OnCreateAutomationPeer();" />
      <MemberSignature Language="F#" Value="override this.OnCreateAutomationPeer : unit -&gt; System.Windows.Automation.Peers.AutomationPeer" Usage="menu.OnCreateAutomationPeer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Peers.AutomationPeer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="48b45-133">Предоставляет подходящую реализацию <see cref="T:System.Windows.Automation.Peers.MenuAutomationPeer" /> для данного элемента управления как часть инфраструктуры автоматизации [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)].</span><span class="sxs-lookup"><span data-stu-id="48b45-133">Provides an appropriate <see cref="T:System.Windows.Automation.Peers.MenuAutomationPeer" /> implementation for this control, as part of the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] automation infrastructure.</span></span></summary>
        <returns><span data-ttu-id="48b45-134">Реализация <see cref="T:System.Windows.Automation.Peers.AutomationPeer" />, зависящая от конкретного типа.</span><span class="sxs-lookup"><span data-stu-id="48b45-134">The type-specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementation.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnInitialized">
      <MemberSignature Language="C#" Value="protected override void OnInitialized (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnInitialized(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Menu.OnInitialized(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnInitialized (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnInitialized(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnInitialized : EventArgs -&gt; unit" Usage="menu.OnInitialized e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="48b45-135">Объект класса <see cref="T:System.EventArgs" />, содержащий данные события.</span><span class="sxs-lookup"><span data-stu-id="48b45-135">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="48b45-136">Вызывается, когда значение свойства <see cref="P:System.Windows.FrameworkElement.IsInitialized" /> заданно равным <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="48b45-136">Called when the <see cref="P:System.Windows.FrameworkElement.IsInitialized" /> property is set to <see langword="true" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnKeyDown">
      <MemberSignature Language="C#" Value="protected override void OnKeyDown (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyDown(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Menu.OnKeyDown(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyDown (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyDown(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnKeyDown : System.Windows.Input.KeyEventArgs -&gt; unit" Usage="menu.OnKeyDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="48b45-137">Объект <see cref="T:System.Windows.Input.KeyEventArgs" />, содержащий данные события.</span><span class="sxs-lookup"><span data-stu-id="48b45-137">A <see cref="T:System.Windows.Input.KeyEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="48b45-138">Выполняет ответные действия при наступлении события <see cref="E:System.Windows.ContentElement.KeyDown" />.</span><span class="sxs-lookup"><span data-stu-id="48b45-138">Responds to the <see cref="E:System.Windows.ContentElement.KeyDown" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTextInput">
      <MemberSignature Language="C#" Value="protected override void OnTextInput (System.Windows.Input.TextCompositionEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnTextInput(class System.Windows.Input.TextCompositionEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Menu.OnTextInput(System.Windows.Input.TextCompositionEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnTextInput (e As TextCompositionEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnTextInput(System::Windows::Input::TextCompositionEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnTextInput : System.Windows.Input.TextCompositionEventArgs -&gt; unit" Usage="menu.OnTextInput e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityTreatAsSafe</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TextCompositionEventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="48b45-139">Данные события.</span><span class="sxs-lookup"><span data-stu-id="48b45-139">The event data.</span></span></param>
        <summary><span data-ttu-id="48b45-140">Обрабатывает перенаправленное событие <see cref="E:System.Windows.UIElement.TextInput" />, которое происходит, когда меню принимает текст, введенный из любого устройства.</span><span class="sxs-lookup"><span data-stu-id="48b45-140">Handles the <see cref="E:System.Windows.UIElement.TextInput" /> routed event that occurs when the menu receives text input from any device.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48b45-141">Эта реализация не изменяет состояние обработки ( <xref:System.Windows.RoutedEventArgs.Handled%2A> свойство) <xref:System.Windows.UIElement.TextInput> данных события.</span><span class="sxs-lookup"><span data-stu-id="48b45-141">This implementation does not change the handled state (the <xref:System.Windows.RoutedEventArgs.Handled%2A> property) of the <xref:System.Windows.UIElement.TextInput> event data.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="48b45-142">При переопределении <see cref="M:System.Windows.Controls.Menu.OnTextInput(System.Windows.Input.TextCompositionEventArgs)" />всегда вызывайте базовую реализацию в своей <see cref="M:System.Windows.Controls.Menu.OnTextInput(System.Windows.Input.TextCompositionEventArgs)" /> реализации.</span><span class="sxs-lookup"><span data-stu-id="48b45-142">If you override <see cref="M:System.Windows.Controls.Menu.OnTextInput(System.Windows.Input.TextCompositionEventArgs)" />, always call the base implementation in your <see cref="M:System.Windows.Controls.Menu.OnTextInput(System.Windows.Input.TextCompositionEventArgs)" /> implementation.</span></span> <span data-ttu-id="48b45-143">Сбой вызова базовой реализации не позволяет базовым классам обрабатывать событие с помощью обработчика класса, что может изменить поведение во время выполнения конечного класса.</span><span class="sxs-lookup"><span data-stu-id="48b45-143">Failure to call the base implementation prevents base classes from handling the event with a class handler, which might change the run-time behavior of the final class.</span></span> <span data-ttu-id="48b45-144">Базовую реализацию можно вызвать как до, так и после специальной обработки в зависимости от требований.</span><span class="sxs-lookup"><span data-stu-id="48b45-144">You can call the base implementation either before or after your special handling, depending on your requirements.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="PrepareContainerForItemOverride">
      <MemberSignature Language="C#" Value="protected override void PrepareContainerForItemOverride (System.Windows.DependencyObject element, object item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void PrepareContainerForItemOverride(class System.Windows.DependencyObject element, object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Menu.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub PrepareContainerForItemOverride (element As DependencyObject, item As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void PrepareContainerForItemOverride(System::Windows::DependencyObject ^ element, System::Object ^ item);" />
      <MemberSignature Language="F#" Value="override this.PrepareContainerForItemOverride : System.Windows.DependencyObject * obj -&gt; unit" Usage="menu.PrepareContainerForItemOverride (element, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="48b45-145">Объект, используемый для отображения указанного элемента.</span><span class="sxs-lookup"><span data-stu-id="48b45-145">The element used to display the specified item.</span></span></param>
        <param name="item"><span data-ttu-id="48b45-146">Элемент для отображения.</span><span class="sxs-lookup"><span data-stu-id="48b45-146">The item to display.</span></span></param>
        <summary><span data-ttu-id="48b45-147">Подготавливает указанный элемент для отображения заданного элемента.</span><span class="sxs-lookup"><span data-stu-id="48b45-147">Prepares the specified element to display the specified item.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48b45-148">Подготовка элемента может привести к применению стилей, настройке привязок и т. д.</span><span class="sxs-lookup"><span data-stu-id="48b45-148">Preparing the element might involve applying styles, setting bindings, and so on.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
