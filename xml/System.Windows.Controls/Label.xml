<Type Name="Label" FullName="System.Windows.Controls.Label">
  <Metadata><Meta Name="ms.openlocfilehash" Value="70c069595c15fc55114f7c3fb85d793409a90c90" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75175317" /></Metadata><TypeSignature Language="C#" Value="public class Label : System.Windows.Controls.ContentControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi Label extends System.Windows.Controls.ContentControl" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.Label" />
  <TypeSignature Language="VB.NET" Value="Public Class Label&#xA;Inherits ContentControl" />
  <TypeSignature Language="C++ CLI" Value="public ref class Label : System::Windows::Controls::ContentControl" />
  <TypeSignature Language="F#" Value="type Label = class&#xA;    inherit ContentControl" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Controls.ContentControl</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.Label)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Представляет текстовую подпись для элемента управления и обеспечивает поддержку клавиш доступа.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот класс обеспечивает как функциональную, так и визуальную поддержку для клавиш доступа (также известных как назначенные клавиши). Он часто используется для обеспечения быстрого доступа к клавиатуре для таких элементов управления, как <xref:System.Windows.Controls.TextBox>. Чтобы назначить <xref:System.Windows.Controls.Label> <xref:System.Windows.Controls.Control>, задайте для свойства <xref:System.Windows.Controls.Label.Target%2A> элемент управления, который должен получать фокус при нажатии пользователем клавиши доступа. Установка целевого объекта также приведет к тому, что [!INCLUDE[TLA#tla_uiautomation](~/includes/tlasharptla-uiautomation-md.md)] будет использовать текст метки в качестве имени целевого элемента управления. Дополнительные сведения см. в разделе [Специальные возможности](~/docs/framework/ui-automation/index.md).  
  
 Чтобы задать ключ доступа, добавьте знак подчеркивания перед символом, который должен быть ключом доступа. Если содержимое содержит несколько символов подчеркивания, только первый из них преобразуется в ключ доступа. остальные знаки подчеркивания отображаются в виде обычного текста. Если символ подчеркивания, который нужно преобразовать в клавишу доступа, не является первым символом подчеркивания, используйте два последовательных символа подчеркивания для всех символов подчеркивания, предшествующих преобразуемому. Например, следующий код содержит ключ доступа и отображается как _Hello орлд**W**:  
  
```  
<Label>__Hello_World</Label>   
```  
  
 Поскольку символ подчеркивания, предшествующий H, является двойным, ключ W регистрируется в качестве ключа доступа.  
  
 Метка не имеет фокуса и не является остановкой табуляции. Дополнительные сведения см. в разделе [Общие сведения о фокусе](~/docs/framework/wpf/advanced/focus-overview.md).  
  
 <xref:System.Windows.Controls.Label> — это <xref:System.Windows.Controls.ContentControl>, что означает, что он может содержать один объект любого типа (например, строку, изображение или панель). Дополнительные сведения см. в описании класса <xref:System.Windows.Controls.ContentControl>.  
  
## <a name="customizing-the-label-control"></a>Настройка элемента управления Label  
 Чтобы применить те же параметры свойств к нескольким <xref:System.Windows.Controls.Label>ным элементам управления, используйте свойство <xref:System.Windows.FrameworkElement.Style%2A>. Можно изменить <xref:System.Windows.Controls.ControlTemplate> по умолчанию, чтобы обеспечить уникальность внешнего вида элемента управления. Дополнительные сведения о создании <xref:System.Windows.Controls.ControlTemplate>см. в разделе [Настройка внешнего вида существующего элемента управления путем создания объекта ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).  Сведения о частях и состояниях, относящихся к <xref:System.Windows.Controls.Label>, см. в разделе [стили и шаблоны меток](~/docs/framework/wpf/controls/label-styles-and-templates.md).  
  
 Свойства зависимостей для этого элемента управления могут быть установлены стилем элемента управления по умолчанию.  Если свойство задано стилем по умолчанию, свойство может измениться по умолчанию, когда элемент управления появится в приложении. Стиль по умолчанию определяется тем, какая тема рабочего стола используется при запуске приложения.  Дополнительные сведения см. в разделе [темы WPF по умолчанию](https://go.microsoft.com/fwlink/?LinkID=158252).  
  
[!INCLUDE[setting-a-visual-property](~/includes/visual-property-note.md)]  
  
## Examples  
 В следующем примере показано, как создать <xref:System.Windows.Controls.Label>, который использует привязку для задания целевого объекта.  
  
 [!code-xaml[LabelSnippet#1](~/samples/snippets/csharp/VS_Snippets_Wpf/LabelSnippet/CS/Pane1.xaml#1)]   
  
 В следующем примере показано, как создать <xref:System.Windows.Controls.Label>, имеющий ключ доступа и поддерживающий перенос текста.  
  
 [!code-xaml[LabelSnippet#4](~/samples/snippets/csharp/VS_Snippets_Wpf/LabelSnippet/CS/Pane1.xaml#4)]   
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms752101(v=vs.90)">Как задать целевое свойство метки</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Label ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Label.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Label();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Controls.Label" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCreateAutomationPeer">
      <MemberSignature Language="C#" Value="protected override System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Label.OnCreateAutomationPeer" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnCreateAutomationPeer () As AutomationPeer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Automation::Peers::AutomationPeer ^ OnCreateAutomationPeer();" />
      <MemberSignature Language="F#" Value="override this.OnCreateAutomationPeer : unit -&gt; System.Windows.Automation.Peers.AutomationPeer" Usage="label.OnCreateAutomationPeer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Peers.AutomationPeer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Предоставляет подходящую реализацию <see cref="T:System.Windows.Automation.Peers.LabelAutomationPeer" /> для данного элемента управления как часть инфраструктуры [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)].</summary>
        <returns>Реализация <see cref="T:System.Windows.Automation.Peers.AutomationPeer" />, зависящая от конкретного типа.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Target">
      <MemberSignature Language="C#" Value="public System.Windows.UIElement Target { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.UIElement Target" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Label.Target" />
      <MemberSignature Language="VB.NET" Value="Public Property Target As UIElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::UIElement ^ Target { System::Windows::UIElement ^ get(); void set(System::Windows::UIElement ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Target : System.Windows.UIElement with get, set" Usage="System.Windows.Controls.Label.Target" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Markup.NameReferenceConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.UIElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает элемент, который получает фокус, когда пользователь нажимает клавишу доступа метки.</summary>
        <value>Элемент <see cref="T:System.Windows.UIElement" />, который получает фокус, когда пользователь нажимает клавишу доступа. Значение по умолчанию — <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Можно указать сочетания клавиш для элементов, которые не поддерживают ключи доступа, предоставив <xref:System.Windows.Controls.Label> клавишу доступа и задав это свойство. Присвойте метке ключ доступа, поместив знак подчеркивания непосредственно перед символом, который выступает в качестве клавиши доступа. Ключ доступа можно указать в свойстве <xref:System.Windows.Controls.ContentControl.Content%2A> или присвоив <xref:System.Windows.Controls.ContentControl.Content%2A> объекту <xref:System.Windows.Controls.AccessText>.  
  
 Это свойство нельзя использовать для определения <xref:System.Windows.UIElement>. Например, следующий код компилирует, но не работает: `<object.Target><UIElement../></object.Target>`. Это свойство предоставляет ссылку на элемент, который уже определен в приложении.  
  
<a name="dependencyPropertyInfo_Target"></a>   
## <a name="dependency-property-information"></a>Сведения о свойстве зависимостей  
  
|||  
|-|-|  
|Поле идентификатора|<xref:System.Windows.Controls.Label.TargetProperty>|  
|Для свойств метаданных задано значение `true`|Отсутствуют|  
  
<a name="xamlAttributeUsage_Target"></a>   
## <a name="xaml-attribute-usage"></a>Использование атрибута XAML  
  
```  
<Label Target=" nameOfExistingElement"/>  
  
```  
  
<a name="xamlPropertyElementUsage_Target"></a>   
## <a name="xaml-property-element-usage"></a>Использование элемента свойства XAML  
  
<a name="xamlValues_Target"></a>   
## <a name="xaml-values"></a>Значения XAML  
 `nameOfExistingElement`  
 Имя <xref:System.Windows.UIElement>, получающего фокус при нажатии клавиши доступа.  
  
   
  
## Examples  
 В следующем примере показано, как задать свойство <xref:System.Windows.Controls.Label.Target%2A> объекта <xref:System.Windows.Controls.Label>.  
  
 [!code-xaml[LabelSnippet#1](~/samples/snippets/csharp/VS_Snippets_Wpf/LabelSnippet/CS/Pane1.xaml#1)]   
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms752101(v=vs.90)">Как задать целевое свойство метки</related>
      </Docs>
    </Member>
    <Member MemberName="TargetProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty TargetProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty TargetProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Label.TargetProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TargetProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ TargetProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable TargetProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Label.TargetProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Идентифицирует свойство зависимостей <see cref="P:System.Windows.Controls.Label.Target" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
