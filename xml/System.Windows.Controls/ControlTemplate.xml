<Type Name="ControlTemplate" FullName="System.Windows.Controls.ControlTemplate">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8a90fe349d6b28b1824b657a0bd6d4818d45c16a" /><Meta Name="ms.sourcegitcommit" Value="bc24a3ba616ee1df8b858f9400cae4f058ea3a7e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="06/19/2019" /><Meta Name="ms.locfileid" Value="67242862" /></Metadata><TypeSignature Language="C#" Value="public class ControlTemplate : System.Windows.FrameworkTemplate" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ControlTemplate extends System.Windows.FrameworkTemplate" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.ControlTemplate" />
  <TypeSignature Language="VB.NET" Value="Public Class ControlTemplate&#xA;Inherits FrameworkTemplate" />
  <TypeSignature Language="C++ CLI" Value="public ref class ControlTemplate : System::Windows::FrameworkTemplate" />
  <TypeSignature Language="F#" Value="type ControlTemplate = class&#xA;    inherit FrameworkTemplate" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.FrameworkTemplate</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.None, Readability=System.Windows.Readability.Unreadable)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Markup.DictionaryKeyProperty("TargetType")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Указывает визуальную структуру и аспекты поведения <see cref="T:System.Windows.Controls.Control" />, которые могут совместно использоваться несколькими экземплярами элемента управления.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Controls.ControlTemplate> Позволяет указать визуальную структуру элемента управления. Разработчик элемента управления можно определить значение по умолчанию <xref:System.Windows.Controls.ControlTemplate> и разработчик приложения может переопределить <xref:System.Windows.Controls.ControlTemplate> для воссоздания визуальную структуру элемента управления.  
  
 Создание шаблонов элементов управления является одним из многих функций, предоставляемых [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] модель стилей и шаблонов. Модель стилей и шаблонов обеспечивает такую гибкость, что во многих случаях не нужно писать собственные элементы управления. Если вы являетесь автора приложения, необходимо изменить визуализацию элемента управления или замените <xref:System.Windows.Controls.ControlTemplate> существующего элемента управления, см. в разделе [Стилизация и использование шаблонов](~/docs/framework/wpf/controls/styling-and-templating.md) статьи, примеры и подробное рассмотрение.  
  
 При создании собственного элемента управления, см. в разделе «Создание пользовательского элемента управления» в [Общие сведения о разработке управления](~/docs/framework/wpf/controls/control-authoring-overview.md).  
  
 Объект <xref:System.Windows.Controls.ControlTemplate> должен представлять собой единое информации о реализации, невидимой внешним пользователям и объектов, включая стили. Единственный способ управления содержимым шаблона элемента управления — один и тот же шаблон элемента управления.  
  
<a name="xamlObjectElementUsage_VisualTree"></a>   
## <a name="xaml-property-element-usage"></a>Использование элемента свойства XAML  
  
```xaml
<ControlTemplate>  
  <VisualTreeRootNode>
    VisualTreeNodeContents  
  </VisualTreeRootNode>  
</ControlTemplate>  
```  
  
<a name="xamlValues_VisualTree"></a>   
## <a name="xaml-values"></a>Значения XAML  
 *ControlTemplate*  
 Объектный элемент для <xref:System.Windows.Controls.ControlTemplate> или производного класса.  
  
 *VisualTreeRootNode*  
 Один [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] элемента в качестве непосредственного дочернего объекта <xref:System.Windows.Controls.ControlTemplate> (или производного класса). Шаблоны должны иметь один корневой узел. Для создания полезного шаблона элемента, выбранного как *VisualTreeRootNode* способен поддерживать модель содержимого свои собственные, часто модели, которая поддерживает несколько дочерних элементов.  
  
 *VisualTreeNodeContents*  
 Один или несколько элементов, составляющие целевой шаблон. Если элемент выбран в качестве *VisualTreeRootNode* поддерживает только один дочерний элемент, затем можно только один элемент объявляться как *VisualTreeNodeContents*. Это также можно (хотя и нечасто) для предоставления текстового содержимого, если выбранный *VisualTreeRootNode* поддерживает свойство текстового содержимого.  
  
   
  
## Examples  
 Ниже <xref:System.Windows.Controls.Button> <xref:System.Windows.Style> , задает <xref:System.Windows.Controls.ControlTemplate> из <xref:System.Windows.Controls.Button>:  
  
 [!code-xaml[StylingIntroSample_snippet#ButtonCT](~/samples/snippets/csharp/VS_Snippets_Wpf/StylingIntroSample_snippet/CSharp/Window1.xaml#buttonct)]     
  
 Когда применяется это <xref:System.Windows.Controls.Button> отображается как <xref:System.Windows.Shapes.Ellipse>:  
  
 ![Пример шаблона ControlTemplate для кнопки](~/add/media/stylingintro-buttoncontroltemplate.png "пример шаблона ControlTemplate для кнопки")  
  
 При задании <xref:System.Windows.Controls.Control.Template%2A> свойство <xref:System.Windows.Controls.Control> в новый <xref:System.Windows.Controls.ControlTemplate> как в приведенном выше примере требуется заменить весь шаблон. Что <xref:System.Windows.Controls.Button> выглядит при его в фокусе или нажатии является частью по умолчанию внешний вид кнопки, который требуется заменить. Таким образом в зависимости от потребностей, можно поместить в свое определение, какие кнопки должны выглядеть при нажатии и т. д., как показано в следующем примере:  
  
 [!code-xaml[ControlTemplateExamples#1](~/samples/snippets/csharp/VS_Snippets_Wpf/ControlTemplateExamples/CS/resources/button.xaml#1)]  
  
 Обратите внимание на то, что этот пример ссылается на ресурсы, которые здесь не показаны. Полный пример см. в разделе [Пример задания стиля с помощью ControlTemplates](https://github.com/Microsoft/WPF-Samples/tree/master/Styles%20&%20Templates/IntroToStylingAndTemplating). Этот образец предоставляет примеры шаблонов элементов управления для многих элементов управления и лучше всего вам начать работу с создания шаблонов элементов управления.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Style" />
    <altmember cref="T:System.Windows.DataTemplate" />
    <altmember cref="T:System.Windows.Controls.ContentPresenter" />
    <altmember cref="T:System.Windows.Controls.ItemsPresenter" />
    <altmember cref="T:System.Windows.TemplateBindingExtension" />
    <altmember cref="P:System.Windows.FrameworkElement.OverridesDefaultStyle" />
    <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=160010">Введение в часть примера стилизации и</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Controls.ControlTemplate" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ControlTemplate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ControlTemplate.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ControlTemplate();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Controls.ControlTemplate" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ControlTemplate (Type targetType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type targetType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ControlTemplate.#ctor(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (targetType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ControlTemplate(Type ^ targetType);" />
      <MemberSignature Language="F#" Value="new System.Windows.Controls.ControlTemplate : Type -&gt; System.Windows.Controls.ControlTemplate" Usage="new System.Windows.Controls.ControlTemplate targetType" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="targetType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="targetType">Тип, для которого предназначен этот шаблон.</param>
        <summary>Инициализация нового экземпляра класса <see cref="T:System.Windows.Controls.ControlTemplate" /> с указанным конечным типом.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetType">
      <MemberSignature Language="C#" Value="public Type TargetType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type TargetType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ControlTemplate.TargetType" />
      <MemberSignature Language="VB.NET" Value="Public Property TargetType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ TargetType { Type ^ get(); void set(Type ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TargetType : Type with get, set" Usage="System.Windows.Controls.ControlTemplate.TargetType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Markup.Ambient</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает тип, для которого предназначен этот <see cref="T:System.Windows.Controls.ControlTemplate" />.</summary>
        <value>Значение по умолчанию — <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если у вас есть автономный <xref:System.Windows.Controls.ControlTemplate> в разделе ресурсов с <xref:System.Windows.Controls.ControlTemplate.TargetType%2A> свойство, тип, <xref:System.Windows.Controls.ControlTemplate> не применяются к этому типу автоматически. Вместо этого необходимо указать `x:Key` и явным образом применить шаблон.  
  
 Также Обратите внимание, что <xref:System.Windows.Controls.ControlTemplate.TargetType%2A> свойство требуется в <xref:System.Windows.Controls.ControlTemplate> при определении шаблона содержит <xref:System.Windows.Controls.ContentPresenter>.  
  
<a name="xamlAttributeUsage_TargetType"></a>   
## <a name="xaml-attribute-usage"></a>Использование атрибута XAML  
  
```  
<object  TargetType="typeName"/>  
```  
  
<a name="xamlValues_TargetType"></a>   
## <a name="xaml-values"></a>Значения XAML  
 *Имя типа*  
 Имя типа класса. Для ссылки на <xref:System.Type> имя класса, используйте [расширения разметки и XAML WPF](~/docs/framework/wpf/advanced/markup-extensions-and-wpf-xaml.md).  
  
   
  
## Examples  
 В следующем примере показано использование этого свойства:  
  
 [!code-xaml[ControlTemplateExamples#Label](~/samples/snippets/csharp/VS_Snippets_Wpf/ControlTemplateExamples/CS/resources/label.xaml#label)]  
  
 Приведенном выше примере используется следующий ресурс:  
  
  
  
 Полный пример см. в разделе [Пример задания стиля с помощью ControlTemplates](https://github.com/Microsoft/WPF-Samples/tree/master/Styles%20&%20Templates/IntroToStylingAndTemplating).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Свойство <see cref="P:System.Windows.Controls.ControlTemplate.TargetType" /> не должно быть <see langword="null" />, если определение шаблона имеет <see cref="T:System.Windows.Controls.ContentPresenter" />.</exception>
        <exception cref="T:System.ArgumentException">Указанные типы являются недопустимыми. <see cref="P:System.Windows.Controls.ControlTemplate.TargetType" /><see cref="T:System.Windows.Controls.ControlTemplate" /> должен являться или наследовать из <see cref="T:System.Windows.Controls.Control" />, <see cref="T:System.Windows.Controls.Page" /> или <see cref="T:System.Windows.Navigation.PageFunctionBase" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Triggers">
      <MemberSignature Language="C#" Value="public System.Windows.TriggerCollection Triggers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.TriggerCollection Triggers" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ControlTemplate.Triggers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Triggers As TriggerCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::TriggerCollection ^ Triggers { System::Windows::TriggerCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Triggers : System.Windows.TriggerCollection" Usage="System.Windows.Controls.ControlTemplate.Triggers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.Markup.DependsOn("VisualTree")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.Windows.Markup.DependsOn("Template")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.TriggerCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает коллекцию объектов <see cref="T:System.Windows.TriggerBase" />, применяющих изменения свойства или выполняющих действия на основании указанных условий.</summary>
        <value>Коллекция объектов <see cref="T:System.Windows.TriggerBase" />. Значение по умолчанию — <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlPropertyElementUsage_Triggers"></a>   
## <a name="xaml-property-element-usage"></a>Использование элемента свойства XAML  
  
```  
<object>  
  <object.Triggers>  
    oneOrMoreTriggers  
  </object.Triggers>  
</object>  
```  
  
<a name="xamlValues_Triggers"></a>   
## <a name="xaml-values"></a>Значения XAML  
 *OneOrMoreTriggers*  
 Один или несколько <xref:System.Windows.TriggerBase> объекты (обычно это <xref:System.Windows.Trigger>).  
  
   
  
## Examples  
 В следующем примере показано использование этого свойства:  
  
 [!code-xaml[ControlTemplateExamples#ToolTip](~/samples/snippets/csharp/VS_Snippets_Wpf/ControlTemplateExamples/CS/resources/tooltip.xaml#tooltip)]  
  
 Приведенный выше пример использует следующие ресурсы:  
  
  
  
  
 Полный пример см. в разделе [Пример задания стиля с помощью ControlTemplates](https://github.com/Microsoft/WPF-Samples/tree/master/Styles%20&%20Templates/IntroToStylingAndTemplating).  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=160010">Введение в часть примера стилизации и</related>
      </Docs>
    </Member>
    <Member MemberName="ValidateTemplatedParent">
      <MemberSignature Language="C#" Value="protected override void ValidateTemplatedParent (System.Windows.FrameworkElement templatedParent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ValidateTemplatedParent(class System.Windows.FrameworkElement templatedParent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ControlTemplate.ValidateTemplatedParent(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub ValidateTemplatedParent (templatedParent As FrameworkElement)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void ValidateTemplatedParent(System::Windows::FrameworkElement ^ templatedParent);" />
      <MemberSignature Language="F#" Value="override this.ValidateTemplatedParent : System.Windows.FrameworkElement -&gt; unit" Usage="controlTemplate.ValidateTemplatedParent templatedParent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="templatedParent" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="templatedParent">Элемент, к которому применяется данный шаблон.</param>
        <summary>Проверяет шаблонный родительский элемент по набору правил.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Данный метод использует следующие правила:  
  
 1. `templatedParent` Не может иметь тип <xref:System.Windows.FrameworkContentElement>.  
  
 2. `templatedParent` Не может иметь тип <xref:System.Windows.FrameworkElement> , не <xref:System.Windows.Controls.Control>.  
  
 3. `templatedParent` Не может быть <xref:System.Windows.Controls.Control> , не связанную с <xref:System.Windows.Controls.ControlTemplate>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="templatedParent" /> не должен быть <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Необходимо связать <see cref="T:System.Windows.Controls.ControlTemplate" /> с <see cref="T:System.Windows.Controls.Control" />, задав свойство <see cref="P:System.Windows.Controls.Control.Template" />, перед использованием <see cref="T:System.Windows.Controls.ControlTemplate" /> для <see cref="T:System.Windows.Controls.Control" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>