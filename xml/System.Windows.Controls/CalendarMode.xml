<Type Name="CalendarMode" FullName="System.Windows.Controls.CalendarMode">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1cbfd21b6c10de382a4e658d411931a16c05184d" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69217730" /></Metadata><TypeSignature Language="C#" Value="public enum CalendarMode" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed CalendarMode extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.CalendarMode" />
  <TypeSignature Language="VB.NET" Value="Public Enum CalendarMode" />
  <TypeSignature Language="C++ CLI" Value="public enum class CalendarMode" />
  <TypeSignature Language="F#" Value="type CalendarMode = " />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>Указывает, что отображается объектом <see cref="T:System.Windows.Controls.Calendar" /> — месяц, год или десятилетие.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Controls.Calendar> Может отображать месяц, год или десятилетие за раз. В следующей таблице указано, как пользователь переходит в каждый режим.  
  
|DisplayMode|Действие|  
|-----------------|------------|  
|Месяц.|Чтобы выбрать режим "год", щелкните заголовок месяца.|  
|Year|Чтобы переходить в режим десятилетия, щелкните заголовок year. Чтобы выбрать режим "месяц", щелкните один из отображаемых месяцев.|  
|Десятилетие|Чтобы выбрать режим "год", щелкните один из отображаемых лет.|  
  
   
  
## Examples  
 В следующем примере создается календарь, который отображает месяцы в году и обрабатывает <xref:System.Windows.Controls.Calendar.DisplayModeChanged> событие, чтобы при нажатии пользователем месяца или года календарь не изменял его. <xref:System.Windows.Controls.Calendar.DisplayMode%2A>  
  
 [!code-csharp[CalendarSnippets#4](~/samples/snippets/csharp/VS_Snippets_Wpf/calendarsnippets/csharp/window1.xaml.cs#4)]
 [!code-vb[CalendarSnippets#4](~/samples/snippets/visualbasic/VS_Snippets_Wpf/calendarsnippets/visualbasic/window1.xaml.vb#4)]
 [!code-xaml[CalendarSnippets#4](~/samples/snippets/xaml/VS_Snippets_Wpf/calendarsnippets/xaml/window1.xaml#4)]  
  
 [!code-csharp[CalendarSnippets#5](~/samples/snippets/csharp/VS_Snippets_Wpf/calendarsnippets/csharp/window1.xaml.cs#5)]
 [!code-vb[CalendarSnippets#5](~/samples/snippets/visualbasic/VS_Snippets_Wpf/calendarsnippets/visualbasic/window1.xaml.vb#5)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Decade">
      <MemberSignature Language="C#" Value="Decade" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Controls.CalendarMode Decade = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.CalendarMode.Decade" />
      <MemberSignature Language="VB.NET" Value="Decade" />
      <MemberSignature Language="C++ CLI" Value="Decade" />
      <MemberSignature Language="F#" Value="Decade = 2" Usage="System.Windows.Controls.CalendarMode.Decade" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.CalendarMode</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>Объект <see cref="T:System.Windows.Controls.Calendar" /> отображает в конкретный момент времени десятилетие.</summary>
      </Docs>
    </Member>
    <Member MemberName="Month">
      <MemberSignature Language="C#" Value="Month" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Controls.CalendarMode Month = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.CalendarMode.Month" />
      <MemberSignature Language="VB.NET" Value="Month" />
      <MemberSignature Language="C++ CLI" Value="Month" />
      <MemberSignature Language="F#" Value="Month = 0" Usage="System.Windows.Controls.CalendarMode.Month" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.CalendarMode</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Объект <see cref="T:System.Windows.Controls.Calendar" /> отображает в конкретный момент времени месяц.</summary>
      </Docs>
    </Member>
    <Member MemberName="Year">
      <MemberSignature Language="C#" Value="Year" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Controls.CalendarMode Year = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.CalendarMode.Year" />
      <MemberSignature Language="VB.NET" Value="Year" />
      <MemberSignature Language="C++ CLI" Value="Year" />
      <MemberSignature Language="F#" Value="Year = 1" Usage="System.Windows.Controls.CalendarMode.Year" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.CalendarMode</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Объект <see cref="T:System.Windows.Controls.Calendar" /> отображает в конкретный момент времени год.</summary>
      </Docs>
    </Member>
  </Members>
</Type>
