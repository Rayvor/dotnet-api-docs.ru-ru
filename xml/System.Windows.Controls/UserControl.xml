<Type Name="UserControl" FullName="System.Windows.Controls.UserControl">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6e19c49b938f6f152d8840fb75c60f01e5738720" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69212056" /></Metadata><TypeSignature Language="C#" Value="public class UserControl : System.Windows.Controls.ContentControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi UserControl extends System.Windows.Controls.ContentControl" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.UserControl" />
  <TypeSignature Language="VB.NET" Value="Public Class UserControl&#xA;Inherits ContentControl" />
  <TypeSignature Language="C++ CLI" Value="public ref class UserControl : System::Windows::Controls::ContentControl" />
  <TypeSignature Language="F#" Value="type UserControl = class&#xA;    inherit ContentControl" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Controls.ContentControl</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Предоставляет простой способ создания элемента управления.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Элементы управления [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] поддерживают расширенное содержимое, стили, триггеры и шаблоны. Во многих случаях эти функции позволяют создавать пользовательские и последовательные возможности, не создавая новый элемент управления. Более подробную информацию см. в разделе [Стилизация и использование шаблонов](~/docs/framework/wpf/controls/styling-and-templating.md).  
  
 Если необходимо создать новый элемент управления, проще всего создать класс, производный от <xref:System.Windows.Controls.UserControl>. Прежде чем это сделать, учтите, что элемент управления не будет поддерживать шаблоны и, следовательно, не будет поддерживать сложную настройку. Однако наследование от <xref:System.Windows.Controls.UserControl> является подходящей моделью, если требуется создать элемент управления путем добавления в него существующих элементов, аналогично созданию приложения, и если не требуется поддержка сложной настройки. (Если вы хотите использовать шаблоны с элементом управления, используйте <xref:System.Windows.Controls.Control> вместо него наследование.) Дополнительные сведения о различных моделях для разработки элементов управления см. в разделе [Общие сведения о разработке элементов управления](~/docs/framework/wpf/controls/control-authoring-overview.md).  
  
 <xref:System.Windows.Controls.UserControl> Объект<xref:System.Windows.Controls.ContentControl>— это, что означает, что он может содержать один объект любого типа (например, строку, изображение или панель). Дополнительные сведения см. в описании класса <xref:System.Windows.Controls.ContentControl>.  
  
 Свойства зависимостей для этого элемента управления могут быть установлены стилем элемента управления по умолчанию.  Если свойство задано стилем по умолчанию, свойство может измениться по умолчанию, когда элемент управления появится в приложении. Стиль по умолчанию определяется тем, какая тема рабочего стола используется при запуске приложения.  Дополнительные сведения см. в разделе [темы WPF по умолчанию](https://go.microsoft.com/fwlink/?LinkID=158252).  
  
   
  
## Examples  
 В следующем примере показано, как создать простой `NumericUpDown`. <xref:System.Windows.Controls.UserControl>  
  
 [!code-xaml[UserControlNumericUpDown#Markup](~/samples/snippets/csharp/VS_Snippets_Wpf/UserControlNumericUpDown/CSharp/NumericUpDown.xaml#markup)]  
  
 Ниже показана логика <xref:System.Windows.Controls.UserControl>:  
  
 [!code-csharp[UserControlNumericUpDown#CodeBehind](~/samples/snippets/csharp/VS_Snippets_Wpf/UserControlNumericUpDown/CSharp/NumericUpDown.xaml.cs#codebehind)]
 [!code-vb[UserControlNumericUpDown#CodeBehind](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UserControlNumericUpDown/visualbasic/numericupdown.xaml.vb#codebehind)]  
  
 Дополнительные сведения см. в разделе [Общие сведения о разработке элементов управления](~/docs/framework/wpf/controls/control-authoring-overview.md).  
  
 ]]></format>
    </remarks>
    <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=160025">Пример пользовательского элемента управления NumericUpDown с поддержкой темы и модели автоматизации пользовательского интерфейса</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UserControl ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.UserControl.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UserControl();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Controls.UserControl" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCreateAutomationPeer">
      <MemberSignature Language="C#" Value="protected override System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.UserControl.OnCreateAutomationPeer" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnCreateAutomationPeer () As AutomationPeer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Automation::Peers::AutomationPeer ^ OnCreateAutomationPeer();" />
      <MemberSignature Language="F#" Value="override this.OnCreateAutomationPeer : unit -&gt; System.Windows.Automation.Peers.AutomationPeer" Usage="userControl.OnCreateAutomationPeer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Peers.AutomationPeer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Создает и возвращает объект <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> для данного элемента <see cref="T:System.Windows.Controls.UserControl" />.</summary>
        <returns>Новый объект <see cref="T:System.Windows.Automation.Peers.UserControlAutomationPeer" /> для данного класса <see cref="T:System.Windows.Controls.UserControl" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
