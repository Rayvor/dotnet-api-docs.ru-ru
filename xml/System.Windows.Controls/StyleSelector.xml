<Type Name="StyleSelector" FullName="System.Windows.Controls.StyleSelector">
  <Metadata><Meta Name="ms.openlocfilehash" Value="062e1de2176d85358859797330c2cd8f17a6383b" /><Meta Name="ms.sourcegitcommit" Value="f1d16425528e237257ca3b58eb49217a514849ea" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="04/24/2019" /><Meta Name="ms.locfileid" Value="64222330" /></Metadata><TypeSignature Language="C#" Value="public class StyleSelector" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit StyleSelector extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.StyleSelector" />
  <TypeSignature Language="VB.NET" Value="Public Class StyleSelector" />
  <TypeSignature Language="C++ CLI" Value="public ref class StyleSelector" />
  <TypeSignature Language="F#" Value="type StyleSelector = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Предоставляет способ применения стилей, основанный на настраиваемой логике.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Чтобы создать <xref:System.Windows.Controls.StyleSelector> , применяется стиль, основанный на настраиваемой логике, создать подкласс <xref:System.Windows.Controls.StyleSelector> класса и реализуйте <xref:System.Windows.Controls.StyleSelector.SelectStyle%2A> метод.  
  
   
  
## Examples  
 В следующем примере показано определение <xref:System.Windows.Controls.StyleSelector> , определяющий <xref:System.Windows.Style> для строки. В этом примере определяется <xref:System.Windows.Controls.Control.Background%2A> цвет в соответствии с индексом строки.  
  
 [!code-csharp[ListViewSnips#ItemStyleSelector](~/samples/snippets/csharp/VS_Snippets_Wpf/ListViewSnips/CSharp/Window1.xaml.cs#itemstyleselector)]
 [!code-vb[ListViewSnips#ItemStyleSelector](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ListViewSnips/visualbasic/window1.xaml.vb#itemstyleselector)]  
  
 В следующем примере показано определение <xref:System.Windows.ResourceKey> для <xref:System.Windows.Controls.StyleSelector>. `namespc` Сопоставляется префикс [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] пространства имен и соответствующую сборку где <xref:System.Windows.Controls.StyleSelector> определен. Дополнительные сведения см. в разделе [пространства имен XAML и сопоставление пространств имен для WPF XAML](~/docs/framework/wpf/advanced/xaml-namespaces-and-namespace-mapping-for-wpf-xaml.md).  
  
 [!code-xaml[ListViewSnips#myStyleSelectorKey](~/samples/snippets/csharp/VS_Snippets_Wpf/ListViewSnips/CSharp/Window1.xaml#mystyleselectorkey)]  
  
 В следующем примере показано, как задать <xref:System.Windows.Controls.ItemsControl.ItemContainerStyleSelector%2A> свойство <xref:System.Windows.Controls.ListView> к этому <xref:System.Windows.Controls.StyleSelector> ресурсов.  
  
 [!code-xaml[ListViewSnips#StyleSelectorXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/ListViewSnips/CSharp/Window1.xaml#styleselectorxaml)]  
  
 Пример создания селектор для выбора определенного стиля ресурса, см. в разделе реализации <xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A?displayProperty=nameWithType>, который позволяет использовать пользовательскую логику для выбора <xref:System.Windows.DataTemplate>, основываясь на таком же принципе.  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Windows.Controls.ItemsControl.ItemContainerStyleSelector" />
    <altmember cref="P:System.Windows.Controls.GroupStyle.ContainerStyleSelector" />
    <altmember cref="T:System.Windows.Controls.DataTemplateSelector" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StyleSelector ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.StyleSelector.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StyleSelector();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Controls.StyleSelector" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectStyle">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Style SelectStyle (object item, System.Windows.DependencyObject container);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Style SelectStyle(object item, class System.Windows.DependencyObject container) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.StyleSelector.SelectStyle(System.Object,System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SelectStyle (item As Object, container As DependencyObject) As Style" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Style ^ SelectStyle(System::Object ^ item, System::Windows::DependencyObject ^ container);" />
      <MemberSignature Language="F#" Value="abstract member SelectStyle : obj * System.Windows.DependencyObject -&gt; System.Windows.Style&#xA;override this.SelectStyle : obj * System.Windows.DependencyObject -&gt; System.Windows.Style" Usage="styleSelector.SelectStyle (item, container)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Style</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
        <Parameter Name="container" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="item">Содержимое.</param>
        <param name="container">Элемент, к которому будет применен стиль.</param>
        <summary>При переопределении производного класса возвращает шаблон <see cref="T:System.Windows.Style" />, основанный на настраиваемой логике.</summary>
        <returns>Возвращает свойственный приложению стиль для применения; в противном случае <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Чтобы создать <xref:System.Windows.Controls.StyleSelector> , применяется стиль, основанный на настраиваемой логике, создать подкласс <xref:System.Windows.Controls.StyleSelector> класса и реализуйте <xref:System.Windows.Controls.StyleSelector.SelectStyle%2A> метод.  
  
   
  
## Examples  
 В следующем примере показано определение <xref:System.Windows.Controls.StyleSelector> , определяющий <xref:System.Windows.Style> для строки. В этом примере определяется <xref:System.Windows.Controls.Control.Background%2A> цвет в соответствии с индексом строки.  
  
 [!code-csharp[ListViewSnips#ItemStyleSelector](~/samples/snippets/csharp/VS_Snippets_Wpf/ListViewSnips/CSharp/Window1.xaml.cs#itemstyleselector)]
 [!code-vb[ListViewSnips#ItemStyleSelector](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ListViewSnips/visualbasic/window1.xaml.vb#itemstyleselector)]  
  
 В следующем примере показано определение <xref:System.Windows.ResourceKey> для <xref:System.Windows.Controls.StyleSelector>. `namespc` Сопоставляется префикс [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] пространства имен и соответствующую сборку где <xref:System.Windows.Controls.StyleSelector> определен. Дополнительные сведения см. в разделе [пространства имен XAML и сопоставление пространств имен для WPF XAML](~/docs/framework/wpf/advanced/xaml-namespaces-and-namespace-mapping-for-wpf-xaml.md).  
  
 [!code-xaml[ListViewSnips#myStyleSelectorKey](~/samples/snippets/csharp/VS_Snippets_Wpf/ListViewSnips/CSharp/Window1.xaml#mystyleselectorkey)]  
  
 В следующем примере показано, как задать <xref:System.Windows.Controls.ItemsControl.ItemContainerStyleSelector%2A> свойство <xref:System.Windows.Controls.ListView> к этому <xref:System.Windows.Controls.StyleSelector> ресурсов.  
  
 [!code-xaml[ListViewSnips#StyleSelectorXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/ListViewSnips/CSharp/Window1.xaml#styleselectorxaml)]  
  
 Пример создания селектор для выбора определенного стиля ресурса, см. в разделе реализации <xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A?displayProperty=nameWithType>, который позволяет использовать пользовательскую логику для выбора <xref:System.Windows.DataTemplate>, основываясь на таком же принципе.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.ItemsControl.ItemContainerStyleSelector" />
        <altmember cref="P:System.Windows.Controls.GroupStyle.ContainerStyleSelector" />
        <altmember cref="T:System.Windows.Controls.DataTemplateSelector" />
      </Docs>
    </Member>
  </Members>
</Type>