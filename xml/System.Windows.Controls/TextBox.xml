<Type Name="TextBox" FullName="System.Windows.Controls.TextBox">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c617a652571ffdb92d8b329eedeb9e5a0132a55a" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69212461" /></Metadata><TypeSignature Language="C#" Value="public class TextBox : System.Windows.Controls.Primitives.TextBoxBase, System.Windows.Markup.IAddChild" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi TextBox extends System.Windows.Controls.Primitives.TextBoxBase implements class System.Windows.Markup.IAddChild" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.TextBox" />
  <TypeSignature Language="VB.NET" Value="Public Class TextBox&#xA;Inherits TextBoxBase&#xA;Implements IAddChild" />
  <TypeSignature Language="C++ CLI" Value="public ref class TextBox : System::Windows::Controls::Primitives::TextBoxBase, System::Windows::Markup::IAddChild" />
  <TypeSignature Language="F#" Value="type TextBox = class&#xA;    inherit TextBoxBase&#xA;    interface IAddChild" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Controls.Primitives.TextBoxBase</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.Markup.IAddChild</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.Text)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Markup.ContentProperty("Text")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="972a0-101">Представляет элемент управления, который может быть использован для отображения или редактирования неформатированного текста.</span><span class="sxs-lookup"><span data-stu-id="972a0-101">Represents a control that can be used to display or edit unformatted text.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="972a0-102">Элемент управления может содержать только неформатированный текст в <xref:System.Windows.Controls.TextBox.Text%2A> его свойстве. <xref:System.Windows.Controls.TextBox></span><span class="sxs-lookup"><span data-stu-id="972a0-102">A <xref:System.Windows.Controls.TextBox> control can contain only unformatted text in its <xref:System.Windows.Controls.TextBox.Text%2A> property.</span></span> <span data-ttu-id="972a0-103">На следующем рисунке показан пример <xref:System.Windows.Controls.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="972a0-103">The following graphic shows an example of a <xref:System.Windows.Controls.TextBox>.</span></span>  
  
 <span data-ttu-id="972a0-104">![Снимок экрана текстового поля] (~/add/media/ss-ctl-textbox.gif "Снимок экрана текстового поля")</span><span class="sxs-lookup"><span data-stu-id="972a0-104">![TextBox screen shot](~/add/media/ss-ctl-textbox.gif "TextBox screen shot")</span></span>  
<span data-ttu-id="972a0-105">Пример текстового поля</span><span class="sxs-lookup"><span data-stu-id="972a0-105">Example of a TextBox</span></span>  
  
 <span data-ttu-id="972a0-106"><xref:System.Windows.Controls.TextBox>— составной элемент управления, состоящий из нескольких инкапсулированных компонентов.</span><span class="sxs-lookup"><span data-stu-id="972a0-106"><xref:System.Windows.Controls.TextBox> is a composite control that is composed of several encapsulated components.</span></span> <span data-ttu-id="972a0-107">Следовательно, некоторые события не поднимаются к содержащему элементу управления, так как они обрабатываются инкапсулированными дочерними элементами.</span><span class="sxs-lookup"><span data-stu-id="972a0-107">Consequently, some events do not bubble up to the containing control because they are handled by encapsulated child elements.</span></span> <span data-ttu-id="972a0-108">По этой причине разработчики приложений должны прослушивать пошаговую версию события (обозначенную префиксом "Предварительная версия").</span><span class="sxs-lookup"><span data-stu-id="972a0-108">Because of this, application developers should listen for the tunneling version of an event (denoted by the prefix "Preview").</span></span>  
  
 <span data-ttu-id="972a0-109"><xref:System.Windows.Controls.TextBox>поддерживает только неформатированный текст.</span><span class="sxs-lookup"><span data-stu-id="972a0-109"><xref:System.Windows.Controls.TextBox> supports unformatted text only.</span></span> <span data-ttu-id="972a0-110">Дополнительные сведения о приложениях, требующих поддержки расширенного содержимого <xref:System.Windows.Controls.RichTextBox>, см. в разделе.</span><span class="sxs-lookup"><span data-stu-id="972a0-110">For applications that require support for richer content, see <xref:System.Windows.Controls.RichTextBox>.</span></span> <span data-ttu-id="972a0-111">Дополнительные сведения о приложениях, которые должны принимать пароли или другие конфиденциальные <xref:System.Windows.Controls.PasswordBox>данные, см. в разделе.</span><span class="sxs-lookup"><span data-stu-id="972a0-111">For applications that need to accept passwords or other sensitive input, see <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
 <span data-ttu-id="972a0-112">Горизонтальное и вертикальное выравнивание текста внутри <xref:System.Windows.Controls.TextBox> элемента выполняется <xref:System.Windows.Controls.Control.HorizontalContentAlignment%2A> с помощью свойств <xref:System.Windows.Controls.Control.VerticalContentAlignment%2A> и.</span><span class="sxs-lookup"><span data-stu-id="972a0-112">Horizontally and vertically aligning text within a <xref:System.Windows.Controls.TextBox> is done with the <xref:System.Windows.Controls.Control.HorizontalContentAlignment%2A> and <xref:System.Windows.Controls.Control.VerticalContentAlignment%2A> properties.</span></span> <span data-ttu-id="972a0-113">Согласованность в макете страницы осуществляется <xref:System.Windows.FrameworkElement.HorizontalAlignment%2A> с помощью свойств и <xref:System.Windows.FrameworkElement.VerticalAlignment%2A>. <xref:System.Windows.Controls.TextBox></span><span class="sxs-lookup"><span data-stu-id="972a0-113">Aligning the <xref:System.Windows.Controls.TextBox> within the layout of the page is done with the <xref:System.Windows.FrameworkElement.HorizontalAlignment%2A> and <xref:System.Windows.FrameworkElement.VerticalAlignment%2A> properties.</span></span>  
  
 <span data-ttu-id="972a0-114">Лучшим способом скрыть границу <xref:System.Windows.Controls.TextBox> вокруг является <xref:System.Windows.Controls.Control.BorderThickness%2A> установка свойства объекта <xref:System.Windows.Controls.TextBox> `0`в значение.</span><span class="sxs-lookup"><span data-stu-id="972a0-114">The best way to hide the border around a <xref:System.Windows.Controls.TextBox> is to set the <xref:System.Windows.Controls.Control.BorderThickness%2A> property of the <xref:System.Windows.Controls.TextBox> to `0`.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="972a0-115"><xref:System.Windows.Controls.TextBox>имеет встроенную обработку для восходящей маршрутизации <xref:System.Windows.UIElement.MouseUp> и <xref:System.Windows.UIElement.MouseDown> событий.</span><span class="sxs-lookup"><span data-stu-id="972a0-115"><xref:System.Windows.Controls.TextBox> has built-in handling for the bubbling  <xref:System.Windows.UIElement.MouseUp> and <xref:System.Windows.UIElement.MouseDown> events.</span></span> <span data-ttu-id="972a0-116">Следовательно, пользовательские обработчики событий, которые <xref:System.Windows.UIElement.MouseUp> прослушивают события <xref:System.Windows.Controls.TextBox> или <xref:System.Windows.UIElement.MouseDown> , не будут вызываться.</span><span class="sxs-lookup"><span data-stu-id="972a0-116">Consequently, custom event handlers that listen for <xref:System.Windows.UIElement.MouseUp> or <xref:System.Windows.UIElement.MouseDown> events from a <xref:System.Windows.Controls.TextBox> will not be called.</span></span> <span data-ttu-id="972a0-117">Если необходимо ответить на эти события, прослушайте туннелирование <xref:System.Windows.UIElement.PreviewMouseUp> и <xref:System.Windows.UIElement.PreviewMouseDown> события вместо этого или <xref:System.Windows.EventSetter.HandledEventsToo%2A> Зарегистрируйте обработчики с аргументом (последний вариант доступен только в коде).</span><span class="sxs-lookup"><span data-stu-id="972a0-117">If you need to respond to these events, listen for the tunneling <xref:System.Windows.UIElement.PreviewMouseUp> and <xref:System.Windows.UIElement.PreviewMouseDown> events instead, or register the handlers with the <xref:System.Windows.EventSetter.HandledEventsToo%2A> argument (this latter option is only available through code).</span></span> <span data-ttu-id="972a0-118">Не отмечайте событие как обработанное, если вы намеренно не <xref:System.Windows.Controls.TextBox> хотите отключить собственную обработку этих событий и помните, что это заметно влияет на [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]элемент управления.</span><span class="sxs-lookup"><span data-stu-id="972a0-118">Do not mark the event handled unless you deliberately want to disable <xref:System.Windows.Controls.TextBox> native handling of these events, and be aware that this has notable effects on the control's [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)].</span></span>  
  
 <span data-ttu-id="972a0-119">Полосы прокрутки по умолчанию <xref:System.Windows.Controls.TextBox> не видны.</span><span class="sxs-lookup"><span data-stu-id="972a0-119">Scrollbars are not visible on a <xref:System.Windows.Controls.TextBox> by default.</span></span> <span data-ttu-id="972a0-120">Чтобы сделать полосы прокрутки видимыми <xref:System.Windows.Controls.Primitives.TextBoxBase.VerticalScrollBarVisibility%2A> , <xref:System.Windows.Controls.Primitives.TextBoxBase.HorizontalScrollBarVisibility%2A> установите для <xref:System.Windows.Controls.ScrollBarVisibility.Visible> свойств <xref:System.Windows.Controls.ScrollBarVisibility.Auto>и значение или.</span><span class="sxs-lookup"><span data-stu-id="972a0-120">To make scrollbars visible, set the <xref:System.Windows.Controls.Primitives.TextBoxBase.VerticalScrollBarVisibility%2A> and <xref:System.Windows.Controls.Primitives.TextBoxBase.HorizontalScrollBarVisibility%2A> properties to <xref:System.Windows.Controls.ScrollBarVisibility.Visible> or <xref:System.Windows.Controls.ScrollBarVisibility.Auto>.</span></span>  
  
 <span data-ttu-id="972a0-121">Обычно событие следует использовать для обнаружения изменений текста <xref:System.Windows.Controls.TextBox> в или <xref:System.Windows.Controls.RichTextBox> , а не <xref:System.Windows.UIElement.KeyDown> в том виде, в котором они могут ожидать. <xref:System.Windows.Controls.Primitives.TextBoxBase.TextChanged></span><span class="sxs-lookup"><span data-stu-id="972a0-121">Usually the <xref:System.Windows.Controls.Primitives.TextBoxBase.TextChanged> event should be used to detect whenever the text in a <xref:System.Windows.Controls.TextBox> or <xref:System.Windows.Controls.RichTextBox> changes rather then <xref:System.Windows.UIElement.KeyDown> as you might expect.</span></span> <span data-ttu-id="972a0-122">См. практическое руководство по [ Обнаружение, когда текст в текстовом поле изменился](~/docs/framework/wpf/controls/how-to-detect-when-text-in-a-textbox-has-changed.md) в качестве примера.</span><span class="sxs-lookup"><span data-stu-id="972a0-122">See [How to: Detect When Text in a TextBox Has Changed](~/docs/framework/wpf/controls/how-to-detect-when-text-in-a-textbox-has-changed.md) for an example.</span></span>  
  
## <a name="customizing-the-textbox-control"></a><span data-ttu-id="972a0-123">Настройка элемента управления TextBox</span><span class="sxs-lookup"><span data-stu-id="972a0-123">Customizing the TextBox Control</span></span>  
 <span data-ttu-id="972a0-124">Чтобы применить одни и те же параметры свойств <xref:System.Windows.Controls.TextBox> к нескольким элементам управления <xref:System.Windows.FrameworkElement.Style%2A> , используйте свойство.</span><span class="sxs-lookup"><span data-stu-id="972a0-124">To apply the same property settings to multiple <xref:System.Windows.Controls.TextBox> controls, use the <xref:System.Windows.FrameworkElement.Style%2A> property.</span></span> <span data-ttu-id="972a0-125">Можно изменить значение по умолчанию <xref:System.Windows.Controls.ControlTemplate> , чтобы обеспечить уникальность внешнего вида элемента управления.</span><span class="sxs-lookup"><span data-stu-id="972a0-125">You can modify the default <xref:System.Windows.Controls.ControlTemplate> to give the control a unique appearance.</span></span> <span data-ttu-id="972a0-126">Дополнительные сведения о создании <xref:System.Windows.Controls.ControlTemplate>см. в разделе [Настройка внешнего вида существующего элемента управления путем создания объекта ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).</span><span class="sxs-lookup"><span data-stu-id="972a0-126">For more information about creating a <xref:System.Windows.Controls.ControlTemplate>, see [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).</span></span>  <span data-ttu-id="972a0-127">Для просмотра частей и состояний, относящихся <xref:System.Windows.Controls.TextBox>к, см. раздел [стили и шаблоны текстового поля](~/docs/framework/wpf/controls/textbox-styles-and-templates.md).</span><span class="sxs-lookup"><span data-stu-id="972a0-127">To see the parts and states that are specific to the <xref:System.Windows.Controls.TextBox>, see [TextBox Styles and Templates](~/docs/framework/wpf/controls/textbox-styles-and-templates.md).</span></span>  
  
 <span data-ttu-id="972a0-128">Свойства зависимостей для этого элемента управления могут быть установлены стилем элемента управления по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="972a0-128">Dependency properties for this control might be set by the control's default style.</span></span>  <span data-ttu-id="972a0-129">Если свойство задано стилем по умолчанию, свойство может измениться по умолчанию, когда элемент управления появится в приложении.</span><span class="sxs-lookup"><span data-stu-id="972a0-129">If a property is set by a default style, the property might change from its default value when the control appears in the application.</span></span> <span data-ttu-id="972a0-130">Стиль по умолчанию определяется тем, какая тема рабочего стола используется при запуске приложения.</span><span class="sxs-lookup"><span data-stu-id="972a0-130">The default style is determined by which desktop theme is used when the application is running.</span></span>  <span data-ttu-id="972a0-131">Дополнительные сведения см. в разделе [темы WPF по умолчанию](https://go.microsoft.com/fwlink/?LinkID=158252).</span><span class="sxs-lookup"><span data-stu-id="972a0-131">For more information, see [Default WPF Themes](https://go.microsoft.com/fwlink/?LinkID=158252).</span></span>  
  
[!INCLUDE[setting-a-visual-property](~/includes/visual-property-note.md)]  
  
## Examples  
 <span data-ttu-id="972a0-132">В этом примере показано, как использовать свойство Text для задания исходного текстового содержимого элемента управления TextBox.</span><span class="sxs-lookup"><span data-stu-id="972a0-132">This example shows how to use the Text property to set the initial text contents of a TextBox control.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="972a0-133">Несмотря на то, что в примере XAML (XAML) может использоваться \<тег TextBox. Text > тегами текста для каждого текстового поля кнопки, это необязательно, поскольку текстовое поле применяет атрибут ContentPropertyAttribute атрибут к свойству Text.</span><span class="sxs-lookup"><span data-stu-id="972a0-133">Although the Extensible Application Markup Language (XAML) version of the example could use the \<TextBox.Text> tags around the text of each button's TextBox content, it is not necessary because the TextBox applies the ContentPropertyAttribute attribute to the Text property.</span></span>  
  
```xaml  
<TextBox Name="tbSettingText">  
  Initial text contents of the TextBox.  
</TextBox>  
```  
  
```csharp  
tbSettingText.Text = "Initial text contents of the TextBox.";  
```  
  
```vb  
tbSettingText.Text = "Initial text contents of the TextBox."  
```  
  
 <span data-ttu-id="972a0-134">Дополнительные примеры см. в версии 4,0 этого документа: [Класс TextBox](https://msdn.microsoft.com/library/ms617604\(v=vs.100\).aspx).</span><span class="sxs-lookup"><span data-stu-id="972a0-134">For additional examples, see the 4.0 version of this document: [TextBox Class](https://msdn.microsoft.com/library/ms617604\(v=vs.100\).aspx).</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Controls.PasswordBox" />
    <altmember cref="T:System.Windows.Controls.RichTextBox" />
    <related type="ExternalDocumentation" href="https://msdn.microsoft.com/library/aa969815(v=vs.100).aspx"><span data-ttu-id="972a0-135">Общие сведения о TextBox</span><span class="sxs-lookup"><span data-stu-id="972a0-135">TextBox Overview</span></span></related>
    <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=160053"><span data-ttu-id="972a0-136">Пример коллекции элементов управления WPF</span><span class="sxs-lookup"><span data-stu-id="972a0-136">WPF Controls Gallery Sample</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TextBox ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TextBox();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="972a0-137">Инициализирует новый экземпляр класса <see cref="T:System.Windows.Controls.TextBox" />.</span><span class="sxs-lookup"><span data-stu-id="972a0-137">Initializes a new instance of the <see cref="T:System.Windows.Controls.TextBox" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CaretIndex">
      <MemberSignature Language="C#" Value="public int CaretIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CaretIndex" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.TextBox.CaretIndex" />
      <MemberSignature Language="VB.NET" Value="Public Property CaretIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CaretIndex { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.CaretIndex : int with get, set" Usage="System.Windows.Controls.TextBox.CaretIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="972a0-138">Получает или задает индекс позиции вставки для точки ввода.</span><span class="sxs-lookup"><span data-stu-id="972a0-138">Gets or sets the insertion position index of the caret.</span></span></summary>
        <value><span data-ttu-id="972a0-139">Отсчитываемый от нуля индекс позиции вставки для точки ввода.</span><span class="sxs-lookup"><span data-stu-id="972a0-139">The zero-based insertion position index of the caret.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="972a0-140">Получение этого свойства возвращает текущий индекс позиции вставки курсора (см <xref:System.Windows.Documents.TextPointer> . Дополнительные сведения о терминологии, например "позиция вставки").</span><span class="sxs-lookup"><span data-stu-id="972a0-140">Getting this property returns the current insertion position index of the caret (see <xref:System.Windows.Documents.TextPointer> for information on terminology like "insertion position").</span></span> <span data-ttu-id="972a0-141">При установке этого свойства курсор перемещается в указанную позицию вставки.</span><span class="sxs-lookup"><span data-stu-id="972a0-141">Setting this property moves the caret to the specified insertion position.</span></span>  
  
 <span data-ttu-id="972a0-142">Позиция вставки находится между либо символами, либо тегами элементов.</span><span class="sxs-lookup"><span data-stu-id="972a0-142">An insertion position is between either characters or element tags.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Documents.TextPointer" />
      </Docs>
    </Member>
    <Member MemberName="CharacterCasing">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.CharacterCasing CharacterCasing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.CharacterCasing CharacterCasing" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.TextBox.CharacterCasing" />
      <MemberSignature Language="VB.NET" Value="Public Property CharacterCasing As CharacterCasing" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::CharacterCasing CharacterCasing { System::Windows::Controls::CharacterCasing get(); void set(System::Windows::Controls::CharacterCasing value); };" />
      <MemberSignature Language="F#" Value="member this.CharacterCasing : System.Windows.Controls.CharacterCasing with get, set" Usage="System.Windows.Controls.TextBox.CharacterCasing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.CharacterCasing</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="972a0-143">Получает или задает режим установки регистра символов при их вводе в текстовом поле вручную.</span><span class="sxs-lookup"><span data-stu-id="972a0-143">Gets or sets how characters are cased when they are manually entered into the text box.</span></span></summary>
        <value><span data-ttu-id="972a0-144">Одно из значений <see cref="T:System.Windows.Controls.CharacterCasing" />, определяющих, как устанавливается регистр символов, вводимых вручную.</span><span class="sxs-lookup"><span data-stu-id="972a0-144">One of the <see cref="T:System.Windows.Controls.CharacterCasing" /> values that specifies how manually entered characters are cased.</span></span> <span data-ttu-id="972a0-145">Значение по умолчанию — <see cref="F:System.Windows.Controls.CharacterCasing.Normal" />.</span><span class="sxs-lookup"><span data-stu-id="972a0-145">The default is <see cref="F:System.Windows.Controls.CharacterCasing.Normal" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="972a0-146">Это свойство не влияет на символы, которые добавляются программно.</span><span class="sxs-lookup"><span data-stu-id="972a0-146">This property does not affect characters that are added programmatically.</span></span>  
  
<a name="dependencyPropertyInfo_CharacterCasing"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="972a0-147">Сведения о свойстве зависимостей</span><span class="sxs-lookup"><span data-stu-id="972a0-147">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="972a0-148">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="972a0-148">Identifier field</span></span>|<xref:System.Windows.Controls.TextBox.CharacterCasingProperty>|  
|<span data-ttu-id="972a0-149">Свойства метаданных, для которых задано значение`true`</span><span class="sxs-lookup"><span data-stu-id="972a0-149">Metadata properties set to `true`</span></span>|<span data-ttu-id="972a0-150">Нет</span><span class="sxs-lookup"><span data-stu-id="972a0-150">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="972a0-151">В следующем примере показано, как использовать <xref:System.Windows.Controls.TextBox.CharacterCasing%2A> свойство для преобразования всех вводимых вручную символов в верхний регистр в текстовом поле.</span><span class="sxs-lookup"><span data-stu-id="972a0-151">The following example shows how to use the <xref:System.Windows.Controls.TextBox.CharacterCasing%2A> property to convert all manually entered characters to uppercase in a text box.</span></span>  
  
 [!code-xaml[TextBoxMiscSnippets_snip#CharacterCasingExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxMiscSnippets_snip/csharp/charactercasingexample.xaml#charactercasingexamplewholepage)]  
  
 [!code-csharp[TextBoxMiscSnippets_procedural_snip#CharacterCasingCodeExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxMiscSnippets_procedural_snip/CSharp/CharacterCasingExample.cs#charactercasingcodeexamplewholepage)]
 [!code-vb[TextBoxMiscSnippets_procedural_snip#CharacterCasingCodeExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxMiscSnippets_procedural_snip/visualbasic/charactercasingexample.vb#charactercasingcodeexamplewholepage)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CharacterCasingProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CharacterCasingProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CharacterCasingProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.TextBox.CharacterCasingProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CharacterCasingProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ CharacterCasingProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable CharacterCasingProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.TextBox.CharacterCasingProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="972a0-152">Идентифицирует свойство зависимостей <see cref="P:System.Windows.Controls.TextBox.CharacterCasing" />.</span><span class="sxs-lookup"><span data-stu-id="972a0-152">Identifies the <see cref="P:System.Windows.Controls.TextBox.CharacterCasing" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; unit" Usage="textBox.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="972a0-153">Удаляет из текстового поля все его содержимое.</span><span class="sxs-lookup"><span data-stu-id="972a0-153">Clears all the content from the text box.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Controls.TextBox.Text" />
      </Docs>
    </Member>
    <Member MemberName="GetCharacterIndexFromLineIndex">
      <MemberSignature Language="C#" Value="public int GetCharacterIndexFromLineIndex (int lineIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetCharacterIndexFromLineIndex(int32 lineIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.GetCharacterIndexFromLineIndex(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCharacterIndexFromLineIndex (lineIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetCharacterIndexFromLineIndex(int lineIndex);" />
      <MemberSignature Language="F#" Value="member this.GetCharacterIndexFromLineIndex : int -&gt; int" Usage="textBox.GetCharacterIndexFromLineIndex lineIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lineIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="lineIndex"><span data-ttu-id="972a0-154">Отсчитываемый от нуля индекс строки, для которой необходимо извлечь индекс начального символа.</span><span class="sxs-lookup"><span data-stu-id="972a0-154">The zero-based index of the line to retrieve the initial character index for.</span></span></param>
        <summary><span data-ttu-id="972a0-155">Возвращает отсчитываемый от нуля индекс первого символа в указанной строке.</span><span class="sxs-lookup"><span data-stu-id="972a0-155">Returns the zero-based character index for the first character in the specified line.</span></span></summary>
        <returns><span data-ttu-id="972a0-156">Отсчитываемый от нуля индекс первого символа в указанной строке.</span><span class="sxs-lookup"><span data-stu-id="972a0-156">The zero-based index for the first character in the specified line.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Controls.TextBox.LineCount" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetCharacterIndexFromPoint(System.Windows.Point,System.Boolean)" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetLineIndexFromCharacterIndex(System.Int32)" />
        <altmember cref="Overload:System.Windows.Controls.TextBox.GetRectFromCharacterIndex" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetFirstVisibleLineIndex" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetLastVisibleLineIndex" />
      </Docs>
    </Member>
    <Member MemberName="GetCharacterIndexFromPoint">
      <MemberSignature Language="C#" Value="public int GetCharacterIndexFromPoint (System.Windows.Point point, bool snapToText);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetCharacterIndexFromPoint(valuetype System.Windows.Point point, bool snapToText) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.GetCharacterIndexFromPoint(System.Windows.Point,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetCharacterIndexFromPoint(System::Windows::Point point, bool snapToText);" />
      <MemberSignature Language="F#" Value="member this.GetCharacterIndexFromPoint : System.Windows.Point * bool -&gt; int" Usage="textBox.GetCharacterIndexFromPoint (point, snapToText)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
        <Parameter Name="snapToText" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="point"><span data-ttu-id="972a0-157">Точка в координатном пространстве <see cref="T:System.Windows.Controls.TextBox" />, для которой возвращается индекс.</span><span class="sxs-lookup"><span data-stu-id="972a0-157">A point in <see cref="T:System.Windows.Controls.TextBox" /> coordinate-space for which to return an index.</span></span></param>
        <param name="snapToText"><span data-ttu-id="972a0-158">Значение <see langword="true" />, чтобы возвратить ближайший индекс, если в указанной точке нет символа; значение <see langword="false" />, чтобы возвратить –1, если в указанной точке нет символа.</span><span class="sxs-lookup"><span data-stu-id="972a0-158"><see langword="true" /> to return the nearest index if there is no character at the specified point; <see langword="false" /> to return -1 if there is no character at the specified point.</span></span></param>
        <summary><span data-ttu-id="972a0-159">Возвращает отсчитываемый от нуля индекс символа, ближайшего к заданной точке.</span><span class="sxs-lookup"><span data-stu-id="972a0-159">Returns the zero-based index of the character that is closest to the specified point.</span></span></summary>
        <returns><span data-ttu-id="972a0-160">Индекс символа, ближайшего к заданной точке, или –1, если допустимый индекс не найден.</span><span class="sxs-lookup"><span data-stu-id="972a0-160">The index of the character that is closest to the specified point, or -1 if no valid index can be found.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Controls.TextBox.GetCharacterIndexFromLineIndex(System.Int32)" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetLineIndexFromCharacterIndex(System.Int32)" />
        <altmember cref="Overload:System.Windows.Controls.TextBox.GetRectFromCharacterIndex" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetFirstVisibleLineIndex" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetLastVisibleLineIndex" />
      </Docs>
    </Member>
    <Member MemberName="GetFirstVisibleLineIndex">
      <MemberSignature Language="C#" Value="public int GetFirstVisibleLineIndex ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetFirstVisibleLineIndex() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.GetFirstVisibleLineIndex" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFirstVisibleLineIndex () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetFirstVisibleLineIndex();" />
      <MemberSignature Language="F#" Value="member this.GetFirstVisibleLineIndex : unit -&gt; int" Usage="textBox.GetFirstVisibleLineIndex " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="972a0-161">Возвращает индекс первой строки, которая в данный момент показана в текстовом поле.</span><span class="sxs-lookup"><span data-stu-id="972a0-161">Returns the line index for the first line that is currently visible in the text box.</span></span></summary>
        <returns><span data-ttu-id="972a0-162">Отсчитываемый от нуля индекс первой видимой строки в текстовом поле.</span><span class="sxs-lookup"><span data-stu-id="972a0-162">The zero-based index for the first visible line in the text box.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Controls.TextBox.GetCharacterIndexFromPoint(System.Windows.Point,System.Boolean)" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetCharacterIndexFromLineIndex(System.Int32)" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetLineIndexFromCharacterIndex(System.Int32)" />
        <altmember cref="Overload:System.Windows.Controls.TextBox.GetRectFromCharacterIndex" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetLastVisibleLineIndex" />
      </Docs>
    </Member>
    <Member MemberName="GetLastVisibleLineIndex">
      <MemberSignature Language="C#" Value="public int GetLastVisibleLineIndex ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetLastVisibleLineIndex() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.GetLastVisibleLineIndex" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLastVisibleLineIndex () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetLastVisibleLineIndex();" />
      <MemberSignature Language="F#" Value="member this.GetLastVisibleLineIndex : unit -&gt; int" Usage="textBox.GetLastVisibleLineIndex " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="972a0-163">Возвращает индекс последней строки, которая в данный момент показана в текстовом поле.</span><span class="sxs-lookup"><span data-stu-id="972a0-163">Returns the line index for the last line that is currently visible in the text box.</span></span></summary>
        <returns><span data-ttu-id="972a0-164">Отсчитываемый от нуля индекс последней видимой строки в текстовом поле.</span><span class="sxs-lookup"><span data-stu-id="972a0-164">The zero-based index for the last visible line in the text box.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Controls.TextBox.GetCharacterIndexFromPoint(System.Windows.Point,System.Boolean)" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetLineIndexFromCharacterIndex(System.Int32)" />
        <altmember cref="Overload:System.Windows.Controls.TextBox.GetRectFromCharacterIndex" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetCharacterIndexFromLineIndex(System.Int32)" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetFirstVisibleLineIndex" />
      </Docs>
    </Member>
    <Member MemberName="GetLineIndexFromCharacterIndex">
      <MemberSignature Language="C#" Value="public int GetLineIndexFromCharacterIndex (int charIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetLineIndexFromCharacterIndex(int32 charIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.GetLineIndexFromCharacterIndex(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLineIndexFromCharacterIndex (charIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetLineIndexFromCharacterIndex(int charIndex);" />
      <MemberSignature Language="F#" Value="member this.GetLineIndexFromCharacterIndex : int -&gt; int" Usage="textBox.GetLineIndexFromCharacterIndex charIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="charIndex"><span data-ttu-id="972a0-165">Отсчитываемый от нуля индекс символа, для которого извлекается индекс соответствующей строки.</span><span class="sxs-lookup"><span data-stu-id="972a0-165">The zero-based character index for which to retrieve the associated line index.</span></span></param>
        <summary><span data-ttu-id="972a0-166">Возвращает отсчитываемый от нуля индекс строки, содержащей символ с указанным индексом.</span><span class="sxs-lookup"><span data-stu-id="972a0-166">Returns the zero-based line index for the line that contains the specified character index.</span></span></summary>
        <returns><span data-ttu-id="972a0-167">Отсчитываемый от нуля индекс строки, содержащей символ с указанным индексом.</span><span class="sxs-lookup"><span data-stu-id="972a0-167">The zero-based index for the line that contains the specified character index.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Controls.TextBox.GetCharacterIndexFromPoint(System.Windows.Point,System.Boolean)" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetCharacterIndexFromLineIndex(System.Int32)" />
        <altmember cref="Overload:System.Windows.Controls.TextBox.GetRectFromCharacterIndex" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetFirstVisibleLineIndex" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetLastVisibleLineIndex" />
      </Docs>
    </Member>
    <Member MemberName="GetLineLength">
      <MemberSignature Language="C#" Value="public int GetLineLength (int lineIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetLineLength(int32 lineIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.GetLineLength(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLineLength (lineIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetLineLength(int lineIndex);" />
      <MemberSignature Language="F#" Value="member this.GetLineLength : int -&gt; int" Usage="textBox.GetLineLength lineIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lineIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="lineIndex"><span data-ttu-id="972a0-168">Отсчитываемый от нуля индекс строки, для которого возвращается число символов.</span><span class="sxs-lookup"><span data-stu-id="972a0-168">The zero-based line index for which to return a character count.</span></span></param>
        <summary><span data-ttu-id="972a0-169">Возвращает число символов в указанной строке.</span><span class="sxs-lookup"><span data-stu-id="972a0-169">Returns the number of characters in the specified line.</span></span></summary>
        <returns><span data-ttu-id="972a0-170">Число символов в указанной строке.</span><span class="sxs-lookup"><span data-stu-id="972a0-170">The number of characters in the specified line.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Controls.TextBox.LineCount" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetFirstVisibleLineIndex" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetLastVisibleLineIndex" />
      </Docs>
    </Member>
    <Member MemberName="GetLineText">
      <MemberSignature Language="C#" Value="public string GetLineText (int lineIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetLineText(int32 lineIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.GetLineText(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLineText (lineIndex As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetLineText(int lineIndex);" />
      <MemberSignature Language="F#" Value="member this.GetLineText : int -&gt; string" Usage="textBox.GetLineText lineIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lineIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="lineIndex"><span data-ttu-id="972a0-171">Отсчитываемый от нуля индекс строки, для которого требуется извлечь отображаемый текст.</span><span class="sxs-lookup"><span data-stu-id="972a0-171">The zero-based line index for which to retrieve the currently displayed text.</span></span></param>
        <summary><span data-ttu-id="972a0-172">Возвращает текст, отображаемый в текущий момент в указанной строке.</span><span class="sxs-lookup"><span data-stu-id="972a0-172">Returns the text that is currently displayed on the specified line.</span></span></summary>
        <returns><span data-ttu-id="972a0-173">Строка, содержащая копию текста, отображающегося в текущий момент в указанной строке.</span><span class="sxs-lookup"><span data-stu-id="972a0-173">A string containing a copy of the text currently visible on the specified line.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Controls.TextBox.LineCount" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetFirstVisibleLineIndex" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetLastVisibleLineIndex" />
      </Docs>
    </Member>
    <Member MemberName="GetNextSpellingErrorCharacterIndex">
      <MemberSignature Language="C#" Value="public int GetNextSpellingErrorCharacterIndex (int charIndex, System.Windows.Documents.LogicalDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetNextSpellingErrorCharacterIndex(int32 charIndex, valuetype System.Windows.Documents.LogicalDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.GetNextSpellingErrorCharacterIndex(System.Int32,System.Windows.Documents.LogicalDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetNextSpellingErrorCharacterIndex (charIndex As Integer, direction As LogicalDirection) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetNextSpellingErrorCharacterIndex(int charIndex, System::Windows::Documents::LogicalDirection direction);" />
      <MemberSignature Language="F#" Value="member this.GetNextSpellingErrorCharacterIndex : int * System.Windows.Documents.LogicalDirection -&gt; int" Usage="textBox.GetNextSpellingErrorCharacterIndex (charIndex, direction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charIndex" Type="System.Int32" />
        <Parameter Name="direction" Type="System.Windows.Documents.LogicalDirection" />
      </Parameters>
      <Docs>
        <param name="charIndex"><span data-ttu-id="972a0-174">Отсчитываемый от нуля индекс символа, обозначающий место, с которого начинается поиск следующей орфографической ошибки.</span><span class="sxs-lookup"><span data-stu-id="972a0-174">The zero-based character index indicating a position from which to search for the next spelling error.</span></span></param>
        <param name="direction"><span data-ttu-id="972a0-175">Одно из значений <see cref="T:System.Windows.Documents.LogicalDirection" />, задающее направление, в котором следует искать очередную орфографическую ошибку, начиная с указанной позиции <paramref name="charIndex" />.</span><span class="sxs-lookup"><span data-stu-id="972a0-175">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the direction in which to search for the next spelling error, starting at the specified <paramref name="charIndex" />.</span></span></param>
        <summary><span data-ttu-id="972a0-176">Возвращает начальный индекс символа для следующей орфографической ошибки в содержимом текстового поля.</span><span class="sxs-lookup"><span data-stu-id="972a0-176">Returns the beginning character index for the next spelling error in the contents of the text box.</span></span></summary>
        <returns><span data-ttu-id="972a0-177">Индекс символа, указывающий начальную позицию для следующей орфографической ошибки в содержимом текстового поля, или –1, если больше орфографических ошибок нет.</span><span class="sxs-lookup"><span data-stu-id="972a0-177">The character index for the beginning of the next spelling error in the contents of the text box, or -1 if no next spelling error exists.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Controls.TextBox.GetSpellingError(System.Int32)" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetSpellingErrorLength(System.Int32)" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetSpellingErrorStart(System.Int32)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetRectFromCharacterIndex">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="972a0-178">Возвращает прямоугольник для края символа, расположенного в позиции с указанным индексом.</span><span class="sxs-lookup"><span data-stu-id="972a0-178">Returns the rectangle for an edge of the character at the specified index.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetRectFromCharacterIndex">
      <MemberSignature Language="C#" Value="public System.Windows.Rect GetRectFromCharacterIndex (int charIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Rect GetRectFromCharacterIndex(int32 charIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.GetRectFromCharacterIndex(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRectFromCharacterIndex (charIndex As Integer) As Rect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Rect GetRectFromCharacterIndex(int charIndex);" />
      <MemberSignature Language="F#" Value="member this.GetRectFromCharacterIndex : int -&gt; System.Windows.Rect" Usage="textBox.GetRectFromCharacterIndex charIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="charIndex"><span data-ttu-id="972a0-179">Отсчитываемый от нуля индекс символа, для которого извлекается прямоугольник.</span><span class="sxs-lookup"><span data-stu-id="972a0-179">The zero-based character index of the character for which to retrieve the rectangle.</span></span></param>
        <summary><span data-ttu-id="972a0-180">Возвращает прямоугольник для переднего края символа, расположенного в позиции с указанным индексом.</span><span class="sxs-lookup"><span data-stu-id="972a0-180">Returns the rectangle for the leading edge of the character at the specified index.</span></span></summary>
        <returns><span data-ttu-id="972a0-181">Прямоугольник для переднего края символа, расположенного в позиции с указанным индексом, или <see cref="P:System.Windows.Rect.Empty" />, если определить ограничивающий прямоугольник невозможно.</span><span class="sxs-lookup"><span data-stu-id="972a0-181">A rectangle for the leading edge of the character at the specified character index, or <see cref="P:System.Windows.Rect.Empty" /> if a bounding rectangle cannot be determined.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="972a0-182">Поскольку этот метод возвращает прямоугольник, представляющий границу символа, ширина прямоугольника равна 0.</span><span class="sxs-lookup"><span data-stu-id="972a0-182">Because this method returns a rectangle that represents an edge of the character, the width of the rectangle is 0.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRectFromCharacterIndex">
      <MemberSignature Language="C#" Value="public System.Windows.Rect GetRectFromCharacterIndex (int charIndex, bool trailingEdge);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Rect GetRectFromCharacterIndex(int32 charIndex, bool trailingEdge) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.GetRectFromCharacterIndex(System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRectFromCharacterIndex (charIndex As Integer, trailingEdge As Boolean) As Rect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Rect GetRectFromCharacterIndex(int charIndex, bool trailingEdge);" />
      <MemberSignature Language="F#" Value="member this.GetRectFromCharacterIndex : int * bool -&gt; System.Windows.Rect" Usage="textBox.GetRectFromCharacterIndex (charIndex, trailingEdge)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charIndex" Type="System.Int32" />
        <Parameter Name="trailingEdge" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="charIndex"><span data-ttu-id="972a0-183">Отсчитываемый от нуля индекс символа, для которого извлекается прямоугольник.</span><span class="sxs-lookup"><span data-stu-id="972a0-183">The zero-based character index of the character for which to retrieve the rectangle.</span></span></param>
        <param name="trailingEdge"><span data-ttu-id="972a0-184">Значение <see langword="true" />, чтобы получить задний край символа; <see langword="false" />, чтобы получить передний край символа.</span><span class="sxs-lookup"><span data-stu-id="972a0-184"><see langword="true" /> to get the trailing edge of the character; <see langword="false" /> to get the leading edge of the character.</span></span></param>
        <summary><span data-ttu-id="972a0-185">Возвращает прямоугольник для переднего или заднего края символа, расположенного в позиции с указанным индексом.</span><span class="sxs-lookup"><span data-stu-id="972a0-185">Returns the rectangle for the leading or trailing edge of the character at the specified index.</span></span></summary>
        <returns><span data-ttu-id="972a0-186">Прямоугольник для края символа, расположенного в позиции с указанным индексом, или <see cref="P:System.Windows.Rect.Empty" />, если определить ограничивающий прямоугольник невозможно.</span><span class="sxs-lookup"><span data-stu-id="972a0-186">A rectangle for an edge of the character at the specified character index, or <see cref="P:System.Windows.Rect.Empty" /> if a bounding rectangle cannot be determined.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="972a0-187">Поскольку этот метод возвращает прямоугольник, представляющий границу символа, ширина прямоугольника равна 0.</span><span class="sxs-lookup"><span data-stu-id="972a0-187">Because this method returns a rectangle that represents an edge of the character, the width of the rectangle is 0.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="972a0-188">Значение <paramref name="charIndex" /> меньше нуля или больше длины содержимого.</span><span class="sxs-lookup"><span data-stu-id="972a0-188"><paramref name="charIndex" /> is negative or is greater than the length of the content.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetSpellingError">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.SpellingError GetSpellingError (int charIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Controls.SpellingError GetSpellingError(int32 charIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.GetSpellingError(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSpellingError (charIndex As Integer) As SpellingError" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Controls::SpellingError ^ GetSpellingError(int charIndex);" />
      <MemberSignature Language="F#" Value="member this.GetSpellingError : int -&gt; System.Windows.Controls.SpellingError" Usage="textBox.GetSpellingError charIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.SpellingError</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="charIndex"><span data-ttu-id="972a0-189">Отсчитываемый от нуля индекс позиции в содержимом для проверки на наличие орфографических ошибок.</span><span class="sxs-lookup"><span data-stu-id="972a0-189">The zero-based character index of a position in content to examine for a spelling error.</span></span></param>
        <summary><span data-ttu-id="972a0-190">Возвращает объект <see cref="T:System.Windows.Controls.SpellingError" />, связанный с орфографической ошибкой по указанному индексу символа.</span><span class="sxs-lookup"><span data-stu-id="972a0-190">Returns a <see cref="T:System.Windows.Controls.SpellingError" /> object associated with any spelling error at the specified character index.</span></span></summary>
        <returns><span data-ttu-id="972a0-191">Объект <see cref="T:System.Windows.Controls.SpellingError" />, содержащий сведения об орфографической ошибке, которая обнаружена в символе, обозначенном <paramref name="charIndex" />, или значение <see langword="null" />, если в заданном символе отсутствует орфографическая ошибка.</span><span class="sxs-lookup"><span data-stu-id="972a0-191">A <see cref="T:System.Windows.Controls.SpellingError" /> object containing the details of the spelling error found at the character indicated by <paramref name="charIndex" />, or <see langword="null" /> if no spelling error exists at the specified character.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Controls.TextBox.GetNextSpellingErrorCharacterIndex(System.Int32,System.Windows.Documents.LogicalDirection)" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetSpellingErrorLength(System.Int32)" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetSpellingErrorStart(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetSpellingErrorLength">
      <MemberSignature Language="C#" Value="public int GetSpellingErrorLength (int charIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetSpellingErrorLength(int32 charIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.GetSpellingErrorLength(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSpellingErrorLength (charIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetSpellingErrorLength(int charIndex);" />
      <MemberSignature Language="F#" Value="member this.GetSpellingErrorLength : int -&gt; int" Usage="textBox.GetSpellingErrorLength charIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="charIndex"><span data-ttu-id="972a0-192">Отсчитываемый от нуля индекс позиции в содержимом для проверки на наличие орфографических ошибок.</span><span class="sxs-lookup"><span data-stu-id="972a0-192">The zero-based character index of a position in content to examine for a spelling error.</span></span></param>
        <summary><span data-ttu-id="972a0-193">Возвращает длину орфографической ошибки, включающей указанный символ.</span><span class="sxs-lookup"><span data-stu-id="972a0-193">Returns the length of any spelling error that includes the specified character.</span></span></summary>
        <returns><span data-ttu-id="972a0-194">Длина орфографической ошибки, включающей символ, заданный параметром charIndex, или 0, если указанный символ не является частью орфографической ошибки.</span><span class="sxs-lookup"><span data-stu-id="972a0-194">The length of any spelling error that includes the character specified by charIndex, or 0 if the specified character is not part of a spelling error.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSpellingErrorStart">
      <MemberSignature Language="C#" Value="public int GetSpellingErrorStart (int charIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetSpellingErrorStart(int32 charIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.GetSpellingErrorStart(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSpellingErrorStart (charIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetSpellingErrorStart(int charIndex);" />
      <MemberSignature Language="F#" Value="member this.GetSpellingErrorStart : int -&gt; int" Usage="textBox.GetSpellingErrorStart charIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="charIndex"><span data-ttu-id="972a0-195">Отсчитываемый от нуля индекс позиции в содержимом для проверки на наличие орфографических ошибок.</span><span class="sxs-lookup"><span data-stu-id="972a0-195">The zero-based character index of a position in content to examine for a spelling error.</span></span></param>
        <summary><span data-ttu-id="972a0-196">Возвращает начальный индекс символа для орфографической ошибки, включающей указанный символ.</span><span class="sxs-lookup"><span data-stu-id="972a0-196">Returns the beginning character index for any spelling error that includes the specified character.</span></span></summary>
        <returns><span data-ttu-id="972a0-197">Начальный индекс символа для орфографической ошибки, включающей символ, заданный параметром <paramref name="charIndex" />, или –1, если указанный символ не является частью орфографической ошибки.</span><span class="sxs-lookup"><span data-stu-id="972a0-197">The beginning character index for any spelling error that includes the character specified by <paramref name="charIndex" />, or -1 if the specified character is not part of a spelling error.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LineCount">
      <MemberSignature Language="C#" Value="public int LineCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LineCount" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.TextBox.LineCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LineCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LineCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.LineCount : int" Usage="System.Windows.Controls.TextBox.LineCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="972a0-198">Получает общее число строк в текстовом поле.</span><span class="sxs-lookup"><span data-stu-id="972a0-198">Gets the total number of lines in the text box.</span></span></summary>
        <value><span data-ttu-id="972a0-199">Общее число строк в текстовом поле или-1, если сведения о макете недоступны.</span><span class="sxs-lookup"><span data-stu-id="972a0-199">The total number of lines in the text box, or -1 if layout information is not available.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="972a0-200">Если включено обтекание текста, изменение ширины текстового поля может изменить это значение.</span><span class="sxs-lookup"><span data-stu-id="972a0-200">If text wrapping is enabled, changing the width of the text box may change this value.</span></span>  
  
 <span data-ttu-id="972a0-201">Возвращаемое значение — это общее количество строк в текстовом поле, независимо от количества видимых в данный момент.</span><span class="sxs-lookup"><span data-stu-id="972a0-201">The value returned is the total number of lines in the text box, regardless of how many are currently visible.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.TextBox.TextWrapping" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetCharacterIndexFromLineIndex(System.Int32)" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetFirstVisibleLineIndex" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetLastVisibleLineIndex" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetLineLength(System.Int32)" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetLineText(System.Int32)" />
        <altmember cref="P:System.Windows.Controls.TextBox.MaxLines" />
        <altmember cref="P:System.Windows.Controls.TextBox.MinLines" />
        <altmember cref="M:System.Windows.Controls.TextBox.ScrollToLine(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="LogicalChildren">
      <MemberSignature Language="C#" Value="protected internal override System.Collections.IEnumerator LogicalChildren { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IEnumerator LogicalChildren" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.TextBox.LogicalChildren" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides ReadOnly Property LogicalChildren As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property System::Collections::IEnumerator ^ LogicalChildren { System::Collections::IEnumerator ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LogicalChildren : System.Collections.IEnumerator" Usage="System.Windows.Controls.TextBox.LogicalChildren" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="972a0-202">Получает перечислитель для логических дочерних элементов объекта <see cref="T:System.Windows.Controls.TextBox" />.</span><span class="sxs-lookup"><span data-stu-id="972a0-202">Gets an enumerator for the logical child elements of the <see cref="T:System.Windows.Controls.TextBox" />.</span></span></summary>
        <value><span data-ttu-id="972a0-203">Перечислитель для логических дочерних элементов объекта <see cref="T:System.Windows.Controls.TextBox" />.</span><span class="sxs-lookup"><span data-stu-id="972a0-203">An enumerator for the logical child elements of the <see cref="T:System.Windows.Controls.TextBox" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="972a0-204">Свойство возвращает перечислитель для коллекции, содержащей объект <xref:System.String> <xref:System.Windows.Controls.TextBox.Text%2A> , равный свойству. <xref:System.Windows.Controls.TextBox.LogicalChildren%2A></span><span class="sxs-lookup"><span data-stu-id="972a0-204">The <xref:System.Windows.Controls.TextBox.LogicalChildren%2A> property returns an enumerator for a collection that contains a <xref:System.String> that is equal to the <xref:System.Windows.Controls.TextBox.Text%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxLength">
      <MemberSignature Language="C#" Value="public int MaxLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxLength" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.TextBox.MaxLength" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxLength { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxLength : int with get, set" Usage="System.Windows.Controls.TextBox.MaxLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.None, Modifiability=System.Windows.Modifiability.Unmodifiable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="972a0-205">Получает или задает максимальное число символов, которые могут быть вручную введены в текстовом поле.</span><span class="sxs-lookup"><span data-stu-id="972a0-205">Gets or sets the maximum number of characters that can be manually entered into the text box.</span></span></summary>
        <value><span data-ttu-id="972a0-206">Максимальное число символов, которые могут быть вручную введены в текстовом поле.</span><span class="sxs-lookup"><span data-stu-id="972a0-206">The maximum number of characters that can be manually entered into the text box.</span></span> <span data-ttu-id="972a0-207">Значение по умолчанию — 0, что означает неограниченное количество.</span><span class="sxs-lookup"><span data-stu-id="972a0-207">The default is 0, which indicates no limit.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="972a0-208">Это свойство можно использовать для ограничения длины текста, введенного в элемент управления, для таких значений, как почтовые коды и телефонные номера.</span><span class="sxs-lookup"><span data-stu-id="972a0-208">You can use this property to restrict the length of text entered in the control for values such as postal codes and telephone numbers.</span></span> <span data-ttu-id="972a0-209">Это свойство также можно использовать для ограничения длины текста, введенного при хранении данных в базе данных, чтобы текст, введенный в элемент управления, не превышал максимальную длину соответствующего поля в базе данных.</span><span class="sxs-lookup"><span data-stu-id="972a0-209">You can also use this property to restrict the length of text entered when the data is to be stored in a database so that the text entered into the control does not exceed the maximum length of the corresponding field in the database.</span></span>  
  
 <span data-ttu-id="972a0-210">Это свойство не влияет на символы, которые добавляются программно.</span><span class="sxs-lookup"><span data-stu-id="972a0-210">This property does not affect characters that are added programmatically.</span></span>  
  
 <span data-ttu-id="972a0-211">Если это свойство имеет значение 0, максимальная длина текста, который может быть указана в элементе управления, ограничивается только доступной памятью.</span><span class="sxs-lookup"><span data-stu-id="972a0-211">When this property is set to 0, the maximum length of the text that can be entered in the control is limited only by available memory.</span></span>  
  
<a name="dependencyPropertyInfo_MaxLength"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="972a0-212">Сведения о свойстве зависимостей</span><span class="sxs-lookup"><span data-stu-id="972a0-212">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="972a0-213">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="972a0-213">Identifier field</span></span>|<xref:System.Windows.Controls.TextBox.MaxLengthProperty>|  
|<span data-ttu-id="972a0-214">Свойства метаданных, для которых задано значение`true`</span><span class="sxs-lookup"><span data-stu-id="972a0-214">Metadata properties set to `true`</span></span>|<span data-ttu-id="972a0-215">Нет</span><span class="sxs-lookup"><span data-stu-id="972a0-215">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="972a0-216">В следующем примере показано, как создать объект <xref:System.Windows.Controls.TextBox> <xref:System.Windows.Controls.TextBox.MaxLength%2A> с символом, равным 500.</span><span class="sxs-lookup"><span data-stu-id="972a0-216">The following example shows how to create a <xref:System.Windows.Controls.TextBox> with a <xref:System.Windows.Controls.TextBox.MaxLength%2A> of 500 characters.</span></span>  
  
 [!code-xaml[TextBoxMiscSnippets_snip#TextBoxExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxMiscSnippets_snip/csharp/textboxexample.xaml#textboxexamplewholepage)]  
  
 [!code-csharp[TextBoxMiscSnippets_procedural_snip#TextBoxCodeExampleInline1](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxMiscSnippets_procedural_snip/CSharp/TextBoxExample.cs#textboxcodeexampleinline1)]
 [!code-vb[TextBoxMiscSnippets_procedural_snip#TextBoxCodeExampleInline1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxMiscSnippets_procedural_snip/visualbasic/textboxexample.vb#textboxcodeexampleinline1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.TextBox.MaxLines" />
      </Docs>
    </Member>
    <Member MemberName="MaxLengthProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty MaxLengthProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty MaxLengthProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.TextBox.MaxLengthProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MaxLengthProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ MaxLengthProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable MaxLengthProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.TextBox.MaxLengthProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="972a0-217">Идентифицирует свойство зависимостей <see cref="P:System.Windows.Controls.TextBox.MaxLength" />.</span><span class="sxs-lookup"><span data-stu-id="972a0-217">Identifies the <see cref="P:System.Windows.Controls.TextBox.MaxLength" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxLines">
      <MemberSignature Language="C#" Value="public int MaxLines { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxLines" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.TextBox.MaxLines" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxLines As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxLines { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxLines : int with get, set" Usage="System.Windows.Controls.TextBox.MaxLines" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(2147483647)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="972a0-218">Получает или задает максимальное число видимых строк.</span><span class="sxs-lookup"><span data-stu-id="972a0-218">Gets or sets the maximum number of visible lines.</span></span></summary>
        <value><span data-ttu-id="972a0-219">Максимальное число видимых строк.</span><span class="sxs-lookup"><span data-stu-id="972a0-219">The maximum number of visible lines.</span></span> <span data-ttu-id="972a0-220">Значение по умолчанию — <see cref="F:System.Int32.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="972a0-220">The default is <see cref="F:System.Int32.MaxValue" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="972a0-221">При получении этого свойства возвращается текущее значение <xref:System.Windows.Controls.TextBox.MaxLines%2A>.</span><span class="sxs-lookup"><span data-stu-id="972a0-221">Getting this property returns the current value of <xref:System.Windows.Controls.TextBox.MaxLines%2A>.</span></span> <span data-ttu-id="972a0-222">Установка этого свойства приводит к изменению размеров текстового поля, если число видимых строк превышает ограничение, заданное <xref:System.Windows.Controls.TextBox.MaxLines%2A>параметром.</span><span class="sxs-lookup"><span data-stu-id="972a0-222">Setting this property causes the text box to resize if the number of visible lines exceeds the limit specified by <xref:System.Windows.Controls.TextBox.MaxLines%2A>.</span></span>  
  
 <span data-ttu-id="972a0-223">Это свойство применяется только к видимым строкам и не ограничивает фактическое число строк.</span><span class="sxs-lookup"><span data-stu-id="972a0-223">This property applies only to visible lines, and does not constrain the actual number of lines.</span></span> <span data-ttu-id="972a0-224">В зависимости от конфигурации текстовое поле может содержать дополнительные невидимые строки, доступные при прокрутке.</span><span class="sxs-lookup"><span data-stu-id="972a0-224">Depending on its configuration, a text box may contain additional non-visible lines that are accessible by scrolling.</span></span>  
  
 <span data-ttu-id="972a0-225">Если свойство явно задано <xref:System.Windows.Controls.TextBox>для, <xref:System.Windows.Controls.TextBox.MaxLines%2A> значения свойств и <xref:System.Windows.Controls.TextBox.MinLines%2A> не учитываются. <xref:System.Windows.FrameworkElement.Height%2A></span><span class="sxs-lookup"><span data-stu-id="972a0-225">If the <xref:System.Windows.FrameworkElement.Height%2A> property is explicitly set on a <xref:System.Windows.Controls.TextBox>, the <xref:System.Windows.Controls.TextBox.MaxLines%2A> and <xref:System.Windows.Controls.TextBox.MinLines%2A> property values are ignored.</span></span>  
  
<a name="dependencyPropertyInfo_MaxLines"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="972a0-226">Сведения о свойстве зависимостей</span><span class="sxs-lookup"><span data-stu-id="972a0-226">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="972a0-227">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="972a0-227">Identifier field</span></span>|<xref:System.Windows.Controls.TextBox.MaxLinesProperty>|  
|<span data-ttu-id="972a0-228">Свойства метаданных, для которых задано значение`true`</span><span class="sxs-lookup"><span data-stu-id="972a0-228">Metadata properties set to `true`</span></span>|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|  
  
   
  
## Examples  
 <span data-ttu-id="972a0-229">В следующем примере показано, как создать объект <xref:System.Windows.Controls.TextBox> <xref:System.Windows.Controls.TextBox.MaxLines%2A> со значением 5.</span><span class="sxs-lookup"><span data-stu-id="972a0-229">The following example shows how to create a <xref:System.Windows.Controls.TextBox> with a <xref:System.Windows.Controls.TextBox.MaxLines%2A> value of 5.</span></span>  
  
 [!code-xaml[TextBoxMiscSnippets_snip#TextBoxExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxMiscSnippets_snip/csharp/textboxexample.xaml#textboxexamplewholepage)]  
  
 [!code-csharp[TextBoxMiscSnippets_procedural_snip#TextBoxCodeExampleInline1](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxMiscSnippets_procedural_snip/CSharp/TextBoxExample.cs#textboxcodeexampleinline1)]
 [!code-vb[TextBoxMiscSnippets_procedural_snip#TextBoxCodeExampleInline1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxMiscSnippets_procedural_snip/visualbasic/textboxexample.vb#textboxcodeexampleinline1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception"><span data-ttu-id="972a0-230">Значение <see cref="P:System.Windows.Controls.TextBox.MaxLines" /> меньше <see cref="P:System.Windows.Controls.TextBox.MinLines" />.</span><span class="sxs-lookup"><span data-stu-id="972a0-230"><see cref="P:System.Windows.Controls.TextBox.MaxLines" /> is less than <see cref="P:System.Windows.Controls.TextBox.MinLines" />.</span></span></exception>
        <altmember cref="P:System.Windows.Controls.TextBox.MinLines" />
        <altmember cref="P:System.Windows.Controls.TextBox.MaxLength" />
      </Docs>
    </Member>
    <Member MemberName="MaxLinesProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty MaxLinesProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty MaxLinesProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.TextBox.MaxLinesProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MaxLinesProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ MaxLinesProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable MaxLinesProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.TextBox.MaxLinesProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="972a0-231">Идентифицирует свойство зависимостей <see cref="P:System.Windows.Controls.TextBox.MaxLines" />.</span><span class="sxs-lookup"><span data-stu-id="972a0-231">Identifies the <see cref="P:System.Windows.Controls.TextBox.MaxLines" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MeasureOverride">
      <MemberSignature Language="C#" Value="protected override System.Windows.Size MeasureOverride (System.Windows.Size constraint);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Windows.Size MeasureOverride(valuetype System.Windows.Size constraint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.MeasureOverride(System.Windows.Size)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function MeasureOverride (constraint As Size) As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Size MeasureOverride(System::Windows::Size constraint);" />
      <MemberSignature Language="F#" Value="override this.MeasureOverride : System.Windows.Size -&gt; System.Windows.Size" Usage="textBox.MeasureOverride constraint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="constraint" Type="System.Windows.Size" />
      </Parameters>
      <Docs>
        <param name="constraint"><span data-ttu-id="972a0-232">Структура <see cref="T:System.Windows.Size" />, в которой указываются ограничения на размер текстового поля.</span><span class="sxs-lookup"><span data-stu-id="972a0-232">A <see cref="T:System.Windows.Size" /> structure that specifies the constraints on the size of the text box.</span></span></param>
        <summary><span data-ttu-id="972a0-233">Устанавливает размеры текстового поля в соответствии с его содержимым.</span><span class="sxs-lookup"><span data-stu-id="972a0-233">Sizes the text box to its content.</span></span></summary>
        <returns><span data-ttu-id="972a0-234">Структура <see cref="T:System.Windows.Size" />, в которой указан новый размер текстового поля.</span><span class="sxs-lookup"><span data-stu-id="972a0-234">A <see cref="T:System.Windows.Size" /> structure indicating the new size of the text box.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="972a0-235">Переопределите этот метод, чтобы реализовать пользовательское поведение при изменении размера.</span><span class="sxs-lookup"><span data-stu-id="972a0-235">Override this method to implement custom sizing behavior.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinLines">
      <MemberSignature Language="C#" Value="public int MinLines { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MinLines" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.TextBox.MinLines" />
      <MemberSignature Language="VB.NET" Value="Public Property MinLines As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MinLines { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MinLines : int with get, set" Usage="System.Windows.Controls.TextBox.MinLines" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="972a0-236">Получает или задает минимальное число видимых строк.</span><span class="sxs-lookup"><span data-stu-id="972a0-236">Gets or sets the minimum number of visible lines.</span></span></summary>
        <value><span data-ttu-id="972a0-237">Минимальное число видимых строк.</span><span class="sxs-lookup"><span data-stu-id="972a0-237">The minimum number of visible lines.</span></span> <span data-ttu-id="972a0-238">Значение по умолчанию — 1.</span><span class="sxs-lookup"><span data-stu-id="972a0-238">The default is 1.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="972a0-239">При получении этого свойства возвращается текущее значение <xref:System.Windows.Controls.TextBox.MinLines%2A>.</span><span class="sxs-lookup"><span data-stu-id="972a0-239">Getting this property returns the current value of <xref:System.Windows.Controls.TextBox.MinLines%2A>.</span></span> <span data-ttu-id="972a0-240">Установка этого свойства приводит к изменению размеров текстового поля, если число видимых строк меньше значения, <xref:System.Windows.Controls.TextBox.MinLines%2A>заданного параметром.</span><span class="sxs-lookup"><span data-stu-id="972a0-240">Setting this property causes the text box to resize if the number of visible lines is less than value specified by <xref:System.Windows.Controls.TextBox.MinLines%2A>.</span></span>  
  
 <span data-ttu-id="972a0-241">Если свойство явно задано <xref:System.Windows.Controls.TextBox>для, <xref:System.Windows.Controls.TextBox.MaxLines%2A> значения свойств и <xref:System.Windows.Controls.TextBox.MinLines%2A> не учитываются. <xref:System.Windows.FrameworkElement.Height%2A></span><span class="sxs-lookup"><span data-stu-id="972a0-241">If the <xref:System.Windows.FrameworkElement.Height%2A> property is explicitly set on a <xref:System.Windows.Controls.TextBox>, the <xref:System.Windows.Controls.TextBox.MaxLines%2A> and <xref:System.Windows.Controls.TextBox.MinLines%2A> property values are ignored.</span></span>  
  
<a name="dependencyPropertyInfo_MinLines"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="972a0-242">Сведения о свойстве зависимостей</span><span class="sxs-lookup"><span data-stu-id="972a0-242">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="972a0-243">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="972a0-243">Identifier field</span></span>|<xref:System.Windows.Controls.TextBox.MinLinesProperty>|  
|<span data-ttu-id="972a0-244">Свойства метаданных, для которых задано значение`true`</span><span class="sxs-lookup"><span data-stu-id="972a0-244">Metadata properties set to `true`</span></span>|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|  
  
   
  
## Examples  
 <span data-ttu-id="972a0-245">В следующем примере показано, как создать объект <xref:System.Windows.Controls.TextBox> <xref:System.Windows.Controls.TextBox.MinLines%2A> со значением 1.</span><span class="sxs-lookup"><span data-stu-id="972a0-245">The following example shows how to create a <xref:System.Windows.Controls.TextBox> with a <xref:System.Windows.Controls.TextBox.MinLines%2A> value of 1.</span></span>  
  
 [!code-xaml[TextBoxMiscSnippets_snip#TextBoxExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxMiscSnippets_snip/csharp/textboxexample.xaml#textboxexamplewholepage)]  
  
 [!code-csharp[TextBoxMiscSnippets_procedural_snip#TextBoxCodeExampleInline1](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxMiscSnippets_procedural_snip/CSharp/TextBoxExample.cs#textboxcodeexampleinline1)]
 [!code-vb[TextBoxMiscSnippets_procedural_snip#TextBoxCodeExampleInline1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxMiscSnippets_procedural_snip/visualbasic/textboxexample.vb#textboxcodeexampleinline1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception"><span data-ttu-id="972a0-246">Значение <see cref="P:System.Windows.Controls.TextBox.MinLines" /> больше значения <see cref="P:System.Windows.Controls.TextBox.MaxLines" />.</span><span class="sxs-lookup"><span data-stu-id="972a0-246"><see cref="P:System.Windows.Controls.TextBox.MinLines" /> is greater than <see cref="P:System.Windows.Controls.TextBox.MaxLines" />.</span></span></exception>
        <altmember cref="P:System.Windows.Controls.TextBox.MaxLines" />
        <altmember cref="P:System.Windows.Controls.TextBox.MaxLength" />
      </Docs>
    </Member>
    <Member MemberName="MinLinesProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty MinLinesProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty MinLinesProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.TextBox.MinLinesProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MinLinesProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ MinLinesProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable MinLinesProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.TextBox.MinLinesProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="972a0-247">Идентифицирует свойство зависимостей <see cref="P:System.Windows.Controls.TextBox.MinLines" />.</span><span class="sxs-lookup"><span data-stu-id="972a0-247">Identifies the <see cref="P:System.Windows.Controls.TextBox.MinLines" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCreateAutomationPeer">
      <MemberSignature Language="C#" Value="protected override System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.OnCreateAutomationPeer" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnCreateAutomationPeer () As AutomationPeer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Automation::Peers::AutomationPeer ^ OnCreateAutomationPeer();" />
      <MemberSignature Language="F#" Value="override this.OnCreateAutomationPeer : unit -&gt; System.Windows.Automation.Peers.AutomationPeer" Usage="textBox.OnCreateAutomationPeer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Peers.AutomationPeer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="972a0-248">Создает и возвращает объект <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> для текстового поля.</span><span class="sxs-lookup"><span data-stu-id="972a0-248">Creates and returns an <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> object for the text box.</span></span></summary>
        <returns><span data-ttu-id="972a0-249">Объект <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> для текстового поля.</span><span class="sxs-lookup"><span data-stu-id="972a0-249">An <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> object for the text box.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="972a0-250">Этот метод переопределяет метод <xref:System.Windows.ContentElement.OnCreateAutomationPeer%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="972a0-250">This method overrides <xref:System.Windows.ContentElement.OnCreateAutomationPeer%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPropertyChanged">
      <MemberSignature Language="C#" Value="protected override void OnPropertyChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPropertyChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnPropertyChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnPropertyChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="F#" Value="override this.OnPropertyChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit" Usage="textBox.OnPropertyChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="972a0-251">Аргументы для связанного события.</span><span class="sxs-lookup"><span data-stu-id="972a0-251">Arguments for the associated event.</span></span></param>
        <summary><span data-ttu-id="972a0-252">Вызывается, когда для одного или нескольких свойств зависимостей, которые существуют в элементе, были изменены существующие значения.</span><span class="sxs-lookup"><span data-stu-id="972a0-252">Called when one or more of the dependency properties that exist on the element have had their effective values changed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="972a0-253">Этот метод переопределяет метод <xref:System.Windows.FrameworkElement.OnPropertyChanged%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="972a0-253">This method overrides <xref:System.Windows.FrameworkElement.OnPropertyChanged%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.DependencyPropertyChangedEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="ScrollToLine">
      <MemberSignature Language="C#" Value="public void ScrollToLine (int lineIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScrollToLine(int32 lineIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.ScrollToLine(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScrollToLine (lineIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ScrollToLine(int lineIndex);" />
      <MemberSignature Language="F#" Value="member this.ScrollToLine : int -&gt; unit" Usage="textBox.ScrollToLine lineIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lineIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="lineIndex"><span data-ttu-id="972a0-254">Отсчитываемый от нуля индекс строки, для просмотра которой следует выполнить прокрутку.</span><span class="sxs-lookup"><span data-stu-id="972a0-254">The zero-based line index of the line to scroll into view.</span></span></param>
        <summary><span data-ttu-id="972a0-255">Выполняет прокрутку для просмотра строки с указанным индексом.</span><span class="sxs-lookup"><span data-stu-id="972a0-255">Scrolls the line at the specified line index into view.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="972a0-256">Этот метод заставляет текстовое поле прокручиваться по минимальному объему, требуемому для переноса указанной строки в полное представление.</span><span class="sxs-lookup"><span data-stu-id="972a0-256">This method causes the text box to scroll by the minimum amount necessary to bring the specified line into full view.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.TextBox.GetFirstVisibleLineIndex" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetLastVisibleLineIndex" />
        <altmember cref="P:System.Windows.Controls.TextBox.LineCount" />
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public void Select (int start, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Select(int32 start, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.Select(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Select (start As Integer, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Select(int start, int length);" />
      <MemberSignature Language="F#" Value="member this.Select : int * int -&gt; unit" Usage="textBox.Select (start, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="start"><span data-ttu-id="972a0-257">Отсчитываемый от нуля индекс первого символа в выделенном фрагменте.</span><span class="sxs-lookup"><span data-stu-id="972a0-257">The zero-based character index of the first character in the selection.</span></span></param>
        <param name="length"><span data-ttu-id="972a0-258">Длина выделенного фрагмента в символах.</span><span class="sxs-lookup"><span data-stu-id="972a0-258">The length of the selection, in characters.</span></span></param>
        <summary><span data-ttu-id="972a0-259">Выбирает диапазон текста в текстовом поле.</span><span class="sxs-lookup"><span data-stu-id="972a0-259">Selects a range of text in the text box.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="972a0-260"><paramref name="start" /> или <paramref name="length" /> является отрицательным значением.</span><span class="sxs-lookup"><span data-stu-id="972a0-260"><paramref name="start" /> or <paramref name="length" /> is negative.</span></span></exception>
        <altmember cref="P:System.Windows.Controls.TextBox.SelectedText" />
        <altmember cref="P:System.Windows.Controls.TextBox.SelectionLength" />
        <altmember cref="P:System.Windows.Controls.TextBox.SelectionStart" />
      </Docs>
    </Member>
    <Member MemberName="SelectedText">
      <MemberSignature Language="C#" Value="public string SelectedText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SelectedText" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.TextBox.SelectedText" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectedText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SelectedText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SelectedText : string with get, set" Usage="System.Windows.Controls.TextBox.SelectedText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="972a0-261">Получает или задает содержимое текущего выделения в текстовом поле.</span><span class="sxs-lookup"><span data-stu-id="972a0-261">Gets or sets the content of the current selection in the text box.</span></span></summary>
        <value><span data-ttu-id="972a0-262">Выбранный в настоящее время текст в текстовом поле.</span><span class="sxs-lookup"><span data-stu-id="972a0-262">The currently selected text in the text box.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="972a0-263">При получении этого свойства возвращается копия строки выбранного в данный момент текста.</span><span class="sxs-lookup"><span data-stu-id="972a0-263">Getting this property returns a string copy of the currently selected text.</span></span> <span data-ttu-id="972a0-264">Задание этого свойства заменяет текущее выделение на указанную строку.</span><span class="sxs-lookup"><span data-stu-id="972a0-264">Setting this property replaces the current selection with the specified string.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.TextBox.Select(System.Int32,System.Int32)" />
        <altmember cref="P:System.Windows.Controls.TextBox.SelectionLength" />
        <altmember cref="P:System.Windows.Controls.TextBox.SelectionStart" />
      </Docs>
    </Member>
    <Member MemberName="SelectionLength">
      <MemberSignature Language="C#" Value="public int SelectionLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SelectionLength" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.TextBox.SelectionLength" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectionLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SelectionLength { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.SelectionLength : int with get, set" Usage="System.Windows.Controls.TextBox.SelectionLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="972a0-265">Получает или задает значение, показывающее число символов в текущем выделенном фрагменте в текстовом поле.</span><span class="sxs-lookup"><span data-stu-id="972a0-265">Gets or sets a value indicating the number of characters in the current selection in the text box.</span></span></summary>
        <value><span data-ttu-id="972a0-266">Число символов в текущем выделенном фрагменте в текстовом поле.</span><span class="sxs-lookup"><span data-stu-id="972a0-266">The number of characters in the current selection in the text box.</span></span> <span data-ttu-id="972a0-267">Значение по умолчанию — 0.</span><span class="sxs-lookup"><span data-stu-id="972a0-267">The default is 0.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="972a0-268">При получении этого свойства возвращается количество символов в текущем выделенном фрагменте.</span><span class="sxs-lookup"><span data-stu-id="972a0-268">Getting this property returns the number of characters in the current selection.</span></span> <span data-ttu-id="972a0-269">Задание этого свойства регулирует длину текущего выделения до указанного значения, сохраняя начало выделенного фрагмента.</span><span class="sxs-lookup"><span data-stu-id="972a0-269">Setting this property adjusts the length of the current selection to the specified value, keeping the beginning of the selection fixed.</span></span>  
  
 <span data-ttu-id="972a0-270">В общем случае, если указанная длина выделения приводит к завершению выбора в недопустимой позиции (например, между символом возврата каретки и знаком новой строки или внутри тега), длина выделения автоматически корректируется таким образом, что результирующий выбор начинается и заканчивается на допустимых позициях.</span><span class="sxs-lookup"><span data-stu-id="972a0-270">In general, when the specified selection length causes the selection to end in an invalid position (for example, between a carriage return and a new-line character, or inside a tag), the selection length automatically adjusts so that the resulting selection starts and ends in valid positions.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="972a0-271">Свойству <see cref="P:System.Windows.Controls.TextBox.SelectionLength" /> присваивается отрицательное значение.</span><span class="sxs-lookup"><span data-stu-id="972a0-271"><see cref="P:System.Windows.Controls.TextBox.SelectionLength" /> is set to a negative value.</span></span></exception>
        <altmember cref="M:System.Windows.Controls.TextBox.Select(System.Int32,System.Int32)" />
        <altmember cref="P:System.Windows.Controls.TextBox.SelectedText" />
        <altmember cref="P:System.Windows.Controls.TextBox.SelectionStart" />
      </Docs>
    </Member>
    <Member MemberName="SelectionStart">
      <MemberSignature Language="C#" Value="public int SelectionStart { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SelectionStart" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.TextBox.SelectionStart" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectionStart As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SelectionStart { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.SelectionStart : int with get, set" Usage="System.Windows.Controls.TextBox.SelectionStart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="972a0-272">Получает или задает индекс символа, определяющий начало текущего выделенного фрагмента.</span><span class="sxs-lookup"><span data-stu-id="972a0-272">Gets or sets a character index for the beginning of the current selection.</span></span></summary>
        <value><span data-ttu-id="972a0-273">Индекс символа, определяющий начало текущего выделенного фрагмента.</span><span class="sxs-lookup"><span data-stu-id="972a0-273">The character index for the beginning of the current selection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="972a0-274">В случаях, когда указанная длина выделения приведет к концу выделения каретки и символа новой строки, длина выделения автоматически увеличится на 1, чтобы результирующий выделенный фрагмент занимал весь маркер конца строки.</span><span class="sxs-lookup"><span data-stu-id="972a0-274">In cases where the specified selection length would cause the selection to end between a carriage return and a new-line character, the selection length is automatically increased by 1 so that the resulting selection spans the entire end-of-line marker.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="972a0-275">Свойству <see cref="P:System.Windows.Controls.TextBox.SelectionStart" /> присваивается отрицательное значение.</span><span class="sxs-lookup"><span data-stu-id="972a0-275"><see cref="P:System.Windows.Controls.TextBox.SelectionStart" /> is set to a negative value.</span></span></exception>
        <altmember cref="M:System.Windows.Controls.TextBox.Select(System.Int32,System.Int32)" />
        <altmember cref="P:System.Windows.Controls.TextBox.SelectedText" />
        <altmember cref="P:System.Windows.Controls.TextBox.SelectionLength" />
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeText">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeText (System.Windows.Markup.XamlDesignerSerializationManager manager);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeText(class System.Windows.Markup.XamlDesignerSerializationManager manager) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.ShouldSerializeText(System.Windows.Markup.XamlDesignerSerializationManager)" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeText (manager As XamlDesignerSerializationManager) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeText(System::Windows::Markup::XamlDesignerSerializationManager ^ manager);" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeText : System.Windows.Markup.XamlDesignerSerializationManager -&gt; bool" Usage="textBox.ShouldSerializeText manager" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.Windows.Markup.XamlDesignerSerializationManager" />
      </Parameters>
      <Docs>
        <param name="manager"><span data-ttu-id="972a0-276">Управляющий объект службы сериализации для данного объекта.</span><span class="sxs-lookup"><span data-stu-id="972a0-276">A serialization service manager object for this object.</span></span></param>
        <summary><span data-ttu-id="972a0-277">Возвращает значение, показывающее, должно ли быть сериализовано действительное значение свойства <see cref="P:System.Windows.Controls.TextBox.Text" /> в процессе сериализации объекта <see cref="T:System.Windows.Controls.TextBox" />.</span><span class="sxs-lookup"><span data-stu-id="972a0-277">Returns a value that indicates whether the effective value of the <see cref="P:System.Windows.Controls.TextBox.Text" /> property should be serialized during serialization of the <see cref="T:System.Windows.Controls.TextBox" /> object.</span></span></summary>
        <returns><span data-ttu-id="972a0-278">Значение <see langword="true" />, если свойство<see cref="P:System.Windows.Controls.TextBox.Text" /> должно сериализоваться; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="972a0-278"><see langword="true" /> if the <see cref="P:System.Windows.Controls.TextBox.Text" /> property should be serialized; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NullReferenceException"><span data-ttu-id="972a0-279"><paramref name="manager" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="972a0-279"><paramref name="manager" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IAddChild.AddChild">
      <MemberSignature Language="C#" Value="void IAddChild.AddChild (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Markup.IAddChild.AddChild(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.System#Windows#Markup#IAddChild#AddChild(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub AddChild (value As Object) Implements IAddChild.AddChild" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Markup.IAddChild.AddChild(System::Object ^ value) = System::Windows::Markup::IAddChild::AddChild;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IAddChild.AddChild(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="972a0-280">Объект для добавления в качестве дочернего объекта.</span><span class="sxs-lookup"><span data-stu-id="972a0-280">An object to add as a child.</span></span></param>
        <summary><span data-ttu-id="972a0-281">Во всех случаях вызывает исключение.</span><span class="sxs-lookup"><span data-stu-id="972a0-281">Throws an exception in all cases.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="972a0-282"><xref:System.Windows.Controls.TextBox>принимает только текст через <xref:System.Windows.Markup.IAddChild> интерфейс.</span><span class="sxs-lookup"><span data-stu-id="972a0-282"><xref:System.Windows.Controls.TextBox> accepts only text through the <xref:System.Windows.Markup.IAddChild> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="972a0-283">Свойство <paramref name="value" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="972a0-283"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="972a0-284">Во всех остальных случаях.</span><span class="sxs-lookup"><span data-stu-id="972a0-284">In all other cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IAddChild.AddText">
      <MemberSignature Language="C#" Value="void IAddChild.AddText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Markup.IAddChild.AddText(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.System#Windows#Markup#IAddChild#AddText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub AddText (text As String) Implements IAddChild.AddText" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Markup.IAddChild.AddText(System::String ^ text) = System::Windows::Markup::IAddChild::AddText;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IAddChild.AddText(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="972a0-285">Строка, которую требуется добавить в объект.</span><span class="sxs-lookup"><span data-stu-id="972a0-285">A string to add to the object.</span></span></param>
        <summary><span data-ttu-id="972a0-286">Добавляет текстовое содержимое узла в объект.</span><span class="sxs-lookup"><span data-stu-id="972a0-286">Adds the text content of a node to the object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="972a0-287">Этот член представляет собой явную реализацию члена интерфейса.</span><span class="sxs-lookup"><span data-stu-id="972a0-287">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="972a0-288">Он может использоваться, только если экземпляр <xref:System.Windows.Controls.TextBox> приведен к типу интерфейса <xref:System.Windows.Markup.IAddChild>.</span><span class="sxs-lookup"><span data-stu-id="972a0-288">It can be used only when the <xref:System.Windows.Controls.TextBox> instance is cast to an <xref:System.Windows.Markup.IAddChild> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.TextBox.Text" />
      <MemberSignature Language="VB.NET" Value="Public Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Text : string with get, set" Usage="System.Windows.Controls.TextBox.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.Text)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="972a0-289">Возвращает или задает текстовое содержимое текстового поля.</span><span class="sxs-lookup"><span data-stu-id="972a0-289">Gets or sets the text contents of the text box.</span></span></summary>
        <value><span data-ttu-id="972a0-290">Строка с текстовым содержимым текстового поля.</span><span class="sxs-lookup"><span data-stu-id="972a0-290">A string containing the text contents of the text box.</span></span> <span data-ttu-id="972a0-291">Значение по умолчанию — пустая строка ("").</span><span class="sxs-lookup"><span data-stu-id="972a0-291">The default is an empty string ("").</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="972a0-292">При получении этого свойства возвращается строковая копия содержимого текстового поля.</span><span class="sxs-lookup"><span data-stu-id="972a0-292">Getting this property returns a string copy of the contents of the text box.</span></span> <span data-ttu-id="972a0-293">Задание этого свойства заменяет содержимое текстового поля заданной строкой.</span><span class="sxs-lookup"><span data-stu-id="972a0-293">Setting this property replaces the contents of the text box with the specified string.</span></span>  
  
 <span data-ttu-id="972a0-294">Это свойство не поддерживает анимацию.</span><span class="sxs-lookup"><span data-stu-id="972a0-294">This property does not support animation.</span></span>  
  
 <span data-ttu-id="972a0-295">При использовании в сценариях привязки данных это свойство использует поведение <xref:System.Windows.Data.UpdateSourceTrigger.LostFocus?displayProperty=nameWithType>обновления по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="972a0-295">When used in data-binding scenarios, this property uses the default update behavior of <xref:System.Windows.Data.UpdateSourceTrigger.LostFocus?displayProperty=nameWithType>.</span></span>  
  
<a name="xamlPropertyElementUsage_Text"></a>   
## <a name="xaml-property-element-usage"></a><span data-ttu-id="972a0-296">Использование элемента свойства XAML</span><span class="sxs-lookup"><span data-stu-id="972a0-296">XAML Property Element Usage</span></span>  
  
```  
<object>  
  String  
</object>  
```  
  
<a name="dependencyPropertyInfo_Text"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="972a0-297">Сведения о свойстве зависимостей</span><span class="sxs-lookup"><span data-stu-id="972a0-297">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="972a0-298">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="972a0-298">Identifier field</span></span>|<xref:System.Windows.Controls.TextBox.TextProperty>|  
|<span data-ttu-id="972a0-299">Свойства метаданных, для которых задано значение`true`</span><span class="sxs-lookup"><span data-stu-id="972a0-299">Metadata properties set to `true`</span></span>|<span data-ttu-id="972a0-300"><xref:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Journal%2A></span><span class="sxs-lookup"><span data-stu-id="972a0-300"><xref:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Journal%2A></span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.TextBox.CharacterCasing" />
        <altmember cref="P:System.Windows.Controls.TextBox.TextAlignment" />
      </Docs>
    </Member>
    <Member MemberName="TextAlignment">
      <MemberSignature Language="C#" Value="public System.Windows.TextAlignment TextAlignment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.TextAlignment TextAlignment" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.TextBox.TextAlignment" />
      <MemberSignature Language="VB.NET" Value="Public Property TextAlignment As TextAlignment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::TextAlignment TextAlignment { System::Windows::TextAlignment get(); void set(System::Windows::TextAlignment value); };" />
      <MemberSignature Language="F#" Value="member this.TextAlignment : System.Windows.TextAlignment with get, set" Usage="System.Windows.Controls.TextBox.TextAlignment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.TextAlignment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="972a0-301">Получает или задает способ горизонтального выравнивания содержимого текстового поля.</span><span class="sxs-lookup"><span data-stu-id="972a0-301">Gets or sets the horizontal alignment of the contents of the text box.</span></span></summary>
        <value><span data-ttu-id="972a0-302">Одно из значений <see cref="T:System.Windows.TextAlignment" />, задающее способ горизонтального выравнивания содержимого текстового поля.</span><span class="sxs-lookup"><span data-stu-id="972a0-302">One of the <see cref="T:System.Windows.TextAlignment" /> values that specifies the horizontal alignment of the contents of the text box.</span></span> <span data-ttu-id="972a0-303">Значение по умолчанию — <see cref="F:System.Windows.TextAlignment.Left" />.</span><span class="sxs-lookup"><span data-stu-id="972a0-303">The default is <see cref="F:System.Windows.TextAlignment.Left" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="972a0-304">Получение этого свойства возвращает текущее выравнивание.</span><span class="sxs-lookup"><span data-stu-id="972a0-304">Getting this property returns the current alignment.</span></span> <span data-ttu-id="972a0-305">Задание этого свойства регулирует содержимое текстового поля в соответствии с указанным выравниванием.</span><span class="sxs-lookup"><span data-stu-id="972a0-305">Setting this property adjusts the contents of the text box to reflect the specified alignment.</span></span>  
  
 <span data-ttu-id="972a0-306">Это свойство имеет более высокий приоритет, <xref:System.Windows.Controls.Control.HorizontalContentAlignment%2A> чем свойство.</span><span class="sxs-lookup"><span data-stu-id="972a0-306">This property has a higher precedence than the <xref:System.Windows.Controls.Control.HorizontalContentAlignment%2A> property.</span></span>  
  
<a name="dependencyPropertyInfo_TextAlignment"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="972a0-307">Сведения о свойстве зависимостей</span><span class="sxs-lookup"><span data-stu-id="972a0-307">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="972a0-308">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="972a0-308">Identifier field</span></span>|<xref:System.Windows.Controls.TextBox.TextAlignmentProperty>|  
|<span data-ttu-id="972a0-309">Свойства метаданных, для которых задано значение`true`</span><span class="sxs-lookup"><span data-stu-id="972a0-309">Metadata properties set to `true`</span></span>|<span data-ttu-id="972a0-310"><xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A></span><span class="sxs-lookup"><span data-stu-id="972a0-310"><xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A></span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="972a0-311">В следующем примере показано, как создать <xref:System.Windows.Controls.TextBox> <xref:System.Windows.Controls.TextBox.TextAlignment%2A> с <xref:System.Windows.TextAlignment.Center?displayProperty=nameWithType>помощью.</span><span class="sxs-lookup"><span data-stu-id="972a0-311">The following example shows how to create a <xref:System.Windows.Controls.TextBox> with a <xref:System.Windows.Controls.TextBox.TextAlignment%2A> of <xref:System.Windows.TextAlignment.Center?displayProperty=nameWithType>.</span></span>  
  
 [!code-xaml[TextBoxMiscSnippets_snip#TextBoxExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxMiscSnippets_snip/csharp/textboxexample.xaml#textboxexamplewholepage)]  
  
 [!code-csharp[TextBoxMiscSnippets_procedural_snip#TextBoxCodeExampleInline1](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxMiscSnippets_procedural_snip/CSharp/TextBoxExample.cs#textboxcodeexampleinline1)]
 [!code-vb[TextBoxMiscSnippets_procedural_snip#TextBoxCodeExampleInline1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxMiscSnippets_procedural_snip/visualbasic/textboxexample.vb#textboxcodeexampleinline1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.TextBox.Text" />
        <altmember cref="P:System.Windows.Controls.TextBox.CharacterCasing" />
      </Docs>
    </Member>
    <Member MemberName="TextAlignmentProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty TextAlignmentProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty TextAlignmentProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.TextBox.TextAlignmentProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TextAlignmentProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ TextAlignmentProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable TextAlignmentProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.TextBox.TextAlignmentProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="972a0-312">Идентифицирует свойство зависимостей <see cref="P:System.Windows.Controls.TextBox.TextAlignment" />.</span><span class="sxs-lookup"><span data-stu-id="972a0-312">Identifies the <see cref="P:System.Windows.Controls.TextBox.TextAlignment" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextDecorations">
      <MemberSignature Language="C#" Value="public System.Windows.TextDecorationCollection TextDecorations { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.TextDecorationCollection TextDecorations" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.TextBox.TextDecorations" />
      <MemberSignature Language="VB.NET" Value="Public Property TextDecorations As TextDecorationCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::TextDecorationCollection ^ TextDecorations { System::Windows::TextDecorationCollection ^ get(); void set(System::Windows::TextDecorationCollection ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TextDecorations : System.Windows.TextDecorationCollection with get, set" Usage="System.Windows.Controls.TextBox.TextDecorations" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.TextDecorationCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="972a0-313">Получает типы украшений текста, применяемые к текстовому полю.</span><span class="sxs-lookup"><span data-stu-id="972a0-313">Gets the text decorations to apply to the text box.</span></span></summary>
        <value><span data-ttu-id="972a0-314">Коллекция <see cref="T:System.Windows.TextDecorationCollection" />, содержащая типы украшений текста, применяемые к текстовому полю.</span><span class="sxs-lookup"><span data-stu-id="972a0-314">A <see cref="T:System.Windows.TextDecorationCollection" /> collection that contains text decorations to apply to the text box.</span></span> <span data-ttu-id="972a0-315">Значение по умолчанию — <see langword="null" /> (оформление текста не применяется).</span><span class="sxs-lookup"><span data-stu-id="972a0-315">The default is <see langword="null" /> (no text decorations applied).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="972a0-316"><xref:System.Windows.TextDecoration> Объект — это визуальное украшение, которое можно добавить в текст.</span><span class="sxs-lookup"><span data-stu-id="972a0-316">A <xref:System.Windows.TextDecoration> object is a visual ornamentation you can add to text.</span></span> <span data-ttu-id="972a0-317">Существует четыре типа оформления текста: подчеркивание, базовый, зачеркнутый и перечеркивание.</span><span class="sxs-lookup"><span data-stu-id="972a0-317">There are four types of text decorations: underline, baseline, strikethrough, and overline.</span></span> <span data-ttu-id="972a0-318">Дополнительные сведения о оформлении текста см. [в разделе как Создание оформления](~/docs/framework/wpf/advanced/how-to-create-a-text-decoration.md)текста.</span><span class="sxs-lookup"><span data-stu-id="972a0-318">For more information about text decorations, see [How to: Create a Text Decoration](~/docs/framework/wpf/advanced/how-to-create-a-text-decoration.md).</span></span>  
  
<a name="dependencyPropertyInfo_TextDecorations"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="972a0-319">Сведения о свойстве зависимостей</span><span class="sxs-lookup"><span data-stu-id="972a0-319">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="972a0-320">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="972a0-320">Identifier field</span></span>|<xref:System.Windows.Controls.TextBox.TextDecorationsProperty>|  
|<span data-ttu-id="972a0-321">Свойства метаданных, для которых задано значение`true`</span><span class="sxs-lookup"><span data-stu-id="972a0-321">Metadata properties set to `true`</span></span>|<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>|  
  
   
  
## Examples  
 <span data-ttu-id="972a0-322">В следующем примере показано, как задать <xref:System.Windows.Documents.Inline.TextDecorations%2A> атрибут, используя <xref:System.Windows.Documents.Run> в качестве элемента example.</span><span class="sxs-lookup"><span data-stu-id="972a0-322">The following example shows how to set the <xref:System.Windows.Documents.Inline.TextDecorations%2A> attribute, using <xref:System.Windows.Documents.Run> as the example element.</span></span>  
  
 [!code-xaml[InlineSnippets#_Inline_TextDecXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/InlineSnippets/CSharp/Window1.xaml#_inline_textdecxaml)]  
  
 <span data-ttu-id="972a0-323">На следующем рисунке показана отрисовка этого примера.</span><span class="sxs-lookup"><span data-stu-id="972a0-323">The following figure shows how this example renders.</span></span>  
  
 <span data-ttu-id="972a0-324">![Снимок экрана Текст с(~/add/media/inline-textdec-strike.png "снимком экрана]с зачеркиванием по умолчанию: Текст с зачеркиванием по умолчанию")</span><span class="sxs-lookup"><span data-stu-id="972a0-324">![Screenshot: Text with default strikethrough effect](~/add/media/inline-textdec-strike.png "Screenshot: Text with default strikethrough effect")</span></span>  
  
 <span data-ttu-id="972a0-325">На следующих рисунках показано, <xref:System.Windows.TextDecorations.OverLine%2A>как <xref:System.Windows.TextDecorations.Baseline%2A>визуализируются <xref:System.Windows.TextDecorations.Underline%2A> , и оформления, соответственно.</span><span class="sxs-lookup"><span data-stu-id="972a0-325">The following figures show how the <xref:System.Windows.TextDecorations.OverLine%2A>, <xref:System.Windows.TextDecorations.Baseline%2A>, and <xref:System.Windows.TextDecorations.Underline%2A> decorations render, respectively.</span></span>  
  
 <span data-ttu-id="972a0-326">![Снимок экрана Снимок экрана TextDecorator]:(~/add/media/inline-textdec-over.png " Перелинейка TextDecorator")</span><span class="sxs-lookup"><span data-stu-id="972a0-326">![Screenshot: Overline TextDecorator](~/add/media/inline-textdec-over.png "Screenshot: Overline TextDecorator")</span></span>  
  
 <span data-ttu-id="972a0-327">![Снимок экрана Основной результат по умолчанию]на снимке экрана текста(~/add/media/inline-textdec-base.png ": Воздействие базового плана по умолчанию на текст")</span><span class="sxs-lookup"><span data-stu-id="972a0-327">![Screenshot: Default baseline effect on text](~/add/media/inline-textdec-base.png "Screenshot: Default baseline effect on text")</span></span>  
  
 <span data-ttu-id="972a0-328">![Снимок экрана Текст с подчеркиванием](~/add/media/inline-textdec-under.png "по умолчанию. снимок экрана: Текст с применением подчеркивания по умолчанию")</span><span class="sxs-lookup"><span data-stu-id="972a0-328">![Screenshot: Text with default underline effect](~/add/media/inline-textdec-under.png "Screenshot: Text with default underline effect")</span></span>  
  
 <span data-ttu-id="972a0-329">В следующем примере показано, как задать <xref:System.Windows.Documents.Inline.TextDecorations%2A> свойство программным способом.</span><span class="sxs-lookup"><span data-stu-id="972a0-329">The following example shows how to set the <xref:System.Windows.Documents.Inline.TextDecorations%2A> property programmatically.</span></span>  
  
 [!code-csharp[InlineSnippets#_Inline_TextDec](~/samples/snippets/csharp/VS_Snippets_Wpf/InlineSnippets/CSharp/Window1.xaml.cs#_inline_textdec)]
 [!code-vb[InlineSnippets#_Inline_TextDec](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InlineSnippets/visualbasic/window1.xaml.vb#_inline_textdec)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextDecorationsProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty TextDecorationsProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty TextDecorationsProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.TextBox.TextDecorationsProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TextDecorationsProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ TextDecorationsProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable TextDecorationsProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.TextBox.TextDecorationsProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="972a0-330">Идентифицирует свойство зависимостей <see cref="P:System.Windows.Controls.TextBox.TextDecorations" />.</span><span class="sxs-lookup"><span data-stu-id="972a0-330">Identifies the <see cref="P:System.Windows.Controls.TextBox.TextDecorations" /> dependency property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="972a0-331">Идентификатор для свойства зависимостей <xref:System.Windows.Controls.TextBox.TextDecorations%2A> .</span><span class="sxs-lookup"><span data-stu-id="972a0-331">The identifier for the <xref:System.Windows.Controls.TextBox.TextDecorations%2A> dependency property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty TextProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty TextProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.TextBox.TextProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TextProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ TextProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable TextProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.TextBox.TextProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="972a0-332">Идентифицирует свойство зависимостей <see cref="P:System.Windows.Controls.TextBox.Text" />.</span><span class="sxs-lookup"><span data-stu-id="972a0-332">Identifies the <see cref="P:System.Windows.Controls.TextBox.Text" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextWrapping">
      <MemberSignature Language="C#" Value="public System.Windows.TextWrapping TextWrapping { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.TextWrapping TextWrapping" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.TextBox.TextWrapping" />
      <MemberSignature Language="VB.NET" Value="Public Property TextWrapping As TextWrapping" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::TextWrapping TextWrapping { System::Windows::TextWrapping get(); void set(System::Windows::TextWrapping value); };" />
      <MemberSignature Language="F#" Value="member this.TextWrapping : System.Windows.TextWrapping with get, set" Usage="System.Windows.Controls.TextBox.TextWrapping" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.TextWrapping</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="972a0-333">Получает или задает способ переноса текста в текстовом поле.</span><span class="sxs-lookup"><span data-stu-id="972a0-333">Gets or sets how the text box should wrap text.</span></span></summary>
        <value><span data-ttu-id="972a0-334">Одно из значений <see cref="T:System.Windows.TextWrapping" />, показывающее способ переноса текста в текстовом поле.</span><span class="sxs-lookup"><span data-stu-id="972a0-334">One of the <see cref="T:System.Windows.TextWrapping" /> values that indicates how the text box should wrap text.</span></span> <span data-ttu-id="972a0-335">Значение по умолчанию — <see cref="F:System.Windows.TextWrapping.NoWrap" />.</span><span class="sxs-lookup"><span data-stu-id="972a0-335">The default is <see cref="F:System.Windows.TextWrapping.NoWrap" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="972a0-336">Присвоение <xref:System.Windows.Controls.TextBox> <xref:System.Windows.Controls.TextBox> <xref:System.Windows.TextWrapping.Wrap> атрибуту значения приводит к тому, что введенный текст будет переноситься в новую строку при достижении края элемента управления, при необходимости автоматически расширяя высоту элемента управления, чтобы он включал в себя место для новой строки. <xref:System.Windows.Controls.TextBox.TextWrapping%2A></span><span class="sxs-lookup"><span data-stu-id="972a0-336">Setting the <xref:System.Windows.Controls.TextBox.TextWrapping%2A> attribute to <xref:System.Windows.TextWrapping.Wrap> causes entered text to wrap to a new line when the edge of the <xref:System.Windows.Controls.TextBox> control is reached, automatically expanding the height of the <xref:System.Windows.Controls.TextBox> control to include room for a new line, if necessary.</span></span>  
  
<a name="dependencyPropertyInfo_TextWrapping"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="972a0-337">Сведения о свойстве зависимостей</span><span class="sxs-lookup"><span data-stu-id="972a0-337">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="972a0-338">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="972a0-338">Identifier field</span></span>|<xref:System.Windows.Controls.TextBox.TextWrappingProperty>|  
|<span data-ttu-id="972a0-339">Свойства метаданных, для которых задано значение`true`</span><span class="sxs-lookup"><span data-stu-id="972a0-339">Metadata properties set to `true`</span></span>|<span data-ttu-id="972a0-340"><xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A></span><span class="sxs-lookup"><span data-stu-id="972a0-340"><xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A></span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="972a0-341">В следующем примере показано, как задать значение этого свойства.</span><span class="sxs-lookup"><span data-stu-id="972a0-341">The following example demonstrates how to set the value of this property.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase12](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase12)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase12](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextWrappingProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty TextWrappingProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty TextWrappingProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.TextBox.TextWrappingProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TextWrappingProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ TextWrappingProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable TextWrappingProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.TextBox.TextWrappingProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="972a0-342">Идентифицирует свойство зависимостей <see cref="P:System.Windows.Controls.TextBox.TextWrapping" />.</span><span class="sxs-lookup"><span data-stu-id="972a0-342">Identifies the <see cref="P:System.Windows.Controls.TextBox.TextWrapping" /> dependency property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="972a0-343">Идентификатор для свойства зависимостей <xref:System.Windows.Controls.TextBox.TextWrapping%2A>.</span><span class="sxs-lookup"><span data-stu-id="972a0-343">The identifier for the <xref:System.Windows.Controls.TextBox.TextWrapping%2A> dependency property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Typography">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.Typography Typography { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Documents.Typography Typography" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.TextBox.Typography" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Typography As Typography" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Documents::Typography ^ Typography { System::Windows::Documents::Typography ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Typography : System.Windows.Documents.Typography" Usage="System.Windows.Controls.TextBox.Typography" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.Typography</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="972a0-344">Получает действующие на данный момент варианты оформления текстового содержимого текстового поля.</span><span class="sxs-lookup"><span data-stu-id="972a0-344">Gets the currently effective typography variations for the text contents of the text box.</span></span></summary>
        <value><span data-ttu-id="972a0-345">Объект <see cref="T:System.Windows.Documents.Typography" />, задающий на данный момент действующие варианты в оформлении.</span><span class="sxs-lookup"><span data-stu-id="972a0-345">A <see cref="T:System.Windows.Documents.Typography" /> object that specifies the currently effective typography variations.</span></span> <span data-ttu-id="972a0-346">Чтобы получить список значений оформления по умолчанию, см. <see cref="T:System.Windows.Documents.Typography" />.</span><span class="sxs-lookup"><span data-stu-id="972a0-346">For a list of default typography values, see <see cref="T:System.Windows.Documents.Typography" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="972a0-347">Свойство применимо только к [!INCLUDE[TLA#tla_opentype](~/includes/tlasharptla-opentype-md.md)] шрифтам. <xref:System.Windows.Documents.FlowDocument.Typography%2A></span><span class="sxs-lookup"><span data-stu-id="972a0-347">The <xref:System.Windows.Documents.FlowDocument.Typography%2A> property is applicable only to [!INCLUDE[TLA#tla_opentype](~/includes/tlasharptla-opentype-md.md)] fonts.</span></span> <span data-ttu-id="972a0-348">Вариант оформления не влияет на шрифты, которые не поддерживают этот вариант.</span><span class="sxs-lookup"><span data-stu-id="972a0-348">A typography variant has no effect on fonts that do not support the variant.</span></span> <span data-ttu-id="972a0-349">Дополнительные сведения об этом разделе см. [в разделе Оформление в WPF](~/docs/framework/wpf/advanced/typography-in-wpf.md).</span><span class="sxs-lookup"><span data-stu-id="972a0-349">For more information about this topic, see [Typography in WPF](~/docs/framework/wpf/advanced/typography-in-wpf.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="972a0-350">В следующем примере показано, как задать <xref:System.Windows.Documents.TextElement.Typography%2A> атрибут, используя <xref:System.Windows.Documents.Paragraph> в качестве элемента example.</span><span class="sxs-lookup"><span data-stu-id="972a0-350">The following example shows how to set the <xref:System.Windows.Documents.TextElement.Typography%2A> attribute, using <xref:System.Windows.Documents.Paragraph> as the example element.</span></span>  
  
 [!code-xaml[TextElementSnippets#_TextElement_TypogXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/TextElementSnippets/CSharp/Window1.xaml#_textelement_typogxaml)]  
  
 <span data-ttu-id="972a0-351">На следующем рисунке показана отрисовка этого примера.</span><span class="sxs-lookup"><span data-stu-id="972a0-351">The following figure shows how this example renders.</span></span>  
  
 <span data-ttu-id="972a0-352">![Снимок экрана Текст с измененным](~/add/media/textelement-typog.png "снимком экрана: Текст с измененным оформлением")</span><span class="sxs-lookup"><span data-stu-id="972a0-352">![Screenshot: Text with altered typography](~/add/media/textelement-typog.png "Screenshot: Text with altered typography")</span></span>  
  
 <span data-ttu-id="972a0-353">Напротив, на следующем рисунке показано, как отрисовывается аналогичный пример с типографскими характеристиками по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="972a0-353">In contrast, the following figure shows how a similar example with default typographic properties renders.</span></span>  
  
 <span data-ttu-id="972a0-354">![Снимок экрана Текст с измененным](~/add/media/textelement-typog-default.png "снимком экрана: Текст с измененным оформлением")</span><span class="sxs-lookup"><span data-stu-id="972a0-354">![Screenshot: Text with altered typography](~/add/media/textelement-typog-default.png "Screenshot: Text with altered typography")</span></span>  
  
 <span data-ttu-id="972a0-355">В следующем примере показано, как задать <xref:System.Windows.Controls.TextBox.Typography%2A> свойство программным способом.</span><span class="sxs-lookup"><span data-stu-id="972a0-355">The following example shows how to set the <xref:System.Windows.Controls.TextBox.Typography%2A> property programmatically.</span></span>  
  
 [!code-csharp[TextElementSnippets#_TextElement_Typog](~/samples/snippets/csharp/VS_Snippets_Wpf/TextElementSnippets/CSharp/Window1.xaml.cs#_textelement_typog)]
 [!code-vb[TextElementSnippets#_TextElement_Typog](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextElementSnippets/visualbasic/window1.xaml.vb#_textelement_typog)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
