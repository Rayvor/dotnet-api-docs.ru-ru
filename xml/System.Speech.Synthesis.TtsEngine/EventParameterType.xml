<Type Name="EventParameterType" FullName="System.Speech.Synthesis.TtsEngine.EventParameterType">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4226200c2427053f7f21e16f78e2112dbef85798" /><Meta Name="ms.sourcegitcommit" Value="f1d16425528e237257ca3b58eb49217a514849ea" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="04/24/2019" /><Meta Name="ms.locfileid" Value="64095158" /></Metadata><TypeSignature Language="C#" Value="public enum EventParameterType" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed EventParameterType extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Speech.Synthesis.TtsEngine.EventParameterType" />
  <TypeSignature Language="VB.NET" Value="Public Enum EventParameterType" />
  <TypeSignature Language="C++ CLI" Value="public enum class EventParameterType" />
  <TypeSignature Language="F#" Value="type EventParameterType = " />
  <AssemblyInfo>
    <AssemblyName>System.Speech</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>Перечисляет типы указателей данных, переданных событиям синтеза речи.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Speech.Synthesis.TtsEngine.EventParameterType> используется при создании <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> объекта. Экземпляр <xref:System.Speech.Synthesis.TtsEngine.EventParameterType> передан в качестве `parameterType` аргумента конструктора для <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> указывает как `param2` аргумент конструктора (который должен быть `System.IntPtr`) интерпретируется.  
  
 Выбор <xref:System.Speech.Synthesis.TtsEngine.EventParameterType> определяется тип события, запрашиваемого, определяемом параметрами членом <xref:System.Speech.Synthesis.TtsEngine.TtsEventId>.  
  
 Подробные сведения о том, как использовать <xref:System.Speech.Synthesis.TtsEngine.EventParameterType>, см. в документации для <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.EventId%2A>  
  
   
  
## Examples  
 В приведенном ниже примере является частью реализации синтеза настраиваемое преобразование речи, наследование <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml>и с помощью применения <xref:System.Speech.Synthesis.TtsEngine.TextFragment>, <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>, <xref:System.Speech.Synthesis.TtsEngine.FragmentState>, и <xref:System.Speech.Synthesis.TtsEngine.TtsEventId>.  
  
 Реализация <xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A>  
  
1.  Получает массив <xref:System.Speech.Synthesis.TtsEngine.TextFragment> экземпляров и создает новый массив из <xref:System.Speech.Synthesis.TtsEngine.TextFragment> экземпляры должны быть переданы `Speak` метод на базовый обработчик синтеза.  
  
2.  Если <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction> значение перечисления, найти <xref:System.Speech.Synthesis.TtsEngine.FragmentState.Action%2A> свойство <xref:System.Speech.Synthesis.TtsEngine.FragmentState> возвращаемые <xref:System.Speech.Synthesis.TtsEngine.TextFragment.State%2A> каждого элемента <xref:System.Speech.Synthesis.TtsEngine.TextFragment> экземпляр <xref:System.Speech.Synthesis.TtsEngine.TtsEngineAction.Speak>, реализация  
  
    -   Преобразует Americanism для Britishisms в Произносимый текст.  
  
    -   Если <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite.EventInterest%2A> свойство <xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite> интерфейсов, предоставляемых для поддержки реализации <xref:System.Speech.Synthesis.TtsEngine.TtsEventId.WordBoundary> тип события, <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo> экземпляра используется для создания события на диске будет создана индикатор синтезатора.  
  
         Параметры в <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo>, в том числе <xref:System.Speech.Synthesis.TtsEngine.EventParameterType> элемента значение, возвращенное <xref:System.Speech.Synthesis.TtsEngine.SpeechEventInfo.ParameterType%2A>, используются для журнала событий, созданных с помощью `LogSpeechEvent` метод.  
  
3.  Затем вызывается механизм визуализации речи с измененным <xref:System.Speech.Synthesis.TtsEngine.TextFragment> массива.  
  
```  
private const int WordBoundaryFlag = 1 << (int)TtsEventId.WordBoundary;  
private readonly char[] spaces = new char[] { ' ', '\t', '\r', '\n' };  
internal struct UsVsUk  
{  
  internal string UK;  
  internal string US;  
}  
  
override public void Speak (TextFragment [] frags, IntPtr wfx, ITtsEngineSite site)  
{  
  TextFragment [] newFrags=new TextFragment[frags.Length];  
  
  for (int i=0;i<frags.Length;i++){  
    newFrags[i].State=frags[i].State;  
    //truncate  
    newFrags[i].TextToSpeak = frags[i].TextToSpeak.Substring(frags[i].TextOffset,  
                               frags[i].TextLength);  
    newFrags[i].TextLength = newFrags[i].TextToSpeak.Length;  
    newFrags[i].TextOffset = 0;  
    if (newFrags[i].State.Action == TtsEngineAction.Speak) {  
      //Us to UK conversion  
      foreach (UsVsUk term in TransList) {  
      newFrags[i].TextToSpeak.Replace(term.US, term.UK);  
      }  
      //Generate progress meter events if supported  
      if ((site.EventInterest & WordBoundaryFlag) != 0) {  
      string[] subs = newFrags[i].TextToSpeak.Split(spaces);  
  
      foreach (string s in subs) {  
        int offset = newFrags[i].TextOffset;  
        SpeechEventInfo spEvent = new SpeechEventInfo((Int16)TtsEventId.WordBoundary,   
                (Int16)EventParameterType.Undefined,   
                 s.Length, new IntPtr(offset));  
         LogSpeechEvent(spEvent.EventId,   
                        spEvent.ParameterType,   
                        spEvent.Param1,  
                        spEvent.Param2);  
        offset += s.Length;  
        if (s.Trim().Length > 0) {  
          SpeechEventInfo[] events = new SpeechEventInfo[1];  
          events[0] = spEvent;  
          site.AddEvents(events, 1);  
        }  
      }  
      }  
    }  
  }  
  
  _baseSynthesize.Speak(newFrags, wfx, site);  
  
}  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" />
  </Docs>
  <Members>
    <Member MemberName="Object">
      <MemberSignature Language="C#" Value="Object" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Speech.Synthesis.TtsEngine.EventParameterType Object = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Speech.Synthesis.TtsEngine.EventParameterType.Object" />
      <MemberSignature Language="VB.NET" Value="Object" />
      <MemberSignature Language="C++ CLI" Value="Object" />
      <MemberSignature Language="F#" Value="Object = 2" Usage="System.Speech.Synthesis.TtsEngine.EventParameterType.Object" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Synthesis.TtsEngine.EventParameterType</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>В настоящий момент не поддерживается.</summary>
      </Docs>
    </Member>
    <Member MemberName="Pointer">
      <MemberSignature Language="C#" Value="Pointer" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Speech.Synthesis.TtsEngine.EventParameterType Pointer = int32(3)" />
      <MemberSignature Language="DocId" Value="F:System.Speech.Synthesis.TtsEngine.EventParameterType.Pointer" />
      <MemberSignature Language="VB.NET" Value="Pointer" />
      <MemberSignature Language="C++ CLI" Value="Pointer" />
      <MemberSignature Language="F#" Value="Pointer = 3" Usage="System.Speech.Synthesis.TtsEngine.EventParameterType.Pointer" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Synthesis.TtsEngine.EventParameterType</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>В настоящий момент не поддерживается.</summary>
      </Docs>
    </Member>
    <Member MemberName="String">
      <MemberSignature Language="C#" Value="String" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Speech.Synthesis.TtsEngine.EventParameterType String = int32(4)" />
      <MemberSignature Language="DocId" Value="F:System.Speech.Synthesis.TtsEngine.EventParameterType.String" />
      <MemberSignature Language="VB.NET" Value="String" />
      <MemberSignature Language="C++ CLI" Value="String" />
      <MemberSignature Language="F#" Value="String = 4" Usage="System.Speech.Synthesis.TtsEngine.EventParameterType.String" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Synthesis.TtsEngine.EventParameterType</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>Указывает, что аргумент <paramref name="param2" /> к <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> является объектом <see langword="System.IntPtr" />, созданным с использованием универсального кода ресурса <see langword="System.Runtime.InteropServices.Marshal.StringToCoTaskMemUni" />, который ссылается на объект <see langword="System.String" />; <paramref name="param1" /> может принимать любое значение.</summary>
      </Docs>
    </Member>
    <Member MemberName="Token">
      <MemberSignature Language="C#" Value="Token" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Speech.Synthesis.TtsEngine.EventParameterType Token = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Speech.Synthesis.TtsEngine.EventParameterType.Token" />
      <MemberSignature Language="VB.NET" Value="Token" />
      <MemberSignature Language="C++ CLI" Value="Token" />
      <MemberSignature Language="F#" Value="Token = 1" Usage="System.Speech.Synthesis.TtsEngine.EventParameterType.Token" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Synthesis.TtsEngine.EventParameterType</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Указывает, что аргумент <paramref name="param2" /> к <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> имеет вид</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 является `System.IntPtr` создан с помощью `System.Runtime.InteropServices.Marshal.PtrToStructure`  
  
 ссылка на Windows Desktop Speech Technology маркера--Windows Desktop Speech Technology объект, представляющий ресурс, например голос (<xref:System.Speech.Synthesis.VoiceInfo>); `param1` может принимать любое значение.  
  
> [!NOTE]
>  В настоящее время экземпляры двигателей управляемых синтезирования речи, написанные с использованием членами <xref:System.Speech.Synthesis> пространства имен, невозможно изменить ресурсы после создания  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Undefined">
      <MemberSignature Language="C#" Value="Undefined" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Speech.Synthesis.TtsEngine.EventParameterType Undefined = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Speech.Synthesis.TtsEngine.EventParameterType.Undefined" />
      <MemberSignature Language="VB.NET" Value="Undefined" />
      <MemberSignature Language="C++ CLI" Value="Undefined" />
      <MemberSignature Language="F#" Value="Undefined = 0" Usage="System.Speech.Synthesis.TtsEngine.EventParameterType.Undefined" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Synthesis.TtsEngine.EventParameterType</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Указывает, что аргумент <paramref name="param2" /> к <see cref="T:System.Speech.Synthesis.TtsEngine.SpeechEventInfo" /> не определен.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Как правило `param1` и `param2` пропускаются. Тем не менее если <xref:System.Speech.Synthesis.TtsEngine.TtsEventId> — <xref:System.Speech.Synthesis.TtsEngine.TtsEventId.WordBoundary>, могут создаваться события индикатор хода выполнения `param1` должно быть целое число, содержащее длину текущего слова и `param2` `System.IntPtr` ссылка на целое число, содержащее смещение текущего Word.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>