<Type Name="BigInteger" FullName="System.Numerics.BigInteger">
  <TypeSignature Language="C#" Value="public struct BigInteger : IComparable, IComparable&lt;System.Numerics.BigInteger&gt;, IEquatable&lt;System.Numerics.BigInteger&gt;, IFormattable" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit BigInteger extends System.ValueType implements class System.IComparable, class System.IComparable`1&lt;valuetype System.Numerics.BigInteger&gt;, class System.IEquatable`1&lt;valuetype System.Numerics.BigInteger&gt;, class System.IFormattable" />
  <TypeSignature Language="DocId" Value="T:System.Numerics.BigInteger" />
  <TypeSignature Language="VB.NET" Value="Public Structure BigInteger&#xA;Implements IComparable, IComparable(Of BigInteger), IEquatable(Of BigInteger), IFormattable" />
  <TypeSignature Language="C++ CLI" Value="public value class BigInteger : IComparable, IComparable&lt;System::Numerics::BigInteger&gt;, IEquatable&lt;System::Numerics::BigInteger&gt;, IFormattable" />
  <TypeSignature Language="F#" Value="type BigInteger = struct&#xA;    interface IFormattable" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Numerics</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Numerics</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IComparable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IComparable&lt;System.Numerics.BigInteger&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Numerics.BigInteger&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IFormattable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1">
      <AttributeName>System.Runtime.CompilerServices.IsReadOnly</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="d7187-101">Представляет произвольно большое целое число со знаком.</span><span class="sxs-lookup"><span data-stu-id="d7187-101">Represents an arbitrarily large signed integer.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7187-102"><xref:System.Numerics.BigInteger> Тип является неизменяемым типом, представляющим произвольно большое целое число, значение которого теоретически не имеет верхней или нижней границ.</span><span class="sxs-lookup"><span data-stu-id="d7187-102">The <xref:System.Numerics.BigInteger> type is an immutable type that represents an arbitrarily large integer whose value in theory has no upper or lower bounds.</span></span> <span data-ttu-id="d7187-103">Элементы <xref:System.Numerics.BigInteger> типа тесно параллельно с <xref:System.Int32>другими целочисленными типами <xref:System.Int64> <xref:System.Byte>( <xref:System.Int16> <xref:System.SByte> <xref:System.UInt64> ,, ,<xref:System.UInt32>,,, и). <xref:System.UInt16></span><span class="sxs-lookup"><span data-stu-id="d7187-103">The members of the <xref:System.Numerics.BigInteger> type closely parallel those of other integral types (the <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.Int64>, <xref:System.SByte>, <xref:System.UInt16>, <xref:System.UInt32>, and <xref:System.UInt64> types).</span></span> <span data-ttu-id="d7187-104">Этот тип отличается от других целочисленных типов в [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)], имеющих диапазон, определяемый их `MinValue` свойствами и `MaxValue` .</span><span class="sxs-lookup"><span data-stu-id="d7187-104">This type differs from the other integral types in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)], which have a range indicated by their `MinValue` and `MaxValue` properties.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d7187-105">Так как <xref:System.OutOfMemoryException> <xref:System.Numerics.BigInteger> тип является неизменяемым (см. раздел «изменяемость [» и структура BigInteger](#mutability)) и, поскольку он не имеет верхней или нижней границы, может быть вызван любой операцией, которая приводит к чрезмерному увеличению значения. <xref:System.Numerics.BigInteger></span><span class="sxs-lookup"><span data-stu-id="d7187-105">Because the <xref:System.Numerics.BigInteger> type is immutable (see [Mutability and the BigInteger Structure](#mutability)) and because it has no upper or lower bounds, an <xref:System.OutOfMemoryException> can be thrown for any operation that causes a <xref:System.Numerics.BigInteger> value to grow too large.</span></span>  
  
## <a name="instantiating-a-biginteger-object"></a><span data-ttu-id="d7187-106">Создание экземпляра объекта BigInteger</span><span class="sxs-lookup"><span data-stu-id="d7187-106">Instantiating a BigInteger Object</span></span>  
 <span data-ttu-id="d7187-107">Создать экземпляр <xref:System.Numerics.BigInteger> объекта можно несколькими способами.</span><span class="sxs-lookup"><span data-stu-id="d7187-107">You can instantiate a <xref:System.Numerics.BigInteger> object in several ways:</span></span>  
  
-   <span data-ttu-id="d7187-108">Можно использовать `new` ключевое слово и предоставить <xref:System.Numerics.BigInteger> конструктору любое целое число или значение с плавающей запятой в качестве параметра.</span><span class="sxs-lookup"><span data-stu-id="d7187-108">You can use the `new` keyword and provide any integral or floating-point value as a parameter to the <xref:System.Numerics.BigInteger> constructor.</span></span> <span data-ttu-id="d7187-109">(Значения с плавающей запятой усекаются до того, как они будут назначены <xref:System.Numerics.BigInteger>.) В следующем примере показано использование `new` ключевого слова для <xref:System.Numerics.BigInteger> создания экземпляров значений.</span><span class="sxs-lookup"><span data-stu-id="d7187-109">(Floating-point values are truncated before they are assigned to the <xref:System.Numerics.BigInteger>.) The following example illustrates how to use the `new` keyword to instantiate <xref:System.Numerics.BigInteger> values.</span></span>  
  
     [!code-csharp[System.Numerics.BigInteger.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class/cs/BigInteger_Examples.cs#1)]
     [!code-vb[System.Numerics.BigInteger.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class/vb/BigInteger_Examples.vb#1)]  
  
-   <span data-ttu-id="d7187-110">Можно объявить <xref:System.Numerics.BigInteger> переменную и присвоить ей значение точно так же, как любой числовой тип, если это значение является целочисленным типом.</span><span class="sxs-lookup"><span data-stu-id="d7187-110">You can declare a <xref:System.Numerics.BigInteger> variable and assign it a value just as you would any numeric type, as long as that value is an integral type.</span></span> <span data-ttu-id="d7187-111">В следующем примере используется присваивание для создания <xref:System.Numerics.BigInteger> значения <xref:System.Int64>из.</span><span class="sxs-lookup"><span data-stu-id="d7187-111">The following example uses assignment to create a <xref:System.Numerics.BigInteger> value from an <xref:System.Int64>.</span></span>  
  
     [!code-csharp[System.Numerics.BigInteger.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class/cs/BigInteger_Examples.cs#2)]
     [!code-vb[System.Numerics.BigInteger.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class/vb/BigInteger_Examples.vb#2)]  
  
-   <span data-ttu-id="d7187-112">При приведении значения или первом преобразовании его в <xref:System.Numerics.BigInteger> объект можно присвоить значение Decimal или float.</span><span class="sxs-lookup"><span data-stu-id="d7187-112">You can assign a decimal or floating-point value to a <xref:System.Numerics.BigInteger> object if you cast the value or convert it first.</span></span> <span data-ttu-id="d7187-113">В следующем примере явным образом приводится ( C#в) или преобразуется (в Visual Basic <xref:System.Double> ) a <xref:System.Decimal> и значение в <xref:System.Numerics.BigInteger>.</span><span class="sxs-lookup"><span data-stu-id="d7187-113">The following example explicitly casts (in C#) or converts (in Visual Basic) a <xref:System.Double> and a <xref:System.Decimal> value to a <xref:System.Numerics.BigInteger>.</span></span>  
  
     [!code-csharp[System.Numerics.BigInteger.Class#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class/cs/BigInteger_Examples.cs#3)]
     [!code-vb[System.Numerics.BigInteger.Class#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class/vb/BigInteger_Examples.vb#3)]  
  
 <span data-ttu-id="d7187-114">Эти методы позволяют создать экземпляр <xref:System.Numerics.BigInteger> объекта, значение которого находится в диапазоне одного из существующих числовых типов.</span><span class="sxs-lookup"><span data-stu-id="d7187-114">These methods enable you to instantiate a <xref:System.Numerics.BigInteger> object whose value is in the range of one of the existing numeric types only.</span></span> <span data-ttu-id="d7187-115">Можно создать экземпляр <xref:System.Numerics.BigInteger> объекта, значение которого может превышать диапазон существующих числовых типов одним из трех способов:</span><span class="sxs-lookup"><span data-stu-id="d7187-115">You can instantiate a <xref:System.Numerics.BigInteger> object whose value can exceed the range of the existing numeric types in one of three ways:</span></span>  
  
-   <span data-ttu-id="d7187-116">Можно использовать `new` ключевое слово и предоставить <xref:System.Numerics.BigInteger.%23ctor%2A?displayProperty=nameWithType> конструктору массив байтов любого размера.</span><span class="sxs-lookup"><span data-stu-id="d7187-116">You can use the `new` keyword and provide a byte array of any size to the <xref:System.Numerics.BigInteger.%23ctor%2A?displayProperty=nameWithType> constructor.</span></span> <span data-ttu-id="d7187-117">Например:</span><span class="sxs-lookup"><span data-stu-id="d7187-117">For example:</span></span>  
  
     [!code-csharp[System.Numerics.BigInteger.Class#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class/cs/BigInteger_Examples.cs#4)]
     [!code-vb[System.Numerics.BigInteger.Class#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class/vb/BigInteger_Examples.vb#4)]  
  
-   <span data-ttu-id="d7187-118">Можно вызвать <xref:System.Numerics.BigInteger.Parse%2A> методы или <xref:System.Numerics.BigInteger.TryParse%2A> , чтобы преобразовать строковое представление числа в <xref:System.Numerics.BigInteger>.</span><span class="sxs-lookup"><span data-stu-id="d7187-118">You can call the <xref:System.Numerics.BigInteger.Parse%2A> or <xref:System.Numerics.BigInteger.TryParse%2A> methods to convert the string representation of a number to a <xref:System.Numerics.BigInteger>.</span></span> <span data-ttu-id="d7187-119">Например:</span><span class="sxs-lookup"><span data-stu-id="d7187-119">For example:</span></span>  
  
     [!code-csharp[System.Numerics.BigInteger.Class#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class/cs/BigInteger_Examples.cs#5)]
     [!code-vb[System.Numerics.BigInteger.Class#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class/vb/BigInteger_Examples.vb#5)]  
  
-   <span data-ttu-id="d7187-120">Можно вызвать `static` метод (`Shared` в Visual Basic) <xref:System.Numerics.BigInteger> , который выполняет некоторую операцию над числовым выражением и Возвращает вычисленный <xref:System.Numerics.BigInteger> результат.</span><span class="sxs-lookup"><span data-stu-id="d7187-120">You can call a `static` (`Shared` in Visual Basic) <xref:System.Numerics.BigInteger> method that performs some operation on a numeric expression and returns a calculated <xref:System.Numerics.BigInteger> result.</span></span> <span data-ttu-id="d7187-121">В следующем примере это делается путем кубинг <xref:System.UInt64.MaxValue?displayProperty=nameWithType> и присваивания результата. <xref:System.Numerics.BigInteger></span><span class="sxs-lookup"><span data-stu-id="d7187-121">The following example does this by cubing <xref:System.UInt64.MaxValue?displayProperty=nameWithType> and assigning the result to a <xref:System.Numerics.BigInteger>.</span></span>  
  
     [!code-csharp[System.Numerics.BigInteger.Class#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class/cs/BigInteger_Examples.cs#6)]
     [!code-vb[System.Numerics.BigInteger.Class#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class/vb/BigInteger_Examples.vb#6)]  
  
 <span data-ttu-id="d7187-122">Неинициализированное значение <xref:System.Numerics.BigInteger> равно <xref:System.Numerics.BigInteger.Zero%2A>.</span><span class="sxs-lookup"><span data-stu-id="d7187-122">The uninitialized value of a <xref:System.Numerics.BigInteger> is <xref:System.Numerics.BigInteger.Zero%2A>.</span></span>  
  
## <a name="performing-operations-on-biginteger-values"></a><span data-ttu-id="d7187-123">Выполнение операций с BigInteger значениями</span><span class="sxs-lookup"><span data-stu-id="d7187-123">Performing Operations on BigInteger Values</span></span>  
 <span data-ttu-id="d7187-124"><xref:System.Numerics.BigInteger> Экземпляр можно использовать так же, как любой другой целочисленный тип.</span><span class="sxs-lookup"><span data-stu-id="d7187-124">You can use a <xref:System.Numerics.BigInteger> instance as you would use any other integral type.</span></span> <span data-ttu-id="d7187-125"><xref:System.Numerics.BigInteger>перегружает стандартные числовые операторы, позволяя выполнять базовые математические операции, такие как сложение, вычитание, деление, умножение, вычитание, отрицание и унарное отрицание.</span><span class="sxs-lookup"><span data-stu-id="d7187-125"><xref:System.Numerics.BigInteger> overloads the standard numeric operators to enable you to perform basic mathematical operations such as addition, subtraction, division, multiplication, subtraction, negation, and unary negation.</span></span> <span data-ttu-id="d7187-126">Можно также использовать стандартные числовые операторы для сравнения двух <xref:System.Numerics.BigInteger> значений друг с другом.</span><span class="sxs-lookup"><span data-stu-id="d7187-126">You can also use the standard numeric operators to compare two <xref:System.Numerics.BigInteger> values with each other.</span></span> <span data-ttu-id="d7187-127">Как и другие целочисленные типы <xref:System.Numerics.BigInteger> , также поддерживает операторы `And`побитового, `Or` `XOr`,, сдвига влево и сдвига вправо.</span><span class="sxs-lookup"><span data-stu-id="d7187-127">Like the other integral types, <xref:System.Numerics.BigInteger> also supports the bitwise `And`, `Or`, `XOr`, left shift, and right shift operators.</span></span> <span data-ttu-id="d7187-128">Для языков, которые не поддерживают пользовательские операторы, <xref:System.Numerics.BigInteger> структура также предоставляет эквивалентные методы для выполнения математических операций.</span><span class="sxs-lookup"><span data-stu-id="d7187-128">For languages that do not support custom operators, the <xref:System.Numerics.BigInteger> structure also provides equivalent methods for performing mathematical operations.</span></span> <span data-ttu-id="d7187-129">К ним <xref:System.Numerics.BigInteger.Add%2A>относятся <xref:System.Numerics.BigInteger.Divide%2A> ,<xref:System.Numerics.BigInteger.Negate%2A>,,, и несколько других. <xref:System.Numerics.BigInteger.Multiply%2A> <xref:System.Numerics.BigInteger.Subtract%2A></span><span class="sxs-lookup"><span data-stu-id="d7187-129">These include <xref:System.Numerics.BigInteger.Add%2A>, <xref:System.Numerics.BigInteger.Divide%2A>, <xref:System.Numerics.BigInteger.Multiply%2A>, <xref:System.Numerics.BigInteger.Negate%2A>, <xref:System.Numerics.BigInteger.Subtract%2A>, and several others.</span></span>  
  
 <span data-ttu-id="d7187-130">Многие члены <xref:System.Numerics.BigInteger> структуры непосредственно соответствуют элементам других целочисленных типов.</span><span class="sxs-lookup"><span data-stu-id="d7187-130">Many members of the <xref:System.Numerics.BigInteger> structure correspond directly to members of the other integral types.</span></span> <span data-ttu-id="d7187-131">Кроме того, <xref:System.Numerics.BigInteger> добавляет следующие элементы:</span><span class="sxs-lookup"><span data-stu-id="d7187-131">In addition, <xref:System.Numerics.BigInteger> adds members such as the following:</span></span>  
  
-   <span data-ttu-id="d7187-132"><xref:System.Numerics.BigInteger.Sign%2A>, который возвращает значение, указывающее знак <xref:System.Numerics.BigInteger> значения.</span><span class="sxs-lookup"><span data-stu-id="d7187-132"><xref:System.Numerics.BigInteger.Sign%2A>, which returns a value that indicates the sign of a <xref:System.Numerics.BigInteger> value.</span></span>  
  
-   <span data-ttu-id="d7187-133"><xref:System.Numerics.BigInteger.Abs%2A>, который возвращает абсолютное значение <xref:System.Numerics.BigInteger> значения.</span><span class="sxs-lookup"><span data-stu-id="d7187-133"><xref:System.Numerics.BigInteger.Abs%2A>, which returns the absolute value of a <xref:System.Numerics.BigInteger> value.</span></span>  
  
-   <span data-ttu-id="d7187-134"><xref:System.Numerics.BigInteger.DivRem%2A>, который возвращает как частную, так и оставшуюся часть операции деления.</span><span class="sxs-lookup"><span data-stu-id="d7187-134"><xref:System.Numerics.BigInteger.DivRem%2A>, which returns both the quotient and remainder of a division operation.</span></span>  
  
-   <span data-ttu-id="d7187-135"><xref:System.Numerics.BigInteger.GreatestCommonDivisor%2A>, который возвращает наибольший общий делитель двух <xref:System.Numerics.BigInteger> значений.</span><span class="sxs-lookup"><span data-stu-id="d7187-135"><xref:System.Numerics.BigInteger.GreatestCommonDivisor%2A>, which returns the greatest common divisor of two <xref:System.Numerics.BigInteger> values.</span></span>  
  
 <span data-ttu-id="d7187-136">Многие из этих дополнительных элементов соответствуют членам <xref:System.Math> класса, который предоставляет функциональные возможности для работы с примитивными числовыми типами.</span><span class="sxs-lookup"><span data-stu-id="d7187-136">Many of these additional members correspond to the members of the <xref:System.Math> class, which provides the functionality to work with the primitive numeric types.</span></span>  
  
<a name="mutability"></a>   
## <a name="mutability-and-the-biginteger-structure"></a><span data-ttu-id="d7187-137">Изменяемость и структура BigInteger</span><span class="sxs-lookup"><span data-stu-id="d7187-137">Mutability and the BigInteger Structure</span></span>  
 <span data-ttu-id="d7187-138">В следующем примере создается экземпляр <xref:System.Numerics.BigInteger> объекта, а затем его значение увеличивается на единицу.</span><span class="sxs-lookup"><span data-stu-id="d7187-138">The following example instantiates a <xref:System.Numerics.BigInteger> object and then increments its value by one.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Class.Mutability#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class.Mutability/cs/Mutability_Examples.cs#1)]
 [!code-vb[System.Numerics.BigInteger.Class.Mutability#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class.Mutability/vb/Mutability_Examples.vb#1)]  
  
 <span data-ttu-id="d7187-139">Хотя в этом примере возникает изменение значения существующего объекта, это не так.</span><span class="sxs-lookup"><span data-stu-id="d7187-139">Although this example appears to modify the value of the existing object, this is not the case.</span></span> <span data-ttu-id="d7187-140"><xref:System.Numerics.BigInteger>объекты являются неизменяемыми, а это означает, что среда CLR фактически создает новый <xref:System.Numerics.BigInteger> объект и присваивает ему значение, которое больше предыдущего значения.</span><span class="sxs-lookup"><span data-stu-id="d7187-140"><xref:System.Numerics.BigInteger> objects are immutable, which means that internally, the common language runtime actually creates a new <xref:System.Numerics.BigInteger> object and assigns it a value one greater than its previous value.</span></span> <span data-ttu-id="d7187-141">Затем этот новый объект возвращается вызывающему объекту.</span><span class="sxs-lookup"><span data-stu-id="d7187-141">This new object is then returned to the caller.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d7187-142">Другие числовые типы в .NET Framework также являются неизменяемыми.</span><span class="sxs-lookup"><span data-stu-id="d7187-142">The other numeric types in the .NET Framework are also immutable.</span></span> <span data-ttu-id="d7187-143">Однако, поскольку <xref:System.Numerics.BigInteger> тип не имеет верхней или нижней границы, его значения могут увеличиваться очень большими и повлиять на производительность.</span><span class="sxs-lookup"><span data-stu-id="d7187-143">However, because the <xref:System.Numerics.BigInteger> type has no upper or lower bounds, its values can grow extremely large and have a measurable impact on performance.</span></span>  
  
 <span data-ttu-id="d7187-144">Хотя этот процесс является прозрачным для вызывающего, он приводит к снижению производительности.</span><span class="sxs-lookup"><span data-stu-id="d7187-144">Although this process is transparent to the caller, it does incur a performance penalty.</span></span> <span data-ttu-id="d7187-145">В некоторых случаях, особенно если повторяющиеся операции выполняются в цикле на очень больших <xref:System.Numerics.BigInteger> значениях, снижение производительности может быть значительным.</span><span class="sxs-lookup"><span data-stu-id="d7187-145">In some cases, especially when repeated operations are performed in a loop on very large <xref:System.Numerics.BigInteger> values, that performance penalty can be significant.</span></span> <span data-ttu-id="d7187-146">Например, в следующем примере операция выполняется повторно до миллиона раз, а <xref:System.Numerics.BigInteger> значение увеличивается на единицу каждый раз, когда операция выполняется.</span><span class="sxs-lookup"><span data-stu-id="d7187-146">For example, in the following example, an operation is performed repetitively up to a million times, and a <xref:System.Numerics.BigInteger> value is incremented by one every time the operation succeeds.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Class.Mutability#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class.Mutability/cs/Mutability_Examples.cs#12)]
 [!code-vb[System.Numerics.BigInteger.Class.Mutability#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class.Mutability/vb/Mutability_Examples.vb#12)]  
  
 <span data-ttu-id="d7187-147">В этом случае можно повысить производительность, выполняя все промежуточные назначения <xref:System.Int32> переменной.</span><span class="sxs-lookup"><span data-stu-id="d7187-147">In such a case, you can improve performance by performing all intermediate assignments to an <xref:System.Int32> variable.</span></span> <span data-ttu-id="d7187-148">Конечное значение переменной может быть назначено <xref:System.Numerics.BigInteger> объекту при выходе из цикла.</span><span class="sxs-lookup"><span data-stu-id="d7187-148">The final value of the variable can then be assigned to the <xref:System.Numerics.BigInteger> object when the loop exits.</span></span> <span data-ttu-id="d7187-149">Ниже приведен пример.</span><span class="sxs-lookup"><span data-stu-id="d7187-149">The following example provides an illustration.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Class.Mutability#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class.Mutability/cs/Mutability_Examples.cs#3)]
 [!code-vb[System.Numerics.BigInteger.Class.Mutability#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class.Mutability/vb/Mutability_Examples.vb#3)]  
  
## <a name="working-with-byte-arrays-and-hexadecimal-strings"></a><span data-ttu-id="d7187-150">Работа с массивами байтов и шестнадцатеричными строками</span><span class="sxs-lookup"><span data-stu-id="d7187-150">Working with Byte Arrays and Hexadecimal Strings</span></span>  
 <span data-ttu-id="d7187-151">При преобразовании <xref:System.Numerics.BigInteger> значений в массивы байтов или при преобразовании массивов байтов <xref:System.Numerics.BigInteger> в значения необходимо учитывать порядок байтов.</span><span class="sxs-lookup"><span data-stu-id="d7187-151">If you convert <xref:System.Numerics.BigInteger> values to byte arrays, or if you convert byte arrays to <xref:System.Numerics.BigInteger> values, you must consider the order of bytes.</span></span> <span data-ttu-id="d7187-152"><xref:System.Numerics.BigInteger> Структура требует, чтобы отдельные байты в массиве байтов отображались в порядке с прямым порядком байтов (то есть байты нижнего порядка в значении предшествуют байтам более высокого порядка).</span><span class="sxs-lookup"><span data-stu-id="d7187-152">The <xref:System.Numerics.BigInteger> structure expects the individual bytes in a byte array to appear in little-endian order (that is, the lower-order bytes of the value precede the higher-order bytes).</span></span> <span data-ttu-id="d7187-153">Можно округлить <xref:System.Numerics.BigInteger> значение, <xref:System.Numerics.BigInteger.ToByteArray%2A> вызвав метод, а затем передав <xref:System.Numerics.BigInteger.%23ctor%28System.Byte%5B%5D%29> полученный массив байтов в конструктор, как показано в следующем примере.</span><span class="sxs-lookup"><span data-stu-id="d7187-153">You can round-trip a <xref:System.Numerics.BigInteger> value by calling the <xref:System.Numerics.BigInteger.ToByteArray%2A> method and then passing the resulting byte array to the <xref:System.Numerics.BigInteger.%23ctor%28System.Byte%5B%5D%29> constructor, as the following example shows.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Class.ByteAndHex#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class.ByteAndHex/cs/ByteAndHex_Examples.cs#1)]
 [!code-vb[System.Numerics.BigInteger.Class.ByteAndHex#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class.ByteAndHex/vb/ByteAndHex_Examples.vb#1)]  
  
 <span data-ttu-id="d7187-154">Чтобы создать экземпляр <xref:System.Numerics.BigInteger> значения из массива байтов, представляющего значение какого-либо другого целочисленного типа, можно передать целочисленное значение <xref:System.BitConverter.GetBytes%2A?displayProperty=nameWithType> в метод, а затем передать <xref:System.Numerics.BigInteger.%23ctor%28System.Byte%5B%5D%29> полученный массив байтов в конструктор.</span><span class="sxs-lookup"><span data-stu-id="d7187-154">To instantiate a <xref:System.Numerics.BigInteger> value from a byte array that represents a value of some other integral type, you can pass the integral value to the <xref:System.BitConverter.GetBytes%2A?displayProperty=nameWithType> method, and then pass the resulting byte array to the <xref:System.Numerics.BigInteger.%23ctor%28System.Byte%5B%5D%29> constructor.</span></span> <span data-ttu-id="d7187-155">В следующем примере создается экземпляр <xref:System.Numerics.BigInteger> значения из массива байтов, <xref:System.Int16> представляющего значение.</span><span class="sxs-lookup"><span data-stu-id="d7187-155">The following example instantiates a <xref:System.Numerics.BigInteger> value from a byte array that represents an <xref:System.Int16> value.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Class.ByteAndHex#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class.ByteAndHex/cs/ByteAndHex_Examples.cs#2)]
 [!code-vb[System.Numerics.BigInteger.Class.ByteAndHex#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class.ByteAndHex/vb/ByteAndHex_Examples.vb#2)]  
  
 <span data-ttu-id="d7187-156"><xref:System.Numerics.BigInteger> Структура предполагает, что отрицательные значения хранятся с помощью представления дополнения двух.</span><span class="sxs-lookup"><span data-stu-id="d7187-156">The <xref:System.Numerics.BigInteger> structure assumes that negative values are stored by using two's complement representation.</span></span> <span data-ttu-id="d7187-157">Поскольку структура представляет числовое значение без фиксированной длины <xref:System.Numerics.BigInteger.%23ctor%28System.Byte%5B%5D%29> , конструктор всегда интерпретирует наиболее значимый бит последнего байта в массиве как бит знака. <xref:System.Numerics.BigInteger></span><span class="sxs-lookup"><span data-stu-id="d7187-157">Because the <xref:System.Numerics.BigInteger> structure represents a numeric value with no fixed length, the <xref:System.Numerics.BigInteger.%23ctor%28System.Byte%5B%5D%29> constructor always interprets the most significant bit of the last byte in the array as a sign bit.</span></span> <span data-ttu-id="d7187-158"><xref:System.Numerics.BigInteger.%23ctor%28System.Byte%5B%5D%29> Чтобы конструктор не запутать представление отрицательного значения, дополняющего два, с помощью знака и величины положительного значения, положительные значения, в которых наиболее значимый бит последнего байта в массиве байтов. Обычно параметр должен содержать дополнительный байт, значение которого равно 0.</span><span class="sxs-lookup"><span data-stu-id="d7187-158">To prevent the <xref:System.Numerics.BigInteger.%23ctor%28System.Byte%5B%5D%29> constructor from confusing the two's complement representation of a negative value with the sign and magnitude representation of a positive value, positive values in which the most significant bit of the last byte in the byte array would ordinarily be set should include an additional byte whose value is 0.</span></span> <span data-ttu-id="d7187-159">Например, 0xC0 0xBD 0xF0 0xFF — это шестнадцатеричное представление с прямым порядком байтов 1 000 000 или 4 293 967 296.</span><span class="sxs-lookup"><span data-stu-id="d7187-159">For example, 0xC0 0xBD 0xF0 0xFF is the little-endian hexadecimal representation of either -1,000,000 or 4,293,967,296.</span></span> <span data-ttu-id="d7187-160">Поскольку наиболее значимый бит последнего байта в этом массиве равен ON, значение массива байтов интерпретируется <xref:System.Numerics.BigInteger.%23ctor%28System.Byte%5B%5D%29> конструктором как-1 000 000.</span><span class="sxs-lookup"><span data-stu-id="d7187-160">Because the most significant bit of the last byte in this array is on, the value of the byte array would be interpreted by the <xref:System.Numerics.BigInteger.%23ctor%28System.Byte%5B%5D%29> constructor as -1,000,000.</span></span> <span data-ttu-id="d7187-161">Для создания экземпляра <xref:System.Numerics.BigInteger> , значение которого является положительным, массив байтов, элементы которого 0xC0 0xBD 0xF0 0xFF 0x00, должны передаваться в конструктор.</span><span class="sxs-lookup"><span data-stu-id="d7187-161">To instantiate a <xref:System.Numerics.BigInteger> whose value is positive, a byte array whose elements are 0xC0 0xBD 0xF0 0xFF 0x00 must be passed to the constructor.</span></span> <span data-ttu-id="d7187-162">Это показано в следующем примере.</span><span class="sxs-lookup"><span data-stu-id="d7187-162">The following example illustrates this.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Class.ByteAndHex#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class.ByteAndHex/cs/ByteAndHex_Examples.cs#3)]
 [!code-vb[System.Numerics.BigInteger.Class.ByteAndHex#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class.ByteAndHex/vb/ByteAndHex_Examples.vb#3)]  
  
 <span data-ttu-id="d7187-163">Байтовые массивы, <xref:System.Numerics.BigInteger.ToByteArray%2A> создаваемые методом из положительных значений, включают этот дополнительный байт нулевого значения.</span><span class="sxs-lookup"><span data-stu-id="d7187-163">Byte arrays created by the <xref:System.Numerics.BigInteger.ToByteArray%2A> method from positive values include this extra zero-value byte.</span></span> <span data-ttu-id="d7187-164">Таким образом, <xref:System.Numerics.BigInteger> структура может успешно выполнять циклические значения, назначив их в, а затем восстановив из байтовых массивов, как показано в следующем примере.</span><span class="sxs-lookup"><span data-stu-id="d7187-164">Therefore, the <xref:System.Numerics.BigInteger> structure can successfully round-trip values by assigning them to, and then restoring them from, byte arrays, as the following example shows.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Class.ByteAndHex#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class.ByteAndHex/cs/ByteAndHex_Examples.cs#4)]
 [!code-vb[System.Numerics.BigInteger.Class.ByteAndHex#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class.ByteAndHex/vb/ByteAndHex_Examples.vb#4)]  
  
 <span data-ttu-id="d7187-165">Однако может потребоваться добавить этот дополнительный байт нулевого значения в массивы байтов, создаваемые разработчиком динамически или возвращаемые методами, которые преобразуют целые числа без знака в байтовые массивы (например <xref:System.BitConverter.GetBytes%28System.UInt16%29?displayProperty=nameWithType>, <xref:System.BitConverter.GetBytes%28System.UInt32%29?displayProperty=nameWithType>, и <xref:System.BitConverter.GetBytes%28System.UInt64%29?displayProperty=nameWithType>).</span><span class="sxs-lookup"><span data-stu-id="d7187-165">However, you may need to add this additional zero-value byte to byte arrays that are created dynamically by the developer or that are returned by methods that convert unsigned integers to byte arrays (such as <xref:System.BitConverter.GetBytes%28System.UInt16%29?displayProperty=nameWithType>, <xref:System.BitConverter.GetBytes%28System.UInt32%29?displayProperty=nameWithType>, and <xref:System.BitConverter.GetBytes%28System.UInt64%29?displayProperty=nameWithType>).</span></span>  
  
 <span data-ttu-id="d7187-166">При синтаксическом анализе шестнадцатеричной строки <xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType> методы и <xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> предполагают, что если наиболее значимый бит первого байта в строке задан, или если первая шестнадцатеричная цифра строки представляет младшие четыре бита байтового значения, значение будет равно представлено с использованием представления дополнения двух.</span><span class="sxs-lookup"><span data-stu-id="d7187-166">When parsing a hexadecimal string, the <xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType> and <xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> methods assume that if the most significant bit of the first byte in the string is set, or if the first hexadecimal digit of the string represents the lower four bits of a byte value, the value is represented by using two's complement representation.</span></span> <span data-ttu-id="d7187-167">Например, "FF01" и "F01" представляют десятичное значение-255.</span><span class="sxs-lookup"><span data-stu-id="d7187-167">For example, both "FF01" and "F01" represent the decimal value -255.</span></span> <span data-ttu-id="d7187-168">Чтобы отличить положительные значения от отрицательных, положительные значения должны включать ноль в начале.</span><span class="sxs-lookup"><span data-stu-id="d7187-168">To differentiate positive from negative values, positive values should include a leading zero.</span></span> <span data-ttu-id="d7187-169">Соответствующие перегрузки <xref:System.Numerics.BigInteger.ToString%2A> метода, когда они передаются в виде строки формата "X", добавляют в возвращаемую шестнадцатеричную строку в качестве положительных значений ноль в начале.</span><span class="sxs-lookup"><span data-stu-id="d7187-169">The relevant overloads of the <xref:System.Numerics.BigInteger.ToString%2A> method, when they are passed the "X" format string, add a leading zero to the returned hexadecimal string for positive values.</span></span> <span data-ttu-id="d7187-170">Это позволяет значениям циклического приема <xref:System.Numerics.BigInteger> значений с <xref:System.Numerics.BigInteger.ToString%2A> помощью методов и <xref:System.Numerics.BigInteger.Parse%2A> , как показано в следующем примере.</span><span class="sxs-lookup"><span data-stu-id="d7187-170">This makes it possible to round-trip <xref:System.Numerics.BigInteger> values by using the <xref:System.Numerics.BigInteger.ToString%2A> and <xref:System.Numerics.BigInteger.Parse%2A> methods, as the following example shows.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Class.ByteAndHex#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class.ByteAndHex/cs/ByteAndHex_Examples.cs#5)]
 [!code-vb[System.Numerics.BigInteger.Class.ByteAndHex#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class.ByteAndHex/vb/ByteAndHex_Examples.vb#5)]  
  
 <span data-ttu-id="d7187-171">Однако шестнадцатеричные строки, созданные путем вызова `ToString` методов других целочисленных типов или перегрузок <xref:System.Convert.ToString%2A> метода, включающих `toBase` параметр, не обозначают знак значения или тип данных источника, из которого была получена шестнадцатеричная строка.</span><span class="sxs-lookup"><span data-stu-id="d7187-171">However, the hexadecimal strings created by calling the `ToString` methods of the other integral types or the overloads of the <xref:System.Convert.ToString%2A> method that include a `toBase` parameter do not indicate the sign of the value or the source data type from which the hexadecimal string was derived.</span></span> <span data-ttu-id="d7187-172">Для <xref:System.Numerics.BigInteger> успешного создания экземпляра значения из такой строки требуется дополнительная логика.</span><span class="sxs-lookup"><span data-stu-id="d7187-172">Successfully instantiating a <xref:System.Numerics.BigInteger> value from such a string requires some additional logic.</span></span> <span data-ttu-id="d7187-173">В следующем примере показана одна возможная реализация.</span><span class="sxs-lookup"><span data-stu-id="d7187-173">The following example provides one possible implementation.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Class.ByteAndHex#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class.ByteAndHex/cs/ByteAndHex_Examples2.cs#6)]
 [!code-vb[System.Numerics.BigInteger.Class.ByteAndHex#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class.ByteAndHex/vb/ByteAndHex_Examples2.vb#6)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d7187-174">Инициализирует новый экземпляр структуры <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-174">Initializes a new instance of the <see cref="T:System.Numerics.BigInteger" /> structure.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BigInteger (byte[] value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.#ctor(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BigInteger(cli::array &lt;System::Byte&gt; ^ value);" />
      <MemberSignature Language="F#" Value="new System.Numerics.BigInteger : byte[] -&gt; System.Numerics.BigInteger" Usage="new System.Numerics.BigInteger value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="value" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d7187-175">Массив значений типа byte в прямом порядке байтов.</span><span class="sxs-lookup"><span data-stu-id="d7187-175">An array of byte values in little-endian order.</span></span></param>
        <summary><span data-ttu-id="d7187-176">Инициализирует новый экземпляр структуры <see cref="T:System.Numerics.BigInteger" />, используя значения в массиве типа byte.</span><span class="sxs-lookup"><span data-stu-id="d7187-176">Initializes a new instance of the <see cref="T:System.Numerics.BigInteger" /> structure using the values in a byte array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7187-177">Отдельные байты в `value` массиве должны находиться в порядке с прямым порядком следования, начиная с самого низкого порядка и заканчивая старшим байтом.</span><span class="sxs-lookup"><span data-stu-id="d7187-177">The individual bytes in the `value` array should be in little-endian order, from lowest-order byte to highest-order byte.</span></span> <span data-ttu-id="d7187-178">Например, числовое значение 1 000 000 000 000 представлено, как показано в следующей таблице.</span><span class="sxs-lookup"><span data-stu-id="d7187-178">For example, the numeric value 1,000,000,000,000 is represented as shown in the following table:</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="d7187-179">Шестнадцатеричная строка</span><span class="sxs-lookup"><span data-stu-id="d7187-179">Hexadecimal string</span></span>|<span data-ttu-id="d7187-180">E8D4A51000</span><span class="sxs-lookup"><span data-stu-id="d7187-180">E8D4A51000</span></span>|  
|<span data-ttu-id="d7187-181">Массив байтов (сначала минимальный индекс)</span><span class="sxs-lookup"><span data-stu-id="d7187-181">Byte array (lowest index first)</span></span>|<span data-ttu-id="d7187-182">00 10 A5 D4 E8 00</span><span class="sxs-lookup"><span data-stu-id="d7187-182">00 10 A5 D4 E8 00</span></span>|  
  
 <span data-ttu-id="d7187-183">Большинство методов, которые преобразуют числовые значения в байтовые массивы <xref:System.BitConverter.GetBytes%2A?displayProperty=nameWithType>, такие как <xref:System.Numerics.BigInteger.ToByteArray%2A?displayProperty=nameWithType> и, возвращают байтовые массивы в порядке с прямым порядком байтов.</span><span class="sxs-lookup"><span data-stu-id="d7187-183">Most methods that convert numeric values to byte arrays, such as <xref:System.Numerics.BigInteger.ToByteArray%2A?displayProperty=nameWithType> and <xref:System.BitConverter.GetBytes%2A?displayProperty=nameWithType>, return byte arrays in little-endian order.</span></span>  
  
 <span data-ttu-id="d7187-184">Конструктор принимает положительные значения в массиве байтов для использования представления знака и величины, а отрицательные значения — для использования представления дополнения двух.</span><span class="sxs-lookup"><span data-stu-id="d7187-184">The constructor expects positive values in the byte array to use sign-and-magnitude representation, and negative values to use two's complement representation.</span></span> <span data-ttu-id="d7187-185">Иными словами, если установлен старший бит старшего байта в `value` , результирующее <xref:System.Numerics.BigInteger> значение будет отрицательным.</span><span class="sxs-lookup"><span data-stu-id="d7187-185">In other words, if the highest-order bit of the highest-order byte in `value` is set, the resulting <xref:System.Numerics.BigInteger> value is negative.</span></span> <span data-ttu-id="d7187-186">В зависимости от источника массива байтов это может привести к тому, что положительное значение будет ошибочно интерпретировано как отрицательное значение.</span><span class="sxs-lookup"><span data-stu-id="d7187-186">Depending on the source of the byte array, this may cause a positive value to be misinterpreted as a negative value.</span></span> <span data-ttu-id="d7187-187">Массивы байтов обычно создаются следующими способами.</span><span class="sxs-lookup"><span data-stu-id="d7187-187">Byte arrays are typically generated in the following ways:</span></span>  
  
-   <span data-ttu-id="d7187-188">Путем вызова <xref:System.Numerics.BigInteger.ToByteArray%2A?displayProperty=nameWithType> метода.</span><span class="sxs-lookup"><span data-stu-id="d7187-188">By calling the <xref:System.Numerics.BigInteger.ToByteArray%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="d7187-189">Поскольку этот метод возвращает массив байтов с старшим битом старших байтов в массиве, равным нулю для положительных значений, не существует вероятность неправильной интерпретации положительного значения как отрицательного.</span><span class="sxs-lookup"><span data-stu-id="d7187-189">Because this method returns a byte array with the highest-order bit of the highest-order byte in the array set to zero for positive values, there is no chance of misinterpreting a positive value as negative.</span></span> <span data-ttu-id="d7187-190">Неизмененные массивы байтов, <xref:System.Numerics.BigInteger.ToByteArray%2A> созданные методом, всегда успешно проходят циклический обмен, когда они <xref:System.Numerics.BigInteger.%23ctor%28System.Byte%5B%5D%29> передаются в конструктор.</span><span class="sxs-lookup"><span data-stu-id="d7187-190">Unmodified byte arrays created by the <xref:System.Numerics.BigInteger.ToByteArray%2A> method always successfully round-trip when they are passed to the <xref:System.Numerics.BigInteger.%23ctor%28System.Byte%5B%5D%29> constructor.</span></span>  
  
-   <span data-ttu-id="d7187-191">Путем вызова <xref:System.BitConverter.GetBytes%2A?displayProperty=nameWithType> метода и передачи ему целого числа со знаком в качестве параметра.</span><span class="sxs-lookup"><span data-stu-id="d7187-191">By calling the <xref:System.BitConverter.GetBytes%2A?displayProperty=nameWithType> method and passing it a signed integer as a parameter.</span></span> <span data-ttu-id="d7187-192">Поскольку целые числа со знаком обрабатывают как представление знака и величины, так и представление дополнения двух, не существует вероятность неправильной интерпретации положительного значения как отрицательного.</span><span class="sxs-lookup"><span data-stu-id="d7187-192">Because signed integers handle both sign-and-magnitude representation and two's complement representation, there is no chance of misinterpreting a positive value as negative.</span></span>  
  
-   <span data-ttu-id="d7187-193">Путем вызова <xref:System.BitConverter.GetBytes%2A?displayProperty=nameWithType> метода и передачи ему целого числа без знака в качестве параметра.</span><span class="sxs-lookup"><span data-stu-id="d7187-193">By calling the <xref:System.BitConverter.GetBytes%2A?displayProperty=nameWithType> method and passing it an unsigned integer as a parameter.</span></span> <span data-ttu-id="d7187-194">Так как целые числа без знака представлены только по величине, положительные значения могут быть неверно интерпретированы как отрицательные значения.</span><span class="sxs-lookup"><span data-stu-id="d7187-194">Because unsigned integers are represented by their magnitude only, positive values can be misinterpreted as negative values.</span></span> <span data-ttu-id="d7187-195">Чтобы предотвратить такую неподобную интерпретацию, можно добавить в конец массива значение нулевого байта.</span><span class="sxs-lookup"><span data-stu-id="d7187-195">To prevent this misinterpretation, you can add a zero-byte value to the end of the array.</span></span> <span data-ttu-id="d7187-196">Иллюстрация приведена в примере в следующем разделе.</span><span class="sxs-lookup"><span data-stu-id="d7187-196">The example in the next section provides an illustration.</span></span>  
  
-   <span data-ttu-id="d7187-197">Путем создания массива байтов динамически или статически без обязательного вызова любого из предыдущих методов или путем изменения существующего массива байтов.</span><span class="sxs-lookup"><span data-stu-id="d7187-197">By creating a byte array either dynamically or statically without necessarily calling any of the previous methods, or by modifying an existing byte array.</span></span> <span data-ttu-id="d7187-198">Чтобы избежать неправильной интерпретации положительных значений как отрицательных значений, можно добавить в конец массива значение нулевого байта.</span><span class="sxs-lookup"><span data-stu-id="d7187-198">To prevent positive values from being misinterpreted as negative values, you can add a zero-byte value to the end of the array.</span></span>  
  
 <span data-ttu-id="d7187-199">Если `value` является пустым <xref:System.Byte> массивом, то новый <xref:System.Numerics.BigInteger> <xref:System.Numerics.BigInteger.Zero%2A?displayProperty=nameWithType>объект инициализируется значением.</span><span class="sxs-lookup"><span data-stu-id="d7187-199">If `value` is an empty <xref:System.Byte> array, the new <xref:System.Numerics.BigInteger> object is initialized to a value of <xref:System.Numerics.BigInteger.Zero%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="d7187-200">Если `value` имеет `null` значение<xref:System.ArgumentNullException>, конструктор создает исключение.</span><span class="sxs-lookup"><span data-stu-id="d7187-200">If `value` is `null`, the constructor throws an <xref:System.ArgumentNullException>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d7187-201">В следующем примере создается экземпляр <xref:System.Numerics.BigInteger> объекта из 5-элементного массива байтов, значение которого равно {5, 4, 3, 2, 1}.</span><span class="sxs-lookup"><span data-stu-id="d7187-201">The following example instantiates a <xref:System.Numerics.BigInteger> object from a 5-element byte array whose value is {5, 4, 3, 2, 1}.</span></span> <span data-ttu-id="d7187-202">Затем на консоль выводится <xref:System.Numerics.BigInteger> значение, представленное как десятичное и шестнадцатеричное число.</span><span class="sxs-lookup"><span data-stu-id="d7187-202">It then displays the <xref:System.Numerics.BigInteger> value, represented as both decimal and hexadecimal numbers, to the console.</span></span> <span data-ttu-id="d7187-203">Сравнение входного массива с выходными данными делает ясно, почему эта перегрузка <xref:System.Numerics.BigInteger> конструктора класса <xref:System.Numerics.BigInteger> создает объект, значение которого равно 4328719365 (или 0x102030405).</span><span class="sxs-lookup"><span data-stu-id="d7187-203">A comparison of the input array with the text output makes it clear why this overload of the <xref:System.Numerics.BigInteger> class constructor creates a <xref:System.Numerics.BigInteger> object whose value is 4328719365 (or 0x102030405).</span></span> <span data-ttu-id="d7187-204">Первый элемент массива байтов, значение которого равно 5, определяет значение байта <xref:System.Numerics.BigInteger> самого нижнего порядка объекта, то есть 0x05.</span><span class="sxs-lookup"><span data-stu-id="d7187-204">The first element of the byte array, whose value is 5, defines the value of the lowest-order byte of the <xref:System.Numerics.BigInteger> object, which is 0x05.</span></span> <span data-ttu-id="d7187-205">Второй элемент массива байтов, значение которого равно 4, определяет значение второго байта <xref:System.Numerics.BigInteger> объекта, который является 0x04, и т. д.</span><span class="sxs-lookup"><span data-stu-id="d7187-205">The second element of the byte array, whose value is 4, defines the value of the second byte of the <xref:System.Numerics.BigInteger> object, which is 0x04, and so on.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.ctors#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.ctors/cs/Example1.cs#1)]
 [!code-vb[System.Numerics.BigInteger.ctors#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.ctors/vb/Example1.vb#1)]  
  
 <span data-ttu-id="d7187-206">В следующем примере создается положительное и отрицательное <xref:System.Numerics.BigInteger> значение, передается <xref:System.Numerics.BigInteger.ToByteArray%2A> в метод, а затем восстанавливаются исходные <xref:System.Numerics.BigInteger> значения из полученного массива байтов.</span><span class="sxs-lookup"><span data-stu-id="d7187-206">The following example instantiates a positive and a negative <xref:System.Numerics.BigInteger> value, passes them to the <xref:System.Numerics.BigInteger.ToByteArray%2A> method, and then restores the original <xref:System.Numerics.BigInteger> values from the resulting byte array.</span></span> <span data-ttu-id="d7187-207">Обратите внимание, что два значения представлены одинаковыми массивами байтов.</span><span class="sxs-lookup"><span data-stu-id="d7187-207">Note that the two values are represented by identical byte arrays.</span></span> <span data-ttu-id="d7187-208">Единственное различие между ними — это наиболее важный бит последнего элемента в массиве байтов.</span><span class="sxs-lookup"><span data-stu-id="d7187-208">The only difference between them is in the most significant bit of the last element in the byte array.</span></span> <span data-ttu-id="d7187-209">Этот бит задан (значение байта — 0xFF), если массив создается из отрицательного <xref:System.Numerics.BigInteger> значения.</span><span class="sxs-lookup"><span data-stu-id="d7187-209">This bit is set (the value of the byte is 0xFF) if the array is created from a negative <xref:System.Numerics.BigInteger> value.</span></span> <span data-ttu-id="d7187-210">Бит не задан (значение байта равно нулю), если массив создается из положительного <xref:System.Numerics.BigInteger> значения.</span><span class="sxs-lookup"><span data-stu-id="d7187-210">The bit is not set (the value of the byte is zero), if the array is created from a positive <xref:System.Numerics.BigInteger> value.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.ctors#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.ctors/cs/Example1.cs#2)]
 [!code-vb[System.Numerics.BigInteger.ctors#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.ctors/vb/Example1.vb#2)]  
  
 <span data-ttu-id="d7187-211">В следующем примере показано, как убедиться, что положительное значение не является неправильным экземпляром как отрицательное значение, добавив байт, значение которого равно нулю, в конец массива.</span><span class="sxs-lookup"><span data-stu-id="d7187-211">The following example illustrates how to make sure that a positive value is not incorrectly instantiated as a negative value by adding a byte whose value is zero to the end of the array.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.ctors#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.ctors/cs/Example1.cs#3)]
 [!code-vb[System.Numerics.BigInteger.ctors#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.ctors/vb/Example1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d7187-212"><paramref name="value" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-212"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Numerics.BigInteger.ToByteArray" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BigInteger (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.#ctor(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As Decimal)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BigInteger(System::Decimal value);" />
      <MemberSignature Language="F#" Value="new System.Numerics.BigInteger : decimal -&gt; System.Numerics.BigInteger" Usage="new System.Numerics.BigInteger value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d7187-213">Десятичное число.</span><span class="sxs-lookup"><span data-stu-id="d7187-213">A decimal number.</span></span></param>
        <summary><span data-ttu-id="d7187-214">Инициализирует новый экземпляр структуры <see cref="T:System.Numerics.BigInteger" />, используя значение <see cref="T:System.Decimal" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-214">Initializes a new instance of the <see cref="T:System.Numerics.BigInteger" /> structure using a <see cref="T:System.Decimal" /> value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7187-215">Результат вызова этого конструктора идентичен явному присвоению <xref:System.Decimal> значения <xref:System.Numerics.BigInteger> переменной.</span><span class="sxs-lookup"><span data-stu-id="d7187-215">The result of calling this constructor is identical to explicitly assigning a <xref:System.Decimal> value to a <xref:System.Numerics.BigInteger> variable.</span></span>  
  
 <span data-ttu-id="d7187-216">Вызов этого конструктора может привести к потере данных. При создании экземпляра `value` <xref:System.Numerics.BigInteger> объекта усекается любая часть дробной части.</span><span class="sxs-lookup"><span data-stu-id="d7187-216">Calling this constructor can cause data loss; any fractional part of `value` is truncated when instantiating a <xref:System.Numerics.BigInteger> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d7187-217">В следующем примере показано использование <xref:System.Numerics.BigInteger.%23ctor%28System.Decimal%29> конструктора для создания экземпляра <xref:System.Numerics.BigInteger> объекта.</span><span class="sxs-lookup"><span data-stu-id="d7187-217">The following example illustrates the use of the <xref:System.Numerics.BigInteger.%23ctor%28System.Decimal%29> constructor to instantiate a <xref:System.Numerics.BigInteger> object.</span></span> <span data-ttu-id="d7187-218">Он определяет массив <xref:System.Decimal> значений, а затем передает каждое значение <xref:System.Numerics.BigInteger.%23ctor%28System.Decimal%29> в конструктор.</span><span class="sxs-lookup"><span data-stu-id="d7187-218">It defines an array of <xref:System.Decimal> values, and then passes each value to the <xref:System.Numerics.BigInteger.%23ctor%28System.Decimal%29> constructor.</span></span> <span data-ttu-id="d7187-219">Обратите внимание <xref:System.Decimal> , что при назначении <xref:System.Numerics.BigInteger> объекту значение усекается, а не округляется.</span><span class="sxs-lookup"><span data-stu-id="d7187-219">Note that the <xref:System.Decimal> value is truncated instead of rounded when it is assigned to the <xref:System.Numerics.BigInteger> object.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.ctors#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.ctors/cs/Example2.cs#4)]
 [!code-vb[System.Numerics.BigInteger.ctors#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.ctors/vb/Example2.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BigInteger (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.#ctor(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BigInteger(double value);" />
      <MemberSignature Language="F#" Value="new System.Numerics.BigInteger : double -&gt; System.Numerics.BigInteger" Usage="new System.Numerics.BigInteger value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d7187-220">Значение с плавающей точкой двойной точности.</span><span class="sxs-lookup"><span data-stu-id="d7187-220">A double-precision floating-point value.</span></span></param>
        <summary><span data-ttu-id="d7187-221">Инициализирует новый экземпляр структуры <see cref="T:System.Numerics.BigInteger" />, используя значение с плавающей запятой двойной точности.</span><span class="sxs-lookup"><span data-stu-id="d7187-221">Initializes a new instance of the <see cref="T:System.Numerics.BigInteger" /> structure using a double-precision floating-point value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7187-222">При создании экземпляра `value` <xref:System.Numerics.BigInteger> объекта усечение дробной части параметра усекается.</span><span class="sxs-lookup"><span data-stu-id="d7187-222">Any fractional part of the `value` parameter is truncated when instantiating a <xref:System.Numerics.BigInteger> object.</span></span>  
  
 <span data-ttu-id="d7187-223">Из-за нехватки точности <xref:System.Double> типа данных вызов этого конструктора может привести к потере данных.</span><span class="sxs-lookup"><span data-stu-id="d7187-223">Because of the lack of precision of the <xref:System.Double> data type, calling this constructor can cause data loss.</span></span>  
  
 <span data-ttu-id="d7187-224">Значение, полученное в результате вызова этого конструктора, идентично значению, полученному в результате явного <xref:System.Double> присваивания значения <xref:System.Numerics.BigInteger>. <xref:System.Numerics.BigInteger></span><span class="sxs-lookup"><span data-stu-id="d7187-224">The <xref:System.Numerics.BigInteger> value that results from calling this constructor is identical to the value that results from explicitly assigning a <xref:System.Double> value to a <xref:System.Numerics.BigInteger>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d7187-225">В следующем примере показано использование <xref:System.Numerics.BigInteger.%23ctor%28System.Double%29> конструктора для создания экземпляра <xref:System.Numerics.BigInteger> объекта.</span><span class="sxs-lookup"><span data-stu-id="d7187-225">The following example illustrates the use of the <xref:System.Numerics.BigInteger.%23ctor%28System.Double%29> constructor to instantiate a <xref:System.Numerics.BigInteger> object.</span></span> <span data-ttu-id="d7187-226">Кроме того, здесь показана вероятность потери точности, которая может возникнуть при <xref:System.Double> использовании типа данных.</span><span class="sxs-lookup"><span data-stu-id="d7187-226">It also illustrates the loss of precision that may occur when you use the <xref:System.Double> data type.</span></span> <span data-ttu-id="d7187-227">Присваивается большое значение, которое затем присваивается <xref:System.Numerics.BigInteger> объекту. <xref:System.Double></span><span class="sxs-lookup"><span data-stu-id="d7187-227">A <xref:System.Double> is assigned a large value, which is then assigned to a <xref:System.Numerics.BigInteger> object.</span></span> <span data-ttu-id="d7187-228">Как видно из выходных данных, это назначение включает в себя потери точности.</span><span class="sxs-lookup"><span data-stu-id="d7187-228">As the output shows, this assignment involves a loss of precision.</span></span> <span data-ttu-id="d7187-229">Затем оба значения увеличиваются на единицу.</span><span class="sxs-lookup"><span data-stu-id="d7187-229">Both values are then incremented by one.</span></span> <span data-ttu-id="d7187-230">Выходные данные показывают, что <xref:System.Numerics.BigInteger> объект отражает измененное значение, а <xref:System.Double> объект — нет.</span><span class="sxs-lookup"><span data-stu-id="d7187-230">The output shows that the <xref:System.Numerics.BigInteger> object reflects the changed value, whereas the <xref:System.Double> object does not.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.ctors#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.ctors/cs/Example2.cs#5)]
 [!code-vb[System.Numerics.BigInteger.ctors#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.ctors/vb/Example2.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="d7187-231"><paramref name="value" /> имеет значение <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NegativeInfinity" /> или <see cref="F:System.Double.PositiveInfinity" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-231"><paramref name="value" /> is <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NegativeInfinity" />, or <see cref="F:System.Double.PositiveInfinity" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BigInteger (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BigInteger(int value);" />
      <MemberSignature Language="F#" Value="new System.Numerics.BigInteger : int -&gt; System.Numerics.BigInteger" Usage="new System.Numerics.BigInteger value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d7187-232">32-разрядное знаковое целое число.</span><span class="sxs-lookup"><span data-stu-id="d7187-232">A 32-bit signed integer.</span></span></param>
        <summary><span data-ttu-id="d7187-233">Инициализирует новый экземпляр структуры <see cref="T:System.Numerics.BigInteger" />, используя 32-разрядное знаковое целое число.</span><span class="sxs-lookup"><span data-stu-id="d7187-233">Initializes a new instance of the <see cref="T:System.Numerics.BigInteger" /> structure using a 32-bit signed integer value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7187-234">При создании экземпляра <xref:System.Numerics.BigInteger> объекта с помощью этого конструктора потери точности не происходит.</span><span class="sxs-lookup"><span data-stu-id="d7187-234">There is no loss of precision when instantiating a <xref:System.Numerics.BigInteger> object by using this constructor.</span></span>  
  
 <span data-ttu-id="d7187-235">Значение, полученное в результате вызова этого конструктора, идентично значению, полученному в результате <xref:System.Int32> присвоения значения <xref:System.Numerics.BigInteger>. <xref:System.Numerics.BigInteger></span><span class="sxs-lookup"><span data-stu-id="d7187-235">The <xref:System.Numerics.BigInteger> value that results from calling this constructor is identical to the value that results from assigning an <xref:System.Int32> value to a <xref:System.Numerics.BigInteger>.</span></span>  
  
 <span data-ttu-id="d7187-236"><xref:System.Int16> <xref:System.Byte> <xref:System.UInt16> <xref:System.SByte>Структура не включает конструкторы с параметром типа,, или. <xref:System.Numerics.BigInteger></span><span class="sxs-lookup"><span data-stu-id="d7187-236">The <xref:System.Numerics.BigInteger> structure does not include constructors with a parameter of type <xref:System.Byte>, <xref:System.Int16>, <xref:System.SByte>, or <xref:System.UInt16>.</span></span> <span data-ttu-id="d7187-237"><xref:System.Int32> Однако тип поддерживает неявное преобразование 8-разрядных и 16-разрядных целых чисел со знаком в 32-разрядные целые числа.</span><span class="sxs-lookup"><span data-stu-id="d7187-237">However, the <xref:System.Int32> type supports the implicit conversion of 8-bit and 16-bit signed and unsigned integers to signed 32-bit integers.</span></span> <span data-ttu-id="d7187-238">В результате этот конструктор вызывается, если `value` имеет один из этих четырех целочисленных типов.</span><span class="sxs-lookup"><span data-stu-id="d7187-238">As a result, this constructor is called if `value` is any one of these four integral types.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d7187-239">В следующем примере вызывается <xref:System.Numerics.BigInteger.%23ctor%28System.Int32%29> конструктор для <xref:System.Numerics.BigInteger> создания экземпляров значений из массива 32-разрядных целых чисел.</span><span class="sxs-lookup"><span data-stu-id="d7187-239">The following example calls the <xref:System.Numerics.BigInteger.%23ctor%28System.Int32%29> constructor to instantiate <xref:System.Numerics.BigInteger> values from an array of 32-bit integers.</span></span> <span data-ttu-id="d7187-240">Он также использует неявное преобразование для присвоения каждому значению <xref:System.Numerics.BigInteger> 32-разрядного целого числа переменной.</span><span class="sxs-lookup"><span data-stu-id="d7187-240">It also uses implicit conversion to assign each 32-bit integer value to a <xref:System.Numerics.BigInteger> variable.</span></span> <span data-ttu-id="d7187-241">Затем эти два значения сравниваются, чтобы определить, что результирующие <xref:System.Numerics.BigInteger> значения одинаковы.</span><span class="sxs-lookup"><span data-stu-id="d7187-241">It then compares the two values to establish that the resulting <xref:System.Numerics.BigInteger> values are the same.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.ctors#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.ctors/cs/Example2.cs#6)]
 [!code-vb[System.Numerics.BigInteger.ctors#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.ctors/vb/Example2.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BigInteger (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.#ctor(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BigInteger(long value);" />
      <MemberSignature Language="F#" Value="new System.Numerics.BigInteger : int64 -&gt; System.Numerics.BigInteger" Usage="new System.Numerics.BigInteger value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d7187-242">64-разрядное целое число со знаком.</span><span class="sxs-lookup"><span data-stu-id="d7187-242">A 64-bit signed integer.</span></span></param>
        <summary><span data-ttu-id="d7187-243">Инициализирует новый экземпляр структуры <see cref="T:System.Numerics.BigInteger" />, используя 64-разрядное целое число со знаком.</span><span class="sxs-lookup"><span data-stu-id="d7187-243">Initializes a new instance of the <see cref="T:System.Numerics.BigInteger" /> structure using a 64-bit signed integer value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7187-244">При создании экземпляра <xref:System.Numerics.BigInteger> объекта с помощью этого конструктора потери точности не происходит.</span><span class="sxs-lookup"><span data-stu-id="d7187-244">There is no loss of precision when instantiating a <xref:System.Numerics.BigInteger> object by using this constructor.</span></span>  
  
 <span data-ttu-id="d7187-245">Значение, полученное в результате вызова этого конструктора, идентично значению, полученному в результате <xref:System.Int64> присвоения значения <xref:System.Numerics.BigInteger>. <xref:System.Numerics.BigInteger></span><span class="sxs-lookup"><span data-stu-id="d7187-245">The <xref:System.Numerics.BigInteger> value that results from calling this constructor is identical to the value that results from assigning an <xref:System.Int64> value to a <xref:System.Numerics.BigInteger>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d7187-246">В следующем примере вызывается <xref:System.Numerics.BigInteger.%23ctor%28System.Int64%29> конструктор для <xref:System.Numerics.BigInteger> создания экземпляров значений из массива 64-разрядных целых чисел.</span><span class="sxs-lookup"><span data-stu-id="d7187-246">The following example calls the <xref:System.Numerics.BigInteger.%23ctor%28System.Int64%29> constructor to instantiate <xref:System.Numerics.BigInteger> values from an array of 64-bit integers.</span></span> <span data-ttu-id="d7187-247">Он также использует неявное преобразование для присвоения каждому значению <xref:System.Numerics.BigInteger> 64-разрядного целого числа переменной.</span><span class="sxs-lookup"><span data-stu-id="d7187-247">It also uses implicit conversion to assign each 64-bit integer value to a <xref:System.Numerics.BigInteger> variable.</span></span> <span data-ttu-id="d7187-248">Затем эти два значения сравниваются, чтобы определить, что результирующие <xref:System.Numerics.BigInteger> значения одинаковы.</span><span class="sxs-lookup"><span data-stu-id="d7187-248">It then compares the two values to establish that the resulting <xref:System.Numerics.BigInteger> values are the same.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.ctors#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.ctors/cs/Example2.cs#7)]
 [!code-vb[System.Numerics.BigInteger.ctors#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.ctors/vb/Example2.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BigInteger (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.#ctor(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BigInteger(float value);" />
      <MemberSignature Language="F#" Value="new System.Numerics.BigInteger : single -&gt; System.Numerics.BigInteger" Usage="new System.Numerics.BigInteger value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d7187-249">Значение с плавающей точкой одинарной точности.</span><span class="sxs-lookup"><span data-stu-id="d7187-249">A single-precision floating-point value.</span></span></param>
        <summary><span data-ttu-id="d7187-250">Инициализирует новый экземпляр структуры <see cref="T:System.Numerics.BigInteger" />, используя значение с плавающей запятой одиночной точности.</span><span class="sxs-lookup"><span data-stu-id="d7187-250">Initializes a new instance of the <see cref="T:System.Numerics.BigInteger" /> structure using a single-precision floating-point value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7187-251">При создании экземпляра `value` <xref:System.Numerics.BigInteger> объекта усечение дробной части параметра усекается.</span><span class="sxs-lookup"><span data-stu-id="d7187-251">Any fractional part of the `value` parameter is truncated when instantiating a <xref:System.Numerics.BigInteger> object.</span></span>  
  
 <span data-ttu-id="d7187-252">Из-за нехватки точности <xref:System.Single> типа данных вызов этого конструктора может привести к утрате данных.</span><span class="sxs-lookup"><span data-stu-id="d7187-252">Because of the lack of precision of the <xref:System.Single> data type, calling this constructor can result in data loss.</span></span>  
  
 <span data-ttu-id="d7187-253">Значение, полученное в результате вызова этого конструктора, идентично значению, полученному в результате явного <xref:System.Single> присваивания значения <xref:System.Numerics.BigInteger>. <xref:System.Numerics.BigInteger></span><span class="sxs-lookup"><span data-stu-id="d7187-253">The <xref:System.Numerics.BigInteger> value that results from calling this constructor is identical to the value that results from explicitly assigning a <xref:System.Single> value to a <xref:System.Numerics.BigInteger>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d7187-254">В следующем примере показано использование <xref:System.Numerics.BigInteger.%23ctor%28System.Single%29> конструктора для создания экземпляра <xref:System.Numerics.BigInteger> объекта.</span><span class="sxs-lookup"><span data-stu-id="d7187-254">The following example illustrates the use of the <xref:System.Numerics.BigInteger.%23ctor%28System.Single%29> constructor to instantiate a <xref:System.Numerics.BigInteger> object.</span></span> <span data-ttu-id="d7187-255">Кроме того, здесь показана вероятность потери точности, которая может возникнуть при <xref:System.Single> использовании типа данных.</span><span class="sxs-lookup"><span data-stu-id="d7187-255">It also illustrates the loss of precision that may occur when you use the <xref:System.Single> data type.</span></span> <span data-ttu-id="d7187-256">Присваивается большое отрицательное значение, которое затем присваивается <xref:System.Numerics.BigInteger> объекту. <xref:System.Single></span><span class="sxs-lookup"><span data-stu-id="d7187-256">A <xref:System.Single> is assigned a large negative value, which is then assigned to a <xref:System.Numerics.BigInteger> object.</span></span> <span data-ttu-id="d7187-257">Как видно из выходных данных, это назначение включает в себя потери точности.</span><span class="sxs-lookup"><span data-stu-id="d7187-257">As the output shows, this assignment involves a loss of precision.</span></span> <span data-ttu-id="d7187-258">Затем оба значения увеличиваются на единицу.</span><span class="sxs-lookup"><span data-stu-id="d7187-258">Both values are then incremented by one.</span></span> <span data-ttu-id="d7187-259">Выходные данные показывают, что <xref:System.Numerics.BigInteger> объект отражает измененное значение, а <xref:System.Single> объект — нет.</span><span class="sxs-lookup"><span data-stu-id="d7187-259">The output shows that the <xref:System.Numerics.BigInteger> object reflects the changed value, whereas the <xref:System.Single> object does not.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.ctors#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.ctors/cs/Example2.cs#8)]
 [!code-vb[System.Numerics.BigInteger.ctors#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.ctors/vb/Example2.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="d7187-260"><paramref name="value" /> имеет значение <see cref="F:System.Single.NaN" />, <see cref="F:System.Single.NegativeInfinity" /> или <see cref="F:System.Single.PositiveInfinity" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-260"><paramref name="value" /> is <see cref="F:System.Single.NaN" />, <see cref="F:System.Single.NegativeInfinity" />, or <see cref="F:System.Single.PositiveInfinity" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BigInteger (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.#ctor(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As UInteger)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BigInteger(System::UInt32 value);" />
      <MemberSignature Language="F#" Value="new System.Numerics.BigInteger : uint32 -&gt; System.Numerics.BigInteger" Usage="new System.Numerics.BigInteger value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d7187-261">32-разрядное целое значение без знака.</span><span class="sxs-lookup"><span data-stu-id="d7187-261">An unsigned 32-bit integer value.</span></span></param>
        <summary><span data-ttu-id="d7187-262">Инициализирует новый экземпляр структуры <see cref="T:System.Numerics.BigInteger" />, используя 32-разрядное целое число без знака.</span><span class="sxs-lookup"><span data-stu-id="d7187-262">Initializes a new instance of the <see cref="T:System.Numerics.BigInteger" /> structure using an unsigned 32-bit integer value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7187-263">При создании экземпляра <xref:System.Numerics.BigInteger> с помощью этого конструктора нет потерь точности.</span><span class="sxs-lookup"><span data-stu-id="d7187-263">There is no loss of precision when instantiating a <xref:System.Numerics.BigInteger> using this constructor.</span></span>  
  
 <span data-ttu-id="d7187-264">Значение, полученное в результате вызова этого конструктора, идентично значению, полученному в результате <xref:System.UInt32> присвоения значения <xref:System.Numerics.BigInteger>. <xref:System.Numerics.BigInteger></span><span class="sxs-lookup"><span data-stu-id="d7187-264">The <xref:System.Numerics.BigInteger> value that results from calling this constructor is identical to the value that results from assigning a <xref:System.UInt32> value to a <xref:System.Numerics.BigInteger>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d7187-265">В следующем примере <xref:System.Numerics.BigInteger.%23ctor%28System.UInt32%29> конструктор и оператор присваивания используются для инициализации <xref:System.Numerics.BigInteger> значений из массива беззнаковых 32-разрядных целых чисел.</span><span class="sxs-lookup"><span data-stu-id="d7187-265">The following example uses the <xref:System.Numerics.BigInteger.%23ctor%28System.UInt32%29> constructor and an assignment statement to initialize <xref:System.Numerics.BigInteger> values from an array of unsigned 32-bit integers.</span></span> <span data-ttu-id="d7187-266">Затем эти два значения сравниваются, чтобы продемонстрировать, что два метода инициализации <xref:System.Numerics.BigInteger> значения дают одинаковые результаты.</span><span class="sxs-lookup"><span data-stu-id="d7187-266">It then compares the two values to demonstrate that the two methods of initializing a <xref:System.Numerics.BigInteger> value produce identical results.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.ctors#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.ctors/cs/Example2.cs#9)]
 [!code-vb[System.Numerics.BigInteger.ctors#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.ctors/vb/Example2.vb#9)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Numerics.BigInteger.#ctor(System.Int64)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BigInteger (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.#ctor(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As ULong)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BigInteger(System::UInt64 value);" />
      <MemberSignature Language="F#" Value="new System.Numerics.BigInteger : uint64 -&gt; System.Numerics.BigInteger" Usage="new System.Numerics.BigInteger value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d7187-267">64-разрядное целое число без знака.</span><span class="sxs-lookup"><span data-stu-id="d7187-267">An unsigned 64-bit integer.</span></span></param>
        <summary><span data-ttu-id="d7187-268">Инициализирует новый экземпляр структуры <see cref="T:System.Numerics.BigInteger" />, используя 64-разрядное целое число без знака.</span><span class="sxs-lookup"><span data-stu-id="d7187-268">Initializes a new instance of the <see cref="T:System.Numerics.BigInteger" /> structure with an unsigned 64-bit integer value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7187-269">При создании экземпляра <xref:System.Numerics.BigInteger> с помощью этого конструктора нет потерь точности.</span><span class="sxs-lookup"><span data-stu-id="d7187-269">There is no loss of precision when instantiating a <xref:System.Numerics.BigInteger> using this constructor.</span></span>  
  
 <span data-ttu-id="d7187-270">Значение, полученное в результате вызова этого конструктора, идентично значению, полученному в результате <xref:System.UInt64> присвоения значения <xref:System.Numerics.BigInteger>. <xref:System.Numerics.BigInteger></span><span class="sxs-lookup"><span data-stu-id="d7187-270">The <xref:System.Numerics.BigInteger> value that results from calling this constructor is identical to the value that results from assigning a <xref:System.UInt64> value to a <xref:System.Numerics.BigInteger>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d7187-271">В следующем примере <xref:System.Numerics.BigInteger.%23ctor%28System.UInt64%29> конструктор используется для создания экземпляра <xref:System.Numerics.BigInteger> объекта <xref:System.UInt64.MaxValue>, значение которого равно.</span><span class="sxs-lookup"><span data-stu-id="d7187-271">The following example uses the <xref:System.Numerics.BigInteger.%23ctor%28System.UInt64%29> constructor to instantiate a <xref:System.Numerics.BigInteger> object whose value is equal to <xref:System.UInt64.MaxValue>.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.ctors#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.ctors/cs/Example2.cs#10)]
 [!code-vb[System.Numerics.BigInteger.ctors#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.ctors/vb/Example2.vb#10)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Numerics.BigInteger.#ctor(System.Double)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BigInteger (ReadOnlySpan&lt;byte&gt; value, bool isUnsigned = false, bool isBigEndian = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; value, bool isUnsigned, bool isBigEndian) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.#ctor(System.ReadOnlySpan{System.Byte},System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As ReadOnlySpan(Of Byte), Optional isUnsigned As Boolean = false, Optional isBigEndian As Boolean = false)" />
      <MemberSignature Language="F#" Value="new System.Numerics.BigInteger : ReadOnlySpan&lt;byte&gt; * bool * bool -&gt; System.Numerics.BigInteger" Usage="new System.Numerics.BigInteger (value, isUnsigned, isBigEndian)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.ReadOnlySpan&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="isUnsigned" Type="System.Boolean" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="isBigEndian" Type="System.Boolean" Index="2" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="isUnsigned">To be added.</param>
        <param name="isBigEndian">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Abs">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger Abs (System.Numerics.BigInteger value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.BigInteger Abs(valuetype System.Numerics.BigInteger value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.Abs(System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Abs (value As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger Abs(System::Numerics::BigInteger value);" />
      <MemberSignature Language="F#" Value="static member Abs : System.Numerics.BigInteger -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.Abs value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d7187-272">Число.</span><span class="sxs-lookup"><span data-stu-id="d7187-272">A number.</span></span></param>
        <summary><span data-ttu-id="d7187-273">Получает абсолютное значение объекта <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-273">Gets the absolute value of a <see cref="T:System.Numerics.BigInteger" /> object.</span></span></summary>
        <returns><span data-ttu-id="d7187-274">Абсолютное значение параметра <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-274">The absolute value of <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7187-275">Абсолютное значение числа — это число без знака, как показано в следующей таблице.</span><span class="sxs-lookup"><span data-stu-id="d7187-275">The absolute value of a number is that number without its sign, as shown in the following table.</span></span>  
  
|<span data-ttu-id="d7187-276">Параметр `value`</span><span class="sxs-lookup"><span data-stu-id="d7187-276">`value` parameter</span></span>|<span data-ttu-id="d7187-277">Возвращаемое значение</span><span class="sxs-lookup"><span data-stu-id="d7187-277">Return value</span></span>|  
|-----------------------|------------------|  
|<span data-ttu-id="d7187-278">`value`> = 0</span><span class="sxs-lookup"><span data-stu-id="d7187-278">`value` >= 0</span></span>|`value`|  
|<span data-ttu-id="d7187-279">`value` < 0</span><span class="sxs-lookup"><span data-stu-id="d7187-279">`value` < 0</span></span>|<span data-ttu-id="d7187-280">`value` \* -1</span><span class="sxs-lookup"><span data-stu-id="d7187-280">`value` \* -1</span></span>|  
  
 <span data-ttu-id="d7187-281">Метод эквивалентен <xref:System.Math.Abs%2A?displayProperty=nameWithType> методу для числовых типов-примитивов. <xref:System.Numerics.BigInteger.Abs%2A></span><span class="sxs-lookup"><span data-stu-id="d7187-281">The <xref:System.Numerics.BigInteger.Abs%2A> method is equivalent to the <xref:System.Math.Abs%2A?displayProperty=nameWithType> method for the primitive numeric types.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d7187-282">В следующем примере используется <xref:System.Numerics.BigInteger.Abs%2A> метод для <xref:System.Numerics.BigInteger> преобразования значения из двух представлений дополнения в представление знака и величины перед их сериализацией в файл.</span><span class="sxs-lookup"><span data-stu-id="d7187-282">The following example uses the <xref:System.Numerics.BigInteger.Abs%2A> method to convert a <xref:System.Numerics.BigInteger> value from two's complement representation to sign-and-magnitude representation before serializing it to a file.</span></span> <span data-ttu-id="d7187-283">После этого данные в файле десериализуется и присваиваются новому <xref:System.Numerics.BigInteger> объекту.</span><span class="sxs-lookup"><span data-stu-id="d7187-283">Data in the file is then deserialized and assigned to a new <xref:System.Numerics.BigInteger> object.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Abs#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Abs/cs/Abs1.cs#1)]
 [!code-vb[System.Numerics.BigInteger.Abs#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Abs/vb/Abs1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Math.Abs(System.SByte)" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger Add (System.Numerics.BigInteger left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.BigInteger Add(valuetype System.Numerics.BigInteger left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.Add(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Add (left As BigInteger, right As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger Add(System::Numerics::BigInteger left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member Add : System.Numerics.BigInteger * System.Numerics.BigInteger -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.Add (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="d7187-284">Первое из складываемых значений.</span><span class="sxs-lookup"><span data-stu-id="d7187-284">The first value to add.</span></span></param>
        <param name="right"><span data-ttu-id="d7187-285">Второе из складываемых значений.</span><span class="sxs-lookup"><span data-stu-id="d7187-285">The second value to add.</span></span></param>
        <summary><span data-ttu-id="d7187-286">Складывает два значения <see cref="T:System.Numerics.BigInteger" /> и возвращает результат.</span><span class="sxs-lookup"><span data-stu-id="d7187-286">Adds two <see cref="T:System.Numerics.BigInteger" /> values and returns the result.</span></span></summary>
        <returns><span data-ttu-id="d7187-287">Сумма <paramref name="left" /> и <paramref name="right" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-287">The sum of <paramref name="left" /> and <paramref name="right" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7187-288">Языки, не поддерживающие перегрузку операторов или пользовательские операторы, могут использовать <xref:System.Numerics.BigInteger.Add%2A> метод для выполнения <xref:System.Numerics.BigInteger> сложения значений.</span><span class="sxs-lookup"><span data-stu-id="d7187-288">Languages that do not support operator overloading or custom operators can use the <xref:System.Numerics.BigInteger.Add%2A> method to perform addition using <xref:System.Numerics.BigInteger> values.</span></span>  
  
 <span data-ttu-id="d7187-289">Метод является удобным заменой для оператора сложения при создании экземпляра <xref:System.Numerics.BigInteger> переменной путем присвоения ей суммы, полученной в результате сложения, как показано в следующем примере. <xref:System.Numerics.BigInteger.Add%2A></span><span class="sxs-lookup"><span data-stu-id="d7187-289">The <xref:System.Numerics.BigInteger.Add%2A> method is a useful substitute for the addition operator when instantiating a <xref:System.Numerics.BigInteger> variable by assigning it a sum that results from addition, as shown in the following example.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.OperationMethods#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.OperationMethods/cs/Multiply1.cs#2)]
 [!code-vb[System.Numerics.BigInteger.OperationMethods#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.OperationMethods/vb/Multiply1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Numerics.BigInteger.op_Addition(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public static int Compare (System.Numerics.BigInteger left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Compare(valuetype System.Numerics.BigInteger left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.Compare(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compare (left As BigInteger, right As BigInteger) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Compare(System::Numerics::BigInteger left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member Compare : System.Numerics.BigInteger * System.Numerics.BigInteger -&gt; int" Usage="System.Numerics.BigInteger.Compare (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="d7187-290">Первое сравниваемое значение.</span><span class="sxs-lookup"><span data-stu-id="d7187-290">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="d7187-291">Второе сравниваемое значение.</span><span class="sxs-lookup"><span data-stu-id="d7187-291">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="d7187-292">Сравнивает два значения <see cref="T:System.Numerics.BigInteger" /> и возвращает целое значение, которое показывает, больше или меньше первое значение по сравнению со вторым или равно ему.</span><span class="sxs-lookup"><span data-stu-id="d7187-292">Compares two <see cref="T:System.Numerics.BigInteger" /> values and returns an integer that indicates whether the first value is less than, equal to, or greater than the second value.</span></span></summary>
        <returns><span data-ttu-id="d7187-293">Знаковое целое число, которое определяет относительные значения параметров <paramref name="left" /> и <paramref name="right" />, как показано в следующей таблице.</span><span class="sxs-lookup"><span data-stu-id="d7187-293">A signed integer that indicates the relative values of <paramref name="left" /> and <paramref name="right" />, as shown in the following table.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="d7187-294">Значение</span><span class="sxs-lookup"><span data-stu-id="d7187-294">Value</span></span> 
 </term><description> <span data-ttu-id="d7187-295">Условие</span><span class="sxs-lookup"><span data-stu-id="d7187-295">Condition</span></span> 
 </description></listheader><item><term> <span data-ttu-id="d7187-296">Меньше нуля</span><span class="sxs-lookup"><span data-stu-id="d7187-296">Less than zero</span></span> 
 </term><description><span data-ttu-id="d7187-297">Значение <paramref name="left" /> меньше <paramref name="right" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-297"><paramref name="left" /> is less than <paramref name="right" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="d7187-298">Нуль</span><span class="sxs-lookup"><span data-stu-id="d7187-298">Zero</span></span> 
 </term><description><span data-ttu-id="d7187-299"><paramref name="left" /> равняется <paramref name="right" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-299"><paramref name="left" /> equals <paramref name="right" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="d7187-300">Больше нуля</span><span class="sxs-lookup"><span data-stu-id="d7187-300">Greater than zero</span></span> 
 </term><description><span data-ttu-id="d7187-301">Значение <paramref name="left" /> больше значения <paramref name="right" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-301"><paramref name="left" /> is greater than <paramref name="right" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7187-302">Несмотря на <xref:System.Numerics.BigInteger> то, что тип не имеет фиксированного диапазона <xref:System.Numerics.BigInteger> , сравнение значений не характеризуется отсутствием точности, которое характеризует сравнение чисел с плавающей запятой.</span><span class="sxs-lookup"><span data-stu-id="d7187-302">Although the <xref:System.Numerics.BigInteger> type has no fixed range, comparisons of <xref:System.Numerics.BigInteger> values are not characterized by the lack of precision that characterizes the comparison of floating-point numbers.</span></span> <span data-ttu-id="d7187-303">В следующем примере сравниваются два <xref:System.Numerics.BigInteger> значения, которые отличаются друг от друга и имеют 1 896 цифр.</span><span class="sxs-lookup"><span data-stu-id="d7187-303">The following example compares two <xref:System.Numerics.BigInteger> values that differ by one and that each have 1,896 digits.</span></span> <span data-ttu-id="d7187-304"><xref:System.Numerics.BigInteger.Compare%2A> Метод правильно сообщает, что два значения не равны.</span><span class="sxs-lookup"><span data-stu-id="d7187-304">The <xref:System.Numerics.BigInteger.Compare%2A> method correctly reports that the two values are not equal.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Compare#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Compare/cs/Compare1.cs#1)]
 [!code-vb[System.Numerics.BigInteger.Compare#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Compare/vb/Compare1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.CompareTo" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CompareTo">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d7187-305">Сравнивает значение данного экземпляра с другим значением и возвращает целое число, которое показывает, является ли значение данного экземпляра меньшим, большим или равным другому значению.</span><span class="sxs-lookup"><span data-stu-id="d7187-305">Compares the value of this instance with another value and returns an integer that indicates whether the value of this instance is less than, equal to, or greater than the other value.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (long other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 CompareTo(int64 other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.CompareTo(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (other As Long) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int CompareTo(long other);" />
      <MemberSignature Language="F#" Value="member this.CompareTo : int64 -&gt; int" Usage="bigInteger.CompareTo other" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="d7187-306">64-разрядное знаковое целое число для сравнения.</span><span class="sxs-lookup"><span data-stu-id="d7187-306">The signed 64-bit integer to compare.</span></span></param>
        <summary><span data-ttu-id="d7187-307">Сравнивает данный экземпляр с 64-разрядным знаковым целым числом и возвращает целое число, которое показывает, является ли значение данного экземпляра меньшим, большим или равным значению 64-битового знакового целого числа.</span><span class="sxs-lookup"><span data-stu-id="d7187-307">Compares this instance to a signed 64-bit integer and returns an integer that indicates whether the value of this instance is less than, equal to, or greater than the value of the signed 64-bit integer.</span></span></summary>
        <returns><span data-ttu-id="d7187-308">Знаковое целое число, определяющее, как соотносятся между собой данный экземпляр и объект <paramref name="other" />. Возможные соотношения показаны в следующей таблице.</span><span class="sxs-lookup"><span data-stu-id="d7187-308">A signed integer value that indicates the relationship of this instance to <paramref name="other" />, as shown in the following table.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="d7187-309">Возвращаемое значение</span><span class="sxs-lookup"><span data-stu-id="d7187-309">Return value</span></span> 
 </term><description> <span data-ttu-id="d7187-310">Описание</span><span class="sxs-lookup"><span data-stu-id="d7187-310">Description</span></span> 
 </description></listheader><item><term> <span data-ttu-id="d7187-311">Меньше нуля</span><span class="sxs-lookup"><span data-stu-id="d7187-311">Less than zero</span></span> 
 </term><description> <span data-ttu-id="d7187-312">Текущий экземпляр меньше значения параметра <paramref name="other" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-312">The current instance is less than <paramref name="other" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="d7187-313">Нуль</span><span class="sxs-lookup"><span data-stu-id="d7187-313">Zero</span></span> 
 </term><description> <span data-ttu-id="d7187-314">Текущий экземпляр равен значению параметра <paramref name="other" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-314">The current instance equals <paramref name="other" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="d7187-315">Больше нуля</span><span class="sxs-lookup"><span data-stu-id="d7187-315">Greater than zero</span></span> 
 </term><description> <span data-ttu-id="d7187-316">Текущий экземпляр больше значения параметра <paramref name="other" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-316">The current instance is greater than <paramref name="other" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7187-317">Если `other` <xref:System.Int16>параметр имеетзначение<xref:System.SByte> <xref:System.Int64> <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29> , <xref:System.Byte> <xref:System.Int32> ,,<xref:System.UInt32> , или, он неявно преобразуется в значение при вызове метода. <xref:System.UInt16></span><span class="sxs-lookup"><span data-stu-id="d7187-317">If `other` is a <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.SByte>, <xref:System.UInt16>, or <xref:System.UInt32> value, it is implicitly converted to an <xref:System.Int64> value when the <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29> method is called.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d7187-318">В следующем примере показан результат вызова <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29> метода с целочисленными значениями.</span><span class="sxs-lookup"><span data-stu-id="d7187-318">The following example illustrates the result of calling the <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29> method with integral values.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.CompareTo#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.CompareTo/cs/Example2.cs#3)]
 [!code-vb[System.Numerics.BigInteger.CompareTo#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.CompareTo/vb/Example2.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (System.Numerics.BigInteger other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(valuetype System.Numerics.BigInteger other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.CompareTo(System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (other As BigInteger) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(System::Numerics::BigInteger other);" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : System.Numerics.BigInteger -&gt; int&#xA;override this.CompareTo : System.Numerics.BigInteger -&gt; int" Usage="bigInteger.CompareTo other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable`1.CompareTo(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="d7187-319">Объект для сравнения.</span><span class="sxs-lookup"><span data-stu-id="d7187-319">The object to compare.</span></span></param>
        <summary><span data-ttu-id="d7187-320">Сравнивает данный экземпляр с другим экземпляром <see cref="T:System.Numerics.BigInteger" /> и возвращает целое число, которое показывает, является ли значение данного экземпляра меньшим, большим или равным значению указанного объекта.</span><span class="sxs-lookup"><span data-stu-id="d7187-320">Compares this instance to a second <see cref="T:System.Numerics.BigInteger" /> and returns an integer that indicates whether the value of this instance is less than, equal to, or greater than the value of the specified object.</span></span></summary>
        <returns><span data-ttu-id="d7187-321">Знаковое целое число, определяющее, как соотносятся между собой данный экземпляр и объект <paramref name="other" />. Возможные соотношения показаны в следующей таблице.</span><span class="sxs-lookup"><span data-stu-id="d7187-321">A signed integer value that indicates the relationship of this instance to <paramref name="other" />, as shown in the following table.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="d7187-322">Возвращаемое значение</span><span class="sxs-lookup"><span data-stu-id="d7187-322">Return value</span></span> 
 </term><description> <span data-ttu-id="d7187-323">Описание</span><span class="sxs-lookup"><span data-stu-id="d7187-323">Description</span></span> 
 </description></listheader><item><term> <span data-ttu-id="d7187-324">Меньше нуля</span><span class="sxs-lookup"><span data-stu-id="d7187-324">Less than zero</span></span> 
 </term><description> <span data-ttu-id="d7187-325">Текущий экземпляр меньше значения параметра <paramref name="other" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-325">The current instance is less than <paramref name="other" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="d7187-326">Нуль</span><span class="sxs-lookup"><span data-stu-id="d7187-326">Zero</span></span> 
 </term><description> <span data-ttu-id="d7187-327">Текущий экземпляр равен значению параметра <paramref name="other" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-327">The current instance equals <paramref name="other" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="d7187-328">Больше нуля</span><span class="sxs-lookup"><span data-stu-id="d7187-328">Greater than zero</span></span> 
 </term><description> <span data-ttu-id="d7187-329">Текущий экземпляр больше значения параметра <paramref name="other" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-329">The current instance is greater than <paramref name="other" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7187-330">Эта перегрузка <xref:System.Numerics.BigInteger.CompareTo%2A> метода <xref:System.IComparable%601.CompareTo%2A?displayProperty=nameWithType> реализует метод.</span><span class="sxs-lookup"><span data-stu-id="d7187-330">This overload of the <xref:System.Numerics.BigInteger.CompareTo%2A> method implements the <xref:System.IComparable%601.CompareTo%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="d7187-331">Он используется объектами универсальной коллекции для упорядочивания элементов в коллекции.</span><span class="sxs-lookup"><span data-stu-id="d7187-331">It is used by generic collection objects to order the items in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d7187-332">В следующем примере показано использование <xref:System.Numerics.BigInteger.CompareTo%28System.Numerics.BigInteger%29> метода для упорядочивания `StarInfo` списка объектов.</span><span class="sxs-lookup"><span data-stu-id="d7187-332">The following example illustrates the use of the <xref:System.Numerics.BigInteger.CompareTo%28System.Numerics.BigInteger%29> method to order a list of `StarInfo` objects.</span></span> <span data-ttu-id="d7187-333">Каждый `StarInfo` объект предоставляет сведения об имени звезды и его расстоянии от земли в милях.</span><span class="sxs-lookup"><span data-stu-id="d7187-333">Each `StarInfo` object provides information about a star's name and its distance from the Earth in miles.</span></span> <span data-ttu-id="d7187-334">`StarInfo`реализует интерфейс, позволяющий `StarInfo` сортировать объекты по универсальным классам коллекций. <xref:System.IComparable%601></span><span class="sxs-lookup"><span data-stu-id="d7187-334">`StarInfo` implements the <xref:System.IComparable%601> interface, which enables `StarInfo` objects to be sorted by generic collection classes.</span></span> <span data-ttu-id="d7187-335">Его <xref:System.IComparable%601.CompareTo%2A?displayProperty=nameWithType> реализация просто заключает в <xref:System.Numerics.BigInteger.CompareTo%28System.Numerics.BigInteger%29>оболочку вызов.</span><span class="sxs-lookup"><span data-stu-id="d7187-335">Its <xref:System.IComparable%601.CompareTo%2A?displayProperty=nameWithType> implementation just wraps a call to <xref:System.Numerics.BigInteger.CompareTo%28System.Numerics.BigInteger%29>.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.CompareTo#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.CompareTo/cs/Example1.cs#1)]
 [!code-vb[System.Numerics.BigInteger.CompareTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.CompareTo/vb/Example1.vb#1)]  
  
 <span data-ttu-id="d7187-336">Затем следующий код создает четыре `StarInfo` объекта и сохраняет их в универсальном <xref:System.Collections.Generic.List%601> объекте.</span><span class="sxs-lookup"><span data-stu-id="d7187-336">The following code then instantiates four `StarInfo` objects and stores them in a generic <xref:System.Collections.Generic.List%601> object.</span></span> <span data-ttu-id="d7187-337"><xref:System.Collections.Generic.List%601.Sort%2A?displayProperty=nameWithType> После вызоваметодаобъектыотображаютсявпорядке`StarInfo` их расстояния от земли.</span><span class="sxs-lookup"><span data-stu-id="d7187-337">After the <xref:System.Collections.Generic.List%601.Sort%2A?displayProperty=nameWithType> method is called, `StarInfo` objects are displayed in order of their distance from the Earth.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.CompareTo#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.CompareTo/cs/Example1.cs#2)]
 [!code-vb[System.Numerics.BigInteger.CompareTo#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.CompareTo/vb/Example1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Numerics.BigInteger.Compare(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
        <altmember cref="T:System.IComparable`1" />
        <altmember cref="M:System.Numerics.BigInteger.Equals(System.Numerics.BigInteger)" />
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (obj As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : obj -&gt; int&#xA;override this.CompareTo : obj -&gt; int" Usage="bigInteger.CompareTo obj" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="d7187-338">Объект для сравнения.</span><span class="sxs-lookup"><span data-stu-id="d7187-338">The object to compare.</span></span></param>
        <summary><span data-ttu-id="d7187-339">Сравнивает данный экземпляр с указанным объектом и возвращает целое число, которое показывает, является ли значение данного экземпляра меньше, больше или равно значению заданного объекта.</span><span class="sxs-lookup"><span data-stu-id="d7187-339">Compares this instance to a specified object and returns an integer that indicates whether the value of this instance is less than, equal to, or greater than the value of the specified object.</span></span></summary>
        <returns><span data-ttu-id="d7187-340">Знаковое целое число, определяющее, как соотносятся между собой текущий экземпляр и параметр <paramref name="obj" />. Возможные соотношения показаны в следующей таблице.</span><span class="sxs-lookup"><span data-stu-id="d7187-340">A signed integer that indicates the relationship of the current instance to the <paramref name="obj" /> parameter, as shown in the following table.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="d7187-341">Возвращаемое значение</span><span class="sxs-lookup"><span data-stu-id="d7187-341">Return value</span></span> 
 </term><description> <span data-ttu-id="d7187-342">Описание</span><span class="sxs-lookup"><span data-stu-id="d7187-342">Description</span></span> 
 </description></listheader><item><term> <span data-ttu-id="d7187-343">Меньше нуля</span><span class="sxs-lookup"><span data-stu-id="d7187-343">Less than zero</span></span> 
 </term><description> <span data-ttu-id="d7187-344">Текущий экземпляр меньше значения параметра <paramref name="obj" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-344">The current instance is less than <paramref name="obj" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="d7187-345">Нуль</span><span class="sxs-lookup"><span data-stu-id="d7187-345">Zero</span></span> 
 </term><description> <span data-ttu-id="d7187-346">Текущий экземпляр равен значению параметра <paramref name="obj" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-346">The current instance equals <paramref name="obj" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="d7187-347">Больше нуля</span><span class="sxs-lookup"><span data-stu-id="d7187-347">Greater than zero</span></span> 
 </term><description> <span data-ttu-id="d7187-348">Текущий экземпляр больше значения параметра <paramref name="obj" /> или параметр <paramref name="obj" /> равен <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-348">The current instance is greater than <paramref name="obj" />, or the <paramref name="obj" /> parameter is <see langword="null" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7187-349">Эта перегрузка <xref:System.Numerics.BigInteger.CompareTo%2A> метода <xref:System.IComparable.CompareTo%2A?displayProperty=nameWithType> реализует метод.</span><span class="sxs-lookup"><span data-stu-id="d7187-349">This overload of the <xref:System.Numerics.BigInteger.CompareTo%2A> method implements the <xref:System.IComparable.CompareTo%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="d7187-350">Он используется объектами неуниверсальной коллекции для упорядочивания элементов в коллекции.</span><span class="sxs-lookup"><span data-stu-id="d7187-350">It is used by non-generic collection objects to order the items in the collection.</span></span>  
  
 <span data-ttu-id="d7187-351">`obj` Параметр должен быть одним из следующих:</span><span class="sxs-lookup"><span data-stu-id="d7187-351">The `obj` parameter must be one of the following:</span></span>  
  
-   <span data-ttu-id="d7187-352">Объект, тип времени выполнения которого — <xref:System.Numerics.BigInteger>.</span><span class="sxs-lookup"><span data-stu-id="d7187-352">An object whose run-time type is <xref:System.Numerics.BigInteger>.</span></span>  
  
-   <span data-ttu-id="d7187-353">Переменная, значение которой равно `null`. <xref:System.Object></span><span class="sxs-lookup"><span data-stu-id="d7187-353">An <xref:System.Object> variable whose value is `null`.</span></span> <span data-ttu-id="d7187-354">Если значение `obj` параметра равно `null`, метод возвращает значение 1, указывающее, что `obj`текущий экземпляр больше.</span><span class="sxs-lookup"><span data-stu-id="d7187-354">If the value of the `obj` parameter is `null`, the method returns 1, which indicates that the current instance is greater than `obj`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d7187-355">В следующем примере вызывается <xref:System.Numerics.BigInteger.CompareTo%28System.Object%29> метод для <xref:System.Numerics.BigInteger> сравнения значения с каждым элементом в массиве объектов.</span><span class="sxs-lookup"><span data-stu-id="d7187-355">The following example calls the <xref:System.Numerics.BigInteger.CompareTo%28System.Object%29> method to compare a <xref:System.Numerics.BigInteger> value with each element in an object array</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.CompareTo#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.CompareTo/cs/Example2.cs#4)]
 [!code-vb[System.Numerics.BigInteger.CompareTo#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.CompareTo/vb/Example2.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d7187-356"><paramref name="obj" /> не является объектом <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-356"><paramref name="obj" /> is not a <see cref="T:System.Numerics.BigInteger" />.</span></span></exception>
        <altmember cref="T:System.IComparable" />
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (ulong other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 CompareTo(unsigned int64 other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.CompareTo(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (other As ULong) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int CompareTo(System::UInt64 other);" />
      <MemberSignature Language="F#" Value="member this.CompareTo : uint64 -&gt; int" Usage="bigInteger.CompareTo other" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="d7187-357">64-разрядное целое число без знака для сравнения.</span><span class="sxs-lookup"><span data-stu-id="d7187-357">The unsigned 64-bit integer to compare.</span></span></param>
        <summary><span data-ttu-id="d7187-358">Сравнивает данный экземпляр с 64-разрядным целым числом без знака и возвращает целое число, которое показывает, является ли значение данного экземпляра меньшим или большим по сравнению со значением 64-битового целого числа без знака или равным ему.</span><span class="sxs-lookup"><span data-stu-id="d7187-358">Compares this instance to an unsigned 64-bit integer and returns an integer that indicates whether the value of this instance is less than, equal to, or greater than the value of the unsigned 64-bit integer.</span></span></summary>
        <returns><span data-ttu-id="d7187-359">Целое число со знаком, определяющее, как соотносятся между собой данный экземпляр и объект <paramref name="other" />. Возможные соотношения показаны в следующей таблице.</span><span class="sxs-lookup"><span data-stu-id="d7187-359">A signed integer that indicates the relative value of this instance and <paramref name="other" />, as shown in the following table.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="d7187-360">Возвращаемое значение</span><span class="sxs-lookup"><span data-stu-id="d7187-360">Return value</span></span> 
 </term><description> <span data-ttu-id="d7187-361">Описание</span><span class="sxs-lookup"><span data-stu-id="d7187-361">Description</span></span> 
 </description></listheader><item><term> <span data-ttu-id="d7187-362">Меньше нуля</span><span class="sxs-lookup"><span data-stu-id="d7187-362">Less than zero</span></span> 
 </term><description> <span data-ttu-id="d7187-363">Текущий экземпляр меньше значения параметра <paramref name="other" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-363">The current instance is less than <paramref name="other" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="d7187-364">Нуль</span><span class="sxs-lookup"><span data-stu-id="d7187-364">Zero</span></span> 
 </term><description> <span data-ttu-id="d7187-365">Текущий экземпляр равен значению параметра <paramref name="other" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-365">The current instance equals <paramref name="other" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="d7187-366">Больше нуля</span><span class="sxs-lookup"><span data-stu-id="d7187-366">Greater than zero</span></span> 
 </term><description> <span data-ttu-id="d7187-367">Текущий экземпляр больше значения параметра <paramref name="other" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-367">The current instance is greater than <paramref name="other" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Divide">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger Divide (System.Numerics.BigInteger dividend, System.Numerics.BigInteger divisor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.BigInteger Divide(valuetype System.Numerics.BigInteger dividend, valuetype System.Numerics.BigInteger divisor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.Divide(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Divide (dividend As BigInteger, divisor As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger Divide(System::Numerics::BigInteger dividend, System::Numerics::BigInteger divisor);" />
      <MemberSignature Language="F#" Value="static member Divide : System.Numerics.BigInteger * System.Numerics.BigInteger -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.Divide (dividend, divisor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dividend" Type="System.Numerics.BigInteger" />
        <Parameter Name="divisor" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="dividend"><span data-ttu-id="d7187-368">Значение, которое необходимо разделить.</span><span class="sxs-lookup"><span data-stu-id="d7187-368">The value to be divided.</span></span></param>
        <param name="divisor"><span data-ttu-id="d7187-369">Значение, на которое необходимо разделить.</span><span class="sxs-lookup"><span data-stu-id="d7187-369">The value to divide by.</span></span></param>
        <summary><span data-ttu-id="d7187-370">Делит одно значение <see cref="T:System.Numerics.BigInteger" /> на другое и возвращает результат.</span><span class="sxs-lookup"><span data-stu-id="d7187-370">Divides one <see cref="T:System.Numerics.BigInteger" /> value by another and returns the result.</span></span></summary>
        <returns><span data-ttu-id="d7187-371">Частное от деления.</span><span class="sxs-lookup"><span data-stu-id="d7187-371">The quotient of the division.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7187-372"><xref:System.Numerics.BigInteger.Divide%2A> Метод выполняет деление целых чисел; все остальное, полученные от деления, отбрасываются.</span><span class="sxs-lookup"><span data-stu-id="d7187-372">The <xref:System.Numerics.BigInteger.Divide%2A> method performs integer division; any remainder that results from the division is discarded.</span></span> <span data-ttu-id="d7187-373">Для выполнения целочисленного деления с сохранением остатка вызовите <xref:System.Numerics.BigInteger.DivRem%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="d7187-373">To perform integer division while preserving the remainder, call the <xref:System.Numerics.BigInteger.DivRem%2A> method.</span></span> <span data-ttu-id="d7187-374">Чтобы получить только остаток, вызовите <xref:System.Numerics.BigInteger.Remainder%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="d7187-374">To retrieve only the remainder, call the <xref:System.Numerics.BigInteger.Remainder%2A> method.</span></span>  
  
 <span data-ttu-id="d7187-375"><xref:System.Numerics.BigInteger.Divide%2A> Метод может использоваться в языках, не поддерживающих перегрузку операторов.</span><span class="sxs-lookup"><span data-stu-id="d7187-375">The <xref:System.Numerics.BigInteger.Divide%2A> method can be used by languages that do not support operator overloading.</span></span> <span data-ttu-id="d7187-376">Его поведение идентично поведению деления с помощью оператора деления.</span><span class="sxs-lookup"><span data-stu-id="d7187-376">Its behavior is identical to division using the division operator.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d7187-377">В следующем примере создается массив <xref:System.Numerics.BigInteger> значений.</span><span class="sxs-lookup"><span data-stu-id="d7187-377">The following example creates an array of <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="d7187-378">Затем он использует каждый элемент в качестве частного в операции деления, которая использует <xref:System.Numerics.BigInteger.Divide%2A> метод, оператор деления (/) <xref:System.Numerics.BigInteger.DivRem%2A> и метод.</span><span class="sxs-lookup"><span data-stu-id="d7187-378">It then uses each element as the quotient in a division operation that uses the <xref:System.Numerics.BigInteger.Divide%2A> method, the division operator (/), and the <xref:System.Numerics.BigInteger.DivRem%2A> method.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Divide#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Divide/cs/Divide1.cs#1)]
 [!code-vb[System.Numerics.BigInteger.Divide#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Divide/vb/Divide1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.DivideByZeroException"><span data-ttu-id="d7187-379">Значение параметра <paramref name="divisor" /> равно нулю (0).</span><span class="sxs-lookup"><span data-stu-id="d7187-379"><paramref name="divisor" /> is 0 (zero).</span></span></exception>
        <altmember cref="M:System.Numerics.BigInteger.op_Division(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
        <altmember cref="M:System.Numerics.BigInteger.DivRem(System.Numerics.BigInteger,System.Numerics.BigInteger,System.Numerics.BigInteger@)" />
        <altmember cref="M:System.Numerics.BigInteger.Remainder(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      </Docs>
    </Member>
    <Member MemberName="DivRem">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger DivRem (System.Numerics.BigInteger dividend, System.Numerics.BigInteger divisor, out System.Numerics.BigInteger remainder);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.BigInteger DivRem(valuetype System.Numerics.BigInteger dividend, valuetype System.Numerics.BigInteger divisor, [out] valuetype System.Numerics.BigInteger&amp; remainder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.DivRem(System.Numerics.BigInteger,System.Numerics.BigInteger,System.Numerics.BigInteger@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DivRem (dividend As BigInteger, divisor As BigInteger, ByRef remainder As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger DivRem(System::Numerics::BigInteger dividend, System::Numerics::BigInteger divisor, [Runtime::InteropServices::Out] System::Numerics::BigInteger % remainder);" />
      <MemberSignature Language="F#" Value="static member DivRem : System.Numerics.BigInteger * System.Numerics.BigInteger *  -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.DivRem (dividend, divisor, remainder)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dividend" Type="System.Numerics.BigInteger" />
        <Parameter Name="divisor" Type="System.Numerics.BigInteger" />
        <Parameter Name="remainder" Type="System.Numerics.BigInteger" RefType="out" />
      </Parameters>
      <Docs>
        <param name="dividend"><span data-ttu-id="d7187-380">Значение, которое необходимо разделить.</span><span class="sxs-lookup"><span data-stu-id="d7187-380">The value to be divided.</span></span></param>
        <param name="divisor"><span data-ttu-id="d7187-381">Значение, на которое необходимо разделить.</span><span class="sxs-lookup"><span data-stu-id="d7187-381">The value to divide by.</span></span></param>
        <param name="remainder"><span data-ttu-id="d7187-382">После выполнения данного метода содержит значение <see cref="T:System.Numerics.BigInteger" />, представляющее остаток от деления.</span><span class="sxs-lookup"><span data-stu-id="d7187-382">When this method returns, contains a <see cref="T:System.Numerics.BigInteger" /> value that represents the remainder from the division.</span></span> <span data-ttu-id="d7187-383">Этот параметр передается неинициализированным.</span><span class="sxs-lookup"><span data-stu-id="d7187-383">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="d7187-384">Делит одно значение <see cref="T:System.Numerics.BigInteger" /> на другое, возвращает результат, а также возвращает остаток в виде параметра вывода.</span><span class="sxs-lookup"><span data-stu-id="d7187-384">Divides one <see cref="T:System.Numerics.BigInteger" /> value by another, returns the result, and returns the remainder in an output parameter.</span></span></summary>
        <returns><span data-ttu-id="d7187-385">Частное от деления.</span><span class="sxs-lookup"><span data-stu-id="d7187-385">The quotient of the division.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7187-386">Этот метод сохраняет как частное, так и остаток, полученные в результате целочисленного деления.</span><span class="sxs-lookup"><span data-stu-id="d7187-386">This method preserves both the quotient and the remainder that results from integer division.</span></span> <span data-ttu-id="d7187-387">Если вы не заинтересованы в оставшейся части, используйте <xref:System.Numerics.BigInteger.Divide%2A> метод или оператор деления. Если вы заинтересованы только в оставшейся части, <xref:System.Numerics.BigInteger.Remainder%2A> используйте метод.</span><span class="sxs-lookup"><span data-stu-id="d7187-387">If you are not interested in the remainder, use the <xref:System.Numerics.BigInteger.Divide%2A> method or the division operator; if you are only interested in the remainder, use the <xref:System.Numerics.BigInteger.Remainder%2A> method.</span></span>  
  
 <span data-ttu-id="d7187-388">Знак возвращаемого `remainder` значения совпадает со знаком `dividend` параметра.</span><span class="sxs-lookup"><span data-stu-id="d7187-388">The sign of the returned `remainder` value is the same as the sign of the `dividend` parameter.</span></span>  
  
 <span data-ttu-id="d7187-389">Поведение <xref:System.Numerics.BigInteger.DivRem%2A> метода идентично <xref:System.Math.DivRem%2A?displayProperty=nameWithType> поведению метода.</span><span class="sxs-lookup"><span data-stu-id="d7187-389">The behavior of the <xref:System.Numerics.BigInteger.DivRem%2A> method is identical to that of the <xref:System.Math.DivRem%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d7187-390">В следующем примере создается массив <xref:System.Numerics.BigInteger> значений.</span><span class="sxs-lookup"><span data-stu-id="d7187-390">The following example creates an array of <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="d7187-391">Затем он использует каждый элемент в качестве частного в операции деления, которая использует <xref:System.Numerics.BigInteger.Divide%2A> метод, оператор деления (/) <xref:System.Numerics.BigInteger.DivRem%2A> и метод.</span><span class="sxs-lookup"><span data-stu-id="d7187-391">It then uses each element as the quotient in a division operation that uses the <xref:System.Numerics.BigInteger.Divide%2A> method, the division operator (/), and the <xref:System.Numerics.BigInteger.DivRem%2A> method.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Divide#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Divide/cs/Divide1.cs#1)]
 [!code-vb[System.Numerics.BigInteger.Divide#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Divide/vb/Divide1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.DivideByZeroException"><span data-ttu-id="d7187-392">Значение параметра <paramref name="divisor" /> равно нулю (0).</span><span class="sxs-lookup"><span data-stu-id="d7187-392"><paramref name="divisor" /> is 0 (zero).</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d7187-393">Возвращает значение, определяющее, равны ли два числовых значения.</span><span class="sxs-lookup"><span data-stu-id="d7187-393">Returns a value that indicates whether two numeric values are equal.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (long other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Equals(int64 other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.Equals(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As Long) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equals(long other);" />
      <MemberSignature Language="F#" Value="override this.Equals : int64 -&gt; bool" Usage="bigInteger.Equals other" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="d7187-394">64-разрядное целое число со знаком для сравнения.</span><span class="sxs-lookup"><span data-stu-id="d7187-394">The signed 64-bit integer value to compare.</span></span></param>
        <summary><span data-ttu-id="d7187-395">Возвращает значение, определяющее, равны ли текущий экземпляр и 64-разрядное целое число со знаком.</span><span class="sxs-lookup"><span data-stu-id="d7187-395">Returns a value that indicates whether the current instance and a signed 64-bit integer have the same value.</span></span></summary>
        <returns><span data-ttu-id="d7187-396">Значение <see langword="true" />, если 64-разрядное целое число со знаком и текущий экземпляр равны; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-396"><see langword="true" /> if the signed 64-bit integer and the current instance have the same value; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7187-397">Если `other` <xref:System.Int16>параметр имеетзначение<xref:System.SByte> <xref:System.Int64> , ,,,или<xref:System.Int32> ,<xref:System.UInt32> он неявно преобразуется в значение при вызове метода. <xref:System.Byte> <xref:System.UInt16></span><span class="sxs-lookup"><span data-stu-id="d7187-397">If `other` is a <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.SByte>, <xref:System.UInt16>, or <xref:System.UInt32> value, it is implicitly converted to an <xref:System.Int64> value when the method is called.</span></span>  
  
 <span data-ttu-id="d7187-398">Чтобы определить связь между двумя объектами, а не просто проверкой на равенство, вызовите <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="d7187-398">To determine the relationship between the two objects instead of just testing for equality, call the <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d7187-399">В следующем примере создается экземпляр <xref:System.Numerics.BigInteger> объекта из каждого целочисленного типа, за исключением. <xref:System.UInt64></span><span class="sxs-lookup"><span data-stu-id="d7187-399">The following example instantiates a <xref:System.Numerics.BigInteger> object from each integral type except <xref:System.UInt64>.</span></span> <span data-ttu-id="d7187-400">Затем он вызывает <xref:System.Numerics.BigInteger.Equals%28System.Int64%29> метод для <xref:System.Numerics.BigInteger> сравнения значения с исходным целочисленным значением <xref:System.Numerics.BigInteger> , переданным в конструктор.</span><span class="sxs-lookup"><span data-stu-id="d7187-400">It then calls the <xref:System.Numerics.BigInteger.Equals%28System.Int64%29> method to compare the <xref:System.Numerics.BigInteger> value with the original integer value that was passed to the <xref:System.Numerics.BigInteger> constructor.</span></span> <span data-ttu-id="d7187-401">Как видно из выходных данных, значения в каждом случае равны.</span><span class="sxs-lookup"><span data-stu-id="d7187-401">As the output shows, the values are equal in each case.</span></span>  
  
 [!code-cpp[System.Numerics.BigInteger.Equals#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Equals/cpp/equals.cpp#1)]
 [!code-csharp[System.Numerics.BigInteger.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Equals/cs/EqualsExample1.cs#1)]
 [!code-vb[System.Numerics.BigInteger.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Equals/vb/EqualsExample1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Numerics.BigInteger other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(valuetype System.Numerics.BigInteger other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.Equals(System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As BigInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Numerics::BigInteger other);" />
      <MemberSignature Language="F#" Value="override this.Equals : System.Numerics.BigInteger -&gt; bool" Usage="bigInteger.Equals other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="d7187-402">Объект для сравнения.</span><span class="sxs-lookup"><span data-stu-id="d7187-402">The object to compare.</span></span></param>
        <summary><span data-ttu-id="d7187-403">Возвращает значение, определяющее равны ли текущий экземпляр и указанный объект <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-403">Returns a value that indicates whether the current instance and a specified <see cref="T:System.Numerics.BigInteger" /> object have the same value.</span></span></summary>
        <returns><span data-ttu-id="d7187-404">Значение <see langword="true" />, если значения данного объекта <see cref="T:System.Numerics.BigInteger" /> и объекта <paramref name="other" /> совпадают; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-404"><see langword="true" /> if this <see cref="T:System.Numerics.BigInteger" /> object and <paramref name="other" /> have the same value; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7187-405">Этот метод реализует <xref:System.IEquatable%601> интерфейс и работает немного лучше, чем <xref:System.Numerics.BigInteger.Equals%28System.Object%29> потому, что `other` не нужно <xref:System.Numerics.BigInteger> преобразовывать параметр в объект.</span><span class="sxs-lookup"><span data-stu-id="d7187-405">This method implements the <xref:System.IEquatable%601> interface and performs slightly better than <xref:System.Numerics.BigInteger.Equals%28System.Object%29> because it does not have to convert the `other` parameter to a <xref:System.Numerics.BigInteger> object.</span></span>  
  
 <span data-ttu-id="d7187-406">Чтобы определить связь между двумя <xref:System.Numerics.BigInteger> объектами, а не просто проверкой на равенство, <xref:System.Numerics.BigInteger.CompareTo%28System.Numerics.BigInteger%29?displayProperty=nameWithType> вызовите метод.</span><span class="sxs-lookup"><span data-stu-id="d7187-406">To determine the relationship between the two <xref:System.Numerics.BigInteger> objects instead of just testing for equality, call the <xref:System.Numerics.BigInteger.CompareTo%28System.Numerics.BigInteger%29?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d7187-407">В следующем примере сравниваются приблизительные расстояния от земли до расстояния от земли до Эпсилон, чтобы определить, равны ли они.</span><span class="sxs-lookup"><span data-stu-id="d7187-407">The following example compares the approximate distance of several stars from Earth with the distance of Epsilon Indi from Earth to determine whether they are equal.</span></span> <span data-ttu-id="d7187-408">В примере используется каждая перегрузка <xref:System.Numerics.BigInteger.Equals%2A> метода для проверки на равенство.</span><span class="sxs-lookup"><span data-stu-id="d7187-408">The example uses each overload of the <xref:System.Numerics.BigInteger.Equals%2A> method to test for equality.</span></span>  
  
 [!code-cpp[System.Numerics.BigInteger.Equals#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Equals/cpp/equals2.cpp#2)]
 [!code-csharp[System.Numerics.BigInteger.Equals#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Equals/cs/EqualsExample1.cs#2)]
 [!code-vb[System.Numerics.BigInteger.Equals#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Equals/vb/EqualsExample1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="bigInteger.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="d7187-409">Объект для сравнения.</span><span class="sxs-lookup"><span data-stu-id="d7187-409">The object to compare.</span></span></param>
        <summary><span data-ttu-id="d7187-410">Возвращает значение, определяющее, равны ли текущий экземпляр и указанный объект.</span><span class="sxs-lookup"><span data-stu-id="d7187-410">Returns a value that indicates whether the current instance and a specified object have the same value.</span></span></summary>
        <returns><span data-ttu-id="d7187-411">Значение <see langword="true" />, если аргумент <paramref name="obj" /> — это объект <see cref="T:System.Numerics.BigInteger" />, и его значение равно значению текущего экземпляра <see cref="T:System.Numerics.BigInteger" />. В противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-411"><see langword="true" /> if the <paramref name="obj" /> argument is a <see cref="T:System.Numerics.BigInteger" /> object, and its value is equal to the value of the current <see cref="T:System.Numerics.BigInteger" /> instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7187-412">Если аргумент не является значением, метод возвращает `false`значение. <xref:System.Numerics.BigInteger> `obj`</span><span class="sxs-lookup"><span data-stu-id="d7187-412">If the `obj` argument is not a <xref:System.Numerics.BigInteger> value, the method returns `false`.</span></span> <span data-ttu-id="d7187-413">Метод возвращает `true` , только если `obj` является <xref:System.Numerics.BigInteger> экземпляром, значение которого равно текущему экземпляру.</span><span class="sxs-lookup"><span data-stu-id="d7187-413">The method returns `true` only if `obj` is a <xref:System.Numerics.BigInteger> instance whose value is equal to the current instance.</span></span>  
  
 <span data-ttu-id="d7187-414">Чтобы определить связь между двумя объектами, а не просто проверкой на равенство, вызовите <xref:System.Numerics.BigInteger.CompareTo%28System.Object%29> метод.</span><span class="sxs-lookup"><span data-stu-id="d7187-414">To determine the relationship between the two objects instead of just testing for equality, call the <xref:System.Numerics.BigInteger.CompareTo%28System.Object%29> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d7187-415">В следующем примере определяются <xref:System.Object> Parallel <xref:System.Numerics.BigInteger> и Arrays.</span><span class="sxs-lookup"><span data-stu-id="d7187-415">The following example defines parallel <xref:System.Object> and <xref:System.Numerics.BigInteger> arrays.</span></span> <span data-ttu-id="d7187-416">Каждый элемент одного массива имеет то же значение, что и соответствующий элемент второго массива.</span><span class="sxs-lookup"><span data-stu-id="d7187-416">Each element of one array has the same value as the corresponding element of the second array.</span></span> <span data-ttu-id="d7187-417">Как видно из выходных данных в примере, экземпляр в <xref:System.Numerics.BigInteger> массиве считается равным экземпляру <xref:System.Object> в массиве, только если второй является, <xref:System.Numerics.BigInteger> а их значения равны.</span><span class="sxs-lookup"><span data-stu-id="d7187-417">As the output from the example shows, the instance in the <xref:System.Numerics.BigInteger> array is considered to be equal to the instance in the <xref:System.Object> array only if the latter is a <xref:System.Numerics.BigInteger> and their values are equal.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Equals#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Equals/cs/Equals_Obj1.cs#3)]
 [!code-vb[System.Numerics.BigInteger.Equals#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Equals/vb/Equals_Obj1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (ulong other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Equals(unsigned int64 other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.Equals(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As ULong) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equals(System::UInt64 other);" />
      <MemberSignature Language="F#" Value="override this.Equals : uint64 -&gt; bool" Usage="bigInteger.Equals other" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="d7187-418">64-разрядное целое число без знака для сравнения.</span><span class="sxs-lookup"><span data-stu-id="d7187-418">The unsigned 64-bit integer to compare.</span></span></param>
        <summary><span data-ttu-id="d7187-419">Возвращает значение, определяющее, равны ли текущий экземпляр и 64-разрядное целое число без знака.</span><span class="sxs-lookup"><span data-stu-id="d7187-419">Returns a value that indicates whether the current instance and an unsigned 64-bit integer have the same value.</span></span></summary>
        <returns><span data-ttu-id="d7187-420">Значение <see langword="true" />, если текущий экземпляр и 64-разрядное целое число без знака равны; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-420"><see langword="true" /> if the current instance and the unsigned 64-bit integer have the same value; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7187-421">Чтобы определить связь между двумя объектами, а не просто проверкой на равенство, вызовите <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="d7187-421">To determine the relationship between the two objects instead of just testing for equality, call the <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d7187-422">В следующем примере сравниваются приблизительные расстояния от земли до расстояния от земли до Эпсилон, чтобы определить, равны ли они.</span><span class="sxs-lookup"><span data-stu-id="d7187-422">The following example compares the approximate distance of several stars from Earth with the distance of Epsilon Indi from Earth to determine whether they are equal.</span></span> <span data-ttu-id="d7187-423">В примере используется каждая перегрузка <xref:System.Numerics.BigInteger.Equals%2A> метода для проверки на равенство.</span><span class="sxs-lookup"><span data-stu-id="d7187-423">The example uses each overload of the <xref:System.Numerics.BigInteger.Equals%2A> method to test for equality.</span></span>  
  
 [!code-cpp[System.Numerics.BigInteger.Equals#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Equals/cpp/equals2.cpp#2)]
 [!code-csharp[System.Numerics.BigInteger.Equals#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Equals/cs/EqualsExample1.cs#2)]
 [!code-vb[System.Numerics.BigInteger.Equals#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Equals/vb/EqualsExample1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetByteCount">
      <MemberSignature Language="C#" Value="public int GetByteCount (bool isUnsigned = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetByteCount(bool isUnsigned) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.GetByteCount(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetByteCount (Optional isUnsigned As Boolean = false) As Integer" />
      <MemberSignature Language="F#" Value="member this.GetByteCount : bool -&gt; int" Usage="bigInteger.GetByteCount isUnsigned" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isUnsigned" Type="System.Boolean" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="isUnsigned"><span data-ttu-id="d7187-424"><see langword="true" /> для использования кодировки без знака; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-424"><see langword="true" /> to use unsigned encoding; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="d7187-425">Возвращает число байтов, которое будет выводиться <see cref="M:System.Numerics.BigInteger.ToByteArray(System.Boolean,System.Boolean)" /> и <see cref="M:System.Numerics.BigInteger.TryWriteBytes(System.Span{System.Byte},System.Int32@,System.Boolean,System.Boolean)" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-425">Gets the number of bytes that will be output by <see cref="M:System.Numerics.BigInteger.ToByteArray(System.Boolean,System.Boolean)" /> and <see cref="M:System.Numerics.BigInteger.TryWriteBytes(System.Span{System.Byte},System.Int32@,System.Boolean,System.Boolean)" />.</span></span></summary>
        <returns><span data-ttu-id="d7187-426">Число байтов.</span><span class="sxs-lookup"><span data-stu-id="d7187-426">The number of bytes.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="bigInteger.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d7187-427">Возвращает хэш-код для текущего объекта <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-427">Returns the hash code for the current <see cref="T:System.Numerics.BigInteger" /> object.</span></span></summary>
        <returns><span data-ttu-id="d7187-428">Хэш-код в виде 32-разрядного целого числа со знаком.</span><span class="sxs-lookup"><span data-stu-id="d7187-428">A 32-bit signed integer hash code.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GreatestCommonDivisor">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger GreatestCommonDivisor (System.Numerics.BigInteger left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.BigInteger GreatestCommonDivisor(valuetype System.Numerics.BigInteger left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.GreatestCommonDivisor(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GreatestCommonDivisor (left As BigInteger, right As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger GreatestCommonDivisor(System::Numerics::BigInteger left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member GreatestCommonDivisor : System.Numerics.BigInteger * System.Numerics.BigInteger -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.GreatestCommonDivisor (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="d7187-429">Первое значение в вычитании.</span><span class="sxs-lookup"><span data-stu-id="d7187-429">The first value.</span></span></param>
        <param name="right"><span data-ttu-id="d7187-430">Второе значение в вычитании.</span><span class="sxs-lookup"><span data-stu-id="d7187-430">The second value.</span></span></param>
        <summary><span data-ttu-id="d7187-431">Находит наибольший общий делитель двух значений <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-431">Finds the greatest common divisor of two <see cref="T:System.Numerics.BigInteger" /> values.</span></span></summary>
        <returns><span data-ttu-id="d7187-432">Наибольший общий делитель значений <paramref name="left" /> и <paramref name="right" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-432">The greatest common divisor of <paramref name="left" /> and <paramref name="right" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7187-433">Наибольший общий делитель — это наибольшее число, в которое <xref:System.Numerics.BigInteger> можно разделить два значения без возврата остатка.</span><span class="sxs-lookup"><span data-stu-id="d7187-433">The greatest common divisor is the largest number into which the two <xref:System.Numerics.BigInteger> values can be divided without returning a remainder.</span></span>  
  
 <span data-ttu-id="d7187-434">Если параметры `right` и являются ненулевыми числами, метод всегда возвращает значение, равное 1, так как все числа можно разделить на 1. `left`</span><span class="sxs-lookup"><span data-stu-id="d7187-434">If the `left` and `right` parameters are non-zero numbers, the method always returns at least a value of 1 because all numbers can be divided by 1.</span></span> <span data-ttu-id="d7187-435">Если один из параметров равен нулю, метод возвращает абсолютное значение ненулевого параметра.</span><span class="sxs-lookup"><span data-stu-id="d7187-435">If either parameter is zero, the method returns the absolute value of the non-zero parameter.</span></span> <span data-ttu-id="d7187-436">Если оба значения равны нулю, метод возвращает нуль.</span><span class="sxs-lookup"><span data-stu-id="d7187-436">If both values are zero, the method returns zero.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d7187-437">Вычисление наибольшего общего делителя очень больших значений `left` и `right` может быть очень трудоемкой операцией.</span><span class="sxs-lookup"><span data-stu-id="d7187-437">Computing the greatest common divisor of very large values of `left` and `right` can be a very time-consuming operation.</span></span>  
  
 <span data-ttu-id="d7187-438">Значение, возвращаемое <xref:System.Numerics.BigInteger.GreatestCommonDivisor%2A> методом, всегда является положительным, независимо от знака `left` параметров и `right` .</span><span class="sxs-lookup"><span data-stu-id="d7187-438">The value returned by the <xref:System.Numerics.BigInteger.GreatestCommonDivisor%2A> method is always positive regardless of the sign of the `left` and `right` parameters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d7187-439">В следующем примере показан вызов <xref:System.Numerics.BigInteger.GreatestCommonDivisor%2A> метода и обработка исключений, необходимая для предоставления полезной информации <xref:System.ArgumentOutOfRangeException>о.</span><span class="sxs-lookup"><span data-stu-id="d7187-439">The following example illustrates a call to the <xref:System.Numerics.BigInteger.GreatestCommonDivisor%2A> method and the exception handling necessary to provide useful information about an <xref:System.ArgumentOutOfRangeException>.</span></span> <span data-ttu-id="d7187-440">Результат указывает, что наибольший общий делитель этих двух чисел равен 1.</span><span class="sxs-lookup"><span data-stu-id="d7187-440">The result indicates that the greatest common divisor of these two numbers is 1.</span></span>  
  
 [!code-csharp[System.Numeric.BigInteger.Class#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/cs/BigInteger_Examples.cs#10)]
 [!code-vb[System.Numeric.BigInteger.Class#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/vb/BigInteger_Examples.vb#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEven">
      <MemberSignature Language="C#" Value="public bool IsEven { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEven" />
      <MemberSignature Language="DocId" Value="P:System.Numerics.BigInteger.IsEven" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsEven As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEven { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEven : bool" Usage="System.Numerics.BigInteger.IsEven" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d7187-441">Указывает, равно ли значение текущего объекта <see cref="T:System.Numerics.BigInteger" /> четному числу.</span><span class="sxs-lookup"><span data-stu-id="d7187-441">Indicates whether the value of the current <see cref="T:System.Numerics.BigInteger" /> object is an even number.</span></span></summary>
        <value><span data-ttu-id="d7187-442">Значение <see langword="true" />, если значение объекта <see cref="T:System.Numerics.BigInteger" /> равно четному числу; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-442"><see langword="true" /> if the value of the <see cref="T:System.Numerics.BigInteger" /> object is an even number; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7187-443">Это удобное свойство позволяет определить, является ли <xref:System.Numerics.BigInteger> значение равномерно кратным двум.</span><span class="sxs-lookup"><span data-stu-id="d7187-443">This property is a convenience feature that indicates whether a <xref:System.Numerics.BigInteger> value is evenly divisible by two.</span></span> <span data-ttu-id="d7187-444">Он эквивалентен следующему выражению:</span><span class="sxs-lookup"><span data-stu-id="d7187-444">It is equivalent to the following expression:</span></span>  
  
```csharp   
value % 2 == 0;  
```  
  
```vb  
value Mod 2 = 0  
```  
  
 <span data-ttu-id="d7187-445">Если значение текущего <xref:System.Numerics.BigInteger> объекта равно <xref:System.Numerics.BigInteger.Zero%2A?displayProperty=nameWithType>, свойство возвращает `true`.</span><span class="sxs-lookup"><span data-stu-id="d7187-445">If the value of the current <xref:System.Numerics.BigInteger> object is <xref:System.Numerics.BigInteger.Zero%2A?displayProperty=nameWithType>, the property returns `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOne">
      <MemberSignature Language="C#" Value="public bool IsOne { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsOne" />
      <MemberSignature Language="DocId" Value="P:System.Numerics.BigInteger.IsOne" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsOne As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsOne { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsOne : bool" Usage="System.Numerics.BigInteger.IsOne" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d7187-446">Указывает, равно ли значение текущего объекта <see cref="T:System.Numerics.BigInteger" /> значению <see cref="P:System.Numerics.BigInteger.One" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-446">Indicates whether the value of the current <see cref="T:System.Numerics.BigInteger" /> object is <see cref="P:System.Numerics.BigInteger.One" />.</span></span></summary>
        <value><span data-ttu-id="d7187-447">Значение <see langword="true" />, если объект <see cref="T:System.Numerics.BigInteger" /> имеет значение <see cref="P:System.Numerics.BigInteger.One" />; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-447"><see langword="true" /> if the value of the <see cref="T:System.Numerics.BigInteger" /> object is <see cref="P:System.Numerics.BigInteger.One" />; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7187-448">Это свойство обеспечивает значительно лучшую производительность по сравнению с другими сравнениями, такими `thisBigInteger.Equals(BigInteger.One)`как.</span><span class="sxs-lookup"><span data-stu-id="d7187-448">This property offers significantly better performance than other comparisons with one, such as `thisBigInteger.Equals(BigInteger.One)`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Numerics.BigInteger.One" />
      </Docs>
    </Member>
    <Member MemberName="IsPowerOfTwo">
      <MemberSignature Language="C#" Value="public bool IsPowerOfTwo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPowerOfTwo" />
      <MemberSignature Language="DocId" Value="P:System.Numerics.BigInteger.IsPowerOfTwo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsPowerOfTwo As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPowerOfTwo { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsPowerOfTwo : bool" Usage="System.Numerics.BigInteger.IsPowerOfTwo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d7187-449">Указывает, равно ли значение текущего объекта <see cref="T:System.Numerics.BigInteger" /> степени двух.</span><span class="sxs-lookup"><span data-stu-id="d7187-449">Indicates whether the value of the current <see cref="T:System.Numerics.BigInteger" /> object is a power of two.</span></span></summary>
        <value><span data-ttu-id="d7187-450">Значение <see langword="true" />, если значение объекта <see cref="T:System.Numerics.BigInteger" /> равно степени двух; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-450"><see langword="true" /> if the value of the <see cref="T:System.Numerics.BigInteger" /> object is a power of two; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7187-451">Это свойство определяет, имеет <xref:System.Numerics.BigInteger> ли значение один ненулевой бит.</span><span class="sxs-lookup"><span data-stu-id="d7187-451">This property determines whether a <xref:System.Numerics.BigInteger> value has a single non-zero bit set.</span></span> <span data-ttu-id="d7187-452">Это означает, что он `true` возвращает значение, если текущий <xref:System.Numerics.BigInteger> объект равен 1 (то есть 2<sup>0</sup>) или любой большей степени двух.</span><span class="sxs-lookup"><span data-stu-id="d7187-452">This means that it returns `true` if the value of the current <xref:System.Numerics.BigInteger> object is 1 (that is, 2<sup>0</sup>) or any greater power of two.</span></span> <span data-ttu-id="d7187-453">Он возвращает `false` значение, если текущий <xref:System.Numerics.BigInteger> объект равен 0.</span><span class="sxs-lookup"><span data-stu-id="d7187-453">It returns `false` if the value of the current <xref:System.Numerics.BigInteger> object is 0.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsZero">
      <MemberSignature Language="C#" Value="public bool IsZero { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsZero" />
      <MemberSignature Language="DocId" Value="P:System.Numerics.BigInteger.IsZero" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsZero As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsZero { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsZero : bool" Usage="System.Numerics.BigInteger.IsZero" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d7187-454">Указывает, равно ли значение текущего объекта <see cref="T:System.Numerics.BigInteger" /> значению <see cref="P:System.Numerics.BigInteger.Zero" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-454">Indicates whether the value of the current <see cref="T:System.Numerics.BigInteger" /> object is <see cref="P:System.Numerics.BigInteger.Zero" />.</span></span></summary>
        <value><span data-ttu-id="d7187-455">Значение <see langword="true" />, если объект <see cref="T:System.Numerics.BigInteger" /> имеет значение <see cref="P:System.Numerics.BigInteger.Zero" />; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-455"><see langword="true" /> if the value of the <see cref="T:System.Numerics.BigInteger" /> object is <see cref="P:System.Numerics.BigInteger.Zero" />; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7187-456">Это свойство обеспечивает значительно лучшую производительность, `BigInteger.Equals(BigInteger.Zero)`чем.</span><span class="sxs-lookup"><span data-stu-id="d7187-456">This property offers significantly better performance than `BigInteger.Equals(BigInteger.Zero)`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Numerics.BigInteger.Zero" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Log">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d7187-457">Возвращает логарифм указанного числа.</span><span class="sxs-lookup"><span data-stu-id="d7187-457">Returns the logarithm of a specified number.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Log">
      <MemberSignature Language="C#" Value="public static double Log (System.Numerics.BigInteger value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Log(valuetype System.Numerics.BigInteger value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Log (value As BigInteger) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Log(System::Numerics::BigInteger value);" />
      <MemberSignature Language="F#" Value="static member Log : System.Numerics.BigInteger -&gt; double" Usage="System.Numerics.BigInteger.Log value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d7187-458">Число, логарифм которого требуется найти.</span><span class="sxs-lookup"><span data-stu-id="d7187-458">The number whose logarithm is to be found.</span></span></param>
        <summary><span data-ttu-id="d7187-459">Возвращает натуральный логарифм (с основанием <see langword="e" />) указанного числа.</span><span class="sxs-lookup"><span data-stu-id="d7187-459">Returns the natural (base <see langword="e" />) logarithm of a specified number.</span></span></summary>
        <returns><span data-ttu-id="d7187-460">Натуральный (по основанию <see langword="e" />) логарифм числа <paramref name="value" />, как показано в таблице в разделе примечаний.</span><span class="sxs-lookup"><span data-stu-id="d7187-460">The natural (base <see langword="e" />) logarithm of <paramref name="value" />, as shown in the table in the Remarks section.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7187-461">`value` Параметр указывается как базовое 10-число.</span><span class="sxs-lookup"><span data-stu-id="d7187-461">The `value` parameter is specified as a base 10 number.</span></span>  
  
 <span data-ttu-id="d7187-462">Точное возвращаемое значение этого метода зависит от знака `value`, как показано в следующей таблице.</span><span class="sxs-lookup"><span data-stu-id="d7187-462">The precise return value of this method depends on the sign of `value`, as the following table shows.</span></span>  
  
|<span data-ttu-id="d7187-463">`value` Знак параметра</span><span class="sxs-lookup"><span data-stu-id="d7187-463">Sign of `value` parameter</span></span>|<span data-ttu-id="d7187-464">Возвращаемое значение</span><span class="sxs-lookup"><span data-stu-id="d7187-464">Return value</span></span>|  
|-------------------------------|------------------|  
|<span data-ttu-id="d7187-465">Положительное число</span><span class="sxs-lookup"><span data-stu-id="d7187-465">Positive</span></span>|<span data-ttu-id="d7187-466">Натуральный логарифм `value`, то есть LN `value`или log e`value`.</span><span class="sxs-lookup"><span data-stu-id="d7187-466">The natural logarithm of `value`; that is, ln `value`, or log e`value`.</span></span>|  
|<span data-ttu-id="d7187-467">Нуль</span><span class="sxs-lookup"><span data-stu-id="d7187-467">Zero</span></span>|<span data-ttu-id="d7187-468"><xref:System.Double.NegativeInfinity>.</span><span class="sxs-lookup"><span data-stu-id="d7187-468"><xref:System.Double.NegativeInfinity>.</span></span>|  
|<span data-ttu-id="d7187-469">Отрицательное число</span><span class="sxs-lookup"><span data-stu-id="d7187-469">Negative</span></span>|<span data-ttu-id="d7187-470"><xref:System.Double.NaN>.</span><span class="sxs-lookup"><span data-stu-id="d7187-470"><xref:System.Double.NaN>.</span></span>|  
  
 <span data-ttu-id="d7187-471">Чтобы вычислить десятичный логарифм <xref:System.Numerics.BigInteger> значения, <xref:System.Numerics.BigInteger.Log10%2A> вызовите метод.</span><span class="sxs-lookup"><span data-stu-id="d7187-471">To calculate the base 10 logarithm of a <xref:System.Numerics.BigInteger> value, call the <xref:System.Numerics.BigInteger.Log10%2A> method.</span></span> <span data-ttu-id="d7187-472">Чтобы вычислить логарифм числа в другой базе, вызовите <xref:System.Numerics.BigInteger.Log%28System.Numerics.BigInteger%2CSystem.Double%29> метод.</span><span class="sxs-lookup"><span data-stu-id="d7187-472">To calculate the logarithm of a number in another base, call the <xref:System.Numerics.BigInteger.Log%28System.Numerics.BigInteger%2CSystem.Double%29> method.</span></span>  
  
 <span data-ttu-id="d7187-473">Квадратный корень числа можно найти, вызвав <xref:System.Numerics.BigInteger.Log%2A> метод вместе <xref:System.Math.Exp%2A?displayProperty=nameWithType> с методом.</span><span class="sxs-lookup"><span data-stu-id="d7187-473">You can find the square root of a number by calling the <xref:System.Numerics.BigInteger.Log%2A> method along with the <xref:System.Math.Exp%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="d7187-474">Обратите внимание, что <xref:System.Double.PositiveInfinity?displayProperty=nameWithType> результатом является значение, большее, <xref:System.Double.MaxValue?displayProperty=nameWithType>чем.</span><span class="sxs-lookup"><span data-stu-id="d7187-474">Note that the result is <xref:System.Double.PositiveInfinity?displayProperty=nameWithType> if the result is greater than <xref:System.Double.MaxValue?displayProperty=nameWithType>.</span></span> <span data-ttu-id="d7187-475">В следующем примере вычисляется квадратный корень каждого элемента в массиве <xref:System.Numerics.BigInteger> значений.</span><span class="sxs-lookup"><span data-stu-id="d7187-475">The following example calculates the square root of each element in an array of <xref:System.Numerics.BigInteger> values.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Log#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.numerics.biginteger.log/cs/log1.cs#1)]
 [!code-vb[System.Numerics.BigInteger.Log#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.numerics.biginteger.log/vb/log1.vb#1)]
  
 <span data-ttu-id="d7187-476">Этот метод соответствует <xref:System.Math.Log%28System.Double%29?displayProperty=nameWithType> методу для числовых типов-примитивов.</span><span class="sxs-lookup"><span data-stu-id="d7187-476">This method corresponds to the <xref:System.Math.Log%28System.Double%29?displayProperty=nameWithType> method for the primitive numeric types.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="d7187-477">Натуральный логарифм <paramref name="value" /> находится вне диапазона типа данных <see cref="T:System.Double" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-477">The natural log of <paramref name="value" /> is out of range of the <see cref="T:System.Double" /> data type.</span></span></exception>
        <altmember cref="M:System.Numerics.BigInteger.Log10(System.Numerics.BigInteger)" />
      </Docs>
    </Member>
    <Member MemberName="Log">
      <MemberSignature Language="C#" Value="public static double Log (System.Numerics.BigInteger value, double baseValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Log(valuetype System.Numerics.BigInteger value, float64 baseValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Log (value As BigInteger, baseValue As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Log(System::Numerics::BigInteger value, double baseValue);" />
      <MemberSignature Language="F#" Value="static member Log : System.Numerics.BigInteger * double -&gt; double" Usage="System.Numerics.BigInteger.Log (value, baseValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
        <Parameter Name="baseValue" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d7187-478">Число, логарифм которого должен быть найден.</span><span class="sxs-lookup"><span data-stu-id="d7187-478">A number whose logarithm is to be found.</span></span></param>
        <param name="baseValue"><span data-ttu-id="d7187-479">Основание логарифма.</span><span class="sxs-lookup"><span data-stu-id="d7187-479">The base of the logarithm.</span></span></param>
        <summary><span data-ttu-id="d7187-480">Возвращает логарифм указанного числа в системе счисления с указанным основанием.</span><span class="sxs-lookup"><span data-stu-id="d7187-480">Returns the logarithm of a specified number in a specified base.</span></span></summary>
        <returns><span data-ttu-id="d7187-481">Логарифм по основанию <paramref name="baseValue" /> числа <paramref name="value" />, как показано в таблице в разделе примечаний.</span><span class="sxs-lookup"><span data-stu-id="d7187-481">The base <paramref name="baseValue" /> logarithm of <paramref name="value" />, as shown in the table in the Remarks section.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7187-482">Параметры `value` и`baseValue` указываются как базовые 10 чисел.</span><span class="sxs-lookup"><span data-stu-id="d7187-482">The `value` and `baseValue` parameters are specified as base 10 numbers.</span></span>  
  
 <span data-ttu-id="d7187-483">Точное возвращаемое значение метода зависит от знака `value` и от знака и `baseValue`значения, как показано в следующей таблице.</span><span class="sxs-lookup"><span data-stu-id="d7187-483">The precise return value of the method depends on the sign of `value` and on the sign and value of `baseValue`, as the following table shows.</span></span>  
  
|<span data-ttu-id="d7187-484">Параметр `value`</span><span class="sxs-lookup"><span data-stu-id="d7187-484">`value` parameter</span></span>|<span data-ttu-id="d7187-485">Параметр `baseValue`</span><span class="sxs-lookup"><span data-stu-id="d7187-485">`baseValue` parameter</span></span>|<span data-ttu-id="d7187-486">Возвращаемое значение</span><span class="sxs-lookup"><span data-stu-id="d7187-486">Return value</span></span>|  
|-----------------------|---------------------------|------------------|  
|<span data-ttu-id="d7187-487">`value`> 0</span><span class="sxs-lookup"><span data-stu-id="d7187-487">`value` > 0</span></span>|<span data-ttu-id="d7187-488">(0 < `baseValue` < 1)-или-(`baseValue` > 1)</span><span class="sxs-lookup"><span data-stu-id="d7187-488">(0 < `baseValue` < 1) -or-(`baseValue` > 1)</span></span>|<span data-ttu-id="d7187-489">Логбасевалуе (`value`)</span><span class="sxs-lookup"><span data-stu-id="d7187-489">logbaseValue(`value`)</span></span>|  
|<span data-ttu-id="d7187-490">`value` < 0</span><span class="sxs-lookup"><span data-stu-id="d7187-490">`value` < 0</span></span>|<span data-ttu-id="d7187-491">(любое значение)</span><span class="sxs-lookup"><span data-stu-id="d7187-491">(any value)</span></span>|<xref:System.Double.NaN?displayProperty=nameWithType>|  
|<span data-ttu-id="d7187-492">(любое значение)</span><span class="sxs-lookup"><span data-stu-id="d7187-492">(any value)</span></span>|<span data-ttu-id="d7187-493">`baseValue` < 0</span><span class="sxs-lookup"><span data-stu-id="d7187-493">`baseValue` < 0</span></span>|<xref:System.Double.NaN?displayProperty=nameWithType>|  
|<span data-ttu-id="d7187-494">`value` != 1</span><span class="sxs-lookup"><span data-stu-id="d7187-494">`value` != 1</span></span>|<span data-ttu-id="d7187-495">`baseValue` = 0</span><span class="sxs-lookup"><span data-stu-id="d7187-495">`baseValue` = 0</span></span>|<xref:System.Double.NaN?displayProperty=nameWithType>|  
|<span data-ttu-id="d7187-496">`value` != 1</span><span class="sxs-lookup"><span data-stu-id="d7187-496">`value` != 1</span></span>|`baseValue` = <xref:System.Double.PositiveInfinity?displayProperty=nameWithType>|<xref:System.Double.NaN?displayProperty=nameWithType>|  
|<span data-ttu-id="d7187-497">(любое значение)</span><span class="sxs-lookup"><span data-stu-id="d7187-497">(any value)</span></span>|`baseValue` = <xref:System.Double.NaN?displayProperty=nameWithType>|<xref:System.Double.NaN?displayProperty=nameWithType>|  
|<span data-ttu-id="d7187-498">(любое значение)</span><span class="sxs-lookup"><span data-stu-id="d7187-498">(any value)</span></span>|<span data-ttu-id="d7187-499">`baseValue` = 1</span><span class="sxs-lookup"><span data-stu-id="d7187-499">`baseValue` = 1</span></span>|<xref:System.Double.NaN?displayProperty=nameWithType>|  
|<span data-ttu-id="d7187-500">`value` = 0</span><span class="sxs-lookup"><span data-stu-id="d7187-500">`value` = 0</span></span>|<span data-ttu-id="d7187-501">0 < `baseValue` < 1</span><span class="sxs-lookup"><span data-stu-id="d7187-501">0 < `baseValue` < 1</span></span>|<xref:System.Double.PositiveInfinity?displayProperty=nameWithType>|  
|<span data-ttu-id="d7187-502">`value` = 0</span><span class="sxs-lookup"><span data-stu-id="d7187-502">`value` = 0</span></span>|<span data-ttu-id="d7187-503">`baseValue`> 1</span><span class="sxs-lookup"><span data-stu-id="d7187-503">`baseValue` > 1</span></span>|<xref:System.Double.PositiveInfinity?displayProperty=nameWithType>|  
|<span data-ttu-id="d7187-504">`value` = 1</span><span class="sxs-lookup"><span data-stu-id="d7187-504">`value` = 1</span></span>|<span data-ttu-id="d7187-505">`baseValue` = 0</span><span class="sxs-lookup"><span data-stu-id="d7187-505">`baseValue` = 0</span></span>|<span data-ttu-id="d7187-506">0</span><span class="sxs-lookup"><span data-stu-id="d7187-506">0</span></span>|  
|<span data-ttu-id="d7187-507">`value` = 1</span><span class="sxs-lookup"><span data-stu-id="d7187-507">`value` = 1</span></span>|`baseValue` = <xref:System.Double.PositiveInfinity?displayProperty=nameWithType>|<span data-ttu-id="d7187-508">0</span><span class="sxs-lookup"><span data-stu-id="d7187-508">0</span></span>|  
  
 <span data-ttu-id="d7187-509">Чтобы вычислить десятичный логарифм <xref:System.Numerics.BigInteger> значения, <xref:System.Numerics.BigInteger.Log10%2A> вызовите метод.</span><span class="sxs-lookup"><span data-stu-id="d7187-509">To calculate the base 10 logarithm of a <xref:System.Numerics.BigInteger> value, call the <xref:System.Numerics.BigInteger.Log10%2A> method.</span></span> <span data-ttu-id="d7187-510">Чтобы вычислить натуральный логарифм числа, вызовите <xref:System.Numerics.BigInteger.Log%28System.Numerics.BigInteger%29> метод.</span><span class="sxs-lookup"><span data-stu-id="d7187-510">To calculate the natural logarithm of a number, call the <xref:System.Numerics.BigInteger.Log%28System.Numerics.BigInteger%29> method.</span></span>  
  
 <span data-ttu-id="d7187-511">Этот метод соответствует <xref:System.Math.Log%2A?displayProperty=nameWithType> методу для числовых типов-примитивов.</span><span class="sxs-lookup"><span data-stu-id="d7187-511">This method corresponds to the <xref:System.Math.Log%2A?displayProperty=nameWithType> method for the primitive numeric types.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="d7187-512">Логарифм <paramref name="value" /> находится вне диапазона типа данных <see cref="T:System.Double" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-512">The log of <paramref name="value" /> is out of range of the <see cref="T:System.Double" /> data type.</span></span></exception>
        <altmember cref="M:System.Numerics.BigInteger.Log10(System.Numerics.BigInteger)" />
      </Docs>
    </Member>
    <Member MemberName="Log10">
      <MemberSignature Language="C#" Value="public static double Log10 (System.Numerics.BigInteger value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Log10(valuetype System.Numerics.BigInteger value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.Log10(System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Log10 (value As BigInteger) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Log10(System::Numerics::BigInteger value);" />
      <MemberSignature Language="F#" Value="static member Log10 : System.Numerics.BigInteger -&gt; double" Usage="System.Numerics.BigInteger.Log10 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d7187-513">Число, логарифм которого должен быть найден.</span><span class="sxs-lookup"><span data-stu-id="d7187-513">A number whose logarithm is to be found.</span></span></param>
        <summary><span data-ttu-id="d7187-514">Возвращает логарифм с основанием 10 указанного числа.</span><span class="sxs-lookup"><span data-stu-id="d7187-514">Returns the base 10 logarithm of a specified number.</span></span></summary>
        <returns><span data-ttu-id="d7187-515">Логарифм по основанию 10 числа <paramref name="value" />, как показано в таблице в разделе примечаний.</span><span class="sxs-lookup"><span data-stu-id="d7187-515">The base 10 logarithm of <paramref name="value" />, as shown in the table in the Remarks section.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7187-516">`value` Параметр указывается как базовое 10-число.</span><span class="sxs-lookup"><span data-stu-id="d7187-516">The `value` parameter is specified as a base 10 number.</span></span>  
  
 <span data-ttu-id="d7187-517">Точное возвращаемое значение метода зависит от знака `value`, как показано в следующей таблице.</span><span class="sxs-lookup"><span data-stu-id="d7187-517">The precise return value of the method depends on the sign of `value`, as the following table shows.</span></span>  
  
|<span data-ttu-id="d7187-518">Знак параметра значения</span><span class="sxs-lookup"><span data-stu-id="d7187-518">Sign of value parameter</span></span>|<span data-ttu-id="d7187-519">Возвращаемое значение</span><span class="sxs-lookup"><span data-stu-id="d7187-519">Return value</span></span>|  
|-----------------------------|------------------|  
|<span data-ttu-id="d7187-520">Положительное число</span><span class="sxs-lookup"><span data-stu-id="d7187-520">Positive</span></span>|<span data-ttu-id="d7187-521">Журнал `value`с основанием 10, то есть log10`value`.</span><span class="sxs-lookup"><span data-stu-id="d7187-521">The base 10 log of `value`; that is, log10`value`.</span></span>|  
|<span data-ttu-id="d7187-522">Нуль</span><span class="sxs-lookup"><span data-stu-id="d7187-522">Zero</span></span>|<span data-ttu-id="d7187-523"><xref:System.Double.NegativeInfinity?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="d7187-523"><xref:System.Double.NegativeInfinity?displayProperty=nameWithType>.</span></span>|  
|<span data-ttu-id="d7187-524">Отрицательное число</span><span class="sxs-lookup"><span data-stu-id="d7187-524">Negative</span></span>|<span data-ttu-id="d7187-525"><xref:System.Double.NaN?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="d7187-525"><xref:System.Double.NaN?displayProperty=nameWithType>.</span></span>|  
  
 <span data-ttu-id="d7187-526">Чтобы вычислить натуральный логарифм <xref:System.Numerics.BigInteger> значения, <xref:System.Numerics.BigInteger.Log%28System.Numerics.BigInteger%29?displayProperty=nameWithType> вызовите метод.</span><span class="sxs-lookup"><span data-stu-id="d7187-526">To calculate the natural logarithm of a <xref:System.Numerics.BigInteger> value, call the <xref:System.Numerics.BigInteger.Log%28System.Numerics.BigInteger%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="d7187-527">Чтобы вычислить логарифм числа в другой базе, вызовите <xref:System.Numerics.BigInteger.Log%28System.Numerics.BigInteger%2CSystem.Double%29?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="d7187-527">To calculate the logarithm of a number in another base, call the <xref:System.Numerics.BigInteger.Log%28System.Numerics.BigInteger%2CSystem.Double%29?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="d7187-528">Этот метод соответствует <xref:System.Math.Log10%2A?displayProperty=nameWithType> методу для числовых типов-примитивов.</span><span class="sxs-lookup"><span data-stu-id="d7187-528">This method corresponds to the <xref:System.Math.Log10%2A?displayProperty=nameWithType> method for the primitive numeric types.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="d7187-529">Десятичный логарифм <paramref name="value" /> находится вне диапазона типа данных <see cref="T:System.Double" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-529">The base 10 log of <paramref name="value" /> is out of range of the <see cref="T:System.Double" /> data type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger Max (System.Numerics.BigInteger left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.BigInteger Max(valuetype System.Numerics.BigInteger left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.Max(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Max (left As BigInteger, right As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger Max(System::Numerics::BigInteger left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member Max : System.Numerics.BigInteger * System.Numerics.BigInteger -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.Max (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="d7187-530">Первое сравниваемое значение.</span><span class="sxs-lookup"><span data-stu-id="d7187-530">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="d7187-531">Второе сравниваемое значение.</span><span class="sxs-lookup"><span data-stu-id="d7187-531">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="d7187-532">Возвращает наибольшее из двух значений <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-532">Returns the larger of two <see cref="T:System.Numerics.BigInteger" /> values.</span></span></summary>
        <returns><span data-ttu-id="d7187-533">Большее из значений параметров <paramref name="left" /> и <paramref name="right" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-533">The <paramref name="left" /> or <paramref name="right" /> parameter, whichever is larger.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7187-534">Этот метод соответствует <xref:System.Math.Max%2A?displayProperty=nameWithType> методу для числовых типов-примитивов.</span><span class="sxs-lookup"><span data-stu-id="d7187-534">This method corresponds to the <xref:System.Math.Max%2A?displayProperty=nameWithType> method for primitive numeric types.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d7187-535">В следующем примере <xref:System.Numerics.BigInteger.Max%2A> метод используется для выбора самого крупного числа в <xref:System.Numerics.BigInteger> массиве значений.</span><span class="sxs-lookup"><span data-stu-id="d7187-535">The following example uses the <xref:System.Numerics.BigInteger.Max%2A> method to select the largest number in an array of <xref:System.Numerics.BigInteger> values.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Max#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Max/cs/Max1.cs#1)]
 [!code-vb[System.Numerics.BigInteger.Max#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Max/vb/Max1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Numerics.BigInteger.Min(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger Min (System.Numerics.BigInteger left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.BigInteger Min(valuetype System.Numerics.BigInteger left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.Min(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Min (left As BigInteger, right As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger Min(System::Numerics::BigInteger left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member Min : System.Numerics.BigInteger * System.Numerics.BigInteger -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.Min (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="d7187-536">Первое сравниваемое значение.</span><span class="sxs-lookup"><span data-stu-id="d7187-536">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="d7187-537">Второе сравниваемое значение.</span><span class="sxs-lookup"><span data-stu-id="d7187-537">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="d7187-538">Возвращает наименьшее из двух значений <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-538">Returns the smaller of two <see cref="T:System.Numerics.BigInteger" /> values.</span></span></summary>
        <returns><span data-ttu-id="d7187-539">Меньшее из значений параметров <paramref name="left" /> и <paramref name="right" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-539">The <paramref name="left" /> or <paramref name="right" /> parameter, whichever is smaller.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7187-540">Этот метод соответствует <xref:System.Math.Min%2A?displayProperty=nameWithType> методу для числовых типов-примитивов.</span><span class="sxs-lookup"><span data-stu-id="d7187-540">This method corresponds to the <xref:System.Math.Min%2A?displayProperty=nameWithType> method for primitive numeric types.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d7187-541">В следующем примере <xref:System.Numerics.BigInteger.Min%2A> метод используется для выбора наименьшего числа в <xref:System.Numerics.BigInteger> массиве значений.</span><span class="sxs-lookup"><span data-stu-id="d7187-541">The following example uses the <xref:System.Numerics.BigInteger.Min%2A> method to select the smallest number in an array of <xref:System.Numerics.BigInteger> values.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Min#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Min/cs/Min1.cs#1)]
 [!code-vb[System.Numerics.BigInteger.Min#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Min/vb/Min1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Numerics.BigInteger.Max(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      </Docs>
    </Member>
    <Member MemberName="MinusOne">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger MinusOne { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Numerics.BigInteger MinusOne" />
      <MemberSignature Language="DocId" Value="P:System.Numerics.BigInteger.MinusOne" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MinusOne As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Numerics::BigInteger MinusOne { System::Numerics::BigInteger get(); };" />
      <MemberSignature Language="F#" Value="member this.MinusOne : System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.MinusOne" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d7187-542">Получает значение, представляющее минус единицу (-1).</span><span class="sxs-lookup"><span data-stu-id="d7187-542">Gets a value that represents the number negative one (-1).</span></span></summary>
        <value><span data-ttu-id="d7187-543">Целое число, равное минус единице (-1).</span><span class="sxs-lookup"><span data-stu-id="d7187-543">An integer whose value is negative one (-1).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7187-544">Свойство используется для <xref:System.Numerics.BigInteger> сравнения значения с-1 или для <xref:System.Numerics.BigInteger> присваивания-1 объекту. <xref:System.Numerics.BigInteger.MinusOne%2A></span><span class="sxs-lookup"><span data-stu-id="d7187-544">The <xref:System.Numerics.BigInteger.MinusOne%2A> property is used to compare a <xref:System.Numerics.BigInteger> value to -1 or to assign -1 to a <xref:System.Numerics.BigInteger> object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Numerics.BigInteger.One" />
        <altmember cref="P:System.Numerics.BigInteger.IsOne" />
      </Docs>
    </Member>
    <Member MemberName="ModPow">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger ModPow (System.Numerics.BigInteger value, System.Numerics.BigInteger exponent, System.Numerics.BigInteger modulus);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.BigInteger ModPow(valuetype System.Numerics.BigInteger value, valuetype System.Numerics.BigInteger exponent, valuetype System.Numerics.BigInteger modulus) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.ModPow(System.Numerics.BigInteger,System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ModPow (value As BigInteger, exponent As BigInteger, modulus As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger ModPow(System::Numerics::BigInteger value, System::Numerics::BigInteger exponent, System::Numerics::BigInteger modulus);" />
      <MemberSignature Language="F#" Value="static member ModPow : System.Numerics.BigInteger * System.Numerics.BigInteger * System.Numerics.BigInteger -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.ModPow (value, exponent, modulus)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
        <Parameter Name="exponent" Type="System.Numerics.BigInteger" />
        <Parameter Name="modulus" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d7187-545">Число, возведенное в степень <paramref name="exponent" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-545">The number to raise to the <paramref name="exponent" /> power.</span></span></param>
        <param name="exponent"><span data-ttu-id="d7187-546">Показатель степени, в которую будет возведено значение <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-546">The exponent to raise <paramref name="value" /> by.</span></span></param>
        <param name="modulus"><span data-ttu-id="d7187-547">Число, на которое делится значение <paramref name="value" />, возведенное в степень <paramref name="exponent" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-547">The number by which to divide <paramref name="value" /> raised to the <paramref name="exponent" /> power.</span></span></param>
        <summary><span data-ttu-id="d7187-548">Выполняет модульное деление числа, возведенного в степень другого числа.</span><span class="sxs-lookup"><span data-stu-id="d7187-548">Performs modulus division on a number raised to the power of another number.</span></span></summary>
        <returns><span data-ttu-id="d7187-549">Остаток от деления <paramref name="value" /><sup>exponent</sup> на <paramref name="modulus" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-549">The remainder after dividing <paramref name="value" /><sup>exponent</sup> by <paramref name="modulus" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7187-550"><xref:System.Numerics.BigInteger.ModPow%2A> Метод вычисляет следующее выражение:</span><span class="sxs-lookup"><span data-stu-id="d7187-550">The <xref:System.Numerics.BigInteger.ModPow%2A> method evaluates the following expression:</span></span>  
  
 <span data-ttu-id="d7187-551">(Басевалуе ^ экспонента) Остаток от деления</span><span class="sxs-lookup"><span data-stu-id="d7187-551">(baseValue ^ exponent) Mod modulus</span></span>  
  
 <span data-ttu-id="d7187-552">Чтобы возвести возведение в степень на <xref:System.Numerics.BigInteger> значения без деления модуля, <xref:System.Numerics.BigInteger.Pow%2A> используйте метод.</span><span class="sxs-lookup"><span data-stu-id="d7187-552">To perform exponentiation on <xref:System.Numerics.BigInteger> values without modulus division, use the <xref:System.Numerics.BigInteger.Pow%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d7187-553">В следующем примере показана простая иллюстрация вызова <xref:System.Numerics.BigInteger.ModPow%2A> метода.</span><span class="sxs-lookup"><span data-stu-id="d7187-553">The following example provides a simple illustration of calling the <xref:System.Numerics.BigInteger.ModPow%2A> method.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.ModPow#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.ModPow/cs/ModPow1.cs#1)]
 [!code-vb[System.Numerics.BigInteger.ModPow#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.ModPow/vb/ModPow1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.DivideByZeroException"><span data-ttu-id="d7187-554"><paramref name="modulus" /> равен нулю.</span><span class="sxs-lookup"><span data-stu-id="d7187-554"><paramref name="modulus" /> is zero.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="d7187-555"><paramref name="exponent" /> является отрицательным значением.</span><span class="sxs-lookup"><span data-stu-id="d7187-555"><paramref name="exponent" /> is negative.</span></span></exception>
        <altmember cref="M:System.Numerics.BigInteger.Pow(System.Numerics.BigInteger,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Multiply">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger Multiply (System.Numerics.BigInteger left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.BigInteger Multiply(valuetype System.Numerics.BigInteger left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.Multiply(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Multiply (left As BigInteger, right As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger Multiply(System::Numerics::BigInteger left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member Multiply : System.Numerics.BigInteger * System.Numerics.BigInteger -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.Multiply (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="d7187-556">Первое число для умножения.</span><span class="sxs-lookup"><span data-stu-id="d7187-556">The first number to multiply.</span></span></param>
        <param name="right"><span data-ttu-id="d7187-557">Второе число для умножения.</span><span class="sxs-lookup"><span data-stu-id="d7187-557">The second number to multiply.</span></span></param>
        <summary><span data-ttu-id="d7187-558">Возвращает произведение двух значений <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-558">Returns the product of two <see cref="T:System.Numerics.BigInteger" /> values.</span></span></summary>
        <returns><span data-ttu-id="d7187-559">Произведение параметров <paramref name="left" /> и <paramref name="right" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-559">The product of the <paramref name="left" /> and <paramref name="right" /> parameters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7187-560"><xref:System.Numerics.BigInteger.Multiply%2A> Метод реализуется для языков, которые не поддерживают перегрузку операторов.</span><span class="sxs-lookup"><span data-stu-id="d7187-560">The <xref:System.Numerics.BigInteger.Multiply%2A> method is implemented for languages that do not support operator overloading.</span></span> <span data-ttu-id="d7187-561">Его поведение идентично умножению с помощью оператора умножения.</span><span class="sxs-lookup"><span data-stu-id="d7187-561">Its behavior is identical to multiplication using the multiplication operator.</span></span> <span data-ttu-id="d7187-562">Кроме того <xref:System.Numerics.BigInteger.Multiply%2A> , метод является полезным заменой для оператора умножения при создании экземпляра <xref:System.Numerics.BigInteger> переменной путем назначения ей продукта, полученного из умножения, как показано в следующем примере.</span><span class="sxs-lookup"><span data-stu-id="d7187-562">In addition, the <xref:System.Numerics.BigInteger.Multiply%2A> method is a useful substitute for the multiplication operator when instantiating a <xref:System.Numerics.BigInteger> variable by assigning it a product that results from multiplication, as shown in the following example.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.OperationMethods#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.OperationMethods/cs/Multiply1.cs#1)]
 [!code-vb[System.Numerics.BigInteger.OperationMethods#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.OperationMethods/vb/Multiply1.vb#1)]  
  
 <span data-ttu-id="d7187-563">При необходимости этот метод автоматически выполняет неявное преобразование других целочисленных типов <xref:System.Numerics.BigInteger> в объекты.</span><span class="sxs-lookup"><span data-stu-id="d7187-563">If necessary, this method automatically performs implicit conversion of other integral types to <xref:System.Numerics.BigInteger> objects.</span></span> <span data-ttu-id="d7187-564">Это показано в примере в следующем разделе, где <xref:System.Numerics.BigInteger.Multiply%2A> методу передается два <xref:System.Int64> значения.</span><span class="sxs-lookup"><span data-stu-id="d7187-564">This is illustrated in the example in the next section, where the <xref:System.Numerics.BigInteger.Multiply%2A> method is passed two <xref:System.Int64> values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d7187-565">В следующем примере предпринимается попытка выполнить умножение с двумя длинными целыми числами.</span><span class="sxs-lookup"><span data-stu-id="d7187-565">The following example tries to perform multiplication with two long integers.</span></span> <span data-ttu-id="d7187-566">Поскольку результат превышает диапазон длинного целого числа, <xref:System.OverflowException> создается исключение, <xref:System.Numerics.BigInteger.Multiply%2A> а метод вызывается для выполнения умножения.</span><span class="sxs-lookup"><span data-stu-id="d7187-566">Because the result exceeds the range of a long integer, an <xref:System.OverflowException> is thrown, and the <xref:System.Numerics.BigInteger.Multiply%2A> method is called to handle the multiplication.</span></span> <span data-ttu-id="d7187-567">Обратите C# внимание, что требует использования `checked` ключевого слова (как в этом `/checked+` примере) или параметра компилятора, чтобы гарантировать возникновение исключения в числовом переполнении.</span><span class="sxs-lookup"><span data-stu-id="d7187-567">Note that C# requires that you use either the `checked` keyword (as in this example) or the `/checked+` compiler option to make sure an exception is thrown on a numeric overflow.</span></span>  
  
 [!code-csharp[System.Numeric.BigInteger.Class#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/cs/BigInteger_Examples.cs#7)]
 [!code-vb[System.Numeric.BigInteger.Class#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/vb/BigInteger_Examples.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Numerics.BigInteger.op_Multiply(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      </Docs>
    </Member>
    <Member MemberName="Negate">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger Negate (System.Numerics.BigInteger value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.BigInteger Negate(valuetype System.Numerics.BigInteger value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.Negate(System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Negate (value As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger Negate(System::Numerics::BigInteger value);" />
      <MemberSignature Language="F#" Value="static member Negate : System.Numerics.BigInteger -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.Negate value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d7187-568">Инвертируемое значение.</span><span class="sxs-lookup"><span data-stu-id="d7187-568">The value to negate.</span></span></param>
        <summary><span data-ttu-id="d7187-569">Меняет знак указанного значения <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-569">Negates a specified <see cref="T:System.Numerics.BigInteger" /> value.</span></span></summary>
        <returns><span data-ttu-id="d7187-570">Результат умножения параметра <paramref name="value" /> на минус единицу (-1).</span><span class="sxs-lookup"><span data-stu-id="d7187-570">The result of the <paramref name="value" /> parameter multiplied by negative one (-1).</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7187-571">Отрицание получает обратный обратный номер.</span><span class="sxs-lookup"><span data-stu-id="d7187-571">Negation obtains the additive inverse of a number.</span></span> <span data-ttu-id="d7187-572">Обратный Инверсия числа — это число, которое создает нулевое значение при добавлении к исходному числу.</span><span class="sxs-lookup"><span data-stu-id="d7187-572">The additive inverse of a number is a number that produces a value of zero when it is added to the original number.</span></span>  
  
 <span data-ttu-id="d7187-573"><xref:System.Numerics.BigInteger.Negate%2A> Метод реализуется для языков, которые не поддерживают пользовательские операторы.</span><span class="sxs-lookup"><span data-stu-id="d7187-573">The <xref:System.Numerics.BigInteger.Negate%2A> method is implemented for languages that do not support custom operators.</span></span> <span data-ttu-id="d7187-574">Его поведение идентично поведению отрицания с помощью унарного оператора отрицания.</span><span class="sxs-lookup"><span data-stu-id="d7187-574">Its behavior is identical to negation using the unary negation operator.</span></span> <span data-ttu-id="d7187-575">Кроме того <xref:System.Numerics.BigInteger.Negate%2A> , метод является удобным заменой оператору отрицания при создании экземпляра <xref:System.Numerics.BigInteger> переменной, как показано в следующем примере.</span><span class="sxs-lookup"><span data-stu-id="d7187-575">In addition, the <xref:System.Numerics.BigInteger.Negate%2A> method is a useful substitute for the negation operator when instantiating a <xref:System.Numerics.BigInteger> variable, as shown in the following example.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.OperationMethods#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.OperationMethods/cs/Multiply1.cs#4)]
 [!code-vb[System.Numerics.BigInteger.OperationMethods#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.OperationMethods/vb/Multiply1.vb#4)]  
  
   
  
## Examples  
 <span data-ttu-id="d7187-576">В следующем примере показаны три способа отрицания значения <xref:System.Numerics.BigInteger> объекта.</span><span class="sxs-lookup"><span data-stu-id="d7187-576">The following example illustrates three ways to negate the value of a <xref:System.Numerics.BigInteger> object.</span></span>  
  
 [!code-csharp[System.Numeric.BigInteger.Class#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/cs/BigInteger_Examples.cs#16)]
 [!code-vb[System.Numeric.BigInteger.Class#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/vb/BigInteger_Examples.vb#16)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Numerics.BigInteger.op_UnaryNegation(System.Numerics.BigInteger)" />
      </Docs>
    </Member>
    <Member MemberName="One">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger One { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Numerics.BigInteger One" />
      <MemberSignature Language="DocId" Value="P:System.Numerics.BigInteger.One" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property One As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Numerics::BigInteger One { System::Numerics::BigInteger get(); };" />
      <MemberSignature Language="F#" Value="member this.One : System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.One" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d7187-577">Получает значение, представляющее единицу (1).</span><span class="sxs-lookup"><span data-stu-id="d7187-577">Gets a value that represents the number one (1).</span></span></summary>
        <value><span data-ttu-id="d7187-578">Целое число, равное единице (1).</span><span class="sxs-lookup"><span data-stu-id="d7187-578">An object whose value is one (1).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7187-579">Свойство обычно используется для <xref:System.Numerics.BigInteger> сравнения значения с 1 или для присваивания 1 <xref:System.Numerics.BigInteger> объекту. <xref:System.Numerics.BigInteger.One%2A></span><span class="sxs-lookup"><span data-stu-id="d7187-579">The <xref:System.Numerics.BigInteger.One%2A> property is usually used to compare a <xref:System.Numerics.BigInteger> value to 1 or to assign 1 to a <xref:System.Numerics.BigInteger> object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Numerics.BigInteger.IsOne" />
        <altmember cref="P:System.Numerics.BigInteger.MinusOne" />
      </Docs>
    </Member>
    <Member MemberName="op_Addition">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger operator + (System.Numerics.BigInteger left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_Addition(valuetype System.Numerics.BigInteger left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Addition(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator + (left As BigInteger, right As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger operator +(System::Numerics::BigInteger left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member ( + ) : System.Numerics.BigInteger * System.Numerics.BigInteger -&gt; System.Numerics.BigInteger" Usage="left + right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="d7187-580">Первое из складываемых значений.</span><span class="sxs-lookup"><span data-stu-id="d7187-580">The first value to add.</span></span></param>
        <param name="right"><span data-ttu-id="d7187-581">Второе из складываемых значений.</span><span class="sxs-lookup"><span data-stu-id="d7187-581">The second value to add.</span></span></param>
        <summary><span data-ttu-id="d7187-582">Складывает значения двух указанных объектов <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-582">Adds the values of two specified <see cref="T:System.Numerics.BigInteger" /> objects.</span></span></summary>
        <returns><span data-ttu-id="d7187-583">Сумма <paramref name="left" /> и <paramref name="right" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-583">The sum of <paramref name="left" /> and <paramref name="right" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7187-584">Метод определяет операцию сложения <xref:System.Numerics.BigInteger>значений. <xref:System.Numerics.BigInteger.op_Addition%2A></span><span class="sxs-lookup"><span data-stu-id="d7187-584">The <xref:System.Numerics.BigInteger.op_Addition%2A> method defines the addition operation for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="d7187-585">Он включает следующий код:</span><span class="sxs-lookup"><span data-stu-id="d7187-585">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numeric.BigInteger.Class#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/cs/BigInteger_Examples.cs#12)]
 [!code-vb[System.Numeric.BigInteger.Class#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/vb/BigInteger_Examples.vb#12)]  
  
 <span data-ttu-id="d7187-586">Языки, которые не поддерживают пользовательские операторы, могут вызывать <xref:System.Numerics.BigInteger.Add%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="d7187-586">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.Add%2A> method instead.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Numerics.BigInteger.Add(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      </Docs>
    </Member>
    <Member MemberName="op_BitwiseAnd">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger operator &amp; (System.Numerics.BigInteger left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_BitwiseAnd(valuetype System.Numerics.BigInteger left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_BitwiseAnd(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator And (left As BigInteger, right As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger operator &amp;(System::Numerics::BigInteger left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member ( &amp;&amp;&amp; ) : System.Numerics.BigInteger * System.Numerics.BigInteger -&gt; System.Numerics.BigInteger" Usage="left &amp;&amp;&amp; right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="d7187-587">Первое значение в вычитании.</span><span class="sxs-lookup"><span data-stu-id="d7187-587">The first value.</span></span></param>
        <param name="right"><span data-ttu-id="d7187-588">Второе значение в вычитании.</span><span class="sxs-lookup"><span data-stu-id="d7187-588">The second value.</span></span></param>
        <summary><span data-ttu-id="d7187-589">Выполняет битовую операцию <see langword="And" /> для двух значений <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-589">Performs a bitwise <see langword="And" /> operation on two <see cref="T:System.Numerics.BigInteger" /> values.</span></span></summary>
        <returns><span data-ttu-id="d7187-590">Результат битовой операции <see langword="And" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-590">The result of the bitwise <see langword="And" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7187-591">Метод определяет побитовую `And` операцию для <xref:System.Numerics.BigInteger> значений. <xref:System.Numerics.BigInteger.op_BitwiseAnd%2A></span><span class="sxs-lookup"><span data-stu-id="d7187-591">The <xref:System.Numerics.BigInteger.op_BitwiseAnd%2A> method defines the bitwise `And` operation for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="d7187-592">Побитовая `And` операция задает бит результата только в том случае, если `left` также заданы соответствующие биты в и `right` , как показано в следующей таблице.</span><span class="sxs-lookup"><span data-stu-id="d7187-592">The bitwise `And` operation sets a result bit only if the corresponding bits in `left` and `right` are also set, as shown in the following table.</span></span>  
  
|<span data-ttu-id="d7187-593">Бит в`left`</span><span class="sxs-lookup"><span data-stu-id="d7187-593">Bit in `left`</span></span>|<span data-ttu-id="d7187-594">Бит в`right`</span><span class="sxs-lookup"><span data-stu-id="d7187-594">Bit in `right`</span></span>|<span data-ttu-id="d7187-595">Бит в результате</span><span class="sxs-lookup"><span data-stu-id="d7187-595">Bit in result</span></span>|  
|-------------------|--------------------|-------------------|  
|<span data-ttu-id="d7187-596">0</span><span class="sxs-lookup"><span data-stu-id="d7187-596">0</span></span>|<span data-ttu-id="d7187-597">0</span><span class="sxs-lookup"><span data-stu-id="d7187-597">0</span></span>|<span data-ttu-id="d7187-598">0</span><span class="sxs-lookup"><span data-stu-id="d7187-598">0</span></span>|  
|<span data-ttu-id="d7187-599">1</span><span class="sxs-lookup"><span data-stu-id="d7187-599">1</span></span>|<span data-ttu-id="d7187-600">0</span><span class="sxs-lookup"><span data-stu-id="d7187-600">0</span></span>|<span data-ttu-id="d7187-601">0</span><span class="sxs-lookup"><span data-stu-id="d7187-601">0</span></span>|  
|<span data-ttu-id="d7187-602">1</span><span class="sxs-lookup"><span data-stu-id="d7187-602">1</span></span>|<span data-ttu-id="d7187-603">1</span><span class="sxs-lookup"><span data-stu-id="d7187-603">1</span></span>|<span data-ttu-id="d7187-604">1</span><span class="sxs-lookup"><span data-stu-id="d7187-604">1</span></span>|  
|<span data-ttu-id="d7187-605">0</span><span class="sxs-lookup"><span data-stu-id="d7187-605">0</span></span>|<span data-ttu-id="d7187-606">1</span><span class="sxs-lookup"><span data-stu-id="d7187-606">1</span></span>|<span data-ttu-id="d7187-607">0</span><span class="sxs-lookup"><span data-stu-id="d7187-607">0</span></span>|  
  
 <span data-ttu-id="d7187-608"><xref:System.Numerics.BigInteger.op_BitwiseAnd%2A> Метод включает следующий код:</span><span class="sxs-lookup"><span data-stu-id="d7187-608">The <xref:System.Numerics.BigInteger.op_BitwiseAnd%2A> method enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#1)]
 [!code-vb[System.Numerics.BigInteger.Operators#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#1)]  
  
 <span data-ttu-id="d7187-609">Метод выполняет побитовую `And` операцию над двумя <xref:System.Numerics.BigInteger> значениями, как если бы они были как в представлении дополнения в двух, так и с расширением виртуального знака. <xref:System.Numerics.BigInteger.op_BitwiseAnd%2A></span><span class="sxs-lookup"><span data-stu-id="d7187-609">The <xref:System.Numerics.BigInteger.op_BitwiseAnd%2A> method performs the bitwise `And` operation on two <xref:System.Numerics.BigInteger> values as if they were both in two's complement representation with virtual sign extension.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_BitwiseOr">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger operator | (System.Numerics.BigInteger left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_BitwiseOr(valuetype System.Numerics.BigInteger left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_BitwiseOr(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator Or (left As BigInteger, right As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger operator |(System::Numerics::BigInteger left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member ( ||| ) : System.Numerics.BigInteger * System.Numerics.BigInteger -&gt; System.Numerics.BigInteger" Usage="left ||| right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="d7187-610">Первое значение в вычитании.</span><span class="sxs-lookup"><span data-stu-id="d7187-610">The first value.</span></span></param>
        <param name="right"><span data-ttu-id="d7187-611">Второе значение в вычитании.</span><span class="sxs-lookup"><span data-stu-id="d7187-611">The second value.</span></span></param>
        <summary><span data-ttu-id="d7187-612">Выполняет битовую операцию <see langword="Or" /> для двух значений <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-612">Performs a bitwise <see langword="Or" /> operation on two <see cref="T:System.Numerics.BigInteger" /> values.</span></span></summary>
        <returns><span data-ttu-id="d7187-613">Результат битовой операции <see langword="Or" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-613">The result of the bitwise <see langword="Or" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7187-614">Метод определяет побитовую `Or` операцию для <xref:System.Numerics.BigInteger> значений. <xref:System.Numerics.BigInteger.op_BitwiseOr%2A></span><span class="sxs-lookup"><span data-stu-id="d7187-614">The <xref:System.Numerics.BigInteger.op_BitwiseOr%2A> method defines the bitwise `Or` operation for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="d7187-615">Побитовая `Or` операция задает бит результата только в том случае, если задан один или оба `left` соответствующих `right` бита в и установлены, как показано в следующей таблице.</span><span class="sxs-lookup"><span data-stu-id="d7187-615">The bitwise `Or` operation sets a result bit only if either or both of the corresponding bits in `left` and `right` are set, as shown in the following table.</span></span>  
  
|<span data-ttu-id="d7187-616">Бит в`left`</span><span class="sxs-lookup"><span data-stu-id="d7187-616">Bit in `left`</span></span>|<span data-ttu-id="d7187-617">Бит в`right`</span><span class="sxs-lookup"><span data-stu-id="d7187-617">Bit in `right`</span></span>|<span data-ttu-id="d7187-618">Бит в результате</span><span class="sxs-lookup"><span data-stu-id="d7187-618">Bit in result</span></span>|  
|-------------------|--------------------|-------------------|  
|<span data-ttu-id="d7187-619">0</span><span class="sxs-lookup"><span data-stu-id="d7187-619">0</span></span>|<span data-ttu-id="d7187-620">0</span><span class="sxs-lookup"><span data-stu-id="d7187-620">0</span></span>|<span data-ttu-id="d7187-621">0</span><span class="sxs-lookup"><span data-stu-id="d7187-621">0</span></span>|  
|<span data-ttu-id="d7187-622">1</span><span class="sxs-lookup"><span data-stu-id="d7187-622">1</span></span>|<span data-ttu-id="d7187-623">0</span><span class="sxs-lookup"><span data-stu-id="d7187-623">0</span></span>|<span data-ttu-id="d7187-624">1</span><span class="sxs-lookup"><span data-stu-id="d7187-624">1</span></span>|  
|<span data-ttu-id="d7187-625">1</span><span class="sxs-lookup"><span data-stu-id="d7187-625">1</span></span>|<span data-ttu-id="d7187-626">1</span><span class="sxs-lookup"><span data-stu-id="d7187-626">1</span></span>|<span data-ttu-id="d7187-627">1</span><span class="sxs-lookup"><span data-stu-id="d7187-627">1</span></span>|  
|<span data-ttu-id="d7187-628">0</span><span class="sxs-lookup"><span data-stu-id="d7187-628">0</span></span>|<span data-ttu-id="d7187-629">1</span><span class="sxs-lookup"><span data-stu-id="d7187-629">1</span></span>|<span data-ttu-id="d7187-630">1</span><span class="sxs-lookup"><span data-stu-id="d7187-630">1</span></span>|  
  
 <span data-ttu-id="d7187-631"><xref:System.Numerics.BigInteger.op_BitwiseOr%2A> Метод включает следующий код:</span><span class="sxs-lookup"><span data-stu-id="d7187-631">The <xref:System.Numerics.BigInteger.op_BitwiseOr%2A> method enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#2)]
 [!code-vb[System.Numerics.BigInteger.Operators#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#2)]  
  
 <span data-ttu-id="d7187-632">Метод выполняет побитовую `Or` операцию над двумя <xref:System.Numerics.BigInteger> значениями, как если бы они были как в представлении дополнения в двух, так и с расширением виртуального знака. <xref:System.Numerics.BigInteger.op_BitwiseOr%2A></span><span class="sxs-lookup"><span data-stu-id="d7187-632">The <xref:System.Numerics.BigInteger.op_BitwiseOr%2A> method performs the bitwise `Or` operation on two <xref:System.Numerics.BigInteger> values as if they were both in two's complement representation with virtual sign extension.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Decrement">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger operator -- (System.Numerics.BigInteger value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_Decrement(valuetype System.Numerics.BigInteger value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Decrement(System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared op_Decrement (value As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger operator --(System::Numerics::BigInteger value);" />
      <MemberSignature Language="F#" Value="static member op_Decrement : System.Numerics.BigInteger -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.op_Decrement value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d7187-633">Уменьшаемое значение.</span><span class="sxs-lookup"><span data-stu-id="d7187-633">The value to decrement.</span></span></param>
        <summary><span data-ttu-id="d7187-634">Уменьшает значение <see cref="T:System.Numerics.BigInteger" /> на 1.</span><span class="sxs-lookup"><span data-stu-id="d7187-634">Decrements a <see cref="T:System.Numerics.BigInteger" /> value by 1.</span></span></summary>
        <returns><span data-ttu-id="d7187-635">Значение параметра <paramref name="value" />, уменьшенное на 1.</span><span class="sxs-lookup"><span data-stu-id="d7187-635">The value of the <paramref name="value" /> parameter decremented by 1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7187-636">Метод определяет операцию декремента для <xref:System.Numerics.BigInteger> значений. <xref:System.Numerics.BigInteger.op_Decrement%2A></span><span class="sxs-lookup"><span data-stu-id="d7187-636">The <xref:System.Numerics.BigInteger.op_Decrement%2A> method defines the decrement operation for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="d7187-637">Он включает следующий код:</span><span class="sxs-lookup"><span data-stu-id="d7187-637">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numeric.BigInteger.Class#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/cs/BigInteger_Examples.cs#17)]  
  
 <span data-ttu-id="d7187-638">Языки, которые не поддерживают пользовательские операторы, могут вызывать <xref:System.Numerics.BigInteger.Subtract%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="d7187-638">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.Subtract%2A> method instead.</span></span> <span data-ttu-id="d7187-639">Например:</span><span class="sxs-lookup"><span data-stu-id="d7187-639">For example:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#3)]
 [!code-vb[System.Numerics.BigInteger.Operators#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#3)]  
  
 <span data-ttu-id="d7187-640">Поскольку <xref:System.Numerics.BigInteger> объекты являются неизменяемыми <xref:System.Numerics.BigInteger.op_Decrement%2A> , оператор создает новый <xref:System.Numerics.BigInteger> объект, значение которого меньше, <xref:System.Numerics.BigInteger> чем объект, представленный `value`.</span><span class="sxs-lookup"><span data-stu-id="d7187-640">Because <xref:System.Numerics.BigInteger> objects are immutable, the <xref:System.Numerics.BigInteger.op_Decrement%2A> operator creates a new <xref:System.Numerics.BigInteger> object whose value is one less than the <xref:System.Numerics.BigInteger> object represented by `value`.</span></span> <span data-ttu-id="d7187-641">Это означает, что повторные <xref:System.Numerics.BigInteger.op_Decrement%2A> вызовы могут быть дорогостоящими.</span><span class="sxs-lookup"><span data-stu-id="d7187-641">This means that repeated calls to <xref:System.Numerics.BigInteger.op_Decrement%2A> may be expensive.</span></span>  
  
 <span data-ttu-id="d7187-642">Эквивалентным методом для этого оператора является <xref:System.Numerics.BigInteger.Subtract%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="d7187-642">The equivalent method for this operator is <xref:System.Numerics.BigInteger.Subtract%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="M:System.Numerics.BigInteger.op_Increment(System.Numerics.BigInteger)" />
      </Docs>
    </Member>
    <Member MemberName="op_Division">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger operator / (System.Numerics.BigInteger dividend, System.Numerics.BigInteger divisor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_Division(valuetype System.Numerics.BigInteger dividend, valuetype System.Numerics.BigInteger divisor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Division(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator / (dividend As BigInteger, divisor As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger operator /(System::Numerics::BigInteger dividend, System::Numerics::BigInteger divisor);" />
      <MemberSignature Language="F#" Value="static member ( / ) : System.Numerics.BigInteger * System.Numerics.BigInteger -&gt; System.Numerics.BigInteger" Usage="dividend / divisor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dividend" Type="System.Numerics.BigInteger" />
        <Parameter Name="divisor" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="dividend"><span data-ttu-id="d7187-643">Значение, которое необходимо разделить.</span><span class="sxs-lookup"><span data-stu-id="d7187-643">The value to be divided.</span></span></param>
        <param name="divisor"><span data-ttu-id="d7187-644">Значение, на которое необходимо разделить.</span><span class="sxs-lookup"><span data-stu-id="d7187-644">The value to divide by.</span></span></param>
        <summary><span data-ttu-id="d7187-645">Делит указанное значение <see cref="T:System.Numerics.BigInteger" /> на другое указанное значение <see cref="T:System.Numerics.BigInteger" />, используя целочисленное деление.</span><span class="sxs-lookup"><span data-stu-id="d7187-645">Divides a specified <see cref="T:System.Numerics.BigInteger" /> value by another specified <see cref="T:System.Numerics.BigInteger" /> value by using integer division.</span></span></summary>
        <returns><span data-ttu-id="d7187-646">Целочисленный результат деления.</span><span class="sxs-lookup"><span data-stu-id="d7187-646">The integral result of the division.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7187-647">Метод определяет операцию деления для <xref:System.Numerics.BigInteger> значений. <xref:System.Numerics.BigInteger.op_Division%2A></span><span class="sxs-lookup"><span data-stu-id="d7187-647">The <xref:System.Numerics.BigInteger.op_Division%2A> method defines the division operation for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="d7187-648">Он включает следующий код:</span><span class="sxs-lookup"><span data-stu-id="d7187-648">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numeric.BigInteger.Class#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/cs/BigInteger_Examples.cs#13)]
 [!code-vb[System.Numeric.BigInteger.Class#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/vb/BigInteger_Examples.vb#13)]  
  
 <span data-ttu-id="d7187-649">Языки, которые не поддерживают настраиваемые операторы и перегрузку операторов, могут вызывать <xref:System.Numerics.BigInteger.Divide%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="d7187-649">Languages that do not support custom operators and operator overloading can call the <xref:System.Numerics.BigInteger.Divide%2A> method instead.</span></span>  
  
 <span data-ttu-id="d7187-650">Эквивалентным методом для этого оператора является<xref:System.Numerics.BigInteger.Divide%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="d7187-650">The equivalent method for this operator is <xref:System.Numerics.BigInteger.Divide%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType></span></span>  
  
## Examples  
 <span data-ttu-id="d7187-651">В следующем примере создается массив <xref:System.Numerics.BigInteger> значений.</span><span class="sxs-lookup"><span data-stu-id="d7187-651">The following example creates an array of <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="d7187-652">Затем он использует каждый элемент в качестве частного в операции деления, которая использует <xref:System.Numerics.BigInteger.Divide%2A> метод, оператор деления (/) <xref:System.Numerics.BigInteger.DivRem%2A> и метод.</span><span class="sxs-lookup"><span data-stu-id="d7187-652">It then uses each element as the quotient in a division operation that uses the <xref:System.Numerics.BigInteger.Divide%2A> method, the division operator (/), and the <xref:System.Numerics.BigInteger.DivRem%2A> method.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Divide#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Divide/cs/Divide1.cs#1)]
 [!code-vb[System.Numerics.BigInteger.Divide#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Divide/vb/Divide1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.DivideByZeroException"><span data-ttu-id="d7187-653">Значение параметра <paramref name="divisor" /> равно нулю (0).</span><span class="sxs-lookup"><span data-stu-id="d7187-653"><paramref name="divisor" /> is 0 (zero).</span></span></exception>
        <altmember cref="M:System.Numerics.BigInteger.Divide(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="op_Equality">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d7187-654">Возвращает значение, определяющее, равны ли два значения.</span><span class="sxs-lookup"><span data-stu-id="d7187-654">Returns a value that indicates whether two values are equal.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (long left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(int64 left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Equality(System.Int64,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As Long, right As BigInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(long left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member ( = ) : int64 * System.Numerics.BigInteger -&gt; bool" Usage="left = right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Int64" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="d7187-655">Первое сравниваемое значение.</span><span class="sxs-lookup"><span data-stu-id="d7187-655">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="d7187-656">Второе сравниваемое значение.</span><span class="sxs-lookup"><span data-stu-id="d7187-656">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="d7187-657">Возвращает значение, указывающее, равны ли длинное знаковое целое число и значение <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-657">Returns a value that indicates whether a signed long integer value and a <see cref="T:System.Numerics.BigInteger" /> value are equal.</span></span></summary>
        <returns><span data-ttu-id="d7187-658">Значение <see langword="true" />, если параметры <paramref name="left" /> и <paramref name="right" /> имеют одинаковые значения; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-658"><see langword="true" /> if the <paramref name="left" /> and <paramref name="right" /> parameters have the same value; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7187-659">Метод определяет операцию сравнения на равенство для <xref:System.Numerics.BigInteger> значений. <xref:System.Numerics.BigInteger.op_Equality%28System.Int64%2CSystem.Numerics.BigInteger%29></span><span class="sxs-lookup"><span data-stu-id="d7187-659">The <xref:System.Numerics.BigInteger.op_Equality%28System.Int64%2CSystem.Numerics.BigInteger%29> method defines the equality comparison operation for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="d7187-660">Он включает следующий код:</span><span class="sxs-lookup"><span data-stu-id="d7187-660">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#4)]
 [!code-vb[System.Numerics.BigInteger.Operators#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#4)]  
  
 <span data-ttu-id="d7187-661">Языки, которые не поддерживают пользовательские операторы, могут вызывать <xref:System.Numerics.BigInteger.Equals%28System.Int64%29?displayProperty=nameWithType> метод экземпляра.</span><span class="sxs-lookup"><span data-stu-id="d7187-661">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.Equals%28System.Int64%29?displayProperty=nameWithType> instance method instead.</span></span>  
  
 <span data-ttu-id="d7187-662">Если `left` <xref:System.Int16>параметр имеетзначение<xref:System.SByte> <xref:System.Int64> , ,,,или<xref:System.Int32> ,<xref:System.UInt32> он неявно преобразуется в значение при выполнении операции. <xref:System.Byte> <xref:System.UInt16></span><span class="sxs-lookup"><span data-stu-id="d7187-662">If `left` is a <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.SByte>, <xref:System.UInt16>, or <xref:System.UInt32> value, it is implicitly converted to an <xref:System.Int64> value when the operation is performed.</span></span>  
  
 <span data-ttu-id="d7187-663">Эквивалентным методом для этого оператора является <xref:System.Numerics.BigInteger.Equals%28System.Int64%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="d7187-663">The equivalent method for this operator is <xref:System.Numerics.BigInteger.Equals%28System.Int64%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_Inequality" />
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Numerics.BigInteger left, long right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Numerics.BigInteger left, int64 right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Equality(System.Numerics.BigInteger,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As BigInteger, right As Long) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Numerics::BigInteger left, long right);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Numerics.BigInteger * int64 -&gt; bool" Usage="left = right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="d7187-664">Первое сравниваемое значение.</span><span class="sxs-lookup"><span data-stu-id="d7187-664">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="d7187-665">Второе сравниваемое значение.</span><span class="sxs-lookup"><span data-stu-id="d7187-665">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="d7187-666">Возвращает значение, указывающее, равны ли значение <see cref="T:System.Numerics.BigInteger" /> и длинное знаковое целое число.</span><span class="sxs-lookup"><span data-stu-id="d7187-666">Returns a value that indicates whether a <see cref="T:System.Numerics.BigInteger" /> value and a signed long integer value are equal.</span></span></summary>
        <returns><span data-ttu-id="d7187-667">Значение <see langword="true" />, если параметры <paramref name="left" /> и <paramref name="right" /> имеют одинаковые значения; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-667"><see langword="true" /> if the <paramref name="left" /> and <paramref name="right" /> parameters have the same value; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7187-668">Метод определяет операцию сравнения на равенство для <xref:System.Numerics.BigInteger> значений. <xref:System.Numerics.BigInteger.op_Equality%28System.Numerics.BigInteger%2CSystem.Int64%29></span><span class="sxs-lookup"><span data-stu-id="d7187-668">The <xref:System.Numerics.BigInteger.op_Equality%28System.Numerics.BigInteger%2CSystem.Int64%29> method defines the equality comparison operation for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="d7187-669">Он включает следующий код:</span><span class="sxs-lookup"><span data-stu-id="d7187-669">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#5)]
 [!code-vb[System.Numerics.BigInteger.Operators#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#5)]  
  
 <span data-ttu-id="d7187-670">Языки, которые не поддерживают пользовательские операторы, могут вызывать <xref:System.Numerics.BigInteger.Equals%28System.Int64%29?displayProperty=nameWithType> метод экземпляра.</span><span class="sxs-lookup"><span data-stu-id="d7187-670">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.Equals%28System.Int64%29?displayProperty=nameWithType> instance method instead.</span></span>  
  
 <span data-ttu-id="d7187-671">Если `right` <xref:System.Int16>параметр имеетзначение<xref:System.SByte> <xref:System.Int64> , ,,,или<xref:System.Int32> ,<xref:System.UInt32> он неявно преобразуется в значение при выполнении операции. <xref:System.Byte> <xref:System.UInt16></span><span class="sxs-lookup"><span data-stu-id="d7187-671">If `right` is a <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.SByte>, <xref:System.UInt16>, or <xref:System.UInt32> value, it is implicitly converted to an <xref:System.Int64> value when the operation is performed.</span></span>  
  
 <span data-ttu-id="d7187-672">Эквивалентным методом для этого оператора является <xref:System.Numerics.BigInteger.Equals%28System.Int64%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="d7187-672">The equivalent method for this operator is <xref:System.Numerics.BigInteger.Equals%28System.Int64%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_Inequality" />
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Numerics.BigInteger left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Numerics.BigInteger left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Equality(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As BigInteger, right As BigInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Numerics::BigInteger left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Numerics.BigInteger * System.Numerics.BigInteger -&gt; bool" Usage="left = right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="d7187-673">Первое сравниваемое значение.</span><span class="sxs-lookup"><span data-stu-id="d7187-673">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="d7187-674">Второе сравниваемое значение.</span><span class="sxs-lookup"><span data-stu-id="d7187-674">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="d7187-675">Возвращает значение, указывающее, равны ли значения двух объектов <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-675">Returns a value that indicates whether the values of two <see cref="T:System.Numerics.BigInteger" /> objects are equal.</span></span></summary>
        <returns><span data-ttu-id="d7187-676">Значение <see langword="true" />, если параметры <paramref name="left" /> и <paramref name="right" /> имеют одинаковые значения; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-676"><see langword="true" /> if the <paramref name="left" /> and <paramref name="right" /> parameters have the same value; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7187-677">Метод определяет операцию оператора равенства для <xref:System.Numerics.BigInteger> значений. <xref:System.Numerics.BigInteger.op_Equality%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29></span><span class="sxs-lookup"><span data-stu-id="d7187-677">The <xref:System.Numerics.BigInteger.op_Equality%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29> method defines the operation of the equality operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="d7187-678">Он включает следующий код:</span><span class="sxs-lookup"><span data-stu-id="d7187-678">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numeric.BigInteger.Class#19](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/cs/BigInteger_Examples.cs#19)]
 [!code-vb[System.Numeric.BigInteger.Class#19](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/vb/BigInteger_Examples.vb#19)]  
  
 <span data-ttu-id="d7187-679">Языки, которые не поддерживают пользовательские операторы, могут вызывать <xref:System.Numerics.BigInteger.Equals%28System.Numerics.BigInteger%29?displayProperty=nameWithType> метод экземпляра.</span><span class="sxs-lookup"><span data-stu-id="d7187-679">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.Equals%28System.Numerics.BigInteger%29?displayProperty=nameWithType> instance method instead.</span></span>  
  
 <span data-ttu-id="d7187-680">Эквивалентным методом для этого оператора является <xref:System.Numerics.BigInteger.Equals%28System.Numerics.BigInteger%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="d7187-680">The equivalent method for this operator is <xref:System.Numerics.BigInteger.Equals%28System.Numerics.BigInteger%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.Equals" />
        <altmember cref="Overload:System.Numerics.BigInteger.op_Inequality" />
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Numerics.BigInteger left, ulong right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Numerics.BigInteger left, unsigned int64 right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Equality(System.Numerics.BigInteger,System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As BigInteger, right As ULong) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Numerics::BigInteger left, System::UInt64 right);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Numerics.BigInteger * uint64 -&gt; bool" Usage="left = right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="d7187-681">Первое сравниваемое значение.</span><span class="sxs-lookup"><span data-stu-id="d7187-681">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="d7187-682">Второе сравниваемое значение.</span><span class="sxs-lookup"><span data-stu-id="d7187-682">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="d7187-683">Возвращает значение, указывающее, равны ли значение <see cref="T:System.Numerics.BigInteger" /> и длинное целое число без знака.</span><span class="sxs-lookup"><span data-stu-id="d7187-683">Returns a value that indicates whether a <see cref="T:System.Numerics.BigInteger" /> value and an unsigned long integer value are equal.</span></span></summary>
        <returns><span data-ttu-id="d7187-684">Значение <see langword="true" />, если параметры <paramref name="left" /> и <paramref name="right" /> имеют одинаковые значения; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-684"><see langword="true" /> if the <paramref name="left" /> and <paramref name="right" /> parameters have the same value; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7187-685">Метод определяет операцию сравнения на равенство для <xref:System.Numerics.BigInteger> значений. <xref:System.Numerics.BigInteger.op_Equality%28System.Numerics.BigInteger%2CSystem.UInt64%29></span><span class="sxs-lookup"><span data-stu-id="d7187-685">The <xref:System.Numerics.BigInteger.op_Equality%28System.Numerics.BigInteger%2CSystem.UInt64%29> method defines the equality comparison operation for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="d7187-686">Он включает следующий код:</span><span class="sxs-lookup"><span data-stu-id="d7187-686">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#6)]
 [!code-vb[System.Numerics.BigInteger.Operators#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#6)]  
  
 <span data-ttu-id="d7187-687">Языки, которые не поддерживают пользовательские операторы, могут вызывать <xref:System.Numerics.BigInteger.Equals%28System.UInt64%29?displayProperty=nameWithType> метод экземпляра.</span><span class="sxs-lookup"><span data-stu-id="d7187-687">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.Equals%28System.UInt64%29?displayProperty=nameWithType> instance method instead.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_Inequality" />
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (ulong left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(unsigned int64 left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Equality(System.UInt64,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As ULong, right As BigInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::UInt64 left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member ( = ) : uint64 * System.Numerics.BigInteger -&gt; bool" Usage="left = right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.UInt64" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="d7187-688">Первое сравниваемое значение.</span><span class="sxs-lookup"><span data-stu-id="d7187-688">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="d7187-689">Второе сравниваемое значение.</span><span class="sxs-lookup"><span data-stu-id="d7187-689">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="d7187-690">Возвращает значение, указывающее, равны ли длинное целое число без знака и значение <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-690">Returns a value that indicates whether an unsigned long integer value and a <see cref="T:System.Numerics.BigInteger" /> value are equal.</span></span></summary>
        <returns><span data-ttu-id="d7187-691">Значение <see langword="true" />, если параметры <paramref name="left" /> и <paramref name="right" /> имеют одинаковые значения; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-691"><see langword="true" /> if the <paramref name="left" /> and <paramref name="right" /> parameters have the same value; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7187-692">Метод определяет операцию сравнения на равенство для <xref:System.Numerics.BigInteger> значений. <xref:System.Numerics.BigInteger.op_Equality%28System.UInt64%2CSystem.Numerics.BigInteger%29></span><span class="sxs-lookup"><span data-stu-id="d7187-692">The <xref:System.Numerics.BigInteger.op_Equality%28System.UInt64%2CSystem.Numerics.BigInteger%29> method defines the equality comparison operation for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="d7187-693">Он включает следующий код:</span><span class="sxs-lookup"><span data-stu-id="d7187-693">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#7)]
 [!code-vb[System.Numerics.BigInteger.Operators#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#7)]  
  
 <span data-ttu-id="d7187-694">Языки, которые не поддерживают пользовательские операторы, могут вызывать <xref:System.Numerics.BigInteger.Equals%28System.UInt64%29?displayProperty=nameWithType> метод экземпляра.</span><span class="sxs-lookup"><span data-stu-id="d7187-694">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.Equals%28System.UInt64%29?displayProperty=nameWithType> instance method instead.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_Inequality" />
      </Docs>
    </Member>
    <Member MemberName="op_ExclusiveOr">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger operator ^ (System.Numerics.BigInteger left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_ExclusiveOr(valuetype System.Numerics.BigInteger left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_ExclusiveOr(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator Xor (left As BigInteger, right As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger operator ^(System::Numerics::BigInteger left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member ( ^^^ ) : System.Numerics.BigInteger * System.Numerics.BigInteger -&gt; System.Numerics.BigInteger" Usage="left ^^^ right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="d7187-695">Первое значение в вычитании.</span><span class="sxs-lookup"><span data-stu-id="d7187-695">The first value.</span></span></param>
        <param name="right"><span data-ttu-id="d7187-696">Второе значение в вычитании.</span><span class="sxs-lookup"><span data-stu-id="d7187-696">The second value.</span></span></param>
        <summary><span data-ttu-id="d7187-697">Выполняет битовую операцию исключающего <see langword="Or" /> (<see langword="XOr" />) для двух значений <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-697">Performs a bitwise exclusive <see langword="Or" /> (<see langword="XOr" />) operation on two <see cref="T:System.Numerics.BigInteger" /> values.</span></span></summary>
        <returns><span data-ttu-id="d7187-698">Результат битовой операции <see langword="Or" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-698">The result of the bitwise <see langword="Or" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7187-699">Результатом побитовой исключающей `Or` операции является `true` то, что значения двух битов различаются; в противном случае — `false`значение.</span><span class="sxs-lookup"><span data-stu-id="d7187-699">The result of a bitwise exclusive `Or` operation is `true` if the values of the two bits are different; otherwise, it is `false`.</span></span> <span data-ttu-id="d7187-700">В следующей таблице показана монопольная `Or` работа.</span><span class="sxs-lookup"><span data-stu-id="d7187-700">The following table illustrates the exclusive `Or` operation.</span></span>  
  
|<span data-ttu-id="d7187-701">Бит x в`left`</span><span class="sxs-lookup"><span data-stu-id="d7187-701">Bit x in `left`</span></span>|<span data-ttu-id="d7187-702">Бит x в`right`</span><span class="sxs-lookup"><span data-stu-id="d7187-702">Bit x in `right`</span></span>|<span data-ttu-id="d7187-703">Возвращаемое значение</span><span class="sxs-lookup"><span data-stu-id="d7187-703">Return value</span></span>|  
|---------------------|----------------------|------------------|  
|<span data-ttu-id="d7187-704">0</span><span class="sxs-lookup"><span data-stu-id="d7187-704">0</span></span>|<span data-ttu-id="d7187-705">0</span><span class="sxs-lookup"><span data-stu-id="d7187-705">0</span></span>|<span data-ttu-id="d7187-706">0</span><span class="sxs-lookup"><span data-stu-id="d7187-706">0</span></span>|  
|<span data-ttu-id="d7187-707">0</span><span class="sxs-lookup"><span data-stu-id="d7187-707">0</span></span>|<span data-ttu-id="d7187-708">1</span><span class="sxs-lookup"><span data-stu-id="d7187-708">1</span></span>|<span data-ttu-id="d7187-709">1</span><span class="sxs-lookup"><span data-stu-id="d7187-709">1</span></span>|  
|<span data-ttu-id="d7187-710">1</span><span class="sxs-lookup"><span data-stu-id="d7187-710">1</span></span>|<span data-ttu-id="d7187-711">0</span><span class="sxs-lookup"><span data-stu-id="d7187-711">0</span></span>|<span data-ttu-id="d7187-712">1</span><span class="sxs-lookup"><span data-stu-id="d7187-712">1</span></span>|  
|<span data-ttu-id="d7187-713">1</span><span class="sxs-lookup"><span data-stu-id="d7187-713">1</span></span>|<span data-ttu-id="d7187-714">1</span><span class="sxs-lookup"><span data-stu-id="d7187-714">1</span></span>|<span data-ttu-id="d7187-715">0</span><span class="sxs-lookup"><span data-stu-id="d7187-715">0</span></span>|  
  
 <span data-ttu-id="d7187-716"><xref:System.Numerics.BigInteger.op_ExclusiveOr%2A> Метод включает следующий код:</span><span class="sxs-lookup"><span data-stu-id="d7187-716">The <xref:System.Numerics.BigInteger.op_ExclusiveOr%2A> method enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#8)]
 [!code-vb[System.Numerics.BigInteger.Operators#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#8)]  
  
 <span data-ttu-id="d7187-717">Метод выполняет операцию побитового `Or` исключающего над <xref:System.Numerics.BigInteger> двумя значениями, как если бы они были как в представлении дополнения в двух, так и с расширением виртуального знака. <xref:System.Numerics.BigInteger.op_ExclusiveOr%2A></span><span class="sxs-lookup"><span data-stu-id="d7187-717">The <xref:System.Numerics.BigInteger.op_ExclusiveOr%2A> method performs the bitwise exclusive `Or` operation on two <xref:System.Numerics.BigInteger> values as if they were both in two's complement representation with virtual sign extension.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="op_Explicit">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d7187-718">Определяет явное преобразование между объектом типа <see cref="T:System.Numerics.BigInteger" /> и другим типом.</span><span class="sxs-lookup"><span data-stu-id="d7187-718">Defines an explicit conversion between a <see cref="T:System.Numerics.BigInteger" /> object and another type.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator System.Numerics.BigInteger (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_Explicit(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As Decimal) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::Numerics::BigInteger(System::Decimal value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : decimal -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d7187-719">Значение, которое необходимо преобразовать в тип <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-719">The value to convert to a <see cref="T:System.Numerics.BigInteger" />.</span></span></param>
        <summary><span data-ttu-id="d7187-720">Определяет явное преобразование объекта <see cref="T:System.Decimal" /> в значение <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-720">Defines an explicit conversion of a <see cref="T:System.Decimal" /> object to a <see cref="T:System.Numerics.BigInteger" /> value.</span></span></summary>
        <returns><span data-ttu-id="d7187-721">Объект, содержащий значение параметра <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-721">An object that contains the value of the <paramref name="value" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7187-722">Дробная часть `value` параметра усекается до преобразования.</span><span class="sxs-lookup"><span data-stu-id="d7187-722">Any fractional part of the `value` parameter is truncated before conversion.</span></span>

 <span data-ttu-id="d7187-723">Перегрузки <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> метода определяют типы, в которые или из <xref:System.Numerics.BigInteger> которых может быть преобразован объект.</span><span class="sxs-lookup"><span data-stu-id="d7187-723">The overloads of the <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> method define the types to which or from which a <xref:System.Numerics.BigInteger> object can be converted.</span></span> <span data-ttu-id="d7187-724">Поскольку преобразование из <xref:System.Decimal> в может <xref:System.Numerics.BigInteger> привести к усечению `value`любой дробной части, языковые компиляторы не выполняют это преобразование автоматически.</span><span class="sxs-lookup"><span data-stu-id="d7187-724">Because the conversion from <xref:System.Decimal> to <xref:System.Numerics.BigInteger> can involve truncating any fractional part of `value`, language compilers do not perform this conversion automatically.</span></span> <span data-ttu-id="d7187-725">Вместо этого они выполняют преобразование только в том случае, если используется оператор C#приведения (in) или функция преобразования `CType` (например, в Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="d7187-725">Instead, they perform the conversion only if a casting operator (in C#) or a conversion function (such as `CType` in Visual Basic) is used.</span></span> <span data-ttu-id="d7187-726">В противном случае они выводят ошибку компилятора.</span><span class="sxs-lookup"><span data-stu-id="d7187-726">Otherwise, they display a compiler error.</span></span>   

 <span data-ttu-id="d7187-727">Для языков, которые не поддерживают пользовательские операторы, альтернативным методом является <xref:System.Numerics.BigInteger.%23ctor%28System.Decimal%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="d7187-727">For languages that do not support custom operators, the alternative method is <xref:System.Numerics.BigInteger.%23ctor%28System.Decimal%29?displayProperty=nameWithType>.</span></span>


## Examples
 <span data-ttu-id="d7187-728">В следующем примере отдельные элементы в массиве <xref:System.Decimal> <xref:System.Numerics.BigInteger> значений преобразуются в объекты, а затем выводятся результаты каждого преобразования.</span><span class="sxs-lookup"><span data-stu-id="d7187-728">The following example converts the individual elements in an array of <xref:System.Decimal> values to <xref:System.Numerics.BigInteger> objects, and then displays the result of each conversion.</span></span> <span data-ttu-id="d7187-729">Обратите внимание, что во время преобразования <xref:System.Decimal> дробная часть значения усекается.</span><span class="sxs-lookup"><span data-stu-id="d7187-729">Note that any fractional part of a <xref:System.Decimal> value is truncated during the conversion.</span></span>   

 [!code-csharp[System.Numerics.BigInteger.Explicit#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Explicit/cs/Explicit1.cs#1)]   
 [!code-vb[System.Numerics.BigInteger.Explicit#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Explicit/vb/Explicit1.vb#1)]   

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator System.Numerics.BigInteger (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_Explicit(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Explicit(System.Double)~System.Numerics.BigInteger" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As Double) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::Numerics::BigInteger(double value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : double -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d7187-730">Значение, которое необходимо преобразовать в тип <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-730">The value to convert to a <see cref="T:System.Numerics.BigInteger" />.</span></span></param>
        <summary><span data-ttu-id="d7187-731">Определяет явное преобразование значения <see cref="T:System.Double" /> в значение <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-731">Defines an explicit conversion of a <see cref="T:System.Double" /> value to a <see cref="T:System.Numerics.BigInteger" /> value.</span></span></summary>
        <returns><span data-ttu-id="d7187-732">Объект, содержащий значение параметра <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-732">An object that contains the value of the <paramref name="value" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7187-733">Дробная часть `value` параметра усекается до преобразования.</span><span class="sxs-lookup"><span data-stu-id="d7187-733">Any fractional part of the `value` parameter is truncated before conversion.</span></span>

 <span data-ttu-id="d7187-734">Перегрузки <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> метода определяют типы, в которые или из <xref:System.Numerics.BigInteger> которых может быть преобразован объект.</span><span class="sxs-lookup"><span data-stu-id="d7187-734">The overloads of the <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> method define the types to which or from which a <xref:System.Numerics.BigInteger> object can be converted.</span></span> <span data-ttu-id="d7187-735">Поскольку преобразование из <xref:System.Double> в может <xref:System.Numerics.BigInteger> привести к усечению `value`любой дробной части, языковые компиляторы не выполняют это преобразование автоматически.</span><span class="sxs-lookup"><span data-stu-id="d7187-735">Because the conversion from <xref:System.Double> to <xref:System.Numerics.BigInteger> can involve truncating any fractional part of `value`, language compilers do not perform this conversion automatically.</span></span> <span data-ttu-id="d7187-736">Вместо этого они выполняют преобразование только в том случае, если используется оператор C#приведения (in) или функция преобразования `CType` (например, в Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="d7187-736">Instead, they perform the conversion only if a casting operator (in C#) or a conversion function (such as `CType` in Visual Basic) is used.</span></span> <span data-ttu-id="d7187-737">В противном случае они выводят ошибку компилятора.</span><span class="sxs-lookup"><span data-stu-id="d7187-737">Otherwise, they display a compiler error.</span></span>

 <span data-ttu-id="d7187-738">Для языков, которые не поддерживают пользовательские операторы, альтернативным методом является <xref:System.Numerics.BigInteger.%23ctor%28System.Double%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="d7187-738">For languages that do not support custom operators, the alternative method is <xref:System.Numerics.BigInteger.%23ctor%28System.Double%29?displayProperty=nameWithType>.</span></span>


## Examples
 <span data-ttu-id="d7187-739">В следующем примере отдельные элементы в массиве <xref:System.Double> <xref:System.Numerics.BigInteger> значений преобразуются в объекты, а затем выводятся результаты каждого преобразования.</span><span class="sxs-lookup"><span data-stu-id="d7187-739">The following example converts the individual elements in an array of <xref:System.Double> values to <xref:System.Numerics.BigInteger> objects, and then displays the result of each conversion.</span></span> <span data-ttu-id="d7187-740">Обратите внимание, что во время преобразования <xref:System.Double> дробная часть значения усекается.</span><span class="sxs-lookup"><span data-stu-id="d7187-740">Note that any fractional part of a <xref:System.Double> value is truncated during the conversion.</span></span>   
    
 [!code-csharp[System.Numerics.BigInteger.Explicit#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Explicit/cs/Explicit1.cs#2)]   
 [!code-vb[System.Numerics.BigInteger.Explicit#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Explicit/vb/Explicit1.vb#2)]   

 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="d7187-741"><paramref name="value" /> имеет значение <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.PositiveInfinity" /> или <see cref="F:System.Double.NegativeInfinity" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-741"><paramref name="value" /> is <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.PositiveInfinity" />, or <see cref="F:System.Double.NegativeInfinity" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator byte (System.Numerics.BigInteger value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname unsigned int8 op_Explicit(valuetype System.Numerics.BigInteger value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Byte" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As BigInteger) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::Byte(System::Numerics::BigInteger value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Numerics.BigInteger -&gt; byte" Usage="System.Numerics.BigInteger.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d7187-742">Значение, которое необходимо преобразовать в тип <see cref="T:System.Byte" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-742">The value to convert to a <see cref="T:System.Byte" />.</span></span></param>
        <summary><span data-ttu-id="d7187-743">Определяет явное преобразование объекта <see cref="T:System.Numerics.BigInteger" /> в байтовое значение без знака.</span><span class="sxs-lookup"><span data-stu-id="d7187-743">Defines an explicit conversion of a <see cref="T:System.Numerics.BigInteger" /> object to an unsigned byte value.</span></span></summary>
        <returns><span data-ttu-id="d7187-744">Объект, содержащий значение параметра <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-744">An object that contains the value of the <paramref name="value" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7187-745">Перегрузки <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> метода определяют типы, в которые или из <xref:System.Numerics.BigInteger> которых может быть преобразован объект.</span><span class="sxs-lookup"><span data-stu-id="d7187-745">The overloads of the <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> method define the types to which or from which a <xref:System.Numerics.BigInteger> object can be converted.</span></span> <span data-ttu-id="d7187-746">Компиляторы языков не выполняют это преобразование автоматически, так как это может привести к утрате данных.</span><span class="sxs-lookup"><span data-stu-id="d7187-746">Language compilers do not perform this conversion automatically because it can involve data loss.</span></span> <span data-ttu-id="d7187-747">Вместо этого они выполняют преобразование только в том случае, если используется оператор C#приведения (in) или функция преобразования `CType` ( `CByte` например, или в Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="d7187-747">Instead, they perform the conversion only if a casting operator (in C#) or a conversion function (such as `CType` or `CByte` in Visual Basic) is used.</span></span> <span data-ttu-id="d7187-748">В противном случае они выводят ошибку компилятора.</span><span class="sxs-lookup"><span data-stu-id="d7187-748">Otherwise, they display a compiler error.</span></span>   

 <span data-ttu-id="d7187-749">Так как эта операция определяет понижающие преобразования, <xref:System.OverflowException> во время выполнения может возникнуть исключение, <xref:System.Numerics.BigInteger> если значение выходит <xref:System.Byte> за пределы диапазона типа данных.</span><span class="sxs-lookup"><span data-stu-id="d7187-749">Because this operation defines a narrowing conversion, it can throw an <xref:System.OverflowException> at run time if the <xref:System.Numerics.BigInteger> value is outside the range of the <xref:System.Byte> data type.</span></span> <span data-ttu-id="d7187-750">В итоговом <xref:System.Byte> значении нет потерь точности, если преобразование выполнено успешно.</span><span class="sxs-lookup"><span data-stu-id="d7187-750">There is no loss of precision in the resulting <xref:System.Byte> value if the conversion is successful.</span></span>

## Examples
 <span data-ttu-id="d7187-751">В следующем примере показано преобразование <xref:System.Numerics.BigInteger> в <xref:System.Byte> значения.</span><span class="sxs-lookup"><span data-stu-id="d7187-751">The following example illustrates the conversion of <xref:System.Numerics.BigInteger> to <xref:System.Byte> values.</span></span> <span data-ttu-id="d7187-752">Он также обрабатывает <xref:System.OverflowException> исключение, вызванное <xref:System.Numerics.BigInteger> тем, что значение выходит <xref:System.Byte> за пределы диапазона типа данных.</span><span class="sxs-lookup"><span data-stu-id="d7187-752">It also handles an <xref:System.OverflowException> that is thrown because the <xref:System.Numerics.BigInteger> value is outside the range of the <xref:System.Byte> data type.</span></span>   
    
 [!code-csharp[System.Numeric.BigInteger.Explicit#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Explicit/cs/System.Numeric.BigInteger.Explicit.cs#1)]   
 [!code-vb[System.Numeric.BigInteger.Explicit#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Explicit/vb/System.Numeric.BigInteger.Explicit.vb#1)]   

 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="d7187-753">Значение <paramref name="value" /> меньше <see cref="F:System.Byte.MinValue" /> или больше <see cref="F:System.Byte.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-753"><paramref name="value" /> is less than <see cref="F:System.Byte.MinValue" /> or greater than <see cref="F:System.Byte.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator decimal (System.Numerics.BigInteger value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Decimal op_Explicit(valuetype System.Numerics.BigInteger value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Decimal" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As BigInteger) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::Decimal(System::Numerics::BigInteger value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Numerics.BigInteger -&gt; decimal" Usage="System.Numerics.BigInteger.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d7187-754">Значение, которое необходимо преобразовать в тип <see cref="T:System.Decimal" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-754">The value to convert to a <see cref="T:System.Decimal" />.</span></span></param>
        <summary><span data-ttu-id="d7187-755">Определяет явное преобразование объекта <see cref="T:System.Numerics.BigInteger" /> в значение <see cref="T:System.Decimal" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-755">Defines an explicit conversion of a <see cref="T:System.Numerics.BigInteger" /> object to a <see cref="T:System.Decimal" /> value.</span></span></summary>
        <returns><span data-ttu-id="d7187-756">Объект, содержащий значение параметра <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-756">An object that contains the value of the <paramref name="value" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7187-757">Перегрузки <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> метода определяют типы, в которые или из <xref:System.Numerics.BigInteger> которых может быть преобразован объект.</span><span class="sxs-lookup"><span data-stu-id="d7187-757">The overloads of the <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> method define the types to which or from which a <xref:System.Numerics.BigInteger> object can be converted.</span></span> <span data-ttu-id="d7187-758">Компиляторы языков не выполняют это преобразование автоматически, так как это может привести к утрате данных.</span><span class="sxs-lookup"><span data-stu-id="d7187-758">Language compilers do not perform this conversion automatically because it can involve data loss.</span></span> <span data-ttu-id="d7187-759">Вместо этого они выполняют преобразование только в том случае, если используется оператор C#приведения (in) или функция преобразования `CType` ( `CDec` например, или в Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="d7187-759">Instead, they perform the conversion only if a casting operator (in C#) or a conversion function (such as `CType` or `CDec` in Visual Basic) is used.</span></span>   

 <span data-ttu-id="d7187-760">Так как эта операция определяет понижающие преобразования, <xref:System.OverflowException> во время выполнения может возникнуть исключение, <xref:System.Numerics.BigInteger> если значение выходит <xref:System.Decimal> за пределы диапазона типа данных.</span><span class="sxs-lookup"><span data-stu-id="d7187-760">Because this operation defines a narrowing conversion, it can throw an <xref:System.OverflowException> at run time if the <xref:System.Numerics.BigInteger> value is outside the range of the <xref:System.Decimal> data type.</span></span> 

## Examples
 <span data-ttu-id="d7187-761">В следующем примере показано преобразование <xref:System.Numerics.BigInteger> в <xref:System.Decimal> значения.</span><span class="sxs-lookup"><span data-stu-id="d7187-761">The following example illustrates the conversion of <xref:System.Numerics.BigInteger> to <xref:System.Decimal> values.</span></span> <span data-ttu-id="d7187-762">Он также обрабатывает <xref:System.OverflowException> исключение, вызванное <xref:System.Numerics.BigInteger> тем, что значение выходит <xref:System.Decimal> за пределы диапазона типа данных.</span><span class="sxs-lookup"><span data-stu-id="d7187-762">It also handles an <xref:System.OverflowException> that is thrown because the <xref:System.Numerics.BigInteger> value is outside the range of the <xref:System.Decimal> data type.</span></span>   
    
 [!code-csharp[System.Numeric.BigInteger.Explicit#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Explicit/cs/System.Numeric.BigInteger.Explicit.cs#2)]
 [!code-vb[System.Numeric.BigInteger.Explicit#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Explicit/vb/System.Numeric.BigInteger.Explicit.vb#2)]  

 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="d7187-763">Значение <paramref name="value" /> меньше <see cref="F:System.Decimal.MinValue" /> или больше <see cref="F:System.Decimal.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-763"><paramref name="value" /> is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator double (System.Numerics.BigInteger value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname float64 op_Explicit(valuetype System.Numerics.BigInteger value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Double" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As BigInteger) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator double(System::Numerics::BigInteger value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Numerics.BigInteger -&gt; double" Usage="System.Numerics.BigInteger.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d7187-764">Значение, которое необходимо преобразовать в тип <see cref="T:System.Double" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-764">The value to convert to a <see cref="T:System.Double" />.</span></span></param>
        <summary><span data-ttu-id="d7187-765">Определяет явное преобразование объекта <see cref="T:System.Numerics.BigInteger" /> в значение <see cref="T:System.Double" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-765">Defines an explicit conversion of a <see cref="T:System.Numerics.BigInteger" /> object to a <see cref="T:System.Double" /> value.</span></span></summary>
        <returns><span data-ttu-id="d7187-766">Объект, содержащий значение параметра <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-766">An object that contains the value of the <paramref name="value" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7187-767">Перегрузки <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> метода определяют типы, в которые или из <xref:System.Numerics.BigInteger> которых может быть преобразован объект.</span><span class="sxs-lookup"><span data-stu-id="d7187-767">The overloads of the <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> method define the types to which or from which a <xref:System.Numerics.BigInteger> object can be converted.</span></span> <span data-ttu-id="d7187-768">Компиляторы языков не выполняют это преобразование автоматически, так как это может привести к утрате данных.</span><span class="sxs-lookup"><span data-stu-id="d7187-768">Language compilers do not perform this conversion automatically because it can involve data loss.</span></span> <span data-ttu-id="d7187-769">Вместо этого они выполняют преобразование только в том случае, если используется оператор C#приведения (in) или функция преобразования `CType` ( `CDbl` например, или в Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="d7187-769">Instead, they perform the conversion only if a casting operator (in C#) or a conversion function (such as `CType` or `CDbl` in Visual Basic) is used.</span></span>   

 <span data-ttu-id="d7187-770">Так как <xref:System.Double> значение может находиться вне диапазона типа данных, эта операция является узким преобразованием. <xref:System.Numerics.BigInteger></span><span class="sxs-lookup"><span data-stu-id="d7187-770">Because the <xref:System.Numerics.BigInteger> value can be outside the range of the <xref:System.Double> data type, this operation is a narrowing conversion.</span></span> <span data-ttu-id="d7187-771">Если преобразование завершилось неудачно, оно не вызывает <xref:System.OverflowException>исключение.</span><span class="sxs-lookup"><span data-stu-id="d7187-771">If the conversion is unsuccessful, it does not throw an <xref:System.OverflowException>.</span></span> <span data-ttu-id="d7187-772">Вместо этого, если <xref:System.Numerics.BigInteger> значение <xref:System.Double.MinValue?displayProperty=nameWithType>меньше, то результирующим <xref:System.Double> значением является <xref:System.Double.NegativeInfinity?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="d7187-772">Instead, if the <xref:System.Numerics.BigInteger> value is less than <xref:System.Double.MinValue?displayProperty=nameWithType>, the resulting <xref:System.Double> value is <xref:System.Double.NegativeInfinity?displayProperty=nameWithType>.</span></span> <span data-ttu-id="d7187-773">Если значение больше, то результирующее <xref:System.Double> значение равно <xref:System.Double.PositiveInfinity?displayProperty=nameWithType>. <xref:System.Double.MaxValue?displayProperty=nameWithType> <xref:System.Numerics.BigInteger></span><span class="sxs-lookup"><span data-stu-id="d7187-773">If the <xref:System.Numerics.BigInteger> value is greater than <xref:System.Double.MaxValue?displayProperty=nameWithType>, the resulting <xref:System.Double> value is <xref:System.Double.PositiveInfinity?displayProperty=nameWithType>.</span></span>
 
 <span data-ttu-id="d7187-774">Преобразование типа <xref:System.Numerics.BigInteger> <xref:System.Double> в может привести к утере точности.</span><span class="sxs-lookup"><span data-stu-id="d7187-774">The conversion of a <xref:System.Numerics.BigInteger> to a <xref:System.Double> may involve a loss of precision.</span></span> <span data-ttu-id="d7187-775">В некоторых случаях потери точности могут привести к успешности операции приведения или преобразования, даже если <xref:System.Numerics.BigInteger> значение выходит за пределы диапазона <xref:System.Double> типа данных.</span><span class="sxs-lookup"><span data-stu-id="d7187-775">In some cases, the loss of precision may cause the casting or conversion operation to succeed even if the <xref:System.Numerics.BigInteger> value is outside the range of the <xref:System.Double> data type.</span></span> <span data-ttu-id="d7187-776">Ниже приведен пример.</span><span class="sxs-lookup"><span data-stu-id="d7187-776">The following example provides an illustration.</span></span> <span data-ttu-id="d7187-777">Он назначает максимальное значение <xref:System.Double> для двух <xref:System.Numerics.BigInteger> переменных, увеличивает одну <xref:System.Numerics.BigInteger> переменную на 9.999 e291 и проверяет две переменные на равенство.</span><span class="sxs-lookup"><span data-stu-id="d7187-777">It assigns the maximum value of a <xref:System.Double> to two <xref:System.Numerics.BigInteger> variables, increments one <xref:System.Numerics.BigInteger> variable by 9.999e291, and tests the two variables for equality.</span></span> <span data-ttu-id="d7187-778">Как и ожидалось, вызов <xref:System.Numerics.BigInteger.Equals%28System.Numerics.BigInteger%29?displayProperty=nameWithType> метода показывает, что они не равны.</span><span class="sxs-lookup"><span data-stu-id="d7187-778">As expected, the call to the <xref:System.Numerics.BigInteger.Equals%28System.Numerics.BigInteger%29?displayProperty=nameWithType> method shows that they are unequal.</span></span> <span data-ttu-id="d7187-779">Однако преобразование большего <xref:System.Numerics.BigInteger> значения обратно <xref:System.Double> в значение будет <xref:System.Numerics.BigInteger> выполнено, хотя значение теперь превышает <xref:System.Double.MaxValue?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="d7187-779">However, the conversion of the larger <xref:System.Numerics.BigInteger> value back to a <xref:System.Double> succeeds, although the <xref:System.Numerics.BigInteger> value now exceeds <xref:System.Double.MaxValue?displayProperty=nameWithType>.</span></span>   
    
 [!code-csharp[System.Numerics.BigInteger.Explicit#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Explicit/cs/Explicit1.cs#4)]   
 [!code-vb[System.Numerics.BigInteger.Explicit#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Explicit/vb/Explicit1.vb#4)]   



## Examples
 <span data-ttu-id="d7187-780">В следующем примере показано преобразование <xref:System.Numerics.BigInteger> в <xref:System.Double> значения.</span><span class="sxs-lookup"><span data-stu-id="d7187-780">The following example illustrates the conversion of <xref:System.Numerics.BigInteger> to <xref:System.Double> values.</span></span>   
    
 [!code-csharp[System.Numeric.BigInteger.Explicit#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Explicit/cs/System.Numeric.BigInteger.Explicit.cs#3)]   
 [!code-vb[System.Numeric.BigInteger.Explicit#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Explicit/vb/System.Numeric.BigInteger.Explicit.vb#3)]   

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator short (System.Numerics.BigInteger value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname int16 op_Explicit(valuetype System.Numerics.BigInteger value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int16" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As BigInteger) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator short(System::Numerics::BigInteger value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Numerics.BigInteger -&gt; int16" Usage="System.Numerics.BigInteger.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d7187-781">Значение, которое необходимо преобразовать в 16-разрядное знаковое целое число.</span><span class="sxs-lookup"><span data-stu-id="d7187-781">The value to convert to a 16-bit signed integer.</span></span></param>
        <summary><span data-ttu-id="d7187-782">Определяет явное преобразование объекта <see cref="T:System.Numerics.BigInteger" /> в значение 16-битового знакового целого числа.</span><span class="sxs-lookup"><span data-stu-id="d7187-782">Defines an explicit conversion of a <see cref="T:System.Numerics.BigInteger" /> object to a 16-bit signed integer value.</span></span></summary>
        <returns><span data-ttu-id="d7187-783">Объект, содержащий значение параметра <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-783">An object that contains the value of the <paramref name="value" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7187-784">Перегрузки <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> метода определяют типы, в которые или из <xref:System.Numerics.BigInteger> которых может быть преобразован объект.</span><span class="sxs-lookup"><span data-stu-id="d7187-784">The overloads of the <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> method define the types to which or from which a <xref:System.Numerics.BigInteger> object can be converted.</span></span> <span data-ttu-id="d7187-785">Компиляторы языков не выполняют это преобразование автоматически, так как это может привести к утрате данных.</span><span class="sxs-lookup"><span data-stu-id="d7187-785">Language compilers do not perform this conversion automatically because it can involve data loss.</span></span> <span data-ttu-id="d7187-786">Вместо этого они выполняют преобразование только в том случае, если используется оператор C#приведения (in) или функция преобразования `CType` ( `CShort` например, или в Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="d7187-786">Instead, they perform the conversion only if a casting operator (in C#) or a conversion function (such as `CType` or `CShort` in Visual Basic) is used.</span></span> <span data-ttu-id="d7187-787">В противном случае они выводят ошибку компилятора.</span><span class="sxs-lookup"><span data-stu-id="d7187-787">Otherwise, they display a compiler error.</span></span>   

 <span data-ttu-id="d7187-788">Так как эта операция определяет понижающие преобразования, <xref:System.OverflowException> во время выполнения может возникнуть исключение, <xref:System.Numerics.BigInteger> если значение выходит <xref:System.Int16> за пределы диапазона типа данных.</span><span class="sxs-lookup"><span data-stu-id="d7187-788">Because this operation defines a narrowing conversion, it can throw an <xref:System.OverflowException> at run time if the <xref:System.Numerics.BigInteger> value is outside the range of the <xref:System.Int16> data type.</span></span> <span data-ttu-id="d7187-789">В итоговом <xref:System.Int16> значении нет потерь точности, если преобразование выполнено успешно.</span><span class="sxs-lookup"><span data-stu-id="d7187-789">There is no loss of precision in the resulting <xref:System.Int16> value if the conversion is successful.</span></span>

## Examples
 <span data-ttu-id="d7187-790">В следующем примере показано преобразование <xref:System.Numerics.BigInteger> в <xref:System.Int16> значения.</span><span class="sxs-lookup"><span data-stu-id="d7187-790">The following example illustrates the conversion of <xref:System.Numerics.BigInteger> to <xref:System.Int16> values.</span></span> <span data-ttu-id="d7187-791">Он также обрабатывает <xref:System.OverflowException> исключение, вызванное <xref:System.Numerics.BigInteger> тем, что значение выходит <xref:System.Int16> за пределы диапазона типа данных.</span><span class="sxs-lookup"><span data-stu-id="d7187-791">It also handles an <xref:System.OverflowException> that is thrown because the <xref:System.Numerics.BigInteger> value is outside the range of the <xref:System.Int16> data type.</span></span>   
    
 [!code-csharp[System.Numeric.BigInteger.Explicit#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Explicit/cs/System.Numeric.BigInteger.Explicit.cs#4)]   
 [!code-vb[System.Numeric.BigInteger.Explicit#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Explicit/vb/System.Numeric.BigInteger.Explicit.vb#4)]   

 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="d7187-792"><paramref name="value" /> меньше <see cref="F:System.Int16.MinValue" /> или больше <see cref="F:System.Int16.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-792"><paramref name="value" /> is less than <see cref="F:System.Int16.MinValue" /> or is greater than <see cref="F:System.Int16.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator int (System.Numerics.BigInteger value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname int32 op_Explicit(valuetype System.Numerics.BigInteger value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int32" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As BigInteger) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator int(System::Numerics::BigInteger value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Numerics.BigInteger -&gt; int" Usage="System.Numerics.BigInteger.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d7187-793">Значение, которое необходимо преобразовать в 32-разрядное целое число со знаком.</span><span class="sxs-lookup"><span data-stu-id="d7187-793">The value to convert to a 32-bit signed integer.</span></span></param>
        <summary><span data-ttu-id="d7187-794">Определяет явное преобразование объекта <see cref="T:System.Numerics.BigInteger" /> в значение 32-разрядного целого числа со знаком.</span><span class="sxs-lookup"><span data-stu-id="d7187-794">Defines an explicit conversion of a <see cref="T:System.Numerics.BigInteger" /> object to a 32-bit signed integer value.</span></span></summary>
        <returns><span data-ttu-id="d7187-795">Объект, содержащий значение параметра <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-795">An object that contains the value of the <paramref name="value" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7187-796">Перегрузки <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> метода определяют типы, в которые или из <xref:System.Numerics.BigInteger> которых может быть преобразован объект.</span><span class="sxs-lookup"><span data-stu-id="d7187-796">The overloads of the <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> method define the types to which or from which a <xref:System.Numerics.BigInteger> object can be converted.</span></span> <span data-ttu-id="d7187-797">Компиляторы языков не выполняют это преобразование автоматически, так как это может привести к утрате данных.</span><span class="sxs-lookup"><span data-stu-id="d7187-797">Language compilers do not perform this conversion automatically because it can involve data loss.</span></span> <span data-ttu-id="d7187-798">Вместо этого они выполняют преобразование только в том случае, если используется оператор C#приведения (in) или функция преобразования `CType` ( `CInt` например, или в Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="d7187-798">Instead, they perform the conversion only if a casting operator (in C#) or a conversion function (such as `CType` or `CInt` in Visual Basic) is used.</span></span> <span data-ttu-id="d7187-799">В противном случае они выводят ошибку компилятора.</span><span class="sxs-lookup"><span data-stu-id="d7187-799">Otherwise, they display a compiler error.</span></span>   

 <span data-ttu-id="d7187-800">Так как эта операция определяет понижающие преобразования, <xref:System.OverflowException> во время выполнения может возникнуть исключение, <xref:System.Numerics.BigInteger> если значение выходит <xref:System.Int32> за пределы диапазона типа данных.</span><span class="sxs-lookup"><span data-stu-id="d7187-800">Because this operation defines a narrowing conversion, it can throw an <xref:System.OverflowException> at run time if the <xref:System.Numerics.BigInteger> value is outside the range of the <xref:System.Int32> data type.</span></span> <span data-ttu-id="d7187-801">В итоговом <xref:System.Int16> значении нет потерь точности, если преобразование выполнено успешно.</span><span class="sxs-lookup"><span data-stu-id="d7187-801">There is no loss of precision in the resulting <xref:System.Int16> value if the conversion is successful.</span></span>

## Examples
 <span data-ttu-id="d7187-802">В следующем примере показано преобразование <xref:System.Numerics.BigInteger> в <xref:System.Int32> значения.</span><span class="sxs-lookup"><span data-stu-id="d7187-802">The following example illustrates the conversion of <xref:System.Numerics.BigInteger> to <xref:System.Int32> values.</span></span> <span data-ttu-id="d7187-803">Он также обрабатывает <xref:System.OverflowException> исключение, вызванное <xref:System.Numerics.BigInteger> тем, что значение выходит <xref:System.Int32> за пределы диапазона типа данных.</span><span class="sxs-lookup"><span data-stu-id="d7187-803">It also handles an <xref:System.OverflowException> that is thrown because the <xref:System.Numerics.BigInteger> value is outside the range of the <xref:System.Int32> data type.</span></span>   
    
 [!code-csharp[System.Numeric.BigInteger.Explicit#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Explicit/cs/System.Numeric.BigInteger.Explicit.cs#5)]   
 [!code-vb[System.Numeric.BigInteger.Explicit#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Explicit/vb/System.Numeric.BigInteger.Explicit.vb#5)]   

 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="d7187-804"><paramref name="value" /> меньше <see cref="F:System.Int32.MinValue" /> или больше <see cref="F:System.Int32.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-804"><paramref name="value" /> is less than <see cref="F:System.Int32.MinValue" /> or is greater than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator long (System.Numerics.BigInteger value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname int64 op_Explicit(valuetype System.Numerics.BigInteger value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int64" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As BigInteger) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator long(System::Numerics::BigInteger value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Numerics.BigInteger -&gt; int64" Usage="System.Numerics.BigInteger.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d7187-805">Значение, которое необходимо преобразовать в 64-разрядное знаковое целое число.</span><span class="sxs-lookup"><span data-stu-id="d7187-805">The value to convert to a 64-bit signed integer.</span></span></param>
        <summary><span data-ttu-id="d7187-806">Определяет явное преобразование объекта <see cref="T:System.Numerics.BigInteger" /> в значение 64-разрядного целого числа со знаком.</span><span class="sxs-lookup"><span data-stu-id="d7187-806">Defines an explicit conversion of a <see cref="T:System.Numerics.BigInteger" /> object to a 64-bit signed integer value.</span></span></summary>
        <returns><span data-ttu-id="d7187-807">Объект, содержащий значение параметра <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-807">An object that contains the value of the <paramref name="value" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7187-808">Перегрузки <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> метода определяют типы, в которые или из <xref:System.Numerics.BigInteger> которых может быть преобразован объект.</span><span class="sxs-lookup"><span data-stu-id="d7187-808">The overloads of the <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> method define the types to which or from which a <xref:System.Numerics.BigInteger> object can be converted.</span></span> <span data-ttu-id="d7187-809">Компиляторы языков не выполняют это преобразование автоматически, так как это может привести к утрате данных.</span><span class="sxs-lookup"><span data-stu-id="d7187-809">Language compilers do not perform this conversion automatically because it can involve data loss.</span></span> <span data-ttu-id="d7187-810">Вместо этого они выполняют преобразование только в том случае, если используется оператор C#приведения (in) или функция преобразования `CType` ( `CLng` например, или в Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="d7187-810">Instead, they perform the conversion only if a casting operator (in C#) or a conversion function (such as `CType` or `CLng` in Visual Basic) is used.</span></span> <span data-ttu-id="d7187-811">В противном случае они выводят ошибку компилятора.</span><span class="sxs-lookup"><span data-stu-id="d7187-811">Otherwise, they display a compiler error.</span></span>  

 <span data-ttu-id="d7187-812">Так как эта операция определяет понижающие преобразования, <xref:System.OverflowException> во время выполнения может возникнуть исключение, <xref:System.Numerics.BigInteger> если значение выходит <xref:System.Int64> за пределы диапазона типа данных.</span><span class="sxs-lookup"><span data-stu-id="d7187-812">Because this operation defines a narrowing conversion, it can throw an <xref:System.OverflowException> at run time if the <xref:System.Numerics.BigInteger> value is outside the range of the <xref:System.Int64> data type.</span></span> 

## Examples
 <span data-ttu-id="d7187-813">В следующем примере показано преобразование <xref:System.Numerics.BigInteger> в <xref:System.Int64> значения.</span><span class="sxs-lookup"><span data-stu-id="d7187-813">The following example illustrates the conversion of <xref:System.Numerics.BigInteger> to <xref:System.Int64> values.</span></span> <span data-ttu-id="d7187-814">Он также обрабатывает <xref:System.OverflowException> исключение, вызванное <xref:System.Numerics.BigInteger> тем, что значение выходит <xref:System.Int64> за пределы диапазона типа данных.</span><span class="sxs-lookup"><span data-stu-id="d7187-814">It also handles an <xref:System.OverflowException> that is thrown because the <xref:System.Numerics.BigInteger> value is outside the range of the <xref:System.Int64> data type.</span></span>   
    
 [!code-csharp[System.Numeric.BigInteger.Explicit#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Explicit/cs/System.Numeric.BigInteger.Explicit.cs#6)]   
 [!code-vb[System.Numeric.BigInteger.Explicit#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Explicit/vb/System.Numeric.BigInteger.Explicit.vb#6)]   

 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="d7187-815"><paramref name="value" /> меньше <see cref="F:System.Int64.MinValue" /> или больше <see cref="F:System.Int64.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-815"><paramref name="value" /> is less than <see cref="F:System.Int64.MinValue" /> or is greater than <see cref="F:System.Int64.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator sbyte (System.Numerics.BigInteger value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname int8 op_Explicit(valuetype System.Numerics.BigInteger value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.SByte" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As BigInteger) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::SByte(System::Numerics::BigInteger value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Numerics.BigInteger -&gt; sbyte" Usage="System.Numerics.BigInteger.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d7187-816">Значение, которое необходимо преобразовать в значение 8-разрядного знакового числа.</span><span class="sxs-lookup"><span data-stu-id="d7187-816">The value to convert to a signed 8-bit value.</span></span></param>
        <summary><span data-ttu-id="d7187-817">Определяет явное преобразование объекта <see cref="T:System.Numerics.BigInteger" /> в значение 8-битового числа со знаком.</span><span class="sxs-lookup"><span data-stu-id="d7187-817">Defines an explicit conversion of a <see cref="T:System.Numerics.BigInteger" /> object to a signed 8-bit value.</span></span>  
  
<span data-ttu-id="d7187-818">Этот интерфейс API CLS-несовместим.</span><span class="sxs-lookup"><span data-stu-id="d7187-818">This API is not CLS-compliant.</span></span> <span data-ttu-id="d7187-819">Совместимая альтернатива — <see cref="T:System.Int16" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-819">The compliant alternative is <see cref="T:System.Int16" />.</span></span></summary>
        <returns><span data-ttu-id="d7187-820">Объект, содержащий значение параметра <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-820">An object that contains the value of the <paramref name="value" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7187-821">Перегрузки <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> метода определяют типы, в которые или из <xref:System.Numerics.BigInteger> которых может быть преобразован объект.</span><span class="sxs-lookup"><span data-stu-id="d7187-821">The overloads of the <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> method define the types to which or from which a <xref:System.Numerics.BigInteger> object can be converted.</span></span> <span data-ttu-id="d7187-822">Компиляторы языков не выполняют это преобразование автоматически, так как это может привести к утрате данных.</span><span class="sxs-lookup"><span data-stu-id="d7187-822">Language compilers do not perform this conversion automatically because it can involve data loss.</span></span> <span data-ttu-id="d7187-823">Вместо этого они выполняют преобразование только в том случае, если используется оператор C#приведения (in) или функция преобразования `CType` ( `CSByte` например, или в Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="d7187-823">Instead, they perform the conversion only if a casting operator (in C#) or a conversion function (such as `CType` or `CSByte` in Visual Basic) is used.</span></span> <span data-ttu-id="d7187-824">В противном случае они выводят ошибку компилятора.</span><span class="sxs-lookup"><span data-stu-id="d7187-824">Otherwise, they display a compiler error.</span></span>  

 <span data-ttu-id="d7187-825">Так как эта операция определяет понижающие преобразования, <xref:System.OverflowException> во время выполнения может возникнуть исключение, <xref:System.Numerics.BigInteger> если значение выходит <xref:System.SByte> за пределы диапазона типа данных.</span><span class="sxs-lookup"><span data-stu-id="d7187-825">Because this operation defines a narrowing conversion, it can throw an <xref:System.OverflowException> at run time if the <xref:System.Numerics.BigInteger> value is outside the range of the <xref:System.SByte> data type.</span></span> <span data-ttu-id="d7187-826">В итоговом <xref:System.SByte> значении нет потерь точности, если преобразование выполнено успешно.</span><span class="sxs-lookup"><span data-stu-id="d7187-826">There is no loss of precision in the resulting <xref:System.SByte> value if the conversion is successful.</span></span>

## Examples
 <span data-ttu-id="d7187-827">В следующем примере показано преобразование <xref:System.Numerics.BigInteger> в <xref:System.SByte> значения.</span><span class="sxs-lookup"><span data-stu-id="d7187-827">The following example illustrates the conversion of <xref:System.Numerics.BigInteger> to <xref:System.SByte> values.</span></span> <span data-ttu-id="d7187-828">Он также обрабатывает <xref:System.OverflowException> исключение, вызванное <xref:System.Numerics.BigInteger> тем, что значение выходит <xref:System.SByte> за пределы диапазона типа данных.</span><span class="sxs-lookup"><span data-stu-id="d7187-828">It also handles an <xref:System.OverflowException> that is thrown because the <xref:System.Numerics.BigInteger> value is outside the range of the <xref:System.SByte> data type.</span></span>   
    
 [!code-csharp[System.Numeric.BigInteger.Explicit#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Explicit/cs/System.Numeric.BigInteger.Explicit.cs#7)]   
 [!code-vb[System.Numeric.BigInteger.Explicit#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Explicit/vb/System.Numeric.BigInteger.Explicit.vb#7)]   

 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="d7187-829"><paramref name="value" /> меньше <see cref="F:System.SByte.MinValue" /> или больше <see cref="F:System.SByte.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-829"><paramref name="value" /> is less than <see cref="F:System.SByte.MinValue" /> or is greater than <see cref="F:System.SByte.MaxValue" />.</span></span></exception>
        <altCompliant cref="T:System.Int16" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator float (System.Numerics.BigInteger value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname float32 op_Explicit(valuetype System.Numerics.BigInteger value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Single" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As BigInteger) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator float(System::Numerics::BigInteger value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Numerics.BigInteger -&gt; single" Usage="System.Numerics.BigInteger.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d7187-830">Значение, которое необходимо преобразовать в значение числа с плавающей запятой одиночной точности.</span><span class="sxs-lookup"><span data-stu-id="d7187-830">The value to convert to a single-precision floating-point value.</span></span></param>
        <summary><span data-ttu-id="d7187-831">Определяет явное преобразование объекта <see cref="T:System.Numerics.BigInteger" /> в значение числа с плавающей запятой одиночной точности.</span><span class="sxs-lookup"><span data-stu-id="d7187-831">Defines an explicit conversion of a <see cref="T:System.Numerics.BigInteger" /> object to a single-precision floating-point value.</span></span></summary>
        <returns><span data-ttu-id="d7187-832">Объект, содержащий ближайшее возможное представление параметра <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-832">An object that contains the closest possible representation of the <paramref name="value" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7187-833">Перегрузки <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> метода определяют типы, в которые или из <xref:System.Numerics.BigInteger> которых может быть преобразован объект.</span><span class="sxs-lookup"><span data-stu-id="d7187-833">The overloads of the <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> method define the types to which or from which a <xref:System.Numerics.BigInteger> object can be converted.</span></span> <span data-ttu-id="d7187-834">Языковые компиляторы не выполняют это преобразование автоматически, так как оно может привести к утрате данных или к утрате точности.</span><span class="sxs-lookup"><span data-stu-id="d7187-834">Language compilers do not perform this conversion automatically because it can involve data loss or a loss of precision.</span></span> <span data-ttu-id="d7187-835">Вместо этого они выполняют преобразование только в том случае, если используется оператор C#приведения (in) или функция преобразования `CType` ( `CSng` например, или в Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="d7187-835">Instead, they perform the conversion only if a casting operator (in C#) or a conversion function (such as `CType` or `CSng` in Visual Basic) is used.</span></span> <span data-ttu-id="d7187-836">В противном случае они выводят ошибку компилятора.</span><span class="sxs-lookup"><span data-stu-id="d7187-836">Otherwise, they display a compiler error.</span></span>    

 <span data-ttu-id="d7187-837">Так как <xref:System.Single> значение может находиться вне диапазона типа данных, эта операция является узким преобразованием. <xref:System.Numerics.BigInteger></span><span class="sxs-lookup"><span data-stu-id="d7187-837">Because the <xref:System.Numerics.BigInteger> value can be outside the range of the <xref:System.Single> data type, this operation is a narrowing conversion.</span></span> <span data-ttu-id="d7187-838">Если преобразование завершилось неудачно, оно не вызывает <xref:System.OverflowException>исключение.</span><span class="sxs-lookup"><span data-stu-id="d7187-838">If the conversion is unsuccessful, it does not throw an <xref:System.OverflowException>.</span></span> <span data-ttu-id="d7187-839">Вместо этого, если <xref:System.Numerics.BigInteger> значение <xref:System.Single.MinValue?displayProperty=nameWithType>меньше, то результирующим <xref:System.Single> значением является <xref:System.Single.NegativeInfinity?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="d7187-839">Instead, if the <xref:System.Numerics.BigInteger> value is less than <xref:System.Single.MinValue?displayProperty=nameWithType>, the resulting <xref:System.Single> value is <xref:System.Single.NegativeInfinity?displayProperty=nameWithType>.</span></span> <span data-ttu-id="d7187-840">Если значение больше, то результирующее <xref:System.Single> значение равно <xref:System.Single.PositiveInfinity?displayProperty=nameWithType>. <xref:System.Single.MaxValue?displayProperty=nameWithType> <xref:System.Numerics.BigInteger></span><span class="sxs-lookup"><span data-stu-id="d7187-840">If the <xref:System.Numerics.BigInteger> value is greater than <xref:System.Single.MaxValue?displayProperty=nameWithType>, the resulting <xref:System.Single> value is <xref:System.Single.PositiveInfinity?displayProperty=nameWithType>.</span></span>

 <span data-ttu-id="d7187-841">Преобразование типа <xref:System.Numerics.BigInteger> <xref:System.Single> в может привести к утере точности.</span><span class="sxs-lookup"><span data-stu-id="d7187-841">The conversion of a <xref:System.Numerics.BigInteger> to a <xref:System.Single> may involve a loss of precision.</span></span> <span data-ttu-id="d7187-842">В некоторых случаях потери точности могут привести к успешности операции приведения или преобразования, даже если <xref:System.Numerics.BigInteger> значение выходит за пределы диапазона <xref:System.Single> типа данных.</span><span class="sxs-lookup"><span data-stu-id="d7187-842">In some cases, the loss of precision may cause the casting or conversion operation to succeed even if the <xref:System.Numerics.BigInteger> value is outside the range of the <xref:System.Single> data type.</span></span> <span data-ttu-id="d7187-843">Ниже приведен пример.</span><span class="sxs-lookup"><span data-stu-id="d7187-843">The following example provides an illustration.</span></span> <span data-ttu-id="d7187-844">Он назначает максимальное значение <xref:System.Single> для двух <xref:System.Numerics.BigInteger> переменных, увеличивает одну <xref:System.Numerics.BigInteger> переменную на 9.999 e291 и проверяет две переменные на равенство.</span><span class="sxs-lookup"><span data-stu-id="d7187-844">It assigns the maximum value of a <xref:System.Single> to two <xref:System.Numerics.BigInteger> variables, increments one <xref:System.Numerics.BigInteger> variable by 9.999e291, and tests the two variables for equality.</span></span> <span data-ttu-id="d7187-845">Как и ожидалось, вызов <xref:System.Numerics.BigInteger.Equals%28System.Numerics.BigInteger%29?displayProperty=nameWithType> метода показывает, что они не равны.</span><span class="sxs-lookup"><span data-stu-id="d7187-845">As expected, the call to the <xref:System.Numerics.BigInteger.Equals%28System.Numerics.BigInteger%29?displayProperty=nameWithType> method shows that they are unequal.</span></span> <span data-ttu-id="d7187-846">Однако преобразование большего <xref:System.Numerics.BigInteger> значения обратно <xref:System.Single> в значение будет <xref:System.Numerics.BigInteger> выполнено, хотя значение теперь превышает <xref:System.Single.MaxValue?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="d7187-846">However, the conversion of the larger <xref:System.Numerics.BigInteger> value back to a <xref:System.Single> succeeds, although the <xref:System.Numerics.BigInteger> value now exceeds <xref:System.Single.MaxValue?displayProperty=nameWithType>.</span></span>   
    
 [!code-csharp[System.Numerics.BigInteger.Explicit#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Explicit/cs/Explicit1.cs#5)]   
 [!code-vb[System.Numerics.BigInteger.Explicit#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Explicit/vb/Explicit1.vb#5)]   



## Examples
 <span data-ttu-id="d7187-847">В следующем примере показано преобразование <xref:System.Numerics.BigInteger> в <xref:System.Single> значения.</span><span class="sxs-lookup"><span data-stu-id="d7187-847">The following example illustrates the conversion of <xref:System.Numerics.BigInteger> to <xref:System.Single> values.</span></span>   
     
 [!code-csharp[System.Numeric.BigInteger.Explicit#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Explicit/cs/System.Numeric.BigInteger.Explicit.cs#8)]   
 [!code-vb[System.Numeric.BigInteger.Explicit#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Explicit/vb/System.Numeric.BigInteger.Explicit.vb#8)]   

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator ushort (System.Numerics.BigInteger value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname unsigned int16 op_Explicit(valuetype System.Numerics.BigInteger value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt16" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As BigInteger) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::UInt16(System::Numerics::BigInteger value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Numerics.BigInteger -&gt; uint16" Usage="System.Numerics.BigInteger.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d7187-848">Значение, которое необходимо преобразовать в 16-разрядное целое число без знака.</span><span class="sxs-lookup"><span data-stu-id="d7187-848">The value to convert to an unsigned 16-bit integer.</span></span></param>
        <summary><span data-ttu-id="d7187-849">Определяет явное преобразование объекта <see cref="T:System.Numerics.BigInteger" /> в значение 16-битового целого числа без знака.</span><span class="sxs-lookup"><span data-stu-id="d7187-849">Defines an explicit conversion of a <see cref="T:System.Numerics.BigInteger" /> object to an unsigned 16-bit integer value.</span></span>  
  
<span data-ttu-id="d7187-850">Этот интерфейс API CLS-несовместим.</span><span class="sxs-lookup"><span data-stu-id="d7187-850">This API is not CLS-compliant.</span></span> <span data-ttu-id="d7187-851">Совместимая альтернатива — <see cref="T:System.Int32" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-851">The compliant alternative is <see cref="T:System.Int32" />.</span></span></summary>
        <returns><span data-ttu-id="d7187-852">Объект, содержащий значение параметра <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-852">An object that contains the value of the <paramref name="value" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7187-853">Перегрузки <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> метода определяют типы, в которые или из <xref:System.Numerics.BigInteger> которых может быть преобразован объект.</span><span class="sxs-lookup"><span data-stu-id="d7187-853">The overloads of the <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> method define the types to which or from which a <xref:System.Numerics.BigInteger> object can be converted.</span></span> <span data-ttu-id="d7187-854">Компиляторы языков не выполняют это преобразование автоматически, так как это может привести к утрате данных.</span><span class="sxs-lookup"><span data-stu-id="d7187-854">Language compilers do not perform this conversion automatically because it can involve data loss.</span></span> <span data-ttu-id="d7187-855">Вместо этого они выполняют преобразование только в том случае, если используется оператор C#приведения (in) или функция преобразования `CType` ( `CUShort` например, или в Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="d7187-855">Instead, they perform the conversion only if a casting operator (in C#) or a conversion function (such as `CType` or `CUShort` in Visual Basic) is used.</span></span> <span data-ttu-id="d7187-856">В противном случае они выводят ошибку компилятора.</span><span class="sxs-lookup"><span data-stu-id="d7187-856">Otherwise, they display a compiler error.</span></span>    

 <span data-ttu-id="d7187-857">Так как эта операция определяет понижающие преобразования, <xref:System.OverflowException> во время выполнения может возникнуть исключение, <xref:System.Numerics.BigInteger> если значение выходит <xref:System.UInt16> за пределы диапазона типа данных.</span><span class="sxs-lookup"><span data-stu-id="d7187-857">Because this operation defines a narrowing conversion, it can throw an <xref:System.OverflowException> at run time if the <xref:System.Numerics.BigInteger> value is outside the range of the <xref:System.UInt16> data type.</span></span> <span data-ttu-id="d7187-858">В итоговом <xref:System.UInt16> значении нет потерь точности, если преобразование выполнено успешно.</span><span class="sxs-lookup"><span data-stu-id="d7187-858">There is no loss of precision in the resulting <xref:System.UInt16> value if the conversion is successful.</span></span>

## Examples
 <span data-ttu-id="d7187-859">В следующем примере показано преобразование <xref:System.Numerics.BigInteger> в <xref:System.UInt16> значения.</span><span class="sxs-lookup"><span data-stu-id="d7187-859">The following example illustrates the conversion of <xref:System.Numerics.BigInteger> to <xref:System.UInt16> values.</span></span> <span data-ttu-id="d7187-860">Он также обрабатывает <xref:System.OverflowException> исключение, вызванное <xref:System.Numerics.BigInteger> тем, что значение выходит <xref:System.UInt16> за пределы диапазона типа данных.</span><span class="sxs-lookup"><span data-stu-id="d7187-860">It also handles an <xref:System.OverflowException> that is thrown because the <xref:System.Numerics.BigInteger> value is outside the range of the <xref:System.UInt16> data type.</span></span>   
    
 [!code-csharp[System.Numeric.BigInteger.Explicit#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Explicit/cs/System.Numeric.BigInteger.Explicit.cs#9)]   
 [!code-vb[System.Numeric.BigInteger.Explicit#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Explicit/vb/System.Numeric.BigInteger.Explicit.vb#9)]   

 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="d7187-861"><paramref name="value" /> меньше <see cref="F:System.UInt16.MinValue" /> или больше <see cref="F:System.UInt16.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-861"><paramref name="value" /> is less than <see cref="F:System.UInt16.MinValue" /> or is greater than <see cref="F:System.UInt16.MaxValue" />.</span></span></exception>
        <altCompliant cref="T:System.Int32" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator uint (System.Numerics.BigInteger value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname unsigned int32 op_Explicit(valuetype System.Numerics.BigInteger value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt32" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As BigInteger) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::UInt32(System::Numerics::BigInteger value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Numerics.BigInteger -&gt; uint32" Usage="System.Numerics.BigInteger.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d7187-862">Значение, которое необходимо преобразовать в 32-разрядное целое число без знака.</span><span class="sxs-lookup"><span data-stu-id="d7187-862">The value to convert to an unsigned 32-bit integer.</span></span></param>
        <summary><span data-ttu-id="d7187-863">Определяет явное преобразование объекта <see cref="T:System.Numerics.BigInteger" /> в значение 32-разрядного целого числа без знака.</span><span class="sxs-lookup"><span data-stu-id="d7187-863">Defines an explicit conversion of a <see cref="T:System.Numerics.BigInteger" /> object to an unsigned 32-bit integer value.</span></span>  
  
<span data-ttu-id="d7187-864">Этот интерфейс API CLS-несовместим.</span><span class="sxs-lookup"><span data-stu-id="d7187-864">This API is not CLS-compliant.</span></span> <span data-ttu-id="d7187-865">Совместимая альтернатива — <see cref="T:System.Int64" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-865">The compliant alternative is <see cref="T:System.Int64" />.</span></span></summary>
        <returns><span data-ttu-id="d7187-866">Объект, содержащий значение параметра <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-866">An object that contains the value of the <paramref name="value" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7187-867">Перегрузки <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> метода определяют типы, в которые или из <xref:System.Numerics.BigInteger> которых может быть преобразован объект.</span><span class="sxs-lookup"><span data-stu-id="d7187-867">The overloads of the <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> method define the types to which or from which a <xref:System.Numerics.BigInteger> object can be converted.</span></span> <span data-ttu-id="d7187-868">Компиляторы языков не выполняют это преобразование автоматически, так как это может привести к утрате данных.</span><span class="sxs-lookup"><span data-stu-id="d7187-868">Language compilers do not perform this conversion automatically because it can involve data loss.</span></span> <span data-ttu-id="d7187-869">Вместо этого они выполняют преобразование только в том случае, если используется оператор C#приведения (in) или функция преобразования `CType` ( `CUInt` например, или в Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="d7187-869">Instead, they perform the conversion only if a casting operator (in C#) or a conversion function (such as `CType` or `CUInt` in Visual Basic) is used.</span></span> <span data-ttu-id="d7187-870">В противном случае они выводят ошибку компилятора.</span><span class="sxs-lookup"><span data-stu-id="d7187-870">Otherwise, they display a compiler error.</span></span>    

 <span data-ttu-id="d7187-871">Так как эта операция определяет понижающие преобразования, <xref:System.OverflowException> во время выполнения может возникнуть исключение, <xref:System.Numerics.BigInteger> если значение выходит <xref:System.UInt32> за пределы диапазона типа данных.</span><span class="sxs-lookup"><span data-stu-id="d7187-871">Because this operation defines a narrowing conversion, it can throw an <xref:System.OverflowException> at run time if the <xref:System.Numerics.BigInteger> value is outside the range of the <xref:System.UInt32> data type.</span></span> <span data-ttu-id="d7187-872">В итоговом <xref:System.UInt32> значении нет потерь точности, если преобразование выполнено успешно.</span><span class="sxs-lookup"><span data-stu-id="d7187-872">There is no loss of precision in the resulting <xref:System.UInt32> value if the conversion is successful.</span></span>

## Examples
 <span data-ttu-id="d7187-873">В следующем примере показано преобразование <xref:System.Numerics.BigInteger> в <xref:System.UInt32> значения.</span><span class="sxs-lookup"><span data-stu-id="d7187-873">The following example illustrates the conversion of <xref:System.Numerics.BigInteger> to <xref:System.UInt32> values.</span></span> <span data-ttu-id="d7187-874">Он также обрабатывает <xref:System.OverflowException> исключение, вызванное <xref:System.Numerics.BigInteger> тем, что значение выходит <xref:System.UInt32> за пределы диапазона типа данных.</span><span class="sxs-lookup"><span data-stu-id="d7187-874">It also handles an <xref:System.OverflowException> that is thrown because the <xref:System.Numerics.BigInteger> value is outside the range of the <xref:System.UInt32> data type.</span></span>   
    
 [!code-csharp[System.Numeric.BigInteger.Explicit#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Explicit/cs/System.Numeric.BigInteger.Explicit.cs#10)]   
 [!code-vb[System.Numeric.BigInteger.Explicit#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Explicit/vb/System.Numeric.BigInteger.Explicit.vb#10)]   

 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="d7187-875"><paramref name="value" /> меньше <see cref="F:System.UInt32.MinValue" /> или больше <see cref="F:System.UInt32.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-875"><paramref name="value" /> is less than <see cref="F:System.UInt32.MinValue" /> or is greater than <see cref="F:System.UInt32.MaxValue" />.</span></span></exception>
        <altCompliant cref="T:System.Int64" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator ulong (System.Numerics.BigInteger value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname unsigned int64 op_Explicit(valuetype System.Numerics.BigInteger value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt64" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As BigInteger) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::UInt64(System::Numerics::BigInteger value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Numerics.BigInteger -&gt; uint64" Usage="System.Numerics.BigInteger.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d7187-876">Значение, которое необходимо преобразовать в 64-разрядное целое число без знака.</span><span class="sxs-lookup"><span data-stu-id="d7187-876">The value to convert to an unsigned 64-bit integer.</span></span></param>
        <summary><span data-ttu-id="d7187-877">Определяет явное преобразование объекта <see cref="T:System.Numerics.BigInteger" /> в значение 64-разрядного целого числа без знака.</span><span class="sxs-lookup"><span data-stu-id="d7187-877">Defines an explicit conversion of a <see cref="T:System.Numerics.BigInteger" /> object to an unsigned 64-bit integer value.</span></span>  
  
<span data-ttu-id="d7187-878">Этот интерфейс API CLS-несовместим.</span><span class="sxs-lookup"><span data-stu-id="d7187-878">This API is not CLS-compliant.</span></span> <span data-ttu-id="d7187-879">Совместимая альтернатива — <see cref="T:System.Double" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-879">The compliant alternative is <see cref="T:System.Double" />.</span></span></summary>
        <returns><span data-ttu-id="d7187-880">Объект, содержащий значение параметра <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-880">An object that contains the value of the <paramref name="value" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7187-881">Перегрузки <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> метода определяют типы, в которые или из <xref:System.Numerics.BigInteger> которых может быть преобразован объект.</span><span class="sxs-lookup"><span data-stu-id="d7187-881">The overloads of the <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> method define the types to which or from which a <xref:System.Numerics.BigInteger> object can be converted.</span></span> <span data-ttu-id="d7187-882">Компиляторы языков не выполняют это преобразование автоматически, так как это может привести к утрате данных.</span><span class="sxs-lookup"><span data-stu-id="d7187-882">Language compilers do not perform this conversion automatically because it can involve data loss.</span></span> <span data-ttu-id="d7187-883">Вместо этого они выполняют преобразование только в том случае, если используется оператор C#приведения (in) или функция преобразования `CType` ( `CULng` например, или в Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="d7187-883">Instead, they perform the conversion only if a casting operator (in C#) or a conversion function (such as `CType` or `CULng` in Visual Basic) is used.</span></span> <span data-ttu-id="d7187-884">В противном случае они выводят ошибку компилятора.</span><span class="sxs-lookup"><span data-stu-id="d7187-884">Otherwise, they display a compiler error.</span></span>    

 <span data-ttu-id="d7187-885">Так как эта операция определяет понижающие преобразования, <xref:System.OverflowException> во время выполнения может возникнуть исключение, <xref:System.Numerics.BigInteger> если значение выходит <xref:System.UInt64> за пределы диапазона типа данных.</span><span class="sxs-lookup"><span data-stu-id="d7187-885">Because this operation defines a narrowing conversion, it can throw an <xref:System.OverflowException> at run time if the <xref:System.Numerics.BigInteger> value is outside the range of the <xref:System.UInt64> data type.</span></span> <span data-ttu-id="d7187-886">В итоговом <xref:System.UInt64> значении нет потерь точности, если преобразование выполнено успешно.</span><span class="sxs-lookup"><span data-stu-id="d7187-886">There is no loss of precision in the resulting <xref:System.UInt64> value if the conversion is successful.</span></span>

## Examples
 <span data-ttu-id="d7187-887">В следующем примере показано преобразование <xref:System.Numerics.BigInteger> в <xref:System.UInt64> значения.</span><span class="sxs-lookup"><span data-stu-id="d7187-887">The following example illustrates the conversion of <xref:System.Numerics.BigInteger> to <xref:System.UInt64> values.</span></span> <span data-ttu-id="d7187-888">Он также обрабатывает <xref:System.OverflowException> исключение, вызванное <xref:System.Numerics.BigInteger> тем, что значение выходит <xref:System.UInt64> за пределы диапазона типа данных.</span><span class="sxs-lookup"><span data-stu-id="d7187-888">It also handles an <xref:System.OverflowException> that is thrown because the <xref:System.Numerics.BigInteger> value is outside the range of the <xref:System.UInt64> data type.</span></span>   
    
 [!code-csharp[System.Numeric.BigInteger.Explicit#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Explicit/cs/System.Numeric.BigInteger.Explicit.cs#11)]   
 [!code-vb[System.Numeric.BigInteger.Explicit#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Explicit/vb/System.Numeric.BigInteger.Explicit.vb#11)]   

 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="d7187-889"><paramref name="value" /> меньше <see cref="F:System.UInt64.MinValue" /> или больше <see cref="F:System.UInt64.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-889"><paramref name="value" /> is less than <see cref="F:System.UInt64.MinValue" /> or is greater than <see cref="F:System.UInt64.MaxValue" />.</span></span></exception>
        <altCompliant cref="T:System.Double" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator System.Numerics.BigInteger (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_Explicit(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Explicit(System.Single)~System.Numerics.BigInteger" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As Single) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::Numerics::BigInteger(float value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : single -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d7187-890">Значение, которое необходимо преобразовать в тип <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-890">The value to convert to a <see cref="T:System.Numerics.BigInteger" />.</span></span></param>
        <summary><span data-ttu-id="d7187-891">Определяет явное преобразование значения <see cref="T:System.Single" /> в значение <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-891">Defines an explicit conversion of a <see cref="T:System.Single" /> value to a <see cref="T:System.Numerics.BigInteger" /> value.</span></span></summary>
        <returns><span data-ttu-id="d7187-892">Объект, содержащий значение параметра <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-892">An object that contains the value of the <paramref name="value" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7187-893">Дробная часть `value` параметра усекается до преобразования.</span><span class="sxs-lookup"><span data-stu-id="d7187-893">Any fractional part of the `value` parameter is truncated before conversion.</span></span>
 
 <span data-ttu-id="d7187-894">Перегрузки <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> метода определяют типы, в которые или из <xref:System.Numerics.BigInteger> которых может быть преобразован объект.</span><span class="sxs-lookup"><span data-stu-id="d7187-894">The overloads of the <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> method define the types to which or from which a <xref:System.Numerics.BigInteger> object can be converted.</span></span> <span data-ttu-id="d7187-895">Поскольку преобразование из <xref:System.Single> в может <xref:System.Numerics.BigInteger> привести к усечению `value`любой дробной части, языковые компиляторы не выполняют это преобразование автоматически.</span><span class="sxs-lookup"><span data-stu-id="d7187-895">Because the conversion from <xref:System.Single> to <xref:System.Numerics.BigInteger> can involve truncating any fractional part of `value`, language compilers do not perform this conversion automatically.</span></span> <span data-ttu-id="d7187-896">Вместо этого они выполняют преобразование только в том случае, если используется оператор C#приведения (in) или функция преобразования `CType` (например, в Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="d7187-896">Instead, they perform the conversion only if a casting operator (in C#) or a conversion function (such as `CType` in Visual Basic) is used.</span></span> <span data-ttu-id="d7187-897">В противном случае они выводят ошибку компилятора.</span><span class="sxs-lookup"><span data-stu-id="d7187-897">Otherwise, they display a compiler error.</span></span>

 <span data-ttu-id="d7187-898">Для языков, которые не поддерживают пользовательские операторы, альтернативным методом является <xref:System.Numerics.BigInteger.%23ctor%28System.Single%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="d7187-898">For languages that do not support custom operators, the alternative method is <xref:System.Numerics.BigInteger.%23ctor%28System.Single%29?displayProperty=nameWithType>.</span></span>


## Examples
 <span data-ttu-id="d7187-899">В следующем примере отдельные элементы в массиве <xref:System.Single> <xref:System.Numerics.BigInteger> значений преобразуются в объекты, а затем выводятся результаты каждого преобразования.</span><span class="sxs-lookup"><span data-stu-id="d7187-899">The following example converts the individual elements in an array of <xref:System.Single> values to <xref:System.Numerics.BigInteger> objects, and then displays the result of each conversion.</span></span> <span data-ttu-id="d7187-900">Обратите внимание, что во время преобразования <xref:System.Single> дробная часть значения усекается.</span><span class="sxs-lookup"><span data-stu-id="d7187-900">Note that any fractional part of a <xref:System.Single> value is truncated during the conversion.</span></span>
 
 [!code-csharp[System.Numerics.BigInteger.Explicit#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Explicit/cs/Explicit1.cs#3)]   
 [!code-vb[System.Numerics.BigInteger.Explicit#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Explicit/vb/Explicit1.vb#3)]   

 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="d7187-901"><paramref name="value" /> имеет значение <see cref="F:System.Single.NaN" />, <see cref="F:System.Single.PositiveInfinity" /> или <see cref="F:System.Single.NegativeInfinity" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-901"><paramref name="value" /> is <see cref="F:System.Single.NaN" />, <see cref="F:System.Single.PositiveInfinity" />, or <see cref="F:System.Single.NegativeInfinity" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="op_GreaterThan">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d7187-902">Возвращает значение, определяющее, действительно ли заданное значение больше другого заданного значения.</span><span class="sxs-lookup"><span data-stu-id="d7187-902">Returns a value that indicates whether a specified value is greater than another specified value.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="op_GreaterThan">
      <MemberSignature Language="C#" Value="public static bool operator &gt; (long left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThan(int64 left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_GreaterThan(System.Int64,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt; (left As Long, right As BigInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;(long left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member ( &gt; ) : int64 * System.Numerics.BigInteger -&gt; bool" Usage="left &gt; right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Int64" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="d7187-903">Первое сравниваемое значение.</span><span class="sxs-lookup"><span data-stu-id="d7187-903">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="d7187-904">Второе сравниваемое значение.</span><span class="sxs-lookup"><span data-stu-id="d7187-904">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="d7187-905">Возвращает значение, определяющее, действительно 64-разрядное знаковое целое число больше или равно значению <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-905">Returns a value that indicates whether a 64-bit signed integer is greater than a <see cref="T:System.Numerics.BigInteger" /> value.</span></span></summary>
        <returns><span data-ttu-id="d7187-906"><see langword="true" />, если <paramref name="left" /> больше <paramref name="right" />; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-906"><see langword="true" /> if <paramref name="left" /> is greater than <paramref name="right" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7187-907">Метод определяет операцию оператора "больше" для <xref:System.Numerics.BigInteger> значений. <xref:System.Numerics.BigInteger.op_GreaterThan%2A></span><span class="sxs-lookup"><span data-stu-id="d7187-907">The <xref:System.Numerics.BigInteger.op_GreaterThan%2A> method defines the operation of the greater than operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="d7187-908">Он включает следующий код:</span><span class="sxs-lookup"><span data-stu-id="d7187-908">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#9)]
 [!code-vb[System.Numerics.BigInteger.Operators#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#9)]  
  
 <span data-ttu-id="d7187-909">Языки, которые не поддерживают пользовательские операторы, могут вызывать <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType> метод экземпляра.</span><span class="sxs-lookup"><span data-stu-id="d7187-909">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType> instance method instead.</span></span> <span data-ttu-id="d7187-910">Некоторые языки также могут вызывать <xref:System.Numerics.BigInteger.op_GreaterThan%28System.Int64%2CSystem.Numerics.BigInteger%29> метод напрямую, как показано в следующем примере.</span><span class="sxs-lookup"><span data-stu-id="d7187-910">Some languages can also call the <xref:System.Numerics.BigInteger.op_GreaterThan%28System.Int64%2CSystem.Numerics.BigInteger%29> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Numerics.BigInteger.Operators#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#10)]  
  
 <span data-ttu-id="d7187-911">Если `left` <xref:System.Int16>параметр имеетзначение<xref:System.SByte> <xref:System.Int64> , ,,,или<xref:System.Int32> ,<xref:System.UInt32> он неявно преобразуется в значение при выполнении операции. <xref:System.Byte> <xref:System.UInt16></span><span class="sxs-lookup"><span data-stu-id="d7187-911">If `left` is a <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.SByte>, <xref:System.UInt16>, or <xref:System.UInt32> value, it is implicitly converted to an <xref:System.Int64> value when the operation is performed.</span></span>  
  
 <span data-ttu-id="d7187-912">Эквивалентным методом для этого оператора является <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="d7187-912">The equivalent method for this operator is <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_GreaterThanOrEqual" />
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThan">
      <MemberSignature Language="C#" Value="public static bool operator &gt; (System.Numerics.BigInteger left, long right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThan(valuetype System.Numerics.BigInteger left, int64 right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_GreaterThan(System.Numerics.BigInteger,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt; (left As BigInteger, right As Long) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;(System::Numerics::BigInteger left, long right);" />
      <MemberSignature Language="F#" Value="static member ( &gt; ) : System.Numerics.BigInteger * int64 -&gt; bool" Usage="left &gt; right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="d7187-913">Первое сравниваемое значение.</span><span class="sxs-lookup"><span data-stu-id="d7187-913">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="d7187-914">Второе сравниваемое значение.</span><span class="sxs-lookup"><span data-stu-id="d7187-914">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="d7187-915">Возвращает значение, определяющее, действительно ли значение <see cref="T:System.Numerics.BigInteger" /> больше значения 64-битового знакового целого числа.</span><span class="sxs-lookup"><span data-stu-id="d7187-915">Returns a value that indicates whether a <see cref="T:System.Numerics.BigInteger" /> is greater than a 64-bit signed integer value.</span></span></summary>
        <returns><span data-ttu-id="d7187-916"><see langword="true" />, если <paramref name="left" /> больше <paramref name="right" />; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-916"><see langword="true" /> if <paramref name="left" /> is greater than <paramref name="right" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7187-917">Метод определяет операцию оператора "больше" для <xref:System.Numerics.BigInteger> значений. <xref:System.Numerics.BigInteger.op_GreaterThan%2A></span><span class="sxs-lookup"><span data-stu-id="d7187-917">The <xref:System.Numerics.BigInteger.op_GreaterThan%2A> method defines the operation of the greater than operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="d7187-918">Он включает следующий код:</span><span class="sxs-lookup"><span data-stu-id="d7187-918">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#11)]
 [!code-vb[System.Numerics.BigInteger.Operators#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#11)]  
  
 <span data-ttu-id="d7187-919">Языки, которые не поддерживают пользовательские операторы, могут вызывать <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="d7187-919">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="d7187-920">Некоторые языки также могут вызывать <xref:System.Numerics.BigInteger.op_GreaterThan%28System.Numerics.BigInteger%2CSystem.Int64%29> метод напрямую, как показано в следующем примере.</span><span class="sxs-lookup"><span data-stu-id="d7187-920">Some languages can also call the <xref:System.Numerics.BigInteger.op_GreaterThan%28System.Numerics.BigInteger%2CSystem.Int64%29> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Numerics.BigInteger.Operators#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#12)]  
  
 <span data-ttu-id="d7187-921">Если `right` <xref:System.Int16>параметр имеетзначение<xref:System.SByte> <xref:System.Int64> , ,,,или<xref:System.Int32> ,<xref:System.UInt32> он неявно преобразуется в значение при выполнении операции. <xref:System.Byte> <xref:System.UInt16></span><span class="sxs-lookup"><span data-stu-id="d7187-921">If `right` is a <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.SByte>, <xref:System.UInt16>, or <xref:System.UInt32> value, it is implicitly converted to an <xref:System.Int64> value when the operation is performed.</span></span>  
  
 <span data-ttu-id="d7187-922">Эквивалентным методом для этого оператора является <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="d7187-922">The equivalent method for this operator is <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_GreaterThanOrEqual" />
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThan">
      <MemberSignature Language="C#" Value="public static bool operator &gt; (System.Numerics.BigInteger left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThan(valuetype System.Numerics.BigInteger left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_GreaterThan(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt; (left As BigInteger, right As BigInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;(System::Numerics::BigInteger left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member ( &gt; ) : System.Numerics.BigInteger * System.Numerics.BigInteger -&gt; bool" Usage="left &gt; right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="d7187-923">Первое сравниваемое значение.</span><span class="sxs-lookup"><span data-stu-id="d7187-923">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="d7187-924">Второе сравниваемое значение.</span><span class="sxs-lookup"><span data-stu-id="d7187-924">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="d7187-925">Возвращает значение, определяющее, действительно ли значение типа <see cref="T:System.Numerics.BigInteger" /> больше другого значения типа <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-925">Returns a value that indicates whether a <see cref="T:System.Numerics.BigInteger" /> value is greater than another <see cref="T:System.Numerics.BigInteger" /> value.</span></span></summary>
        <returns><span data-ttu-id="d7187-926"><see langword="true" />, если <paramref name="left" /> больше <paramref name="right" />; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-926"><see langword="true" /> if <paramref name="left" /> is greater than <paramref name="right" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7187-927">Метод определяет операцию оператора "больше" для <xref:System.Numerics.BigInteger> значений. <xref:System.Numerics.BigInteger.op_GreaterThan%2A></span><span class="sxs-lookup"><span data-stu-id="d7187-927">The <xref:System.Numerics.BigInteger.op_GreaterThan%2A> method defines the operation of the greater than operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="d7187-928">Он включает следующий код:</span><span class="sxs-lookup"><span data-stu-id="d7187-928">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numeric.BigInteger.Class#20](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/cs/BigInteger_Examples.cs#20)]
 [!code-vb[System.Numeric.BigInteger.Class#20](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/vb/BigInteger_Examples.vb#20)]  
  
 <span data-ttu-id="d7187-929">Языки, которые не поддерживают пользовательские операторы, могут вызывать <xref:System.Numerics.BigInteger.Compare%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="d7187-929">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.Compare%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="d7187-930">Они также могут вызывать <xref:System.Numerics.BigInteger.op_GreaterThan%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29> метод напрямую, как показано в следующем примере.</span><span class="sxs-lookup"><span data-stu-id="d7187-930">They can also call the <xref:System.Numerics.BigInteger.op_GreaterThan%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Numeric.BigInteger.Class#21](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/vb/BigInteger_Examples.vb#21)]  
  
 <span data-ttu-id="d7187-931">Эквивалентным методом для этого оператора является <xref:System.Numerics.BigInteger.CompareTo(System.Numerics.BigInteger)?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="d7187-931">The equivalent method for this operator is <xref:System.Numerics.BigInteger.CompareTo(System.Numerics.BigInteger)?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_GreaterThanOrEqual" />
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThan">
      <MemberSignature Language="C#" Value="public static bool operator &gt; (System.Numerics.BigInteger left, ulong right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThan(valuetype System.Numerics.BigInteger left, unsigned int64 right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_GreaterThan(System.Numerics.BigInteger,System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt; (left As BigInteger, right As ULong) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;(System::Numerics::BigInteger left, System::UInt64 right);" />
      <MemberSignature Language="F#" Value="static member ( &gt; ) : System.Numerics.BigInteger * uint64 -&gt; bool" Usage="left &gt; right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="d7187-932">Первое сравниваемое значение.</span><span class="sxs-lookup"><span data-stu-id="d7187-932">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="d7187-933">Второе сравниваемое значение.</span><span class="sxs-lookup"><span data-stu-id="d7187-933">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="d7187-934">Возвращает значение, определяющее действительно ли значение <see cref="T:System.Numerics.BigInteger" /> больше 64-битового целого числа без знака.</span><span class="sxs-lookup"><span data-stu-id="d7187-934">Returns a value that indicates whether a <see cref="T:System.Numerics.BigInteger" /> value is greater than a 64-bit unsigned integer.</span></span></summary>
        <returns><span data-ttu-id="d7187-935"><see langword="true" />, если <paramref name="left" /> больше <paramref name="right" />; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-935"><see langword="true" /> if <paramref name="left" /> is greater than <paramref name="right" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7187-936">Метод определяет операцию оператора "больше" для <xref:System.Numerics.BigInteger> значений. <xref:System.Numerics.BigInteger.op_GreaterThan%2A></span><span class="sxs-lookup"><span data-stu-id="d7187-936">The <xref:System.Numerics.BigInteger.op_GreaterThan%2A> method defines the operation of the greater than operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="d7187-937">Он включает следующий код:</span><span class="sxs-lookup"><span data-stu-id="d7187-937">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#13)]
 [!code-vb[System.Numerics.BigInteger.Operators#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#13)]  
  
 <span data-ttu-id="d7187-938">Языки, которые не поддерживают пользовательские операторы, могут вызывать <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="d7187-938">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="d7187-939">Некоторые языки также могут вызывать <xref:System.Numerics.BigInteger.op_GreaterThan%28System.Numerics.BigInteger%2CSystem.UInt64%29> метод напрямую, как показано в следующем примере.</span><span class="sxs-lookup"><span data-stu-id="d7187-939">Some languages can also call the <xref:System.Numerics.BigInteger.op_GreaterThan%28System.Numerics.BigInteger%2CSystem.UInt64%29> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Numerics.BigInteger.Operators#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThan">
      <MemberSignature Language="C#" Value="public static bool operator &gt; (ulong left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThan(unsigned int64 left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_GreaterThan(System.UInt64,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt; (left As ULong, right As BigInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;(System::UInt64 left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member ( &gt; ) : uint64 * System.Numerics.BigInteger -&gt; bool" Usage="left &gt; right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.UInt64" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="d7187-940">Первое сравниваемое значение.</span><span class="sxs-lookup"><span data-stu-id="d7187-940">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="d7187-941">Второе сравниваемое значение.</span><span class="sxs-lookup"><span data-stu-id="d7187-941">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="d7187-942">Возвращает значение, определяющее действительно ли значение <see cref="T:System.Numerics.BigInteger" /> больше 64-битового целого числа без знака.</span><span class="sxs-lookup"><span data-stu-id="d7187-942">Returns a value that indicates whether a <see cref="T:System.Numerics.BigInteger" /> value is greater than a 64-bit unsigned integer.</span></span></summary>
        <returns><span data-ttu-id="d7187-943"><see langword="true" />, если <paramref name="left" /> больше <paramref name="right" />; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-943"><see langword="true" /> if <paramref name="left" /> is greater than <paramref name="right" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7187-944">Метод определяет операцию оператора "больше" для <xref:System.Numerics.BigInteger> значений. <xref:System.Numerics.BigInteger.op_GreaterThan%2A></span><span class="sxs-lookup"><span data-stu-id="d7187-944">The <xref:System.Numerics.BigInteger.op_GreaterThan%2A> method defines the operation of the greater than operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="d7187-945">Он включает следующий код:</span><span class="sxs-lookup"><span data-stu-id="d7187-945">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#15)]
 [!code-vb[System.Numerics.BigInteger.Operators#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#15)]  
  
 <span data-ttu-id="d7187-946">Языки, которые не поддерживают пользовательские операторы, могут вызывать <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="d7187-946">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="d7187-947">Некоторые языки также могут вызывать <xref:System.Numerics.BigInteger.op_GreaterThan%28System.UInt64%2CSystem.Numerics.BigInteger%29> метод напрямую, как показано в следующем примере.</span><span class="sxs-lookup"><span data-stu-id="d7187-947">Some languages can also call the <xref:System.Numerics.BigInteger.op_GreaterThan%28System.UInt64%2CSystem.Numerics.BigInteger%29> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Numerics.BigInteger.Operators#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#16)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_GreaterThanOrEqual" />
      </Docs>
    </Member>
    <MemberGroup MemberName="op_GreaterThanOrEqual">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d7187-948">Возвращает значение, определяющее, действительно ли заданное значение больше или равно другому заданному значению.</span><span class="sxs-lookup"><span data-stu-id="d7187-948">Returns a value that indicates whether a specified value is greater than or equal to another specified value.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="op_GreaterThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &gt;= (long left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThanOrEqual(int64 left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Int64,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt;= (left As Long, right As BigInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;=(long left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member ( &gt;= ) : int64 * System.Numerics.BigInteger -&gt; bool" Usage="left &gt;= right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Int64" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="d7187-949">Первое сравниваемое значение.</span><span class="sxs-lookup"><span data-stu-id="d7187-949">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="d7187-950">Второе сравниваемое значение.</span><span class="sxs-lookup"><span data-stu-id="d7187-950">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="d7187-951">Возвращает значение, определяющее, действительно ли 64-разрядное знаковое целое число больше или равно значению <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-951">Returns a value that indicates whether a 64-bit signed integer is greater than or equal to a <see cref="T:System.Numerics.BigInteger" /> value.</span></span></summary>
        <returns><span data-ttu-id="d7187-952"><see langword="true" />, если <paramref name="left" /> больше <paramref name="right" />; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-952"><see langword="true" /> if <paramref name="left" /> is greater than <paramref name="right" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7187-953">Метод определяет операцию оператора "больше или равно" для <xref:System.Numerics.BigInteger> значений. <xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%2A></span><span class="sxs-lookup"><span data-stu-id="d7187-953">The <xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%2A> method defines the operation of the greater than or equal to operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="d7187-954">Он включает следующий код:</span><span class="sxs-lookup"><span data-stu-id="d7187-954">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#17)]
 [!code-vb[System.Numerics.BigInteger.Operators#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#17)]  
  
 <span data-ttu-id="d7187-955">Языки, которые не поддерживают пользовательские операторы, могут вызывать <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="d7187-955">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="d7187-956">Некоторые языки также могут вызывать <xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%28System.Int64%2CSystem.Numerics.BigInteger%29> метод напрямую, как показано в следующем примере.</span><span class="sxs-lookup"><span data-stu-id="d7187-956">Some languages can also call the <xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%28System.Int64%2CSystem.Numerics.BigInteger%29> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Numerics.BigInteger.Operators#18](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#18)]  
  
 <span data-ttu-id="d7187-957">Если `left` <xref:System.Int16>параметр имеетзначение<xref:System.SByte> <xref:System.Int64> , ,,,или<xref:System.Int32> ,<xref:System.UInt32> он неявно преобразуется в значение при выполнении операции. <xref:System.Byte> <xref:System.UInt16></span><span class="sxs-lookup"><span data-stu-id="d7187-957">If `left` is a <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.SByte>, <xref:System.UInt16>, or <xref:System.UInt32> value, it is implicitly converted to an <xref:System.Int64> value when the operation is performed.</span></span>  
  
 <span data-ttu-id="d7187-958">Эквивалентным методом для этого оператора является <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="d7187-958">The equivalent method for this operator is <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_GreaterThan" />
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &gt;= (System.Numerics.BigInteger left, long right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThanOrEqual(valuetype System.Numerics.BigInteger left, int64 right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Numerics.BigInteger,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt;= (left As BigInteger, right As Long) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;=(System::Numerics::BigInteger left, long right);" />
      <MemberSignature Language="F#" Value="static member ( &gt;= ) : System.Numerics.BigInteger * int64 -&gt; bool" Usage="left &gt;= right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="d7187-959">Первое сравниваемое значение.</span><span class="sxs-lookup"><span data-stu-id="d7187-959">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="d7187-960">Второе сравниваемое значение.</span><span class="sxs-lookup"><span data-stu-id="d7187-960">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="d7187-961">Возвращает значение, определяющее, действительно ли значение <see cref="T:System.Numerics.BigInteger" /> больше или равно значению 64-битового знакового целого числа.</span><span class="sxs-lookup"><span data-stu-id="d7187-961">Returns a value that indicates whether a <see cref="T:System.Numerics.BigInteger" /> value is greater than or equal to a 64-bit signed integer value.</span></span></summary>
        <returns><span data-ttu-id="d7187-962"><see langword="true" />, если <paramref name="left" /> больше <paramref name="right" />; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-962"><see langword="true" /> if <paramref name="left" /> is greater than <paramref name="right" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7187-963">Метод определяет операцию оператора "больше или равно" для <xref:System.Numerics.BigInteger> значений. <xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%2A></span><span class="sxs-lookup"><span data-stu-id="d7187-963">The <xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%2A> method defines the operation of the greater than or equal to operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="d7187-964">Он включает следующий код:</span><span class="sxs-lookup"><span data-stu-id="d7187-964">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#19](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#19)]
 [!code-vb[System.Numerics.BigInteger.Operators#19](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#19)]  
  
 <span data-ttu-id="d7187-965">Языки, которые не поддерживают пользовательские операторы, могут вызывать <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="d7187-965">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="d7187-966">Некоторые языки также могут вызывать <xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%28System.Numerics.BigInteger%2CSystem.Int64%29> метод напрямую, как показано в следующем примере.</span><span class="sxs-lookup"><span data-stu-id="d7187-966">Some languages can also call the <xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%28System.Numerics.BigInteger%2CSystem.Int64%29> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Numerics.BigInteger.Operators#20](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#20)]  
  
 <span data-ttu-id="d7187-967">Если `right` <xref:System.Int16>параметр имеетзначение<xref:System.SByte> <xref:System.Int64> , ,,,или<xref:System.Int32> ,<xref:System.UInt32> он неявно преобразуется в значение при выполнении операции. <xref:System.Byte> <xref:System.UInt16></span><span class="sxs-lookup"><span data-stu-id="d7187-967">If `right` is a <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.SByte>, <xref:System.UInt16>, or <xref:System.UInt32> value, it is implicitly converted to an <xref:System.Int64> value when the operation is performed.</span></span>  
  
 <span data-ttu-id="d7187-968">Эквивалентным методом для этого оператора является <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="d7187-968">The equivalent method for this operator is <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_GreaterThan" />
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &gt;= (System.Numerics.BigInteger left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThanOrEqual(valuetype System.Numerics.BigInteger left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt;= (left As BigInteger, right As BigInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;=(System::Numerics::BigInteger left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member ( &gt;= ) : System.Numerics.BigInteger * System.Numerics.BigInteger -&gt; bool" Usage="left &gt;= right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="d7187-969">Первое сравниваемое значение.</span><span class="sxs-lookup"><span data-stu-id="d7187-969">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="d7187-970">Второе сравниваемое значение.</span><span class="sxs-lookup"><span data-stu-id="d7187-970">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="d7187-971">Возвращает значение, определяющее, действительно ли значение типа <see cref="T:System.Numerics.BigInteger" /> больше или равно другому значению типа <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-971">Returns a value that indicates whether a <see cref="T:System.Numerics.BigInteger" /> value is greater than or equal to another <see cref="T:System.Numerics.BigInteger" /> value.</span></span></summary>
        <returns><span data-ttu-id="d7187-972"><see langword="true" />, если <paramref name="left" /> больше <paramref name="right" />; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-972"><see langword="true" /> if <paramref name="left" /> is greater than <paramref name="right" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7187-973">Метод определяет операцию оператора "больше или равно" для <xref:System.Numerics.BigInteger> значений. <xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%2A></span><span class="sxs-lookup"><span data-stu-id="d7187-973">The <xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%2A> method defines the operation of the greater than or equal to operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="d7187-974">Он включает следующий код:</span><span class="sxs-lookup"><span data-stu-id="d7187-974">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numeric.BigInteger.Class#22](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/cs/BigInteger_Examples.cs#22)]
 [!code-vb[System.Numeric.BigInteger.Class#22](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/vb/BigInteger_Examples.vb#22)]  
  
 <span data-ttu-id="d7187-975">Языки, которые не поддерживают пользовательские операторы, могут вызывать <xref:System.Numerics.BigInteger.Compare%2A?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="d7187-975">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.Compare%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="d7187-976">Некоторые языки также могут вызывать <xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29> метод напрямую, как показано в следующем примере.</span><span class="sxs-lookup"><span data-stu-id="d7187-976">Some languages can also call the <xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Numeric.BigInteger.Class#23](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/vb/BigInteger_Examples.vb#23)]  
  
 <span data-ttu-id="d7187-977">Эквивалентным методом для этого оператора является <xref:System.Numerics.BigInteger.CompareTo(System.Numerics.BigInteger)?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="d7187-977">The equivalent method for this operator is <xref:System.Numerics.BigInteger.CompareTo(System.Numerics.BigInteger)?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_GreaterThan" />
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &gt;= (System.Numerics.BigInteger left, ulong right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThanOrEqual(valuetype System.Numerics.BigInteger left, unsigned int64 right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Numerics.BigInteger,System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt;= (left As BigInteger, right As ULong) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;=(System::Numerics::BigInteger left, System::UInt64 right);" />
      <MemberSignature Language="F#" Value="static member ( &gt;= ) : System.Numerics.BigInteger * uint64 -&gt; bool" Usage="left &gt;= right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="d7187-978">Первое сравниваемое значение.</span><span class="sxs-lookup"><span data-stu-id="d7187-978">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="d7187-979">Второе сравниваемое значение.</span><span class="sxs-lookup"><span data-stu-id="d7187-979">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="d7187-980">Возвращает значение, определяющее, действительно ли значение <see cref="T:System.Numerics.BigInteger" /> больше или равно значению 64-битового целого числа без знака.</span><span class="sxs-lookup"><span data-stu-id="d7187-980">Returns a value that indicates whether a <see cref="T:System.Numerics.BigInteger" /> value is greater than or equal to a 64-bit unsigned integer value.</span></span></summary>
        <returns><span data-ttu-id="d7187-981"><see langword="true" />, если <paramref name="left" /> больше <paramref name="right" />; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-981"><see langword="true" /> if <paramref name="left" /> is greater than <paramref name="right" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7187-982">Метод определяет операцию оператора "больше или равно" для <xref:System.Numerics.BigInteger> значений. <xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%2A></span><span class="sxs-lookup"><span data-stu-id="d7187-982">The <xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%2A> method defines the operation of the greater than or equal to operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="d7187-983">Он включает следующий код:</span><span class="sxs-lookup"><span data-stu-id="d7187-983">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#21](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#21)]
 [!code-vb[System.Numerics.BigInteger.Operators#21](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#21)]  
  
 <span data-ttu-id="d7187-984">Языки, которые не поддерживают пользовательские операторы, могут вызывать <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="d7187-984">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="d7187-985">Некоторые языки также могут вызывать <xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%28System.Numerics.BigInteger%2CSystem.UInt64%29> метод напрямую, как показано в следующем примере.</span><span class="sxs-lookup"><span data-stu-id="d7187-985">Some languages can also call the <xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%28System.Numerics.BigInteger%2CSystem.UInt64%29> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Numerics.BigInteger.Operators#22](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#22)]  
  
 <span data-ttu-id="d7187-986">Эквивалентным методом для этого оператора является <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="d7187-986">The equivalent method for this operator is <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_GreaterThan" />
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &gt;= (ulong left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThanOrEqual(unsigned int64 left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.UInt64,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt;= (left As ULong, right As BigInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;=(System::UInt64 left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member ( &gt;= ) : uint64 * System.Numerics.BigInteger -&gt; bool" Usage="left &gt;= right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.UInt64" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="d7187-987">Первое сравниваемое значение.</span><span class="sxs-lookup"><span data-stu-id="d7187-987">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="d7187-988">Второе сравниваемое значение.</span><span class="sxs-lookup"><span data-stu-id="d7187-988">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="d7187-989">Возвращает значение, определяющее, действительно ли 64-разрядное целое число без знака больше или равно значению <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-989">Returns a value that indicates whether a 64-bit unsigned integer is greater than or equal to a <see cref="T:System.Numerics.BigInteger" /> value.</span></span></summary>
        <returns><span data-ttu-id="d7187-990"><see langword="true" />, если <paramref name="left" /> больше <paramref name="right" />; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-990"><see langword="true" /> if <paramref name="left" /> is greater than <paramref name="right" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7187-991">Метод определяет операцию оператора "больше или равно" для <xref:System.Numerics.BigInteger> значений. <xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%2A></span><span class="sxs-lookup"><span data-stu-id="d7187-991">The <xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%2A> method defines the operation of the greater than or equal to operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="d7187-992">Он включает следующий код:</span><span class="sxs-lookup"><span data-stu-id="d7187-992">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#23](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#23)]
 [!code-vb[System.Numerics.BigInteger.Operators#23](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#23)]  
  
 <span data-ttu-id="d7187-993">Языки, которые не поддерживают пользовательские операторы, могут вызывать <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="d7187-993">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="d7187-994">Некоторые языки также могут вызывать <xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%28System.UInt64%2CSystem.Numerics.BigInteger%29> метод напрямую, как показано в следующем примере.</span><span class="sxs-lookup"><span data-stu-id="d7187-994">Some languages can also call the <xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%28System.UInt64%2CSystem.Numerics.BigInteger%29> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Numerics.BigInteger.Operators#24](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#24)]  
  
 <span data-ttu-id="d7187-995">Эквивалентным методом для этого оператора является <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="d7187-995">The equivalent method for this operator is <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_GreaterThan" />
      </Docs>
    </Member>
    <MemberGroup MemberName="op_Implicit">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d7187-996">Определяет неявное преобразование объекта типа <see cref="T:System.Numerics.BigInteger" /> в другой тип.</span><span class="sxs-lookup"><span data-stu-id="d7187-996">Defines an implicit conversion between a <see cref="T:System.Numerics.BigInteger" /> object and another type.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator System.Numerics.BigInteger (byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_Implicit(unsigned int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (value As Byte) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Numerics::BigInteger(System::Byte value);" />
      <MemberSignature Language="F#" Value="static member op_Implicit : byte -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.op_Implicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d7187-997">Значение, которое необходимо преобразовать в тип <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-997">The value to convert to a <see cref="T:System.Numerics.BigInteger" />.</span></span></param>
        <summary><span data-ttu-id="d7187-998">Определяет неявное преобразование значения типа byte без знака в значение <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-998">Defines an implicit conversion of an unsigned byte to a <see cref="T:System.Numerics.BigInteger" /> value.</span></span></summary>
        <returns><span data-ttu-id="d7187-999">Объект, содержащий значение параметра <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-999">An object that contains the value of the <paramref name="value" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7187-1000">Дробная часть `value` параметра усекается до преобразования.</span><span class="sxs-lookup"><span data-stu-id="d7187-1000">Any fractional part of the `value` parameter is truncated before conversion.</span></span>

 <span data-ttu-id="d7187-1001">Для языков, которые не поддерживают неявные операторы, альтернативным <xref:System.Numerics.BigInteger.%23ctor%28System.Int32%29?displayProperty=nameWithType>методом является.</span><span class="sxs-lookup"><span data-stu-id="d7187-1001">For languages that do not support implicit operators, the alternative method is <xref:System.Numerics.BigInteger.%23ctor%28System.Int32%29?displayProperty=nameWithType>.</span></span>   

 <span data-ttu-id="d7187-1002">Перегрузки <xref:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger> метода определяют типы, в которых компилятор может автоматически <xref:System.Numerics.BigInteger> преобразовать значение без явного оператора приведения (в C#) или вызов функции преобразования (в Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="d7187-1002">The overloads of the <xref:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger> method define the types to which or from which a compiler can automatically convert a <xref:System.Numerics.BigInteger> value without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</span></span> <span data-ttu-id="d7187-1003">Это расширяющие преобразования, не затрагивающие потери данных и не вызывающие исключение <xref:System.OverflowException>.</span><span class="sxs-lookup"><span data-stu-id="d7187-1003">They are widening conversions that do not involve data loss and do not throw an <xref:System.OverflowException>.</span></span> <span data-ttu-id="d7187-1004">Эта перегрузка позволяет компилятору выполнять преобразование из <xref:System.Byte> значения <xref:System.Numerics.BigInteger> в значение, как показано в следующем примере.</span><span class="sxs-lookup"><span data-stu-id="d7187-1004">This overload lets the compiler handle conversions from a <xref:System.Byte> value to a <xref:System.Numerics.BigInteger> value, as the following example shows.</span></span>   
   
 [!code-csharp[System.Numeric.BigInteger.Implicit#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Implicit/cs/Implicit1.cs#1)]   
 [!code-vb[System.Numeric.BigInteger.Implicit#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Implicit/vb/Implicit1.vb#1)]   

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator System.Numerics.BigInteger (short value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_Implicit(int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Implicit(System.Int16)~System.Numerics.BigInteger" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (value As Short) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Numerics::BigInteger(short value);" />
      <MemberSignature Language="F#" Value="static member op_Implicit : int16 -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.op_Implicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d7187-1005">Значение, которое необходимо преобразовать в тип <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-1005">The value to convert to a <see cref="T:System.Numerics.BigInteger" />.</span></span></param>
        <summary><span data-ttu-id="d7187-1006">Определяет неявное преобразование 16-битового знакового целого числа в значение <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-1006">Defines an implicit conversion of a signed 16-bit integer to a <see cref="T:System.Numerics.BigInteger" /> value.</span></span></summary>
        <returns><span data-ttu-id="d7187-1007">Объект, содержащий значение параметра <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-1007">An object that contains the value of the <paramref name="value" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7187-1008">Для языков, которые не поддерживают неявные операторы, альтернативным <xref:System.Numerics.BigInteger.%23ctor%28System.Int32%29?displayProperty=nameWithType>методом является.</span><span class="sxs-lookup"><span data-stu-id="d7187-1008">For languages that do not support implicit operators, the alternative method is <xref:System.Numerics.BigInteger.%23ctor%28System.Int32%29?displayProperty=nameWithType>.</span></span>   

 <span data-ttu-id="d7187-1009">Перегрузки <xref:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger> метода определяют типы, в которых компилятор может автоматически <xref:System.Numerics.BigInteger> преобразовать значение без явного оператора приведения (в C#) или вызов функции преобразования (в Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="d7187-1009">The overloads of the <xref:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger> method define the types to which or from which a compiler can automatically convert a <xref:System.Numerics.BigInteger> value without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</span></span> <span data-ttu-id="d7187-1010">Это расширяющие преобразования, не затрагивающие потери данных и не вызывающие исключение <xref:System.OverflowException>.</span><span class="sxs-lookup"><span data-stu-id="d7187-1010">They are widening conversions that do not involve data loss and do not throw an <xref:System.OverflowException>.</span></span> <span data-ttu-id="d7187-1011">Эта перегрузка позволяет компилятору выполнять преобразование из <xref:System.Int16> значения <xref:System.Numerics.BigInteger> в значение, как показано в следующем примере.</span><span class="sxs-lookup"><span data-stu-id="d7187-1011">This overload lets the compiler handle conversions from a <xref:System.Int16> value to a <xref:System.Numerics.BigInteger> value, as the following example shows.</span></span>   
   
 [!code-csharp[System.Numeric.BigInteger.Implicit#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Implicit/cs/Implicit1.cs#2)]   
 [!code-vb[System.Numeric.BigInteger.Implicit#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Implicit/vb/Implicit1.vb#2)]   

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator System.Numerics.BigInteger (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_Implicit(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Implicit(System.Int32)~System.Numerics.BigInteger" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (value As Integer) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Numerics::BigInteger(int value);" />
      <MemberSignature Language="F#" Value="static member op_Implicit : int -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.op_Implicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d7187-1012">Значение, которое необходимо преобразовать в тип <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-1012">The value to convert to a <see cref="T:System.Numerics.BigInteger" />.</span></span></param>
        <summary><span data-ttu-id="d7187-1013">Определяет неявное преобразование 32-разрядного целого числа со знаком в значение <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-1013">Defines an implicit conversion of a signed 32-bit integer to a <see cref="T:System.Numerics.BigInteger" /> value.</span></span></summary>
        <returns><span data-ttu-id="d7187-1014">Объект, содержащий значение параметра <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-1014">An object that contains the value of the <paramref name="value" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7187-1015">Для языков, которые не поддерживают неявные операторы, альтернативным <xref:System.Numerics.BigInteger.%23ctor%28System.Int32%29?displayProperty=nameWithType>методом является.</span><span class="sxs-lookup"><span data-stu-id="d7187-1015">For languages that do not support implicit operators, the alternative method is <xref:System.Numerics.BigInteger.%23ctor%28System.Int32%29?displayProperty=nameWithType>.</span></span>  

 <span data-ttu-id="d7187-1016">Перегрузки <xref:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger> метода определяют типы, в которых компилятор может автоматически <xref:System.Numerics.BigInteger> преобразовать значение без явного оператора приведения (в C#) или вызов функции преобразования (в Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="d7187-1016">The overloads of the <xref:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger> method define the types to which or from which a compiler can automatically convert a <xref:System.Numerics.BigInteger> value without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</span></span> <span data-ttu-id="d7187-1017">Это расширяющие преобразования, не затрагивающие потери данных и не вызывающие исключение <xref:System.OverflowException>.</span><span class="sxs-lookup"><span data-stu-id="d7187-1017">They are widening conversions that do not involve data loss and do not throw an <xref:System.OverflowException>.</span></span> <span data-ttu-id="d7187-1018">Эта перегрузка позволяет компилятору выполнять преобразование из <xref:System.Int32> значения <xref:System.Numerics.BigInteger> в значение, как показано в следующем примере.</span><span class="sxs-lookup"><span data-stu-id="d7187-1018">This overload lets the compiler handle conversions from a <xref:System.Int32> value to a <xref:System.Numerics.BigInteger> value, as the following example shows.</span></span>   
   
 [!code-csharp[System.Numeric.BigInteger.Implicit#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Implicit/cs/Implicit1.cs#3)]   
 [!code-vb[System.Numeric.BigInteger.Implicit#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Implicit/vb/Implicit1.vb#3)]   

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator System.Numerics.BigInteger (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_Implicit(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Implicit(System.Int64)~System.Numerics.BigInteger" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (value As Long) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Numerics::BigInteger(long value);" />
      <MemberSignature Language="F#" Value="static member op_Implicit : int64 -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.op_Implicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d7187-1019">Значение, которое необходимо преобразовать в тип <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-1019">The value to convert to a <see cref="T:System.Numerics.BigInteger" />.</span></span></param>
        <summary><span data-ttu-id="d7187-1020">Определяет неявное преобразование 64-разрядного целого числа со знаком в значение <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-1020">Defines an implicit conversion of a signed 64-bit integer to a <see cref="T:System.Numerics.BigInteger" /> value.</span></span></summary>
        <returns><span data-ttu-id="d7187-1021">Объект, содержащий значение параметра <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-1021">An object that contains the value of the <paramref name="value" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7187-1022">Для языков, которые не поддерживают неявные операторы, альтернативным <xref:System.Numerics.BigInteger.%23ctor%28System.Int64%29?displayProperty=nameWithType>методом является.</span><span class="sxs-lookup"><span data-stu-id="d7187-1022">For languages that do not support implicit operators, the alternative method is <xref:System.Numerics.BigInteger.%23ctor%28System.Int64%29?displayProperty=nameWithType>.</span></span>   
 
 <span data-ttu-id="d7187-1023">Перегрузки <xref:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger> метода определяют типы, в которых компилятор может автоматически <xref:System.Numerics.BigInteger> преобразовать значение без явного оператора приведения (в C#) или вызов функции преобразования (в Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="d7187-1023">The overloads of the <xref:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger> method define the types to which or from which a compiler can automatically convert a <xref:System.Numerics.BigInteger> value without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</span></span> <span data-ttu-id="d7187-1024">Это расширяющие преобразования, не затрагивающие потери данных и не вызывающие исключение <xref:System.OverflowException>.</span><span class="sxs-lookup"><span data-stu-id="d7187-1024">They are widening conversions that do not involve data loss and do not throw an <xref:System.OverflowException>.</span></span> <span data-ttu-id="d7187-1025">Эта перегрузка позволяет компилятору выполнять преобразование из <xref:System.Int64> значения <xref:System.Numerics.BigInteger> в значение, как показано в следующем примере.</span><span class="sxs-lookup"><span data-stu-id="d7187-1025">This overload lets the compiler handle conversions from a <xref:System.Int64> value to a <xref:System.Numerics.BigInteger> value, as the following example shows.</span></span>   
   
 [!code-csharp[System.Numeric.BigInteger.Implicit#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Implicit/cs/Implicit1.cs#4)]   
 [!code-vb[System.Numeric.BigInteger.Implicit#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Implicit/vb/Implicit1.vb#4)]   

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator System.Numerics.BigInteger (sbyte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_Implicit(int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Implicit(System.SByte)~System.Numerics.BigInteger" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (value As SByte) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Numerics::BigInteger(System::SByte value);" />
      <MemberSignature Language="F#" Value="static member op_Implicit : sbyte -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.op_Implicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d7187-1026">Значение, которое необходимо преобразовать в тип <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-1026">The value to convert to a <see cref="T:System.Numerics.BigInteger" />.</span></span></param>
        <summary><span data-ttu-id="d7187-1027">Определяет неявное преобразование 8-битового знакового целого числа в значение <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-1027">Defines an implicit conversion of an 8-bit signed integer to a <see cref="T:System.Numerics.BigInteger" /> value.</span></span>  
  
<span data-ttu-id="d7187-1028">Этот интерфейс API CLS-несовместим.</span><span class="sxs-lookup"><span data-stu-id="d7187-1028">This API is not CLS-compliant.</span></span> <span data-ttu-id="d7187-1029">Совместимая альтернатива — <see cref="M:System.Numerics.BigInteger.#ctor(System.Int32)" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-1029">The compliant alternative is <see cref="M:System.Numerics.BigInteger.#ctor(System.Int32)" />.</span></span></summary>
        <returns><span data-ttu-id="d7187-1030">Объект, содержащий значение параметра <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-1030">An object that contains the value of the <paramref name="value" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7187-1031">Для языков, которые не поддерживают неявные операторы, альтернативным <xref:System.Numerics.BigInteger.%23ctor%28System.Int32%29?displayProperty=nameWithType>методом является.</span><span class="sxs-lookup"><span data-stu-id="d7187-1031">For languages that do not support implicit operators, the alternative method is <xref:System.Numerics.BigInteger.%23ctor%28System.Int32%29?displayProperty=nameWithType>.</span></span>   

 <span data-ttu-id="d7187-1032">Перегрузки <xref:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger> метода определяют типы, в которых компилятор может автоматически <xref:System.Numerics.BigInteger> преобразовать значение без явного оператора приведения (в C#) или вызов функции преобразования (в Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="d7187-1032">The overloads of the <xref:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger> method define the types to which or from which a compiler can automatically convert a <xref:System.Numerics.BigInteger> value without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</span></span> <span data-ttu-id="d7187-1033">Это расширяющие преобразования, не затрагивающие потери данных и не вызывающие исключение <xref:System.OverflowException>.</span><span class="sxs-lookup"><span data-stu-id="d7187-1033">They are widening conversions that do not involve data loss and do not throw an <xref:System.OverflowException>.</span></span> <span data-ttu-id="d7187-1034">Эта перегрузка позволяет компилятору выполнять преобразование из <xref:System.SByte> значения <xref:System.Numerics.BigInteger> в значение, как показано в следующем примере.</span><span class="sxs-lookup"><span data-stu-id="d7187-1034">This overload lets the compiler handle conversions from a <xref:System.SByte> value to a <xref:System.Numerics.BigInteger> value, as the following example shows.</span></span>   
   
 [!code-csharp[System.Numeric.BigInteger.Implicit#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Implicit/cs/Implicit1.cs#5)]   
 [!code-vb[System.Numeric.BigInteger.Implicit#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Implicit/vb/Implicit1.vb#5)]   

 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Numerics.BigInteger.#ctor(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator System.Numerics.BigInteger (ushort value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_Implicit(unsigned int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Implicit(System.UInt16)~System.Numerics.BigInteger" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (value As UShort) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Numerics::BigInteger(System::UInt16 value);" />
      <MemberSignature Language="F#" Value="static member op_Implicit : uint16 -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.op_Implicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d7187-1035">Значение, которое необходимо преобразовать в тип <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-1035">The value to convert to a <see cref="T:System.Numerics.BigInteger" />.</span></span></param>
        <summary><span data-ttu-id="d7187-1036">Определяет неявное преобразование 16-битового целого числа без знака в значение <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-1036">Defines an implicit conversion of a 16-bit unsigned integer to a <see cref="T:System.Numerics.BigInteger" /> value.</span></span>  
  
<span data-ttu-id="d7187-1037">Этот интерфейс API CLS-несовместим.</span><span class="sxs-lookup"><span data-stu-id="d7187-1037">This API is not CLS-compliant.</span></span> <span data-ttu-id="d7187-1038">Совместимая альтернатива — <see cref="M:System.Numerics.BigInteger.op_Implicit(System.Int32)~System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-1038">The compliant alternative is <see cref="M:System.Numerics.BigInteger.op_Implicit(System.Int32)~System.Numerics.BigInteger" />.</span></span></summary>
        <returns><span data-ttu-id="d7187-1039">Объект, содержащий значение параметра <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-1039">An object that contains the value of the <paramref name="value" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7187-1040">Для языков, которые не поддерживают неявные операторы, альтернативным <xref:System.Numerics.BigInteger.%23ctor%28System.UInt32%29?displayProperty=nameWithType>методом является.</span><span class="sxs-lookup"><span data-stu-id="d7187-1040">For languages that do not support implicit operators, the alternative method is <xref:System.Numerics.BigInteger.%23ctor%28System.UInt32%29?displayProperty=nameWithType>.</span></span>   

 <span data-ttu-id="d7187-1041">Перегрузки <xref:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger> метода определяют типы, в которых компилятор может автоматически <xref:System.Numerics.BigInteger> преобразовать значение без явного оператора приведения (в C#) или вызов функции преобразования (в Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="d7187-1041">The overloads of the <xref:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger> method define the types to which or from which a compiler can automatically convert a <xref:System.Numerics.BigInteger> value without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</span></span> <span data-ttu-id="d7187-1042">Это расширяющие преобразования, не затрагивающие потери данных и не вызывающие исключение <xref:System.OverflowException>.</span><span class="sxs-lookup"><span data-stu-id="d7187-1042">They are widening conversions that do not involve data loss and do not throw an <xref:System.OverflowException>.</span></span> <span data-ttu-id="d7187-1043">Эта перегрузка позволяет компилятору выполнять преобразование из <xref:System.UInt16> значения <xref:System.Numerics.BigInteger> в значение, как показано в следующем примере.</span><span class="sxs-lookup"><span data-stu-id="d7187-1043">This overload lets the compiler handle conversions from a <xref:System.UInt16> value to a <xref:System.Numerics.BigInteger> value, as the following example shows.</span></span>   
   
 [!code-csharp[System.Numeric.BigInteger.Implicit#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Implicit/cs/Implicit1.cs#6)]   
 [!code-vb[System.Numeric.BigInteger.Implicit#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Implicit/vb/Implicit1.vb#6)]   

 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Numerics.BigInteger.op_Implicit(System.Int32)~System.Numerics.BigInteger" />
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator System.Numerics.BigInteger (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_Implicit(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Implicit(System.UInt32)~System.Numerics.BigInteger" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (value As UInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Numerics::BigInteger(System::UInt32 value);" />
      <MemberSignature Language="F#" Value="static member op_Implicit : uint32 -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.op_Implicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d7187-1044">Значение, которое необходимо преобразовать в тип <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-1044">The value to convert to a <see cref="T:System.Numerics.BigInteger" />.</span></span></param>
        <summary><span data-ttu-id="d7187-1045">Определяет неявное преобразование 32-разрядного целого числа без знака в значение <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-1045">Defines an implicit conversion of a 32-bit unsigned integer to a <see cref="T:System.Numerics.BigInteger" /> value.</span></span>  
  
<span data-ttu-id="d7187-1046">Этот интерфейс API CLS-несовместим.</span><span class="sxs-lookup"><span data-stu-id="d7187-1046">This API is not CLS-compliant.</span></span> <span data-ttu-id="d7187-1047">Совместимая альтернатива — <see cref="M:System.Numerics.BigInteger.op_Implicit(System.Int64)~System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-1047">The compliant alternative is <see cref="M:System.Numerics.BigInteger.op_Implicit(System.Int64)~System.Numerics.BigInteger" />.</span></span></summary>
        <returns><span data-ttu-id="d7187-1048">Объект, содержащий значение параметра <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-1048">An object that contains the value of the <paramref name="value" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7187-1049">Для языков, которые не поддерживают неявные операторы, альтернативным <xref:System.Numerics.BigInteger.%23ctor%28System.UInt32%29?displayProperty=nameWithType>методом является.</span><span class="sxs-lookup"><span data-stu-id="d7187-1049">For languages that do not support implicit operators, the alternative method is <xref:System.Numerics.BigInteger.%23ctor%28System.UInt32%29?displayProperty=nameWithType>.</span></span>   

 <span data-ttu-id="d7187-1050">Перегрузки <xref:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger> метода определяют типы, в которых компилятор может автоматически <xref:System.Numerics.BigInteger> преобразовать значение без явного оператора приведения (в C#) или вызов функции преобразования (в Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="d7187-1050">The overloads of the <xref:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger> method define the types to which or from which a compiler can automatically convert a <xref:System.Numerics.BigInteger> value without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</span></span> <span data-ttu-id="d7187-1051">Это расширяющие преобразования, не затрагивающие потери данных и не вызывающие исключение <xref:System.OverflowException>.</span><span class="sxs-lookup"><span data-stu-id="d7187-1051">They are widening conversions that do not involve data loss and do not throw an <xref:System.OverflowException>.</span></span> <span data-ttu-id="d7187-1052">Эта перегрузка позволяет компилятору выполнять преобразование из <xref:System.UInt32> значения <xref:System.Numerics.BigInteger> в значение, как показано в следующем примере.</span><span class="sxs-lookup"><span data-stu-id="d7187-1052">This overload lets the compiler handle conversions from a <xref:System.UInt32> value to a <xref:System.Numerics.BigInteger> value, as the following example shows.</span></span>   
   
 [!code-csharp[System.Numeric.BigInteger.Implicit#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Implicit/cs/Implicit1.cs#7)]   
 [!code-vb[System.Numeric.BigInteger.Implicit#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Implicit/vb/Implicit1.vb#7)]   

 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Numerics.BigInteger.op_Implicit(System.Int64)~System.Numerics.BigInteger" />
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator System.Numerics.BigInteger (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_Implicit(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Implicit(System.UInt64)~System.Numerics.BigInteger" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (value As ULong) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Numerics::BigInteger(System::UInt64 value);" />
      <MemberSignature Language="F#" Value="static member op_Implicit : uint64 -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.op_Implicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d7187-1053">Значение, которое необходимо преобразовать в тип <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-1053">The value to convert to a <see cref="T:System.Numerics.BigInteger" />.</span></span></param>
        <summary><span data-ttu-id="d7187-1054">Определяет неявное преобразование 64-разрядного целого числа без знака в значение <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-1054">Defines an implicit conversion of a 64-bit unsigned integer to a <see cref="T:System.Numerics.BigInteger" /> value.</span></span>  
  
<span data-ttu-id="d7187-1055">Этот интерфейс API CLS-несовместим.</span><span class="sxs-lookup"><span data-stu-id="d7187-1055">This API is not CLS-compliant.</span></span> <span data-ttu-id="d7187-1056">Совместимая альтернатива — <see cref="T:System.Double" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-1056">The compliant alternative is <see cref="T:System.Double" />.</span></span></summary>
        <returns><span data-ttu-id="d7187-1057">Объект, содержащий значение параметра <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-1057">An object that contains the value of the <paramref name="value" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7187-1058">Для языков, которые не поддерживают неявные операторы, альтернативным <xref:System.Numerics.BigInteger.%23ctor%28System.UInt64%29?displayProperty=nameWithType>методом является.</span><span class="sxs-lookup"><span data-stu-id="d7187-1058">For languages that do not support implicit operators, the alternative method is <xref:System.Numerics.BigInteger.%23ctor%28System.UInt64%29?displayProperty=nameWithType>.</span></span>   

 <span data-ttu-id="d7187-1059">Перегрузки <xref:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger> метода определяют типы, в которых компилятор может автоматически <xref:System.Numerics.BigInteger> преобразовать значение без явного оператора приведения (в C#) или вызов функции преобразования (в Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="d7187-1059">The overloads of the <xref:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger> method define the types to which or from which a compiler can automatically convert a <xref:System.Numerics.BigInteger> value without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</span></span> <span data-ttu-id="d7187-1060">Это расширяющие преобразования, не затрагивающие потери данных и не вызывающие исключение <xref:System.OverflowException>.</span><span class="sxs-lookup"><span data-stu-id="d7187-1060">They are widening conversions that do not involve data loss and do not throw an <xref:System.OverflowException>.</span></span> <span data-ttu-id="d7187-1061">Эта перегрузка позволяет компилятору выполнять преобразование из <xref:System.UInt64> значения <xref:System.Numerics.BigInteger> в значение, как показано в следующем примере.</span><span class="sxs-lookup"><span data-stu-id="d7187-1061">This overload lets the compiler handle conversions from a <xref:System.UInt64> value to a <xref:System.Numerics.BigInteger> value, as the following example shows.</span></span>   
   
 [!code-csharp[System.Numeric.BigInteger.Implicit#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Implicit/cs/Implicit1.cs#8)]   
 [!code-vb[System.Numeric.BigInteger.Implicit#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Implicit/vb/Implicit1.vb#8)]   

 ]]></format>
        </remarks>
        <altCompliant cref="T:System.Double" />
      </Docs>
    </Member>
    <Member MemberName="op_Increment">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger operator ++ (System.Numerics.BigInteger value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_Increment(valuetype System.Numerics.BigInteger value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Increment(System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared op_Increment (value As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger operator ++(System::Numerics::BigInteger value);" />
      <MemberSignature Language="F#" Value="static member op_Increment : System.Numerics.BigInteger -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.op_Increment value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d7187-1062">Увеличиваемое значение.</span><span class="sxs-lookup"><span data-stu-id="d7187-1062">The value to increment.</span></span></param>
        <summary><span data-ttu-id="d7187-1063">Увеличивает значение <see cref="T:System.Numerics.BigInteger" /> на 1.</span><span class="sxs-lookup"><span data-stu-id="d7187-1063">Increments a <see cref="T:System.Numerics.BigInteger" /> value by 1.</span></span></summary>
        <returns><span data-ttu-id="d7187-1064">Значение параметра <paramref name="value" />, увеличенное на 1.</span><span class="sxs-lookup"><span data-stu-id="d7187-1064">The value of the <paramref name="value" /> parameter incremented by 1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7187-1065">Метод определяет операцию приращения для <xref:System.Numerics.BigInteger> значений. <xref:System.Numerics.BigInteger.op_Increment%2A></span><span class="sxs-lookup"><span data-stu-id="d7187-1065">The <xref:System.Numerics.BigInteger.op_Increment%2A> method defines the increment operation for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="d7187-1066">Он включает следующий код:</span><span class="sxs-lookup"><span data-stu-id="d7187-1066">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numeric.BigInteger.Class#24](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/cs/BigInteger_Examples.cs#24)]  
  
 <span data-ttu-id="d7187-1067">Некоторые языки (например Visual Basic), в которых отсутствует оператор инкремента или не поддерживают перегрузку операторов, могут вызывать <xref:System.Numerics.BigInteger.op_Increment%2A> метод напрямую, как показано в следующем примере.</span><span class="sxs-lookup"><span data-stu-id="d7187-1067">Some languages (such as Visual Basic) that lack an increment operator or do not support operator overloading can call the <xref:System.Numerics.BigInteger.op_Increment%2A> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Numeric.BigInteger.Class#25](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/vb/BigInteger_Examples.vb#25)]  
  
 <span data-ttu-id="d7187-1068">Поскольку <xref:System.Numerics.BigInteger> объекты являются неизменяемыми <xref:System.Numerics.BigInteger.op_Increment%2A> , оператор создает новый <xref:System.Numerics.BigInteger> объект, значение которого больше, <xref:System.Numerics.BigInteger> чем объект, представленный `value`.</span><span class="sxs-lookup"><span data-stu-id="d7187-1068">Because <xref:System.Numerics.BigInteger> objects are immutable, the <xref:System.Numerics.BigInteger.op_Increment%2A> operator creates a new <xref:System.Numerics.BigInteger> object whose value is one more than the <xref:System.Numerics.BigInteger> object represented by `value`.</span></span> <span data-ttu-id="d7187-1069">Следовательно, повторные вызовы <xref:System.Numerics.BigInteger.op_Increment%2A> могут быть дорогостоящими.</span><span class="sxs-lookup"><span data-stu-id="d7187-1069">Therefore, repeated calls to <xref:System.Numerics.BigInteger.op_Increment%2A> may be expensive.</span></span>  
  
 <span data-ttu-id="d7187-1070">Эквивалентным методом для этого оператора является <xref:System.Numerics.BigInteger.Add%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="d7187-1070">The equivalent method for this operator is <xref:System.Numerics.BigInteger.Add%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="M:System.Numerics.BigInteger.op_Decrement(System.Numerics.BigInteger)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="op_Inequality">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d7187-1071">Возвращает значение, определяющее, действительно ли два числовых значения не равны.</span><span class="sxs-lookup"><span data-stu-id="d7187-1071">Returns a value that indicates whether two numeric values are not equal.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (long left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(int64 left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Inequality(System.Int64,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As Long, right As BigInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(long left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : int64 * System.Numerics.BigInteger -&gt; bool" Usage="System.Numerics.BigInteger.op_Inequality (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Int64" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="d7187-1072">Первое сравниваемое значение.</span><span class="sxs-lookup"><span data-stu-id="d7187-1072">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="d7187-1073">Второе сравниваемое значение.</span><span class="sxs-lookup"><span data-stu-id="d7187-1073">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="d7187-1074">Возвращает значение, определяющее, действительно ли 64-разрядное знаковое целое число и значение <see cref="T:System.Numerics.BigInteger" /> не равны.</span><span class="sxs-lookup"><span data-stu-id="d7187-1074">Returns a value that indicates whether a 64-bit signed integer and a <see cref="T:System.Numerics.BigInteger" /> value are not equal.</span></span></summary>
        <returns><span data-ttu-id="d7187-1075">Значение <see langword="true" />, если <paramref name="left" /> и <paramref name="right" /> не равны друг другу; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-1075"><see langword="true" /> if <paramref name="left" /> and <paramref name="right" /> are not equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7187-1076">Метод определяет операцию для <xref:System.Numerics.BigInteger> значений в операторе неравенства. <xref:System.Numerics.BigInteger.op_Inequality%2A></span><span class="sxs-lookup"><span data-stu-id="d7187-1076">The <xref:System.Numerics.BigInteger.op_Inequality%2A> method defines the operation of the inequality operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="d7187-1077">Он включает следующий код:</span><span class="sxs-lookup"><span data-stu-id="d7187-1077">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#25](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#25)]
 [!code-vb[System.Numerics.BigInteger.Operators#25](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#25)]  
  
 <span data-ttu-id="d7187-1078">Языки, не поддерживающие пользовательские операторы, могут проверить на неравенство с помощью одного из следующих методов:</span><span class="sxs-lookup"><span data-stu-id="d7187-1078">Languages that do not support custom operators can test for inequality by using one of the following techniques:</span></span>  
  
-   <span data-ttu-id="d7187-1079">Вызов метода <xref:System.Numerics.BigInteger> экземпляра, указывающего связь между и длинным целым числом со знаком. <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="d7187-1079">Calling the <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType> instance method, which indicates the relationship between a <xref:System.Numerics.BigInteger> and a signed long integer value.</span></span>  
  
-   <span data-ttu-id="d7187-1080">Вызов метода <xref:System.Numerics.BigInteger.Equals%28System.Int64%29?displayProperty=nameWithType> экземпляра и реверсирование его значения.</span><span class="sxs-lookup"><span data-stu-id="d7187-1080">Calling the <xref:System.Numerics.BigInteger.Equals%28System.Int64%29?displayProperty=nameWithType> instance method and reversing its value.</span></span>  
  
 <span data-ttu-id="d7187-1081">Если `left` <xref:System.Int16>параметр имеетзначение<xref:System.SByte> <xref:System.Int64> , ,,,или<xref:System.Int32> ,<xref:System.UInt32> он неявно преобразуется в значение при выполнении операции. <xref:System.Byte> <xref:System.UInt16></span><span class="sxs-lookup"><span data-stu-id="d7187-1081">If `left` is a <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.SByte>, <xref:System.UInt16>, or <xref:System.UInt32> value, it is implicitly converted to an <xref:System.Int64> value when the operation is performed.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_Equality" />
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Numerics.BigInteger left, long right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Numerics.BigInteger left, int64 right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Inequality(System.Numerics.BigInteger,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As BigInteger, right As Long) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Numerics::BigInteger left, long right);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Numerics.BigInteger * int64 -&gt; bool" Usage="System.Numerics.BigInteger.op_Inequality (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="d7187-1082">Первое сравниваемое значение.</span><span class="sxs-lookup"><span data-stu-id="d7187-1082">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="d7187-1083">Второе сравниваемое значение.</span><span class="sxs-lookup"><span data-stu-id="d7187-1083">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="d7187-1084">Возвращает значение, определяющее, действительно ли значение <see cref="T:System.Numerics.BigInteger" /> и 64-разрядное знаковое целое число не равны.</span><span class="sxs-lookup"><span data-stu-id="d7187-1084">Returns a value that indicates whether a <see cref="T:System.Numerics.BigInteger" /> value and a 64-bit signed integer are not equal.</span></span></summary>
        <returns><span data-ttu-id="d7187-1085">Значение <see langword="true" />, если <paramref name="left" /> и <paramref name="right" /> не равны друг другу; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-1085"><see langword="true" /> if <paramref name="left" /> and <paramref name="right" /> are not equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7187-1086">Метод определяет операцию для <xref:System.Numerics.BigInteger> значений в операторе неравенства. <xref:System.Numerics.BigInteger.op_Inequality%2A></span><span class="sxs-lookup"><span data-stu-id="d7187-1086">The <xref:System.Numerics.BigInteger.op_Inequality%2A> method defines the operation of the inequality operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="d7187-1087">Он включает следующий код:</span><span class="sxs-lookup"><span data-stu-id="d7187-1087">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#26](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#26)]
 [!code-vb[System.Numerics.BigInteger.Operators#26](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#26)]  
  
 <span data-ttu-id="d7187-1088">Языки, не поддерживающие пользовательские операторы, могут проверить на неравенство с помощью одного из следующих методов:</span><span class="sxs-lookup"><span data-stu-id="d7187-1088">Languages that do not support custom operators can test for inequality by using one of the following techniques:</span></span>  
  
-   <span data-ttu-id="d7187-1089">Вызов метода, указывающий связь <xref:System.Numerics.BigInteger> между и длинным целочисленным значением со знаком. <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="d7187-1089">Calling the <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType> method, which indicates the relationship between a <xref:System.Numerics.BigInteger> and a signed long integer value.</span></span>  
  
-   <span data-ttu-id="d7187-1090"><xref:System.Numerics.BigInteger.Equals%28System.Int64%29?displayProperty=nameWithType> Вызов метода и реверсирование его значения.</span><span class="sxs-lookup"><span data-stu-id="d7187-1090">Calling the <xref:System.Numerics.BigInteger.Equals%28System.Int64%29?displayProperty=nameWithType> method and reversing its value.</span></span>  
  
 <span data-ttu-id="d7187-1091">Если `right` <xref:System.Int16>параметр имеетзначение<xref:System.SByte> <xref:System.Int64> , ,,,или<xref:System.Int32> ,<xref:System.UInt32> он неявно преобразуется в значение при выполнении операции. <xref:System.Byte> <xref:System.UInt16></span><span class="sxs-lookup"><span data-stu-id="d7187-1091">If `right` is a <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.SByte>, <xref:System.UInt16>, or <xref:System.UInt32> value, it is implicitly converted to an <xref:System.Int64> value when the operation is performed.</span></span>  
  
 <span data-ttu-id="d7187-1092">Эквивалентным методом для этого оператора является <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="d7187-1092">The equivalent method for this operator is <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_Equality" />
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Numerics.BigInteger left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Numerics.BigInteger left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Inequality(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As BigInteger, right As BigInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Numerics::BigInteger left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Numerics.BigInteger * System.Numerics.BigInteger -&gt; bool" Usage="System.Numerics.BigInteger.op_Inequality (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="d7187-1093">Первое сравниваемое значение.</span><span class="sxs-lookup"><span data-stu-id="d7187-1093">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="d7187-1094">Второе сравниваемое значение.</span><span class="sxs-lookup"><span data-stu-id="d7187-1094">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="d7187-1095">Возвращает значение, указывающее, имеют ли два объекта <see cref="T:System.Numerics.BigInteger" /> различные значения.</span><span class="sxs-lookup"><span data-stu-id="d7187-1095">Returns a value that indicates whether two <see cref="T:System.Numerics.BigInteger" /> objects have different values.</span></span></summary>
        <returns><span data-ttu-id="d7187-1096">Значение <see langword="true" />, если <paramref name="left" /> и <paramref name="right" /> не равны друг другу; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-1096"><see langword="true" /> if <paramref name="left" /> and <paramref name="right" /> are not equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7187-1097">Метод определяет операцию для <xref:System.Numerics.BigInteger> значений в операторе неравенства. <xref:System.Numerics.BigInteger.op_Inequality%2A></span><span class="sxs-lookup"><span data-stu-id="d7187-1097">The <xref:System.Numerics.BigInteger.op_Inequality%2A> method defines the operation of the inequality operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="d7187-1098">Он включает следующий код:</span><span class="sxs-lookup"><span data-stu-id="d7187-1098">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numeric.BigInteger.Class#26](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/cs/BigInteger_Examples.cs#26)]
 [!code-vb[System.Numeric.BigInteger.Class#26](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/vb/BigInteger_Examples.vb#26)]  
  
 <span data-ttu-id="d7187-1099">Языки, не поддерживающие пользовательские операторы, могут проверить на неравенство с помощью одного из следующих методов:</span><span class="sxs-lookup"><span data-stu-id="d7187-1099">Languages that do not support custom operators can test for inequality by using one of the following techniques:</span></span>  
  
-   <span data-ttu-id="d7187-1100">Вызов метода, который указывает на связь между двумя <xref:System.Numerics.BigInteger> объектами. <xref:System.Numerics.BigInteger.Compare%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="d7187-1100">Calling the <xref:System.Numerics.BigInteger.Compare%2A?displayProperty=nameWithType> method, which indicates the relationship between two <xref:System.Numerics.BigInteger> objects.</span></span>  
  
-   <span data-ttu-id="d7187-1101"><xref:System.Numerics.BigInteger.Equals%28System.Numerics.BigInteger%29?displayProperty=nameWithType> Вызов метода и реверсирование его значения.</span><span class="sxs-lookup"><span data-stu-id="d7187-1101">Calling the <xref:System.Numerics.BigInteger.Equals%28System.Numerics.BigInteger%29?displayProperty=nameWithType> method and reversing its value.</span></span>  
  
 <span data-ttu-id="d7187-1102">Эквивалентным методом для этого оператора является <xref:System.Numerics.BigInteger.Compare%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="d7187-1102">The equivalent method for this operator is <xref:System.Numerics.BigInteger.Compare%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_Equality" />
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Numerics.BigInteger left, ulong right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Numerics.BigInteger left, unsigned int64 right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Inequality(System.Numerics.BigInteger,System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As BigInteger, right As ULong) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Numerics::BigInteger left, System::UInt64 right);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Numerics.BigInteger * uint64 -&gt; bool" Usage="System.Numerics.BigInteger.op_Inequality (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="d7187-1103">Первое сравниваемое значение.</span><span class="sxs-lookup"><span data-stu-id="d7187-1103">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="d7187-1104">Второе сравниваемое значение.</span><span class="sxs-lookup"><span data-stu-id="d7187-1104">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="d7187-1105">Возвращает значение, определяющее, действительно ли значение <see cref="T:System.Numerics.BigInteger" /> и 64-разрядное целое число без знака не равны.</span><span class="sxs-lookup"><span data-stu-id="d7187-1105">Returns a value that indicates whether a <see cref="T:System.Numerics.BigInteger" /> value and a 64-bit unsigned integer are not equal.</span></span></summary>
        <returns><span data-ttu-id="d7187-1106">Значение <see langword="true" />, если <paramref name="left" /> и <paramref name="right" /> не равны друг другу; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-1106"><see langword="true" /> if <paramref name="left" /> and <paramref name="right" /> are not equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7187-1107">Метод определяет операцию для <xref:System.Numerics.BigInteger> значений в операторе неравенства. <xref:System.Numerics.BigInteger.op_Inequality%2A></span><span class="sxs-lookup"><span data-stu-id="d7187-1107">The <xref:System.Numerics.BigInteger.op_Inequality%2A> method defines the operation of the inequality operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="d7187-1108">Он включает следующий код:</span><span class="sxs-lookup"><span data-stu-id="d7187-1108">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#27](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#27)]
 [!code-vb[System.Numerics.BigInteger.Operators#27](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#27)]  
  
 <span data-ttu-id="d7187-1109">Языки, не поддерживающие пользовательские операторы, могут проверить на неравенство с помощью одного из следующих методов:</span><span class="sxs-lookup"><span data-stu-id="d7187-1109">Languages that do not support custom operators can test for inequality by using one of the following techniques:</span></span>  
  
-   <span data-ttu-id="d7187-1110">Вызов метода, который указывает связь <xref:System.Numerics.BigInteger> между и длинным целым числом без знака. <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="d7187-1110">Calling the <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType> method, which indicates the relationship between a <xref:System.Numerics.BigInteger> and an unsigned long integer value.</span></span>  
  
-   <span data-ttu-id="d7187-1111"><xref:System.Numerics.BigInteger.Equals%28System.UInt64%29?displayProperty=nameWithType> Вызов метода и реверсирование его значения.</span><span class="sxs-lookup"><span data-stu-id="d7187-1111">Calling the <xref:System.Numerics.BigInteger.Equals%28System.UInt64%29?displayProperty=nameWithType> method and reversing its value.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_Equality" />
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (ulong left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(unsigned int64 left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Inequality(System.UInt64,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As ULong, right As BigInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::UInt64 left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : uint64 * System.Numerics.BigInteger -&gt; bool" Usage="System.Numerics.BigInteger.op_Inequality (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.UInt64" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="d7187-1112">Первое сравниваемое значение.</span><span class="sxs-lookup"><span data-stu-id="d7187-1112">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="d7187-1113">Второе сравниваемое значение.</span><span class="sxs-lookup"><span data-stu-id="d7187-1113">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="d7187-1114">Возвращает значение, определяющее, действительно ли 64-разрядное целое число без знака и значение <see cref="T:System.Numerics.BigInteger" /> не равны.</span><span class="sxs-lookup"><span data-stu-id="d7187-1114">Returns a value that indicates whether a 64-bit unsigned integer and a <see cref="T:System.Numerics.BigInteger" /> value are not equal.</span></span></summary>
        <returns><span data-ttu-id="d7187-1115">Значение <see langword="true" />, если <paramref name="left" /> и <paramref name="right" /> не равны друг другу; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-1115"><see langword="true" /> if <paramref name="left" /> and <paramref name="right" /> are not equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7187-1116">Метод определяет операцию для <xref:System.Numerics.BigInteger> значений в операторе неравенства. <xref:System.Numerics.BigInteger.op_Inequality%2A></span><span class="sxs-lookup"><span data-stu-id="d7187-1116">The <xref:System.Numerics.BigInteger.op_Inequality%2A> method defines the operation of the inequality operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="d7187-1117">Он включает следующий код:</span><span class="sxs-lookup"><span data-stu-id="d7187-1117">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#28](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#28)]
 [!code-vb[System.Numerics.BigInteger.Operators#28](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#28)]  
  
 <span data-ttu-id="d7187-1118">Языки, не поддерживающие пользовательские операторы, могут проверить на неравенство с помощью одного из следующих методов:</span><span class="sxs-lookup"><span data-stu-id="d7187-1118">Languages that do not support custom operators can test for inequality by using one of the following techniques:</span></span>  
  
-   <span data-ttu-id="d7187-1119">Вызов метода, который указывает связь <xref:System.Numerics.BigInteger> между и длинным целым числом без знака. <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="d7187-1119">Calling the <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType> method, which indicates the relationship between a <xref:System.Numerics.BigInteger> and an unsigned long integer value.</span></span>  
  
-   <span data-ttu-id="d7187-1120"><xref:System.Numerics.BigInteger.Equals%28System.UInt64%29?displayProperty=nameWithType> Вызов метода и реверсирование его значения.</span><span class="sxs-lookup"><span data-stu-id="d7187-1120">Calling the <xref:System.Numerics.BigInteger.Equals%28System.UInt64%29?displayProperty=nameWithType> method and reversing its value.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_Equality" />
      </Docs>
    </Member>
    <Member MemberName="op_LeftShift">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger operator &lt;&lt; (System.Numerics.BigInteger value, int shift);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_LeftShift(valuetype System.Numerics.BigInteger value, int32 shift) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_LeftShift(System.Numerics.BigInteger,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt;&lt; (value As BigInteger, shift As Integer) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger operator &lt;&lt;(System::Numerics::BigInteger value, int shift);" />
      <MemberSignature Language="F#" Value="static member ( &lt;&lt;&lt; ) : System.Numerics.BigInteger * int -&gt; System.Numerics.BigInteger" Usage="value &lt;&lt;&lt; shift" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
        <Parameter Name="shift" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d7187-1121">Значение, для которого необходимо выполнить побитовый сдвиг.</span><span class="sxs-lookup"><span data-stu-id="d7187-1121">The value whose bits are to be shifted.</span></span></param>
        <param name="shift"><span data-ttu-id="d7187-1122">Количество битов, на которое необходимо сдвинуть влево значение <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-1122">The number of bits to shift <paramref name="value" /> to the left.</span></span></param>
        <summary><span data-ttu-id="d7187-1123">Сдвигает значение <see cref="T:System.Numerics.BigInteger" /> на указанное число битов влево.</span><span class="sxs-lookup"><span data-stu-id="d7187-1123">Shifts a <see cref="T:System.Numerics.BigInteger" /> value a specified number of bits to the left.</span></span></summary>
        <returns><span data-ttu-id="d7187-1124">Значение, которое было сдвинуто влево на указанное число бит.</span><span class="sxs-lookup"><span data-stu-id="d7187-1124">A value that has been shifted to the left by the specified number of bits.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7187-1125">Метод определяет операцию побитового оператора сдвига влево для <xref:System.Numerics.BigInteger> значений. <xref:System.Numerics.BigInteger.op_LeftShift%2A></span><span class="sxs-lookup"><span data-stu-id="d7187-1125">The <xref:System.Numerics.BigInteger.op_LeftShift%2A> method defines the operation of the bitwise left-shift operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="d7187-1126">Он включает следующий код:</span><span class="sxs-lookup"><span data-stu-id="d7187-1126">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#29](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#29)]
 [!code-vb[System.Numerics.BigInteger.Operators#29](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#29)]  
  
> [!NOTE]
>  <span data-ttu-id="d7187-1127">В <xref:System.Numerics.BigInteger.op_LeftShift%2A> отличие от побитовой операции сдвига влево с целочисленными примитивами, метод сохраняет знак исходного <xref:System.Numerics.BigInteger> значения.</span><span class="sxs-lookup"><span data-stu-id="d7187-1127">Unlike the bitwise left-shift operation with integer primitives, the <xref:System.Numerics.BigInteger.op_LeftShift%2A> method preserves the sign of the original <xref:System.Numerics.BigInteger> value.</span></span>  
  
 <span data-ttu-id="d7187-1128">Языки, не поддерживающие пользовательские операторы, могут выполнять побитовую операцию сдвига влево путем `value` умножения на `BigInteger.Pow(2, shift)`.</span><span class="sxs-lookup"><span data-stu-id="d7187-1128">Languages that do not support custom operators can perform a bitwise left-shift operation by multiplying `value` by `BigInteger.Pow(2, shift)`.</span></span> <span data-ttu-id="d7187-1129">В следующем примере показано, что результаты идентичны результатам использования этого оператора.</span><span class="sxs-lookup"><span data-stu-id="d7187-1129">The following example shows that the results are identical to the results of using this operator.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#30](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#30)]
 [!code-vb[System.Numerics.BigInteger.Operators#30](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#30)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Numerics.BigInteger.op_RightShift(System.Numerics.BigInteger,System.Int32)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="op_LessThan">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d7187-1130">Возвращает значение, определяющее, действительно ли заданное значение меньше второго заданного значения.</span><span class="sxs-lookup"><span data-stu-id="d7187-1130">Returns a value that indicates whether a specified value is less than a second specified value.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="op_LessThan">
      <MemberSignature Language="C#" Value="public static bool operator &lt; (long left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThan(int64 left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_LessThan(System.Int64,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt; (left As Long, right As BigInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;(long left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member ( &lt; ) : int64 * System.Numerics.BigInteger -&gt; bool" Usage="left &lt; right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Int64" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="d7187-1131">Первое сравниваемое значение.</span><span class="sxs-lookup"><span data-stu-id="d7187-1131">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="d7187-1132">Второе сравниваемое значение.</span><span class="sxs-lookup"><span data-stu-id="d7187-1132">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="d7187-1133">Возвращает значение, определяющее, действительно 64-разрядное знаковое целое число меньше значения <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-1133">Returns a value that indicates whether a 64-bit signed integer is less than a <see cref="T:System.Numerics.BigInteger" /> value.</span></span></summary>
        <returns><span data-ttu-id="d7187-1134"><see langword="true" />, если значение <paramref name="left" /> меньше значения <paramref name="right" />; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-1134"><see langword="true" /> if <paramref name="left" /> is less than <paramref name="right" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7187-1135">Метод определяет операцию оператора "меньше" для <xref:System.Numerics.BigInteger> значений. <xref:System.Numerics.BigInteger.op_LessThan%2A></span><span class="sxs-lookup"><span data-stu-id="d7187-1135">The <xref:System.Numerics.BigInteger.op_LessThan%2A> method defines the operation of the less than operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="d7187-1136">Он включает следующий код:</span><span class="sxs-lookup"><span data-stu-id="d7187-1136">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#31](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#31)]
 [!code-vb[System.Numerics.BigInteger.Operators#31](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#31)]  
  
 <span data-ttu-id="d7187-1137">Языки, которые не поддерживают пользовательские операторы, могут вызывать <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="d7187-1137">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="d7187-1138">Некоторые языки также могут вызывать <xref:System.Numerics.BigInteger.op_LessThan%28System.Int64%2CSystem.Numerics.BigInteger%29> метод напрямую, как показано в следующем примере.</span><span class="sxs-lookup"><span data-stu-id="d7187-1138">Some languages can also call the <xref:System.Numerics.BigInteger.op_LessThan%28System.Int64%2CSystem.Numerics.BigInteger%29> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Numerics.BigInteger.Operators#32](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#32)]  
  
 <span data-ttu-id="d7187-1139">Если `left` <xref:System.Int16>параметр имеетзначение<xref:System.SByte> <xref:System.Int64> , ,,,или<xref:System.Int32> ,<xref:System.UInt32> он неявно преобразуется в значение при выполнении операции. <xref:System.Byte> <xref:System.UInt16></span><span class="sxs-lookup"><span data-stu-id="d7187-1139">If `left` is a <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.SByte>, <xref:System.UInt16>, or <xref:System.UInt32> value, it is implicitly converted to an <xref:System.Int64> value when the operation is performed.</span></span>  
  
 <span data-ttu-id="d7187-1140">Эквивалентным методом для этого оператора является <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="d7187-1140">The equivalent method for this operator is <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_LessThanOrEqual" />
      </Docs>
    </Member>
    <Member MemberName="op_LessThan">
      <MemberSignature Language="C#" Value="public static bool operator &lt; (System.Numerics.BigInteger left, long right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThan(valuetype System.Numerics.BigInteger left, int64 right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_LessThan(System.Numerics.BigInteger,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt; (left As BigInteger, right As Long) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;(System::Numerics::BigInteger left, long right);" />
      <MemberSignature Language="F#" Value="static member ( &lt; ) : System.Numerics.BigInteger * int64 -&gt; bool" Usage="left &lt; right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="d7187-1141">Первое сравниваемое значение.</span><span class="sxs-lookup"><span data-stu-id="d7187-1141">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="d7187-1142">Второе сравниваемое значение.</span><span class="sxs-lookup"><span data-stu-id="d7187-1142">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="d7187-1143">Возвращает значение, определяющее, действительно ли значение <see cref="T:System.Numerics.BigInteger" /> меньше 64-битового знакового целого числа.</span><span class="sxs-lookup"><span data-stu-id="d7187-1143">Returns a value that indicates whether a <see cref="T:System.Numerics.BigInteger" /> value is less than a 64-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="d7187-1144"><see langword="true" />, если значение <paramref name="left" /> меньше значения <paramref name="right" />; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-1144"><see langword="true" /> if <paramref name="left" /> is less than <paramref name="right" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7187-1145">Метод определяет операцию оператора "меньше" для <xref:System.Numerics.BigInteger> значений. <xref:System.Numerics.BigInteger.op_LessThan%2A></span><span class="sxs-lookup"><span data-stu-id="d7187-1145">The <xref:System.Numerics.BigInteger.op_LessThan%2A> method defines the operation of the less than operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="d7187-1146">Он включает следующий код:</span><span class="sxs-lookup"><span data-stu-id="d7187-1146">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#33](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#33)]
 [!code-vb[System.Numerics.BigInteger.Operators#33](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#33)]  
  
 <span data-ttu-id="d7187-1147">Языки, которые не поддерживают пользовательские операторы, могут вызывать <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="d7187-1147">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="d7187-1148">Некоторые языки также могут вызывать <xref:System.Numerics.BigInteger.op_LessThan%28System.Numerics.BigInteger%2CSystem.Int64%29> метод напрямую, как показано в следующем примере.</span><span class="sxs-lookup"><span data-stu-id="d7187-1148">Some languages can also call the <xref:System.Numerics.BigInteger.op_LessThan%28System.Numerics.BigInteger%2CSystem.Int64%29> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Numerics.BigInteger.Operators#34](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#34)]  
  
 <span data-ttu-id="d7187-1149">Если `right` <xref:System.Int16>параметр имеетзначение<xref:System.SByte> <xref:System.Int64> , ,,,или<xref:System.Int32> ,<xref:System.UInt32> он неявно преобразуется в значение при выполнении операции. <xref:System.Byte> <xref:System.UInt16></span><span class="sxs-lookup"><span data-stu-id="d7187-1149">If `right` is a <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.SByte>, <xref:System.UInt16>, or <xref:System.UInt32> value, it is implicitly converted to an <xref:System.Int64> value when the operation is performed.</span></span>  
  
 <span data-ttu-id="d7187-1150">Эквивалентным методом для этого оператора является <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="d7187-1150">The equivalent method for this operator is <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_LessThanOrEqual" />
      </Docs>
    </Member>
    <Member MemberName="op_LessThan">
      <MemberSignature Language="C#" Value="public static bool operator &lt; (System.Numerics.BigInteger left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThan(valuetype System.Numerics.BigInteger left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_LessThan(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt; (left As BigInteger, right As BigInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;(System::Numerics::BigInteger left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member ( &lt; ) : System.Numerics.BigInteger * System.Numerics.BigInteger -&gt; bool" Usage="left &lt; right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="d7187-1151">Первое сравниваемое значение.</span><span class="sxs-lookup"><span data-stu-id="d7187-1151">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="d7187-1152">Второе сравниваемое значение.</span><span class="sxs-lookup"><span data-stu-id="d7187-1152">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="d7187-1153">Возвращает значение, определяющее, действительно ли значение типа <see cref="T:System.Numerics.BigInteger" /> меньше другого значения типа <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-1153">Returns a value that indicates whether a <see cref="T:System.Numerics.BigInteger" /> value is less than another <see cref="T:System.Numerics.BigInteger" /> value.</span></span></summary>
        <returns><span data-ttu-id="d7187-1154"><see langword="true" />, если значение <paramref name="left" /> меньше значения <paramref name="right" />; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-1154"><see langword="true" /> if <paramref name="left" /> is less than <paramref name="right" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7187-1155">Метод определяет операцию оператора "меньше" для <xref:System.Numerics.BigInteger> значений. <xref:System.Numerics.BigInteger.op_LessThan%2A></span><span class="sxs-lookup"><span data-stu-id="d7187-1155">The <xref:System.Numerics.BigInteger.op_LessThan%2A> method defines the operation of the less than operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="d7187-1156">Он включает следующий код:</span><span class="sxs-lookup"><span data-stu-id="d7187-1156">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numeric.BigInteger.Class#27](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/cs/BigInteger_Examples.cs#27)]
 [!code-vb[System.Numeric.BigInteger.Class#27](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/vb/BigInteger_Examples.vb#27)]  
  
 <span data-ttu-id="d7187-1157">Языки, которые не поддерживают пользовательские операторы, могут вызывать <xref:System.Numerics.BigInteger.Compare%2A?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="d7187-1157">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.Compare%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="d7187-1158">Некоторые языки также могут вызывать <xref:System.Numerics.BigInteger.op_LessThan%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29> метод напрямую, как показано в следующем примере.</span><span class="sxs-lookup"><span data-stu-id="d7187-1158">Some languages can also call the <xref:System.Numerics.BigInteger.op_LessThan%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Numeric.BigInteger.Class#28](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/vb/BigInteger_Examples.vb#28)]  
  
 <span data-ttu-id="d7187-1159">Эквивалентным методом для этого оператора является <xref:System.Numerics.BigInteger.Compare%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="d7187-1159">The equivalent method for this operator is <xref:System.Numerics.BigInteger.Compare%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_LessThanOrEqual" />
      </Docs>
    </Member>
    <Member MemberName="op_LessThan">
      <MemberSignature Language="C#" Value="public static bool operator &lt; (System.Numerics.BigInteger left, ulong right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThan(valuetype System.Numerics.BigInteger left, unsigned int64 right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_LessThan(System.Numerics.BigInteger,System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt; (left As BigInteger, right As ULong) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;(System::Numerics::BigInteger left, System::UInt64 right);" />
      <MemberSignature Language="F#" Value="static member ( &lt; ) : System.Numerics.BigInteger * uint64 -&gt; bool" Usage="left &lt; right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="d7187-1160">Первое сравниваемое значение.</span><span class="sxs-lookup"><span data-stu-id="d7187-1160">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="d7187-1161">Второе сравниваемое значение.</span><span class="sxs-lookup"><span data-stu-id="d7187-1161">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="d7187-1162">Возвращает значение, определяющее, действительно ли значение <see cref="T:System.Numerics.BigInteger" /> меньше 64-битового целого числа без знака.</span><span class="sxs-lookup"><span data-stu-id="d7187-1162">Returns a value that indicates whether a <see cref="T:System.Numerics.BigInteger" /> value is less than a 64-bit unsigned integer.</span></span></summary>
        <returns><span data-ttu-id="d7187-1163"><see langword="true" />, если значение <paramref name="left" /> меньше значения <paramref name="right" />; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-1163"><see langword="true" /> if <paramref name="left" /> is less than <paramref name="right" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7187-1164">Метод определяет операцию оператора "меньше" для <xref:System.Numerics.BigInteger> значений. <xref:System.Numerics.BigInteger.op_LessThan%2A></span><span class="sxs-lookup"><span data-stu-id="d7187-1164">The <xref:System.Numerics.BigInteger.op_LessThan%2A> method defines the operation of the less than operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="d7187-1165">Он включает следующий код:</span><span class="sxs-lookup"><span data-stu-id="d7187-1165">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#35](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#35)]
 [!code-vb[System.Numerics.BigInteger.Operators#35](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#35)]  
  
 <span data-ttu-id="d7187-1166">Языки, которые не поддерживают пользовательские операторы, могут вызывать <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="d7187-1166">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="d7187-1167">Они также могут вызывать <xref:System.Numerics.BigInteger.op_LessThan%28System.Numerics.BigInteger%2CSystem.UInt64%29> метод напрямую, как показано в следующем примере.</span><span class="sxs-lookup"><span data-stu-id="d7187-1167">They can also call the <xref:System.Numerics.BigInteger.op_LessThan%28System.Numerics.BigInteger%2CSystem.UInt64%29> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Numerics.BigInteger.Operators#36](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#36)]  
  
 <span data-ttu-id="d7187-1168">Эквивалентным методом для этого оператора является <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="d7187-1168">The equivalent method for this operator is <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_LessThanOrEqual" />
      </Docs>
    </Member>
    <Member MemberName="op_LessThan">
      <MemberSignature Language="C#" Value="public static bool operator &lt; (ulong left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThan(unsigned int64 left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_LessThan(System.UInt64,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt; (left As ULong, right As BigInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;(System::UInt64 left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member ( &lt; ) : uint64 * System.Numerics.BigInteger -&gt; bool" Usage="left &lt; right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.UInt64" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="d7187-1169">Первое сравниваемое значение.</span><span class="sxs-lookup"><span data-stu-id="d7187-1169">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="d7187-1170">Второе сравниваемое значение.</span><span class="sxs-lookup"><span data-stu-id="d7187-1170">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="d7187-1171">Возвращает значение, определяющее, действительно ли 64-разрядное целое число без знака меньше значения <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-1171">Returns a value that indicates whether a 64-bit unsigned integer is less than a <see cref="T:System.Numerics.BigInteger" /> value.</span></span></summary>
        <returns><span data-ttu-id="d7187-1172"><see langword="true" />, если значение <paramref name="left" /> меньше значения <paramref name="right" />; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-1172"><see langword="true" /> if <paramref name="left" /> is less than <paramref name="right" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7187-1173">Метод определяет операцию оператора "меньше" для <xref:System.Numerics.BigInteger> значений. <xref:System.Numerics.BigInteger.op_LessThan%2A></span><span class="sxs-lookup"><span data-stu-id="d7187-1173">The <xref:System.Numerics.BigInteger.op_LessThan%2A> method defines the operation of the less than operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="d7187-1174">Он включает следующий код:</span><span class="sxs-lookup"><span data-stu-id="d7187-1174">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#37](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#37)]
 [!code-vb[System.Numerics.BigInteger.Operators#37](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#37)]  
  
 <span data-ttu-id="d7187-1175">Языки, которые не поддерживают пользовательские операторы, могут вызывать <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="d7187-1175">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="d7187-1176">Они также могут вызывать <xref:System.Numerics.BigInteger.op_LessThan%28System.UInt64%2CSystem.Numerics.BigInteger%29> метод напрямую, как показано в следующем примере.</span><span class="sxs-lookup"><span data-stu-id="d7187-1176">They can also call the <xref:System.Numerics.BigInteger.op_LessThan%28System.UInt64%2CSystem.Numerics.BigInteger%29> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Numerics.BigInteger.Operators#38](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#38)]  
  
 <span data-ttu-id="d7187-1177">Эквивалентным методом для этого оператора является <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="d7187-1177">The equivalent method for this operator is <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_LessThanOrEqual" />
      </Docs>
    </Member>
    <MemberGroup MemberName="op_LessThanOrEqual">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d7187-1178">Возвращает значение, определяющее, действительно ли заданное значение меньше или равно другому заданному значению.</span><span class="sxs-lookup"><span data-stu-id="d7187-1178">Returns a value that indicates whether a specified value is less than or equal to another specified value.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="op_LessThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &lt;= (long left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThanOrEqual(int64 left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.Int64,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt;= (left As Long, right As BigInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;=(long left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member ( &lt;= ) : int64 * System.Numerics.BigInteger -&gt; bool" Usage="left &lt;= right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Int64" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="d7187-1179">Первое сравниваемое значение.</span><span class="sxs-lookup"><span data-stu-id="d7187-1179">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="d7187-1180">Второе сравниваемое значение.</span><span class="sxs-lookup"><span data-stu-id="d7187-1180">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="d7187-1181">Возвращает значение, определяющее, действительно ли 64-разрядное знаковое целое число меньше или равно значению <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-1181">Returns a value that indicates whether a 64-bit signed integer is less than or equal to a <see cref="T:System.Numerics.BigInteger" /> value.</span></span></summary>
        <returns><span data-ttu-id="d7187-1182"><see langword="true" />, если значение <paramref name="left" /> меньше или равно значению <paramref name="right" />; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-1182"><see langword="true" /> if <paramref name="left" /> is less than or equal to <paramref name="right" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7187-1183">Метод определяет операцию оператора "меньше или равно" для <xref:System.Numerics.BigInteger> значений. <xref:System.Numerics.BigInteger.op_LessThanOrEqual%2A></span><span class="sxs-lookup"><span data-stu-id="d7187-1183">The <xref:System.Numerics.BigInteger.op_LessThanOrEqual%2A> method defines the operation of the less than or equal to operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="d7187-1184">Он включает следующий код:</span><span class="sxs-lookup"><span data-stu-id="d7187-1184">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#39](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#39)]
 [!code-vb[System.Numerics.BigInteger.Operators#39](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#39)]  
  
 <span data-ttu-id="d7187-1185">Языки, которые не поддерживают пользовательские операторы, могут вызывать <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="d7187-1185">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="d7187-1186">Они также могут вызывать <xref:System.Numerics.BigInteger.op_LessThanOrEqual%28System.Int64%2CSystem.Numerics.BigInteger%29> метод напрямую, как показано в следующем примере.</span><span class="sxs-lookup"><span data-stu-id="d7187-1186">They can also call the <xref:System.Numerics.BigInteger.op_LessThanOrEqual%28System.Int64%2CSystem.Numerics.BigInteger%29> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Numerics.BigInteger.Operators#40](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#40)]  
  
 <span data-ttu-id="d7187-1187">Если `left` <xref:System.Int16>параметр имеетзначение<xref:System.SByte> <xref:System.Int64> , ,,,или<xref:System.Int32> ,<xref:System.UInt32> он неявно преобразуется в значение при выполнении операции. <xref:System.Byte> <xref:System.UInt16></span><span class="sxs-lookup"><span data-stu-id="d7187-1187">If `left` is a <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.SByte>, <xref:System.UInt16>, or <xref:System.UInt32> value, it is implicitly converted to an <xref:System.Int64> value when the operation is performed.</span></span>  
  
 <span data-ttu-id="d7187-1188">Эквивалентным методом для этого оператора является <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="d7187-1188">The equivalent method for this operator is <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_LessThan" />
      </Docs>
    </Member>
    <Member MemberName="op_LessThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &lt;= (System.Numerics.BigInteger left, long right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThanOrEqual(valuetype System.Numerics.BigInteger left, int64 right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.Numerics.BigInteger,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt;= (left As BigInteger, right As Long) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;=(System::Numerics::BigInteger left, long right);" />
      <MemberSignature Language="F#" Value="static member ( &lt;= ) : System.Numerics.BigInteger * int64 -&gt; bool" Usage="left &lt;= right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="d7187-1189">Первое сравниваемое значение.</span><span class="sxs-lookup"><span data-stu-id="d7187-1189">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="d7187-1190">Второе сравниваемое значение.</span><span class="sxs-lookup"><span data-stu-id="d7187-1190">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="d7187-1191">Возвращает значение, определяющее, действительно ли значение <see cref="T:System.Numerics.BigInteger" /> меньше или равно 64-разрядному знаковому целому числу.</span><span class="sxs-lookup"><span data-stu-id="d7187-1191">Returns a value that indicates whether a <see cref="T:System.Numerics.BigInteger" /> value is less than or equal to a 64-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="d7187-1192"><see langword="true" />, если значение <paramref name="left" /> меньше или равно значению <paramref name="right" />; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-1192"><see langword="true" /> if <paramref name="left" /> is less than or equal to <paramref name="right" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7187-1193">Метод определяет операцию оператора "меньше или равно" для <xref:System.Numerics.BigInteger> значений. <xref:System.Numerics.BigInteger.op_LessThanOrEqual%2A></span><span class="sxs-lookup"><span data-stu-id="d7187-1193">The <xref:System.Numerics.BigInteger.op_LessThanOrEqual%2A> method defines the operation of the less than or equal to operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="d7187-1194">Он включает следующий код:</span><span class="sxs-lookup"><span data-stu-id="d7187-1194">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#41](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#41)]
 [!code-vb[System.Numerics.BigInteger.Operators#41](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#41)]  
  
 <span data-ttu-id="d7187-1195">Языки, которые не поддерживают пользовательские операторы, могут вызывать <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="d7187-1195">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="d7187-1196">Они также могут вызывать <xref:System.Numerics.BigInteger.op_LessThanOrEqual%28System.Numerics.BigInteger%2CSystem.Int64%29> метод напрямую, как показано в следующем примере.</span><span class="sxs-lookup"><span data-stu-id="d7187-1196">They can also call the <xref:System.Numerics.BigInteger.op_LessThanOrEqual%28System.Numerics.BigInteger%2CSystem.Int64%29> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Numerics.BigInteger.Operators#42](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#42)]  
  
 <span data-ttu-id="d7187-1197">Если `right` <xref:System.Int16>параметр имеетзначение<xref:System.SByte> <xref:System.Int64> , ,,,или<xref:System.Int32> ,<xref:System.UInt32> он неявно преобразуется в значение при выполнении операции. <xref:System.Byte> <xref:System.UInt16></span><span class="sxs-lookup"><span data-stu-id="d7187-1197">If `right` is a <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.SByte>, <xref:System.UInt16>, or <xref:System.UInt32> value, it is implicitly converted to an <xref:System.Int64> value when the operation is performed.</span></span>  
  
 <span data-ttu-id="d7187-1198">Эквивалентным методом для этого оператора является <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="d7187-1198">The equivalent method for this operator is <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_LessThan" />
      </Docs>
    </Member>
    <Member MemberName="op_LessThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &lt;= (System.Numerics.BigInteger left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThanOrEqual(valuetype System.Numerics.BigInteger left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt;= (left As BigInteger, right As BigInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;=(System::Numerics::BigInteger left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member ( &lt;= ) : System.Numerics.BigInteger * System.Numerics.BigInteger -&gt; bool" Usage="left &lt;= right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="d7187-1199">Первое сравниваемое значение.</span><span class="sxs-lookup"><span data-stu-id="d7187-1199">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="d7187-1200">Второе сравниваемое значение.</span><span class="sxs-lookup"><span data-stu-id="d7187-1200">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="d7187-1201">Возвращает значение, определяющее, действительно ли значение типа <see cref="T:System.Numerics.BigInteger" /> меньше или равно другому значению типа <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-1201">Returns a value that indicates whether a <see cref="T:System.Numerics.BigInteger" /> value is less than or equal to another <see cref="T:System.Numerics.BigInteger" /> value.</span></span></summary>
        <returns><span data-ttu-id="d7187-1202"><see langword="true" />, если значение <paramref name="left" /> меньше или равно значению <paramref name="right" />; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-1202"><see langword="true" /> if <paramref name="left" /> is less than or equal to <paramref name="right" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7187-1203">Метод определяет операцию оператора "меньше или равно" для <xref:System.Numerics.BigInteger> значений. <xref:System.Numerics.BigInteger.op_LessThanOrEqual%2A></span><span class="sxs-lookup"><span data-stu-id="d7187-1203">The <xref:System.Numerics.BigInteger.op_LessThanOrEqual%2A> method defines the operation of the less than or equal to operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="d7187-1204">Он включает следующий код:</span><span class="sxs-lookup"><span data-stu-id="d7187-1204">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numeric.BigInteger.Class#29](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/cs/BigInteger_Examples.cs#29)]
 [!code-vb[System.Numeric.BigInteger.Class#29](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/vb/BigInteger_Examples.vb#29)]  
  
 <span data-ttu-id="d7187-1205">Языки, которые не поддерживают пользовательские операторы, могут вызывать <xref:System.Numerics.BigInteger.Compare%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="d7187-1205">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.Compare%2A> method instead.</span></span> <span data-ttu-id="d7187-1206">Они также могут вызывать <xref:System.Numerics.BigInteger.op_LessThanOrEqual%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29> метод напрямую, как показано в следующем примере.</span><span class="sxs-lookup"><span data-stu-id="d7187-1206">They can also call the <xref:System.Numerics.BigInteger.op_LessThanOrEqual%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Numeric.BigInteger.Class#30](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/vb/BigInteger_Examples.vb#30)]  
  
 <span data-ttu-id="d7187-1207">Эквивалентным методом для этого оператора является <xref:System.Numerics.BigInteger.Compare%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="d7187-1207">The equivalent method for this operator is <xref:System.Numerics.BigInteger.Compare%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_LessThan" />
      </Docs>
    </Member>
    <Member MemberName="op_LessThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &lt;= (System.Numerics.BigInteger left, ulong right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThanOrEqual(valuetype System.Numerics.BigInteger left, unsigned int64 right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.Numerics.BigInteger,System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt;= (left As BigInteger, right As ULong) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;=(System::Numerics::BigInteger left, System::UInt64 right);" />
      <MemberSignature Language="F#" Value="static member ( &lt;= ) : System.Numerics.BigInteger * uint64 -&gt; bool" Usage="left &lt;= right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="d7187-1208">Первое сравниваемое значение.</span><span class="sxs-lookup"><span data-stu-id="d7187-1208">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="d7187-1209">Второе сравниваемое значение.</span><span class="sxs-lookup"><span data-stu-id="d7187-1209">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="d7187-1210">Возвращает значение, определяющее, действительно ли значение <see cref="T:System.Numerics.BigInteger" /> меньше или равно 64-разрядному целому числу без знака.</span><span class="sxs-lookup"><span data-stu-id="d7187-1210">Returns a value that indicates whether a <see cref="T:System.Numerics.BigInteger" /> value is less than or equal to a 64-bit unsigned integer.</span></span></summary>
        <returns><span data-ttu-id="d7187-1211"><see langword="true" />, если значение <paramref name="left" /> меньше или равно значению <paramref name="right" />; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-1211"><see langword="true" /> if <paramref name="left" /> is less than or equal to <paramref name="right" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7187-1212">Метод определяет операцию оператора "меньше или равно" для <xref:System.Numerics.BigInteger> значений. <xref:System.Numerics.BigInteger.op_LessThanOrEqual%2A></span><span class="sxs-lookup"><span data-stu-id="d7187-1212">The <xref:System.Numerics.BigInteger.op_LessThanOrEqual%2A> method defines the operation of the less than or equal to operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="d7187-1213">Он включает следующий код:</span><span class="sxs-lookup"><span data-stu-id="d7187-1213">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#43](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#43)]
 [!code-vb[System.Numerics.BigInteger.Operators#43](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#43)]  
  
 <span data-ttu-id="d7187-1214">Языки, которые не поддерживают пользовательские операторы, могут вызывать <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="d7187-1214">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="d7187-1215">Они также могут вызывать <xref:System.Numerics.BigInteger.op_LessThanOrEqual%28System.Numerics.BigInteger%2CSystem.UInt64%29> метод напрямую, как показано в следующем примере.</span><span class="sxs-lookup"><span data-stu-id="d7187-1215">They can also call the <xref:System.Numerics.BigInteger.op_LessThanOrEqual%28System.Numerics.BigInteger%2CSystem.UInt64%29> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Numerics.BigInteger.Operators#44](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#44)]  
  
 <span data-ttu-id="d7187-1216">Эквивалентным методом для этого оператора является <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="d7187-1216">The equivalent method for this operator is <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_LessThan" />
      </Docs>
    </Member>
    <Member MemberName="op_LessThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &lt;= (ulong left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThanOrEqual(unsigned int64 left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.UInt64,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt;= (left As ULong, right As BigInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;=(System::UInt64 left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member ( &lt;= ) : uint64 * System.Numerics.BigInteger -&gt; bool" Usage="left &lt;= right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.UInt64" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="d7187-1217">Первое сравниваемое значение.</span><span class="sxs-lookup"><span data-stu-id="d7187-1217">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="d7187-1218">Второе сравниваемое значение.</span><span class="sxs-lookup"><span data-stu-id="d7187-1218">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="d7187-1219">Возвращает значение, определяющее, действительно ли 64-разрядное целое число без знака меньше или равно значению <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-1219">Returns a value that indicates whether a 64-bit unsigned integer is less than or equal to a <see cref="T:System.Numerics.BigInteger" /> value.</span></span></summary>
        <returns><span data-ttu-id="d7187-1220"><see langword="true" />, если значение <paramref name="left" /> меньше или равно значению <paramref name="right" />; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-1220"><see langword="true" /> if <paramref name="left" /> is less than or equal to <paramref name="right" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7187-1221">Метод определяет операцию оператора "меньше или равно" для <xref:System.Numerics.BigInteger> значений. <xref:System.Numerics.BigInteger.op_LessThanOrEqual%2A></span><span class="sxs-lookup"><span data-stu-id="d7187-1221">The <xref:System.Numerics.BigInteger.op_LessThanOrEqual%2A> method defines the operation of the less than or equal to operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="d7187-1222">Он включает следующий код:</span><span class="sxs-lookup"><span data-stu-id="d7187-1222">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#45](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#45)]
 [!code-vb[System.Numerics.BigInteger.Operators#45](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#45)]  
  
 <span data-ttu-id="d7187-1223">Языки, которые не поддерживают пользовательские операторы, могут вызывать <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="d7187-1223">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="d7187-1224">Они также могут вызывать <xref:System.Numerics.BigInteger.op_LessThanOrEqual%28System.UInt64%2CSystem.Numerics.BigInteger%29> метод напрямую, как показано в следующем примере.</span><span class="sxs-lookup"><span data-stu-id="d7187-1224">They can also call the <xref:System.Numerics.BigInteger.op_LessThanOrEqual%28System.UInt64%2CSystem.Numerics.BigInteger%29> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Numerics.BigInteger.Operators#46](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#46)]  
  
 <span data-ttu-id="d7187-1225">Эквивалентным методом для этого оператора является <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="d7187-1225">The equivalent method for this operator is <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_LessThan" />
      </Docs>
    </Member>
    <Member MemberName="op_Modulus">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger operator % (System.Numerics.BigInteger dividend, System.Numerics.BigInteger divisor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_Modulus(valuetype System.Numerics.BigInteger dividend, valuetype System.Numerics.BigInteger divisor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Modulus(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator Mod (dividend As BigInteger, divisor As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger operator %(System::Numerics::BigInteger dividend, System::Numerics::BigInteger divisor);" />
      <MemberSignature Language="F#" Value="static member ( % ) : System.Numerics.BigInteger * System.Numerics.BigInteger -&gt; System.Numerics.BigInteger" Usage="dividend % divisor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dividend" Type="System.Numerics.BigInteger" />
        <Parameter Name="divisor" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="dividend"><span data-ttu-id="d7187-1226">Значение, которое необходимо разделить.</span><span class="sxs-lookup"><span data-stu-id="d7187-1226">The value to be divided.</span></span></param>
        <param name="divisor"><span data-ttu-id="d7187-1227">Значение, на которое необходимо разделить.</span><span class="sxs-lookup"><span data-stu-id="d7187-1227">The value to divide by.</span></span></param>
        <summary><span data-ttu-id="d7187-1228">Возвращает остаток от деления двух заданных значений <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-1228">Returns the remainder that results from division with two specified <see cref="T:System.Numerics.BigInteger" /> values.</span></span></summary>
        <returns><span data-ttu-id="d7187-1229">Остаток от деления.</span><span class="sxs-lookup"><span data-stu-id="d7187-1229">The remainder that results from the division.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7187-1230">Метод определяет операцию оператора модуля для <xref:System.Numerics.BigInteger> значений. <xref:System.Numerics.BigInteger.op_Modulus%2A></span><span class="sxs-lookup"><span data-stu-id="d7187-1230">The <xref:System.Numerics.BigInteger.op_Modulus%2A> method defines the operation of the modulus operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="d7187-1231">Он включает следующий код:</span><span class="sxs-lookup"><span data-stu-id="d7187-1231">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numeric.BigInteger.Class#31](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/cs/BigInteger_Examples.cs#31)]
 [!code-vb[System.Numeric.BigInteger.Class#31](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/vb/BigInteger_Examples.vb#31)]  
  
 <span data-ttu-id="d7187-1232">Языки, которые не поддерживают пользовательские операторы, могут вызывать <xref:System.Numerics.BigInteger.Remainder%2A?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="d7187-1232">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.Remainder%2A?displayProperty=nameWithType> method instead.</span></span>  
  
 <span data-ttu-id="d7187-1233">Знак значения, возвращаемого операцией модуля, зависит от знака `dividend`: Если `dividend` является положительным, операция деления возвращает положительный результат; если значение отрицательное, операция деления возвращает отрицательный результат.</span><span class="sxs-lookup"><span data-stu-id="d7187-1233">The sign of the value returned by the modulus operation depends on the sign of `dividend`: If `dividend` is positive, the modulus operation returns a positive result; if it is negative, the modulus operation returns a negative result.</span></span> <span data-ttu-id="d7187-1234">Поведение операции деления со <xref:System.Numerics.BigInteger> значениями идентично операции модуля с другими целочисленными типами.</span><span class="sxs-lookup"><span data-stu-id="d7187-1234">The behavior of the modulus operation with <xref:System.Numerics.BigInteger> values is identical to the modulus operation with other integral types.</span></span>  
  
 <span data-ttu-id="d7187-1235">Эквивалентным методом для этого оператора является <xref:System.Numerics.BigInteger.Remainder%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="d7187-1235">The equivalent method for this operator is <xref:System.Numerics.BigInteger.Remainder%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <exception cref="T:System.DivideByZeroException"><span data-ttu-id="d7187-1236">Значение параметра <paramref name="divisor" /> равно нулю (0).</span><span class="sxs-lookup"><span data-stu-id="d7187-1236"><paramref name="divisor" /> is 0 (zero).</span></span></exception>
        <altmember cref="M:System.Numerics.BigInteger.op_Division(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
        <altmember cref="M:System.Numerics.BigInteger.DivRem(System.Numerics.BigInteger,System.Numerics.BigInteger,System.Numerics.BigInteger@)" />
      </Docs>
    </Member>
    <Member MemberName="op_Multiply">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger operator * (System.Numerics.BigInteger left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_Multiply(valuetype System.Numerics.BigInteger left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Multiply(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator * (left As BigInteger, right As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger operator *(System::Numerics::BigInteger left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member ( * ) : System.Numerics.BigInteger * System.Numerics.BigInteger -&gt; System.Numerics.BigInteger" Usage="left * right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="d7187-1237">Первое значение для перемножения.</span><span class="sxs-lookup"><span data-stu-id="d7187-1237">The first value to multiply.</span></span></param>
        <param name="right"><span data-ttu-id="d7187-1238">Второе значение для перемножения.</span><span class="sxs-lookup"><span data-stu-id="d7187-1238">The second value to multiply.</span></span></param>
        <summary><span data-ttu-id="d7187-1239">Умножает два заданных значения <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-1239">Multiplies two specified <see cref="T:System.Numerics.BigInteger" /> values.</span></span></summary>
        <returns><span data-ttu-id="d7187-1240">Произведение <paramref name="left" /> на <paramref name="right" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-1240">The product of <paramref name="left" /> and <paramref name="right" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7187-1241">Метод определяет операцию оператора умножения для <xref:System.Numerics.BigInteger> значений. <xref:System.Numerics.BigInteger.op_Multiply%2A></span><span class="sxs-lookup"><span data-stu-id="d7187-1241">The <xref:System.Numerics.BigInteger.op_Multiply%2A> method defines the operation of the multiplication operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="d7187-1242">Он включает следующий код:</span><span class="sxs-lookup"><span data-stu-id="d7187-1242">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numeric.BigInteger.Class#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/cs/BigInteger_Examples.cs#11)]
 [!code-vb[System.Numeric.BigInteger.Class#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/vb/BigInteger_Examples.vb#11)]  
  
 <span data-ttu-id="d7187-1243">Эквивалентным методом для этого оператора является <xref:System.Numerics.BigInteger.Multiply(System.Numerics.BigInteger,System.Numerics.BigInteger)?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="d7187-1243">The equivalent method for this operator is <xref:System.Numerics.BigInteger.Multiply(System.Numerics.BigInteger,System.Numerics.BigInteger)?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="M:System.Numerics.BigInteger.Multiply(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      </Docs>
    </Member>
    <Member MemberName="op_OnesComplement">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger operator ~ (System.Numerics.BigInteger value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_OnesComplement(valuetype System.Numerics.BigInteger value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_OnesComplement(System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator Not (value As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger operator ~(System::Numerics::BigInteger value);" />
      <MemberSignature Language="F#" Value="static member op_OnesComplement : System.Numerics.BigInteger -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.op_OnesComplement value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d7187-1244">Целочисленное значение.</span><span class="sxs-lookup"><span data-stu-id="d7187-1244">An integer value.</span></span></param>
        <summary><span data-ttu-id="d7187-1245">Возвращает результат битовой операции дополнения до единицы для значения <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-1245">Returns the bitwise one's complement of a <see cref="T:System.Numerics.BigInteger" /> value.</span></span></summary>
        <returns><span data-ttu-id="d7187-1246">Битовое дополнение значения <paramref name="value" /> до единицы.</span><span class="sxs-lookup"><span data-stu-id="d7187-1246">The bitwise one's complement of <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7187-1247">Метод определяет операцию побитового <xref:System.Numerics.BigInteger> оператора дополнения до одного значения. <xref:System.Numerics.BigInteger.op_OnesComplement%2A></span><span class="sxs-lookup"><span data-stu-id="d7187-1247">The <xref:System.Numerics.BigInteger.op_OnesComplement%2A> method defines the operation of the bitwise one's complement operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="d7187-1248">Побитовый оператор дополнения до единицы изменяет каждый бит на числовое значение.</span><span class="sxs-lookup"><span data-stu-id="d7187-1248">The bitwise one's complement operator reverses each bit in a numeric value.</span></span> <span data-ttu-id="d7187-1249">Это значит, что биты `value` в 0 имеют значение 1 в результате, а биты, равные 1, в результате имеют значение 0.</span><span class="sxs-lookup"><span data-stu-id="d7187-1249">That is, bits in `value` that are 0 are set to 1 in the result, and bits that are 1 are set to 0 in the result.</span></span> <span data-ttu-id="d7187-1250"><xref:System.Numerics.BigInteger.op_OnesComplement%2A> Метод включает следующий код:</span><span class="sxs-lookup"><span data-stu-id="d7187-1250">The <xref:System.Numerics.BigInteger.op_OnesComplement%2A> method enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.OnesComplement#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.OnesComplement/cs/OnesComplement1.cs#1)]
 [!code-vb[System.Numerics.BigInteger.OnesComplement#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.OnesComplement/vb/OnesComplement1.vb#1)]  
  
 <span data-ttu-id="d7187-1251">Языки, не поддерживающие пользовательские операторы, могут вызывать <xref:System.Numerics.BigInteger.op_OnesComplement%2A> метод непосредственно для выполнения побитовой операции дополнения до одного.</span><span class="sxs-lookup"><span data-stu-id="d7187-1251">Languages that do not support custom operators may be able to call the <xref:System.Numerics.BigInteger.op_OnesComplement%2A> method directly to perform a bitwise one's complement operation.</span></span> <span data-ttu-id="d7187-1252">Например:</span><span class="sxs-lookup"><span data-stu-id="d7187-1252">For example:</span></span>  
  
 [!code-vb[System.Numerics.BigInteger.OnesComplement#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.OnesComplement/vb/onescomplement2.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_RightShift">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger operator &gt;&gt; (System.Numerics.BigInteger value, int shift);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_RightShift(valuetype System.Numerics.BigInteger value, int32 shift) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_RightShift(System.Numerics.BigInteger,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt;&gt; (value As BigInteger, shift As Integer) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger operator &gt;&gt;(System::Numerics::BigInteger value, int shift);" />
      <MemberSignature Language="F#" Value="static member ( &gt;&gt;&gt; ) : System.Numerics.BigInteger * int -&gt; System.Numerics.BigInteger" Usage="value &gt;&gt;&gt; shift" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
        <Parameter Name="shift" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d7187-1253">Значение, для которого необходимо выполнить побитовый сдвиг.</span><span class="sxs-lookup"><span data-stu-id="d7187-1253">The value whose bits are to be shifted.</span></span></param>
        <param name="shift"><span data-ttu-id="d7187-1254">Количество битов, на которое необходимо сдвинуть <paramref name="value" /> вправо.</span><span class="sxs-lookup"><span data-stu-id="d7187-1254">The number of bits to shift <paramref name="value" /> to the right.</span></span></param>
        <summary><span data-ttu-id="d7187-1255">Сдвигает значение <see cref="T:System.Numerics.BigInteger" /> на указанное число битов вправо.</span><span class="sxs-lookup"><span data-stu-id="d7187-1255">Shifts a <see cref="T:System.Numerics.BigInteger" /> value a specified number of bits to the right.</span></span></summary>
        <returns><span data-ttu-id="d7187-1256">Значение, которое было сдвинуто вправо на указанное число бит.</span><span class="sxs-lookup"><span data-stu-id="d7187-1256">A value that has been shifted to the right by the specified number of bits.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7187-1257">Метод определяет операцию побитового оператора сдвига вправо для <xref:System.Numerics.BigInteger> значений. <xref:System.Numerics.BigInteger.op_RightShift%2A></span><span class="sxs-lookup"><span data-stu-id="d7187-1257">The <xref:System.Numerics.BigInteger.op_RightShift%2A> method defines the operation of the bitwise right-shift operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="d7187-1258">Он включает следующий код:</span><span class="sxs-lookup"><span data-stu-id="d7187-1258">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#47](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/RightShift1.cs#47)]
 [!code-vb[System.Numerics.BigInteger.Operators#47](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#47)]  
  
 <span data-ttu-id="d7187-1259">Языки, не поддерживающие пользовательские операторы, могут выполнять побитовую операцию сдвига вправо `value` , `BigInteger.Pow(2, shift)` выделив и вычитая `shift` 1 раз для отрицательных значений.</span><span class="sxs-lookup"><span data-stu-id="d7187-1259">Languages that do not support custom operators can perform a bitwise right-shift operation by dividing `value` by `BigInteger.Pow(2, shift)` and subtracting 1 times `shift` for negative values.</span></span> <span data-ttu-id="d7187-1260">В следующем примере показано, что результаты идентичны результатам использования этого оператора.</span><span class="sxs-lookup"><span data-stu-id="d7187-1260">The following example shows that the results are identical to the results of using this operator.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#48](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/RightShift1.cs#48)]
 [!code-vb[System.Numerics.BigInteger.Operators#48](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#48)]  
  
 <span data-ttu-id="d7187-1261">Если `shift` значение больше или равно числу битов в положительном <xref:System.Numerics.BigInteger> значении, результатом операции сдвига вправо будет <xref:System.Numerics.BigInteger.Zero%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="d7187-1261">If `shift` is greater than or equal to the number of bits in a positive <xref:System.Numerics.BigInteger> value, the result of the right-shift operation is <xref:System.Numerics.BigInteger.Zero%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="d7187-1262">Если `shift` значение больше числа битов в отрицательном <xref:System.Numerics.BigInteger> значении, результатом операции сдвига вправо будет <xref:System.Numerics.BigInteger.MinusOne%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="d7187-1262">If `shift` is greater than the number of bits in a negative <xref:System.Numerics.BigInteger> value, the result of the right-shift operation is <xref:System.Numerics.BigInteger.MinusOne%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Numerics.BigInteger.op_LeftShift(System.Numerics.BigInteger,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="op_Subtraction">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger operator - (System.Numerics.BigInteger left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_Subtraction(valuetype System.Numerics.BigInteger left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Subtraction(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator - (left As BigInteger, right As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger operator -(System::Numerics::BigInteger left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member ( - ) : System.Numerics.BigInteger * System.Numerics.BigInteger -&gt; System.Numerics.BigInteger" Usage="left - right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="d7187-1263">Значение, из которого следует вычитать (уменьшаемое).</span><span class="sxs-lookup"><span data-stu-id="d7187-1263">The value to subtract from (the minuend).</span></span></param>
        <param name="right"><span data-ttu-id="d7187-1264">Значение для вычитания (вычитаемое).</span><span class="sxs-lookup"><span data-stu-id="d7187-1264">The value to subtract (the subtrahend).</span></span></param>
        <summary><span data-ttu-id="d7187-1265">Вычитает значение <see cref="T:System.Numerics.BigInteger" /> из другого значения <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-1265">Subtracts a <see cref="T:System.Numerics.BigInteger" /> value from another <see cref="T:System.Numerics.BigInteger" /> value.</span></span></summary>
        <returns><span data-ttu-id="d7187-1266">Результат вычитания <paramref name="right" /> из <paramref name="left" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-1266">The result of subtracting <paramref name="right" /> from <paramref name="left" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7187-1267">Метод определяет операцию оператора вычитания для <xref:System.Numerics.BigInteger> значений. <xref:System.Numerics.BigInteger.op_Subtraction%2A></span><span class="sxs-lookup"><span data-stu-id="d7187-1267">The <xref:System.Numerics.BigInteger.op_Subtraction%2A> method defines the operation of the subtraction operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="d7187-1268">Он включает следующий код:</span><span class="sxs-lookup"><span data-stu-id="d7187-1268">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numeric.BigInteger.Class#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/cs/BigInteger_Examples.cs#14)]
 [!code-vb[System.Numeric.BigInteger.Class#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/vb/BigInteger_Examples.vb#14)]  
  
 <span data-ttu-id="d7187-1269">Языки, которые не поддерживают пользовательские операторы, могут вызывать <xref:System.Numerics.BigInteger.Subtract%2A?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="d7187-1269">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.Subtract%2A?displayProperty=nameWithType> method instead.</span></span>  
  
 <span data-ttu-id="d7187-1270">Эквивалентным методом для этого оператора является <xref:System.Numerics.BigInteger.Subtract%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="d7187-1270">The equivalent method for this operator is <xref:System.Numerics.BigInteger.Subtract%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="M:System.Numerics.BigInteger.Subtract(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      </Docs>
    </Member>
    <Member MemberName="op_UnaryNegation">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger operator - (System.Numerics.BigInteger value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_UnaryNegation(valuetype System.Numerics.BigInteger value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_UnaryNegation(System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator - (value As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger operator -(System::Numerics::BigInteger value);" />
      <MemberSignature Language="F#" Value="static member ( ~- ) : System.Numerics.BigInteger -&gt; System.Numerics.BigInteger" Usage="- value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d7187-1271">Инвертируемое значение.</span><span class="sxs-lookup"><span data-stu-id="d7187-1271">The value to negate.</span></span></param>
        <summary><span data-ttu-id="d7187-1272">Меняет знак указанного значения BigInteger.</span><span class="sxs-lookup"><span data-stu-id="d7187-1272">Negates a specified BigInteger value.</span></span></summary>
        <returns><span data-ttu-id="d7187-1273">Результат умножения параметра <paramref name="value" /> на минус единицу (-1).</span><span class="sxs-lookup"><span data-stu-id="d7187-1273">The result of the <paramref name="value" /> parameter multiplied by negative one (-1).</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7187-1274">Метод определяет операцию унарного отрицания (или оператор аддитивного инвертирования) для <xref:System.Numerics.BigInteger> значений. <xref:System.Numerics.BigInteger.op_UnaryNegation%2A></span><span class="sxs-lookup"><span data-stu-id="d7187-1274">The <xref:System.Numerics.BigInteger.op_UnaryNegation%2A> method defines the operation of the unary negation operator (or the additive inverse operator) for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="d7187-1275">Операция создает значение, результатом которого является 0 (нуль) при добавлении к исходному номеру.</span><span class="sxs-lookup"><span data-stu-id="d7187-1275">The operation produces a value that results in 0 (zero) when it is added to the original number.</span></span> <span data-ttu-id="d7187-1276">Языки, которые не поддерживают пользовательские операторы, могут вызывать <xref:System.Numerics.BigInteger.Negate%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="d7187-1276">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.Negate%2A> method instead.</span></span>  
  
 <span data-ttu-id="d7187-1277">Эквивалентным методом для этого оператора является<xref:System.Numerics.BigInteger.Negate%28System.Numerics.BigInteger%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="d7187-1277">The equivalent method for this operator is <xref:System.Numerics.BigInteger.Negate%28System.Numerics.BigInteger%29?displayProperty=nameWithType></span></span>  
  
## Examples  
 <span data-ttu-id="d7187-1278">В следующем примере показаны три разных способа отрицания значения <xref:System.Numerics.BigInteger> объекта.</span><span class="sxs-lookup"><span data-stu-id="d7187-1278">The following example illustrates three different ways to negate the value of a <xref:System.Numerics.BigInteger> object.</span></span>  
  
 [!code-csharp[System.Numeric.BigInteger.Class#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/cs/BigInteger_Examples.cs#16)]
 [!code-vb[System.Numeric.BigInteger.Class#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/vb/BigInteger_Examples.vb#16)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_UnaryPlus">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger operator + (System.Numerics.BigInteger value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_UnaryPlus(valuetype System.Numerics.BigInteger value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_UnaryPlus(System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator + (value As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger operator +(System::Numerics::BigInteger value);" />
      <MemberSignature Language="F#" Value="static member ( ~+ ) : System.Numerics.BigInteger -&gt; System.Numerics.BigInteger" Usage="+ value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d7187-1279">Целочисленное значение.</span><span class="sxs-lookup"><span data-stu-id="d7187-1279">An integer value.</span></span></param>
        <summary><span data-ttu-id="d7187-1280">Возвращает значение операнда <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-1280">Returns the value of the <see cref="T:System.Numerics.BigInteger" /> operand.</span></span> <span data-ttu-id="d7187-1281">(Знак операнда не изменяется.)</span><span class="sxs-lookup"><span data-stu-id="d7187-1281">(The sign of the operand is unchanged.)</span></span></summary>
        <returns><span data-ttu-id="d7187-1282">Значение операнда <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-1282">The value of the <paramref name="value" /> operand.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7187-1283">Метод определяет операцию унарного положительного оператора для <xref:System.Numerics.BigInteger> значений. <xref:System.Numerics.BigInteger.op_UnaryPlus%2A></span><span class="sxs-lookup"><span data-stu-id="d7187-1283">The <xref:System.Numerics.BigInteger.op_UnaryPlus%2A> method defines the operation of the unary positive operator for <xref:System.Numerics.BigInteger> values.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Parse">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d7187-1284">Преобразует строковое представление числа в его эквивалент типа <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-1284">Converts the string representation of a number to its <see cref="T:System.Numerics.BigInteger" /> equivalent.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger Parse (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.BigInteger Parse(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.Parse(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (value As String) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger Parse(System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member Parse : string -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.Parse value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d7187-1285">Строка, содержащая преобразуемое число.</span><span class="sxs-lookup"><span data-stu-id="d7187-1285">A string that contains the number to convert.</span></span></param>
        <summary><span data-ttu-id="d7187-1286">Преобразует строковое представление числа в его эквивалент типа <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-1286">Converts the string representation of a number to its <see cref="T:System.Numerics.BigInteger" /> equivalent.</span></span></summary>
        <returns><span data-ttu-id="d7187-1287">Значение, эквивалентное числу, которое задается параметром <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-1287">A value that is equivalent to the number specified in the <paramref name="value" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7187-1288">`value` Параметр должен быть строковым представлением числа в следующей форме.</span><span class="sxs-lookup"><span data-stu-id="d7187-1288">The `value` parameter should be the string representation of a number in the following form.</span></span>  
  
 <span data-ttu-id="d7187-1289">[*WS*] [*Sign*] *цифры* [*WS*]</span><span class="sxs-lookup"><span data-stu-id="d7187-1289">[*ws*][*sign*]*digits*[*ws*]</span></span>  
  
 <span data-ttu-id="d7187-1290">Элементы в квадратных скобках ([и]) являются необязательными.</span><span class="sxs-lookup"><span data-stu-id="d7187-1290">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="d7187-1291">Каждый из элементов описан в таблице ниже.</span><span class="sxs-lookup"><span data-stu-id="d7187-1291">The following table describes each element.</span></span>  
  
|<span data-ttu-id="d7187-1292">Элемент</span><span class="sxs-lookup"><span data-stu-id="d7187-1292">Element</span></span>|<span data-ttu-id="d7187-1293">Описание</span><span class="sxs-lookup"><span data-stu-id="d7187-1293">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="d7187-1294">*ws*</span><span class="sxs-lookup"><span data-stu-id="d7187-1294">*ws*</span></span>|<span data-ttu-id="d7187-1295">Необязательный пробел.</span><span class="sxs-lookup"><span data-stu-id="d7187-1295">Optional white space.</span></span>|  
|<span data-ttu-id="d7187-1296">*sign*</span><span class="sxs-lookup"><span data-stu-id="d7187-1296">*sign*</span></span>|<span data-ttu-id="d7187-1297">Необязательный знак.</span><span class="sxs-lookup"><span data-stu-id="d7187-1297">An optional sign.</span></span> <span data-ttu-id="d7187-1298">Допустимые символы знака определяются <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType> свойствами и <xref:System.Globalization.NumberFormatInfo.PositiveSign%2A?displayProperty=nameWithType> текущего языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="d7187-1298">Valid sign characters are determined by the <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType> and <xref:System.Globalization.NumberFormatInfo.PositiveSign%2A?displayProperty=nameWithType> properties of the current culture.</span></span>|  
|<span data-ttu-id="d7187-1299">*digits*</span><span class="sxs-lookup"><span data-stu-id="d7187-1299">*digits*</span></span>|<span data-ttu-id="d7187-1300">Последовательность цифр в диапазоне от 0 до 9.</span><span class="sxs-lookup"><span data-stu-id="d7187-1300">A sequence of digits ranging from 0 to 9.</span></span> <span data-ttu-id="d7187-1301">Все ведущие нули игнорируются.</span><span class="sxs-lookup"><span data-stu-id="d7187-1301">Any leading zeros are ignored.</span></span>|  
  
> [!NOTE]
>  <span data-ttu-id="d7187-1302">Строка, заданная `value` параметром, интерпретируется <xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType> с помощью стиля.</span><span class="sxs-lookup"><span data-stu-id="d7187-1302">The string specified by the `value` parameter is interpreted by using the <xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType> style.</span></span> <span data-ttu-id="d7187-1303">Он не может содержать разделители групп или десятичный разделитель и не может иметь дробную часть.</span><span class="sxs-lookup"><span data-stu-id="d7187-1303">It cannot contain any group separators or decimal separator, and it cannot have a decimal portion.</span></span>  
  
 <span data-ttu-id="d7187-1304">Параметр анализируется с помощью сведений о форматировании <xref:System.Globalization.NumberFormatInfo?displayProperty=nameWithType> в объекте, инициализированном для текущего языка и региональных параметров системы. `value`</span><span class="sxs-lookup"><span data-stu-id="d7187-1304">The `value` parameter is parsed by using the formatting information in a <xref:System.Globalization.NumberFormatInfo?displayProperty=nameWithType> object that is initialized for the current system culture.</span></span> <span data-ttu-id="d7187-1305">Для получения дополнительной информации см. <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="d7187-1305">For more information, see <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="d7187-1306">Чтобы выполнить синтаксический анализ строки с использованием сведений о форматировании определенного языка и региональных <xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.IFormatProvider%29> параметров, используйте метод.</span><span class="sxs-lookup"><span data-stu-id="d7187-1306">To parse a string by using the formatting information of a specific culture, use the <xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.IFormatProvider%29> method.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="d7187-1307">При использовании <xref:System.Numerics.BigInteger.Parse%2A> метода для приема-передачи строкового представления <xref:System.Numerics.BigInteger> значения <xref:System.Numerics.BigInteger.ToString%2A> , выводимого методом, следует использовать <xref:System.Numerics.BigInteger.ToString%28System.String%29?displayProperty=nameWithType> метод с описателем формата R для создания строкового представления элемента <xref:System.Numerics.BigInteger> значение.</span><span class="sxs-lookup"><span data-stu-id="d7187-1307">If you use the <xref:System.Numerics.BigInteger.Parse%2A> method to round-trip the string representation of a <xref:System.Numerics.BigInteger> value that was output by the <xref:System.Numerics.BigInteger.ToString%2A> method, you should use the <xref:System.Numerics.BigInteger.ToString%28System.String%29?displayProperty=nameWithType> method with the "R" format specifier to generate the string representation of the <xref:System.Numerics.BigInteger> value.</span></span> <span data-ttu-id="d7187-1308">В противном случае строковое представление <xref:System.Numerics.BigInteger> сохраняет только 50 наиболее значимых цифр исходного значения, а данные могут быть потеряны при <xref:System.Numerics.BigInteger.Parse%2A> использовании метода для восстановления <xref:System.Numerics.BigInteger> значения.</span><span class="sxs-lookup"><span data-stu-id="d7187-1308">Otherwise, the string representation of the <xref:System.Numerics.BigInteger> preserves only the 50 most significant digits of the original value, and data may be lost when you use the <xref:System.Numerics.BigInteger.Parse%2A> method to restore the <xref:System.Numerics.BigInteger> value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d7187-1309">В следующем примере используется <xref:System.Numerics.BigInteger.Parse%28System.String%29> метод для создания экземпляра двух <xref:System.Numerics.BigInteger> объектов.</span><span class="sxs-lookup"><span data-stu-id="d7187-1309">The following example uses the <xref:System.Numerics.BigInteger.Parse%28System.String%29> method to instantiate two <xref:System.Numerics.BigInteger> objects.</span></span> <span data-ttu-id="d7187-1310">Он умножает каждый объект на другое число, а затем вызывает <xref:System.Numerics.BigInteger.Compare%2A> метод для определения связи между двумя значениями.</span><span class="sxs-lookup"><span data-stu-id="d7187-1310">It multiplies each object by another number and then calls the <xref:System.Numerics.BigInteger.Compare%2A> method to determine the relationship between the two values.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Parse#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Parse/cs/Parse1.cs#1)]
 [!code-vb[System.Numerics.BigInteger.Parse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Parse/vb/Parse1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d7187-1311">Свойство <paramref name="value" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-1311"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="d7187-1312"><paramref name="value" /> имеет неправильный формат.</span><span class="sxs-lookup"><span data-stu-id="d7187-1312"><paramref name="value" /> is not in the correct format.</span></span></exception>
        <altmember cref="Overload:System.Numerics.BigInteger.TryParse" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger Parse (string value, System.Globalization.NumberStyles style);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.BigInteger Parse(string value, valuetype System.Globalization.NumberStyles style) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (value As String, style As NumberStyles) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger Parse(System::String ^ value, System::Globalization::NumberStyles style);" />
      <MemberSignature Language="F#" Value="static member Parse : string * System.Globalization.NumberStyles -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.Parse (value, style)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d7187-1313">Строка, содержащая преобразуемое число.</span><span class="sxs-lookup"><span data-stu-id="d7187-1313">A string that contains a number to convert.</span></span></param>
        <param name="style"><span data-ttu-id="d7187-1314">Побитовое сочетание значений перечисления, которое показывает разрешенный формат параметра <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-1314">A bitwise combination of the enumeration values that specify the permitted format of <paramref name="value" />.</span></span></param>
        <summary><span data-ttu-id="d7187-1315">Преобразует строковое представление числа с указанным стилем в его эквивалент в формате <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-1315">Converts the string representation of a number in a specified style to its <see cref="T:System.Numerics.BigInteger" /> equivalent.</span></span></summary>
        <returns><span data-ttu-id="d7187-1316">Значение, эквивалентное числу, которое задается параметром <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-1316">A value that is equivalent to the number specified in the <paramref name="value" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7187-1317">Параметр определяет элементы стиля (такие как пробелы, символ знака разделителя группы или символ десятичной запятой), допустимые `value` в параметре для успешной операции синтаксического анализа. `style`</span><span class="sxs-lookup"><span data-stu-id="d7187-1317">The `style` parameter defines the style elements (such as white space, the positive or negative sign symbol, the group separator symbol, or the decimal point symbol) that are allowed in the `value` parameter for the parse operation to succeed.</span></span> <span data-ttu-id="d7187-1318">`styles`аргумент должен представлять собой сочетание битовых флагов <xref:System.Globalization.NumberStyles> из перечисления.</span><span class="sxs-lookup"><span data-stu-id="d7187-1318">`styles` must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration.</span></span> <span data-ttu-id="d7187-1319">Параметр делает перегрузку этого метода полезной `value` , если содержит строковое представление шестнадцатеричного значения, когда система счисления (десятичная `value` или шестнадцатеричная), представленная, известна только во время выполнения или когда `style` необходимо запретить пробелы или символы знака в `value`.</span><span class="sxs-lookup"><span data-stu-id="d7187-1319">The `style` parameter makes this method overload useful when `value` contains the string representation of a hexadecimal value, when the number system (decimal or hexadecimal) represented by `value` is known only at run time, or when you want to disallow white space or a sign symbol in `value`.</span></span>  
  
 <span data-ttu-id="d7187-1320">В зависимости от значения `style` `value` параметр может включать следующие элементы:</span><span class="sxs-lookup"><span data-stu-id="d7187-1320">Depending on the value of `style`, the `value` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="d7187-1321">[*WS*] [*$*] [*знак*] [*цифры*,]*цифры*[. *fractional_digits*] [E [*Sign*]*exponential_digits*] [*WS*]</span><span class="sxs-lookup"><span data-stu-id="d7187-1321">[*ws*][*$*][*sign*][*digits*,]*digits*[.*fractional_digits*][E[*sign*]*exponential_digits*][*ws*]</span></span>  
  
 <span data-ttu-id="d7187-1322">При `style` <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> включении`value` параметр может содержать следующие элементы:</span><span class="sxs-lookup"><span data-stu-id="d7187-1322">If `style` includes <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>, the `value` parameter may contain the following elements:</span></span>  
  
 <span data-ttu-id="d7187-1323">[*WS*] *хексдигитс* [*WS*]</span><span class="sxs-lookup"><span data-stu-id="d7187-1323">[*ws*]*hexdigits*[*ws*]</span></span>  
  
 <span data-ttu-id="d7187-1324">Элементы в квадратных скобках ([и]) являются необязательными.</span><span class="sxs-lookup"><span data-stu-id="d7187-1324">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="d7187-1325">Каждый из элементов описан в таблице ниже.</span><span class="sxs-lookup"><span data-stu-id="d7187-1325">The following table describes each element.</span></span>  
  
|<span data-ttu-id="d7187-1326">Элемент</span><span class="sxs-lookup"><span data-stu-id="d7187-1326">Element</span></span>|<span data-ttu-id="d7187-1327">Описание</span><span class="sxs-lookup"><span data-stu-id="d7187-1327">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="d7187-1328">*ws*</span><span class="sxs-lookup"><span data-stu-id="d7187-1328">*ws*</span></span>|<span data-ttu-id="d7187-1329">Необязательный пробел.</span><span class="sxs-lookup"><span data-stu-id="d7187-1329">Optional white space.</span></span> <span data-ttu-id="d7187-1330">Пробел может `value` присутствовать в начале, если `style` включает <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> флаг, `value` и может <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> находиться в конце, если `style` включает флаг.</span><span class="sxs-lookup"><span data-stu-id="d7187-1330">White space can appear at the start of `value` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> flag, and it can appear at the end of `value` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> flag.</span></span>|  
|*$*|<span data-ttu-id="d7187-1331">Символ валюты, зависящий от языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="d7187-1331">A culture-specific currency symbol.</span></span> <span data-ttu-id="d7187-1332">Его расположение в строке определяется <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType> свойствами и <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType> текущего языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="d7187-1332">Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType> and <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType> properties of the current culture.</span></span> <span data-ttu-id="d7187-1333">Символ валюты текущего языка и региональных параметров может отображаться `value` в `style` , если <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> включает флаг.</span><span class="sxs-lookup"><span data-stu-id="d7187-1333">The current culture's currency symbol can appear in `value` if `style` includes the <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="d7187-1334">*sign*</span><span class="sxs-lookup"><span data-stu-id="d7187-1334">*sign*</span></span>|<span data-ttu-id="d7187-1335">Необязательный знак.</span><span class="sxs-lookup"><span data-stu-id="d7187-1335">An optional sign.</span></span> <span data-ttu-id="d7187-1336">Знак `value` может отображаться в начале, если `style` включает <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> флаг, `value` и может <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> находиться в конце, если `style` включает флаг.</span><span class="sxs-lookup"><span data-stu-id="d7187-1336">The sign can appear at the start of `value` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> flag, and it can appear at the end of `value` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="d7187-1337">Круглые скобки могут использоваться в `value` , чтобы указать отрицательное значение `style` , если <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> включает флаг.</span><span class="sxs-lookup"><span data-stu-id="d7187-1337">Parentheses can be used in `value` to indicate a negative value if `style` includes the <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="d7187-1338">*digits*</span><span class="sxs-lookup"><span data-stu-id="d7187-1338">*digits*</span></span><br /><br /> <span data-ttu-id="d7187-1339">*fractional_digits*</span><span class="sxs-lookup"><span data-stu-id="d7187-1339">*fractional_digits*</span></span><br /><br /> <span data-ttu-id="d7187-1340">*exponential_digits*</span><span class="sxs-lookup"><span data-stu-id="d7187-1340">*exponential_digits*</span></span>|<span data-ttu-id="d7187-1341">Последовательность цифр от 0 до 9.</span><span class="sxs-lookup"><span data-stu-id="d7187-1341">A sequence of digits from 0 through 9.</span></span> <span data-ttu-id="d7187-1342">Для *fractional_digits*допустима только цифра 0.</span><span class="sxs-lookup"><span data-stu-id="d7187-1342">For *fractional_digits*, only the digit 0 is valid.</span></span>|  
|<span data-ttu-id="d7187-1343">*,*</span><span class="sxs-lookup"><span data-stu-id="d7187-1343">*,*</span></span>|<span data-ttu-id="d7187-1344">Символ разделителя группы, зависящий от языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="d7187-1344">A culture-specific group separator symbol.</span></span> <span data-ttu-id="d7187-1345">Разделитель групп текущего языка и региональных параметров может отображаться `value` в `style` , если <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> включает флаг.</span><span class="sxs-lookup"><span data-stu-id="d7187-1345">The current culture's group separator can appear in `value` if `style` includes the <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="d7187-1346">*.*</span><span class="sxs-lookup"><span data-stu-id="d7187-1346">*.*</span></span>|<span data-ttu-id="d7187-1347">Символ десятичной запятой, зависящий от языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="d7187-1347">A culture-specific decimal point symbol.</span></span> <span data-ttu-id="d7187-1348">Символ десятичной запятой текущего языка и региональных параметров может `value` присутствовать в <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> , если `style` включает флаг.</span><span class="sxs-lookup"><span data-stu-id="d7187-1348">The current culture's decimal point symbol can appear in `value` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="d7187-1349">Только цифра 0 может присутствовать в виде дробной части для выполнения операции синтаксического анализа. Если *fractional_digits* включает любую другую цифру, <xref:System.FormatException> создается исключение.</span><span class="sxs-lookup"><span data-stu-id="d7187-1349">Only the digit 0 can appear as a fractional digit for the parse operation to succeed; if *fractional_digits* includes any other digit, a <xref:System.FormatException> is thrown.</span></span>|  
|<span data-ttu-id="d7187-1350">E</span><span class="sxs-lookup"><span data-stu-id="d7187-1350">E</span></span>|<span data-ttu-id="d7187-1351">Символ "e" или "E", указывающий, что значение представлено в экспоненциальной (экспоненциальной) нотации.</span><span class="sxs-lookup"><span data-stu-id="d7187-1351">The "e" or "E" character, which indicates that the value is represented in exponential (scientific) notation.</span></span> <span data-ttu-id="d7187-1352">Параметр может представлять число в экспоненциальной нотации, `style` <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> если включает флаг. `value`</span><span class="sxs-lookup"><span data-stu-id="d7187-1352">The `value` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="d7187-1353">*хексдигитс*</span><span class="sxs-lookup"><span data-stu-id="d7187-1353">*hexdigits*</span></span>|<span data-ttu-id="d7187-1354">Последовательность шестнадцатеричных цифр от 0 до f или от 0 до F.</span><span class="sxs-lookup"><span data-stu-id="d7187-1354">A sequence of hexadecimal digits from 0 through f, or 0 through F.</span></span>|  
  
> [!NOTE]
> <span data-ttu-id="d7187-1355">Все завершающие символы NUL (U + 0000) в `s` игнорируются операцией синтаксического анализа, независимо от значения `style` аргумента.</span><span class="sxs-lookup"><span data-stu-id="d7187-1355">Any terminating NUL (U+0000) characters in `s` are ignored by the parsing operation, regardless of the value of the `style` argument.</span></span>

 <span data-ttu-id="d7187-1356">Строка с цифрами (которая соответствует <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> стилю) всегда будет успешно проанализирована.</span><span class="sxs-lookup"><span data-stu-id="d7187-1356">A string with digits only (which corresponds to the <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> style) always parses successfully.</span></span> <span data-ttu-id="d7187-1357">Большинство оставшихся <xref:System.Globalization.NumberStyles> элементов управляют элементами управления, которые могут присутствовать, но не обязательно должны присутствовать во входной строке.</span><span class="sxs-lookup"><span data-stu-id="d7187-1357">Most of the remaining <xref:System.Globalization.NumberStyles> members control elements that may be present, but are not required to be present, in the input string.</span></span> <span data-ttu-id="d7187-1358">В следующей таблице показано, как <xref:System.Globalization.NumberStyles> отдельные члены влияют на элементы, которые могут присутствовать в. `value`</span><span class="sxs-lookup"><span data-stu-id="d7187-1358">The following table indicates how individual <xref:System.Globalization.NumberStyles> members affect the elements that may be present in `value`.</span></span>  
  
|<span data-ttu-id="d7187-1359">Значение`NumberStyles`</span><span class="sxs-lookup"><span data-stu-id="d7187-1359">`NumberStyles` value</span></span>|<span data-ttu-id="d7187-1360">Элементы, разрешенные в `value` в дополнение к цифрам</span><span class="sxs-lookup"><span data-stu-id="d7187-1360">Elements permitted in `value` in addition to digits</span></span>|  
|--------------------------|---------------------------------------------------------|  
|<xref:System.Globalization.NumberStyles.None>|<span data-ttu-id="d7187-1361">Только элемент *digits* .</span><span class="sxs-lookup"><span data-stu-id="d7187-1361">The *digits* element only.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowDecimalPoint>|<span data-ttu-id="d7187-1362">Элементы десятичной запятой (.) \*\* и дробные разряды.</span><span class="sxs-lookup"><span data-stu-id="d7187-1362">The decimal point (.) and *fractional-digits* elements.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowExponent>|<span data-ttu-id="d7187-1363">Символ "e" или "E", указывающий экспоненциальную нотацию, а также *exponential_digits*.</span><span class="sxs-lookup"><span data-stu-id="d7187-1363">The "e" or "E" character, which indicates exponential notation, along with *exponential_digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingWhite>|<span data-ttu-id="d7187-1364">Элемент *WS* в начале `value`.</span><span class="sxs-lookup"><span data-stu-id="d7187-1364">The *ws* element at the start of `value`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingWhite>|<span data-ttu-id="d7187-1365">Элемент *WS* в конце `value`.</span><span class="sxs-lookup"><span data-stu-id="d7187-1365">The *ws* element at the end of `value`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingSign>|<span data-ttu-id="d7187-1366">Элемент *Sign* в начале `value`.</span><span class="sxs-lookup"><span data-stu-id="d7187-1366">The *sign* element at the start of `value`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingSign>|<span data-ttu-id="d7187-1367">Элемент *Sign* в конце `value`.</span><span class="sxs-lookup"><span data-stu-id="d7187-1367">The *sign* element at the end of `value`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowParentheses>|<span data-ttu-id="d7187-1368">Элемент *Sign* в виде круглых скобок, охватывающих числовое значение.</span><span class="sxs-lookup"><span data-stu-id="d7187-1368">The *sign* element in the form of parentheses enclosing the numeric value.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowThousands>|<span data-ttu-id="d7187-1369">Элемент разделителя групп (,).</span><span class="sxs-lookup"><span data-stu-id="d7187-1369">The group separator (,) element.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowCurrencySymbol>|<span data-ttu-id="d7187-1370">Элемент Currency ($).</span><span class="sxs-lookup"><span data-stu-id="d7187-1370">The currency ($) element.</span></span>|  
|<xref:System.Globalization.NumberStyles.Currency>|<span data-ttu-id="d7187-1371">Все элементы.</span><span class="sxs-lookup"><span data-stu-id="d7187-1371">All elements.</span></span> <span data-ttu-id="d7187-1372">`value` Однако не может представлять шестнадцатеричное число или число в экспоненциальной нотации.</span><span class="sxs-lookup"><span data-stu-id="d7187-1372">However, `value` cannot represent a hexadecimal number or a number in exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Float>|<span data-ttu-id="d7187-1373">Элемент *WS* в начале или конце `value` `value`, *знак* в начале и символ десятичной запятой (*.*).</span><span class="sxs-lookup"><span data-stu-id="d7187-1373">The *ws* element at the start or end of `value`, *sign* at the start of `value`, and the decimal point (*.*) symbol.</span></span> <span data-ttu-id="d7187-1374">`value` Параметр также может использовать экспоненциальную нотацию.</span><span class="sxs-lookup"><span data-stu-id="d7187-1374">The `value` parameter can also use exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Number>|<span data-ttu-id="d7187-1375">Элементы `ws`, `sign`, разделители групп (*,*) и десятичной запятой (*.*).</span><span class="sxs-lookup"><span data-stu-id="d7187-1375">The `ws`, `sign`, group separator (*,*), and decimal point (*.*) elements.</span></span>|  
|<xref:System.Globalization.NumberStyles.Any>|<span data-ttu-id="d7187-1376">Все элементы.</span><span class="sxs-lookup"><span data-stu-id="d7187-1376">All elements.</span></span> <span data-ttu-id="d7187-1377">`value` Однако не может представлять шестнадцатеричное число.</span><span class="sxs-lookup"><span data-stu-id="d7187-1377">However, `value` cannot represent a hexadecimal number.</span></span>|  
  
> [!IMPORTANT]
>  <span data-ttu-id="d7187-1378">При использовании <xref:System.Numerics.BigInteger.Parse%2A> метода для приема-передачи строкового представления <xref:System.Numerics.BigInteger> значения <xref:System.Numerics.BigInteger.ToString%2A> , выводимого методом, следует использовать <xref:System.Numerics.BigInteger.ToString%28System.String%29?displayProperty=nameWithType> метод с описателем формата R для создания строкового представления элемента <xref:System.Numerics.BigInteger> значение.</span><span class="sxs-lookup"><span data-stu-id="d7187-1378">If you use the <xref:System.Numerics.BigInteger.Parse%2A> method to round-trip the string representation of a <xref:System.Numerics.BigInteger> value that was output by the <xref:System.Numerics.BigInteger.ToString%2A> method, you should use the <xref:System.Numerics.BigInteger.ToString%28System.String%29?displayProperty=nameWithType> method with the "R" format specifier to generate the string representation of the <xref:System.Numerics.BigInteger> value.</span></span> <span data-ttu-id="d7187-1379">В противном случае строковое представление <xref:System.Numerics.BigInteger> сохраняет только 50 наиболее значимых цифр исходного значения, а данные могут быть потеряны при <xref:System.Numerics.BigInteger.Parse%2A> использовании метода для восстановления <xref:System.Numerics.BigInteger> значения.</span><span class="sxs-lookup"><span data-stu-id="d7187-1379">Otherwise, the string representation of the <xref:System.Numerics.BigInteger> preserves only the 50 most significant digits of the original value, and data may be lost when you use the <xref:System.Numerics.BigInteger.Parse%2A> method to restore the <xref:System.Numerics.BigInteger> value.</span></span>  
  
 <span data-ttu-id="d7187-1380">В отличие от других <xref:System.Globalization.NumberStyles> значений, допускающих, но не требующих наличия определенных элементов стиля в `value`, <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> значение стиля означает, что отдельные числовые символы в `value` всегда будут интерпретироваться как шестнадцатеричные символы.</span><span class="sxs-lookup"><span data-stu-id="d7187-1380">Unlike the other <xref:System.Globalization.NumberStyles> values, which allow for, but do not require, the presence of particular style elements in `value`, the <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> style value means that the individual numeric characters in `value` are always interpreted as hexadecimal characters.</span></span> <span data-ttu-id="d7187-1381">Допустимые шестнадцатеричные символы: 0-9, A-F и A-f.</span><span class="sxs-lookup"><span data-stu-id="d7187-1381">Valid hexadecimal characters are 0-9, A-F, and a-f.</span></span> <span data-ttu-id="d7187-1382">Единственными другими флагами, которые можно сочетать с `style` параметром <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> , <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>являются и.</span><span class="sxs-lookup"><span data-stu-id="d7187-1382">The only other flags that can be combined with the `style` parameter are <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> and <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>.</span></span> <span data-ttu-id="d7187-1383">(Перечисление включает в себя <xref:System.Globalization.NumberStyles.HexNumber>стиль составного числа, включающий оба флага пробела.) <xref:System.Globalization.NumberStyles></span><span class="sxs-lookup"><span data-stu-id="d7187-1383">(The <xref:System.Globalization.NumberStyles> enumeration includes a composite number style, <xref:System.Globalization.NumberStyles.HexNumber>, that includes both white-space flags.)</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d7187-1384">Если `value` является строковым представлением шестнадцатеричного числа, ему не может предшествовать любое декорирование ( `0x` например, или `&h`), которое отличает его как шестнадцатеричное число.</span><span class="sxs-lookup"><span data-stu-id="d7187-1384">If `value` is the string representation of a hexadecimal number, it cannot be preceded by any decoration (such as `0x` or `&h`) that differentiates it as a hexadecimal number.</span></span> <span data-ttu-id="d7187-1385">Это приводит к сбою преобразования.</span><span class="sxs-lookup"><span data-stu-id="d7187-1385">This causes the conversion to fail.</span></span>  
  
 <span data-ttu-id="d7187-1386">Если `value` является шестнадцатеричной строкой <xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%29> , метод интерпретирует `value` как отрицательное число, хранящееся в двух представлениях дополнения, если первые две `0x80`шестнадцатеричные цифры больше или равны.</span><span class="sxs-lookup"><span data-stu-id="d7187-1386">If `value` is a hexadecimal string, the <xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%29> method interprets `value` as a negative number stored by using two's complement representation if its first two hexadecimal digits are greater than or equal to `0x80`.</span></span> <span data-ttu-id="d7187-1387">Иными словами, метод интерпретирует бит наивысшего порядка первого байта в `value` качестве бита знака.</span><span class="sxs-lookup"><span data-stu-id="d7187-1387">In other words, the method interprets the highest-order bit of the first byte in `value` as the sign bit.</span></span> <span data-ttu-id="d7187-1388">Чтобы убедиться, что шестнадцатеричная строка правильно интерпретируется как положительное число, первая цифра в `value` должна иметь нулевое значение.</span><span class="sxs-lookup"><span data-stu-id="d7187-1388">To make sure that a hexadecimal string is correctly interpreted as a positive number, the first digit in `value` must have a value of zero.</span></span> <span data-ttu-id="d7187-1389">Например, метод интерпретирует `0x80` как отрицательное значение, но интерпретирует либо `0x080` или `0x0080` как положительное значение.</span><span class="sxs-lookup"><span data-stu-id="d7187-1389">For example, the method interprets `0x80` as a negative value, but it interprets either `0x080` or `0x0080` as a positive value.</span></span> <span data-ttu-id="d7187-1390">В следующем примере показано различие между шестнадцатеричными строками, представляющими отрицательные и положительные значения.</span><span class="sxs-lookup"><span data-stu-id="d7187-1390">The following example illustrates the difference between hexadecimal strings that represent negative and positive values.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Parse#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Parse/cs/ParseHex1.cs#3)]
 [!code-vb[System.Numerics.BigInteger.Parse#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Parse/vb/ParseHex1.vb#3)]  
  
 <span data-ttu-id="d7187-1391">Параметр анализируется с помощью сведений о форматировании <xref:System.Globalization.NumberFormatInfo> в объекте, инициализированном для текущего языка и региональных параметров системы. `value`</span><span class="sxs-lookup"><span data-stu-id="d7187-1391">The `value` parameter is parsed by using the formatting information in a <xref:System.Globalization.NumberFormatInfo> object that is initialized for the current system culture.</span></span> <span data-ttu-id="d7187-1392">Чтобы указать язык и региональные параметры, сведения о форматировании которых используются для операции синтаксического анализа, вызовите <xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29> перегрузку.</span><span class="sxs-lookup"><span data-stu-id="d7187-1392">To specify the culture whose formatting information is used for the parse operation, call the <xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29> overload.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d7187-1393">В следующем примере показаны вызовы <xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%29> метода с несколькими возможными значениями `style` для параметра.</span><span class="sxs-lookup"><span data-stu-id="d7187-1393">The following example illustrates calls to the <xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%29> method with several possible values for the `style` parameter.</span></span> <span data-ttu-id="d7187-1394">В нем показано, как интерпретировать строку как шестнадцатеричное значение и как запретить пробелы и символы подписывания.</span><span class="sxs-lookup"><span data-stu-id="d7187-1394">It illustrates how to interpret a string as a hexadecimal value, and how to disallow spaces and sign symbols.</span></span>  
  
 [!code-csharp[System.Numeric.BigInteger.Parse#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Parse/cs/System.Numeric.BigInteger.Parse.cs#5)]
 [!code-vb[System.Numeric.BigInteger.Parse#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Parse/vb/System.Numeric.BigInteger.Parse.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d7187-1395"><paramref name="style" /> не является значением <see cref="T:System.Globalization.NumberStyles" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-1395"><paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value.</span></span>  
  
<span data-ttu-id="d7187-1396">- или -</span><span class="sxs-lookup"><span data-stu-id="d7187-1396">-or-</span></span> 
 <span data-ttu-id="d7187-1397"><paramref name="style" /> включает флаги <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> и <see cref="F:System.Globalization.NumberStyles.HexNumber" /> вместе с другим значениями.</span><span class="sxs-lookup"><span data-stu-id="d7187-1397"><paramref name="style" /> includes the <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> or <see cref="F:System.Globalization.NumberStyles.HexNumber" /> flag along with another value.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d7187-1398"><paramref name="value" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-1398"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="d7187-1399"><paramref name="value" /> не соответствует образцу ввода, заданному <see cref="T:System.Globalization.NumberStyles" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-1399"><paramref name="value" /> does not comply with the input pattern specified by <see cref="T:System.Globalization.NumberStyles" />.</span></span></exception>
        <altmember cref="Overload:System.Numerics.BigInteger.TryParse" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger Parse (string value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.BigInteger Parse(string value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.Parse(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (value As String, provider As IFormatProvider) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger Parse(System::String ^ value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member Parse : string * IFormatProvider -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.Parse (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d7187-1400">Строка, содержащая преобразуемое число.</span><span class="sxs-lookup"><span data-stu-id="d7187-1400">A string that contains a number to convert.</span></span></param>
        <param name="provider"><span data-ttu-id="d7187-1401">Объект, предоставляющий сведения о форматировании параметра <paramref name="value" /> в зависимости от языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="d7187-1401">An object that provides culture-specific formatting information about <paramref name="value" />.</span></span></param>
        <summary><span data-ttu-id="d7187-1402">Преобразует строковое представление числа в указанном формате, связанном с определенным языком и региональными параметрами, в его эквивалент типа <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-1402">Converts the string representation of a number in a specified culture-specific format to its <see cref="T:System.Numerics.BigInteger" /> equivalent.</span></span></summary>
        <returns><span data-ttu-id="d7187-1403">Значение, эквивалентное числу, которое задается параметром <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-1403">A value that is equivalent to the number specified in the <paramref name="value" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7187-1404">`value` Параметр должен быть строковым представлением числа в следующей форме:</span><span class="sxs-lookup"><span data-stu-id="d7187-1404">The `value` parameter should be the string representation of a number in the following form:</span></span>  
  
 <span data-ttu-id="d7187-1405">[*WS*] [*Sign*] *цифры* [*WS*]</span><span class="sxs-lookup"><span data-stu-id="d7187-1405">[*ws*][*sign*]*digits*[*ws*]</span></span>  
  
 <span data-ttu-id="d7187-1406">Элементы в квадратных скобках ([и]) являются необязательными.</span><span class="sxs-lookup"><span data-stu-id="d7187-1406">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="d7187-1407">Каждый из элементов описан в таблице ниже.</span><span class="sxs-lookup"><span data-stu-id="d7187-1407">The following table describes each element.</span></span>  
  
|<span data-ttu-id="d7187-1408">Элемент</span><span class="sxs-lookup"><span data-stu-id="d7187-1408">Element</span></span>|<span data-ttu-id="d7187-1409">Описание</span><span class="sxs-lookup"><span data-stu-id="d7187-1409">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="d7187-1410">*ws*</span><span class="sxs-lookup"><span data-stu-id="d7187-1410">*ws*</span></span>|<span data-ttu-id="d7187-1411">Необязательный пробел.</span><span class="sxs-lookup"><span data-stu-id="d7187-1411">Optional white space.</span></span>|  
|<span data-ttu-id="d7187-1412">*sign*</span><span class="sxs-lookup"><span data-stu-id="d7187-1412">*sign*</span></span>|<span data-ttu-id="d7187-1413">Необязательный знак.</span><span class="sxs-lookup"><span data-stu-id="d7187-1413">An optional sign.</span></span> <span data-ttu-id="d7187-1414"><xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType> Допустимые символы знака определяются свойствами <xref:System.Globalization.NumberFormatInfo> и <xref:System.Globalization.NumberFormatInfo.PositiveSign%2A?displayProperty=nameWithType> `provider` <xref:System.IFormatProvider.GetFormat%2A> объекта, возвращаемыми методом объекта.</span><span class="sxs-lookup"><span data-stu-id="d7187-1414">Valid sign characters are determined by the <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType> and <xref:System.Globalization.NumberFormatInfo.PositiveSign%2A?displayProperty=nameWithType> properties of the <xref:System.Globalization.NumberFormatInfo> object that is returned by the `provider` object's <xref:System.IFormatProvider.GetFormat%2A> method.</span></span>|  
|<span data-ttu-id="d7187-1415">*digits*</span><span class="sxs-lookup"><span data-stu-id="d7187-1415">*digits*</span></span>|<span data-ttu-id="d7187-1416">Последовательность цифр в диапазоне от 0 до 9.</span><span class="sxs-lookup"><span data-stu-id="d7187-1416">A sequence of digits ranging from 0 to 9.</span></span> <span data-ttu-id="d7187-1417">Все ведущие нули игнорируются.</span><span class="sxs-lookup"><span data-stu-id="d7187-1417">Any leading zeros are ignored.</span></span>|  
  
> [!NOTE]
>  <span data-ttu-id="d7187-1418">Строка, заданная `value` параметром, интерпретируется <xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType> с использованием стиля.</span><span class="sxs-lookup"><span data-stu-id="d7187-1418">The string specified by the `value` parameter is interpreted using the <xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType> style.</span></span> <span data-ttu-id="d7187-1419">Он не может содержать разделители групп или десятичный разделитель и не может иметь дробную часть.</span><span class="sxs-lookup"><span data-stu-id="d7187-1419">It cannot contain any group separators or decimal separator, and it cannot have a decimal portion.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="d7187-1420">При использовании <xref:System.Numerics.BigInteger.Parse%2A> метода для приема-передачи строкового представления <xref:System.Numerics.BigInteger> значения <xref:System.Numerics.BigInteger.ToString%2A> , выводимого методом, следует использовать <xref:System.Numerics.BigInteger.ToString%28System.String%29?displayProperty=nameWithType> метод с описателем формата R для создания строкового представления элемента <xref:System.Numerics.BigInteger> значение.</span><span class="sxs-lookup"><span data-stu-id="d7187-1420">If you use the <xref:System.Numerics.BigInteger.Parse%2A> method to round-trip the string representation of a <xref:System.Numerics.BigInteger> value that was output by the <xref:System.Numerics.BigInteger.ToString%2A> method, you should use the <xref:System.Numerics.BigInteger.ToString%28System.String%29?displayProperty=nameWithType> method with the "R" format specifier to generate the string representation of the <xref:System.Numerics.BigInteger> value.</span></span> <span data-ttu-id="d7187-1421">В противном случае строковое представление <xref:System.Numerics.BigInteger> сохраняет только 50 наиболее значимых цифр исходного значения, а данные могут быть потеряны при <xref:System.Numerics.BigInteger.Parse%2A> использовании метода для восстановления <xref:System.Numerics.BigInteger> значения.</span><span class="sxs-lookup"><span data-stu-id="d7187-1421">Otherwise, the string representation of the <xref:System.Numerics.BigInteger> preserves only the 50 most significant digits of the original value, and data may be lost when you use the <xref:System.Numerics.BigInteger.Parse%2A> method to restore the <xref:System.Numerics.BigInteger> value.</span></span>  
  
 <span data-ttu-id="d7187-1422">Параметр — это <xref:System.IFormatProvider.GetFormat%2A>реализация, метод которой возвращает объект,предоставляющийсведенияобособенностяхформатирования,связанныхсязыкомирегиональнымипараметрами.<xref:System.Globalization.NumberFormatInfo> <xref:System.IFormatProvider> `provider`</span><span class="sxs-lookup"><span data-stu-id="d7187-1422">The `provider` parameter is an <xref:System.IFormatProvider> implementation whose <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides culture-specific formatting information.</span></span> <span data-ttu-id="d7187-1423"><xref:System.Type> `provider` <xref:System.IFormatProvider.GetFormat%2A> При вызове метода он вызывает метод параметра<xref:System.Globalization.NumberFormatInfo> и передает ему объект, представляющий тип. <xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.IFormatProvider%29></span><span class="sxs-lookup"><span data-stu-id="d7187-1423">When the <xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.IFormatProvider%29> method is invoked, it calls the `provider` parameter's <xref:System.IFormatProvider.GetFormat%2A> method and passes it a <xref:System.Type> object that represents the <xref:System.Globalization.NumberFormatInfo> type.</span></span> <span data-ttu-id="d7187-1424">Затем метод возвращает объект, предоставляющий сведения `value` о формате параметра. <xref:System.Globalization.NumberFormatInfo> <xref:System.IFormatProvider.GetFormat%2A></span><span class="sxs-lookup"><span data-stu-id="d7187-1424">The <xref:System.IFormatProvider.GetFormat%2A> method then returns the <xref:System.Globalization.NumberFormatInfo> object that provides information about the format of the `value` parameter.</span></span> <span data-ttu-id="d7187-1425">Существует три способа использования `provider` параметра для предоставления сведений о пользовательском форматировании операции синтаксического анализа:</span><span class="sxs-lookup"><span data-stu-id="d7187-1425">There are three ways to use the `provider` parameter to supply custom formatting information to the parse operation:</span></span>  
  
-   <span data-ttu-id="d7187-1426">Можно передать <xref:System.Globalization.CultureInfo> объект, представляющий язык и региональные параметры, которые предоставляют сведения о форматировании.</span><span class="sxs-lookup"><span data-stu-id="d7187-1426">You can pass a <xref:System.Globalization.CultureInfo> object that represents the culture that supplies formatting information.</span></span> <span data-ttu-id="d7187-1427">Его <xref:System.Globalization.CultureInfo.GetFormat%2A> метод<xref:System.Globalization.NumberFormatInfo> возвращает объект, предоставляющий сведения о форматировании числовых значений для этого языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="d7187-1427">Its <xref:System.Globalization.CultureInfo.GetFormat%2A> method returns the <xref:System.Globalization.NumberFormatInfo> object that provides numeric formatting information for that culture.</span></span>  
  
-   <span data-ttu-id="d7187-1428">Можно передать фактический <xref:System.Globalization.NumberFormatInfo> объект, предоставляющий сведения о форматировании чисел.</span><span class="sxs-lookup"><span data-stu-id="d7187-1428">You can pass the actual <xref:System.Globalization.NumberFormatInfo> object that provides numeric formatting information.</span></span> <span data-ttu-id="d7187-1429">(Его реализация <xref:System.Globalization.NumberFormatInfo.GetFormat%2A> просто возвращает сам себя.)</span><span class="sxs-lookup"><span data-stu-id="d7187-1429">(Its implementation of <xref:System.Globalization.NumberFormatInfo.GetFormat%2A> just returns itself.)</span></span>  
  
-   <span data-ttu-id="d7187-1430">Можно передать пользовательский объект, реализующий интерфейс <xref:System.IFormatProvider>.</span><span class="sxs-lookup"><span data-stu-id="d7187-1430">You can pass a custom object that implements <xref:System.IFormatProvider>.</span></span> <span data-ttu-id="d7187-1431">Его <xref:System.IFormatProvider.GetFormat%2A> метод создает экземпляр и <xref:System.Globalization.NumberFormatInfo> возвращает объект, предоставляющий сведения о форматировании.</span><span class="sxs-lookup"><span data-stu-id="d7187-1431">Its <xref:System.IFormatProvider.GetFormat%2A> method instantiates and returns the <xref:System.Globalization.NumberFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="d7187-1432">Если `provider` имеет `null`значение, форматирование `value` интерпретируется на основе <xref:System.Globalization.NumberFormatInfo> объекта текущего языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="d7187-1432">If `provider` is `null`, the formatting of `value` is interpreted based on the <xref:System.Globalization.NumberFormatInfo> object of the current culture.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d7187-1433">В следующих примерах показано два способа определения тильды (~) в качестве знака отрицательного числа <xref:System.Numerics.BigInteger> для форматирования значений.</span><span class="sxs-lookup"><span data-stu-id="d7187-1433">The following examples show two ways to define the tilde (~) as a negative sign for formatting <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="d7187-1434">Обратите внимание, что <xref:System.Numerics.BigInteger> для вывода значений в том же формате, что и в исходных строках, <xref:System.Numerics.BigInteger.ToString%28System.IFormatProvider%29?displayProperty=nameWithType> код должен вызвать <xref:System.Globalization.NumberFormatInfo> метод и передать ему объект, предоставляющий сведения о форматировании.</span><span class="sxs-lookup"><span data-stu-id="d7187-1434">Note that to display the <xref:System.Numerics.BigInteger> values in the same format as the original strings, your code must call the <xref:System.Numerics.BigInteger.ToString%28System.IFormatProvider%29?displayProperty=nameWithType> method and pass it the <xref:System.Globalization.NumberFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="d7187-1435">В первом примере определяется класс, который реализует <xref:System.IFormatProvider> интерфейс и <xref:System.IFormatProvider.GetFormat%2A> использует метод для возврата <xref:System.Globalization.NumberFormatInfo> объекта, предоставляющего сведения о форматировании.</span><span class="sxs-lookup"><span data-stu-id="d7187-1435">The first example defines a class that implements <xref:System.IFormatProvider> and uses the <xref:System.IFormatProvider.GetFormat%2A> method to return the <xref:System.Globalization.NumberFormatInfo> object that provides formatting information.</span></span>  
  
 [!code-csharp[System.Numeric.BigInteger.Parse#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Parse/cs/System.Numeric.BigInteger.Parse.cs#2)]
 [!code-vb[System.Numeric.BigInteger.Parse#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Parse/vb/System.Numeric.BigInteger.Parse.vb#2)]  
  
 <span data-ttu-id="d7187-1436">Экземпляр <xref:System.Numerics.BigInteger> объекта можно создать с помощью следующего кода:</span><span class="sxs-lookup"><span data-stu-id="d7187-1436">A <xref:System.Numerics.BigInteger> object can then be instantiated with the following code:</span></span>  
  
 [!code-csharp[System.Numeric.BigInteger.Parse#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Parse/cs/System.Numeric.BigInteger.Parse.cs#3)]
 [!code-vb[System.Numeric.BigInteger.Parse#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Parse/vb/System.Numeric.BigInteger.Parse.vb#3)]  
  
 <span data-ttu-id="d7187-1437">Второй пример более прост.</span><span class="sxs-lookup"><span data-stu-id="d7187-1437">The second example is more straightforward.</span></span> <span data-ttu-id="d7187-1438">Он передает <xref:System.Globalization.NumberFormatInfo> объект, предоставляющий сведения о `provider` форматировании параметру.</span><span class="sxs-lookup"><span data-stu-id="d7187-1438">It passes the <xref:System.Globalization.NumberFormatInfo> object that provides formatting information to the `provider` parameter.</span></span>  
  
 [!code-csharp[System.Numeric.BigInteger.Parse#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Parse/cs/System.Numeric.BigInteger.Parse.cs#4)]
 [!code-vb[System.Numeric.BigInteger.Parse#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Parse/vb/System.Numeric.BigInteger.Parse.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d7187-1439">Свойство <paramref name="value" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-1439"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="d7187-1440"><paramref name="value" /> имеет неправильный формат.</span><span class="sxs-lookup"><span data-stu-id="d7187-1440"><paramref name="value" /> is not in the correct format.</span></span></exception>
        <altmember cref="Overload:System.Numerics.BigInteger.TryParse" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger Parse (ReadOnlySpan&lt;char&gt; value, System.Globalization.NumberStyles style = System.Globalization.NumberStyles.Integer, IFormatProvider provider = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.BigInteger Parse(valuetype System.ReadOnlySpan`1&lt;char&gt; value, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.Parse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (value As ReadOnlySpan(Of Char), Optional style As NumberStyles = System.Globalization.NumberStyles.Integer, Optional provider As IFormatProvider = null) As BigInteger" />
      <MemberSignature Language="F#" Value="static member Parse : ReadOnlySpan&lt;char&gt; * System.Globalization.NumberStyles * IFormatProvider -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.Parse (value, style, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="provider" Type="System.IFormatProvider" Index="2" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="style">To be added.</param>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger Parse (string value, System.Globalization.NumberStyles style, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.BigInteger Parse(string value, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (value As String, style As NumberStyles, provider As IFormatProvider) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger Parse(System::String ^ value, System::Globalization::NumberStyles style, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member Parse : string * System.Globalization.NumberStyles * IFormatProvider -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.Parse (value, style, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d7187-1441">Строка, содержащая преобразуемое число.</span><span class="sxs-lookup"><span data-stu-id="d7187-1441">A string that contains a number to convert.</span></span></param>
        <param name="style"><span data-ttu-id="d7187-1442">Побитовое сочетание значений перечисления, которое показывает разрешенный формат параметра <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-1442">A bitwise combination of the enumeration values that specify the permitted format of <paramref name="value" />.</span></span></param>
        <param name="provider"><span data-ttu-id="d7187-1443">Объект, предоставляющий сведения о форматировании параметра <paramref name="value" /> в зависимости от языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="d7187-1443">An object that provides culture-specific formatting information about <paramref name="value" />.</span></span></param>
        <summary><span data-ttu-id="d7187-1444">Преобразует строковое представление числа в указанном стиле и формате, связанном с определенным языком и региональными параметрами, в его эквивалент типа <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-1444">Converts the string representation of a number in a specified style and culture-specific format to its <see cref="T:System.Numerics.BigInteger" /> equivalent.</span></span></summary>
        <returns><span data-ttu-id="d7187-1445">Значение, эквивалентное числу, которое задается параметром <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-1445">A value that is equivalent to the number specified in the <paramref name="value" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7187-1446">Параметр определяет элементы стиля (такие как пробелы, символ знака разделителя группы или символ десятичной запятой), допустимые `value` в параметре для успешной операции синтаксического анализа. `style`</span><span class="sxs-lookup"><span data-stu-id="d7187-1446">The `style` parameter defines the style elements (such as white space, the positive or negative sign symbol, the group separator symbol, or the decimal point symbol) that are allowed in the `value` parameter for the parse operation to succeed.</span></span> <span data-ttu-id="d7187-1447">`styles`аргумент должен представлять собой сочетание битовых флагов <xref:System.Globalization.NumberStyles> из перечисления.</span><span class="sxs-lookup"><span data-stu-id="d7187-1447">`styles` must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration.</span></span> <span data-ttu-id="d7187-1448">Параметр делает перегрузку этого метода полезной `value` , если содержит строковое представление шестнадцатеричного значения, когда система счисления (десятичная `value` или шестнадцатеричная), представленная, известна только во время выполнения или когда `style` необходимо запретить пробелы или символы знака в `value`.</span><span class="sxs-lookup"><span data-stu-id="d7187-1448">The `style` parameter makes this method overload useful when `value` contains the string representation of a hexadecimal value, when the number system (decimal or hexadecimal) represented by `value` is known only at run time, or when you want to disallow white space or a sign symbol in `value`.</span></span>  
  
 <span data-ttu-id="d7187-1449">В зависимости от значения `style` `value` параметр может включать следующие элементы:</span><span class="sxs-lookup"><span data-stu-id="d7187-1449">Depending on the value of `style`, the `value` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="d7187-1450">[*WS*] [*$*] [*знак*] [*цифры*,]*цифры*[*. fractional_digits*] [E [*Sign*]*exponential_digits*] [*WS*]</span><span class="sxs-lookup"><span data-stu-id="d7187-1450">[*ws*][*$*][*sign*][*digits*,]*digits*[*.fractional_digits*][E[*sign*]*exponential_digits*][*ws*]</span></span>  
  
 <span data-ttu-id="d7187-1451">Если `style` включается <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> ,`value` параметр может включать следующие элементы:</span><span class="sxs-lookup"><span data-stu-id="d7187-1451">If `style` includes <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>, the `value` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="d7187-1452">[*WS*] *хексдигитс* [*WS*]</span><span class="sxs-lookup"><span data-stu-id="d7187-1452">[*ws*]*hexdigits*[*ws*]</span></span>  
  
 <span data-ttu-id="d7187-1453">Элементы в квадратных скобках ([и]) являются необязательными.</span><span class="sxs-lookup"><span data-stu-id="d7187-1453">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="d7187-1454">Каждый из элементов описан в таблице ниже.</span><span class="sxs-lookup"><span data-stu-id="d7187-1454">The following table describes each element.</span></span>  
  
|<span data-ttu-id="d7187-1455">Элемент</span><span class="sxs-lookup"><span data-stu-id="d7187-1455">Element</span></span>|<span data-ttu-id="d7187-1456">Описание</span><span class="sxs-lookup"><span data-stu-id="d7187-1456">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="d7187-1457">*ws*</span><span class="sxs-lookup"><span data-stu-id="d7187-1457">*ws*</span></span>|<span data-ttu-id="d7187-1458">Необязательный пробел.</span><span class="sxs-lookup"><span data-stu-id="d7187-1458">Optional white space.</span></span> <span data-ttu-id="d7187-1459">Пробел может `value` присутствовать в начале, если `style` включает <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> флаг, `value` и может <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> находиться в конце, если `style` включает флаг.</span><span class="sxs-lookup"><span data-stu-id="d7187-1459">White space can appear at the start of `value` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> flag, and it can appear at the end of `value` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> flag.</span></span>|  
|*$*|<span data-ttu-id="d7187-1460">Символ валюты, зависящий от языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="d7187-1460">A culture-specific currency symbol.</span></span> <span data-ttu-id="d7187-1461">Его расположение в строке определяется <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType> свойствами и <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType> языка и региональных параметров, указанными `provider` в параметре.</span><span class="sxs-lookup"><span data-stu-id="d7187-1461">Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType> and <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType> properties of the culture indicated by the `provider` parameter.</span></span> <span data-ttu-id="d7187-1462">Символ валюты текущего языка и региональных параметров может отображаться `value` в `style` , если <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> включает флаг.</span><span class="sxs-lookup"><span data-stu-id="d7187-1462">The current culture's currency symbol can appear in `value` if `style` includes the <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="d7187-1463">*sign*</span><span class="sxs-lookup"><span data-stu-id="d7187-1463">*sign*</span></span>|<span data-ttu-id="d7187-1464">Необязательный знак.</span><span class="sxs-lookup"><span data-stu-id="d7187-1464">An optional sign.</span></span> <span data-ttu-id="d7187-1465">Знак `value` может отображаться в начале, если `style` включает <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> флаг, `value` и может <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> находиться в конце, если `style` включает флаг.</span><span class="sxs-lookup"><span data-stu-id="d7187-1465">The sign can appear at the start of `value` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> flag, and it can appear at the end of `value` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="d7187-1466">Круглые скобки могут использоваться в `value` , чтобы указать отрицательное значение `style` , если <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> включает флаг.</span><span class="sxs-lookup"><span data-stu-id="d7187-1466">Parentheses can be used in `value` to indicate a negative value if `style` includes the <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="d7187-1467">*digits*</span><span class="sxs-lookup"><span data-stu-id="d7187-1467">*digits*</span></span><br /><br /> <span data-ttu-id="d7187-1468">*fractional_digits*</span><span class="sxs-lookup"><span data-stu-id="d7187-1468">*fractional_digits*</span></span><br /><br /> <span data-ttu-id="d7187-1469">*exponential_digits*</span><span class="sxs-lookup"><span data-stu-id="d7187-1469">*exponential_digits*</span></span>|<span data-ttu-id="d7187-1470">Последовательность цифр от 0 до 9.</span><span class="sxs-lookup"><span data-stu-id="d7187-1470">A sequence of digits from 0 through 9.</span></span> <span data-ttu-id="d7187-1471">Для *fractional_digits*допустима только цифра 0.</span><span class="sxs-lookup"><span data-stu-id="d7187-1471">For *fractional_digits*, only the digit 0 is valid.</span></span>|  
|<span data-ttu-id="d7187-1472">*,*</span><span class="sxs-lookup"><span data-stu-id="d7187-1472">*,*</span></span>|<span data-ttu-id="d7187-1473">Символ разделителя группы, зависящий от языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="d7187-1473">A culture-specific group separator symbol.</span></span> <span data-ttu-id="d7187-1474">Символ разделителя групп для языка и региональных параметров, `provider` заданный параметром `style` , может <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> быть указан в `value` параметре, если включает флаг.</span><span class="sxs-lookup"><span data-stu-id="d7187-1474">The group separator symbol of the culture specified by `provider` can appear in `value` if `style` includes the <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="d7187-1475">*.*</span><span class="sxs-lookup"><span data-stu-id="d7187-1475">*.*</span></span>|<span data-ttu-id="d7187-1476">Символ десятичной запятой, зависящий от языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="d7187-1476">A culture-specific decimal point symbol.</span></span> <span data-ttu-id="d7187-1477">Символ десятичной запятой, заданный параметром `provider` , может быть `value` указан `style` в параметре, если включает <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> флаг.</span><span class="sxs-lookup"><span data-stu-id="d7187-1477">The decimal point symbol of the culture designated by `provider` can appear in `value` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="d7187-1478">Только цифра 0 может присутствовать в виде дробной части для выполнения операции синтаксического анализа. Если *fractional_digits* включает любую другую цифру, <xref:System.FormatException> создается исключение.</span><span class="sxs-lookup"><span data-stu-id="d7187-1478">Only the digit 0 can appear as a fractional digit for the parse operation to succeed; if *fractional_digits* includes any other digit, a <xref:System.FormatException> is thrown.</span></span>|  
|<span data-ttu-id="d7187-1479">E</span><span class="sxs-lookup"><span data-stu-id="d7187-1479">E</span></span>|<span data-ttu-id="d7187-1480">Символ "e" или "E", указывающий, что значение представлено в экспоненциальной (экспоненциальной) нотации.</span><span class="sxs-lookup"><span data-stu-id="d7187-1480">The "e" or "E" character, which indicates that the value is represented in exponential (scientific) notation.</span></span> <span data-ttu-id="d7187-1481">Параметр может представлять число в экспоненциальной нотации, `style` <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> если включает флаг. `value`</span><span class="sxs-lookup"><span data-stu-id="d7187-1481">The `value` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="d7187-1482">*хексдигитс*</span><span class="sxs-lookup"><span data-stu-id="d7187-1482">*hexdigits*</span></span>|<span data-ttu-id="d7187-1483">Последовательность шестнадцатеричных цифр от 0 до f или от 0 до F.</span><span class="sxs-lookup"><span data-stu-id="d7187-1483">A sequence of hexadecimal digits from 0 through f, or 0 through F.</span></span>|  
  
> [!NOTE]
> <span data-ttu-id="d7187-1484">Все завершающие символы NUL (U + 0000) в `s` игнорируются операцией синтаксического анализа, независимо от значения `style` аргумента.</span><span class="sxs-lookup"><span data-stu-id="d7187-1484">Any terminating NUL (U+0000) characters in `s` are ignored by the parsing operation, regardless of the value of the `style` argument.</span></span>

 <span data-ttu-id="d7187-1485">Строка с цифрами (которая соответствует <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> стилю) всегда будет успешно проанализирована.</span><span class="sxs-lookup"><span data-stu-id="d7187-1485">A string with digits only (which corresponds to the <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> style) always parses successfully.</span></span> <span data-ttu-id="d7187-1486">Большинство оставшихся <xref:System.Globalization.NumberStyles> элементов управляют элементами управления, которые могут присутствовать, но не обязательно должны присутствовать во входной строке.</span><span class="sxs-lookup"><span data-stu-id="d7187-1486">Most of the remaining <xref:System.Globalization.NumberStyles> members control elements that may be present, but are not required to be present, in the input string.</span></span> <span data-ttu-id="d7187-1487">В следующей таблице показано, как <xref:System.Globalization.NumberStyles> отдельные члены влияют на элементы, которые могут присутствовать в. `value`</span><span class="sxs-lookup"><span data-stu-id="d7187-1487">The following table indicates how individual <xref:System.Globalization.NumberStyles> members affect the elements that may be present in `value`.</span></span>  
  
|<span data-ttu-id="d7187-1488">Значение NumberStyles</span><span class="sxs-lookup"><span data-stu-id="d7187-1488">NumberStyles value</span></span>|<span data-ttu-id="d7187-1489">Разрешенные в значениях элементы в дополнение к цифрам</span><span class="sxs-lookup"><span data-stu-id="d7187-1489">Elements permitted in value in addition to digits</span></span>|  
|------------------------|-------------------------------------------------------|  
|<xref:System.Globalization.NumberStyles.None>|<span data-ttu-id="d7187-1490">Только элемент *digits* .</span><span class="sxs-lookup"><span data-stu-id="d7187-1490">The *digits* element only.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowDecimalPoint>|<span data-ttu-id="d7187-1491">Элементы десятичной запятой (.) \*\* и дробные разряды.</span><span class="sxs-lookup"><span data-stu-id="d7187-1491">The decimal point (.) and *fractional-digits* elements.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowExponent>|<span data-ttu-id="d7187-1492">Символ "e" или "E", который указывает на экспоненциальную нотацию.</span><span class="sxs-lookup"><span data-stu-id="d7187-1492">The "e" or "E" character, which indicates exponential notation.</span></span> <span data-ttu-id="d7187-1493">Вместе с *exponential_digits*.</span><span class="sxs-lookup"><span data-stu-id="d7187-1493">along with *exponential_digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingWhite>|<span data-ttu-id="d7187-1494">Элемент *WS* в начале `value`.</span><span class="sxs-lookup"><span data-stu-id="d7187-1494">The *ws* element at the start of `value`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingWhite>|<span data-ttu-id="d7187-1495">Элемент *WS* в конце `value`.</span><span class="sxs-lookup"><span data-stu-id="d7187-1495">The *ws* element at the end of `value`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingSign>|<span data-ttu-id="d7187-1496">Элемент *Sign* в начале `value`.</span><span class="sxs-lookup"><span data-stu-id="d7187-1496">The *sign* element at the start of `value`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingSign>|<span data-ttu-id="d7187-1497">Элемент *Sign* в конце `value`.</span><span class="sxs-lookup"><span data-stu-id="d7187-1497">The *sign* element at the end of `value`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowParentheses>|<span data-ttu-id="d7187-1498">Элемент *Sign* в виде круглых скобок, охватывающих числовое значение.</span><span class="sxs-lookup"><span data-stu-id="d7187-1498">The *sign* element in the form of parentheses enclosing the numeric value.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowThousands>|<span data-ttu-id="d7187-1499">Элемент разделителя групп (,).</span><span class="sxs-lookup"><span data-stu-id="d7187-1499">The group separator (,) element.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowCurrencySymbol>|<span data-ttu-id="d7187-1500">Элемент Currency ($).</span><span class="sxs-lookup"><span data-stu-id="d7187-1500">The currency ($) element.</span></span>|  
|<xref:System.Globalization.NumberStyles.Currency>|<span data-ttu-id="d7187-1501">Все элементы.</span><span class="sxs-lookup"><span data-stu-id="d7187-1501">All elements.</span></span> <span data-ttu-id="d7187-1502">`value` Однако не может представлять шестнадцатеричное число или число в экспоненциальной нотации.</span><span class="sxs-lookup"><span data-stu-id="d7187-1502">However, `value` cannot represent a hexadecimal number or a number in exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Float>|<span data-ttu-id="d7187-1503">Элемент *WS* в начале или конце `value`, \*\* `value`знак в начале и символ десятичной запятой (.).</span><span class="sxs-lookup"><span data-stu-id="d7187-1503">The *ws* element at the start or end of `value`, *sign* at the start of `value`, and the decimal point (.) symbol.</span></span> <span data-ttu-id="d7187-1504">`value` Параметр также может использовать экспоненциальную нотацию.</span><span class="sxs-lookup"><span data-stu-id="d7187-1504">The `value` parameter can also use exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Number>|<span data-ttu-id="d7187-1505">Элементы `ws` ,`sign`, разделители групп (,) и десятичной запятой (.).</span><span class="sxs-lookup"><span data-stu-id="d7187-1505">The `ws`, `sign`, group separator (,), and decimal point (.) elements.</span></span>|  
|<xref:System.Globalization.NumberStyles.Any>|<span data-ttu-id="d7187-1506">Все элементы.</span><span class="sxs-lookup"><span data-stu-id="d7187-1506">All elements.</span></span> <span data-ttu-id="d7187-1507">`value` Однако не может представлять шестнадцатеричное число.</span><span class="sxs-lookup"><span data-stu-id="d7187-1507">However, `value` cannot represent a hexadecimal number.</span></span>|  
  
> [!IMPORTANT]
>  <span data-ttu-id="d7187-1508">При использовании <xref:System.Numerics.BigInteger.Parse%2A> метода для приема-передачи строкового представления <xref:System.Numerics.BigInteger> значения <xref:System.Numerics.BigInteger.ToString%2A> , выводимого методом, следует использовать <xref:System.Numerics.BigInteger.ToString%28System.String%29?displayProperty=nameWithType> метод с описателем формата R для создания строкового представления элемента <xref:System.Numerics.BigInteger> значение.</span><span class="sxs-lookup"><span data-stu-id="d7187-1508">If you use the <xref:System.Numerics.BigInteger.Parse%2A> method to round-trip the string representation of a <xref:System.Numerics.BigInteger> value that was output by the <xref:System.Numerics.BigInteger.ToString%2A> method, you should use the <xref:System.Numerics.BigInteger.ToString%28System.String%29?displayProperty=nameWithType> method with the "R" format specifier to generate the string representation of the <xref:System.Numerics.BigInteger> value.</span></span> <span data-ttu-id="d7187-1509">В противном случае строковое представление <xref:System.Numerics.BigInteger> сохраняет только 50 наиболее значимых цифр исходного значения, а данные могут быть потеряны при <xref:System.Numerics.BigInteger.Parse%2A> использовании метода для восстановления <xref:System.Numerics.BigInteger> значения.</span><span class="sxs-lookup"><span data-stu-id="d7187-1509">Otherwise, the string representation of the <xref:System.Numerics.BigInteger> preserves only the 50 most significant digits of the original value, and data may be lost when you use the <xref:System.Numerics.BigInteger.Parse%2A> method to restore the <xref:System.Numerics.BigInteger> value.</span></span>  
  
 <span data-ttu-id="d7187-1510">В отличие от других <xref:System.Globalization.NumberStyles> значений, допускающих, но не требующих наличия определенных элементов стиля в `value`, <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> значение стиля означает, что отдельные числовые символы в `value` всегда будут интерпретироваться как шестнадцатеричные символы.</span><span class="sxs-lookup"><span data-stu-id="d7187-1510">Unlike the other <xref:System.Globalization.NumberStyles> values, which allow for but do not require the presence of particular style elements in `value`, the <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> style value means that the individual numeric characters in `value` are always interpreted as hexadecimal characters.</span></span> <span data-ttu-id="d7187-1511">Допустимые шестнадцатеричные символы: 0-9, A-F и A-f.</span><span class="sxs-lookup"><span data-stu-id="d7187-1511">Valid hexadecimal characters are 0-9, A-F, and a-f.</span></span> <span data-ttu-id="d7187-1512">Единственными другими флагами, которые можно сочетать с `style` параметром <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> , <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>являются и.</span><span class="sxs-lookup"><span data-stu-id="d7187-1512">The only other flags that can be combined with the `style` parameter are <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> and <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>.</span></span> <span data-ttu-id="d7187-1513">(Перечисление включает в себя <xref:System.Globalization.NumberStyles.HexNumber>стиль составного числа, включающий оба флага пробела.) <xref:System.Globalization.NumberStyles></span><span class="sxs-lookup"><span data-stu-id="d7187-1513">(The <xref:System.Globalization.NumberStyles> enumeration includes a composite number style, <xref:System.Globalization.NumberStyles.HexNumber>, that includes both white-space flags.)</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d7187-1514">Если `value` является строковым представлением шестнадцатеричного числа, ему не может предшествовать любое декорирование ( `0x` например, или `&h`), которое отличает его как шестнадцатеричное число.</span><span class="sxs-lookup"><span data-stu-id="d7187-1514">If `value` is the string representation of a hexadecimal number, it cannot be preceded by any decoration (such as `0x` or `&h`) that differentiates it as a hexadecimal number.</span></span> <span data-ttu-id="d7187-1515">Это приводит к сбою преобразования.</span><span class="sxs-lookup"><span data-stu-id="d7187-1515">This causes the conversion to fail.</span></span>  
  
 <span data-ttu-id="d7187-1516">Если `value` является шестнадцатеричной строкой <xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%29> , метод интерпретирует `value` как отрицательное число, хранящееся в двух представлениях дополнения, если первые две `0x80`шестнадцатеричные цифры больше или равны.</span><span class="sxs-lookup"><span data-stu-id="d7187-1516">If `value` is a hexadecimal string, the <xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%29> method interprets `value` as a negative number stored by using two's complement representation if its first two hexadecimal digits are greater than or equal to `0x80`.</span></span> <span data-ttu-id="d7187-1517">Иными словами, метод интерпретирует бит наивысшего порядка первого байта в `value` качестве бита знака.</span><span class="sxs-lookup"><span data-stu-id="d7187-1517">In other words, the method interprets the highest-order bit of the first byte in `value` as the sign bit.</span></span> <span data-ttu-id="d7187-1518">Чтобы убедиться, что шестнадцатеричная строка правильно интерпретируется как положительное число, первая цифра в `value` должна иметь нулевое значение.</span><span class="sxs-lookup"><span data-stu-id="d7187-1518">To make sure that a hexadecimal string is correctly interpreted as a positive number, the first digit in `value` must have a value of zero.</span></span> <span data-ttu-id="d7187-1519">Например, метод интерпретирует `0x80` как отрицательное значение, но интерпретирует либо `0x080` или `0x0080` как положительное значение.</span><span class="sxs-lookup"><span data-stu-id="d7187-1519">For example, the method interprets `0x80` as a negative value, but it interprets either `0x080` or `0x0080` as a positive value.</span></span> <span data-ttu-id="d7187-1520">В следующем примере показано различие между шестнадцатеричными строками, представляющими отрицательные и положительные значения.</span><span class="sxs-lookup"><span data-stu-id="d7187-1520">The following example illustrates the difference between hexadecimal strings that represent negative and positive values.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Parse#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Parse/cs/ParseHex1.cs#3)]
 [!code-vb[System.Numerics.BigInteger.Parse#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Parse/vb/ParseHex1.vb#3)]  
  
 <span data-ttu-id="d7187-1521">`provider` Параметр<xref:System.IFormatProvider> является реализацией.</span><span class="sxs-lookup"><span data-stu-id="d7187-1521">The `provider` parameter is an <xref:System.IFormatProvider> implementation.</span></span> <span data-ttu-id="d7187-1522">Его <xref:System.IFormatProvider.GetFormat%2A> метод `value`возвращает объект, предоставляющий сведения о формате для определенного языка и региональных параметров. <xref:System.Globalization.NumberFormatInfo></span><span class="sxs-lookup"><span data-stu-id="d7187-1522">Its <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides culture-specific information about the format of `value`.</span></span> <span data-ttu-id="d7187-1523">Как правило `provider` , может принимать одно из следующих действий:</span><span class="sxs-lookup"><span data-stu-id="d7187-1523">Typically, `provider` can be any one of the following:</span></span>  
  
-   <span data-ttu-id="d7187-1524"><xref:System.Globalization.CultureInfo> Объект, представляющий язык и региональные параметры, которые предоставляют сведения о форматировании чисел.</span><span class="sxs-lookup"><span data-stu-id="d7187-1524">A <xref:System.Globalization.CultureInfo> object that represents the culture that provides numeric formatting information.</span></span> <span data-ttu-id="d7187-1525">Его <xref:System.Globalization.CultureInfo.GetFormat%2A> метод<xref:System.Globalization.NumberFormatInfo> возвращает объект, предоставляющий сведения о форматировании чисел.</span><span class="sxs-lookup"><span data-stu-id="d7187-1525">Its <xref:System.Globalization.CultureInfo.GetFormat%2A> method returns the <xref:System.Globalization.NumberFormatInfo> object that provides numeric formatting information.</span></span>  
  
-   <span data-ttu-id="d7187-1526"><xref:System.Globalization.NumberFormatInfo> Объект, предоставляющий сведения о форматировании.</span><span class="sxs-lookup"><span data-stu-id="d7187-1526">A <xref:System.Globalization.NumberFormatInfo> object that provides formatting information.</span></span> <span data-ttu-id="d7187-1527">(Его реализация <xref:System.Globalization.NumberFormatInfo.GetFormat%2A> просто возвращает сам себя.)</span><span class="sxs-lookup"><span data-stu-id="d7187-1527">(Its implementation of <xref:System.Globalization.NumberFormatInfo.GetFormat%2A> just returns itself.)</span></span>  
  
-   <span data-ttu-id="d7187-1528">Пользовательский объект, реализующий <xref:System.IFormatProvider> интерфейс и <xref:System.Globalization.NumberFormatInfo.GetFormat%2A> использующий метод для <xref:System.Globalization.NumberFormatInfo> создания экземпляра и возврата объекта, предоставляющего сведения о форматировании.</span><span class="sxs-lookup"><span data-stu-id="d7187-1528">A custom object that implements <xref:System.IFormatProvider> and uses the <xref:System.Globalization.NumberFormatInfo.GetFormat%2A> method to instantiate and return the <xref:System.Globalization.NumberFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="d7187-1529">Если `provider` параметр `null`имеет значение <xref:System.Globalization.NumberFormatInfo> , используется объект для текущего языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="d7187-1529">If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> object for the current culture is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d7187-1530">В следующем примере выполняется несколько вызовов к <xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29> методу с использованием различных сочетаний значений `style` для параметров `provider` и.</span><span class="sxs-lookup"><span data-stu-id="d7187-1530">The following example makes several calls to the <xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29> method using various combinations of values for the `style` and `provider` parameters.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Parse#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Parse/cs/Parse1.cs#2)]
 [!code-vb[System.Numerics.BigInteger.Parse#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Parse/vb/Parse1.vb#2)]  
  
 <span data-ttu-id="d7187-1531">Несколько отдельных вызовов <xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29> метода передают экземпляр следующего `BigIntegerFormatProvider` класса, который определяет тильду (~) как знак отрицательного числа.</span><span class="sxs-lookup"><span data-stu-id="d7187-1531">A number of the individual calls to the <xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29> method pass an instance of the following `BigIntegerFormatProvider` class, which defines a tilde (~) as the negative sign.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Parse#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Parse/cs/Parse1.cs#4)]
 [!code-vb[System.Numerics.BigInteger.Parse#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Parse/vb/Parse1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d7187-1532"><paramref name="style" /> не является значением <see cref="T:System.Globalization.NumberStyles" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-1532"><paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value.</span></span>  
  
<span data-ttu-id="d7187-1533">- или -</span><span class="sxs-lookup"><span data-stu-id="d7187-1533">-or-</span></span> 
 <span data-ttu-id="d7187-1534"><paramref name="style" /> включает флаги <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> и <see cref="F:System.Globalization.NumberStyles.HexNumber" /> вместе с другим значениями.</span><span class="sxs-lookup"><span data-stu-id="d7187-1534"><paramref name="style" /> includes the <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> or <see cref="F:System.Globalization.NumberStyles.HexNumber" /> flag along with another value.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d7187-1535">Свойство <paramref name="value" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-1535"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="d7187-1536"><paramref name="value" /> не соответствует образцу ввода, заданному <paramref name="style" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-1536"><paramref name="value" /> does not comply with the input pattern specified by <paramref name="style" />.</span></span></exception>
        <altmember cref="Overload:System.Numerics.BigInteger.TryParse" />
      </Docs>
    </Member>
    <Member MemberName="Pow">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger Pow (System.Numerics.BigInteger value, int exponent);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.BigInteger Pow(valuetype System.Numerics.BigInteger value, int32 exponent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.Pow(System.Numerics.BigInteger,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Pow (value As BigInteger, exponent As Integer) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger Pow(System::Numerics::BigInteger value, int exponent);" />
      <MemberSignature Language="F#" Value="static member Pow : System.Numerics.BigInteger * int -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.Pow (value, exponent)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
        <Parameter Name="exponent" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d7187-1537">Число, возведенное в степень <paramref name="exponent" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-1537">The number to raise to the <paramref name="exponent" /> power.</span></span></param>
        <param name="exponent"><span data-ttu-id="d7187-1538">Показатель степени, в которую будет возведено значение <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-1538">The exponent to raise <paramref name="value" /> by.</span></span></param>
        <summary><span data-ttu-id="d7187-1539">Возводит значение <see cref="T:System.Numerics.BigInteger" /> в заданную степень.</span><span class="sxs-lookup"><span data-stu-id="d7187-1539">Raises a <see cref="T:System.Numerics.BigInteger" /> value to the power of a specified value.</span></span></summary>
        <returns><span data-ttu-id="d7187-1540">Результат возведения <paramref name="value" /> в степень <paramref name="exponent" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-1540">The result of raising <paramref name="value" /> to the <paramref name="exponent" /> power.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7187-1541">Метод возвращает 1, если значение параметра экспоненты равно 0, или если значения `value` параметров и `exponent` равны 0. <xref:System.Numerics.BigInteger.Pow%2A></span><span class="sxs-lookup"><span data-stu-id="d7187-1541">The <xref:System.Numerics.BigInteger.Pow%2A> method returns 1 if the value of the exponent parameter is 0, or if the values of both the `value` and `exponent` parameters are 0.</span></span> <span data-ttu-id="d7187-1542">Если `exponent` значение равно 1 <xref:System.Numerics.BigInteger.Pow%2A> , метод возвращает `value`значение.</span><span class="sxs-lookup"><span data-stu-id="d7187-1542">If `exponent` is 1, the <xref:System.Numerics.BigInteger.Pow%2A> method returns `value`.</span></span> <span data-ttu-id="d7187-1543">Если `value` имеет отрицательное значение, метод возвращает отрицательный результат.</span><span class="sxs-lookup"><span data-stu-id="d7187-1543">If `value` is negative, the method returns a negative result.</span></span>  
  
 <span data-ttu-id="d7187-1544">Этот метод соответствует <xref:System.Math.Pow%2A?displayProperty=nameWithType> методу для числовых типов-примитивов.</span><span class="sxs-lookup"><span data-stu-id="d7187-1544">This method corresponds to the <xref:System.Math.Pow%2A?displayProperty=nameWithType> method for primitive numeric types.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d7187-1545">В следующем примере показано возведение в <xref:System.Numerics.BigInteger> степень с использованием значения и показателя степени, значения которого находятся в диапазоне от 0 до 10.</span><span class="sxs-lookup"><span data-stu-id="d7187-1545">The following example illustrates exponentiation using a <xref:System.Numerics.BigInteger> value and an exponent whose value ranges from 0 to 10.</span></span>  
  
 [!code-csharp[System.Numeric.BigInteger.Class#32](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/cs/BigInteger_Examples.cs#32)]
 [!code-vb[System.Numeric.BigInteger.Class#32](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/vb/BigInteger_Examples.vb#32)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="d7187-1546"><paramref name="exponent" /> является отрицательным значением.</span><span class="sxs-lookup"><span data-stu-id="d7187-1546"><paramref name="exponent" /> is negative.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Remainder">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger Remainder (System.Numerics.BigInteger dividend, System.Numerics.BigInteger divisor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.BigInteger Remainder(valuetype System.Numerics.BigInteger dividend, valuetype System.Numerics.BigInteger divisor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.Remainder(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Remainder (dividend As BigInteger, divisor As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger Remainder(System::Numerics::BigInteger dividend, System::Numerics::BigInteger divisor);" />
      <MemberSignature Language="F#" Value="static member Remainder : System.Numerics.BigInteger * System.Numerics.BigInteger -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.Remainder (dividend, divisor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dividend" Type="System.Numerics.BigInteger" />
        <Parameter Name="divisor" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="dividend"><span data-ttu-id="d7187-1547">Значение, которое необходимо разделить.</span><span class="sxs-lookup"><span data-stu-id="d7187-1547">The value to be divided.</span></span></param>
        <param name="divisor"><span data-ttu-id="d7187-1548">Значение, на которое необходимо разделить.</span><span class="sxs-lookup"><span data-stu-id="d7187-1548">The value to divide by.</span></span></param>
        <summary><span data-ttu-id="d7187-1549">Выполняет целочисленное деление двух значений <see cref="T:System.Numerics.BigInteger" /> и возвращает остаток.</span><span class="sxs-lookup"><span data-stu-id="d7187-1549">Performs integer division on two <see cref="T:System.Numerics.BigInteger" /> values and returns the remainder.</span></span></summary>
        <returns><span data-ttu-id="d7187-1550">Остаток от деления <paramref name="dividend" /> на <paramref name="divisor" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-1550">The remainder after dividing <paramref name="dividend" /> by <paramref name="divisor" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7187-1551">Знак остатка — это знак `dividend` параметра.</span><span class="sxs-lookup"><span data-stu-id="d7187-1551">The sign of the remainder is the sign of the `dividend` parameter.</span></span>  
  
 <span data-ttu-id="d7187-1552"><xref:System.Numerics.BigInteger.Remainder%2A> Метод реализуется для языков, которые не поддерживают пользовательские операторы.</span><span class="sxs-lookup"><span data-stu-id="d7187-1552">The <xref:System.Numerics.BigInteger.Remainder%2A> method is implemented for languages that do not support custom operators.</span></span> <span data-ttu-id="d7187-1553">Его поведение идентично поведению деления с помощью оператора модуля.</span><span class="sxs-lookup"><span data-stu-id="d7187-1553">Its behavior is identical to division using the modulus operator.</span></span>  
  
 <span data-ttu-id="d7187-1554">При необходимости метод автоматически выполняет неявное преобразование других целочисленных типов в <xref:System.Numerics.BigInteger> объекты перед выполнением операции модуля.</span><span class="sxs-lookup"><span data-stu-id="d7187-1554">If necessary, the method automatically performs implicit conversion of other integral types to <xref:System.Numerics.BigInteger> objects before it performs the modulus operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d7187-1555">В следующем примере сравнивается остаток от <xref:System.Numerics.BigInteger.DivRem%2A> метода с остатком, возвращенным <xref:System.Numerics.BigInteger.Remainder%2A> методом, чтобы определить, что два метода вычисляют идентичные остатки.</span><span class="sxs-lookup"><span data-stu-id="d7187-1555">The following example compares the remainder from the <xref:System.Numerics.BigInteger.DivRem%2A> method with the remainder returned by the <xref:System.Numerics.BigInteger.Remainder%2A> method to establish that the two methods calculate identical remainders.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Remainder#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Remainder/cs/Remainder1.cs#1)]
 [!code-vb[System.Numerics.BigInteger.Remainder#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Remainder/vb/Remainder1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.DivideByZeroException"><span data-ttu-id="d7187-1556">Значение параметра <paramref name="divisor" /> равно нулю (0).</span><span class="sxs-lookup"><span data-stu-id="d7187-1556"><paramref name="divisor" /> is 0 (zero).</span></span></exception>
        <altmember cref="M:System.Numerics.BigInteger.DivRem(System.Numerics.BigInteger,System.Numerics.BigInteger,System.Numerics.BigInteger@)" />
        <altmember cref="M:System.Numerics.BigInteger.op_Modulus(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      </Docs>
    </Member>
    <Member MemberName="Sign">
      <MemberSignature Language="C#" Value="public int Sign { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Sign" />
      <MemberSignature Language="DocId" Value="P:System.Numerics.BigInteger.Sign" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Sign As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Sign { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Sign : int" Usage="System.Numerics.BigInteger.Sign" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d7187-1557">Получает число, указывающее знак (минус, плюс или нуль) текущего объекта <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-1557">Gets a number that indicates the sign (negative, positive, or zero) of the current <see cref="T:System.Numerics.BigInteger" /> object.</span></span></summary>
        <value><span data-ttu-id="d7187-1558">Число, которое указывает знак объекта <see cref="T:System.Numerics.BigInteger" />, как показано в следующей таблице.</span><span class="sxs-lookup"><span data-stu-id="d7187-1558">A number that indicates the sign of the <see cref="T:System.Numerics.BigInteger" /> object, as shown in the following table.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="d7187-1559">Число</span><span class="sxs-lookup"><span data-stu-id="d7187-1559">Number</span></span> 
 </term><description> <span data-ttu-id="d7187-1560">Описание</span><span class="sxs-lookup"><span data-stu-id="d7187-1560">Description</span></span> 
 </description></listheader><item><term> <span data-ttu-id="d7187-1561">-1</span><span class="sxs-lookup"><span data-stu-id="d7187-1561">-1</span></span> 
 </term><description> <span data-ttu-id="d7187-1562">Этот объект имеет отрицательное значение.</span><span class="sxs-lookup"><span data-stu-id="d7187-1562">The value of this object is negative.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="d7187-1563">0</span><span class="sxs-lookup"><span data-stu-id="d7187-1563">0</span></span> 
 </term><description> <span data-ttu-id="d7187-1564">Этот объект имеет значение 0 (нуль).</span><span class="sxs-lookup"><span data-stu-id="d7187-1564">The value of this object is 0 (zero).</span></span>  
  
 </description></item><item><term> <span data-ttu-id="d7187-1565">1</span><span class="sxs-lookup"><span data-stu-id="d7187-1565">1</span></span> 
 </term><description> <span data-ttu-id="d7187-1566">Этот объект имеет положительное значение.</span><span class="sxs-lookup"><span data-stu-id="d7187-1566">The value of this object is positive.</span></span>  
  
 </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7187-1567">Свойство эквивалентно <xref:System.Math.Sign%2A?displayProperty=nameWithType> методу для числовых типов-примитивов. <xref:System.Numerics.BigInteger.Sign%2A></span><span class="sxs-lookup"><span data-stu-id="d7187-1567">The <xref:System.Numerics.BigInteger.Sign%2A> property is equivalent to the <xref:System.Math.Sign%2A?displayProperty=nameWithType> method for the primitive numeric types.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Subtract">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger Subtract (System.Numerics.BigInteger left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.BigInteger Subtract(valuetype System.Numerics.BigInteger left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.Subtract(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Subtract (left As BigInteger, right As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger Subtract(System::Numerics::BigInteger left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member Subtract : System.Numerics.BigInteger * System.Numerics.BigInteger -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.Subtract (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="d7187-1568">Значение, из которого следует вычитать (уменьшаемое).</span><span class="sxs-lookup"><span data-stu-id="d7187-1568">The value to subtract from (the minuend).</span></span></param>
        <param name="right"><span data-ttu-id="d7187-1569">Значение для вычитания (вычитаемое).</span><span class="sxs-lookup"><span data-stu-id="d7187-1569">The value to subtract (the subtrahend).</span></span></param>
        <summary><span data-ttu-id="d7187-1570">Вычитает одно значение <see cref="T:System.Numerics.BigInteger" /> из другого и возвращает результат.</span><span class="sxs-lookup"><span data-stu-id="d7187-1570">Subtracts one <see cref="T:System.Numerics.BigInteger" /> value from another and returns the result.</span></span></summary>
        <returns><span data-ttu-id="d7187-1571">Результат вычитания <paramref name="right" /> из <paramref name="left" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-1571">The result of subtracting <paramref name="right" /> from <paramref name="left" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7187-1572">Языки, не поддерживающие пользовательские операторы, могут использовать <xref:System.Numerics.BigInteger.Subtract%2A> метод для выполнения вычитания с <xref:System.Numerics.BigInteger> использованием значений.</span><span class="sxs-lookup"><span data-stu-id="d7187-1572">Languages that do not support custom operators can use the <xref:System.Numerics.BigInteger.Subtract%2A> method to perform subtraction using <xref:System.Numerics.BigInteger> values.</span></span>  
  
 <span data-ttu-id="d7187-1573">Метод является полезным заменой для оператора вычитания при создании экземпляра <xref:System.Numerics.BigInteger> переменной путем назначения ей разницы, полученной в результате вычитания, как показано в следующем примере. <xref:System.Numerics.BigInteger.Subtract%2A></span><span class="sxs-lookup"><span data-stu-id="d7187-1573">The <xref:System.Numerics.BigInteger.Subtract%2A> method is a useful substitute for the subtraction operator when instantiating a <xref:System.Numerics.BigInteger> variable by assigning it the difference that results from subtraction, as shown in the following example.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.OperationMethods#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.OperationMethods/cs/Multiply1.cs#3)]
 [!code-vb[System.Numerics.BigInteger.OperationMethods#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.OperationMethods/vb/Multiply1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Numerics.BigInteger.op_Subtraction(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      </Docs>
    </Member>
    <Member MemberName="System.IComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IComparable.CompareTo (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IComparable.CompareTo(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.System#IComparable#CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function CompareTo (obj As Object) As Integer Implements IComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IComparable.CompareTo(System::Object ^ obj) = IComparable::CompareTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6" />
      </Parameters>
      <Docs>
        <param name="obj">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToByteArray">
      <MemberSignature Language="C#" Value="public byte[] ToByteArray ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] ToByteArray() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.ToByteArray" />
      <MemberSignature Language="VB.NET" Value="Public Function ToByteArray () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ ToByteArray();" />
      <MemberSignature Language="F#" Value="member this.ToByteArray : unit -&gt; byte[]" Usage="bigInteger.ToByteArray " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d7187-1574">Преобразует значение <see cref="T:System.Numerics.BigInteger" /> в массив байтов.</span><span class="sxs-lookup"><span data-stu-id="d7187-1574">Converts a <see cref="T:System.Numerics.BigInteger" /> value to a byte array.</span></span></summary>
        <returns><span data-ttu-id="d7187-1575">Значение текущего объекта <see cref="T:System.Numerics.BigInteger" />, преобразованное в массив байтов.</span><span class="sxs-lookup"><span data-stu-id="d7187-1575">The value of the current <see cref="T:System.Numerics.BigInteger" /> object converted to an array of bytes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7187-1576">Отдельные байты в массиве, возвращаемые этим методом, отображаются в порядке с прямым порядком байтов.</span><span class="sxs-lookup"><span data-stu-id="d7187-1576">The individual bytes in the array returned by this method appear in little-endian order.</span></span> <span data-ttu-id="d7187-1577">То есть байты более низкого порядка в значении предшествуют байтам более высокого порядка.</span><span class="sxs-lookup"><span data-stu-id="d7187-1577">That is, the lower-order bytes of the value precede the higher-order bytes.</span></span> <span data-ttu-id="d7187-1578">Первый байт массива отражает первые восемь бит <xref:System.Numerics.BigInteger> значения, второй байт отражает следующие восемь бит и т. д.</span><span class="sxs-lookup"><span data-stu-id="d7187-1578">The first byte of the array reflects the first eight bits of the <xref:System.Numerics.BigInteger> value, the second byte reflects the next eight bits, and so on.</span></span> <span data-ttu-id="d7187-1579">Например, значение 1024 или 0x0400 хранится как следующий массив из двух байтов:</span><span class="sxs-lookup"><span data-stu-id="d7187-1579">For example, the value 1024, or 0x0400, is stored as the following array of two bytes:</span></span>  
  
|<span data-ttu-id="d7187-1580">Элемент</span><span class="sxs-lookup"><span data-stu-id="d7187-1580">Element</span></span>|<span data-ttu-id="d7187-1581">Значение Byte</span><span class="sxs-lookup"><span data-stu-id="d7187-1581">Byte value</span></span>|  
|-------------|----------------|  
|<span data-ttu-id="d7187-1582">0</span><span class="sxs-lookup"><span data-stu-id="d7187-1582">0</span></span>|<span data-ttu-id="d7187-1583">0x00</span><span class="sxs-lookup"><span data-stu-id="d7187-1583">0x00</span></span>|  
|<span data-ttu-id="d7187-1584">1</span><span class="sxs-lookup"><span data-stu-id="d7187-1584">1</span></span>|<span data-ttu-id="d7187-1585">0x04</span><span class="sxs-lookup"><span data-stu-id="d7187-1585">0x04</span></span>|  
  
 <span data-ttu-id="d7187-1586">Отрицательные значения записываются в массив с помощью представления дополнения для двух вариантов в самой компактной форме.</span><span class="sxs-lookup"><span data-stu-id="d7187-1586">Negative values are written to the array using two's complement representation in the most compact form possible.</span></span> <span data-ttu-id="d7187-1587">Например,-1 представляется в виде одного байта, значение `0xFF` которого вместо массива с несколькими элементами, `0xFF`например, `0xFF` или `0xFF`, `0xFF` `0xFF`,, `0xFF`.</span><span class="sxs-lookup"><span data-stu-id="d7187-1587">For example, -1 is represented as a single byte whose value is `0xFF` instead of as an array with multiple elements, such as `0xFF`, `0xFF` or `0xFF`, `0xFF`, `0xFF`, `0xFF`.</span></span>  
  
 <span data-ttu-id="d7187-1588">Поскольку представление дополнения двух элементов всегда интерпретирует бит последнего байта в массиве (байт в позиции <xref:System.Array.Length%2A?displayProperty=nameWithType> `- 1`) как бит знака, метод возвращает массив байтов с дополнительным элементом, значение которого равно нулю. устранить неоднозначность положительных значений, которые в противном случае можно интерпретировать как заданные биты знаков.</span><span class="sxs-lookup"><span data-stu-id="d7187-1588">Because two's complement representation always interprets the highest-order bit of the last byte in the array (the byte at position <xref:System.Array.Length%2A?displayProperty=nameWithType>`- 1`) as the sign bit, the method returns a byte array with an extra element whose value is zero to disambiguate positive values that could otherwise be interpreted as having their sign bits set.</span></span> <span data-ttu-id="d7187-1589">Например, значение 120 или `0x78` представлено в виде однобайтового массива:. `0x78`</span><span class="sxs-lookup"><span data-stu-id="d7187-1589">For example, the value 120 or `0x78` is represented as a single-byte array: `0x78`.</span></span> <span data-ttu-id="d7187-1590">Однако 128 или `0x80`представляется как массив с двумя байтами: `0x80`, `0x00`.</span><span class="sxs-lookup"><span data-stu-id="d7187-1590">However, 128, or `0x80`, is represented as a two-byte array: `0x80`, `0x00`.</span></span>  
  
 <span data-ttu-id="d7187-1591">Можно округлить <xref:System.Numerics.BigInteger> значение, сохранив его в массиве байтов, а затем восстановив его <xref:System.Numerics.BigInteger.%23ctor%28System.Byte%5B%5D%29> с помощью конструктора.</span><span class="sxs-lookup"><span data-stu-id="d7187-1591">You can round-trip a <xref:System.Numerics.BigInteger> value by storing it to a byte array and then restoring it using the <xref:System.Numerics.BigInteger.%23ctor%28System.Byte%5B%5D%29> constructor.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="d7187-1592">Если код изменяет значение отдельных байтов в массиве, возвращаемом этим методом, перед восстановлением значения, необходимо убедиться, что вы не случайно изменили бит знака.</span><span class="sxs-lookup"><span data-stu-id="d7187-1592">If your code modifies the value of individual bytes in the array returned by this method before it restores the value, you must make sure that you do not unintentionally change the sign bit.</span></span> <span data-ttu-id="d7187-1593">Например, если изменения увеличивают положительное значение таким образом, что бит наивысшего порядка в последнем элементе массива байтов становится установленным, можно добавить новый байт, значение которого равно нулю, в конец массива.</span><span class="sxs-lookup"><span data-stu-id="d7187-1593">For example, if your modifications increase a positive value so that the highest-order bit in the last element of the byte array becomes set, you can add a new byte whose value is zero to the end of the array.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d7187-1594">В следующем примере показано, как <xref:System.Numerics.BigInteger> некоторые значения представлены в массивах байтов.</span><span class="sxs-lookup"><span data-stu-id="d7187-1594">The following example illustrates how some <xref:System.Numerics.BigInteger> values are represented in byte arrays.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.ToByteArray#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.ToByteArray/cs/ToByteArray1.cs#1)]
 [!code-vb[System.Numerics.BigInteger.ToByteArray#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.ToByteArray/vb/ToByteArray1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToByteArray">
      <MemberSignature Language="C#" Value="public byte[] ToByteArray (bool isUnsigned = false, bool isBigEndian = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] ToByteArray(bool isUnsigned, bool isBigEndian) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.ToByteArray(System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToByteArray (Optional isUnsigned As Boolean = false, Optional isBigEndian As Boolean = false) As Byte()" />
      <MemberSignature Language="F#" Value="member this.ToByteArray : bool * bool -&gt; byte[]" Usage="bigInteger.ToByteArray (isUnsigned, isBigEndian)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isUnsigned" Type="System.Boolean" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="isBigEndian" Type="System.Boolean" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="isUnsigned"><span data-ttu-id="d7187-1595"><see langword="true" /> для использования кодировки без знака; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-1595"><see langword="true" /> to use unsigned encoding; otherwise, <see langword="false" />.</span></span></param>
        <param name="isBigEndian"><span data-ttu-id="d7187-1596"><see langword="true" /> для записи байтов в обратном порядке; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-1596"><see langword="true" /> to write the bytes in a big-endian byte order; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="d7187-1597">Возвращает значение этого <see cref="T:System.Numerics.BigInteger" /> в виде массива байтов, используя наименьшее количество байтов.</span><span class="sxs-lookup"><span data-stu-id="d7187-1597">Returns the value of this <see cref="T:System.Numerics.BigInteger" /> as a byte array using the fewest number of bytes possible.</span></span> <span data-ttu-id="d7187-1598">Если значение равно нулю, возвращает массив из одного байта, элемент которого равен 0x00.</span><span class="sxs-lookup"><span data-stu-id="d7187-1598">If the value is zero, returns an array of one byte whose element is 0x00.</span></span></summary>
        <returns><span data-ttu-id="d7187-1599">Значение текущего объекта <see cref="T:System.Numerics.BigInteger" />, преобразованное в массив байтов.</span><span class="sxs-lookup"><span data-stu-id="d7187-1599">The value of the current <see cref="T:System.Numerics.BigInteger" /> object converted to an array of bytes.</span></span></returns>
        <remarks>
          <format type="text/markdown">
        

## Remarks

<span data-ttu-id="d7187-1600">Целочисленное значение `33022` можно экспортировать в четыре разных массива:</span><span class="sxs-lookup"><span data-stu-id="d7187-1600">The integer value `33022` can be exported in four different arrays:</span></span>

| <span data-ttu-id="d7187-1601">Свойства</span><span class="sxs-lookup"><span data-stu-id="d7187-1601">Properties</span></span>                           | <span data-ttu-id="d7187-1602">Результат</span><span class="sxs-lookup"><span data-stu-id="d7187-1602">Result</span></span>                          |
|--------------------------------------|---------------------------------|
| `isUnsigned: false, isBigEndian: false` | `new byte[] { 0xFE, 0x80, 0x00 }` |
| `isUnsigned: false, isBigEndian: true`  | `new byte[] { 0x00, 0x80, 0xFE }` |
| `isUnsigned: true, isBigEndian: false`  | `new byte[] { 0xFE, 0x80 } `      |
| `isUnsigned: true, isBigEndian: true`   | `new byte[] { 0x80, 0xFE }`       |

          ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="d7187-1603">Если <paramref name="isUnsigned" /> имеет значение <see langword="true" /> и <see cref="P:System.Numerics.BigInteger.Sign" /> является отрицательным значением.</span><span class="sxs-lookup"><span data-stu-id="d7187-1603">If <paramref name="isUnsigned" /> is <see langword="true" /> and <see cref="P:System.Numerics.BigInteger.Sign" /> is negative.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToString">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d7187-1604">Преобразует числовое значение текущего объекта <see cref="T:System.Numerics.BigInteger" /> в эквивалентное ему строковое представление.</span><span class="sxs-lookup"><span data-stu-id="d7187-1604">Converts the numeric value of the current <see cref="T:System.Numerics.BigInteger" /> object to its equivalent string representation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="bigInteger.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d7187-1605">Преобразует числовое значение текущего объекта <see cref="T:System.Numerics.BigInteger" /> в эквивалентное ему строковое представление.</span><span class="sxs-lookup"><span data-stu-id="d7187-1605">Converts the numeric value of the current <see cref="T:System.Numerics.BigInteger" /> object to its equivalent string representation.</span></span></summary>
        <returns><span data-ttu-id="d7187-1606">Строковое представление значения текущего объекта <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-1606">The string representation of the current <see cref="T:System.Numerics.BigInteger" /> value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7187-1607"><xref:System.Numerics.BigInteger.ToString> Метод<xref:System.Numerics.BigInteger> форматирует значение в "R" или циклический обмен данными с форматом текущего языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="d7187-1607">The <xref:System.Numerics.BigInteger.ToString> method formats a <xref:System.Numerics.BigInteger> value in the "R", or round-trip, format of the current culture.</span></span> <span data-ttu-id="d7187-1608">Если необходимо указать другой формат или язык и региональные параметры, используйте другие перегрузки <xref:System.Numerics.BigInteger.ToString%2A> метода следующим образом:</span><span class="sxs-lookup"><span data-stu-id="d7187-1608">If you want to specify a different format or culture, use the other overloads of the <xref:System.Numerics.BigInteger.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="d7187-1609">Использование формата</span><span class="sxs-lookup"><span data-stu-id="d7187-1609">To use format</span></span>|<span data-ttu-id="d7187-1610">Для языка и региональных параметров</span><span class="sxs-lookup"><span data-stu-id="d7187-1610">For culture</span></span>|<span data-ttu-id="d7187-1611">Использование перегрузки</span><span class="sxs-lookup"><span data-stu-id="d7187-1611">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="d7187-1612">Формат приема-передачи ("R")</span><span class="sxs-lookup"><span data-stu-id="d7187-1612">Round-trip ("R") format</span></span>|<span data-ttu-id="d7187-1613">Конкретный язык и региональные параметры</span><span class="sxs-lookup"><span data-stu-id="d7187-1613">A specific culture</span></span>|<xref:System.Numerics.BigInteger.ToString%2A>|  
|<span data-ttu-id="d7187-1614">Конкретный формат</span><span class="sxs-lookup"><span data-stu-id="d7187-1614">A specific format</span></span>|<span data-ttu-id="d7187-1615">Культура по умолчанию (текущий)</span><span class="sxs-lookup"><span data-stu-id="d7187-1615">Default (current) culture</span></span>|<xref:System.Numerics.BigInteger.ToString%28System.String%29>|  
|<span data-ttu-id="d7187-1616">Конкретный формат</span><span class="sxs-lookup"><span data-stu-id="d7187-1616">A specific format</span></span>|<span data-ttu-id="d7187-1617">Конкретный язык и региональные параметры</span><span class="sxs-lookup"><span data-stu-id="d7187-1617">A specific culture</span></span>|<xref:System.Numerics.BigInteger.ToString%28System.String%2CSystem.IFormatProvider%29>|  
  
 <span data-ttu-id="d7187-1618">Строковое представление <xref:System.Numerics.BigInteger> значения содержит отрицательный знак, если его значение отрицательное, и последовательность цифр в диапазоне от 0 до 9 без ведущих нулей.</span><span class="sxs-lookup"><span data-stu-id="d7187-1618">The string representation of the <xref:System.Numerics.BigInteger> value includes a negative sign if its value is negative, and a sequence of digits ranging from 0 to 9 without leading zeros.</span></span> <span data-ttu-id="d7187-1619">Отрицательный знак определяется <xref:System.Globalization.NumberFormatInfo> объектом для текущего языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="d7187-1619">The negative sign is defined by the <xref:System.Globalization.NumberFormatInfo> object for the current culture.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d7187-1620">В следующем примере <xref:System.Numerics.BigInteger> значение отображается с помощью метода по умолчанию <xref:System.Numerics.BigInteger.ToString> .</span><span class="sxs-lookup"><span data-stu-id="d7187-1620">The following example displays a <xref:System.Numerics.BigInteger> value by using the default <xref:System.Numerics.BigInteger.ToString> method.</span></span> <span data-ttu-id="d7187-1621">Он также отображает строковые представления <xref:System.Numerics.BigInteger> значения, полученные в результате использования некоторых стандартных описателей формата.</span><span class="sxs-lookup"><span data-stu-id="d7187-1621">It also displays the string representations of the <xref:System.Numerics.BigInteger> value that results from using some standard format specifiers.</span></span> <span data-ttu-id="d7187-1622">Примеры отображаются с использованием соглашений о форматировании языка и региональных параметров en-US.</span><span class="sxs-lookup"><span data-stu-id="d7187-1622">The examples are displayed using the formatting conventions of the en-US culture.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.ToString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.ToString/cs/ToString1.cs#1)]
 [!code-vb[System.Numerics.BigInteger.ToString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.ToString/vb/ToString1.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/base-types/standard-numeric-format-strings.md"><span data-ttu-id="d7187-1623">Строки стандартных числовых форматов</span><span class="sxs-lookup"><span data-stu-id="d7187-1623">Standard Numeric Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-numeric-format-strings.md"><span data-ttu-id="d7187-1624">Строки настраиваемых числовых форматов</span><span class="sxs-lookup"><span data-stu-id="d7187-1624">Custom Numeric Format Strings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.ToString(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="override this.ToString : IFormatProvider -&gt; string" Usage="bigInteger.ToString provider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="d7187-1625">Объект, предоставляющий сведения о форматировании для определенного языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="d7187-1625">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="d7187-1626">Преобразует числовое значение текущего объекта <see cref="T:System.Numerics.BigInteger" /> в эквивалентное ему строковое представление, используя указанные сведения об особенностях форматирования для данного языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="d7187-1626">Converts the numeric value of the current <see cref="T:System.Numerics.BigInteger" /> object to its equivalent string representation by using the specified culture-specific formatting information.</span></span></summary>
        <returns><span data-ttu-id="d7187-1627">Строковое представление значения текущего объекта <see cref="T:System.Numerics.BigInteger" /> в формате, заданном параметром <paramref name="provider" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-1627">The string representation of the current <see cref="T:System.Numerics.BigInteger" /> value in the format specified by the <paramref name="provider" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7187-1628">Метод форматирует значение в "R" или "циклический обмен" <xref:System.Globalization.NumberFormatInfo> , используя объект указанной культуры. <xref:System.Numerics.BigInteger> <xref:System.Numerics.BigInteger.ToString%28System.IFormatProvider%29></span><span class="sxs-lookup"><span data-stu-id="d7187-1628">The <xref:System.Numerics.BigInteger.ToString%28System.IFormatProvider%29> method formats a <xref:System.Numerics.BigInteger> value in the "R", or round-trip, format by using the <xref:System.Globalization.NumberFormatInfo> object of a specified culture.</span></span> <span data-ttu-id="d7187-1629">Если необходимо указать другой формат или текущий язык и региональные параметры, используйте другие перегрузки <xref:System.Numerics.BigInteger.ToString%2A> метода следующим образом:</span><span class="sxs-lookup"><span data-stu-id="d7187-1629">If you want to specify a different format or the current culture, use the other overloads of the <xref:System.Numerics.BigInteger.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="d7187-1630">Использование формата</span><span class="sxs-lookup"><span data-stu-id="d7187-1630">To use format</span></span>|<span data-ttu-id="d7187-1631">Для языка и региональных параметров</span><span class="sxs-lookup"><span data-stu-id="d7187-1631">For culture</span></span>|<span data-ttu-id="d7187-1632">Использование перегрузки</span><span class="sxs-lookup"><span data-stu-id="d7187-1632">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="d7187-1633">Формат приема-передачи ("R")</span><span class="sxs-lookup"><span data-stu-id="d7187-1633">Round-trip ("R") format</span></span>|<span data-ttu-id="d7187-1634">Культура по умолчанию (текущий)</span><span class="sxs-lookup"><span data-stu-id="d7187-1634">Default (current) culture</span></span>|<xref:System.Numerics.BigInteger.ToString>|  
|<span data-ttu-id="d7187-1635">Конкретный формат</span><span class="sxs-lookup"><span data-stu-id="d7187-1635">A specific format</span></span>|<span data-ttu-id="d7187-1636">Культура по умолчанию (текущий)</span><span class="sxs-lookup"><span data-stu-id="d7187-1636">Default (current) culture</span></span>|<xref:System.Numerics.BigInteger.ToString%28System.String%29>|  
|<span data-ttu-id="d7187-1637">Конкретный формат</span><span class="sxs-lookup"><span data-stu-id="d7187-1637">A specific format</span></span>|<span data-ttu-id="d7187-1638">Конкретный язык и региональные параметры</span><span class="sxs-lookup"><span data-stu-id="d7187-1638">A specific culture</span></span>|<xref:System.Numerics.BigInteger.ToString%28System.String%2CSystem.IFormatProvider%29>|  
  
 <span data-ttu-id="d7187-1639">`provider` Параметр<xref:System.IFormatProvider> является реализацией.</span><span class="sxs-lookup"><span data-stu-id="d7187-1639">The `provider` parameter is an <xref:System.IFormatProvider> implementation.</span></span> <span data-ttu-id="d7187-1640">Его <xref:System.IFormatProvider.GetFormat%2A> метод<xref:System.Globalization.NumberFormatInfo> возвращает объект, предоставляющий сведения о формате строки, возвращаемой этим методом, в зависимости от языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="d7187-1640">Its <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides culture-specific information about the format of the string returned by this method.</span></span> <span data-ttu-id="d7187-1641">Если `provider` имеет `null`значение, <xref:System.Globalization.NumberFormatInfo> оно форматируется с использованием объекта текущего языка и региональных параметров. <xref:System.Numerics.BigInteger></span><span class="sxs-lookup"><span data-stu-id="d7187-1641">If `provider` is `null`, the <xref:System.Numerics.BigInteger> value is formatted using the <xref:System.Globalization.NumberFormatInfo> object of the current culture.</span></span> <span data-ttu-id="d7187-1642">Единственным свойством <xref:System.Globalization.NumberFormatInfo> объекта, управляющего строковым представлением <xref:System.Numerics.BigInteger> значения с помощью описателя общего формата, является <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType>, который определяет символ, представляющий знак отрицательного числа.</span><span class="sxs-lookup"><span data-stu-id="d7187-1642">The only property of the <xref:System.Globalization.NumberFormatInfo> object that controls the string representation of the <xref:System.Numerics.BigInteger> value using the general format specifier is <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType>, which defines the character that represents the negative sign.</span></span>  
  
 <span data-ttu-id="d7187-1643">`provider` Параметр может быть одним из следующих:</span><span class="sxs-lookup"><span data-stu-id="d7187-1643">The `provider` parameter can be one of the following:</span></span>  
  
-   <span data-ttu-id="d7187-1644"><xref:System.Globalization.CultureInfo> Объект, представляющий язык и региональные параметры, которые предоставляют сведения о форматировании.</span><span class="sxs-lookup"><span data-stu-id="d7187-1644">A <xref:System.Globalization.CultureInfo> object that represents the culture that supplies formatting information.</span></span>  
  
-   <span data-ttu-id="d7187-1645"><xref:System.Globalization.NumberFormatInfo> Объект, предоставляющий сведения о форматировании.</span><span class="sxs-lookup"><span data-stu-id="d7187-1645">The <xref:System.Globalization.NumberFormatInfo> object that supplies formatting information.</span></span>  
  
-   <span data-ttu-id="d7187-1646">Пользовательский объект, реализующий <xref:System.IFormatProvider>интерфейс.</span><span class="sxs-lookup"><span data-stu-id="d7187-1646">A custom object that implements <xref:System.IFormatProvider>.</span></span> <span data-ttu-id="d7187-1647">Его <xref:System.IFormatProvider.GetFormat%2A> метод<xref:System.Globalization.NumberFormatInfo> возвращает объект, предоставляющий сведения о форматировании.</span><span class="sxs-lookup"><span data-stu-id="d7187-1647">Its <xref:System.IFormatProvider.GetFormat%2A> method returns the <xref:System.Globalization.NumberFormatInfo> object that supplies formatting information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d7187-1648">В следующем примере создается экземпляр пользовательского <xref:System.Globalization.NumberFormatInfo> объекта, который определяет тильду (~) как знак минус.</span><span class="sxs-lookup"><span data-stu-id="d7187-1648">The following example instantiates a custom <xref:System.Globalization.NumberFormatInfo> object that defines the tilde (~) as a negative sign.</span></span> <span data-ttu-id="d7187-1649">Затем метод использует пользовательский <xref:System.Globalization.NumberFormatInfo> объект для вывода отрицательного <xref:System.Numerics.BigInteger> значения. <xref:System.Numerics.BigInteger.ToString%28System.IFormatProvider%29></span><span class="sxs-lookup"><span data-stu-id="d7187-1649">The <xref:System.Numerics.BigInteger.ToString%28System.IFormatProvider%29> method then uses the custom <xref:System.Globalization.NumberFormatInfo> object to display a negative <xref:System.Numerics.BigInteger> value.</span></span>  
  
 [!code-csharp[System.Numeric.BigInteger.ToString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.ToString/cs/System.Numeric.BigInteger.ToString.cs#1)]
 [!code-vb[System.Numeric.BigInteger.ToString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.ToString/vb/System.Numeric.BigInteger.ToString.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.ToString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (format As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(System::String ^ format);" />
      <MemberSignature Language="F#" Value="override this.ToString : string -&gt; string" Usage="bigInteger.ToString format" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="d7187-1650">Стандартная или пользовательская строка числового формата.</span><span class="sxs-lookup"><span data-stu-id="d7187-1650">A standard or custom numeric format string.</span></span></param>
        <summary><span data-ttu-id="d7187-1651">Преобразует числовое значение текущего объекта <see cref="T:System.Numerics.BigInteger" /> в эквивалентное строковое представление с использованием указанного формата.</span><span class="sxs-lookup"><span data-stu-id="d7187-1651">Converts the numeric value of the current <see cref="T:System.Numerics.BigInteger" /> object to its equivalent string representation by using the specified format.</span></span></summary>
        <returns><span data-ttu-id="d7187-1652">Строковое представление значения текущего объекта <see cref="T:System.Numerics.BigInteger" /> в формате, заданном параметром <paramref name="format" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-1652">The string representation of the current <see cref="T:System.Numerics.BigInteger" /> value in the format specified by the <paramref name="format" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7187-1653">Метод форматирует значение в<xref:System.Globalization.NumberFormatInfo> указанном формате с помощью объекта, представляющего соглашения о текущем языке и региональных <xref:System.Numerics.BigInteger>параметрах <xref:System.Numerics.BigInteger.ToString%28System.String%29> .</span><span class="sxs-lookup"><span data-stu-id="d7187-1653">The <xref:System.Numerics.BigInteger.ToString%28System.String%29> method formats a <xref:System.Numerics.BigInteger> value in a specified format by using a <xref:System.Globalization.NumberFormatInfo> object that represents the conventions of the current culture.</span></span> <span data-ttu-id="d7187-1654">Если вы хотите использовать "R" или "циклический путь", отформатировать или указать другой язык и региональные параметры, используйте другие перегрузки <xref:System.Numerics.BigInteger.ToString%2A> метода следующим образом:</span><span class="sxs-lookup"><span data-stu-id="d7187-1654">If you want to use the "R", or round-trip, format or specify a different culture, use the other overloads of the <xref:System.Numerics.BigInteger.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="d7187-1655">Использование формата</span><span class="sxs-lookup"><span data-stu-id="d7187-1655">To use format</span></span>|<span data-ttu-id="d7187-1656">Для языка и региональных параметров</span><span class="sxs-lookup"><span data-stu-id="d7187-1656">For culture</span></span>|<span data-ttu-id="d7187-1657">Использование перегрузки</span><span class="sxs-lookup"><span data-stu-id="d7187-1657">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="d7187-1658">Формат приема-передачи ("R")</span><span class="sxs-lookup"><span data-stu-id="d7187-1658">Round-trip ("R") format</span></span>|<span data-ttu-id="d7187-1659">Культура по умолчанию (текущий)</span><span class="sxs-lookup"><span data-stu-id="d7187-1659">Default (current) culture</span></span>|<xref:System.Numerics.BigInteger.ToString>|  
|<span data-ttu-id="d7187-1660">Формат приема-передачи ("R")</span><span class="sxs-lookup"><span data-stu-id="d7187-1660">Round-trip ("R") format</span></span>|<span data-ttu-id="d7187-1661">Конкретный язык и региональные параметры</span><span class="sxs-lookup"><span data-stu-id="d7187-1661">A specific culture</span></span>|<xref:System.Numerics.BigInteger.ToString%28System.IFormatProvider%29>|  
|<span data-ttu-id="d7187-1662">Конкретный формат</span><span class="sxs-lookup"><span data-stu-id="d7187-1662">A specific format</span></span>|<span data-ttu-id="d7187-1663">Конкретный язык и региональные параметры</span><span class="sxs-lookup"><span data-stu-id="d7187-1663">A specific culture</span></span>|<xref:System.Numerics.BigInteger.ToString%28System.String%2CSystem.IFormatProvider%29>|  
  
 <span data-ttu-id="d7187-1664">Параметр может быть любой допустимой [стандартной числовой строкой](~/docs/standard/base-types/standard-numeric-format-strings.md)или любым сочетанием [строк настраиваемого числового формата.](~/docs/standard/base-types/custom-numeric-format-strings.md) `format`</span><span class="sxs-lookup"><span data-stu-id="d7187-1664">The `format` parameter can be any valid [standard numeric string](~/docs/standard/base-types/standard-numeric-format-strings.md), or any combination of [custom numeric format strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span> <span data-ttu-id="d7187-1665">Если `format` параметр <xref:System.Numerics.BigInteger> равен или равно, возвращаемое значение текущего объекта форматируется с помощью описателя формата приема-передачи ("R"). `null` <xref:System.String.Empty?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="d7187-1665">If `format` is equal to <xref:System.String.Empty?displayProperty=nameWithType> or is `null`, the return value of the current <xref:System.Numerics.BigInteger> object is formatted with the round-trip format specifier ("R").</span></span> <span data-ttu-id="d7187-1666">Если `format` параметр имеет любое другое значение, метод <xref:System.FormatException>создает исключение.</span><span class="sxs-lookup"><span data-stu-id="d7187-1666">If `format` is any other value, the method throws a <xref:System.FormatException>.</span></span>  
  
 <span data-ttu-id="d7187-1667">.NET Framework обеспечивает обширную поддержку форматирования, которая подробно описана в следующих разделах форматирования:</span><span class="sxs-lookup"><span data-stu-id="d7187-1667">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="d7187-1668">Дополнительные сведения о спецификаторах числовых форматов см. в разделе [строки стандартных числовых форматов](~/docs/standard/base-types/standard-numeric-format-strings.md) и [строки настраиваемых числовых форматов](~/docs/standard/base-types/custom-numeric-format-strings.md).</span><span class="sxs-lookup"><span data-stu-id="d7187-1668">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="d7187-1669">Дополнительные сведения о поддержке форматирования в .NET Framework см. в разделе [Типы форматирования](~/docs/standard/base-types/formatting-types.md).</span><span class="sxs-lookup"><span data-stu-id="d7187-1669">For more information about support for formatting in the .NET Framework, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
 <span data-ttu-id="d7187-1670">Формат возвращаемой строки определяется <xref:System.Globalization.NumberFormatInfo> объектом для текущего языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="d7187-1670">The format of the returned string is determined by the <xref:System.Globalization.NumberFormatInfo> object for the current culture.</span></span> <span data-ttu-id="d7187-1671">В зависимости `format` от параметра этот объект управляет такими символами, как знак отрицательного числа, разделитель групп и символ десятичной запятой в выходной строке.</span><span class="sxs-lookup"><span data-stu-id="d7187-1671">Depending on the `format` parameter, this object controls symbols such as the negative sign, the group separator, and the decimal point symbol in the output string.</span></span> <span data-ttu-id="d7187-1672">Чтобы предоставить сведения о форматировании для культур, отличных от текущего языка <xref:System.Numerics.BigInteger.ToString%28System.String%2CSystem.IFormatProvider%29> и региональных параметров, вызовите перегрузку.</span><span class="sxs-lookup"><span data-stu-id="d7187-1672">To provide formatting information for cultures other than the current culture, call the <xref:System.Numerics.BigInteger.ToString%28System.String%2CSystem.IFormatProvider%29> overload.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d7187-1673">В следующем примере инициализируется <xref:System.Numerics.BigInteger> значение и отображается с помощью каждой строки стандартного формата и некоторых строк настраиваемого формата.</span><span class="sxs-lookup"><span data-stu-id="d7187-1673">The following example initializes a <xref:System.Numerics.BigInteger> value and displays it by using each standard format string and some custom format strings.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.ToString#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.ToString/cs/ToString1.cs#3)]
 [!code-vb[System.Numerics.BigInteger.ToString#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.ToString/vb/ToString1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="d7187-1674"><paramref name="format" /> не является допустимым форматом строки.</span><span class="sxs-lookup"><span data-stu-id="d7187-1674"><paramref name="format" /> is not a valid format string.</span></span></exception>
        <related type="Article" href="~/docs/standard/base-types/standard-numeric-format-strings.md"><span data-ttu-id="d7187-1675">Строки стандартных числовых форматов</span><span class="sxs-lookup"><span data-stu-id="d7187-1675">Standard Numeric Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-numeric-format-strings.md"><span data-ttu-id="d7187-1676">Строки настраиваемых числовых форматов</span><span class="sxs-lookup"><span data-stu-id="d7187-1676">Custom Numeric Format Strings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string format, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(string format, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.ToString(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (format As String, provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ToString(System::String ^ format, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="override this.ToString : string * IFormatProvider -&gt; string" Usage="bigInteger.ToString (format, provider)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IFormattable.ToString(System.String,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="d7187-1677">Стандартная или пользовательская строка числового формата.</span><span class="sxs-lookup"><span data-stu-id="d7187-1677">A standard or custom numeric format string.</span></span></param>
        <param name="provider"><span data-ttu-id="d7187-1678">Объект, предоставляющий сведения о форматировании для определенного языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="d7187-1678">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="d7187-1679">Преобразует значение текущего объекта <see cref="T:System.Numerics.BigInteger" /> в эквивалентное ему строковое представление с использованием указанного формата и сведений об особенностях формата для определенного языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="d7187-1679">Converts the numeric value of the current <see cref="T:System.Numerics.BigInteger" /> object to its equivalent string representation by using the specified format and culture-specific format information.</span></span></summary>
        <returns><span data-ttu-id="d7187-1680">Строковое представление текущего значения <see cref="T:System.Numerics.BigInteger" /> в виде, заданном параметрами <paramref name="format" /> и <paramref name="provider" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-1680">The string representation of the current <see cref="T:System.Numerics.BigInteger" /> value as specified by the <paramref name="format" /> and <paramref name="provider" /> parameters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7187-1681">Метод форматирует значение в<xref:System.Globalization.NumberFormatInfo> указанном формате, используя объект указанного языка и региональных параметров. <xref:System.Numerics.BigInteger> <xref:System.Numerics.BigInteger.ToString%28System.String%2CSystem.IFormatProvider%29></span><span class="sxs-lookup"><span data-stu-id="d7187-1681">The <xref:System.Numerics.BigInteger.ToString%28System.String%2CSystem.IFormatProvider%29> method formats a <xref:System.Numerics.BigInteger> value in a specified format by using the <xref:System.Globalization.NumberFormatInfo> object of a specified culture.</span></span> <span data-ttu-id="d7187-1682">Если вы хотите использовать формат приема-передачи или параметры языка и региональных параметров по умолчанию, используйте другие перегрузки <xref:System.Numerics.BigInteger.ToString%2A> метода следующим образом:</span><span class="sxs-lookup"><span data-stu-id="d7187-1682">If you want to use the round-trip format or default culture settings, use the other overloads of the <xref:System.Numerics.BigInteger.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="d7187-1683">Использование формата</span><span class="sxs-lookup"><span data-stu-id="d7187-1683">To use format</span></span>|<span data-ttu-id="d7187-1684">Для языка и региональных параметров</span><span class="sxs-lookup"><span data-stu-id="d7187-1684">For culture</span></span>|<span data-ttu-id="d7187-1685">Использование перегрузки</span><span class="sxs-lookup"><span data-stu-id="d7187-1685">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="d7187-1686">Формат приема-передачи ("R")</span><span class="sxs-lookup"><span data-stu-id="d7187-1686">Round-trip ("R") format</span></span>|<span data-ttu-id="d7187-1687">Культура по умолчанию (текущий)</span><span class="sxs-lookup"><span data-stu-id="d7187-1687">Default (current) culture</span></span>|<xref:System.Numerics.BigInteger.ToString>|  
|<span data-ttu-id="d7187-1688">Формат приема-передачи ("R")</span><span class="sxs-lookup"><span data-stu-id="d7187-1688">Round-trip ("R") format</span></span>|<span data-ttu-id="d7187-1689">Конкретный язык и региональные параметры</span><span class="sxs-lookup"><span data-stu-id="d7187-1689">A specific culture</span></span>|<xref:System.Numerics.BigInteger.ToString%28System.IFormatProvider%29>|  
|<span data-ttu-id="d7187-1690">Конкретный формат</span><span class="sxs-lookup"><span data-stu-id="d7187-1690">A specific format</span></span>|<span data-ttu-id="d7187-1691">Культура по умолчанию (текущий)</span><span class="sxs-lookup"><span data-stu-id="d7187-1691">Default (current) culture</span></span>|<xref:System.Numerics.BigInteger.ToString%28System.String%29>|  
  
 <span data-ttu-id="d7187-1692">Параметр может быть любой допустимой [стандартной числовой строкой](~/docs/standard/base-types/standard-numeric-format-strings.md)или любым сочетанием [строк настраиваемого числового формата.](~/docs/standard/base-types/custom-numeric-format-strings.md) `format`</span><span class="sxs-lookup"><span data-stu-id="d7187-1692">The `format` parameter can be any valid  [standard numeric string](~/docs/standard/base-types/standard-numeric-format-strings.md), or any combination of [custom numeric format strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span> <span data-ttu-id="d7187-1693">Если `format` параметр <xref:System.Numerics.BigInteger> равен или равно, возвращаемое значение текущего объекта форматируется с помощью описателя формата приема-передачи ("R"). `null` <xref:System.String.Empty?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="d7187-1693">If `format` is equal to <xref:System.String.Empty?displayProperty=nameWithType> or is `null`, the return value of the current <xref:System.Numerics.BigInteger> object is formatted with the round-trip format specifier ("R").</span></span> <span data-ttu-id="d7187-1694">Если `format` параметр имеет любое другое значение, метод <xref:System.FormatException>создает исключение.</span><span class="sxs-lookup"><span data-stu-id="d7187-1694">If `format` is any other value, the method throws a <xref:System.FormatException>.</span></span>  
  
 <span data-ttu-id="d7187-1695">.NET Framework обеспечивает обширную поддержку форматирования, которая подробно описана в следующих разделах форматирования:</span><span class="sxs-lookup"><span data-stu-id="d7187-1695">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="d7187-1696">Дополнительные сведения о спецификаторах числовых форматов см. в разделе [строки стандартных числовых форматов](~/docs/standard/base-types/standard-numeric-format-strings.md) и [строки настраиваемых числовых форматов](~/docs/standard/base-types/custom-numeric-format-strings.md).</span><span class="sxs-lookup"><span data-stu-id="d7187-1696">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="d7187-1697">Дополнительные сведения о поддержке форматирования в .NET Framework см. в разделе [Типы форматирования](~/docs/standard/base-types/formatting-types.md).</span><span class="sxs-lookup"><span data-stu-id="d7187-1697">For more information about support for formatting in the .NET Framework, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
 <span data-ttu-id="d7187-1698">`provider` Параметр<xref:System.IFormatProvider> является реализацией.</span><span class="sxs-lookup"><span data-stu-id="d7187-1698">The `provider` parameter is an <xref:System.IFormatProvider> implementation.</span></span> <span data-ttu-id="d7187-1699">Его <xref:System.IFormatProvider.GetFormat%2A> метод<xref:System.Globalization.NumberFormatInfo> возвращает объект, предоставляющий сведения о формате строки, возвращаемой этим методом, в зависимости от языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="d7187-1699">Its <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides culture-specific information about the format of the string returned by this method.</span></span> <span data-ttu-id="d7187-1700"><xref:System.Type> `provider` <xref:System.IFormatProvider.GetFormat%2A> При вызове метода он вызывает метод параметра<xref:System.Globalization.NumberFormatInfo> и передает ему объект, представляющий тип. <xref:System.Numerics.BigInteger.ToString%28System.String%2CSystem.IFormatProvider%29></span><span class="sxs-lookup"><span data-stu-id="d7187-1700">When the <xref:System.Numerics.BigInteger.ToString%28System.String%2CSystem.IFormatProvider%29> method is invoked, it calls the `provider` parameter's <xref:System.IFormatProvider.GetFormat%2A> method and passes it a <xref:System.Type> object that represents the <xref:System.Globalization.NumberFormatInfo> type.</span></span> <span data-ttu-id="d7187-1701">Затем метод возвращает объект, предоставляющий сведения для форматирования `value` параметра, такие как символ знака минус, символ разделителя группы или символ десятичной запятой. <xref:System.Globalization.NumberFormatInfo> <xref:System.IFormatProvider.GetFormat%2A></span><span class="sxs-lookup"><span data-stu-id="d7187-1701">The <xref:System.IFormatProvider.GetFormat%2A> method then returns the <xref:System.Globalization.NumberFormatInfo> object that provides information for formatting the `value` parameter, such as the negative sign symbol, the group separator symbol, or the decimal point symbol.</span></span> <span data-ttu-id="d7187-1702">Существует три способа использования `provider` параметра для предоставления сведений о <xref:System.Numerics.BigInteger.ToString%28System.String%2CSystem.IFormatProvider%29> форматировании методу:</span><span class="sxs-lookup"><span data-stu-id="d7187-1702">There are three ways to use the `provider` parameter to supply formatting information to the <xref:System.Numerics.BigInteger.ToString%28System.String%2CSystem.IFormatProvider%29> method:</span></span>  
  
-   <span data-ttu-id="d7187-1703">Можно передать <xref:System.Globalization.CultureInfo> объект, представляющий язык и региональные параметры, которые предоставляют сведения о форматировании.</span><span class="sxs-lookup"><span data-stu-id="d7187-1703">You can pass a <xref:System.Globalization.CultureInfo> object that represents the culture that supplies formatting information.</span></span> <span data-ttu-id="d7187-1704">Его <xref:System.Globalization.CultureInfo.GetFormat%2A> метод<xref:System.Globalization.NumberFormatInfo> возвращает объект, предоставляющий сведения о форматировании числовых значений для этого языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="d7187-1704">Its <xref:System.Globalization.CultureInfo.GetFormat%2A> method returns the <xref:System.Globalization.NumberFormatInfo> object that provides numeric formatting information for that culture.</span></span>  
  
-   <span data-ttu-id="d7187-1705">Можно передать фактический <xref:System.Globalization.NumberFormatInfo> объект, предоставляющий сведения о форматировании чисел.</span><span class="sxs-lookup"><span data-stu-id="d7187-1705">You can pass the actual <xref:System.Globalization.NumberFormatInfo> object that provides numeric formatting information.</span></span> <span data-ttu-id="d7187-1706">(Его реализация <xref:System.Globalization.NumberFormatInfo.GetFormat%2A> просто возвращает сам себя.)</span><span class="sxs-lookup"><span data-stu-id="d7187-1706">(Its implementation of <xref:System.Globalization.NumberFormatInfo.GetFormat%2A> just returns itself.)</span></span>  
  
-   <span data-ttu-id="d7187-1707">Можно передать пользовательский объект, реализующий интерфейс <xref:System.IFormatProvider>.</span><span class="sxs-lookup"><span data-stu-id="d7187-1707">You can pass a custom object that implements <xref:System.IFormatProvider>.</span></span> <span data-ttu-id="d7187-1708">Его <xref:System.IFormatProvider.GetFormat%2A> метод создает экземпляр и <xref:System.Globalization.NumberFormatInfo> возвращает объект, предоставляющий сведения о форматировании.</span><span class="sxs-lookup"><span data-stu-id="d7187-1708">Its <xref:System.IFormatProvider.GetFormat%2A> method instantiates and returns the <xref:System.Globalization.NumberFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="d7187-1709">Если `provider` имеет `null`значение, форматирование возвращаемой <xref:System.Globalization.NumberFormatInfo> строки основано на объекте текущего языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="d7187-1709">If `provider` is `null`, the formatting of the returned string is based on the <xref:System.Globalization.NumberFormatInfo> object of the current culture.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d7187-1710">В следующем примере инициализируется <xref:System.Numerics.BigInteger> значение и отображается в консоли с помощью строки стандартного формата <xref:System.Globalization.NumberFormatInfo> и объекта, определяющего тильду (~) как знак минус.</span><span class="sxs-lookup"><span data-stu-id="d7187-1710">The following example initializes a <xref:System.Numerics.BigInteger> value, and displays it to the console using a standard format string and a <xref:System.Globalization.NumberFormatInfo> object that defines the tilde (~) as a negative sign.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.ToString#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.ToString/cs/ToString1.cs#4)]
 [!code-vb[System.Numerics.BigInteger.ToString#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.ToString/vb/ToString1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="d7187-1711"><paramref name="format" /> не является допустимым форматом строки.</span><span class="sxs-lookup"><span data-stu-id="d7187-1711"><paramref name="format" /> is not a valid format string.</span></span></exception>
        <related type="Article" href="~/docs/standard/base-types/standard-numeric-format-strings.md"><span data-ttu-id="d7187-1712">Строки стандартных числовых форматов</span><span class="sxs-lookup"><span data-stu-id="d7187-1712">Standard Numeric Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-numeric-format-strings.md"><span data-ttu-id="d7187-1713">Строки настраиваемых числовых форматов</span><span class="sxs-lookup"><span data-stu-id="d7187-1713">Custom Numeric Format Strings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public bool TryFormat (Span&lt;char&gt; destination, out int charsWritten, ReadOnlySpan&lt;char&gt; format = null, IFormatProvider provider = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryFormat(valuetype System.Span`1&lt;char&gt; destination, [out] int32&amp; charsWritten, valuetype System.ReadOnlySpan`1&lt;char&gt; format, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.TryFormat(System.Span{System.Char},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryFormat (destination As Span(Of Char), ByRef charsWritten As Integer, Optional format As ReadOnlySpan(Of Char) = null, Optional provider As IFormatProvider = null) As Boolean" />
      <MemberSignature Language="F#" Value="member this.TryFormat : Span&lt;char&gt; *  * ReadOnlySpan&lt;char&gt; * IFormatProvider -&gt; bool" Usage="bigInteger.TryFormat (destination, charsWritten, format, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="charsWritten" Type="System.Int32" RefType="out" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="format" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="2" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="provider" Type="System.IFormatProvider" Index="3" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="destination">To be added.</param>
        <param name="charsWritten">To be added.</param>
        <param name="format">To be added.</param>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryParse">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d7187-1714">Предпринимает попытку преобразования строкового представления числа в его эквивалент типа <see cref="T:System.Numerics.BigInteger" /> и возвращает значение, позволяющее определить, успешно ли выполнено преобразование.</span><span class="sxs-lookup"><span data-stu-id="d7187-1714">Tries to convert the string representation of a number to its <see cref="T:System.Numerics.BigInteger" /> equivalent, and returns a value that indicates whether the conversion succeeded.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;char&gt; value, out System.Numerics.BigInteger result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;char&gt; value, [out] valuetype System.Numerics.BigInteger&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.TryParse(System.ReadOnlySpan{System.Char},System.Numerics.BigInteger@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (value As ReadOnlySpan(Of Char), ByRef result As BigInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(ReadOnlySpan&lt;char&gt; value, [Runtime::InteropServices::Out] System::Numerics::BigInteger % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;char&gt; *  -&gt; bool" Usage="System.Numerics.BigInteger.TryParse (value, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="result" Type="System.Numerics.BigInteger" RefType="out" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string value, out System.Numerics.BigInteger result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string value, [out] valuetype System.Numerics.BigInteger&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.TryParse(System.String,System.Numerics.BigInteger@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (value As String, ByRef result As BigInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ value, [Runtime::InteropServices::Out] System::Numerics::BigInteger % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : string *  -&gt; bool" Usage="System.Numerics.BigInteger.TryParse (value, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="result" Type="System.Numerics.BigInteger" RefType="out" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d7187-1715">Строковое представление числа.</span><span class="sxs-lookup"><span data-stu-id="d7187-1715">The string representation of a number.</span></span></param>
        <param name="result"><span data-ttu-id="d7187-1716">После выполнения этого метода содержит эквивалент типа <see cref="T:System.Numerics.BigInteger" /> числа, содержащегося в параметре <paramref name="value" />, или нуль (0), если выполнить преобразование не удалось.</span><span class="sxs-lookup"><span data-stu-id="d7187-1716">When this method returns, contains the <see cref="T:System.Numerics.BigInteger" /> equivalent to the number that is contained in <paramref name="value" />, or zero (0) if the conversion fails.</span></span> <span data-ttu-id="d7187-1717">Преобразование не удается выполнить, если значение параметра <paramref name="value" /> равно <see langword="null" /> или задано в неверном формате,</span><span class="sxs-lookup"><span data-stu-id="d7187-1717">The conversion fails if the <paramref name="value" /> parameter is <see langword="null" /> or is not of the correct format.</span></span> <span data-ttu-id="d7187-1718">Этот параметр передается неинициализированным.</span><span class="sxs-lookup"><span data-stu-id="d7187-1718">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="d7187-1719">Предпринимает попытку преобразования строкового представления числа в его эквивалент типа <see cref="T:System.Numerics.BigInteger" /> и возвращает значение, позволяющее определить, успешно ли выполнено преобразование.</span><span class="sxs-lookup"><span data-stu-id="d7187-1719">Tries to convert the string representation of a number to its <see cref="T:System.Numerics.BigInteger" /> equivalent, and returns a value that indicates whether the conversion succeeded.</span></span></summary>
        <returns><span data-ttu-id="d7187-1720">Значение <see langword="true" />, если параметр <paramref name="value" /> успешно преобразован; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-1720"><see langword="true" /> if <paramref name="value" /> was converted successfully; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7187-1721">Метод похож на <xref:System.Numerics.BigInteger.Parse%28System.String%29> метод, за исключением того, что он не создает исключение, если преобразование завершается неудачей. <xref:System.Numerics.BigInteger.TryParse%28System.String%2CSystem.Numerics.BigInteger%40%29></span><span class="sxs-lookup"><span data-stu-id="d7187-1721">The <xref:System.Numerics.BigInteger.TryParse%28System.String%2CSystem.Numerics.BigInteger%40%29> method is like the <xref:System.Numerics.BigInteger.Parse%28System.String%29> method, except that it does not throw an exception if the conversion fails.</span></span> <span data-ttu-id="d7187-1722">Этот метод устраняет необходимость использования обработки исключений для проверки, <xref:System.FormatException> если `value` является недопустимой и не может быть успешно проанализирована.</span><span class="sxs-lookup"><span data-stu-id="d7187-1722">This method eliminates the need to use exception handling to test for a <xref:System.FormatException> if `value` is invalid and cannot be successfully parsed.</span></span>  
  
 <span data-ttu-id="d7187-1723">`value` Параметр должен быть строковым представлением десятичного числа в следующей форме:</span><span class="sxs-lookup"><span data-stu-id="d7187-1723">The `value` parameter should be the string representation of a decimal number in the following form:</span></span>  
  
 <span data-ttu-id="d7187-1724">[*WS*] [*Sign*] *цифры* [*WS*]</span><span class="sxs-lookup"><span data-stu-id="d7187-1724">[*ws*][*sign*]*digits*[*ws*]</span></span>  
  
 <span data-ttu-id="d7187-1725">Элементы в квадратных скобках ([и]) являются необязательными.</span><span class="sxs-lookup"><span data-stu-id="d7187-1725">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="d7187-1726">Каждый из элементов описан в таблице ниже.</span><span class="sxs-lookup"><span data-stu-id="d7187-1726">The following table describes each element.</span></span>  
  
|<span data-ttu-id="d7187-1727">Элемент</span><span class="sxs-lookup"><span data-stu-id="d7187-1727">Element</span></span>|<span data-ttu-id="d7187-1728">Описание</span><span class="sxs-lookup"><span data-stu-id="d7187-1728">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="d7187-1729">*ws*</span><span class="sxs-lookup"><span data-stu-id="d7187-1729">*ws*</span></span>|<span data-ttu-id="d7187-1730">Необязательный пробел.</span><span class="sxs-lookup"><span data-stu-id="d7187-1730">Optional white space.</span></span>|  
|<span data-ttu-id="d7187-1731">*sign*</span><span class="sxs-lookup"><span data-stu-id="d7187-1731">*sign*</span></span>|<span data-ttu-id="d7187-1732">Необязательный знак.</span><span class="sxs-lookup"><span data-stu-id="d7187-1732">An optional sign.</span></span> <span data-ttu-id="d7187-1733">Допустимые символы знака определяются <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType> свойствами и <xref:System.Globalization.NumberFormatInfo.PositiveSign%2A?displayProperty=nameWithType> текущего языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="d7187-1733">Valid sign characters are determined by the <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType> and <xref:System.Globalization.NumberFormatInfo.PositiveSign%2A?displayProperty=nameWithType> properties of the current culture.</span></span>|  
|<span data-ttu-id="d7187-1734">*digits*</span><span class="sxs-lookup"><span data-stu-id="d7187-1734">*digits*</span></span>|<span data-ttu-id="d7187-1735">Последовательность десятичных цифр в диапазоне от 0 до 9.</span><span class="sxs-lookup"><span data-stu-id="d7187-1735">A sequence of decimal digits ranging from 0 to 9.</span></span>|  
  
> [!NOTE]
>  <span data-ttu-id="d7187-1736">Строка, заданная `value` параметром, не может содержать разделители групп или десятичный разделитель и не может иметь дробную часть.</span><span class="sxs-lookup"><span data-stu-id="d7187-1736">The string specified by the `value` parameter cannot contain any group separators or decimal separator, and it cannot have a decimal portion.</span></span>  
  
 <span data-ttu-id="d7187-1737">Параметр интерпретируется с <xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType> помощью стиля. `value`</span><span class="sxs-lookup"><span data-stu-id="d7187-1737">The `value` parameter is interpreted by using the <xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType> style.</span></span> <span data-ttu-id="d7187-1738">В дополнение к десятичным цифрам допускаются только ведущие и конечные пробелы с ведущим знаком.</span><span class="sxs-lookup"><span data-stu-id="d7187-1738">In addition to the decimal digits, only leading and trailing spaces with a leading sign are allowed.</span></span> <span data-ttu-id="d7187-1739">Чтобы явно определить элементы стиля с данными форматирования, зависящими от языка и региональных параметров, которые `value`могут присутствовать <xref:System.Numerics.BigInteger.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Numerics.BigInteger%40%29> в, вызовите метод.</span><span class="sxs-lookup"><span data-stu-id="d7187-1739">To explicitly define the style elements with the culture-specific formatting information that can be present in `value`, call the <xref:System.Numerics.BigInteger.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Numerics.BigInteger%40%29> method.</span></span>  
  
 <span data-ttu-id="d7187-1740">Параметр анализируется с помощью сведений о форматировании <xref:System.Globalization.NumberFormatInfo> в объекте для текущего языка и региональных параметров. `value`</span><span class="sxs-lookup"><span data-stu-id="d7187-1740">The `value` parameter is parsed by using the formatting information in a <xref:System.Globalization.NumberFormatInfo> object for the current culture.</span></span> <span data-ttu-id="d7187-1741">Для получения дополнительной информации см. <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="d7187-1741">For more information, see <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="d7187-1742">Эта перегрузка интерпретирует все цифры в `value` параметре как десятичные цифры.</span><span class="sxs-lookup"><span data-stu-id="d7187-1742">This overload interprets all digits in the `value` parameter as decimal digits.</span></span> <span data-ttu-id="d7187-1743">Чтобы проанализировать строковое представление шестнадцатеричного числа, вызовите <xref:System.Numerics.BigInteger.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Numerics.BigInteger%40%29> перегрузку.</span><span class="sxs-lookup"><span data-stu-id="d7187-1743">To parse the string representation of a hexadecimal number, call the <xref:System.Numerics.BigInteger.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Numerics.BigInteger%40%29> overload instead.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d7187-1744">В следующем примере используется <xref:System.Numerics.BigInteger.TryParse%28System.String%2CSystem.Numerics.BigInteger%40%29> метод для создания экземпляра двух <xref:System.Numerics.BigInteger> объектов.</span><span class="sxs-lookup"><span data-stu-id="d7187-1744">The following example uses the <xref:System.Numerics.BigInteger.TryParse%28System.String%2CSystem.Numerics.BigInteger%40%29> method to instantiate two <xref:System.Numerics.BigInteger> objects.</span></span> <span data-ttu-id="d7187-1745">В случае успешности преобразования каждый объект умножается на другое число, а затем вызывает <xref:System.Numerics.BigInteger.Compare%2A> метод для определения связи между двумя объектами.</span><span class="sxs-lookup"><span data-stu-id="d7187-1745">If the conversions succeed, it multiplies each object by another number and then calls the <xref:System.Numerics.BigInteger.Compare%2A> method to determine the relationship between the two objects.</span></span>  
  
 [!code-csharp[System.Numeric.BigInteger.TryParse#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.TryParse/cs/System.Numeric.BigInteger.TryParse.cs#1)]
 [!code-vb[System.Numeric.BigInteger.TryParse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.TryParse/vb/System.Numeric.BigInteger.TryParse.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d7187-1746"><paramref name="value" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-1746"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Numerics.BigInteger.ToString(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;char&gt; value, System.Globalization.NumberStyles style, IFormatProvider provider, out System.Numerics.BigInteger result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;char&gt; value, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider, [out] valuetype System.Numerics.BigInteger&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.TryParse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (value As ReadOnlySpan(Of Char), style As NumberStyles, provider As IFormatProvider, ByRef result As BigInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(ReadOnlySpan&lt;char&gt; value, System::Globalization::NumberStyles style, IFormatProvider ^ provider, [Runtime::InteropServices::Out] System::Numerics::BigInteger % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;char&gt; * System.Globalization.NumberStyles * IFormatProvider *  -&gt; bool" Usage="System.Numerics.BigInteger.TryParse (value, style, provider, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="provider" Type="System.IFormatProvider" Index="2" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="result" Type="System.Numerics.BigInteger" RefType="out" Index="3" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="style">To be added.</param>
        <param name="provider">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string value, System.Globalization.NumberStyles style, IFormatProvider provider, out System.Numerics.BigInteger result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string value, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider, [out] valuetype System.Numerics.BigInteger&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (value As String, style As NumberStyles, provider As IFormatProvider, ByRef result As BigInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ value, System::Globalization::NumberStyles style, IFormatProvider ^ provider, [Runtime::InteropServices::Out] System::Numerics::BigInteger % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : string * System.Globalization.NumberStyles * IFormatProvider *  -&gt; bool" Usage="System.Numerics.BigInteger.TryParse (value, style, provider, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
        <Parameter Name="result" Type="System.Numerics.BigInteger" RefType="out" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d7187-1747">Строковое представление числа.</span><span class="sxs-lookup"><span data-stu-id="d7187-1747">The string representation of a number.</span></span> <span data-ttu-id="d7187-1748">Строка интерпретируется с использованием стиля, указанного в <paramref name="style" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-1748">The string is interpreted using the style specified by <paramref name="style" />.</span></span></param>
        <param name="style"><span data-ttu-id="d7187-1749">Побитовое сочетание значений перечисления, обозначающих элементы стиля, которые могут быть представлены в параметре <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-1749">A bitwise combination of enumeration values that indicates the style elements that can be present in <paramref name="value" />.</span></span> <span data-ttu-id="d7187-1750">Обычно указывается значение <see cref="F:System.Globalization.NumberStyles.Integer" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-1750">A typical value to specify is <see cref="F:System.Globalization.NumberStyles.Integer" />.</span></span></param>
        <param name="provider"><span data-ttu-id="d7187-1751">Объект, который предоставляет сведения о форматировании параметра <paramref name="value" /> в зависимости от языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="d7187-1751">An object that supplies culture-specific formatting information about <paramref name="value" />.</span></span></param>
        <param name="result"><span data-ttu-id="d7187-1752">После выполнения этого метода содержит эквивалент типа <see cref="T:System.Numerics.BigInteger" /> числа, содержащегося в параметре <paramref name="value" />, или <see cref="P:System.Numerics.BigInteger.Zero" />, если выполнить преобразование не удалось.</span><span class="sxs-lookup"><span data-stu-id="d7187-1752">When this method returns, contains the <see cref="T:System.Numerics.BigInteger" /> equivalent to the number that is contained in <paramref name="value" />, or <see cref="P:System.Numerics.BigInteger.Zero" /> if the conversion failed.</span></span> <span data-ttu-id="d7187-1753">Преобразование не удается выполнить, если параметр <paramref name="value" /> имеет значение <see langword="null" /> или имеет формат, несовместимый со значением <paramref name="style" />,</span><span class="sxs-lookup"><span data-stu-id="d7187-1753">The conversion fails if the <paramref name="value" /> parameter is <see langword="null" /> or is not in a format that is compliant with <paramref name="style" />.</span></span> <span data-ttu-id="d7187-1754">Этот параметр передается неинициализированным.</span><span class="sxs-lookup"><span data-stu-id="d7187-1754">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="d7187-1755">Предпринимает попытку преобразования числа в формате, который определяется заданным стилем и языком и региональными параметрами, в эквивалент типа <see cref="T:System.Numerics.BigInteger" /> и возвращает значение, определяющее, успешно ли выполнено преобразование.</span><span class="sxs-lookup"><span data-stu-id="d7187-1755">Tries to convert the string representation of a number in a specified style and culture-specific format to its <see cref="T:System.Numerics.BigInteger" /> equivalent, and returns a value that indicates whether the conversion succeeded.</span></span></summary>
        <returns><span data-ttu-id="d7187-1756">Значение <see langword="true" />, если параметр <paramref name="value" /> успешно преобразован; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-1756"><see langword="true" /> if the <paramref name="value" /> parameter was converted successfully; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7187-1757">Метод похож на <xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29> метод, за исключением того, что он не создает исключение, если преобразование завершается неудачей. <xref:System.Numerics.BigInteger.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Numerics.BigInteger%40%29></span><span class="sxs-lookup"><span data-stu-id="d7187-1757">The <xref:System.Numerics.BigInteger.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Numerics.BigInteger%40%29> method is like the <xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29> method, except that it does not throw an exception if the conversion fails.</span></span> <span data-ttu-id="d7187-1758">Этот метод устраняет необходимость использования обработки исключений для проверки, <xref:System.FormatException> если `value` является недопустимой и не может быть успешно проанализирована.</span><span class="sxs-lookup"><span data-stu-id="d7187-1758">This method eliminates the need to use exception handling to test for a <xref:System.FormatException> if `value` is invalid and cannot be parsed successfully.</span></span>  
  
 <span data-ttu-id="d7187-1759">Параметр определяет элементы стиля (например, пробелы или положительный или отрицательный знак), допустимые `value` в параметре для успешной операции синтаксического анализа. `style`</span><span class="sxs-lookup"><span data-stu-id="d7187-1759">The `style` parameter defines the style elements (such as white space or a positive or negative sign) that are allowed in the `value` parameter for the parse operation to succeed.</span></span> <span data-ttu-id="d7187-1760">Он должен представлять собой сочетание битовых флагов из <xref:System.Globalization.NumberStyles> перечисления.</span><span class="sxs-lookup"><span data-stu-id="d7187-1760">It must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration.</span></span> <span data-ttu-id="d7187-1761">В зависимости от значения `style` `value` параметр может включать следующие элементы:</span><span class="sxs-lookup"><span data-stu-id="d7187-1761">Depending on the value of `style`, the `value` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="d7187-1762">[*WS*] [*$*] [*знак*] [*цифры*,]*цифры*[. *fractional_digits*] [E [*Sign*]*exponential_digits*] [*WS*]</span><span class="sxs-lookup"><span data-stu-id="d7187-1762">[*ws*][*$*][*sign*][*digits*,]*digits*[.*fractional_digits*][E[*sign*]*exponential_digits*][*ws*]</span></span>  
  
 <span data-ttu-id="d7187-1763">Если параметр включен <xref:System.Globalization.NumberStyles.AllowHexSpecifier> ,`value` параметр может включать следующие элементы: `style`</span><span class="sxs-lookup"><span data-stu-id="d7187-1763">If the `style` parameter includes <xref:System.Globalization.NumberStyles.AllowHexSpecifier>, the `value` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="d7187-1764">[*WS*] *хексдигитс* [*WS*]</span><span class="sxs-lookup"><span data-stu-id="d7187-1764">[*ws*]*hexdigits*[*ws*]</span></span>  
  
 <span data-ttu-id="d7187-1765">Элементы в квадратных скобках ([и]) являются необязательными.</span><span class="sxs-lookup"><span data-stu-id="d7187-1765">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="d7187-1766">Каждый из элементов описан в таблице ниже.</span><span class="sxs-lookup"><span data-stu-id="d7187-1766">The following table describes each element.</span></span>  
  
|<span data-ttu-id="d7187-1767">Элемент</span><span class="sxs-lookup"><span data-stu-id="d7187-1767">Element</span></span>|<span data-ttu-id="d7187-1768">Описание</span><span class="sxs-lookup"><span data-stu-id="d7187-1768">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="d7187-1769">*ws*</span><span class="sxs-lookup"><span data-stu-id="d7187-1769">*ws*</span></span>|<span data-ttu-id="d7187-1770">Необязательный пробел.</span><span class="sxs-lookup"><span data-stu-id="d7187-1770">Optional white space.</span></span> <span data-ttu-id="d7187-1771">`value` Пробелы могут присутствовать в начале, если `style` включает <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> флаг, <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> или в конце `value` , если `style` включает флаг.</span><span class="sxs-lookup"><span data-stu-id="d7187-1771">White space can appear at the start of `value` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> flag, or at the end of `value` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> flag.</span></span>|  
|*$*|<span data-ttu-id="d7187-1772">Символ валюты, зависящий от языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="d7187-1772">A culture-specific currency symbol.</span></span> <span data-ttu-id="d7187-1773">Его расположение в строке <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A> определяется свойством <xref:System.Globalization.NumberFormatInfo> объекта, возвращаемого <xref:System.IFormatProvider.GetFormat%2A> методом `provider` параметра.</span><span class="sxs-lookup"><span data-stu-id="d7187-1773">Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A> property of the <xref:System.Globalization.NumberFormatInfo> object returned by the <xref:System.IFormatProvider.GetFormat%2A> method of the `provider` parameter.</span></span> <span data-ttu-id="d7187-1774">Символ валюты может отображаться в `value` , <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> если `style` включает флаг.</span><span class="sxs-lookup"><span data-stu-id="d7187-1774">The currency symbol can appear in `value` if `style` includes the <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="d7187-1775">*sign*</span><span class="sxs-lookup"><span data-stu-id="d7187-1775">*sign*</span></span>|<span data-ttu-id="d7187-1776">Необязательный знак.</span><span class="sxs-lookup"><span data-stu-id="d7187-1776">An optional sign.</span></span> <span data-ttu-id="d7187-1777">Знак `value` может отображаться в начале, если `style` включает <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> флаг, `value` и может <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> находиться в конце, если `style` включает флаг.</span><span class="sxs-lookup"><span data-stu-id="d7187-1777">The sign can appear at the start of `value` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> flag, and it can appear at the end of `value` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="d7187-1778">Круглые скобки могут использоваться в `value` , чтобы указать отрицательное значение `style` , если <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> включает флаг.</span><span class="sxs-lookup"><span data-stu-id="d7187-1778">Parentheses can be used in `value` to indicate a negative value if `style` includes the <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="d7187-1779">*digits*</span><span class="sxs-lookup"><span data-stu-id="d7187-1779">*digits*</span></span>|<span data-ttu-id="d7187-1780">Последовательность цифр от 0 до 9.</span><span class="sxs-lookup"><span data-stu-id="d7187-1780">A sequence of digits from 0 through 9.</span></span>|  
|<span data-ttu-id="d7187-1781">*,*</span><span class="sxs-lookup"><span data-stu-id="d7187-1781">*,*</span></span>|<span data-ttu-id="d7187-1782">Разделитель групп, зависящий от языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="d7187-1782">A culture-specific group separator.</span></span> <span data-ttu-id="d7187-1783">Разделитель групп для языка и региональных параметров, `provider` заданный параметром `style` , может <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> использоваться в `value` , если включает флаг.</span><span class="sxs-lookup"><span data-stu-id="d7187-1783">The group separator of the culture specified by `provider` can appear in `value` if `style` includes the <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="d7187-1784">*.*</span><span class="sxs-lookup"><span data-stu-id="d7187-1784">*.*</span></span>|<span data-ttu-id="d7187-1785">Символ десятичной запятой, зависящий от языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="d7187-1785">A culture-specific decimal point symbol.</span></span> <span data-ttu-id="d7187-1786">Символ десятичной запятой, заданный параметром `provider` , может присутствовать `style` в `value` параметре, если включает <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> флаг.</span><span class="sxs-lookup"><span data-stu-id="d7187-1786">The decimal point symbol of the culture specified by `provider` can appear in `value` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="d7187-1787">*fractional_digits*</span><span class="sxs-lookup"><span data-stu-id="d7187-1787">*fractional_digits*</span></span>|<span data-ttu-id="d7187-1788">Одно или несколько вхождений цифры 0.</span><span class="sxs-lookup"><span data-stu-id="d7187-1788">One or more occurrences of the digit 0.</span></span> <span data-ttu-id="d7187-1789">Дробные цифры могут использоваться только `value` в том `style` случае, <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> если включает флаг.</span><span class="sxs-lookup"><span data-stu-id="d7187-1789">Fractional digits can appear in `value` only if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="d7187-1790">E</span><span class="sxs-lookup"><span data-stu-id="d7187-1790">E</span></span>|<span data-ttu-id="d7187-1791">Символ "e" или "E", указывающий, что значение представлено в экспоненциальной (экспоненциальной) нотации.</span><span class="sxs-lookup"><span data-stu-id="d7187-1791">The "e" or "E" character, which indicates that the value is represented in exponential (scientific) notation.</span></span> <span data-ttu-id="d7187-1792">Параметр может представлять число в экспоненциальной нотации, `style` <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> если включает флаг. `value`</span><span class="sxs-lookup"><span data-stu-id="d7187-1792">The `value` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="d7187-1793">*exponential_digits*</span><span class="sxs-lookup"><span data-stu-id="d7187-1793">*exponential_digits*</span></span>|<span data-ttu-id="d7187-1794">Последовательность цифр от 0 до 9.</span><span class="sxs-lookup"><span data-stu-id="d7187-1794">A sequence of digits from 0 through 9.</span></span> <span data-ttu-id="d7187-1795">Параметр может представлять число в экспоненциальной нотации, `style` <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> если включает флаг. `value`</span><span class="sxs-lookup"><span data-stu-id="d7187-1795">The `value` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="d7187-1796">*хексдигитс*</span><span class="sxs-lookup"><span data-stu-id="d7187-1796">*hexdigits*</span></span>|<span data-ttu-id="d7187-1797">Последовательность шестнадцатеричных цифр от 0 до f или от 0 до F.</span><span class="sxs-lookup"><span data-stu-id="d7187-1797">A sequence of hexadecimal digits from 0 through f, or 0 through F.</span></span>|  
  
> [!NOTE]
> <span data-ttu-id="d7187-1798">Все завершающие символы NUL (U + 0000) в `s` игнорируются операцией синтаксического анализа, независимо от значения `style` аргумента.</span><span class="sxs-lookup"><span data-stu-id="d7187-1798">Any terminating NUL (U+0000) characters in `s` are ignored by the parsing operation, regardless of the value of the `style` argument.</span></span>

 <span data-ttu-id="d7187-1799">Строка с десятичными цифрами (которая соответствует <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> флагу) всегда будет успешно проанализирована.</span><span class="sxs-lookup"><span data-stu-id="d7187-1799">A string with decimal digits only (which corresponds to the <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> flag) always parses successfully.</span></span> <span data-ttu-id="d7187-1800">Большинство оставшихся <xref:System.Globalization.NumberStyles> элементов управляют элементами управления, которые могут присутствовать, но не обязательно должны присутствовать в этой входной строке.</span><span class="sxs-lookup"><span data-stu-id="d7187-1800">Most of the remaining <xref:System.Globalization.NumberStyles> members control elements that may be present, but are not required to be present, in this input string.</span></span> <span data-ttu-id="d7187-1801">В следующей таблице показано, как <xref:System.Globalization.NumberStyles> отдельные члены влияют на элементы, которые могут присутствовать в. `value`</span><span class="sxs-lookup"><span data-stu-id="d7187-1801">The following table indicates how individual <xref:System.Globalization.NumberStyles> members affect the elements that may be present in `value`.</span></span>  
  
|<span data-ttu-id="d7187-1802">Несоставные `NumberStyles` значения</span><span class="sxs-lookup"><span data-stu-id="d7187-1802">Non-composite `NumberStyles` values</span></span>|<span data-ttu-id="d7187-1803">Разрешенные в значениях элементы в дополнение к цифрам</span><span class="sxs-lookup"><span data-stu-id="d7187-1803">Elements permitted in value in addition to digits</span></span>|  
|------------------------------------------|-------------------------------------------------------|  
|<xref:System.Globalization.NumberStyles.None>|<span data-ttu-id="d7187-1804">Только десятичные цифры.</span><span class="sxs-lookup"><span data-stu-id="d7187-1804">Decimal digits only.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowDecimalPoint>|<span data-ttu-id="d7187-1805">Элементы десятичной запятой (*.*) и *fractional_digits* .</span><span class="sxs-lookup"><span data-stu-id="d7187-1805">The decimal point (*.*) and *fractional_digits* elements.</span></span> <span data-ttu-id="d7187-1806">Однако *fractional_digits* должен состоять только из одной или нескольких цифр 0 или метод возвращает `false`.</span><span class="sxs-lookup"><span data-stu-id="d7187-1806">However, *fractional_digits* must consist of only one or more 0 digits, or the method returns `false`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowExponent>|<span data-ttu-id="d7187-1807">Символ "e" или "E", указывающий экспоненциальную нотацию, а также *exponential_digits*.</span><span class="sxs-lookup"><span data-stu-id="d7187-1807">The "e" or "E" character, which indicates exponential notation, along with *exponential_digits*.</span></span> <span data-ttu-id="d7187-1808">Если `value` представляет число в экспоненциальной нотации, оно не может иметь ненулевой, дробный компонент.</span><span class="sxs-lookup"><span data-stu-id="d7187-1808">If `value` represents a number in exponential notation, it cannot have a non-zero, fractional component.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingWhite>|<span data-ttu-id="d7187-1809">Элемент *WS* в начале `value`.</span><span class="sxs-lookup"><span data-stu-id="d7187-1809">The *ws* element at the start of `value`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingWhite>|<span data-ttu-id="d7187-1810">Элемент *WS* в конце `value`.</span><span class="sxs-lookup"><span data-stu-id="d7187-1810">The *ws* element at the end of `value`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingSign>|<span data-ttu-id="d7187-1811">Элемент *Sign* перед *цифрами*.</span><span class="sxs-lookup"><span data-stu-id="d7187-1811">The *sign* element before *digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingSign>|<span data-ttu-id="d7187-1812">Элемент *Sign* после *разрядов*.</span><span class="sxs-lookup"><span data-stu-id="d7187-1812">The *sign* element after *digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowParentheses>|<span data-ttu-id="d7187-1813">Элемент *Sign* в виде круглых скобок, охватывающих числовое значение.</span><span class="sxs-lookup"><span data-stu-id="d7187-1813">The *sign* element in the form of parentheses enclosing the numeric value.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowThousands>|<span data-ttu-id="d7187-1814">Элемент разделителя групп (*,*).</span><span class="sxs-lookup"><span data-stu-id="d7187-1814">The group separator (*,*) element.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowCurrencySymbol>|<span data-ttu-id="d7187-1815">Элемент Currency (*$*).</span><span class="sxs-lookup"><span data-stu-id="d7187-1815">The currency (*$*) element.</span></span>|  
|<xref:System.Globalization.NumberStyles.Currency>|<span data-ttu-id="d7187-1816">Все элементы.</span><span class="sxs-lookup"><span data-stu-id="d7187-1816">All elements.</span></span> <span data-ttu-id="d7187-1817">`value` Однако не может представлять шестнадцатеричное число или число в экспоненциальной нотации.</span><span class="sxs-lookup"><span data-stu-id="d7187-1817">However, `value` cannot represent a hexadecimal number or a number in exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Float>|<span data-ttu-id="d7187-1818">Элемент *WS* в начале или конце `value` `value`, *знак* в начале и символ десятичной запятой (*.*).</span><span class="sxs-lookup"><span data-stu-id="d7187-1818">The *ws* element at the start or end of `value`, *sign* at the start of `value`, and the decimal point (*.*) symbol.</span></span> <span data-ttu-id="d7187-1819">`value` Параметр также может использовать экспоненциальную нотацию.</span><span class="sxs-lookup"><span data-stu-id="d7187-1819">The `value` parameter can also use exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Number>|<span data-ttu-id="d7187-1820">Элементы *WS*, *Sign*, Group separator (*,*) и Decimal (*.*).</span><span class="sxs-lookup"><span data-stu-id="d7187-1820">The *ws*, *sign*, group separator (*,*), and decimal point (*.*) elements.</span></span>|  
|<xref:System.Globalization.NumberStyles.Any>|<span data-ttu-id="d7187-1821">Все элементы.</span><span class="sxs-lookup"><span data-stu-id="d7187-1821">All elements.</span></span> <span data-ttu-id="d7187-1822">`value` Однако не может представлять шестнадцатеричное число.</span><span class="sxs-lookup"><span data-stu-id="d7187-1822">However, `value` cannot represent a hexadecimal number.</span></span>|  
  
> [!IMPORTANT]
>  <span data-ttu-id="d7187-1823">При использовании <xref:System.Numerics.BigInteger.TryParse%2A> метода для приема-передачи строкового представления <xref:System.Numerics.BigInteger> значения <xref:System.Numerics.BigInteger.ToString%2A> , выводимого методом, следует использовать <xref:System.Numerics.BigInteger.ToString%28System.String%29?displayProperty=nameWithType> метод с описателем формата R для создания строкового представления элемента <xref:System.Numerics.BigInteger> значение.</span><span class="sxs-lookup"><span data-stu-id="d7187-1823">If you use the <xref:System.Numerics.BigInteger.TryParse%2A> method to round-trip the string representation of a <xref:System.Numerics.BigInteger> value that was output by the <xref:System.Numerics.BigInteger.ToString%2A> method, you should use the <xref:System.Numerics.BigInteger.ToString%28System.String%29?displayProperty=nameWithType> method with the "R" format specifier to generate the string representation of the <xref:System.Numerics.BigInteger> value.</span></span> <span data-ttu-id="d7187-1824">В противном случае строковое представление <xref:System.Numerics.BigInteger> сохраняет только 50 наиболее значимых цифр исходного значения, а данные могут быть потеряны при <xref:System.Numerics.BigInteger.TryParse%2A> использовании метода для восстановления <xref:System.Numerics.BigInteger> значения.</span><span class="sxs-lookup"><span data-stu-id="d7187-1824">Otherwise, the string representation of the <xref:System.Numerics.BigInteger> preserves only the 50 most significant digits of the original value, and data may be lost when you use the <xref:System.Numerics.BigInteger.TryParse%2A> method to restore the <xref:System.Numerics.BigInteger> value.</span></span>  
  
 <span data-ttu-id="d7187-1825">Если используется `value` флаг, то он должен быть шестнадцатеричным значением. <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="d7187-1825">If the <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> flag is used, `value` must be a hexadecimal value.</span></span> <span data-ttu-id="d7187-1826">Единственными другими флагами, которые могут присутствовать <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> в <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> `style` , являются и.</span><span class="sxs-lookup"><span data-stu-id="d7187-1826">The only other flags that can be present in `style` are <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> and <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>.</span></span> <span data-ttu-id="d7187-1827">(Перечисление имеет составной стиль <xref:System.Globalization.NumberStyles.HexNumber>, включающий оба флага пробела.) <xref:System.Globalization.NumberStyles></span><span class="sxs-lookup"><span data-stu-id="d7187-1827">(The <xref:System.Globalization.NumberStyles> enumeration has a composite style, <xref:System.Globalization.NumberStyles.HexNumber>, that includes both white-space flags.)</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d7187-1828">Если `value` является строковым представлением шестнадцатеричного числа, ему не может предшествовать любое декорирование ( `0x` например, или `&h`), которое отличает его как шестнадцатеричное число.</span><span class="sxs-lookup"><span data-stu-id="d7187-1828">If `value` is the string representation of a hexadecimal number, it cannot be preceded by any decoration (such as `0x` or `&h`) that differentiates it as a hexadecimal number.</span></span> <span data-ttu-id="d7187-1829">Это приводит к сбою преобразования.</span><span class="sxs-lookup"><span data-stu-id="d7187-1829">This causes the conversion to fail.</span></span>  
  
 <span data-ttu-id="d7187-1830">Если `value` является шестнадцатеричной строкой <xref:System.Numerics.BigInteger.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Numerics.BigInteger%40%29> , метод интерпретирует `value` как отрицательное число, хранящееся в двух представлениях дополнения, если первые две `0x80`шестнадцатеричные цифры больше или равны.</span><span class="sxs-lookup"><span data-stu-id="d7187-1830">If `value` is a hexadecimal string, the <xref:System.Numerics.BigInteger.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Numerics.BigInteger%40%29> method interprets `value` as a negative number stored by using two's complement representation if its first two hexadecimal digits are greater than or equal to `0x80`.</span></span> <span data-ttu-id="d7187-1831">Иными словами, метод интерпретирует бит наивысшего порядка первого байта в `value` качестве бита знака.</span><span class="sxs-lookup"><span data-stu-id="d7187-1831">In other words, the method interprets the highest-order bit of the first byte in `value` as the sign bit.</span></span> <span data-ttu-id="d7187-1832">Чтобы убедиться, что шестнадцатеричная строка правильно интерпретируется как положительное число, первая цифра в `value` должна иметь нулевое значение.</span><span class="sxs-lookup"><span data-stu-id="d7187-1832">To make sure that a hexadecimal string is correctly interpreted as a positive number, the first digit in `value` must have a value of zero.</span></span> <span data-ttu-id="d7187-1833">Например, метод интерпретирует `0x80` как отрицательное значение, но интерпретирует либо `0x080` или `0x0080` как положительное значение.</span><span class="sxs-lookup"><span data-stu-id="d7187-1833">For example, the method interprets `0x80` as a negative value, but it interprets either `0x080` or `0x0080` as a positive value.</span></span> <span data-ttu-id="d7187-1834">В следующем примере показано различие между шестнадцатеричными строками, представляющими отрицательные и положительные значения.</span><span class="sxs-lookup"><span data-stu-id="d7187-1834">The following example illustrates the difference between hexadecimal strings that represent negative and positive values.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.TryParse#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.TryParse/cs/TryParseHex1.cs#1)]
 [!code-vb[System.Numerics.BigInteger.TryParse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.TryParse/vb/TryParseHex1.vb#1)]  
  
 <span data-ttu-id="d7187-1835">`provider` Параметр<xref:System.IFormatProvider> является реализацией.</span><span class="sxs-lookup"><span data-stu-id="d7187-1835">The `provider` parameter is an <xref:System.IFormatProvider> implementation.</span></span> <span data-ttu-id="d7187-1836">Его <xref:System.IFormatProvider.GetFormat%2A> метод `value`возвращает объект, предоставляющий сведения о формате для определенного языка и региональных параметров. <xref:System.Globalization.NumberFormatInfo></span><span class="sxs-lookup"><span data-stu-id="d7187-1836">Its <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides culture-specific information about the format of `value`.</span></span> <span data-ttu-id="d7187-1837">`provider` Параметр может быть одним из следующих:</span><span class="sxs-lookup"><span data-stu-id="d7187-1837">The `provider` parameter can be any one of the following:</span></span>  
  
-   <span data-ttu-id="d7187-1838"><xref:System.Globalization.CultureInfo> Объект, представляющий язык и региональные параметры, которые предоставляют сведения о форматировании.</span><span class="sxs-lookup"><span data-stu-id="d7187-1838">A <xref:System.Globalization.CultureInfo> object that represents the culture that supplies formatting information.</span></span> <span data-ttu-id="d7187-1839">Его <xref:System.Globalization.CultureInfo.GetFormat%2A> метод<xref:System.Globalization.NumberFormatInfo> возвращает объект, предоставляющий сведения о форматировании числовых значений для этого языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="d7187-1839">Its <xref:System.Globalization.CultureInfo.GetFormat%2A> method returns the <xref:System.Globalization.NumberFormatInfo> object that provides numeric formatting information for that culture.</span></span>  
  
-   <span data-ttu-id="d7187-1840"><xref:System.Globalization.NumberFormatInfo> Объект, предоставляющий сведения о форматировании чисел.</span><span class="sxs-lookup"><span data-stu-id="d7187-1840">A <xref:System.Globalization.NumberFormatInfo> object that provides numeric formatting information.</span></span> <span data-ttu-id="d7187-1841">(Его реализация <xref:System.Globalization.NumberFormatInfo.GetFormat%2A> просто возвращает сам себя.)</span><span class="sxs-lookup"><span data-stu-id="d7187-1841">(Its implementation of <xref:System.Globalization.NumberFormatInfo.GetFormat%2A> just returns itself.)</span></span>  
  
-   <span data-ttu-id="d7187-1842">Пользовательский объект, реализующий <xref:System.IFormatProvider>интерфейс.</span><span class="sxs-lookup"><span data-stu-id="d7187-1842">A custom object that implements <xref:System.IFormatProvider>.</span></span> <span data-ttu-id="d7187-1843">Его <xref:System.IFormatProvider.GetFormat%2A> метод создает экземпляр и <xref:System.Globalization.NumberFormatInfo> возвращает объект, предоставляющий сведения о форматировании.</span><span class="sxs-lookup"><span data-stu-id="d7187-1843">Its <xref:System.IFormatProvider.GetFormat%2A> method instantiates and returns the <xref:System.Globalization.NumberFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="d7187-1844">Если `provider` параметр `null`имеет значение <xref:System.Globalization.NumberFormatInfo> , используется объект для текущего языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="d7187-1844">If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> object for the current culture is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d7187-1845">В следующем примере выполняется вызов <xref:System.Numerics.BigInteger.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Numerics.BigInteger%40%29> метода с использованием различных сочетаний значений `style` для параметров и `provider` .</span><span class="sxs-lookup"><span data-stu-id="d7187-1845">The following example makes some calls to the <xref:System.Numerics.BigInteger.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Numerics.BigInteger%40%29> method using various combinations of values for the `style` and `provider` parameters.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.TryParse#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.TryParse/cs/TryParse1.cs#2)]
 [!code-vb[System.Numerics.BigInteger.TryParse#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.TryParse/vb/TryParse1.vb#2)]  
  
 <span data-ttu-id="d7187-1846">Несколько отдельных вызовов <xref:System.Numerics.BigInteger.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Numerics.BigInteger%40%29> метода передают экземпляр следующего `BigIntegerFormatProvider` класса, который определяет тильду (~) как знак отрицательного числа.</span><span class="sxs-lookup"><span data-stu-id="d7187-1846">A number of the individual calls to the <xref:System.Numerics.BigInteger.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Numerics.BigInteger%40%29> method pass an instance of the following `BigIntegerFormatProvider` class, which defines a tilde (~) as the negative sign.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.TryParse#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.TryParse/cs/TryParse1.cs#3)]
 [!code-vb[System.Numerics.BigInteger.TryParse#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.TryParse/vb/TryParse1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d7187-1847"><paramref name="style" /> не является значением <see cref="T:System.Globalization.NumberStyles" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-1847"><paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value.</span></span>  
  
<span data-ttu-id="d7187-1848">- или -</span><span class="sxs-lookup"><span data-stu-id="d7187-1848">-or-</span></span> 
 <span data-ttu-id="d7187-1849"><paramref name="style" /> включает флаги <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> и <see cref="F:System.Globalization.NumberStyles.HexNumber" /> вместе с другим значениями.</span><span class="sxs-lookup"><span data-stu-id="d7187-1849"><paramref name="style" /> includes the <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> or <see cref="F:System.Globalization.NumberStyles.HexNumber" /> flag along with another value.</span></span></exception>
        <altmember cref="Overload:System.Numerics.BigInteger.ToString" />
      </Docs>
    </Member>
    <Member MemberName="TryWriteBytes">
      <MemberSignature Language="C#" Value="public bool TryWriteBytes (Span&lt;byte&gt; destination, out int bytesWritten, bool isUnsigned = false, bool isBigEndian = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryWriteBytes(valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesWritten, bool isUnsigned, bool isBigEndian) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.TryWriteBytes(System.Span{System.Byte},System.Int32@,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryWriteBytes (destination As Span(Of Byte), ByRef bytesWritten As Integer, Optional isUnsigned As Boolean = false, Optional isBigEndian As Boolean = false) As Boolean" />
      <MemberSignature Language="F#" Value="member this.TryWriteBytes : Span&lt;byte&gt; *  * bool * bool -&gt; bool" Usage="bigInteger.TryWriteBytes (destination, bytesWritten, isUnsigned, isBigEndian)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="isUnsigned" Type="System.Boolean" Index="2" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="isBigEndian" Type="System.Boolean" Index="3" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="destination"><span data-ttu-id="d7187-1850">Целевой диапазон, в который должны записываться полученные байты.</span><span class="sxs-lookup"><span data-stu-id="d7187-1850">The destination span to which the resulting bytes should be written.</span></span></param>
        <param name="bytesWritten"><span data-ttu-id="d7187-1851">Число байтов, записанных в <paramref name="destination" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-1851">The number of bytes written to <paramref name="destination" />.</span></span></param>
        <param name="isUnsigned"><span data-ttu-id="d7187-1852"><see langword="true" /> для использования кодировки без знака; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-1852"><see langword="true" /> to use unsigned encoding; otherwise, <see langword="false" />.</span></span></param>
        <param name="isBigEndian"><span data-ttu-id="d7187-1853"><see langword="true" /> для записи байтов в обратном порядке; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d7187-1853"><see langword="true" /> to write the bytes in a big-endian byte order; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="d7187-1854">Копирует значение этого <see cref="T:System.Numerics.BigInteger" /> в парные байты с прямым порядком, используя наименьшее количество байт.</span><span class="sxs-lookup"><span data-stu-id="d7187-1854">Copies the value of this <see cref="T:System.Numerics.BigInteger" /> as little-endian twos-complement bytes, using the fewest number of bytes possible.</span></span> <span data-ttu-id="d7187-1855">Если значение равно нулю, возвращает один байт, элемент которого равен 0x00.</span><span class="sxs-lookup"><span data-stu-id="d7187-1855">If the value is zero, outputs one byte whose element is 0x00.</span></span></summary>
        <returns><span data-ttu-id="d7187-1856">Значение <see langword="true" />, если байты помещаются в <paramref name="destination" />; значение <see langword="false" />, если не все байты могут быть записаны из-за нехватки свободного пространства.</span><span class="sxs-lookup"><span data-stu-id="d7187-1856"><see langword="true" /> if the bytes fit in <paramref name="destination" />; <see langword="false" /> if not all bytes could be written due to lack of space.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="d7187-1857"><paramref name="isUnsigned" /> имеет значение <see langword="true" /> и <see cref="P:System.Numerics.BigInteger.Sign" /> является отрицательным значением.</span><span class="sxs-lookup"><span data-stu-id="d7187-1857"><paramref name="isUnsigned" /> is <see langword="true" /> and <see cref="P:System.Numerics.BigInteger.Sign" /> is negative.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Zero">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger Zero { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Numerics.BigInteger Zero" />
      <MemberSignature Language="DocId" Value="P:System.Numerics.BigInteger.Zero" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Zero As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Numerics::BigInteger Zero { System::Numerics::BigInteger get(); };" />
      <MemberSignature Language="F#" Value="member this.Zero : System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.Zero" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d7187-1858">Получает значение, представляющее 0 (нуль).</span><span class="sxs-lookup"><span data-stu-id="d7187-1858">Gets a value that represents the number 0 (zero).</span></span></summary>
        <value><span data-ttu-id="d7187-1859">Целое число, равное нулю (0).</span><span class="sxs-lookup"><span data-stu-id="d7187-1859">An integer whose value is 0 (zero).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7187-1860"><xref:System.Numerics.BigInteger> Объект, возвращаемый этим свойством, предоставляет удобный источник нулевого значения для использования в присваиваниях и сравнениях.</span><span class="sxs-lookup"><span data-stu-id="d7187-1860">The <xref:System.Numerics.BigInteger> object returned by this property provides a convenient source of a zero value for use in assignments and comparisons.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Numerics.BigInteger.IsZero" />
      </Docs>
    </Member>
  </Members>
</Type>
