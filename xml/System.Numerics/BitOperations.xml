<Type Name="BitOperations" FullName="System.Numerics.BitOperations">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3221dd2f3b96d49a223ec5b44f9f830b7ff89132" /><Meta Name="ms.sourcegitcommit" Value="87817aa377ffe999787a084c8e8ca669080f1e6b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="07/19/2019" /><Meta Name="ms.locfileid" Value="68337099" /></Metadata><TypeSignature Language="C#" Value="public static class BitOperations" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit BitOperations extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Numerics.BitOperations" />
  <TypeSignature Language="VB.NET" Value="Public Class BitOperations" />
  <TypeSignature Language="C++ CLI" Value="public ref class BitOperations abstract sealed" />
  <TypeSignature Language="F#" Value="type BitOperations = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="4a975-101">Предоставляет служебные методы для внутренних операций битового жонглирования.</span><span class="sxs-lookup"><span data-stu-id="4a975-101">Provides utility methods for intrinsic bit-twiddling operations.</span></span> <span data-ttu-id="4a975-102">Методы используют аппаратные встроенные функции, если они доступны на базовой платформе. В противном случае они используют оптимизированные резервные программные варианты.</span><span class="sxs-lookup"><span data-stu-id="4a975-102">The methods use hardware intrinsics when available on the underlying platform; otherwise, they use optimized software fallbacks.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="LeadingZeroCount">
      <MemberSignature Language="C#" Value="public static int LeadingZeroCount (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 LeadingZeroCount(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BitOperations.LeadingZeroCount(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LeadingZeroCount (value As UInteger) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int LeadingZeroCount(System::UInt32 value);" />
      <MemberSignature Language="F#" Value="static member LeadingZeroCount : uint32 -&gt; int" Usage="System.Numerics.BitOperations.LeadingZeroCount value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="4a975-103">Маска.</span><span class="sxs-lookup"><span data-stu-id="4a975-103">The mask.</span></span></param>
        <summary><span data-ttu-id="4a975-104">Подсчитывает число начальных нулей в 32-разрядной маске целых чисел без знака.</span><span class="sxs-lookup"><span data-stu-id="4a975-104">Counts the number of leading zero bits in an unsigned 32-bit integer mask.</span></span></summary>
        <returns><span data-ttu-id="4a975-105">Число начальных нулей в маске.</span><span class="sxs-lookup"><span data-stu-id="4a975-105">The number of leading zero bits in a mask.</span></span></returns>
        <remarks>
          <format type="text/markdown">
        

### Remarks

<span data-ttu-id="4a975-106">Этот метод аналогичен поведению инструкции x86 [лзкнт](xref:System.Runtime.Intrinsics.X86.Lzcnt).</span><span class="sxs-lookup"><span data-stu-id="4a975-106">This method is similar in behavior to the x86 instruction [LZCNT](xref:System.Runtime.Intrinsics.X86.Lzcnt).</span></span>

             </format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LeadingZeroCount">
      <MemberSignature Language="C#" Value="public static int LeadingZeroCount (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 LeadingZeroCount(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BitOperations.LeadingZeroCount(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LeadingZeroCount (value As ULong) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int LeadingZeroCount(System::UInt64 value);" />
      <MemberSignature Language="F#" Value="static member LeadingZeroCount : uint64 -&gt; int" Usage="System.Numerics.BitOperations.LeadingZeroCount value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="4a975-107">Маска.</span><span class="sxs-lookup"><span data-stu-id="4a975-107">The mask.</span></span></param>
        <summary><span data-ttu-id="4a975-108">Подсчитывает число начальных нулей в 64-разрядной маске целых чисел без знака.</span><span class="sxs-lookup"><span data-stu-id="4a975-108">Counts the number of leading zero bits in an unsigned 64-bit integer mask.</span></span></summary>
        <returns><span data-ttu-id="4a975-109">Число начальных нулей в маске.</span><span class="sxs-lookup"><span data-stu-id="4a975-109">The number of leading zero bits in a mask.</span></span></returns>
        <remarks>
          <format type="text/markdown">
        

### Remarks

<span data-ttu-id="4a975-110">Этот метод аналогичен поведению инструкции x86 [лзкнт](xref:System.Runtime.Intrinsics.X86.Lzcnt).</span><span class="sxs-lookup"><span data-stu-id="4a975-110">This method is similar in behavior to the x86 instruction [LZCNT](xref:System.Runtime.Intrinsics.X86.Lzcnt).</span></span>
             </format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Log2">
      <MemberSignature Language="C#" Value="public static int Log2 (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Log2(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BitOperations.Log2(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Log2 (value As UInteger) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Log2(System::UInt32 value);" />
      <MemberSignature Language="F#" Value="static member Log2 : uint32 -&gt; int" Usage="System.Numerics.BitOperations.Log2 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="4a975-111">Число, из которого получается логарифм.</span><span class="sxs-lookup"><span data-stu-id="4a975-111">The number from which to obtain the logarithm.</span></span></param>
        <summary><span data-ttu-id="4a975-112">Возвращает целочисленный логарифм (нижняя целая часть) указанного значения с основанием 2.</span><span class="sxs-lookup"><span data-stu-id="4a975-112">Returns the integer (floor) log of the specified value, base 2.</span></span></summary>
        <returns><span data-ttu-id="4a975-113">Логарифм указанного значения с основанием 2.</span><span class="sxs-lookup"><span data-stu-id="4a975-113">The log of the specified value, base 2.</span></span></returns>
        <remarks>
          <format type="text/markdown">
        

### Remarks

<span data-ttu-id="4a975-114">Обратите внимание, что по соглашению входное значение 0 возвращает 0, так как журнал (0) не определен.</span><span class="sxs-lookup"><span data-stu-id="4a975-114">Note that by convention, input value 0 returns 0 since Log(0) is undefined.</span></span>

             </format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Log2">
      <MemberSignature Language="C#" Value="public static int Log2 (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Log2(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BitOperations.Log2(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Log2 (value As ULong) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Log2(System::UInt64 value);" />
      <MemberSignature Language="F#" Value="static member Log2 : uint64 -&gt; int" Usage="System.Numerics.BitOperations.Log2 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="4a975-115">Число, из которого получается логарифм.</span><span class="sxs-lookup"><span data-stu-id="4a975-115">The number from which to obtain the logarithm.</span></span></param>
        <summary><span data-ttu-id="4a975-116">Возвращает целочисленный логарифм (нижняя целая часть) указанного значения с основанием 2.</span><span class="sxs-lookup"><span data-stu-id="4a975-116">Returns the integer (floor) log of the specified value, base 2.</span></span></summary>
        <returns><span data-ttu-id="4a975-117">Логарифм указанного значения с основанием 2.</span><span class="sxs-lookup"><span data-stu-id="4a975-117">The log of the specified value, base 2.</span></span></returns>
        <remarks>
          <format type="text/markdown">
        

### Remarks

<span data-ttu-id="4a975-118">Обратите внимание, что по соглашению входное значение 0 возвращает 0, так как журнал (0) не определен.</span><span class="sxs-lookup"><span data-stu-id="4a975-118">Note that by convention, input value 0 returns 0 since Log(0) is undefined.</span></span>

             </format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PopCount">
      <MemberSignature Language="C#" Value="public static int PopCount (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 PopCount(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BitOperations.PopCount(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PopCount (value As UInteger) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int PopCount(System::UInt32 value);" />
      <MemberSignature Language="F#" Value="static member PopCount : uint32 -&gt; int" Usage="System.Numerics.BitOperations.PopCount value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="4a975-119">Маска.</span><span class="sxs-lookup"><span data-stu-id="4a975-119">The mask.</span></span></param>
        <summary><span data-ttu-id="4a975-120">Возвращает число заполнений (число наборов разрядов) маски.</span><span class="sxs-lookup"><span data-stu-id="4a975-120">Returns the population count (number of bits set) of a mask.</span></span></summary>
        <returns><span data-ttu-id="4a975-121">Число заполнений маски.</span><span class="sxs-lookup"><span data-stu-id="4a975-121">The population count of a mask.</span></span></returns>
        <remarks>
          <format type="text/markdown">
        

### Remarks

<span data-ttu-id="4a975-122">Этот метод аналогичен поведению инструкции x86 [попкнт](xref:System.Runtime.Intrinsics.X86.Popcnt).</span><span class="sxs-lookup"><span data-stu-id="4a975-122">This method is similar in behavior to the x86 instruction [POPCNT](xref:System.Runtime.Intrinsics.X86.Popcnt).</span></span>

             </format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PopCount">
      <MemberSignature Language="C#" Value="public static int PopCount (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 PopCount(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BitOperations.PopCount(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PopCount (value As ULong) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int PopCount(System::UInt64 value);" />
      <MemberSignature Language="F#" Value="static member PopCount : uint64 -&gt; int" Usage="System.Numerics.BitOperations.PopCount value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="4a975-123">Маска.</span><span class="sxs-lookup"><span data-stu-id="4a975-123">The mask.</span></span></param>
        <summary><span data-ttu-id="4a975-124">Возвращает число заполнений (число наборов разрядов) 64-разрядной целочисленной маски без знака.</span><span class="sxs-lookup"><span data-stu-id="4a975-124">Returns the population count (number of bits set) of an unsigned 64-bit integer mask.</span></span></summary>
        <returns><span data-ttu-id="4a975-125">Число заполнений маски.</span><span class="sxs-lookup"><span data-stu-id="4a975-125">The population count of the mask.</span></span></returns>
        <remarks>
          <format type="text/markdown">
        

### Remarks

<span data-ttu-id="4a975-126">Этот метод аналогичен поведению инструкции x86 [попкнт](xref:System.Runtime.Intrinsics.X86.Popcnt).</span><span class="sxs-lookup"><span data-stu-id="4a975-126">This method is similar in behavior to the x86 instruction [POPCNT](xref:System.Runtime.Intrinsics.X86.Popcnt).</span></span>

             </format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RotateLeft">
      <MemberSignature Language="C#" Value="public static uint RotateLeft (uint value, int offset);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 RotateLeft(unsigned int32 value, int32 offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BitOperations.RotateLeft(System.UInt32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RotateLeft (value As UInteger, offset As Integer) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 RotateLeft(System::UInt32 value, int offset);" />
      <MemberSignature Language="F#" Value="static member RotateLeft : uint32 * int -&gt; uint32" Usage="System.Numerics.BitOperations.RotateLeft (value, offset)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
        <Parameter Name="offset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="4a975-127">Значение для поворота.</span><span class="sxs-lookup"><span data-stu-id="4a975-127">The value to rotate.</span></span></param>
        <param name="offset"><span data-ttu-id="4a975-128">Число разрядов для поворота.</span><span class="sxs-lookup"><span data-stu-id="4a975-128">The number of bits to rotate by.</span></span> <span data-ttu-id="4a975-129">Любое значение за пределами диапазона [0..31] рассматривается как сравнимое по модулю 32.</span><span class="sxs-lookup"><span data-stu-id="4a975-129">Any value outside the range [0..31] is treated as congruent mod 32.</span></span></param>
        <summary><span data-ttu-id="4a975-130">Поворачивает указанное значение влево на указанное число битов.</span><span class="sxs-lookup"><span data-stu-id="4a975-130">Rotates the specified value left by the specified number of bits.</span></span></summary>
        <returns><span data-ttu-id="4a975-131">Итоговое значение.</span><span class="sxs-lookup"><span data-stu-id="4a975-131">The rotated value.</span></span></returns>
        <remarks>
          <format type="text/markdown">
        

### Remarks

<span data-ttu-id="4a975-132">Этот метод аналогичен поведению инструкции x86 ROL.</span><span class="sxs-lookup"><span data-stu-id="4a975-132">This method is similar in behavior to the x86 instruction ROL.</span></span>

             </format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RotateLeft">
      <MemberSignature Language="C#" Value="public static ulong RotateLeft (ulong value, int offset);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 RotateLeft(unsigned int64 value, int32 offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BitOperations.RotateLeft(System.UInt64,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RotateLeft (value As ULong, offset As Integer) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 RotateLeft(System::UInt64 value, int offset);" />
      <MemberSignature Language="F#" Value="static member RotateLeft : uint64 * int -&gt; uint64" Usage="System.Numerics.BitOperations.RotateLeft (value, offset)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
        <Parameter Name="offset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="4a975-133">Значение для поворота.</span><span class="sxs-lookup"><span data-stu-id="4a975-133">The value to rotate.</span></span></param>
        <param name="offset"><span data-ttu-id="4a975-134">Число разрядов для поворота.</span><span class="sxs-lookup"><span data-stu-id="4a975-134">The number of bits to rotate by.</span></span> <span data-ttu-id="4a975-135">Любое значение за пределами диапазона [0..63] рассматривается как сравнимое по модулю 64.</span><span class="sxs-lookup"><span data-stu-id="4a975-135">Any value outside the range [0..63] is treated as congruent mod 64.</span></span></param>
        <summary><span data-ttu-id="4a975-136">Поворачивает указанное значение влево на указанное число битов.</span><span class="sxs-lookup"><span data-stu-id="4a975-136">Rotates the specified value left by the specified number of bits.</span></span></summary>
        <returns><span data-ttu-id="4a975-137">Итоговое значение.</span><span class="sxs-lookup"><span data-stu-id="4a975-137">The rotated value.</span></span></returns>
        <remarks>
          <format type="text/markdown">
        

### Remarks

<span data-ttu-id="4a975-138">Этот метод аналогичен поведению инструкции x86 ROL.</span><span class="sxs-lookup"><span data-stu-id="4a975-138">This method is similar in behavior to the x86 instruction ROL.</span></span>

             </format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RotateRight">
      <MemberSignature Language="C#" Value="public static uint RotateRight (uint value, int offset);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 RotateRight(unsigned int32 value, int32 offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BitOperations.RotateRight(System.UInt32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RotateRight (value As UInteger, offset As Integer) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 RotateRight(System::UInt32 value, int offset);" />
      <MemberSignature Language="F#" Value="static member RotateRight : uint32 * int -&gt; uint32" Usage="System.Numerics.BitOperations.RotateRight (value, offset)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
        <Parameter Name="offset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="4a975-139">Значение для поворота.</span><span class="sxs-lookup"><span data-stu-id="4a975-139">The value to rotate.</span></span></param>
        <param name="offset"><span data-ttu-id="4a975-140">Число разрядов для поворота.</span><span class="sxs-lookup"><span data-stu-id="4a975-140">The number of bits to rotate by.</span></span> <span data-ttu-id="4a975-141">Любое значение за пределами диапазона [0..31] рассматривается как сравнимое по модулю 32.</span><span class="sxs-lookup"><span data-stu-id="4a975-141">Any value outside the range [0..31] is treated as congruent mod 32.</span></span></param>
        <summary><span data-ttu-id="4a975-142">Поворачивает указанное значение вправо на указанное число битов.</span><span class="sxs-lookup"><span data-stu-id="4a975-142">Rotates the specified value right by the specified number of bits.</span></span></summary>
        <returns><span data-ttu-id="4a975-143">Итоговое значение.</span><span class="sxs-lookup"><span data-stu-id="4a975-143">The rotated value.</span></span></returns>
        <remarks>
          <format type="text/markdown">
        

### Remarks

<span data-ttu-id="4a975-144">Этот метод аналогичен поведению инструкции x86 ROR.</span><span class="sxs-lookup"><span data-stu-id="4a975-144">This method is similar in behavior to the x86 instruction ROR.</span></span>

             </format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RotateRight">
      <MemberSignature Language="C#" Value="public static ulong RotateRight (ulong value, int offset);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 RotateRight(unsigned int64 value, int32 offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BitOperations.RotateRight(System.UInt64,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RotateRight (value As ULong, offset As Integer) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 RotateRight(System::UInt64 value, int offset);" />
      <MemberSignature Language="F#" Value="static member RotateRight : uint64 * int -&gt; uint64" Usage="System.Numerics.BitOperations.RotateRight (value, offset)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
        <Parameter Name="offset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="4a975-145">Значение для поворота.</span><span class="sxs-lookup"><span data-stu-id="4a975-145">The value to rotate.</span></span></param>
        <param name="offset"><span data-ttu-id="4a975-146">Число разрядов для поворота.</span><span class="sxs-lookup"><span data-stu-id="4a975-146">The number of bits to rotate by.</span></span> <span data-ttu-id="4a975-147">Любое значение за пределами диапазона [0..63] рассматривается как сравнимое по модулю 64.</span><span class="sxs-lookup"><span data-stu-id="4a975-147">Any value outside the range [0..63] is treated as congruent mod 64.</span></span></param>
        <summary><span data-ttu-id="4a975-148">Поворачивает указанное значение вправо на указанное число битов.</span><span class="sxs-lookup"><span data-stu-id="4a975-148">Rotates the specified value right by the specified number of bits.</span></span></summary>
        <returns><span data-ttu-id="4a975-149">Итоговое значение.</span><span class="sxs-lookup"><span data-stu-id="4a975-149">The rotated value.</span></span></returns>
        <remarks>
          <format type="text/markdown">
        

### Remarks

<span data-ttu-id="4a975-150">Этот метод аналогичен поведению инструкции x86 ROR.</span><span class="sxs-lookup"><span data-stu-id="4a975-150">This method is similar in behavior to the x86 instruction ROR.</span></span>

             </format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TrailingZeroCount">
      <MemberSignature Language="C#" Value="public static int TrailingZeroCount (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 TrailingZeroCount(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BitOperations.TrailingZeroCount(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TrailingZeroCount (value As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int TrailingZeroCount(int value);" />
      <MemberSignature Language="F#" Value="static member TrailingZeroCount : int -&gt; int" Usage="System.Numerics.BitOperations.TrailingZeroCount value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="4a975-151">Маска.</span><span class="sxs-lookup"><span data-stu-id="4a975-151">The mask.</span></span></param>
        <summary><span data-ttu-id="4a975-152">Подсчитывает количество конечных нулей в 32-разрядной маске целочисленного значения.</span><span class="sxs-lookup"><span data-stu-id="4a975-152">Counts the number of trailing zero bits in an 32-bit integer value mask.</span></span></summary>
        <returns><span data-ttu-id="4a975-153">Количество конечных нулей в целочисленном значении.</span><span class="sxs-lookup"><span data-stu-id="4a975-153">The number of trailing zero bits in the integer value.</span></span></returns>
        <remarks>
          <format type="text/markdown">
        

### Remarks

<span data-ttu-id="4a975-154">Этот метод аналогичен поведению инструкции x86 ТЗКНТ.</span><span class="sxs-lookup"><span data-stu-id="4a975-154">This method is similar in behavior to the x86 instruction TZCNT.</span></span>

             </format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TrailingZeroCount">
      <MemberSignature Language="C#" Value="public static int TrailingZeroCount (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 TrailingZeroCount(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BitOperations.TrailingZeroCount(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TrailingZeroCount (value As Long) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int TrailingZeroCount(long value);" />
      <MemberSignature Language="F#" Value="static member TrailingZeroCount : int64 -&gt; int" Usage="System.Numerics.BitOperations.TrailingZeroCount value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="4a975-155">Маска.</span><span class="sxs-lookup"><span data-stu-id="4a975-155">The mask.</span></span></param>
        <summary><span data-ttu-id="4a975-156">Подсчитывает количество конечных нулей в 64-разрядной маске целочисленного значения.</span><span class="sxs-lookup"><span data-stu-id="4a975-156">Counts the number of trailing zero bits in a 64-bit integer value mask.</span></span></summary>
        <returns><span data-ttu-id="4a975-157">Количество конечных нулей в маске.</span><span class="sxs-lookup"><span data-stu-id="4a975-157">The number of trailing zero bits in the mask.</span></span></returns>
        <remarks>
          <format type="text/markdown">
        

### Remarks

<span data-ttu-id="4a975-158">Этот метод аналогичен поведению инструкции x86 ТЗКНТ.</span><span class="sxs-lookup"><span data-stu-id="4a975-158">This method is similar in behavior to the x86 instruction TZCNT.</span></span>

             </format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TrailingZeroCount">
      <MemberSignature Language="C#" Value="public static int TrailingZeroCount (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 TrailingZeroCount(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BitOperations.TrailingZeroCount(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TrailingZeroCount (value As UInteger) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int TrailingZeroCount(System::UInt32 value);" />
      <MemberSignature Language="F#" Value="static member TrailingZeroCount : uint32 -&gt; int" Usage="System.Numerics.BitOperations.TrailingZeroCount value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="4a975-159">Маска.</span><span class="sxs-lookup"><span data-stu-id="4a975-159">The mask.</span></span></param>
        <summary><span data-ttu-id="4a975-160">Подсчитывает количество конечных нулей в 32-разрядной маске целочисленного значения без знака.</span><span class="sxs-lookup"><span data-stu-id="4a975-160">Counts the number of trailing zero bits in an unsigned 32-bit integer value mask.</span></span></summary>
        <returns><span data-ttu-id="4a975-161">Количество конечных нулей в маске.</span><span class="sxs-lookup"><span data-stu-id="4a975-161">The number of trailing zero bits in the mask.</span></span></returns>
        <remarks>
          <format type="text/markdown">
        

### Remarks

<span data-ttu-id="4a975-162">Этот метод аналогичен поведению инструкции x86 ТЗКНТ.</span><span class="sxs-lookup"><span data-stu-id="4a975-162">This method is similar in behavior to the x86 instruction TZCNT.</span></span>

             </format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TrailingZeroCount">
      <MemberSignature Language="C#" Value="public static int TrailingZeroCount (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 TrailingZeroCount(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BitOperations.TrailingZeroCount(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TrailingZeroCount (value As ULong) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int TrailingZeroCount(System::UInt64 value);" />
      <MemberSignature Language="F#" Value="static member TrailingZeroCount : uint64 -&gt; int" Usage="System.Numerics.BitOperations.TrailingZeroCount value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="4a975-163">Маска.</span><span class="sxs-lookup"><span data-stu-id="4a975-163">The mask.</span></span></param>
        <summary><span data-ttu-id="4a975-164">Подсчитывает количество конечных нулей в 64-разрядной маске целочисленного значения без знака.</span><span class="sxs-lookup"><span data-stu-id="4a975-164">Count the number of trailing zero bits in an unsigned 64-bit integer value mask.</span></span></summary>
        <returns><span data-ttu-id="4a975-165">Количество конечных нулей в маске.</span><span class="sxs-lookup"><span data-stu-id="4a975-165">The number of trailing zero bits in the mask.</span></span></returns>
        <remarks>
          <format type="text/markdown">
        

### Remarks

<span data-ttu-id="4a975-166">Эта мисод похожа на поведение инструкции x86 ТЗКНТ.</span><span class="sxs-lookup"><span data-stu-id="4a975-166">This meethod is similar in behavior to the x86 instruction TZCNT.</span></span>

             </format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
