<Type Name="XslCompiledTransform" FullName="System.Xml.Xsl.XslCompiledTransform">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6851292f326baa7360582a0dce9a1f493cd73cfc" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75046643" /></Metadata><TypeSignature Language="C#" Value="public sealed class XslCompiledTransform" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed XslCompiledTransform extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Xsl.XslCompiledTransform" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class XslCompiledTransform" />
  <TypeSignature Language="C++ CLI" Value="public ref class XslCompiledTransform sealed" />
  <TypeSignature Language="F#" Value="type XslCompiledTransform = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Преобразует данные XML с помощью таблицы стилей XSLT.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Класс <xref:System.Xml.Xsl.XslCompiledTransform> — это обработчик XSLT, поддерживающий синтаксис XSLT 1,0. Это новая реализация, которая обеспечивает рост производительности по сравнению с устаревшим классом <xref:System.Xml.Xsl.XslTransform>. Структура класса <xref:System.Xml.Xsl.XslCompiledTransform> очень похожа на класс <xref:System.Xml.Xsl.XslTransform>. Метод <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A> загружает и компилирует таблицу стилей, а метод <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> выполняет преобразование XSLT.  
  
 Поддержка функций XSLT `document()` и встроенных блоков скриптов по умолчанию отключена. Эти функции можно включить, создав объект <xref:System.Xml.Xsl.XsltSettings> и передав его методу <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A>.  
  
 Дополнительные сведения см. в разделе [использование класса XslCompiledTransform](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) и [Миграция из класса XslTransform](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).  
  
## <a name="security-considerations"></a>Вопросы безопасности  
 При создании приложения, использующего класс <xref:System.Xml.Xsl.XslCompiledTransform>, помните о следующих особенностях и их последствиях:  
  
-   Скрипты XSLT отключены по умолчанию. Скрипты XSLT следует включать только при необходимости в поддержке скриптов и при работе в полностью доверенной среде.  
  
-   Функция XSLT `document()` отключена по умолчанию. Если функция `document()` включена, ограничьте ресурсы, к которым можно получить доступ путем передачи объекта <xref:System.Xml.XmlSecureResolver> методу <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A>.  
  
-   Объекты расширения по умолчанию включены. Если содержащие расширения объекты <xref:System.Xml.Xsl.XsltArgumentList> используются при передаче их в метод <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A>.  
  
-   Таблицы стилей XSLT могут содержать ссылки на другие файлы и внедренные блоки скриптов. Этим может воспользоваться злонамеренный пользователь: он может передать такие данные или таблицы стилей, которые при выполнении будут задействовать все доступные ресурсы компьютера.  
  
-   Приложения XSLT, которые выполняются в среде со смешанным уровнем доверия, могут привести к подделке таблицы стилей. Например, злонамеренный пользователь может загрузить объект с вредоносной таблицей стилей и передать ее другому пользователю, который впоследствии вызовет метод <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> и выполнит преобразование.  
  
 Чтобы избежать этих проблем безопасности, не следует включатьскрипты или функцию `document()`, если таблица стилей поступает не из надежного источника, а также не следует принимать объекты <xref:System.Xml.Xsl.XslCompiledTransform>, таблицы стилей XSLT или исходные XML-данные из ненадежных источников.  
  
   
  
## Examples  
 В следующем примере выполняется преобразование и вывод в файл.  
  
 [!code-csharp[XslCompiledTransform.Transform#1](~/samples/snippets/csharp/VS_Snippets_Data/XslCompiledTransform.Transform/CS/Xslt_Transform_v2.cs#1)]
 [!code-vb[XslCompiledTransform.Transform#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslCompiledTransform.Transform/VB/Xslt_Transform_v2.vb#1)]  
  
 В образце используются следующие два входных файла:  
  
 `books.xml`  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/books.xml#2)]  
  
 `output.xsl`  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#3](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/output.xsl#3)]  
  
 ]]></format>
    </remarks>
    <threadsafe>Объект <see cref="T:System.Xml.Xsl.XslCompiledTransform" /> является потокобезопасным после его загрузки. Иными словами, после успешного завершения метода <see cref="Overload:System.Xml.Xsl.XslCompiledTransform.Load" /> метод <see cref="Overload:System.Xml.Xsl.XslCompiledTransform.Transform" /> можно вызвать одновременно из нескольких потоков.  
  
Если метод <see cref="Overload:System.Xml.Xsl.XslCompiledTransform.Load" /> вызывается в одном потоке в то время, пока метод <see cref="Overload:System.Xml.Xsl.XslCompiledTransform.Transform" /> вызывается в другом потоке, объект <see cref="T:System.Xml.Xsl.XslCompiledTransform" /> завершает выполнение <see cref="Overload:System.Xml.Xsl.XslCompiledTransform.Transform" />ного вызова, продолжая использовать старое состояние. Новое состояние используется при успешном завершении метода <see cref="Overload:System.Xml.Xsl.XslCompiledTransform.Load" />.  
  
 <block subset="none" type="note"><para>  
 Метод <see cref="Overload:System.Xml.Xsl.XslCompiledTransform.Load" /> не является потокобезопасным при одновременном вызове из нескольких потоков.  
  
</para></block></threadsafe>
    <altmember cref="T:System.Xml.Xsl.XsltArgumentList" />
    <altmember cref="T:System.Xml.Xsl.XsltMessageEncounteredEventArgs" />
    <altmember cref="N:System.Xml" />
    <related type="Article" href="https://msdn.microsoft.com/library/202f8820-224c-494f-b61e-cd127eac6e03">Преобразования XSLT</related>
    <related type="Article" href="~/docs/standard/data/xml/index.md">XML-документы и данные</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Xsl.XslCompiledTransform" />.</summary>
        <related type="Article" href="https://msdn.microsoft.com/library/f9b074f6-d6f4-49dd-a093-df510bf0cf7b">Использование класса XslCompiledTransform</related>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XslCompiledTransform ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XslCompiledTransform();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Xsl.XslCompiledTransform" />.</summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/f9b074f6-d6f4-49dd-a093-df510bf0cf7b">Использование класса XslCompiledTransform</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XslCompiledTransform (bool enableDebug);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool enableDebug) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.#ctor(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (enableDebug As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XslCompiledTransform(bool enableDebug);" />
      <MemberSignature Language="F#" Value="new System.Xml.Xsl.XslCompiledTransform : bool -&gt; System.Xml.Xsl.XslCompiledTransform" Usage="new System.Xml.Xsl.XslCompiledTransform enableDebug" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="enableDebug" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="enableDebug"><see langword="true" />, если следует создавать сведения об отладке; в противном случае <see langword="false" />. С помощью значения <see langword="true" /> можно включить таблицу стилей отладки в отладчике Microsoft Visual Studio.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xml.Xsl.XslCompiledTransform" /> с указанными параметрами отладки.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Для пошагового выполнения кода и отладки таблицы стилей должны выполняться следующие условия.  
  
-   Значение параметра `enableDebug` — `true`.  
  
-   Таблица стилей передается методу <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A> в виде URI или реализации класса <xref:System.Xml.XmlReader>, реализующего интерфейс <xref:System.Xml.IXmlLineInfo>. Интерфейс <xref:System.Xml.IXmlLineInfo> реализуется для всех <xref:System.Xml.XmlReader> объектов, разбираемых текстом.  
  
     Иными словами, если таблица стилей загружается с помощью объекта <xref:System.Xml.XPath.IXPathNavigable>, например <xref:System.Xml.XmlDocument> или <xref:System.Xml.XPath.XPathDocument>, или <xref:System.Xml.XmlReader> реализации, которая не реализует интерфейс <xref:System.Xml.IXmlLineInfo>, отладка таблицы стилей невозможна.  
  
-   <xref:System.Xml.XmlResolver>, используемый для загрузки таблицы стилей, — это <xref:System.Xml.XmlResolver>на основе файлов, например <xref:System.Xml.XmlUrlResolver> (это <xref:System.Xml.XmlResolver> по умолчанию, используемое классом <xref:System.Xml.Xsl.XslCompiledTransform>).  
  
-   Таблица стилей расположена на локальном компьютере или в интрасети.  
  
   
  
## Examples  
 В следующем примере показано, как включить отладку XSLT.  
  
 [!code-csharp[XslCompiledTransform.Load#10](~/samples/snippets/csharp/VS_Snippets_Data/XslCompiledTransform.Load/CS/Xslt_Load_v2.cs#10)]
 [!code-vb[XslCompiledTransform.Load#10](~/samples/snippets/visualbasic/VS_Snippets_Data/XslCompiledTransform.Load/VB/Xslt_Load_v2.vb#10)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/f9b074f6-d6f4-49dd-a093-df510bf0cf7b">Использование класса XslCompiledTransform</related>
      </Docs>
    </Member>
    <Member MemberName="CompileToType">
      <MemberSignature Language="C#" Value="public static System.CodeDom.Compiler.CompilerErrorCollection CompileToType (System.Xml.XmlReader stylesheet, System.Xml.Xsl.XsltSettings settings, System.Xml.XmlResolver stylesheetResolver, bool debug, System.Reflection.Emit.TypeBuilder typeBuilder, string scriptAssemblyPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.CodeDom.Compiler.CompilerErrorCollection CompileToType(class System.Xml.XmlReader stylesheet, class System.Xml.Xsl.XsltSettings settings, class System.Xml.XmlResolver stylesheetResolver, bool debug, class System.Reflection.Emit.TypeBuilder typeBuilder, string scriptAssemblyPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.CompileToType(System.Xml.XmlReader,System.Xml.Xsl.XsltSettings,System.Xml.XmlResolver,System.Boolean,System.Reflection.Emit.TypeBuilder,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::CodeDom::Compiler::CompilerErrorCollection ^ CompileToType(System::Xml::XmlReader ^ stylesheet, System::Xml::Xsl::XsltSettings ^ settings, System::Xml::XmlResolver ^ stylesheetResolver, bool debug, System::Reflection::Emit::TypeBuilder ^ typeBuilder, System::String ^ scriptAssemblyPath);" />
      <MemberSignature Language="F#" Value="static member CompileToType : System.Xml.XmlReader * System.Xml.Xsl.XsltSettings * System.Xml.XmlResolver * bool * System.Reflection.Emit.TypeBuilder * string -&gt; System.CodeDom.Compiler.CompilerErrorCollection" Usage="System.Xml.Xsl.XslCompiledTransform.CompileToType (stylesheet, settings, stylesheetResolver, debug, typeBuilder, scriptAssemblyPath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.CompilerErrorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XmlReader" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="settings" Type="System.Xml.Xsl.XsltSettings" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="stylesheetResolver" Type="System.Xml.XmlResolver" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="debug" Type="System.Boolean" Index="3" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="typeBuilder" Type="System.Reflection.Emit.TypeBuilder" Index="4" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="scriptAssemblyPath" Type="System.String" Index="5" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="stylesheet">Средство чтения <see cref="T:System.Xml.XmlReader" /> позиционируется в начале таблице стилей, которую необходимо скомпилировать.</param>
        <param name="settings">Объект <see cref="T:System.Xml.Xsl.XsltSettings" />, который следует применить к таблице стилей. Если значение равно <see langword="null" />, будет применен <see cref="P:System.Xml.Xsl.XsltSettings.Default" />.</param>
        <param name="stylesheetResolver"><see cref="T:System.Xml.XmlResolver" /> используется для разрешения модулей таблицы стилей, на которые есть ссылки в элементах <see langword="xsl:import" /> и <see langword="xsl:include" />. Если значение равно <see langword="null" />, внешние ресурсы не будут разрешены.</param>
        <param name="debug">Значение <see langword="true" /> позволяет анализировать таблицу стилей с помощью отладчика.</param>
        <param name="typeBuilder"><see cref="T:System.Reflection.Emit.TypeBuilder" />, используемый для компиляции таблицы стилей. Предоставленный TypeBuilder используется для создания результирующего типа.</param>
        <param name="scriptAssemblyPath">Основной путь к сборкам, созданным для элементов <see langword="msxsl:script" />. Если создается только одна сборка скриптов, в этом параметре указывается путь к этой сборке. В случае нескольких сборок скриптов к имени файла будет добавлен специальный суффикс, обеспечивающий уникальность имен сборок.</param>
        <summary>Компилирует таблицу стилей XSLT в указанный тип.</summary>
        <returns>Объект <see cref="T:System.CodeDom.Compiler.CompilerErrorCollection" />, содержащий ошибки и предупреждения компиляции, которые указывают на результат компиляции.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Инструмент `xsltc.exe` — это оболочка для метода <xref:System.Xml.Xsl.XslCompiledTransform.CompileToType%2A>. Компиляция таблиц стилей с `xsltc.exe` будет соответствовать требованиям большинства приложений, использующих скомпилированные таблицы стилей. При создании собственных средств компиляции следует использовать метод <xref:System.Xml.Xsl.XslCompiledTransform.CompileToType%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Load">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Компилирует таблицу стилей.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Хотя класс <xref:System.Xml.Xsl.XslCompiledTransform> имеет более высокий общий уровень производительности, чем класс <xref:System.Xml.Xsl.XslTransform>, метод <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A> класса <xref:System.Xml.Xsl.XslCompiledTransform> может выполняться медленнее, чем метод <xref:System.Xml.Xsl.XslTransform.Load%2A> класса <xref:System.Xml.Xsl.XslTransform> при первом вызове преобразования. Причина этого заключается в необходимости компиляции XSLT-файла перед его загрузкой. См. дополнительные сведения о [сравнении XslCompiledTransform и XslTransform](https://go.microsoft.com/fwlink/?LinkId=130590)  
  
> [!NOTE]
>  Ниже приведены различия между XSLT, скомпилированными в режиме отладки и режиме выпуска. В некоторых случаях таблицы стилей, скомпилированные в режиме отладки, не выдают ошибки во время вызова <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A>, но завершаются ошибкой позже, при вызове метода <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A>. Та же таблица стилей, скомпилированная в режиме выпуска, завершается ошибкой во время вызова <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A>. Например, это может произойти в том случае, если переменная, не принадлежащая к типу набора узлов, присваивается выражению, где требуется набор узлов.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (string stylesheetUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(string stylesheetUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Load(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheetUri As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::String ^ stylesheetUri);" />
      <MemberSignature Language="F#" Value="member this.Load : string -&gt; unit" Usage="xslCompiledTransform.Load stylesheetUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheetUri" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="stylesheetUri">URI таблицы стилей.</param>
        <summary>Загружает и компилирует таблицу стилей, расположенную по указанному URI.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Класс <xref:System.Xml.Xsl.XslCompiledTransform> поддерживает синтаксис XSLT 1,0. Таблица стилей XSLT должна использовать пространство имен `http://www.w3.org/1999/XSL/Transform`.  
  
 Этот метод имеет следующие особенности.  
  
-   <xref:System.Xml.XmlUrlResolver> без учетных данных пользователя используется для разрешения URI таблицы стилей и обработки всех `xsl:import` или элементов `xsl:include`.  
  
-   Для загрузки таблицы стилей используется <xref:System.Xml.XmlReader> с параметрами по умолчанию. Обработка DTD отключена на <xref:System.Xml.XmlReader>. Если требуется обработка DTD, создайте <xref:System.Xml.XmlReader> с включенной функцией и передайте ее методу <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A>.  
  
-   Функция `document()` отключена.  
  
-   Внедренные скрипты не поддерживаются.  
  
 Перегрузку <xref:System.Xml.Xsl.XslCompiledTransform.Load%28System.String%2CSystem.Xml.Xsl.XsltSettings%2CSystem.Xml.XmlResolver%29> можно использовать для указания <xref:System.Xml.XmlResolver> с необходимыми учетными данными для проверки подлинности или для указания других параметров XSLT.  
  
   
  
## Examples  
 В следующем примере выполняется преобразование и вывод в файл.  
  
 [!code-csharp[XslCompiledTransform.Transform#1](~/samples/snippets/csharp/VS_Snippets_Data/XslCompiledTransform.Transform/CS/Xslt_Transform_v2.cs#1)]
 [!code-vb[XslCompiledTransform.Transform#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslCompiledTransform.Transform/VB/Xslt_Transform_v2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Значение <paramref name="stylesheetUri" /> равно <see langword="null" />.</exception>
        <exception cref="T:System.Xml.Xsl.XsltException">Таблица стилей содержит ошибку.</exception>
        <exception cref="T:System.IO.FileNotFoundException">Не удается найти таблицу стилей.</exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">Значение <paramref name="stylesheetUri" /> включает имя файла или каталог, который невозможно найти.</exception>
        <exception cref="T:System.Net.WebException">Значение <paramref name="stylesheetUri" /> не удается разрешить.  
  
-или- 
При обработке этого запроса возникла ошибка.</exception>
        <exception cref="T:System.UriFormatException"><paramref name="stylesheetUri" /> не является допустимым URI.</exception>
        <exception cref="T:System.Xml.XmlException">Произошла ошибка анализа при загрузке таблицы стилей.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/f9b074f6-d6f4-49dd-a093-df510bf0cf7b">Использование класса XslCompiledTransform</related>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (Type compiledStylesheet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Type compiledStylesheet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Load(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (compiledStylesheet As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(Type ^ compiledStylesheet);" />
      <MemberSignature Language="F#" Value="member this.Load : Type -&gt; unit" Usage="xslCompiledTransform.Load compiledStylesheet" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="compiledStylesheet" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="compiledStylesheet">Имя класса, содержащего скомпилированную таблицу стилей.  
  
 Как правило, это имя таблицы стилей. Если иное не указано, средство xsltc.exe использует имя таблицы стилей в именах классов и сборок.</param>
        <summary>Загружает скомпилированную таблицу стилей, которая была создана с помощью <see href="https://docs.microsoft.com/dotnet/standard/data/xml/xslt-compiler-xsltc-exe">XSLT-компилятора (xsltc.exe)</see>.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Средство xsltc. exe используется для компиляции таблиц стилей и создания сборок из таблиц стилей. Метод <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A> загружает скомпилированную таблицу стилей из сборки.  
  
> [!NOTE]
>  Также необходимо включить сборку XSLT в качестве ссылки в приложение.  
  
   
  
## Examples  
 В следующем примере показано, как загрузить скомпилированную таблицу стилей из сборки XSLT. В примере предполагается, что средство xsltc. exe использовалось для создания сборки с именем Букордерс. dll с классом с именем Букордерс.  
  
> [!NOTE]
>  При компиляции кода необходимо сослаться на сборку XSLT. Например, `csc /r:system.dll;system.xml.dll;bookOrders.dll myCode.cs`.  
  
```csharp  
// Load the type of the class.  
XslCompiledTransform xslt = new XslCompiledTransform();  
xslt.Load(typeof(bookOrders));  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/672a5ac8-8305-4d28-ba10-11089c2c0924">Средство XSLT Assembly (xsltc. exe)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/76ee440b-d134-4f8f-8262-b917ad6dcbf6">Инструкции. выполнение преобразования XSLT с помощью сборки</related>
        <related type="Article" href="https://msdn.microsoft.com/library/f9b074f6-d6f4-49dd-a093-df510bf0cf7b">Использование класса XslCompiledTransform</related>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XmlReader stylesheet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XmlReader stylesheet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Load(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As XmlReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XmlReader ^ stylesheet);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XmlReader -&gt; unit" Usage="xslCompiledTransform.Load stylesheet" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="stylesheet"><see cref="T:System.Xml.XmlReader" />, содержащий таблицу стилей.</param>
        <summary>Компилирует таблицу стилей, содержащуюся в объекте <see cref="T:System.Xml.XmlReader" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Класс <xref:System.Xml.Xsl.XslCompiledTransform> поддерживает синтаксис XSLT 1,0. Таблица стилей XSLT должна использовать пространство имен `http://www.w3.org/1999/XSL/Transform`.  
  
 Таблица стилей загружается из текущего узла <xref:System.Xml.XmlReader> через все его дочерние элементы. Это позволяет использовать часть документа в качестве таблицы стилей. После завершения метода <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A> <xref:System.Xml.XmlReader> размещается на следующем узле после конца таблицы стилей. По достижении конца документа объект <xref:System.Xml.XmlReader> позиционируется в конец файла (EOF).  
  
 Этот метод имеет следующие особенности.  
  
-   Для обработки элементов `xsl:import` или `xsl:include` используется <xref:System.Xml.XmlUrlResolver> без учетных данных пользователя.  
  
-   Функция `document()` отключена.  
  
-   Внедренные скрипты не поддерживаются.  
  
 Перегрузку <xref:System.Xml.Xsl.XslCompiledTransform.Load%28System.Xml.XmlReader%2CSystem.Xml.Xsl.XsltSettings%2CSystem.Xml.XmlResolver%29> можно использовать для указания <xref:System.Xml.XmlResolver> с необходимыми учетными данными для проверки подлинности или для указания других параметров XSLT.  
  
   
  
## Examples  
 В следующем примере загружается таблица стилей, содержащаяся в объекте <xref:System.Xml.XmlReader>.  
  
 [!code-csharp[XslCompiledTransform.Load#5](~/samples/snippets/csharp/VS_Snippets_Data/XslCompiledTransform.Load/CS/Xslt_Load_v2.cs#5)]
 [!code-vb[XslCompiledTransform.Load#5](~/samples/snippets/visualbasic/VS_Snippets_Data/XslCompiledTransform.Load/VB/Xslt_Load_v2.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Значение <paramref name="stylesheet" /> равно <see langword="null" />.</exception>
        <exception cref="T:System.Xml.Xsl.XsltException">Таблица стилей содержит ошибку.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/f9b074f6-d6f4-49dd-a093-df510bf0cf7b">Использование класса XslCompiledTransform</related>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XPath.IXPathNavigable stylesheet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XPath.IXPathNavigable stylesheet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Load(System.Xml.XPath.IXPathNavigable)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As IXPathNavigable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XPath::IXPathNavigable ^ stylesheet);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XPath.IXPathNavigable -&gt; unit" Usage="xslCompiledTransform.Load stylesheet" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XPath.IXPathNavigable" />
      </Parameters>
      <Docs>
        <param name="stylesheet">Объект, реализующий интерфейс <see cref="T:System.Xml.XPath.IXPathNavigable" />. В Microsoft .NET Framework это может быть либо <see cref="T:System.Xml.XmlNode" /> (обычно <see cref="T:System.Xml.XmlDocument" />), либо <see cref="T:System.Xml.XPath.XPathDocument" />, содержащий таблицу стилей.</param>
        <summary>Компилирует таблицу стилей, содержащуюся в таблице <see cref="T:System.Xml.XPath.IXPathNavigable" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Класс <xref:System.Xml.Xsl.XslCompiledTransform> поддерживает синтаксис XSLT 1,0. Таблица стилей XSLT должна использовать пространство имен `http://www.w3.org/1999/XSL/Transform`.  
  
 Этот метод имеет следующие особенности.  
  
-   Для обработки элементов `xsl:import` или `xsl:include` используется <xref:System.Xml.XmlUrlResolver> без учетных данных пользователя.  
  
-   Функция `document()` отключена.  
  
-   Внедренные скрипты не поддерживаются.  
  
 Перегрузку <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A> можно использовать для указания <xref:System.Xml.XmlResolver> с необходимыми учетными данными для проверки подлинности или для указания других параметров XSLT.  
  
   
  
## Examples  
 В следующем примере загружается таблица стилей, содержащаяся в объекте <xref:System.Xml.XPath.XPathDocument>.  
  
 [!code-csharp[XslCompiledTransform.Load#1](~/samples/snippets/csharp/VS_Snippets_Data/XslCompiledTransform.Load/CS/Xslt_Load_v2.cs#1)]
 [!code-vb[XslCompiledTransform.Load#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslCompiledTransform.Load/VB/Xslt_Load_v2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Значение <paramref name="stylesheet" /> равно <see langword="null" />.</exception>
        <exception cref="T:System.Xml.Xsl.XsltException">Таблица стилей содержит ошибку.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/f9b074f6-d6f4-49dd-a093-df510bf0cf7b">Использование класса XslCompiledTransform</related>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Reflection.MethodInfo executeMethod, byte[] queryData, Type[] earlyBoundTypes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Reflection.MethodInfo executeMethod, unsigned int8[] queryData, class System.Type[] earlyBoundTypes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Load(System.Reflection.MethodInfo,System.Byte[],System.Type[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (executeMethod As MethodInfo, queryData As Byte(), earlyBoundTypes As Type())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Reflection::MethodInfo ^ executeMethod, cli::array &lt;System::Byte&gt; ^ queryData, cli::array &lt;Type ^&gt; ^ earlyBoundTypes);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Reflection.MethodInfo * byte[] * Type[] -&gt; unit" Usage="xslCompiledTransform.Load (executeMethod, queryData, earlyBoundTypes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="executeMethod" Type="System.Reflection.MethodInfo" />
        <Parameter Name="queryData" Type="System.Byte[]" />
        <Parameter Name="earlyBoundTypes" Type="System.Type[]" />
      </Parameters>
      <Docs>
        <param name="executeMethod">Объект <see cref="T:System.Reflection.MethodInfo" />, представляющий созданный компилятором метод <c>execute</c> скомпилированной таблицы стилей.</param>
        <param name="queryData">Массив байтов сериализованных структур данных в поле <c>staticData</c> скомпилированной таблицы стилей, создаваемый методом <see cref="M:System.Xml.Xsl.XslCompiledTransform.CompileToType(System.Xml.XmlReader,System.Xml.Xsl.XsltSettings,System.Xml.XmlResolver,System.Boolean,System.Reflection.Emit.TypeBuilder,System.String)" />.</param>
        <param name="earlyBoundTypes">Массив типов, хранящихся в созданном компилятором поле <c>ebTypes</c> в скомпилированной таблице стилей.</param>
        <summary>Загружает метод из таблицы стилей, скомпилированной с помощью средства <see langword="XSLTC.exe" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод принимает скомпилированную таблицу стилей в форме объекта <xref:System.Reflection.MethodInfo>, массива байтов и массива типов. <xref:System.Reflection.Emit.DynamicMethod> объекты можно использовать, чтобы разрешить отброшенные скомпилированные методы таблицы стилей при освобождении объекта <xref:System.Xml.Xsl.XslCompiledTransform>.  
  
   
  
## Examples  
 В приведенном ниже примере кода используется <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A> для загрузки скомпилированной таблицы стилей. Преобразование сокращает значение элемента `Price` на десять процентов.  
  
 [!code-csharp[XsltDynamicMethodLoad#1](~/samples/snippets/csharp/VS_Snippets_Data/XsltDynamicMethodLoad/CS/XsltDynamicMethodLoad.cs#1)]
 [!code-vb[XsltDynamicMethodLoad#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XsltDynamicMethodLoad/VB/XsltDynamicMethodLoad.vb#1)]  
  
> [!NOTE]
>  Сборка "Transform", используемая в этом примере, была построена с помощью служебной программы xsltc. exe. Подробные сведения об использовании этого средства командной строки см. [в разделе инструкции. выполнение преобразования XSLT с помощью сборки](~/docs/standard/data/xml/how-to-perform-an-xslt-transformation-by-using-an-assembly.md).  
  
 В предыдущем примере кода используется следующее преобразование:  
 [!code-xml[XsltDynamicMethodLoad-xslt](~/samples/snippets/csharp/VS_Snippets_Data/XsltDynamicMethodLoad/CS/Transform.xslt)]
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (string stylesheetUri, System.Xml.Xsl.XsltSettings settings, System.Xml.XmlResolver stylesheetResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(string stylesheetUri, class System.Xml.Xsl.XsltSettings settings, class System.Xml.XmlResolver stylesheetResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Load(System.String,System.Xml.Xsl.XsltSettings,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheetUri As String, settings As XsltSettings, stylesheetResolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::String ^ stylesheetUri, System::Xml::Xsl::XsltSettings ^ settings, System::Xml::XmlResolver ^ stylesheetResolver);" />
      <MemberSignature Language="F#" Value="member this.Load : string * System.Xml.Xsl.XsltSettings * System.Xml.XmlResolver -&gt; unit" Usage="xslCompiledTransform.Load (stylesheetUri, settings, stylesheetResolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheetUri" Type="System.String" />
        <Parameter Name="settings" Type="System.Xml.Xsl.XsltSettings" />
        <Parameter Name="stylesheetResolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="stylesheetUri">URI таблицы стилей.</param>
        <param name="settings">Объект <see cref="T:System.Xml.Xsl.XsltSettings" />, который следует применить к таблице стилей. Если значение равно <see langword="null" />, применяется параметр <see cref="P:System.Xml.Xsl.XsltSettings.Default" />.</param>
        <param name="stylesheetResolver"><see cref="T:System.Xml.XmlResolver" />, используемый для разрешения URI таблицы стилей и любых таблиц стилей, на которые имеются ссылки в элементах XSLT <c>import</c> и <c>include</c>.</param>
        <summary>Загружает и компилирует таблицу стилей XSLT, указанную по URI. Метод <see cref="T:System.Xml.XmlResolver" /> разрешает любой элемент XSLT <c>import</c> или <c>include</c>, а параметры XSLT определяют разрешения для таблицы стилей.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Класс <xref:System.Xml.Xsl.XslCompiledTransform> поддерживает синтаксис XSLT 1,0. Таблица стилей XSLT должна использовать пространство имен `http://www.w3.org/1999/XSL/Transform`.  
  
 Для загрузки таблицы стилей используется <xref:System.Xml.XmlReader> с параметрами по умолчанию. Обработка DTD отключена на <xref:System.Xml.XmlReader>. Если требуется обработка DTD, создайте <xref:System.Xml.XmlReader> с включенной функцией и передайте ее методу <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A>.  
  
   
  
## Examples  
 В следующем примере загружается таблица стилей, хранящаяся в сетевом ресурсе. Объект <xref:System.Xml.XmlSecureResolver> задает учетные данные, необходимые для доступа к таблице стилей.  
  
 [!code-csharp[XslCompiledTransform.Load#2](~/samples/snippets/csharp/VS_Snippets_Data/XslCompiledTransform.Load/CS/Xslt_Load_v2.cs#2)]
 [!code-vb[XslCompiledTransform.Load#2](~/samples/snippets/visualbasic/VS_Snippets_Data/XslCompiledTransform.Load/VB/Xslt_Load_v2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметру <paramref name="stylesheetUri" /> или <paramref name="stylesheetResolver" /> задано значение <see langword="null" />.</exception>
        <exception cref="T:System.Xml.Xsl.XsltException">Таблица стилей содержит ошибку.</exception>
        <exception cref="T:System.IO.FileNotFoundException">Не удается найти таблицу стилей.</exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">Значение <paramref name="stylesheetUri" /> включает имя файла или каталог, который невозможно найти.</exception>
        <exception cref="T:System.Net.WebException">Значение <paramref name="stylesheetUri" /> не удается разрешить.  
  
-или- 
При обработке этого запроса возникла ошибка.</exception>
        <exception cref="T:System.UriFormatException"><paramref name="stylesheetUri" /> не является допустимым URI.</exception>
        <exception cref="T:System.Xml.XmlException">Произошла ошибка анализа при загрузке таблицы стилей.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/f9b074f6-d6f4-49dd-a093-df510bf0cf7b">Использование класса XslCompiledTransform</related>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XmlReader stylesheet, System.Xml.Xsl.XsltSettings settings, System.Xml.XmlResolver stylesheetResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XmlReader stylesheet, class System.Xml.Xsl.XsltSettings settings, class System.Xml.XmlResolver stylesheetResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Load(System.Xml.XmlReader,System.Xml.Xsl.XsltSettings,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As XmlReader, settings As XsltSettings, stylesheetResolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XmlReader ^ stylesheet, System::Xml::Xsl::XsltSettings ^ settings, System::Xml::XmlResolver ^ stylesheetResolver);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XmlReader * System.Xml.Xsl.XsltSettings * System.Xml.XmlResolver -&gt; unit" Usage="xslCompiledTransform.Load (stylesheet, settings, stylesheetResolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XmlReader" />
        <Parameter Name="settings" Type="System.Xml.Xsl.XsltSettings" />
        <Parameter Name="stylesheetResolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="stylesheet"><see cref="T:System.Xml.XmlReader" />, содержащий таблицу стилей.</param>
        <param name="settings">Объект <see cref="T:System.Xml.Xsl.XsltSettings" />, который следует применить к таблице стилей. Если значение равно <see langword="null" />, применяется параметр <see cref="P:System.Xml.Xsl.XsltSettings.Default" />.</param>
        <param name="stylesheetResolver"><see cref="T:System.Xml.XmlResolver" /> используется для разрешения любых таблиц стилей, на которые имеются ссылки в элементах XSLT <c>import</c> и <c>include</c>. Если его значение равно <see langword="null" />, внешние ресурсы не определяются.</param>
        <summary>Компилирует таблицу стилей XSLT, содержащуюся в объекте <see cref="T:System.Xml.XmlReader" />. Метод <see cref="T:System.Xml.XmlResolver" /> разрешает любой элемент XSLT <c>import</c> или <c>include</c>, а параметры XSLT определяют разрешения для таблицы стилей.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Класс <xref:System.Xml.Xsl.XslCompiledTransform> поддерживает синтаксис XSLT 1,0. Таблица стилей XSLT должна использовать пространство имен `http://www.w3.org/1999/XSL/Transform`.  
  
 Таблица стилей загружается из текущего узла <xref:System.Xml.XmlReader> через все его дочерние элементы. Это позволяет использовать часть документа в качестве таблицы стилей. После завершения метода <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A> <xref:System.Xml.XmlReader> размещается на следующем узле после конца таблицы стилей. По достижении конца документа объект <xref:System.Xml.XmlReader> позиционируется в конец файла (EOF).  
  
   
  
## Examples  
 В следующем примере загружается таблица стилей и включается поддержка создания скриптов XSLT.  
  
 [!code-csharp[XslCompiledTransform.Load#3](~/samples/snippets/csharp/VS_Snippets_Data/XslCompiledTransform.Load/CS/Xslt_Load_v2.cs#3)]
 [!code-vb[XslCompiledTransform.Load#3](~/samples/snippets/visualbasic/VS_Snippets_Data/XslCompiledTransform.Load/VB/Xslt_Load_v2.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Значение <paramref name="stylesheet" /> равно <see langword="null" />.</exception>
        <exception cref="T:System.Xml.Xsl.XsltException">Таблица стилей содержит ошибку.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/f9b074f6-d6f4-49dd-a093-df510bf0cf7b">Использование класса XslCompiledTransform</related>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XPath.IXPathNavigable stylesheet, System.Xml.Xsl.XsltSettings settings, System.Xml.XmlResolver stylesheetResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XPath.IXPathNavigable stylesheet, class System.Xml.Xsl.XsltSettings settings, class System.Xml.XmlResolver stylesheetResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Load(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltSettings,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As IXPathNavigable, settings As XsltSettings, stylesheetResolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XPath::IXPathNavigable ^ stylesheet, System::Xml::Xsl::XsltSettings ^ settings, System::Xml::XmlResolver ^ stylesheetResolver);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltSettings * System.Xml.XmlResolver -&gt; unit" Usage="xslCompiledTransform.Load (stylesheet, settings, stylesheetResolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="settings" Type="System.Xml.Xsl.XsltSettings" />
        <Parameter Name="stylesheetResolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="stylesheet">Объект, реализующий интерфейс <see cref="T:System.Xml.XPath.IXPathNavigable" />. В Microsoft .NET Framework это может быть либо <see cref="T:System.Xml.XmlNode" /> (обычно <see cref="T:System.Xml.XmlDocument" />), либо <see cref="T:System.Xml.XPath.XPathDocument" />, содержащий таблицу стилей.</param>
        <param name="settings">Объект <see cref="T:System.Xml.Xsl.XsltSettings" />, который следует применить к таблице стилей. Если значение равно <see langword="null" />, применяется параметр <see cref="P:System.Xml.Xsl.XsltSettings.Default" />.</param>
        <param name="stylesheetResolver"><see cref="T:System.Xml.XmlResolver" /> используется для разрешения любых таблиц стилей, на которые имеются ссылки в элементах XSLT <c>import</c> и <c>include</c>. Если его значение равно <see langword="null" />, внешние ресурсы не определяются.</param>
        <summary>Компилирует таблицу стилей XSLT, содержащуюся в объекте <see cref="T:System.Xml.XPath.IXPathNavigable" />. Метод <see cref="T:System.Xml.XmlResolver" /> разрешает любой элемент XSLT <c>import</c> или <c>include</c>, а параметры XSLT определяют разрешения для таблицы стилей.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Класс <xref:System.Xml.Xsl.XslCompiledTransform> поддерживает синтаксис XSLT 1,0. Таблица стилей XSLT должна использовать пространство имен `http://www.w3.org/1999/XSL/Transform`.  
  
   
  
## Examples  
 В следующем примере загружается таблица стилей. Объект <xref:System.Xml.XmlSecureResolver> содержит учетные данные, необходимые для доступа к любым элементам `import` или `include`, найденным в таблице стилей.  
  
 [!code-csharp[XslCompiledTransform.Load#4](~/samples/snippets/csharp/VS_Snippets_Data/XslCompiledTransform.Load/CS/Xslt_Load_v2.cs#4)]
 [!code-vb[XslCompiledTransform.Load#4](~/samples/snippets/visualbasic/VS_Snippets_Data/XslCompiledTransform.Load/VB/Xslt_Load_v2.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Значение <paramref name="stylesheet" /> равно <see langword="null" />.</exception>
        <exception cref="T:System.Xml.Xsl.XsltException">Таблица стилей содержит ошибку.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/f9b074f6-d6f4-49dd-a093-df510bf0cf7b">Использование класса XslCompiledTransform</related>
      </Docs>
    </Member>
    <Member MemberName="OutputSettings">
      <MemberSignature Language="C#" Value="public System.Xml.XmlWriterSettings OutputSettings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlWriterSettings OutputSettings" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OutputSettings As XmlWriterSettings" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlWriterSettings ^ OutputSettings { System::Xml::XmlWriterSettings ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OutputSettings : System.Xml.XmlWriterSettings" Usage="System.Xml.Xsl.XslCompiledTransform.OutputSettings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XmlWriterSettings</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает объект <see cref="T:System.Xml.XmlWriterSettings" />, который содержит выходные данные, полученные из элемента <c>xsl:output</c> таблицы стилей.</summary>
        <value>Объект <see cref="T:System.Xml.XmlWriterSettings" /> только для чтения, содержащий выходные данные, полученные из элемента <c>XSL: output</c> таблицы стилей. Это значение может быть равно <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это свойство заполняется после успешного вызова метода <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A>. Он содержит сведения, полученные из элемента `xsl:output` скомпилированной таблицы стилей. Этот объект <xref:System.Xml.XmlWriterSettings> можно передать методу <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType>, чтобы создать объект <xref:System.Xml.XmlWriter>, для которого необходимо вывести выходные данные.  
  
   
  
## Examples  
 В следующем примере показано, как использовать свойство <xref:System.Xml.Xsl.XslCompiledTransform.OutputSettings%2A> для создания объекта <xref:System.Xml.XmlWriter>, записывающего текст в консоль.  
  
 [!code-csharp[XslCompiledTransform.OutputSettings#1](~/samples/snippets/csharp/VS_Snippets_Data/XslCompiledTransform.OutputSettings/CS/xslt_OutputSettings.cs#1)]
 [!code-vb[XslCompiledTransform.OutputSettings#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslCompiledTransform.OutputSettings/VB/xslt_OutputSettings.vb#1)]  
  
 В качестве входных данных в примере используются файлы `books.xml` и `outputConsole.xsl`.  
  
 `books.xml`  
  
 [!code-xml[XslCompiledTransform.OutputSettings#2](~/samples/snippets/xml/VS_Snippets_Data/XslCompiledTransform.OutputSettings/XML/books.xml#2)]  
  
 `outputConsole.xsl`  
  
 [!code-xml[XslCompiledTransform.OutputSettings#3](~/samples/snippets/xml/VS_Snippets_Data/XslCompiledTransform.OutputSettings/XML/outputConsole.xsl#3)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/f9b074f6-d6f4-49dd-a093-df510bf0cf7b">Использование класса XslCompiledTransform</related>
      </Docs>
    </Member>
    <Member MemberName="TemporaryFiles">
      <MemberSignature Language="C#" Value="public System.CodeDom.Compiler.TempFileCollection TemporaryFiles { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CodeDom.Compiler.TempFileCollection TemporaryFiles" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Xsl.XslCompiledTransform.TemporaryFiles" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TemporaryFiles As TempFileCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::CodeDom::Compiler::TempFileCollection ^ TemporaryFiles { System::CodeDom::Compiler::TempFileCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TemporaryFiles : System.CodeDom.Compiler.TempFileCollection" Usage="System.Xml.Xsl.XslCompiledTransform.TemporaryFiles" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.TempFileCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает коллекцию <see cref="T:System.CodeDom.Compiler.TempFileCollection" />, которая содержит временные файлы, созданные на диске после успешного вызова метода <see cref="Overload:System.Xml.Xsl.XslCompiledTransform.Load" />.</summary>
        <value>Коллекция <see cref="T:System.CodeDom.Compiler.TempFileCollection" />, содержащая временные файлы, созданные на диске. Это значение равно <see langword="null" />, если вызов метода <see cref="Overload:System.Xml.Xsl.XslCompiledTransform.Load" /> завершился успешно или не была включена отладка.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это свойство определяет файлы, созданные во время обработки XSLT. Файлы помещаются во временный каталог (заданный переменной среды% TEMP%). Эти файлы можно удалить после завершения обработки XSLT.  
  
   
  
## Examples  
 В следующем примере имена временных файлов записываются в консоль.  
  
> [!NOTE]
>  Временные файлы создаются только при загрузке таблиц стилей с \<msxsl: script > Blocks.  
  
 [!code-csharp[XslCompiledTransform.Transform#8](~/samples/snippets/csharp/VS_Snippets_Data/XslCompiledTransform.Transform/CS/Xslt_Transform_v2.cs#8)]
 [!code-vb[XslCompiledTransform.Transform#8](~/samples/snippets/visualbasic/VS_Snippets_Data/XslCompiledTransform.Transform/VB/Xslt_Transform_v2.vb#8)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/f9b074f6-d6f4-49dd-a093-df510bf0cf7b">Использование класса XslCompiledTransform</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Transform">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Выполняет преобразование XSLT.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Ниже приведены различия между XSLT, скомпилированными в режиме отладки и режиме выпуска. В некоторых случаях таблицы стилей, скомпилированные в режиме отладки, не выдают ошибки во время вызова <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A>, но завершаются ошибкой позже, при вызове метода <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A>. Та же таблица стилей, скомпилированная в режиме выпуска, завершается ошибкой во время вызова <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A>. Например, это может произойти в том случае, если переменная, не принадлежащая к типу набора узлов, присваивается выражению, где требуется набор узлов.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/f9b074f6-d6f4-49dd-a093-df510bf0cf7b">Использование класса XslCompiledTransform</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (string inputUri, string resultsFile);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(string inputUri, string resultsFile) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (inputUri As String, resultsFile As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::String ^ inputUri, System::String ^ resultsFile);" />
      <MemberSignature Language="F#" Value="member this.Transform : string * string -&gt; unit" Usage="xslCompiledTransform.Transform (inputUri, resultsFile)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputUri" Type="System.String" />
        <Parameter Name="resultsFile" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="inputUri">URI входного документа.</param>
        <param name="resultsFile">URI выходного файла.</param>
        <summary>Выполняет преобразование с помощью входного документа, указанного по URI, и выводит результат в файл.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод использует <xref:System.Xml.XmlUrlResolver> по умолчанию без учетных данных пользователя для разрешения входных и выходных документов. Если какие-либо из этих ресурсов находятся в сетевом ресурсе, требующем проверки подлинности, используйте перегрузку, которая принимает <xref:System.Xml.XmlResolver> как один из своих аргументов, и укажите <xref:System.Xml.XmlResolver> с необходимыми учетными данными.  
  
 Для загрузки входного документа используется <xref:System.Xml.XmlReader> с параметрами по умолчанию. Обработка DTD отключена на <xref:System.Xml.XmlReader>. Если требуется обработка DTD, создайте <xref:System.Xml.XmlReader> с включенной функцией и передайте ее методу <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A>.  
  
   
  
## Examples  
 В следующем примере выполняется преобразование и вывод в файл.  
  
 [!code-csharp[XslCompiledTransform.Transform#1](~/samples/snippets/csharp/VS_Snippets_Data/XslCompiledTransform.Transform/CS/Xslt_Transform_v2.cs#1)]
 [!code-vb[XslCompiledTransform.Transform#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslCompiledTransform.Transform/VB/Xslt_Transform_v2.vb#1)]  
  
 В образце используются следующие два входных файла:  
  
 `books.xml`  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/books.xml#2)]  
  
 `output.xsl`  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#3](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/output.xsl#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметру <paramref name="inputUri" /> или <paramref name="resultsFile" /> задано значение <see langword="null" />.</exception>
        <exception cref="T:System.Xml.Xsl.XsltException">При выполнении преобразования XSLT произошла ошибка.</exception>
        <exception cref="T:System.IO.FileNotFoundException">Не удается найти входной документ документа.</exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">Значение <paramref name="inputUri" /> или <paramref name="resultsFile" /> включает имя файла или каталог, который не удается найти.</exception>
        <exception cref="T:System.Net.WebException">Не удается разрешить значение <paramref name="inputUri" /> или <paramref name="resultsFile" />.  
  
-или- 
Произошла ошибка при обработке запроса.</exception>
        <exception cref="T:System.UriFormatException">Параметр <paramref name="inputUri" /> или <paramref name="resultsFile" /> не является допустимым именем URI.</exception>
        <exception cref="T:System.Xml.XmlException">Произошла ошибка анализа при загрузке входного документа.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/f9b074f6-d6f4-49dd-a093-df510bf0cf7b">Использование класса XslCompiledTransform</related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (string inputUri, System.Xml.XmlWriter results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(string inputUri, class System.Xml.XmlWriter results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (inputUri As String, results As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::String ^ inputUri, System::Xml::XmlWriter ^ results);" />
      <MemberSignature Language="F#" Value="member this.Transform : string * System.Xml.XmlWriter -&gt; unit" Usage="xslCompiledTransform.Transform (inputUri, results)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputUri" Type="System.String" />
        <Parameter Name="results" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="inputUri">URI входного документа.</param>
        <param name="results">Модуль записи <see cref="T:System.Xml.XmlWriter" />, в который нужно направить выход.  
  
Если таблица стилей содержит элемент <c>xsl:output</c>, необходимо создать <see cref="T:System.Xml.XmlWriter" /> с использованием объекта <see cref="T:System.Xml.XmlWriterSettings" />, возвращенного из свойства <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" />. Это гарантирует правильность параметров выходных данных для объекта <see cref="T:System.Xml.XmlWriter" />.</param>
        <summary>Выполняет преобразование с помощью входного документа, указанного в URI, и выводит результат в <see cref="T:System.Xml.XmlWriter" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод использует <xref:System.Xml.XmlUrlResolver> по умолчанию без учетных данных пользователя для разрешения входного документа и всех экземпляров функции `document()` XSLT, найденной в таблице стилей. Если какие-либо из этих ресурсов находятся в сетевом ресурсе, требующем проверки подлинности, используйте перегрузку, которая принимает <xref:System.Xml.XmlResolver> как один из своих аргументов, и укажите <xref:System.Xml.XmlResolver> с необходимыми учетными данными.  
  
 Для загрузки входного документа используется <xref:System.Xml.XmlReader> с параметрами по умолчанию. Обработка DTD отключена на <xref:System.Xml.XmlReader>. Если требуется обработка DTD, создайте <xref:System.Xml.XmlReader> с включенной функцией и передайте ее методу <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A>.  
  
 Этот метод не поддерживает элемент `xsl:strip-space`. Если скомпилированная таблица стилей включала элемент `xsl:strip-space`, необходимо использовать перегрузку <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A>, которая принимает <xref:System.Xml.XmlReader> в качестве входного аргумента.  
  
   
  
## Examples  
 В следующем примере выполняется преобразование XSLT и выходные данные в объект <xref:System.Xml.XmlWriter>.  
  
 [!code-csharp[XslCompiledTransform.Transform#2](~/samples/snippets/csharp/VS_Snippets_Data/XslCompiledTransform.Transform/CS/Xslt_Transform_v2.cs#2)]
 [!code-vb[XslCompiledTransform.Transform#2](~/samples/snippets/visualbasic/VS_Snippets_Data/XslCompiledTransform.Transform/VB/Xslt_Transform_v2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметру <paramref name="inputUri" /> или <paramref name="results" /> задано значение <see langword="null" />.</exception>
        <exception cref="T:System.Xml.Xsl.XsltException">При выполнении преобразования XSLT произошла ошибка.</exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">Значение <paramref name="inputUri" /> включает имя файла или каталог, который не удается найти.</exception>
        <exception cref="T:System.Net.WebException">Значение <paramref name="inputUri" /> не удается разрешить.  
  
-или- 
При обработке этого запроса возникла ошибка.</exception>
        <exception cref="T:System.UriFormatException"><paramref name="inputUri" /> не является допустимым URI.</exception>
        <exception cref="T:System.Xml.XmlException">Произошла ошибка анализа при загрузке входного документа.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/f9b074f6-d6f4-49dd-a093-df510bf0cf7b">Использование класса XslCompiledTransform</related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XmlReader input, System.Xml.XmlWriter results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XmlReader input, class System.Xml.XmlWriter results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XmlReader,System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XmlReader, results As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XmlReader ^ input, System::Xml::XmlWriter ^ results);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XmlReader * System.Xml.XmlWriter -&gt; unit" Usage="xslCompiledTransform.Transform (input, results)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XmlReader" />
        <Parameter Name="results" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="input">Объект <see cref="T:System.Xml.XmlReader" />, содержащий входной документ.</param>
        <param name="results">Модуль записи <see cref="T:System.Xml.XmlWriter" />, в который нужно направить выход.  
  
Если таблица стилей содержит элемент <c>xsl:output</c>, необходимо создать <see cref="T:System.Xml.XmlWriter" /> с использованием объекта <see cref="T:System.Xml.XmlWriterSettings" />, возвращенного из свойства <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" />. Это гарантирует правильность параметров выходных данных для объекта <see cref="T:System.Xml.XmlWriter" />.</param>
        <summary>Выполняет преобразование с помощью входного документа, указанного в объекте <see cref="T:System.Xml.XmlReader" />, и выводит результат в средство записи <see cref="T:System.Xml.XmlWriter" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если функция XSLT `document()` включена, она разрешается с помощью <xref:System.Xml.XmlUrlResolver> без учетных данных пользователя. Если внешний ресурс находится в сетевом ресурсе, требующем проверки подлинности, используйте перегрузку, которая принимает <xref:System.Xml.XmlResolver> как один из своих аргументов, и укажите <xref:System.Xml.XmlResolver> с необходимыми учетными данными.  
  
   
  
## Examples  
 В следующем примере первая книга преобразуется в файл books. XML.  
  
 [!code-csharp[XslCompiledTransform.Transform#7](~/samples/snippets/csharp/VS_Snippets_Data/XslCompiledTransform.Transform/CS/Xslt_Transform_v2.cs#7)]
 [!code-vb[XslCompiledTransform.Transform#7](~/samples/snippets/visualbasic/VS_Snippets_Data/XslCompiledTransform.Transform/VB/Xslt_Transform_v2.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметру <paramref name="input" /> или <paramref name="results" /> задано значение <see langword="null" />.</exception>
        <exception cref="T:System.Xml.Xsl.XsltException">При выполнении преобразования XSLT произошла ошибка.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/f9b074f6-d6f4-49dd-a093-df510bf0cf7b">Использование класса XslCompiledTransform</related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.XmlWriter results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.XmlWriter results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, results As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::XmlWriter ^ results);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.XmlWriter -&gt; unit" Usage="xslCompiledTransform.Transform (input, results)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="results" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="input">Объект, реализующий интерфейс <see cref="T:System.Xml.XPath.IXPathNavigable" />. В Microsoft .NET Framework это может быть либо <see cref="T:System.Xml.XmlNode" /> (обычно <see cref="T:System.Xml.XmlDocument" />), либо <see cref="T:System.Xml.XPath.XPathDocument" />, содержащий преобразуемые данные.</param>
        <param name="results">Модуль записи <see cref="T:System.Xml.XmlWriter" />, в который нужно направить выход.  
  
Если таблица стилей содержит элемент <c>xsl:output</c>, необходимо создать <see cref="T:System.Xml.XmlWriter" /> с использованием объекта <see cref="T:System.Xml.XmlWriterSettings" />, возвращенного из свойства <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" />. Это гарантирует правильность параметров выходных данных для объекта <see cref="T:System.Xml.XmlWriter" />.</param>
        <summary>Выполняет преобразование с помощью входного документа, указанного в объекте <see cref="T:System.Xml.XPath.IXPathNavigable" />, и выводит результат в средство записи <see cref="T:System.Xml.XmlWriter" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если функция XSLT `document()` включена, она разрешается с помощью <xref:System.Xml.XmlUrlResolver> без учетных данных пользователя. Если внешний ресурс находится в сетевом ресурсе, требующем проверки подлинности, используйте перегрузку, которая принимает <xref:System.Xml.XmlResolver> как один из своих аргументов, и укажите <xref:System.Xml.XmlResolver> с необходимыми учетными данными.  
  
 Этот метод не поддерживает элемент `xsl:strip-space`. Если скомпилированная таблица стилей включала элемент `xsl:strip-space`, необходимо использовать перегрузку <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A>, которая принимает <xref:System.Xml.XmlReader> в качестве входного аргумента.  
  
 Интерфейс <xref:System.Xml.XPath.IXPathNavigable> реализован в классах <xref:System.Xml.XmlNode> и <xref:System.Xml.XPath.XPathDocument>. Эти классы представляют хранящийся в памяти кэш XML-данных.  
  
-   Класс <xref:System.Xml.XmlNode> основан на модели W3C DOM и позволяет вносить изменения.  
  
-   Класс <xref:System.Xml.XPath.XPathDocument> представляет собой доступное только для чтения хранилище данных на основе модели данных XPath. Класс <xref:System.Xml.XPath.XPathDocument> рекомендуется для обработки XSLT. Он обеспечивает более высокую производительность по сравнению с классом <xref:System.Xml.XmlNode>.  
  
 Преобразования применяются к документу в целом. Иными словами, если передать узел, отличный от корневого узла документа, это не помешает процессу преобразования обратиться ко всем узлам загружаемого документа. Чтобы преобразовать фрагмент узла, необходимо создать объект, содержащий только фрагмент этого узла, и передать его методу <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A>. См. дополнительные сведения о [преобразовании фрагментов узлов](~/docs/standard/data/xml/how-to-transform-a-node-fragment.md).  
  
   
  
## Examples  
 В следующем примере выполняется преобразование XSLT и выходные данные в объект <xref:System.Xml.XmlWriter>.  
  
 [!code-csharp[XslCompiledTransform.Transform#5](~/samples/snippets/csharp/VS_Snippets_Data/XslCompiledTransform.Transform/CS/Xslt_Transform_v2.cs#5)]
 [!code-vb[XslCompiledTransform.Transform#5](~/samples/snippets/visualbasic/VS_Snippets_Data/XslCompiledTransform.Transform/VB/Xslt_Transform_v2.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметру <paramref name="input" /> или <paramref name="results" /> задано значение <see langword="null" />.</exception>
        <exception cref="T:System.Xml.Xsl.XsltException">При выполнении преобразования XSLT произошла ошибка.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/f9b074f6-d6f4-49dd-a093-df510bf0cf7b">Использование класса XslCompiledTransform</related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (string inputUri, System.Xml.Xsl.XsltArgumentList arguments, System.IO.Stream results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(string inputUri, class System.Xml.Xsl.XsltArgumentList arguments, class System.IO.Stream results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (inputUri As String, arguments As XsltArgumentList, results As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::String ^ inputUri, System::Xml::Xsl::XsltArgumentList ^ arguments, System::IO::Stream ^ results);" />
      <MemberSignature Language="F#" Value="member this.Transform : string * System.Xml.Xsl.XsltArgumentList * System.IO.Stream -&gt; unit" Usage="xslCompiledTransform.Transform (inputUri, arguments, results)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputUri" Type="System.String" />
        <Parameter Name="arguments" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="results" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="inputUri">URI входного документа.</param>
        <param name="arguments">Объект <see cref="T:System.Xml.Xsl.XsltArgumentList" />, содержащий имена аргументов с указанием пространства имен, используемый в качестве входных данных для преобразования. Это значение может быть равно <see langword="null" />.</param>
        <param name="results">Поток, в который требуется направить вывод.</param>
        <summary>Выполняет преобразование с помощью входного документа, указанного по URI, и выводит результат в поток. <see cref="T:System.Xml.Xsl.XsltArgumentList" /> предоставляет дополнительные аргументы для работы в режиме реального времени.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод использует <xref:System.Xml.XmlUrlResolver> по умолчанию без учетных данных пользователя для разрешения входного документа и всех экземпляров функции `document()` XSLT, найденной в таблице стилей. Если какие-либо из этих ресурсов находятся в сетевом ресурсе, требующем проверки подлинности, используйте перегрузку, которая принимает <xref:System.Xml.XmlResolver> как один из своих аргументов, и укажите <xref:System.Xml.XmlResolver> с необходимыми учетными данными.  
  
 Для загрузки входного документа используется <xref:System.Xml.XmlReader> с параметрами по умолчанию. Обработка DTD отключена на <xref:System.Xml.XmlReader>. Если требуется обработка DTD, создайте <xref:System.Xml.XmlReader> с включенной функцией и передайте ее методу <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметру <paramref name="inputUri" /> или <paramref name="results" /> задано значение <see langword="null" />.</exception>
        <exception cref="T:System.Xml.Xsl.XsltException">При выполнении преобразования XSLT произошла ошибка.</exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">Значение <paramref name="inputUri" /> включает имя файла или каталог, который не удается найти.</exception>
        <exception cref="T:System.Net.WebException">Значение <paramref name="inputUri" /> не удается разрешить.  
  
-или- 
Произошла ошибка при обработке запроса.</exception>
        <exception cref="T:System.UriFormatException"><paramref name="inputUri" /> не является допустимым URI.</exception>
        <exception cref="T:System.Xml.XmlException">Произошла ошибка анализа при загрузке входного документа.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/f9b074f6-d6f4-49dd-a093-df510bf0cf7b">Использование класса XslCompiledTransform</related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (string inputUri, System.Xml.Xsl.XsltArgumentList arguments, System.IO.TextWriter results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(string inputUri, class System.Xml.Xsl.XsltArgumentList arguments, class System.IO.TextWriter results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (inputUri As String, arguments As XsltArgumentList, results As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::String ^ inputUri, System::Xml::Xsl::XsltArgumentList ^ arguments, System::IO::TextWriter ^ results);" />
      <MemberSignature Language="F#" Value="member this.Transform : string * System.Xml.Xsl.XsltArgumentList * System.IO.TextWriter -&gt; unit" Usage="xslCompiledTransform.Transform (inputUri, arguments, results)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputUri" Type="System.String" />
        <Parameter Name="arguments" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="results" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="inputUri">URI входного документа.</param>
        <param name="arguments">Объект <see cref="T:System.Xml.Xsl.XsltArgumentList" />, содержащий имена аргументов с указанием пространства имен, используемый в качестве входных данных для преобразования. Это значение может быть равно <see langword="null" />.</param>
        <param name="results">Модуль записи <see cref="T:System.IO.TextWriter" />, в который нужно направить выход.</param>
        <summary>Выполняет преобразование с помощью входного документа, указанного в URI, и выводит результат в <see cref="T:System.IO.TextWriter" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод использует <xref:System.Xml.XmlUrlResolver> по умолчанию без учетных данных пользователя для разрешения входного документа и всех экземпляров функции `document()` XSLT, найденной в таблице стилей. Если какие-либо из этих ресурсов находятся в сетевом ресурсе, требующем проверки подлинности, используйте перегрузку, которая принимает <xref:System.Xml.XmlResolver> как один из своих аргументов, и укажите <xref:System.Xml.XmlResolver> с необходимыми учетными данными.  
  
 Для загрузки входного документа используется <xref:System.Xml.XmlReader> с параметрами по умолчанию. Обработка DTD отключена на <xref:System.Xml.XmlReader>. Если требуется обработка DTD, создайте <xref:System.Xml.XmlReader> с включенной функцией и передайте ее методу <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A>.  
  
   
  
## Examples  
 В следующем примере выполняется преобразование XSLT и выводится строка.  
  
 [!code-csharp[XslCompiledTransform.Transform#3](~/samples/snippets/csharp/VS_Snippets_Data/XslCompiledTransform.Transform/CS/Xslt_Transform_v2.cs#3)]
 [!code-vb[XslCompiledTransform.Transform#3](~/samples/snippets/visualbasic/VS_Snippets_Data/XslCompiledTransform.Transform/VB/Xslt_Transform_v2.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметру <paramref name="inputUri" /> или <paramref name="results" /> задано значение <see langword="null" />.</exception>
        <exception cref="T:System.Xml.Xsl.XsltException">При выполнении преобразования XSLT произошла ошибка.</exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">Значение <paramref name="inputUri" /> включает имя файла или каталог, который не удается найти.</exception>
        <exception cref="T:System.Net.WebException">Значение <paramref name="inputUri" /> не удается разрешить.  
  
-или- 
Произошла ошибка при обработке запроса.</exception>
        <exception cref="T:System.UriFormatException"><paramref name="inputUri" /> не является допустимым URI.</exception>
        <exception cref="T:System.Xml.XmlException">Произошла ошибка анализа при загрузке входного документа.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/f9b074f6-d6f4-49dd-a093-df510bf0cf7b">Использование класса XslCompiledTransform</related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (string inputUri, System.Xml.Xsl.XsltArgumentList arguments, System.Xml.XmlWriter results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(string inputUri, class System.Xml.Xsl.XsltArgumentList arguments, class System.Xml.XmlWriter results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (inputUri As String, arguments As XsltArgumentList, results As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::String ^ inputUri, System::Xml::Xsl::XsltArgumentList ^ arguments, System::Xml::XmlWriter ^ results);" />
      <MemberSignature Language="F#" Value="member this.Transform : string * System.Xml.Xsl.XsltArgumentList * System.Xml.XmlWriter -&gt; unit" Usage="xslCompiledTransform.Transform (inputUri, arguments, results)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputUri" Type="System.String" />
        <Parameter Name="arguments" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="results" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="inputUri">URI входного документа.</param>
        <param name="arguments">Объект <see cref="T:System.Xml.Xsl.XsltArgumentList" />, содержащий имена аргументов с указанием пространства имен, используемый в качестве входных данных для преобразования. Это значение может быть равно <see langword="null" />.</param>
        <param name="results">Модуль записи <see cref="T:System.Xml.XmlWriter" />, в который нужно направить выход.  
  
Если таблица стилей содержит элемент <c>xsl:output</c>, необходимо создать <see cref="T:System.Xml.XmlWriter" /> с использованием объекта <see cref="T:System.Xml.XmlWriterSettings" />, возвращенного из свойства <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" />. Это гарантирует правильность параметров выходных данных для объекта <see cref="T:System.Xml.XmlWriter" />.</param>
        <summary>Выполняет преобразование с помощью входного документа, указанного в URI, и выводит результат в <see cref="T:System.Xml.XmlWriter" />. <see cref="T:System.Xml.Xsl.XsltArgumentList" /> предоставляет дополнительные аргументы для работы в режиме реального времени.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод использует <xref:System.Xml.XmlUrlResolver> по умолчанию без учетных данных пользователя для разрешения входного документа и всех экземпляров функции `document()` XSLT, найденной в таблице стилей. Если какие-либо из этих ресурсов находятся в сетевом ресурсе, требующем проверки подлинности, используйте перегрузку, которая принимает <xref:System.Xml.XmlResolver> как один из своих аргументов, и укажите <xref:System.Xml.XmlResolver> с необходимыми учетными данными.  
  
 Для загрузки входного документа используется <xref:System.Xml.XmlReader> с параметрами по умолчанию. Обработка DTD отключена на <xref:System.Xml.XmlReader>. Если требуется обработка DTD, создайте <xref:System.Xml.XmlReader> с включенной функцией и передайте ее методу <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A>.  
  
   
  
## Examples  
 В следующем примере используется объект <xref:System.Xml.Xsl.XsltArgumentList> для создания параметра, представляющего текущую дату и время.  
  
 [!code-csharp[XsltArgumentList.AddParam#1](~/samples/snippets/csharp/VS_Snippets_Data/XsltArgumentList.AddParam/CS/addparam.cs#1)]
 [!code-vb[XsltArgumentList.AddParam#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XsltArgumentList.AddParam/VB/addparam.vb#1)]  
  
 В этом примере в качестве входных данных используются следующие два файла.  
  
 order.xml  
  
 [!code-xml[XsltArgumentList.AddParam#2](~/samples/snippets/xml/VS_Snippets_Data/XsltArgumentList.AddParam/XML/order.xml#2)]  
  
 Order. xsl  
  
 [!code-xml[XsltArgumentList.AddParam#3](~/samples/snippets/xml/VS_Snippets_Data/XsltArgumentList.AddParam/XML/order.xsl#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметру <paramref name="inputUri" /> или <paramref name="results" /> задано значение <see langword="null" />.</exception>
        <exception cref="T:System.Xml.Xsl.XsltException">При выполнении преобразования XSLT произошла ошибка.</exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">Значение <paramref name="inputtUri" /> включает имя файла или каталог, который не удается найти.</exception>
        <exception cref="T:System.Net.WebException">Значение <paramref name="inputUri" /> не удается разрешить.  
  
-или- 
При обработке этого запроса возникла ошибка.</exception>
        <exception cref="T:System.UriFormatException"><paramref name="inputUri" /> не является допустимым URI.</exception>
        <exception cref="T:System.Xml.XmlException">Произошла ошибка анализа при загрузке входного документа.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/f9b074f6-d6f4-49dd-a093-df510bf0cf7b">Использование класса XslCompiledTransform</related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XmlReader input, System.Xml.Xsl.XsltArgumentList arguments, System.IO.Stream results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XmlReader input, class System.Xml.Xsl.XsltArgumentList arguments, class System.IO.Stream results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XmlReader,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XmlReader, arguments As XsltArgumentList, results As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XmlReader ^ input, System::Xml::Xsl::XsltArgumentList ^ arguments, System::IO::Stream ^ results);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XmlReader * System.Xml.Xsl.XsltArgumentList * System.IO.Stream -&gt; unit" Usage="xslCompiledTransform.Transform (input, arguments, results)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XmlReader" />
        <Parameter Name="arguments" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="results" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="input">Объект <see cref="T:System.Xml.XmlReader" />, содержащий входной документ.</param>
        <param name="arguments">Объект <see cref="T:System.Xml.Xsl.XsltArgumentList" />, содержащий имена аргументов с указанием пространства имен, используемый в качестве входных данных для преобразования. Это значение может быть равно <see langword="null" />.</param>
        <param name="results">Поток, в который требуется направить вывод.</param>
        <summary>Выполняет преобразование с помощью входного документа, указанного в объекте <see cref="T:System.Xml.XmlReader" />, и выводит результат в поток. <see cref="T:System.Xml.Xsl.XsltArgumentList" /> предоставляет дополнительные аргументы для работы в режиме реального времени.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если таблица стилей включает XSLT-функцию `document()`, она разрешается с помощью <xref:System.Xml.XmlUrlResolver> без учетных данных пользователя. Если внешний ресурс находится в сетевом ресурсе, требующем проверки подлинности, используйте перегрузку, которая принимает <xref:System.Xml.XmlResolver> как один из своих аргументов, и укажите <xref:System.Xml.XmlResolver> с необходимыми учетными данными.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметру <paramref name="input" /> или <paramref name="results" /> задано значение <see langword="null" />.</exception>
        <exception cref="T:System.Xml.Xsl.XsltException">При выполнении преобразования XSLT произошла ошибка.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/f9b074f6-d6f4-49dd-a093-df510bf0cf7b">Использование класса XslCompiledTransform</related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XmlReader input, System.Xml.Xsl.XsltArgumentList arguments, System.IO.TextWriter results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XmlReader input, class System.Xml.Xsl.XsltArgumentList arguments, class System.IO.TextWriter results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XmlReader,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XmlReader, arguments As XsltArgumentList, results As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XmlReader ^ input, System::Xml::Xsl::XsltArgumentList ^ arguments, System::IO::TextWriter ^ results);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XmlReader * System.Xml.Xsl.XsltArgumentList * System.IO.TextWriter -&gt; unit" Usage="xslCompiledTransform.Transform (input, arguments, results)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XmlReader" />
        <Parameter Name="arguments" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="results" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="input">Объект <see cref="T:System.Xml.XmlReader" />, содержащий входной документ.</param>
        <param name="arguments">Объект <see cref="T:System.Xml.Xsl.XsltArgumentList" />, содержащий имена аргументов с указанием пространства имен, используемый в качестве входных данных для преобразования. Это значение может быть равно <see langword="null" />.</param>
        <param name="results">Модуль записи <see cref="T:System.IO.TextWriter" />, в который нужно направить выход.</param>
        <summary>Выполняет преобразование с помощью входного документа, указанного в объекте <see cref="T:System.Xml.XmlReader" />, и выводит результат в средство записи <see cref="T:System.IO.TextWriter" />. <see cref="T:System.Xml.Xsl.XsltArgumentList" /> предоставляет дополнительные аргументы для работы в режиме реального времени.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если таблица стилей включает XSLT-функцию `document()`, она разрешается с помощью <xref:System.Xml.XmlUrlResolver> без учетных данных пользователя. Если внешний ресурс находится в сетевом ресурсе, требующем проверки подлинности, используйте перегрузку, которая принимает <xref:System.Xml.XmlResolver> как один из своих аргументов, и укажите <xref:System.Xml.XmlResolver> с необходимыми учетными данными.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметру <paramref name="input" /> или <paramref name="results" /> задано значение <see langword="null" />.</exception>
        <exception cref="T:System.Xml.Xsl.XsltException">При выполнении преобразования XSLT произошла ошибка.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/f9b074f6-d6f4-49dd-a093-df510bf0cf7b">Использование класса XslCompiledTransform</related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XmlReader input, System.Xml.Xsl.XsltArgumentList arguments, System.Xml.XmlWriter results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XmlReader input, class System.Xml.Xsl.XsltArgumentList arguments, class System.Xml.XmlWriter results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XmlReader,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XmlReader, arguments As XsltArgumentList, results As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XmlReader ^ input, System::Xml::Xsl::XsltArgumentList ^ arguments, System::Xml::XmlWriter ^ results);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XmlReader * System.Xml.Xsl.XsltArgumentList * System.Xml.XmlWriter -&gt; unit" Usage="xslCompiledTransform.Transform (input, arguments, results)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XmlReader" />
        <Parameter Name="arguments" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="results" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="input">Объект <see cref="T:System.Xml.XmlReader" />, содержащий входной документ.</param>
        <param name="arguments">Объект <see cref="T:System.Xml.Xsl.XsltArgumentList" />, содержащий имена аргументов с указанием пространства имен, используемый в качестве входных данных для преобразования. Это значение может быть равно <see langword="null" />.</param>
        <param name="results">Модуль записи <see cref="T:System.Xml.XmlWriter" />, в который нужно направить выход.  
  
Если таблица стилей содержит элемент <c>xsl:output</c>, необходимо создать <see cref="T:System.Xml.XmlWriter" /> с использованием объекта <see cref="T:System.Xml.XmlWriterSettings" />, возвращенного из свойства <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" />. Это гарантирует правильность параметров выходных данных для объекта <see cref="T:System.Xml.XmlWriter" />.</param>
        <summary>Выполняет преобразование с помощью входного документа, указанного в объекте <see cref="T:System.Xml.XmlReader" />, и выводит результат в средство записи <see cref="T:System.Xml.XmlWriter" />. <see cref="T:System.Xml.Xsl.XsltArgumentList" /> предоставляет дополнительные аргументы для работы в режиме реального времени.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если таблица стилей включает XSLT-функцию `document()`, она разрешается с помощью <xref:System.Xml.XmlUrlResolver> без учетных данных пользователя. Если внешний ресурс находится в сетевом ресурсе, требующем проверки подлинности, используйте перегрузку, которая принимает <xref:System.Xml.XmlResolver> как один из своих аргументов, и укажите <xref:System.Xml.XmlResolver> с необходимыми учетными данными.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметру <paramref name="input" /> или <paramref name="results" /> задано значение <see langword="null" />.</exception>
        <exception cref="T:System.Xml.Xsl.XsltException">При выполнении преобразования XSLT произошла ошибка.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/f9b074f6-d6f4-49dd-a093-df510bf0cf7b">Использование класса XslCompiledTransform</related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList arguments, System.IO.Stream results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList arguments, class System.IO.Stream results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, arguments As XsltArgumentList, results As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ arguments, System::IO::Stream ^ results);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltArgumentList * System.IO.Stream -&gt; unit" Usage="xslCompiledTransform.Transform (input, arguments, results)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="arguments" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="results" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="input">Объект, реализующий интерфейс <see cref="T:System.Xml.XPath.IXPathNavigable" />. В Microsoft .NET Framework это может быть либо <see cref="T:System.Xml.XmlNode" /> (обычно <see cref="T:System.Xml.XmlDocument" />), либо <see cref="T:System.Xml.XPath.XPathDocument" />, содержащий преобразуемые данные.</param>
        <param name="arguments">Объект <see cref="T:System.Xml.Xsl.XsltArgumentList" />, содержащий имена аргументов с указанием пространства имен, используемый в качестве входных данных для преобразования. Это значение может быть равно <see langword="null" />.</param>
        <param name="results">Поток, в который требуется направить вывод.</param>
        <summary>Выполняет преобразование с помощью входного документа, указанного в объекте <see cref="T:System.Xml.XPath.IXPathNavigable" />, и выводит результат в поток. <see cref="T:System.Xml.Xsl.XsltArgumentList" /> предоставляет дополнительные аргументы для работы в режиме реального времени.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если функция XSLT `document()` включена, она разрешается с помощью <xref:System.Xml.XmlUrlResolver> без учетных данных пользователя. Если внешний ресурс находится в сетевом ресурсе, требующем проверки подлинности, используйте перегрузку, которая принимает <xref:System.Xml.XmlResolver> как один из своих аргументов, и укажите <xref:System.Xml.XmlResolver> с необходимыми учетными данными.  
  
 Этот метод не поддерживает элемент `xsl:strip-space`. Если скомпилированная таблица стилей включала элемент `xsl:strip-space`, необходимо использовать перегрузку <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A>, которая принимает <xref:System.Xml.XmlReader> в качестве входного аргумента.  
  
 Интерфейс <xref:System.Xml.XPath.IXPathNavigable> реализован в классах <xref:System.Xml.XmlNode> и <xref:System.Xml.XPath.XPathDocument>. Эти классы представляют хранящийся в памяти кэш XML-данных.  
  
-   Класс <xref:System.Xml.XmlNode> основан на модели W3C DOM и позволяет вносить изменения.  
  
-   Класс <xref:System.Xml.XPath.XPathDocument> представляет собой доступное только для чтения хранилище данных на основе модели данных XPath. Класс <xref:System.Xml.XPath.XPathDocument> рекомендуется для обработки XSLT. Он обеспечивает более высокую производительность по сравнению с классом <xref:System.Xml.XmlNode>.  
  
 Преобразования применяются к документу в целом. Иными словами, если передать узел, отличный от корневого узла документа, это не помешает процессу преобразования обратиться ко всем узлам загружаемого документа. Чтобы преобразовать фрагмент узла, необходимо создать объект, содержащий только фрагмент этого узла, и передать его методу <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A>. См. дополнительные сведения о [преобразовании фрагментов узлов](~/docs/standard/data/xml/how-to-transform-a-node-fragment.md).  
  
   
  
## Examples  
 В следующем примере выполняется преобразование XSLT и выходные данные в <xref:System.IO.FileStream>.  
  
 [!code-csharp[XslCompiledTransform.Transform#6](~/samples/snippets/csharp/VS_Snippets_Data/XslCompiledTransform.Transform/CS/Xslt_Transform_v2.cs#6)]
 [!code-vb[XslCompiledTransform.Transform#6](~/samples/snippets/visualbasic/VS_Snippets_Data/XslCompiledTransform.Transform/VB/Xslt_Transform_v2.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметру <paramref name="input" /> или <paramref name="results" /> задано значение <see langword="null" />.</exception>
        <exception cref="T:System.Xml.Xsl.XsltException">При выполнении преобразования XSLT произошла ошибка.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/f9b074f6-d6f4-49dd-a093-df510bf0cf7b">Использование класса XslCompiledTransform</related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList arguments, System.IO.TextWriter results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList arguments, class System.IO.TextWriter results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, arguments As XsltArgumentList, results As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ arguments, System::IO::TextWriter ^ results);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltArgumentList * System.IO.TextWriter -&gt; unit" Usage="xslCompiledTransform.Transform (input, arguments, results)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="arguments" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="results" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="input">Объект, реализующий интерфейс <see cref="T:System.Xml.XPath.IXPathNavigable" />. В Microsoft .NET Framework это может быть либо <see cref="T:System.Xml.XmlNode" /> (обычно <see cref="T:System.Xml.XmlDocument" />), либо <see cref="T:System.Xml.XPath.XPathDocument" />, содержащий преобразуемые данные.</param>
        <param name="arguments">Объект <see cref="T:System.Xml.Xsl.XsltArgumentList" />, содержащий имена аргументов с указанием пространства имен, используемый в качестве входных данных для преобразования. Это значение может быть равно <see langword="null" />.</param>
        <param name="results">Модуль записи <see cref="T:System.IO.TextWriter" />, в который нужно направить выход.</param>
        <summary>Выполняет преобразование с помощью входного документа, указанного в объекте <see cref="T:System.Xml.XPath.IXPathNavigable" />, и выводит результат в средство записи <see cref="T:System.IO.TextWriter" />. <see cref="T:System.Xml.Xsl.XsltArgumentList" /> предоставляет дополнительные аргументы для работы в режиме реального времени.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если функция XSLT `document()` включена, она разрешается с помощью <xref:System.Xml.XmlUrlResolver> без учетных данных пользователя. Если внешний ресурс находится в сетевом ресурсе, требующем проверки подлинности, используйте перегрузку, которая принимает <xref:System.Xml.XmlResolver> как один из своих аргументов, и укажите <xref:System.Xml.XmlResolver> с необходимыми учетными данными.  
  
 Этот метод не поддерживает элемент `xsl:strip-space`. Если скомпилированная таблица стилей включала элемент `xsl:strip-space`, необходимо использовать перегрузку <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A>, которая принимает <xref:System.Xml.XmlReader> в качестве входного аргумента.  
  
 Интерфейс <xref:System.Xml.XPath.IXPathNavigable> реализован в классах <xref:System.Xml.XmlNode> и <xref:System.Xml.XPath.XPathDocument>. Эти классы представляют хранящийся в памяти кэш XML-данных.  
  
-   Класс <xref:System.Xml.XmlNode> основан на модели W3C DOM и позволяет вносить изменения.  
  
-   Класс <xref:System.Xml.XPath.XPathDocument> представляет собой доступное только для чтения хранилище данных на основе модели данных XPath. Класс <xref:System.Xml.XPath.XPathDocument> рекомендуется для обработки XSLT. Он обеспечивает более высокую производительность по сравнению с классом <xref:System.Xml.XmlNode>.  
  
 Преобразования применяются к документу в целом. Иными словами, если передать узел, отличный от корневого узла документа, это не помешает процессу преобразования обратиться ко всем узлам загружаемого документа. Чтобы преобразовать фрагмент узла, необходимо создать объект, содержащий только фрагмент этого узла, и передать его методу <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A>. См. дополнительные сведения о [преобразовании фрагментов узлов](~/docs/standard/data/xml/how-to-transform-a-node-fragment.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметру <paramref name="input" /> или <paramref name="results" /> задано значение <see langword="null" />.</exception>
        <exception cref="T:System.Xml.Xsl.XsltException">При выполнении преобразования XSLT произошла ошибка.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/f9b074f6-d6f4-49dd-a093-df510bf0cf7b">Использование класса XslCompiledTransform</related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList arguments, System.Xml.XmlWriter results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList arguments, class System.Xml.XmlWriter results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, arguments As XsltArgumentList, results As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ arguments, System::Xml::XmlWriter ^ results);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltArgumentList * System.Xml.XmlWriter -&gt; unit" Usage="xslCompiledTransform.Transform (input, arguments, results)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="arguments" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="results" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="input">Объект, реализующий интерфейс <see cref="T:System.Xml.XPath.IXPathNavigable" />. В Microsoft .NET Framework это может быть либо <see cref="T:System.Xml.XmlNode" /> (обычно <see cref="T:System.Xml.XmlDocument" />), либо <see cref="T:System.Xml.XPath.XPathDocument" />, содержащий преобразуемые данные.</param>
        <param name="arguments">Объект <see cref="T:System.Xml.Xsl.XsltArgumentList" />, содержащий имена аргументов с указанием пространства имен, используемый в качестве входных данных для преобразования. Это значение может быть равно <see langword="null" />.</param>
        <param name="results">Модуль записи <see cref="T:System.Xml.XmlWriter" />, в который нужно направить выход.  
  
Если таблица стилей содержит элемент <c>xsl:output</c>, необходимо создать <see cref="T:System.Xml.XmlWriter" /> с использованием объекта <see cref="T:System.Xml.XmlWriterSettings" />, возвращенного из свойства <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" />. Это гарантирует правильность параметров выходных данных для объекта <see cref="T:System.Xml.XmlWriter" />.</param>
        <summary>Выполняет преобразование с помощью входного документа, указанного в объекте <see cref="T:System.Xml.XPath.IXPathNavigable" />, и выводит результат в средство записи <see cref="T:System.Xml.XmlWriter" />. <see cref="T:System.Xml.Xsl.XsltArgumentList" /> предоставляет дополнительные аргументы для работы в режиме реального времени.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если функция XSLT `document()` включена, она разрешается с помощью <xref:System.Xml.XmlUrlResolver> без учетных данных пользователя. Если внешний ресурс находится в сетевом ресурсе, требующем проверки подлинности, используйте перегрузку, которая принимает <xref:System.Xml.XmlResolver> как один из своих аргументов, и укажите <xref:System.Xml.XmlResolver> с необходимыми учетными данными.  
  
 Этот метод не поддерживает элемент `xsl:strip-space`. Если скомпилированная таблица стилей включала элемент `xsl:strip-space`, необходимо использовать перегрузку <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A>, которая принимает <xref:System.Xml.XmlReader> в качестве входного аргумента.  
  
 Интерфейс <xref:System.Xml.XPath.IXPathNavigable> реализован в классах <xref:System.Xml.XmlNode> и <xref:System.Xml.XPath.XPathDocument>. Эти классы представляют хранящийся в памяти кэш XML-данных.  
  
-   Класс <xref:System.Xml.XmlNode> основан на модели W3C DOM и позволяет вносить изменения.  
  
-   Класс <xref:System.Xml.XPath.XPathDocument> представляет собой доступное только для чтения хранилище данных на основе модели данных XPath. Класс <xref:System.Xml.XPath.XPathDocument> рекомендуется для обработки XSLT. Он обеспечивает более высокую производительность по сравнению с классом <xref:System.Xml.XmlNode>.  
  
 Преобразования применяются к документу в целом. Иными словами, если передать узел, отличный от корневого узла документа, это не помешает процессу преобразования обратиться ко всем узлам загружаемого документа. Чтобы преобразовать фрагмент узла, необходимо создать объект, содержащий только фрагмент этого узла, и передать его методу <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A>. См. дополнительные сведения о [преобразовании фрагментов узлов](~/docs/standard/data/xml/how-to-transform-a-node-fragment.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметру <paramref name="input" /> или <paramref name="results" /> задано значение <see langword="null" />.</exception>
        <exception cref="T:System.Xml.Xsl.XsltException">При выполнении преобразования XSLT произошла ошибка.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/f9b074f6-d6f4-49dd-a093-df510bf0cf7b">Использование класса XslCompiledTransform</related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XmlReader input, System.Xml.Xsl.XsltArgumentList arguments, System.Xml.XmlWriter results, System.Xml.XmlResolver documentResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XmlReader input, class System.Xml.Xsl.XsltArgumentList arguments, class System.Xml.XmlWriter results, class System.Xml.XmlResolver documentResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XmlReader,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XmlReader, arguments As XsltArgumentList, results As XmlWriter, documentResolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XmlReader ^ input, System::Xml::Xsl::XsltArgumentList ^ arguments, System::Xml::XmlWriter ^ results, System::Xml::XmlResolver ^ documentResolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XmlReader * System.Xml.Xsl.XsltArgumentList * System.Xml.XmlWriter * System.Xml.XmlResolver -&gt; unit" Usage="xslCompiledTransform.Transform (input, arguments, results, documentResolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XmlReader" />
        <Parameter Name="arguments" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="results" Type="System.Xml.XmlWriter" />
        <Parameter Name="documentResolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input">Объект <see cref="T:System.Xml.XmlReader" />, содержащий входной документ.</param>
        <param name="arguments">Объект <see cref="T:System.Xml.Xsl.XsltArgumentList" />, содержащий имена аргументов с указанием пространства имен, используемый в качестве входных данных для преобразования. Это значение может быть равно <see langword="null" />.</param>
        <param name="results">Модуль записи <see cref="T:System.Xml.XmlWriter" />, в который нужно направить выход.  
  
Если таблица стилей содержит элемент <c>xsl:output</c>, необходимо создать <see cref="T:System.Xml.XmlWriter" /> с использованием объекта <see cref="T:System.Xml.XmlWriterSettings" />, возвращенного из свойства <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" />. Это гарантирует правильность параметров выходных данных для объекта <see cref="T:System.Xml.XmlWriter" />.</param>
        <param name="documentResolver">Объект <see cref="T:System.Xml.XmlResolver" />, используемый для разрешения функции XSLT <c>document()</c>. Если значение равно <see langword="null" />, функция <c>document()</c> не разрешается.</param>
        <summary>Выполняет преобразование с помощью входного документа, указанного в объекте <see cref="T:System.Xml.XmlReader" />, и выводит результат в средство записи <see cref="T:System.Xml.XmlWriter" />. <see cref="T:System.Xml.Xsl.XsltArgumentList" /> предоставляет дополнительные аргументы времени выполнения, а XmlResolver разрешает функцию XSLT <c>document()</c>.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере используется <xref:System.Xml.XmlSecureResolver> для разрешения функции XSLT `document()`.  
  
 [!code-csharp[XslCompiledTransform.Transform#4](~/samples/snippets/csharp/VS_Snippets_Data/XslCompiledTransform.Transform/CS/Xslt_Transform_v2.cs#4)]
 [!code-vb[XslCompiledTransform.Transform#4](~/samples/snippets/visualbasic/VS_Snippets_Data/XslCompiledTransform.Transform/VB/Xslt_Transform_v2.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметру <paramref name="input" /> или <paramref name="results" /> задано значение <see langword="null" />.</exception>
        <exception cref="T:System.Xml.Xsl.XsltException">При выполнении преобразования XSLT произошла ошибка.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/f9b074f6-d6f4-49dd-a093-df510bf0cf7b">Использование класса XslCompiledTransform</related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList arguments, System.Xml.XmlWriter results, System.Xml.XmlResolver documentResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList arguments, class System.Xml.XmlWriter results, class System.Xml.XmlResolver documentResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, arguments As XsltArgumentList, results As XmlWriter, documentResolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ arguments, System::Xml::XmlWriter ^ results, System::Xml::XmlResolver ^ documentResolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltArgumentList * System.Xml.XmlWriter * System.Xml.XmlResolver -&gt; unit" Usage="xslCompiledTransform.Transform (input, arguments, results, documentResolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="arguments" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="results" Type="System.Xml.XmlWriter" />
        <Parameter Name="documentResolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input">Документ для преобразования, заданный в объекте <see cref="T:System.Xml.XPath.IXPathNavigable" />.</param>
        <param name="arguments">Список аргументов в виде <see cref="T:System.Xml.Xsl.XsltArgumentList" />.</param>
        <param name="results">Модуль записи <see cref="T:System.Xml.XmlWriter" />, в который нужно направить выход.  
  
Если таблица стилей содержит элемент <see langword="xsl:output" />, необходимо создать <see cref="T:System.Xml.XmlWriter" /> с использованием объекта <see cref="T:System.Xml.XmlWriterSettings" />, возвращенного из свойства <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" />. Это гарантирует правильность параметров выходных данных для объекта <see cref="T:System.Xml.XmlWriter" />.</param>
        <param name="documentResolver">Объект <see cref="T:System.Xml.XmlResolver" />, используемый для разрешения функции XSLT <see langword="document()" />. Если значение равно <see langword="null" />, функция <see langword="document()" /> не разрешается.</param>
        <summary>Выполняет преобразование с помощью входного документа, указанного в объекте <see cref="T:System.Xml.XPath.IXPathNavigable" />, и выводит результат в <see cref="T:System.Xml.XmlWriter" />. <see cref="T:System.Xml.Xsl.XsltArgumentList" /> содержит дополнительные аргументы для работы во время выполнения, а <see cref="T:System.Xml.XmlResolver" /> разрешает функцию XSLT <see langword="document()" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
