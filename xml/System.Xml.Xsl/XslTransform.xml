<Type Name="XslTransform" FullName="System.Xml.Xsl.XslTransform">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0fb2e66ef625e203237f890d5759c43585abebf8" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75174355" /></Metadata><TypeSignature Language="C#" Value="public sealed class XslTransform" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit XslTransform extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Xsl.XslTransform" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class XslTransform" />
  <TypeSignature Language="C++ CLI" Value="public ref class XslTransform sealed" />
  <TypeSignature Language="F#" Value="type XslTransform = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-2.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Obsolete("This class has been deprecated. Please use System.Xml.Xsl.XslCompiledTransform instead. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Преобразует данные XML с помощью таблицы стилей XSLT.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Класс <xref:System.Xml.Xsl.XslTransform> устарел в Microsoft .NET Framework версии 2,0. Класс <xref:System.Xml.Xsl.XslCompiledTransform> — это новый процессор XSLT. Дополнительные сведения см. в разделе [использование класса XslCompiledTransform](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) и [Миграция из класса XslTransform](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).  
  
 <xref:System.Xml.Xsl.XslTransform> поддерживает синтаксис XSLT 1,0. Таблица стилей XSLT должна использовать `http://www.w3.org/1999/XSL/Transform`пространства имен.  
  
 Дополнительные аргументы также можно добавить в таблицу стилей с помощью класса <xref:System.Xml.Xsl.XsltArgumentList>. Этот класс содержит входные параметры для таблицы стилей и объектов расширения, которые могут быть вызваны из таблицы стилей.  
  
 Для преобразования XML-данных:  
  
1.  Создайте объект <xref:System.Xml.Xsl.XslTransform>.  
  
2.  Используйте метод <xref:System.Xml.Xsl.XslTransform.Load%2A>, чтобы загрузить таблицу стилей для преобразования. Этот метод имеет несколько перегрузок и может загрузить таблицу стилей с помощью <xref:System.Xml.XmlReader>, <xref:System.Xml.XPath.XPathNavigator>, <xref:System.Xml.XPath.IXPathNavigable>или URL-адреса с расположением файла.  
  
3.  Используйте метод <xref:System.Xml.Xsl.XslTransform.Transform%2A> для преобразования XML-данных. Этот метод имеет несколько перегрузок и может работать с различными типами входных и выходных данных. Можно также указать <xref:System.Xml.Xsl.XsltArgumentList>, содержащий дополнительные аргументы для использования в качестве входных данных во время преобразования.  
  
 **Вопросы безопасности**  
  
 При создании приложения, использующего класс <xref:System.Xml.Xsl.XslTransform>, помните о следующих особенностях и их последствиях:  
  
-   Объекты расширения по умолчанию включены. Если содержащие расширения объекты <xref:System.Xml.Xsl.XsltArgumentList> используются при передаче их в метод <xref:System.Xml.Xsl.XslTransform.Transform%2A>.  
  
-   Таблицы стилей XSLT могут содержать ссылки на другие файлы и внедренные блоки скриптов. Злоумышленник может воспользоваться этим, предоставив данные или таблицы стилей, которые при выполнении приведут к тому, что система будет обрабатываться до тех пор, пока на компьютере не будет хватает ресурсов.  
  
-   Приложения XSLT, которые выполняются в среде со смешанным уровнем доверия, могут привести к подделке таблицы стилей. Например, злонамеренный пользователь может загрузить объект с вредоносной таблицей стилей и передать ее другому пользователю, который впоследствии вызовет метод <xref:System.Xml.Xsl.XslTransform.Transform%2A> и выполнит преобразование.  
  
 Эти проблемы безопасности можно устранить, не принимая <xref:System.Xml.Xsl.XslTransform> объекты, таблицы стилей XSLT или XML-данные источника из ненадежных источников.  
  
 **Поддержка сценариев**  
  
 Этот класс поддерживает внедренные скрипты с помощью элемента `msxsl:script`.  
  
 В версии 1,1 .NET Framework свидетельство таблицы стилей определяет, какие разрешения предоставляются внедренным сценариям.  
  
-   Если таблица стилей была загружена из универсального кода ресурса (URI), для создания свидетельства используется URI. Это свидетельство включает универсальный код ресурса (URI), а также его сайт и зону.  
  
-   Если таблица стилей была загружена с помощью другого источника, можно предоставить свидетельство путем передачи объекта <xref:System.Security.Policy.Evidence?displayProperty=nameWithType> методу <xref:System.Xml.Xsl.XslTransform.Load%2A>. В противном случае сборка скрипта имеет полное доверие.  
  
 Частично доверенные вызывающие объекты: для компиляции внедренного скрипта требуется разрешение `UnmanagedCode`. `ControlEvidence` разрешение требуется для предоставления <xref:System.Security.Policy.Evidence> методу <xref:System.Xml.Xsl.XslTransform.Load%2A>. Если вызывающий объект не имеет необходимых разрешений, создается <xref:System.Security.SecurityException>. Дополнительные сведения см. в разделах <xref:System.Security.Permissions.SecurityPermission?displayProperty=nameWithType> и <xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=nameWithType>.  
  
 Элемент `msxsl:script` имеет следующие требования.  
  
-   Элемент `msxsl:script` принадлежит пространству имен `urn:schemas-microsoft-com:xslt`. Таблица стилей должна включать объявление пространства имен `xmlns:msxsl=urn:schemas-microsoft-com:xslt`.  
  
-   Элемент `msxsl:script` может включать атрибут `language`, указывающий используемый язык сценариев. Значение атрибута `language` должно быть одним из следующих: C#, CSHARP, VB, VisualBasic, JScript или JavaScript. Так как имя языка не учитывает регистр, JavaScript и JavaScript являются допустимыми. Если атрибут `language` не указан, по умолчанию используется JScript.  
  
-   Элемент `msxsl:script` должен включать атрибут `implements-prefix`, содержащий префикс, представляющий пространство имен, связанное с блоком скрипта. Это пространство имен должно быть определено в таблице стилей. Таблица стилей может включать несколько блоков скрипта, сгруппированных по пространству имен. В одном пространстве имен нельзя использовать блоки сценариев с несколькими языками. Блоки сценариев могут вызывать функцию, определенную в другом блоке скрипта, при условии, что блоки скриптов находятся в одном пространстве имен. Содержимое блока сценария анализируется в соответствии с правилами и синтаксисом языка сценариев (предоставляемого атрибутом `language`). Например, если у вас есть блок C# сценария, комментарии будут добавляться с префиксом `//` символов. Комментарии должны быть допустимыми XML-содержимым.  
  
> [!NOTE]
> Рекомендуется заключить блоки скриптов в раздел CDATA.
  
 [!INCLUDE [xsltransform-script](~/includes/xsltransform-script.md)] 
   
 Функции можно объявлять внутри элемента `msxsl:script`. В следующей таблице показаны пространства имен, поддерживаемые по умолчанию.  
  
|Поддерживаемые пространства имен|Описание|  
|--------------------------|-----------------|  
|`System`|Системные классы.|  
|`System.Collection`|Классы коллекций.|  
|`System.Text`|Классы обработки текста.|  
|`System.Xml`|Основные классы XML.|  
|`System.Xml.Xsl`|Классы XSLT.|  
|`System.Xml.XPath`|Классы языка XPath.|  
  
 Передаваемые аргументы и возвращаемые значения, определенные функциями скрипта, должны быть одного из перечисленных ниже типов консорциум W3C (W3C). В следующей таблице описаны сопоставления между типами W3C, XPath или XSLT, а также соответствующими классами .NET Framework.  
  
|Тип W3C|Эквивалентный класс .NET|  
|--------------|---------------------------|  
|String (XPath)|`System.String`|  
|Логическое значение (XPath)|`System.Boolean`|  
|Number (XPath)|`System.Double`|  
|Фрагмент дерева результатов (XSLT)|`System.Xml.XPath.XPathNavigator`|  
|Набор узлов (XPath)|`System.Xml.XPath.XPathNodeIterator`|  
  
 Если функция скрипта использует один из следующих числовых типов: Int16, UInt16, Int32, UInt32, Int64, UInt64, Single или Decimal, эти типы приводятся к типу Double, который соответствует номеру типа XPath W3C.  
  
 Исключение возникает при вызове функции, которая не может преобразовать результат аргумента в один из требуемых типов.  
  
> [!NOTE]
>  `msxsl:script` и `msxsl:node-list` являются единственными функциями из пространства имен `urn:schemas-microsoft-com:xslt`, которые поддерживаются классом <xref:System.Xml.Xsl.XslTransform>.  
  
 <xref:System.Xml.Xsl.XslTransform> имеет возможность использовать код среды CLR в качестве механизма расширения. Это достигается путем передачи экземпляра класса в <xref:System.Xml.Xsl.XslTransform> класс и вызова его открытых методов в таблице стилей XSLT. Методы, определенные с помощью ключевого слова `params`, которое позволяет передавать неопределенное количество параметров, не работают должным образом в этом сценарии. Дополнительные сведения см. в разделе [params](~/docs/csharp/language-reference/keywords/params.md) .  
  
 Дополнительные сведения см. [в разделе преобразования XSLT с помощью класса XslTransform](~/docs/standard/data/xml/xslt-transformations-with-the-xsltransform-class.md).  
  
   
  
## Examples  
 Следующий пример преобразует указанный XML-документ и выводит результат в консоль.  
  
 [!code-csharp[Classic WebData XslTransform Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XslTransform Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XslTransform Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XslTransform Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe><see cref="T:System.Xml.Xsl.XslTransform" /> объекты являются потокобезопасными только для операций преобразования. Потокобезопасность других операций не гарантируется. Необходимо убедиться, что для объекта не вызываются никакие другие методы во время операций загрузки.</threadsafe>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XslTransform ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XslTransform();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализация нового экземпляра класса <see cref="T:System.Xml.Xsl.XslTransform" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Load">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Загружает таблицу стилей XSLT, включая любые таблицы стилей, на которые имеются ссылки в элементах <see langword="xsl:include" /> и <see langword="xsl:import" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Класс <xref:System.Xml.Xsl.XslTransform> устарел в .NET Framework версии 2,0. Класс <xref:System.Xml.Xsl.XslCompiledTransform> — это новый процессор XSLT. Дополнительные сведения см. в разделе [использование класса XslCompiledTransform](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) и [Миграция из класса XslTransform](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (string url);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(string url) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (url As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::String ^ url);" />
      <MemberSignature Language="F#" Value="member this.Load : string -&gt; unit" Usage="xslTransform.Load url" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="url">Адрес URL, задающий таблицу стилей XSLT для загрузки.</param>
        <summary>Загружает таблицу стилей XSLT с указанного URL.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Класс <xref:System.Xml.Xsl.XslTransform> устарел в .NET Framework версии 2,0. Класс <xref:System.Xml.Xsl.XslCompiledTransform> — это новый процессор XSLT. Дополнительные сведения см. в разделе [использование класса XslCompiledTransform](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) и [Миграция из класса XslTransform](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).  
  
 <xref:System.Xml.Xsl.XslTransform> поддерживает синтаксис XSLT 1,0. Таблица стилей XSLT должна включать объявление пространства имен `xmlns:xsl="http://www.w3.org/1999/XSL/Transform"`.  
  
 Этот метод загружает таблицу стилей XSLT, включая любые таблицы стилей, на которые имеются ссылки в `xsl:include` и `xsl:import` элементов. Внешние ресурсы разрешаются с помощью <xref:System.Xml.XmlUrlResolver> без учетных данных пользователя. Если таблицы стилей расположены на сетевом ресурсе, требующем проверки подлинности, используйте перегрузку, которая принимает <xref:System.Xml.XmlResolver> как один из своих аргументов, и укажите <xref:System.Xml.XmlResolver> с необходимыми учетными данными.  
  
 Если таблица стилей содержит внедренные скрипты, скрипт компилируется в сборку. Универсальный код ресурса (URI) таблицы стилей используется для создания свидетельства, применяемого к сборке.
  
> [!NOTE]
>  Если вызывающий объект не имеет разрешения `UnmanagedCode`, встроенный скрипт не компилируется и создается <xref:System.Security.SecurityException>. Дополнительные сведения см. в разделах <xref:System.Security.Permissions.SecurityPermission> и <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>.  
  
   
  
## Examples  
 В следующем примере XML-документ преобразуется в HTML-документ. В нем отображаются номера ISBN, Title и Price для каждой книги в таблице.  
  
 [!code-cpp[Classic WebData XslTransform.Transform7 Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XslTransform.Transform7 Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XslTransform.Transform7 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/VB/source.vb#1)]  
  
 Образец использует следующие два входных файла.  
  
 `books.xml`  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/books.xml#2)]  
  
 `output.xsl`  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#3](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/output.xsl#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException">Загружаемый ресурс не является допустимой таблицей стилей.</exception>
        <exception cref="T:System.Security.SecurityException">Таблица стилей содержит внедренные скрипты, а вызывающий оператор не имеет разрешения <see langword="UnmanagedCode" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XmlReader stylesheet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XmlReader stylesheet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As XmlReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XmlReader ^ stylesheet);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XmlReader -&gt; unit" Usage="xslTransform.Load stylesheet" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass evidence to Load() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="stylesheet">Объект <see cref="T:System.Xml.XmlReader" />, содержащий таблицу стилей XSLT.</param>
        <summary>Загружает таблицу стилей XSLT, содержащуюся в классе <see cref="T:System.Xml.XmlReader" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Класс <xref:System.Xml.Xsl.XslTransform> устарел в .NET Framework версии 2,0. Класс <xref:System.Xml.Xsl.XslCompiledTransform> — это новый процессор XSLT. Дополнительные сведения см. в разделе [использование класса XslCompiledTransform](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) и [Миграция из класса XslTransform](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).  
  
 <xref:System.Xml.Xsl.XslTransform> поддерживает синтаксис XSLT 1,0. Таблица стилей XSLT должна включать объявление пространства имен `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.  
  
 Этот метод загружает таблицу стилей XSLT, включая любые таблицы стилей, на которые имеются ссылки в `xsl:include` и `xsl:import` элементов. Внешние ресурсы разрешаются с помощью <xref:System.Xml.XmlUrlResolver> без учетных данных пользователя. Если таблицы стилей расположены на сетевом ресурсе, требующем проверки подлинности, используйте перегрузку, которая принимает <xref:System.Xml.XmlResolver> как один из своих аргументов, и укажите <xref:System.Xml.XmlResolver> с необходимыми учетными данными.  
  
 Таблица стилей загружается из текущего узла <xref:System.Xml.XmlReader> через все его дочерние элементы. Это позволяет использовать часть документа в качестве таблицы стилей. После возврата метода <xref:System.Xml.Xsl.XslTransform.Load%2A> <xref:System.Xml.XmlReader> размещается на следующем узле после конца таблицы стилей. По достижении конца документа объект <xref:System.Xml.XmlReader> позиционируется в конец файла (EOF).  
  
 Если таблица стилей содержит сущности, следует указать <xref:System.Xml.XmlReader>, которые могут разрешать сущности (<xref:System.Xml.XmlReader.CanResolveEntity%2A?displayProperty=nameWithType> возвращает `true`). В этом случае можно использовать <xref:System.Xml.XmlValidatingReader>.  
  
 Если таблица стилей содержит внедренные скрипты, скрипт компилируется в сборку. Сборка имеет полное доверие. Рекомендуется предоставить свидетельство с помощью метода <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XmlReader%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29>.
  
> [!NOTE]
>  Если вызывающий объект не имеет разрешения `UnmanagedCode`, встроенный скрипт не компилируется и создается <xref:System.Security.SecurityException>. Дополнительные сведения см. в разделах <xref:System.Security.Permissions.SecurityPermission> и <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>.  
  
   
  
## Examples  
 В следующем примере преобразуется XML-файл, который сортирует все книги по названию.  
  
 [!code-cpp[XslTransform.Load3#1](~/samples/snippets/cpp/VS_Snippets_Data/XslTransform.Load3/CPP/trans3.cpp#1)]
 [!code-csharp[XslTransform.Load3#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Load3/CS/trans3.cs#1)]
 [!code-vb[XslTransform.Load3#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Load3/VB/trans3.vb#1)]  
  
 В этом примере в качестве входных данных используются следующие файлы.  
  
 `books.xml`  
  
 [!code-xml[XslTransform.Load3#2](~/samples/snippets/xml/VS_Snippets_Data/XslTransform.Load3/XML/books.xml#2)]  
  
 `titles.xsl`  
  
 [!code-xml[XslTransform.Load3#3](~/samples/snippets/xml/VS_Snippets_Data/XslTransform.Load3/XML/titles.xsl#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException">Текущий узел не соответствует допустимой таблице стилей.</exception>
        <exception cref="T:System.Security.SecurityException">Таблица стилей содержит внедренные скрипты, а вызывающий оператор не имеет разрешения <see langword="UnmanagedCode" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XPath.IXPathNavigable stylesheet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XPath.IXPathNavigable stylesheet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.IXPathNavigable)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As IXPathNavigable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XPath::IXPathNavigable ^ stylesheet);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XPath.IXPathNavigable -&gt; unit" Usage="xslTransform.Load stylesheet" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass evidence to Load() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XPath.IXPathNavigable" />
      </Parameters>
      <Docs>
        <param name="stylesheet">Объект, реализующий интерфейс <see cref="T:System.Xml.XPath.IXPathNavigable" />. В .NET Framework это может быть либо объект <see cref="T:System.Xml.XmlNode" /> (обычно <see cref="T:System.Xml.XmlDocument" />), либо объект <see cref="T:System.Xml.XPath.XPathDocument" />, содержащий таблицу стилей XSLT.</param>
        <summary>Загружает таблицу стилей XSLT, содержащуюся в классе <see cref="T:System.Xml.XPath.IXPathNavigable" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Класс <xref:System.Xml.Xsl.XslTransform> устарел в .NET Framework версии 2,0. Класс <xref:System.Xml.Xsl.XslCompiledTransform> — это новый процессор XSLT. Дополнительные сведения см. в разделе [использование класса XslCompiledTransform](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) и [Миграция из класса XslTransform](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).  
  
 <xref:System.Xml.Xsl.XslTransform> поддерживает синтаксис XSLT 1,0. Таблица стилей XSLT должна включать объявление пространства имен `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.  
  
 Этот метод загружает таблицу стилей XSLT, включая любые таблицы стилей, на которые имеются ссылки в `xsl:include` и `xsl:import` элементов. Внешние ресурсы разрешаются с помощью <xref:System.Xml.XmlUrlResolver> без учетных данных пользователя. Если таблицы стилей расположены на сетевом ресурсе, требующем проверки подлинности, используйте перегрузку, которая принимает <xref:System.Xml.XmlResolver> как один из своих аргументов, и укажите <xref:System.Xml.XmlResolver> с необходимыми учетными данными.  
  
 Если таблица стилей содержит внедренные скрипты, скрипт компилируется в сборку. Сборка имеет полное доверие. Рекомендуется предоставить свидетельство с помощью метода <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.IXPathNavigable%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29>.
  
> [!NOTE]
>  Если вызывающий объект не имеет разрешения `UnmanagedCode`, встроенный скрипт не компилируется и создается <xref:System.Security.SecurityException>. Дополнительные сведения см. в разделах <xref:System.Security.Permissions.SecurityPermission> и <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException">Загружаемый ресурс не является допустимой таблицей стилей.</exception>
        <exception cref="T:System.Security.SecurityException">Таблица стилей содержит внедренные скрипты, а вызывающий оператор не имеет разрешения <see langword="UnmanagedCode" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XPath.XPathNavigator stylesheet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XPath.XPathNavigator stylesheet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.XPathNavigator)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As XPathNavigator)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XPath::XPathNavigator ^ stylesheet);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XPath.XPathNavigator -&gt; unit" Usage="xslTransform.Load stylesheet" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass evidence to Load() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XPath.XPathNavigator" />
      </Parameters>
      <Docs>
        <param name="stylesheet">Объект <see cref="T:System.Xml.XPath.XPathNavigator" />, содержащий таблицу стилей XSLT.</param>
        <summary>Загружает таблицу стилей XSLT, содержащуюся в классе <see cref="T:System.Xml.XPath.XPathNavigator" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Класс <xref:System.Xml.Xsl.XslTransform> устарел в .NET Framework версии 2,0. Класс <xref:System.Xml.Xsl.XslCompiledTransform> — это новый процессор XSLT. Дополнительные сведения см. в разделе [использование класса XslCompiledTransform](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) и [Миграция из класса XslTransform](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).  
  
 <xref:System.Xml.Xsl.XslTransform> поддерживает синтаксис XSLT 1,0. Таблица стилей XSLT должна включать объявление пространства имен `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.  
  
 Этот метод загружает таблицу стилей XSLT, включая любые таблицы стилей, на которые имеются ссылки в `xsl:include` и `xsl:import` элементов. Внешние ресурсы разрешаются с помощью <xref:System.Xml.XmlUrlResolver> без учетных данных пользователя. Если таблицы стилей расположены на сетевом ресурсе, требующем проверки подлинности, используйте перегрузку, которая принимает <xref:System.Xml.XmlResolver> как один из своих аргументов, и укажите <xref:System.Xml.XmlResolver> с необходимыми учетными данными.  
  
 Таблица стилей загружается из текущего расположения <xref:System.Xml.XPath.XPathNavigator>. Чтобы использовать только часть загруженного документа в качестве таблицы стилей, перейдите к узлу, соответствующему началу таблицы стилей. После возврата метода <xref:System.Xml.Xsl.XslTransform.Load%2A> <xref:System.Xml.XPath.XPathNavigator> размещается в начале таблицы стилей (на узле `xsl:style sheet`).  
  
 Если таблица стилей содержит внедренные скрипты, скрипт компилируется в сборку. Сборка имеет полное доверие. Рекомендуется предоставить свидетельство с помощью метода <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.XPathNavigator%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29>.
  
> [!NOTE]
>  Если вызывающий объект не имеет разрешения `UnmanagedCode`, встроенный скрипт не компилируется и создается <xref:System.Security.SecurityException>. Дополнительные сведения см. в разделах <xref:System.Security.Permissions.SecurityPermission> и <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException">Текущий узел не соответствует допустимой таблице стилей.</exception>
        <exception cref="T:System.Security.SecurityException">Таблица стилей содержит внедренные скрипты, а вызывающий оператор не имеет разрешения <see langword="UnmanagedCode" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (string url, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(string url, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.String,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (url As String, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::String ^ url, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Load : string * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Load (url, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="url">Адрес URL, задающий таблицу стилей XSLT для загрузки.</param>
        <param name="resolver">Объект <see cref="T:System.Xml.XmlResolver" /> используется для загрузки таблицы стилей и всех таблиц стилей, на которые имеются ссылки в элементах <c>xsl:import</c> и <c>xsl:include</c>.  
  
Если он равен <see langword="null" />, то для открытия таблицы стилей используется объект <see cref="T:System.Xml.XmlUrlResolver" /> по умолчанию без указания учетных данных пользователя. Объект <see cref="T:System.Xml.XmlUrlResolver" /> по умолчанию не используется для разрешения внешних ресурсов в таблице стилей, поэтому элементы <c>xsl:import</c> и <c>xsl:include</c> не разрешаются.  
  
<see cref="T:System.Xml.XmlResolver" /> не кэшируется после завершения метода <see cref="M:System.Xml.Xsl.XslTransform.Load(System.String,System.Xml.XmlResolver)" />.</param>
        <summary>Загружает таблицу стилей XSLT с указанного URL.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Класс <xref:System.Xml.Xsl.XslTransform> устарел в .NET Framework версии 2,0. Класс <xref:System.Xml.Xsl.XslCompiledTransform> — это новый процессор XSLT. Дополнительные сведения см. в разделе [использование класса XslCompiledTransform](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) и [Миграция из класса XslTransform](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).  
  
 <xref:System.Xml.Xsl.XslTransform> поддерживает синтаксис XSLT 1,0. Таблица стилей XSLT должна включать объявление пространства имен `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.  
  
 Если таблица стилей содержит внедренные скрипты, скрипт компилируется в сборку. Универсальный код ресурса (URI) таблицы стилей используется для создания свидетельства, применяемого к сборке.
  
> [!NOTE]
>  Если вызывающий объект не имеет разрешения `UnmanagedCode`, встроенный скрипт не компилируется и создается <xref:System.Security.SecurityException>. Дополнительные сведения см. в разделах <xref:System.Security.Permissions.SecurityPermission> и <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>.  
  
   
  
## Examples  
 В следующем примере XML-документ преобразуется в HTML-документ. В примере загружается таблица стилей XSLT, которая содержит элемент `xsl:include`, ссылающийся на другую таблицу стилей. <xref:System.Xml.XmlUrlResolver> передается методу <xref:System.Xml.Xsl.XslTransform.Load%2A>, который задает учетные данные, необходимые для доступа к сетевому ресурсу для включенной таблицы стилей.  
  
 [!code-csharp[XslTransform.Load2#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Load2/CS/trans2.cs#1)]
 [!code-vb[XslTransform.Load2#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Load2/VB/trans2.vb#1)]  
  
 В этом примере в качестве входных данных используются следующие файлы.  
  
 `books.xml`  
  
 [!code-xml[XslTransform.Load2#2](~/samples/snippets/xml/VS_Snippets_Data/XslTransform.Load2/XML/books.xml#2)]  
  
 `sort.xsl`  
  
 [!code-xml[XslTransform.Load2#3](~/samples/snippets/xml/VS_Snippets_Data/XslTransform.Load2/XML/sort.xsl#3)]  
  
 `includefile.xsl`  
  
 [!code-xml[XslTransform.Load2#4](~/samples/snippets/xml/VS_Snippets_Data/XslTransform.Load2/XML/includefile.xsl#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException">Загружаемый ресурс не является допустимой таблицей стилей.</exception>
        <exception cref="T:System.Security.SecurityException">Таблица стилей содержит внедренные скрипты, а вызывающий оператор не имеет разрешения <see langword="UnmanagedCode" />.</exception>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Net.NetworkCredential" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XmlReader stylesheet, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XmlReader stylesheet, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As XmlReader, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XmlReader ^ stylesheet, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XmlReader * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Load (stylesheet, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass evidence to Load() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XmlReader" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="stylesheet">Объект <see cref="T:System.Xml.XmlReader" />, содержащий таблицу стилей XSLT.</param>
        <param name="resolver">Объект <see cref="T:System.Xml.XmlResolver" /> используется для загрузки всех таблиц стилей, на которые имеются ссылки в элементах <c>xsl:import</c> и <c>xsl:include</c>. Если его значение равно <see langword="null" />, внешние ресурсы не определяются.  
  
<see cref="T:System.Xml.XmlResolver" /> не кэшируется после завершения метода <see cref="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader,System.Xml.XmlResolver)" />.</param>
        <summary>Загружает таблицу стилей XSLT, содержащуюся в классе <see cref="T:System.Xml.XmlReader" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Класс <xref:System.Xml.Xsl.XslTransform> устарел в .NET Framework версии 2,0. Класс <xref:System.Xml.Xsl.XslCompiledTransform> — это новый процессор XSLT. Дополнительные сведения см. в разделе [использование класса XslCompiledTransform](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) и [Миграция из класса XslTransform](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).  
  
 <xref:System.Xml.Xsl.XslTransform> поддерживает синтаксис XSLT 1,0. Таблица стилей XSLT должна включать объявление пространства имен `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.  
  
 Этот метод загружает таблицу стилей XSLT, включая любые таблицы стилей, на которые имеются ссылки в `xsl:include` и `xsl:import` элементов. Таблица стилей загружается из текущего узла <xref:System.Xml.XmlReader> через все его дочерние элементы. Это позволяет использовать часть документа в качестве таблицы стилей.  
  
 После возврата метода <xref:System.Xml.Xsl.XslTransform.Load%2A> <xref:System.Xml.XmlReader> размещается на следующем узле после конца таблицы стилей. По достижении конца документа объект <xref:System.Xml.XmlReader> позиционируется в конец файла (EOF).  
  
 Если таблица стилей содержит сущности, следует указать <xref:System.Xml.XmlReader>, которые могут разрешать сущности (<xref:System.Xml.XmlReader.CanResolveEntity%2A?displayProperty=nameWithType> возвращает `true`). В этом случае можно использовать <xref:System.Xml.XmlValidatingReader>.  
  
 Если таблица стилей содержит внедренные скрипты, скрипт компилируется в сборку. Сборка имеет полное доверие. Рекомендуется предоставить свидетельство с помощью метода <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XmlReader%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29>.
  
> [!NOTE]
>  Если вызывающий объект не имеет разрешения `UnmanagedCode`, встроенный скрипт не компилируется и создается <xref:System.Security.SecurityException>. Дополнительные сведения см. в разделах <xref:System.Security.Permissions.SecurityPermission> и <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException">Текущий узел не соответствует допустимой таблице стилей.</exception>
        <exception cref="T:System.Security.SecurityException">Таблица стилей содержит внедренные скрипты, а вызывающий оператор не имеет разрешения <see langword="UnmanagedCode" />.</exception>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Net.NetworkCredential" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XPath.IXPathNavigable stylesheet, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XPath.IXPathNavigable stylesheet, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.IXPathNavigable,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As IXPathNavigable, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XPath::IXPathNavigable ^ stylesheet, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XPath.IXPathNavigable * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Load (stylesheet, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass evidence to Load() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="stylesheet">Объект, реализующий интерфейс <see cref="T:System.Xml.XPath.IXPathNavigable" />. В .NET Framework это может быть либо объект <see cref="T:System.Xml.XmlNode" /> (обычно <see cref="T:System.Xml.XmlDocument" />), либо объект <see cref="T:System.Xml.XPath.XPathDocument" />, содержащий таблицу стилей XSLT.</param>
        <param name="resolver">Объект <see cref="T:System.Xml.XmlResolver" /> используется для загрузки всех таблиц стилей, на которые имеются ссылки в элементах <c>xsl:import</c> и <c>xsl:include</c>. Если его значение равно <see langword="null" />, внешние ресурсы не определяются.  
  
<see cref="T:System.Xml.XmlResolver" /> не кэшируется после завершения метода <see cref="Overload:System.Xml.Xsl.XslTransform.Load" />.</param>
        <summary>Загружает таблицу стилей XSLT, содержащуюся в классе <see cref="T:System.Xml.XPath.IXPathNavigable" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Класс <xref:System.Xml.Xsl.XslTransform> устарел в .NET Framework версии 2,0. Класс <xref:System.Xml.Xsl.XslCompiledTransform> — это новый процессор XSLT. Дополнительные сведения см. в разделе [использование класса XslCompiledTransform](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) и [Миграция из класса XslTransform](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).  
  
 <xref:System.Xml.Xsl.XslTransform> поддерживает синтаксис XSLT 1,0. Таблица стилей XSLT должна включать объявление пространства имен `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.  
  
 Если таблица стилей содержит внедренные скрипты, скрипт компилируется в сборку. Сборка имеет полное доверие. Рекомендуется предоставить свидетельство с помощью метода <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.IXPathNavigable%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29>.
  
> [!NOTE]
>  Если вызывающий объект не имеет разрешения `UnmanagedCode`, встроенный скрипт не компилируется и создается <xref:System.Security.SecurityException>. Дополнительные сведения см. в разделах <xref:System.Security.Permissions.SecurityPermission> и <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException">Загружаемый ресурс не является допустимой таблицей стилей.</exception>
        <exception cref="T:System.Security.SecurityException">Таблица стилей содержит внедренные скрипты, а вызывающий оператор не имеет разрешения <see langword="UnmanagedCode" />.</exception>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Net.NetworkCredential" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XPath.XPathNavigator stylesheet, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XPath.XPathNavigator stylesheet, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.XPathNavigator,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As XPathNavigator, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XPath::XPathNavigator ^ stylesheet, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XPath.XPathNavigator * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Load (stylesheet, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass evidence to Load() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="stylesheet">Объект <see cref="T:System.Xml.XPath.XPathNavigator" />, содержащий таблицу стилей XSLT.</param>
        <param name="resolver">Объект <see cref="T:System.Xml.XmlResolver" /> используется для загрузки всех таблиц стилей, на которые имеются ссылки в элементах <c>xsl:import</c> и <c>xsl:include</c>. Если его значение равно <see langword="null" />, внешние ресурсы не определяются.  
  
<see cref="T:System.Xml.XmlResolver" /> не кэшируется после завершения метода <see cref="Overload:System.Xml.Xsl.XslTransform.Load" />.</param>
        <summary>Загружает таблицу стилей XSLT, содержащуюся в классе <see cref="T:System.Xml.XPath.XPathNavigator" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Класс <xref:System.Xml.Xsl.XslTransform> устарел в .NET Framework версии 2,0. Класс <xref:System.Xml.Xsl.XslCompiledTransform> — это новый процессор XSLT. Дополнительные сведения см. в разделе [использование класса XslCompiledTransform](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) и [Миграция из класса XslTransform](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).  
  
 <xref:System.Xml.Xsl.XslTransform> поддерживает синтаксис XSLT 1,0. Таблица стилей XSLT должна включать объявление пространства имен `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.  
  
 Таблица стилей загружается из текущего расположения <xref:System.Xml.XPath.XPathNavigator>. Чтобы использовать часть загруженного документа в качестве таблицы стилей, перейдите к узлу, соответствующему началу таблицы стилей. После возврата метода <xref:System.Xml.Xsl.XslTransform.Load%2A> <xref:System.Xml.XPath.XPathNavigator> размещается в начале таблицы стилей (на узле `xsl:style sheet`).  
  
 Если таблица стилей содержит внедренные скрипты, скрипт компилируется в сборку. Сборка имеет полное доверие. Рекомендуемый подход заключается в предоставлении доказательств с помощью <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.XPathNavigator%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29>.
  
> [!NOTE]
>  Если вызывающий объект не имеет разрешения `UnmanagedCode`, встроенный скрипт не компилируется и создается <xref:System.Security.SecurityException>. Дополнительные сведения см. в разделах <xref:System.Security.Permissions.SecurityPermission> и <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException">Текущий узел не соответствует допустимой таблице стилей.</exception>
        <exception cref="T:System.Security.SecurityException">Таблица стилей содержит внедренные скрипты, а вызывающий оператор не имеет разрешения <see langword="UnmanagedCode" />.</exception>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Net.NetworkCredential" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XmlReader stylesheet, System.Xml.XmlResolver resolver, System.Security.Policy.Evidence evidence);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XmlReader stylesheet, class System.Xml.XmlResolver resolver, class System.Security.Policy.Evidence evidence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader,System.Xml.XmlResolver,System.Security.Policy.Evidence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XmlReader ^ stylesheet, System::Xml::XmlResolver ^ resolver, System::Security::Policy::Evidence ^ evidence);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XmlReader * System.Xml.XmlResolver * System.Security.Policy.Evidence -&gt; unit" Usage="xslTransform.Load (stylesheet, resolver, evidence)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XmlReader" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="evidence" Type="System.Security.Policy.Evidence" Index="2" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="stylesheet">Объект <see cref="T:System.Xml.XmlReader" />, содержащий загружаемую таблицу стилей.</param>
        <param name="resolver">Объект <see cref="T:System.Xml.XmlResolver" /> используется для загрузки всех таблиц стилей, на которые имеются ссылки в элементах <c>xsl:import</c> и <c>xsl:include</c>. Если его значение равно <see langword="null" />, внешние ресурсы не определяются.  
  
<see cref="T:System.Xml.XmlResolver" /> не кэшируется после завершения метода <see cref="Overload:System.Xml.Xsl.XslTransform.Load" />.</param>
        <param name="evidence">Свидетельство <see cref="T:System.Security.Policy.Evidence" />, устанавливаемое для сборки, созданной для блока скриптов таблицы стилей XSLT.  
  
Если значение этого параметра равно <see langword="null" />, то блоки скриптов не обрабатываются, XSLT-функция <c>document()</c> не поддерживается и использование привилегированных объектов расширения запрещено.  
  
Чтобы передать свидетельство сборке скриптов, вызывающий оператор должен иметь разрешение <see langword="ControlEvidence" />. Вызывающие объекты, не имеющие полного доверия, могут установить для этого параметра значение <see langword="null" />.</param>
        <summary>Загружает таблицу стилей XSLT, содержащуюся в классе <see cref="T:System.Xml.XmlReader" />. Этот метод позволяет ограничивать разрешения для таблиц стилей путем указания свидетельства.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Класс <xref:System.Xml.Xsl.XslTransform> устарел в .NET Framework версии 2,0. Класс <xref:System.Xml.Xsl.XslCompiledTransform> — это новый процессор XSLT. Дополнительные сведения см. в разделе [использование класса XslCompiledTransform](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) и [Миграция из класса XslTransform](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).  
  
 <xref:System.Xml.Xsl.XslTransform> поддерживает синтаксис XSLT 1,0. Таблица стилей XSLT должна включать объявление пространства имен `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.  
  
 Этот метод загружает таблицу стилей XSLT, включая любые таблицы стилей, на которые имеются ссылки в `xsl:include` и `xsl:import` элементов. Таблица стилей загружается из текущего узла <xref:System.Xml.XmlReader> через все его дочерние элементы. Это позволяет использовать часть документа в качестве таблицы стилей.  
  
 После возврата метода <xref:System.Xml.Xsl.XslTransform.Load%2A> <xref:System.Xml.XmlReader> размещается на следующем узле после конца таблицы стилей. По достижении конца документа объект <xref:System.Xml.XmlReader> позиционируется в конец файла (EOF).  
  
 Если таблица стилей содержит сущности, следует указать <xref:System.Xml.XmlReader>, которые могут разрешать сущности (<xref:System.Xml.XmlReader.CanResolveEntity%2A?displayProperty=nameWithType> возвращает `true`). В этом случае можно использовать <xref:System.Xml.XmlValidatingReader>.  
  

  
 Существует несколько способов предоставления доказательств. В следующей таблице описывается тип свидетельства, предоставляемый для распространенных пользовательских сценариев.  
  
|Сценарий|Тип предоставляемого свидетельства|  
|--------------|---------------------------------|  
|Таблица стилей XSLT является автономной или поступает из базы кода, которой вы доверяете.|Используйте свидетельство из сборки.<br /><br /> <pre><code class="lang-csharp">XsltTransform xslt = new XslTransform(); &#13;&#10;xslt.Load(xslReader, resolver, this.GetType().Assembly.Evidence);</code></pre>|  
|Таблица стилей XSLT поступает из внешнего источника. Источник источника известен, и существует проверяемый URL-адрес.|Создайте свидетельство с помощью URL-адреса.<br /><br /> <pre><code class="lang-csharp">XsltTransform xslt = new XslTransform();&#13;&#10; Evidence evidence = XmlSecureResolver.CreateEvidenceForUrl(stylesheetURL); &#13;&#10;xslt.Load(xslReader,resolver,evidence);</code></pre>|  
|Таблица стилей XSLT поступает из внешнего источника. Происхождение источника неизвестно.|Присвойте свидетельству значение `null`. Блоки скриптов не обрабатываются, функция XSLT `document()` не поддерживается, привилегированные объекты расширения запрещены.<br /><br /> Кроме того, можно также задать для параметра `resolver` значение `null`. Это гарантирует, что элементы `xsl:import` и `xsl:include` не обрабатываются.|  
|Таблица стилей XSLT поступает из внешнего источника. Происхождение источника неизвестно, но необходима поддержка скриптов.|Запросите свидетельство у вызывающего. API вызывающего объекта должен предоставлять способ предоставления свидетельства, обычно класс <xref:System.Security.Policy.Evidence>.|  
  
     
## Examples  
 В следующем примере выполняется преобразование XSLT, где `xsltReader` — это <xref:System.Xml.XmlReader>, содержащий таблицу стилей, а `secureURL` — доверенный URL-адрес, который можно использовать для создания <xref:System.Security.Policy.Evidence>. Метод <xref:System.Xml.XmlSecureResolver.CreateEvidenceForUrl%2A?displayProperty=nameWithType> используется для создания <xref:System.Security.Policy.Evidence>, применяемого к таблице стилей.  
  
 [!code-cpp[XslTransform.Load4#1](~/samples/snippets/cpp/VS_Snippets_Data/XslTransform.Load4/CPP/trans_ev.cpp#1)]
 [!code-csharp[XslTransform.Load4#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Load4/CS/trans_ev.cs#1)]
 [!code-vb[XslTransform.Load4#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Load4/VB/trans_ev.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException">Текущий узел не соответствует допустимой таблице стилей.</exception>
        <exception cref="T:System.Security.SecurityException">Указанной таблице стилей требуется произвести действия, не позволенные в рамках предоставленного свидетельства.  
  
Вызывающий оператор пытается передать свидетельство, не имея разрешения <see langword="ControlEvidence" />.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">для предоставления свидетельства. Связанное перечисление: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></permission>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.NetworkCredential" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Security.SecurityZone" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="M:System.Xml.XmlSecureResolver.CreateEvidenceForUrl(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XPath.IXPathNavigable stylesheet, System.Xml.XmlResolver resolver, System.Security.Policy.Evidence evidence);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XPath.IXPathNavigable stylesheet, class System.Xml.XmlResolver resolver, class System.Security.Policy.Evidence evidence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.IXPathNavigable,System.Xml.XmlResolver,System.Security.Policy.Evidence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XPath::IXPathNavigable ^ stylesheet, System::Xml::XmlResolver ^ resolver, System::Security::Policy::Evidence ^ evidence);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XPath.IXPathNavigable * System.Xml.XmlResolver * System.Security.Policy.Evidence -&gt; unit" Usage="xslTransform.Load (stylesheet, resolver, evidence)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XPath.IXPathNavigable" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="evidence" Type="System.Security.Policy.Evidence" Index="2" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="stylesheet">Объект, реализующий интерфейс <see cref="T:System.Xml.XPath.IXPathNavigable" />. В .NET Framework это может быть либо объект <see cref="T:System.Xml.XmlNode" /> (обычно <see cref="T:System.Xml.XmlDocument" />), либо объект <see cref="T:System.Xml.XPath.XPathDocument" />, содержащий таблицу стилей XSLT.</param>
        <param name="resolver">Объект <see cref="T:System.Xml.XmlResolver" /> используется для загрузки всех таблиц стилей, на которые имеются ссылки в элементах <c>xsl:import</c> и <c>xsl:include</c>. Если его значение равно <see langword="null" />, внешние ресурсы не определяются.  
  
<see cref="T:System.Xml.XmlResolver" /> не кэшируется после завершения метода <see cref="Overload:System.Xml.Xsl.XslTransform.Load" />.</param>
        <param name="evidence">Свидетельство <see cref="T:System.Security.Policy.Evidence" />, устанавливаемое для сборки, созданной для блока скриптов таблицы стилей XSLT.  
  
Если значение этого параметра равно <see langword="null" />, то блоки скриптов не обрабатываются, XSLT-функция <c>document()</c> не поддерживается и использование привилегированных объектов расширения запрещено.  
  
Чтобы передать свидетельство сборке скриптов, вызывающий оператор должен иметь разрешение <see langword="ControlEvidence" />. Вызывающие объекты, не имеющие полного доверия, могут установить для этого параметра значение <see langword="null" />.</param>
        <summary>Загружает таблицу стилей XSLT, содержащуюся в классе <see cref="T:System.Xml.XPath.IXPathNavigable" />. Этот метод позволяет ограничивать разрешения для таблиц стилей путем указания свидетельства.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Класс <xref:System.Xml.Xsl.XslTransform> устарел в .NET Framework версии 2,0. Класс <xref:System.Xml.Xsl.XslCompiledTransform> — это новый процессор XSLT. Дополнительные сведения см. в разделе [использование класса XslCompiledTransform](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) и [Миграция из класса XslTransform](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).  
  
 <xref:System.Xml.Xsl.XslTransform> поддерживает синтаксис XSLT 1,0. Таблица стилей XSLT должна включать объявление пространства имен `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.  
  

  
 Существует несколько способов предоставления доказательств. В следующей таблице описывается тип свидетельства, предоставляемый для распространенных пользовательских сценариев.  
  
|Сценарий|Тип предоставляемого свидетельства|  
|--------------|---------------------------------|  
|Таблица стилей XSLT является автономной или поступает из базы кода, которой вы доверяете.|Используйте свидетельство из сборки.<br /><br /> <pre><code class="lang-csharp">XsltTransform xslt = new XslTransform(); &#13;&#10;xslt.Load(style sheet, resolver, this.GetType().Assembly.Evidence);</code></pre>|  
|Таблица стилей XSLT поступает из внешнего источника. Источник источника известен, и существует проверяемый URL-адрес.|Создайте свидетельство с помощью URL-адреса.<br /><br /> <pre><code class="lang-csharp">XsltTransform xslt = new XslTransform(); &#13;&#10;Evidence evidence = XmlSecureResolver.CreateEvidenceForUrl(style sheetURL); &#13;&#10;xslt.Load(style sheet,resolver,evidence);</code></pre>|  
|Таблица стилей XSLT поступает из внешнего источника. Происхождение источника неизвестно.|Присвойте свидетельству значение `null`. Блоки скриптов не обрабатываются, функция XSLT `document()` не поддерживается, привилегированные объекты расширения запрещены.<br /><br /> Кроме того, можно также задать для параметра `resolver` значение `null`. Это гарантирует, что элементы `xsl:import` и `xsl:include` не обрабатываются.|  
|Таблица стилей XSLT поступает из внешнего источника. Происхождение источника неизвестно, но необходима поддержка скриптов.|Запросите свидетельство у вызывающего. API вызывающего объекта должен предоставлять способ предоставления свидетельства, обычно класс <xref:System.Security.Policy.Evidence>.|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException">Загружаемый ресурс не является допустимой таблицей стилей.</exception>
        <exception cref="T:System.Security.SecurityException">Указанной таблице стилей требуется произвести действия, не позволенные в рамках предоставленного свидетельства.  
  
Вызывающий оператор пытается передать свидетельство, не имея разрешения <see langword="ControlEvidence" />.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">для предоставления свидетельства. Связанное перечисление: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></permission>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.NetworkCredential" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Security.SecurityZone" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="M:System.Xml.XmlSecureResolver.CreateEvidenceForUrl(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XPath.XPathNavigator stylesheet, System.Xml.XmlResolver resolver, System.Security.Policy.Evidence evidence);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XPath.XPathNavigator stylesheet, class System.Xml.XmlResolver resolver, class System.Security.Policy.Evidence evidence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.XPathNavigator,System.Xml.XmlResolver,System.Security.Policy.Evidence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XPath::XPathNavigator ^ stylesheet, System::Xml::XmlResolver ^ resolver, System::Security::Policy::Evidence ^ evidence);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XPath.XPathNavigator * System.Xml.XmlResolver * System.Security.Policy.Evidence -&gt; unit" Usage="xslTransform.Load (stylesheet, resolver, evidence)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XPath.XPathNavigator" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="evidence" Type="System.Security.Policy.Evidence" Index="2" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="stylesheet">Объект <see cref="T:System.Xml.XPath.XPathNavigator" />, содержащий загружаемую таблицу стилей.</param>
        <param name="resolver">Объект <see cref="T:System.Xml.XmlResolver" /> используется для загрузки всех таблиц стилей, на которые имеются ссылки в элементах <c>xsl:import</c> и <c>xsl:include</c>. Если его значение равно <see langword="null" />, внешние ресурсы не определяются.  
  
<see cref="T:System.Xml.XmlResolver" /> не кэшируется после завершения метода <see cref="Overload:System.Xml.Xsl.XslTransform.Load" />.</param>
        <param name="evidence">Свидетельство <see cref="T:System.Security.Policy.Evidence" />, устанавливаемое для сборки, созданной для блока скриптов таблицы стилей XSLT.  
  
Если значение этого параметра равно <see langword="null" />, то блоки скриптов не обрабатываются, XSLT-функция <c>document()</c> не поддерживается и использование привилегированных объектов расширения запрещено.  
  
Чтобы передать свидетельство сборке скриптов, вызывающий оператор должен иметь разрешение <see langword="ControlEvidence" />. Вызывающие объекты, не имеющие полного доверия, могут установить для этого параметра значение <see langword="null" />.</param>
        <summary>Загружает таблицу стилей XSLT, содержащуюся в классе <see cref="T:System.Xml.XPath.XPathNavigator" />. Этот метод позволяет ограничивать разрешения для таблиц стилей путем указания свидетельства.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Класс <xref:System.Xml.Xsl.XslTransform> устарел в .NET Framework версии 2,0. Класс <xref:System.Xml.Xsl.XslCompiledTransform> — это новый процессор XSLT. Дополнительные сведения см. в разделе [использование класса XslCompiledTransform](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) и [Миграция из класса XslTransform](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).  
  
 <xref:System.Xml.Xsl.XslTransform> поддерживает синтаксис XSLT 1,0. Таблица стилей XSLT должна включать объявление пространства имен `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.  
  
 Таблица стилей загружается из текущего расположения <xref:System.Xml.XPath.XPathNavigator>. Чтобы использовать часть загруженного документа в качестве таблицы стилей, перейдите к узлу, соответствующему началу таблицы стилей. После возврата метода <xref:System.Xml.Xsl.XslTransform.Load%2A> <xref:System.Xml.XPath.XPathNavigator> размещается в начале таблицы стилей (на узле `xsl:style sheet`).  
  

  
 Существует несколько способов предоставления доказательств. В следующей таблице описывается тип свидетельства, предоставляемый для распространенных пользовательских сценариев.  
  
|Сценарий|Тип предоставляемого свидетельства|  
|--------------|---------------------------------|  
|Таблица стилей XSLT является автономной или поступает из базы кода, которой вы доверяете.|Используйте свидетельство из сборки.<br /><br /> <pre><code class="lang-csharp">XsltTransform xslt = new XslTransform(); &#13;&#10;xslt.Load(xslNav, resolver, this.GetType().Assembly.Evidence);</code></pre>|  
|Таблица стилей XSLT поступает из внешнего источника. Источник источника известен, и существует проверяемый URL-адрес.|Создайте свидетельство с помощью URL-адреса.<br /><br /> <pre><code class="lang-csharp">XsltTransform xslt = new XslTransform(); &#13;&#10;Evidence evidence = XmlSecureResolver.CreateEvidenceForUrl(style sheetURL); &#13;&#10;xslt.Load(xslNav,resolver,evidence);</code></pre>|  
|Таблица стилей XSLT поступает из внешнего источника. Происхождение источника неизвестно.|Присвойте свидетельству значение `null`. Блоки скриптов не обрабатываются, функция XSLT `document()` не поддерживается, привилегированные объекты расширения запрещены.<br /><br /> Кроме того, можно также задать для параметра `resolver` значение `null`. Это гарантирует, что элементы `xsl:import` и `xsl:include` не обрабатываются.|  
|Таблица стилей XSLT поступает из внешнего источника. Происхождение источника неизвестно, но необходима поддержка скриптов.|Запросите свидетельство у вызывающего. API вызывающего объекта должен предоставлять способ предоставления свидетельства, обычно класс `Evidence`.|  
  
   
  
## Examples  
 В следующем примере выполняется преобразование XSLT с использованием таблицы стилей из внешнего источника. Так как таблица стилей поступает из ненадежного источника, параметры `resolver` и `evidence` задаются как `null`.  
 
 [!code-csharp[XslTransform.Load5#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Load5/CS/trans_noev.cs#1)]
 [!code-vb[XslTransform.Load5#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Load5/VB/trans_noev.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException">Текущий узел не соответствует допустимой таблице стилей.</exception>
        <exception cref="T:System.Security.SecurityException">Указанной таблице стилей требуется произвести действия, не позволенные в рамках предоставленного свидетельства.  
  
Вызывающий оператор пытается передать свидетельство, не имея разрешения <see langword="ControlEvidence" />.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">для предоставления свидетельства. Связанное перечисление: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></permission>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.NetworkCredential" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Security.SecurityZone" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="M:System.Xml.XmlSecureResolver.CreateEvidenceForUrl(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Transform">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Преобразует данные XML с помощью таблицы стилей XSLT.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Класс <xref:System.Xml.Xsl.XslTransform> устарел в .NET Framework версии 2,0. Класс <xref:System.Xml.Xsl.XslCompiledTransform> — это новый процессор XSLT. Дополнительные сведения см. в разделе [использование класса XslCompiledTransform](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) и [Миграция из класса XslTransform](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (string inputfile, string outputfile);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(string inputfile, string outputfile) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (inputfile As String, outputfile As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::String ^ inputfile, System::String ^ outputfile);" />
      <MemberSignature Language="F#" Value="member this.Transform : string * string -&gt; unit" Usage="xslTransform.Transform (inputfile, outputfile)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass XmlResolver to Transform() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputfile" Type="System.String" />
        <Parameter Name="outputfile" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="inputfile">URL-адрес исходного документа для преобразования.</param>
        <param name="outputfile">URL-адрес выходного файла.</param>
        <summary>Преобразует данные XML во входном файле и выводит результат в выходной файл.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Класс <xref:System.Xml.Xsl.XslTransform> устарел в .NET Framework версии 2,0. Класс <xref:System.Xml.Xsl.XslCompiledTransform> — это новый процессор XSLT. Дополнительные сведения см. в разделе [использование класса XslCompiledTransform](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) и [Миграция из класса XslTransform](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).  
  
 <xref:System.Xml.Xsl.XslTransform> поддерживает синтаксис XSLT 1,0. Таблица стилей XSLT должна включать объявление пространства имен `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.  
  
> [!NOTE]
>  Этот метод является устаревшим в версии 1,1 .NET Framework. Значение свойства <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> определяет, как разрешается функция XSLT `document()`. Рекомендуется использовать метод <xref:System.Xml.Xsl.XslTransform.Transform%2A>, который принимает объект <xref:System.Xml.XmlResolver> в качестве одного из своих аргументов.  
  
   
  
## Examples  
 В следующем примере файл `books.xml` преобразуется с помощью таблицы стилей `output.xsl` и выводит результаты в файл `books.html`.  
  
 [!code-cpp[XslTransform.Transform3#1](~/samples/snippets/cpp/VS_Snippets_Data/xsltransform.transform3/CPP/trans_snip2.cpp#1)]
 [!code-csharp[XslTransform.Transform3#1](~/samples/snippets/csharp/VS_Snippets_Data/xsltransform.transform3/CS/trans_snip2.cs#1)]
 [!code-vb[XslTransform.Transform3#1](~/samples/snippets/visualbasic/VS_Snippets_Data/xsltransform.transform3/VB/trans_snip2.vb#1)]  
  
 В образце используются следующие два входных файла:  
  
 `books.xml`  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/books.xml#2)]  
  
 `output.xsl`  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#3](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/output.xsl#3)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab">Реализация поведения по выбору в классе XslTransform</related>
        <related type="Article" href="https://msdn.microsoft.com/library/8e149d32-4b2f-493f-9e4b-d0d93475acde">Результаты вывода XslTransform</related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public System.Xml.XmlReader Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlReader Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList)" />
      <MemberSignature Language="VB.NET" Value="Public Function Transform (input As IXPathNavigable, args As XsltArgumentList) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlReader ^ Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltArgumentList -&gt; System.Xml.XmlReader" Usage="xslTransform.Transform (input, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass XmlResolver to Transform() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
      </Parameters>
      <Docs>
        <param name="input">Объект, реализующий интерфейс <see cref="T:System.Xml.XPath.IXPathNavigable" />. В платформе .NET Framework это может быть либо объект <see cref="T:System.Xml.XmlNode" /> (обычно <see cref="T:System.Xml.XmlDocument" />), либо объект <see cref="T:System.Xml.XPath.XPathDocument" />, содержащий преобразуемые данные.</param>
        <param name="args">Объект <see cref="T:System.Xml.Xsl.XsltArgumentList" />, содержащий имена аргументов с указанием пространства имен, используемый в качестве входных данных для преобразования.</param>
        <summary>Преобразует данные XML в <see cref="T:System.Xml.XPath.IXPathNavigable" />, используя указанные аргументы <paramref name="args" />, результат выводит в <see cref="T:System.Xml.XmlReader" />.</summary>
        <returns>Объект <see cref="T:System.Xml.XmlReader" />, содержащий результат преобразования.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Класс <xref:System.Xml.Xsl.XslTransform> устарел в .NET Framework версии 2,0. Класс <xref:System.Xml.Xsl.XslCompiledTransform> — это новый процессор XSLT. Дополнительные сведения см. в разделе [использование класса XslCompiledTransform](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) и [Миграция из класса XslTransform](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).  
  
 <xref:System.Xml.Xsl.XslTransform> поддерживает синтаксис XSLT 1,0. Таблица стилей XSLT должна включать объявление пространства имен `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.  
  
> [!NOTE]
>  Этот метод устарел. Значение свойства <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> определяет, как разрешается функция XSLT `document()`. Рекомендуется использовать метод <xref:System.Xml.Xsl.XslTransform.Transform%2A>, который принимает объект <xref:System.Xml.XmlResolver> в качестве одного из своих аргументов.  
  
 `args` сопоставляются с элементами `xsl:param`, определенными в таблице стилей. Элемент `xsl:output` не поддерживается при размещении в <xref:System.Xml.XmlReader> (элемент `xsl:output` игнорируется). Дополнительные сведения см. [в разделе выводы из XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) .  
  
 Этот метод позволяет выполнить асинхронное преобразование исходного документа.  
  
 Преобразования применяются к документу в целом. Иными словами, если передать узел, отличный от корневого узла документа, это не помешает процессу преобразования обратиться ко всем узлам загружаемого документа. Чтобы преобразовать фрагмент узла, необходимо создать <xref:System.Xml.XmlDocument>, содержащий только фрагмент узла, и передать его <xref:System.Xml.XmlDocument> методу <xref:System.Xml.Xsl.XslTransform.Transform%2A>.  
  
 В следующем примере выполняется преобразование фрагмента узла.  
  
```csharp  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out);  
```  
  
 В этом примере в качестве входных данных используются `library.xml` и `print_root.xsl` файлы, а в консоли выводятся следующие данные.  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```xml  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```xml  
<stylesheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />   
  <template match="/">  
     Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</stylesheet>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab">Реализация поведения по выбору в классе XslTransform</related>
        <related type="Article" href="https://msdn.microsoft.com/library/8e149d32-4b2f-493f-9e4b-d0d93475acde">Результаты вывода XslTransform</related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public System.Xml.XmlReader Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlReader Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList)" />
      <MemberSignature Language="VB.NET" Value="Public Function Transform (input As XPathNavigator, args As XsltArgumentList) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlReader ^ Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.XPathNavigator * System.Xml.Xsl.XsltArgumentList -&gt; System.Xml.XmlReader" Usage="xslTransform.Transform (input, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass XmlResolver to Transform() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
      </Parameters>
      <Docs>
        <param name="input">Объект <see cref="T:System.Xml.XPath.XPathNavigator" />, содержащий преобразуемые данные.</param>
        <param name="args">Объект <see cref="T:System.Xml.Xsl.XsltArgumentList" />, содержащий имена аргументов с указанием пространства имен, используемый в качестве входных данных для преобразования.</param>
        <summary>Преобразует данные XML в <see cref="T:System.Xml.XPath.XPathNavigator" />, используя указанные аргументы <paramref name="args" />, результат выводит в <see cref="T:System.Xml.XmlReader" />.</summary>
        <returns>Объект <see cref="T:System.Xml.XmlReader" />, содержащий результат преобразования.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Класс <xref:System.Xml.Xsl.XslTransform> устарел в .NET Framework версии 2,0. Класс <xref:System.Xml.Xsl.XslCompiledTransform> — это новый процессор XSLT. Дополнительные сведения см. в разделе [использование класса XslCompiledTransform](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) и [Миграция из класса XslTransform](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).  
  
 <xref:System.Xml.Xsl.XslTransform> поддерживает синтаксис XSLT 1,0. Таблица стилей XSLT должна включать объявление пространства имен `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.  
  
 `args` сопоставляются с элементами `xsl:param`, определенными в таблице стилей. Выделенные преобразования применяются к документу в целом. Иными словами, если текущий узел задан в дереве узлов, отличном от корневого узла документа, это не мешает процессу преобразования получить доступ ко всем узлам в загруженном документе. После выполнения преобразования <xref:System.Xml.XPath.XPathNavigator> остается в исходном состоянии. Это означает, что узел, который является текущим до процесса преобразования, остается текущим узлом после вызова метода <xref:System.Xml.Xsl.XslTransform.Transform%2A>.  
  
 Поскольку <xref:System.Xml.XmlReader> предоставляет выходные данные только для чтения, элемент `xsl:output` игнорируется. Дополнительные сведения см. [в разделе выводы из XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) .  
  
 Этот метод позволяет выполнить асинхронное преобразование исходного документа.  
  
> [!NOTE]
>  Этот метод устарел. Значение свойства <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> определяет, как разрешается функция XSLT document (). Рекомендуется использовать метод <xref:System.Xml.Xsl.XslTransform.Transform%2A>, который принимает объект <xref:System.Xml.XmlResolver> в качестве одного из своих аргументов.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">При обработке преобразования XSLT возникла ошибка.  
  
Примечание. Это поведение было изменено по сравнению с предыдущими версиями. Исключение <see cref="T:System.Xml.Xsl.XsltException" /> создается при использовании версии 1.1 или более ранней версии платформы Microsoft .NET Framework.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab">Реализация поведения по выбору в классе XslTransform</related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (string inputfile, string outputfile, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(string inputfile, string outputfile, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.String,System.String,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (inputfile As String, outputfile As String, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::String ^ inputfile, System::String ^ outputfile, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : string * string * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Transform (inputfile, outputfile, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputfile" Type="System.String" />
        <Parameter Name="outputfile" Type="System.String" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="inputfile">URL-адрес исходного документа для преобразования.</param>
        <param name="outputfile">URL-адрес выходного файла.</param>
        <param name="resolver">Объект <see cref="T:System.Xml.XmlResolver" />, используемый для разрешения функции XSLT <c>document()</c>. Если значение равно <see langword="null" />, функция <c>document()</c> не разрешается.  
  
<see cref="T:System.Xml.XmlResolver" /> не кэшируется после завершения метода <see cref="Overload:System.Xml.Xsl.XslTransform.Transform" />.</param>
        <summary>Преобразует данные XML во входном файле и выводит результат в выходной файл.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Класс <xref:System.Xml.Xsl.XslTransform> устарел в .NET Framework версии 2,0. Класс <xref:System.Xml.Xsl.XslCompiledTransform> — это новый процессор XSLT. Дополнительные сведения см. в разделе [использование класса XslCompiledTransform](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) и [Миграция из класса XslTransform](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).  
  
 <xref:System.Xml.Xsl.XslTransform> поддерживает синтаксис XSLT 1,0. Таблица стилей XSLT должна включать объявление пространства имен `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.  
  
   
  
## Examples  
 В следующем примере выполняется преобразование XSLT и выходные данные в файл. Для разрешения внешних ресурсов используется <xref:System.Xml.XmlUrlResolver> с учетными данными по умолчанию. Более подробные сведения см. в разделе <xref:System.Net.CredentialCache.DefaultCredentials%2A>.  
  
 [!code-cpp[XslTransform.Transform7#1](~/samples/snippets/cpp/VS_Snippets_Data/XslTRansform.Transform7/CPP/trans_snip4.cpp#1)]
 [!code-csharp[XslTransform.Transform7#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTRansform.Transform7/CS/trans_snip4.cs#1)]
 [!code-vb[XslTransform.Transform7#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTRansform.Transform7/VB/trans_snip4.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.NetworkCredential" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.IO.Stream output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.Stream output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, args As XsltArgumentList, output As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::Stream ^ output);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltArgumentList * System.IO.Stream -&gt; unit" Usage="xslTransform.Transform (input, args, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass XmlResolver to Transform() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="input">Объект, реализующий интерфейс <see cref="T:System.Xml.XPath.IXPathNavigable" />. В платформе .NET Framework это может быть либо объект <see cref="T:System.Xml.XmlNode" /> (обычно <see cref="T:System.Xml.XmlDocument" />), либо объект <see cref="T:System.Xml.XPath.XPathDocument" />, содержащий преобразуемые данные.</param>
        <param name="args">Объект <see cref="T:System.Xml.Xsl.XsltArgumentList" />, содержащий имена аргументов с указанием пространства имен, используемый в качестве входных данных для преобразования.</param>
        <param name="output">Поток, в который требуется направить вывод.</param>
        <summary>Преобразует данные XML в <see cref="T:System.Xml.XPath.IXPathNavigable" />, используя указанные аргументы <paramref name="args" />, результат выводит в <see cref="T:System.IO.Stream" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Класс <xref:System.Xml.Xsl.XslTransform> устарел в .NET Framework версии 2,0. Класс <xref:System.Xml.Xsl.XslCompiledTransform> — это новый процессор XSLT. Дополнительные сведения см. в разделе [использование класса XslCompiledTransform](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) и [Миграция из класса XslTransform](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).  
  
 <xref:System.Xml.Xsl.XslTransform> поддерживает синтаксис XSLT 1,0. Таблица стилей XSLT должна включать объявление пространства имен `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.  
  
> [!NOTE]
>  Этот метод устарел. Значение свойства <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> определяет, как разрешается функция XSLT `document()`. Рекомендуется использовать метод <xref:System.Xml.Xsl.XslTransform.Transform%2A>, который принимает объект <xref:System.Xml.XmlResolver> в качестве одного из своих аргументов.  
  
 `args` сопоставляются с элементами `xsl:param`, определенными в таблице стилей.  
  
 Преобразования применяются к документу в целом. Иными словами, если передать узел, отличный от корневого узла документа, это не помешает процессу преобразования обратиться ко всем узлам загружаемого документа. Чтобы преобразовать фрагмент узла, необходимо создать <xref:System.Xml.XmlDocument>, содержащий только фрагмент узла, и передать его <xref:System.Xml.XmlDocument> методу <xref:System.Xml.Xsl.XslTransform.Transform%2A>.  
  
 В следующем примере выполняется преобразование фрагмента узла.  
  
```csharp  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out);  
```  
  
 В этом примере в качестве входных данных используются `library.xml` и `print_root.xsl` файлы, а в консоли выводятся следующие данные.  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```xml  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```xml  
<stylesheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />   
  <template match="/">  
     Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</stylesheet>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">При обработке преобразования XSLT возникла ошибка.  
  
Примечание. Это поведение было изменено по сравнению с предыдущими версиями. Исключение <see cref="T:System.Xml.Xsl.XsltException" /> создается при использовании версии 1.1 или более ранней версии платформы Microsoft .NET Framework.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab">Реализация поведения по выбору в классе XslTransform</related>
        <related type="Article" href="https://msdn.microsoft.com/library/8e149d32-4b2f-493f-9e4b-d0d93475acde">Результаты вывода XslTransform</related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, args As XsltArgumentList, output As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::TextWriter ^ output);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltArgumentList * System.IO.TextWriter -&gt; unit" Usage="xslTransform.Transform (input, args, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass XmlResolver to Transform() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="input">Объект, реализующий интерфейс <see cref="T:System.Xml.XPath.IXPathNavigable" />. В платформе .NET Framework это может быть либо объект <see cref="T:System.Xml.XmlNode" /> (обычно <see cref="T:System.Xml.XmlDocument" />), либо объект <see cref="T:System.Xml.XPath.XPathDocument" />, содержащий преобразуемые данные.</param>
        <param name="args">Объект <see cref="T:System.Xml.Xsl.XsltArgumentList" />, содержащий имена аргументов с указанием пространства имен, используемый в качестве входных данных для преобразования.</param>
        <param name="output">Модуль записи <see cref="T:System.IO.TextWriter" />, в который нужно направить выход.</param>
        <summary>Преобразует данные XML в <see cref="T:System.Xml.XPath.IXPathNavigable" />, используя указанные аргументы <paramref name="args" />, результат выводит в <see cref="T:System.IO.TextWriter" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Класс <xref:System.Xml.Xsl.XslTransform> устарел в .NET Framework версии 2,0. Класс <xref:System.Xml.Xsl.XslCompiledTransform> — это новый процессор XSLT. Дополнительные сведения см. в разделе [использование класса XslCompiledTransform](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) и [Миграция из класса XslTransform](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).  
  
 <xref:System.Xml.Xsl.XslTransform> поддерживает синтаксис XSLT 1,0. Таблица стилей XSLT должна включать объявление пространства имен `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.  
  
> [!NOTE]
>  Этот метод устарел. Значение свойства <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> определяет, как разрешается функция XSLT `document()`. Рекомендуется использовать метод <xref:System.Xml.Xsl.XslTransform.Transform%2A>, который принимает объект <xref:System.Xml.XmlResolver> в качестве одного из своих аргументов.  
  
 `args` сопоставляются с элементами `xsl:param`, определенными в таблице стилей.  
  
 Атрибут Encoding элемента `xsl:output` не поддерживается при выводе в <xref:System.IO.TextWriter>. Сведения о том, какие атрибуты `xsl:output` поддерживаются, см. в разделе [выходные данные из XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) .  
  
 Преобразования применяются к документу в целом. Иными словами, если передать узел, отличный от корневого узла документа, это не помешает процессу преобразования обратиться ко всем узлам загружаемого документа. Для преобразования фрагмента узла необходимо создать <xref:System.Xml.XmlDocument>, содержащий только фрагмент узла, и передать его <xref:System.Xml.XmlDocument> методу <xref:System.Xml.Xsl.XslTransform.Transform%2A>.  
  
 В следующем примере выполняется преобразование фрагмента узла.  
  
```csharp  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out);  
```  
  
 В этом примере в качестве входных данных используются `library.xml` и `print_root.xsl` файлы, а в консоли выводятся следующие данные.  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```xml  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```xml  
<stylesheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />   
  <template match="/">  
     Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</stylesheet>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">При обработке преобразования XSLT возникла ошибка.  
  
Примечание. Это поведение было изменено по сравнению с предыдущими версиями. Исключение <see cref="T:System.Xml.Xsl.XsltException" /> создается при использовании версии 1.1 или более ранней версии платформы Microsoft .NET Framework.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab">Реализация поведения по выбору в классе XslTransform</related>
        <related type="Article" href="https://msdn.microsoft.com/library/8e149d32-4b2f-493f-9e4b-d0d93475acde">Результаты вывода XslTransform</related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public System.Xml.XmlReader Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlReader Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Function Transform (input As IXPathNavigable, args As XsltArgumentList, resolver As XmlResolver) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlReader ^ Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltArgumentList * System.Xml.XmlResolver -&gt; System.Xml.XmlReader" Usage="xslTransform.Transform (input, args, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input">Объект, реализующий интерфейс <see cref="T:System.Xml.XPath.IXPathNavigable" />. В платформе .NET Framework это может быть либо объект <see cref="T:System.Xml.XmlNode" /> (обычно <see cref="T:System.Xml.XmlDocument" />), либо объект <see cref="T:System.Xml.XPath.XPathDocument" />, содержащий преобразуемые данные.</param>
        <param name="args">Объект <see cref="T:System.Xml.Xsl.XsltArgumentList" />, содержащий имена аргументов с указанием пространства имен, используемый в качестве входных данных для преобразования.</param>
        <param name="resolver">Объект <see cref="T:System.Xml.XmlResolver" />, используемый для разрешения функции XSLT <c>document()</c>. Если значение равно <see langword="null" />, функция <c>document()</c> не разрешается.  
  
<see cref="T:System.Xml.XmlResolver" /> не кэшируется после завершения метода <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)" />.</param>
        <summary>Преобразует данные XML в <see cref="T:System.Xml.XPath.IXPathNavigable" />, используя указанные аргументы <paramref name="args" />, результат выводит в <see cref="T:System.Xml.XmlReader" />.</summary>
        <returns>Объект <see cref="T:System.Xml.XmlReader" />, содержащий результат преобразования.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Класс <xref:System.Xml.Xsl.XslTransform> устарел в .NET Framework версии 2,0. Класс <xref:System.Xml.Xsl.XslCompiledTransform> — это новый процессор XSLT. Дополнительные сведения см. в разделе [использование класса XslCompiledTransform](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) и [Миграция из класса XslTransform](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).  
  
 <xref:System.Xml.Xsl.XslTransform> поддерживает синтаксис XSLT 1,0. Таблица стилей XSLT должна включать объявление пространства имен `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.  
  
 `args` сопоставляются с элементами `xsl:param`, определенными в таблице стилей. Элемент `xsl:output` не поддерживается при размещении в <xref:System.Xml.XmlReader> (элемент `xsl:output` игнорируется). Дополнительные сведения см. [в разделе выводы из XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) .  
  
 Этот метод позволяет выполнить асинхронное преобразование исходного документа.  
  
 Преобразования применяются к документу в целом. Иными словами, если передать узел, отличный от корневого узла документа, это не помешает процессу преобразования обратиться ко всем узлам загружаемого документа. Для преобразования фрагмента узла необходимо создать <xref:System.Xml.XmlDocument>, содержащий только фрагмент узла, и передать его <xref:System.Xml.XmlDocument> методу <xref:System.Xml.Xsl.XslTransform.Transform%2A>.  
  
 В следующем примере выполняется преобразование фрагмента узла.  
  
```csharp  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out, null);  
```  
  
 В этом примере в качестве входных данных используются `library.xml` и `print_root.xsl` файлы, а в консоли выводятся следующие данные.  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```xml  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```xml  
<stylesheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />   
  <template match="/">  
     Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</stylesheet>  
```  
  
   
  
## Examples  
 Следующий пример преобразует XML-документ и выводит результаты в `XmlReader`. <xref:System.Xml.XmlUrlResolver> с необходимыми учетными данными используется для обработки любых функций XSLT `document()`.  
  
 [!code-cpp[XslTransform.Transform4#1](~/samples/snippets/cpp/VS_Snippets_Data/XslTransform.Transform4/CPP/trans_snip3.cpp#1)]
 [!code-csharp[XslTransform.Transform4#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Transform4/CS/trans_snip3.cs#1)]
 [!code-vb[XslTransform.Transform4#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Transform4/VB/trans_snip3.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab">Реализация поведения по выбору в классе XslTransform</related>
        <related type="Article" href="https://msdn.microsoft.com/library/8e149d32-4b2f-493f-9e4b-d0d93475acde">Результаты вывода XslTransform</related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args, class System.Xml.XmlWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, args As XsltArgumentList, output As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::Xml::XmlWriter ^ output);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltArgumentList * System.Xml.XmlWriter -&gt; unit" Usage="xslTransform.Transform (input, args, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass XmlResolver to Transform() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="input">Объект, реализующий интерфейс <see cref="T:System.Xml.XPath.IXPathNavigable" />. В платформе .NET Framework это может быть либо объект <see cref="T:System.Xml.XmlNode" /> (обычно <see cref="T:System.Xml.XmlDocument" />), либо объект <see cref="T:System.Xml.XPath.XPathDocument" />, содержащий преобразуемые данные.</param>
        <param name="args">Объект <see cref="T:System.Xml.Xsl.XsltArgumentList" />, содержащий имена аргументов с указанием пространства имен, используемый в качестве входных данных для преобразования.</param>
        <param name="output">Модуль записи <see cref="T:System.Xml.XmlWriter" />, в который нужно направить выход.</param>
        <summary>Преобразует данные XML в <see cref="T:System.Xml.XPath.IXPathNavigable" />, используя указанные аргументы <paramref name="args" />, результат выводит в <see cref="T:System.Xml.XmlWriter" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Класс <xref:System.Xml.Xsl.XslTransform> устарел в .NET Framework версии 2,0. Класс <xref:System.Xml.Xsl.XslCompiledTransform> — это новый процессор XSLT. Дополнительные сведения см. в разделе [использование класса XslCompiledTransform](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) и [Миграция из класса XslTransform](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).  
  
 <xref:System.Xml.Xsl.XslTransform> поддерживает синтаксис XSLT 1,0. Таблица стилей XSLT должна включать объявление пространства имен `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.  
  
> [!NOTE]
>  Этот метод устарел. Значение свойства <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> определяет, как разрешается функция XSLT `document()`. Рекомендуется использовать метод <xref:System.Xml.Xsl.XslTransform.Transform%2A>, который принимает объект <xref:System.Xml.XmlResolver> в качестве одного из своих аргументов.  
  
 `args` сопоставляются с элементами `xsl:param`, определенными в таблице стилей. Элемент `xsl:output` не поддерживается при размещении в <xref:System.Xml.XmlWriter> (`xsl:output` игнорируется). Дополнительные сведения см. [в разделе выводы из XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) .  
  
 Преобразования применяются к документу в целом. Иными словами, если передать узел, отличный от корневого узла документа, это не помешает процессу преобразования обратиться ко всем узлам загружаемого документа. Чтобы преобразовать фрагмент узла, необходимо создать <xref:System.Xml.XmlDocument>, содержащий только фрагмент узла, и передать его <xref:System.Xml.XmlDocument> методу <xref:System.Xml.Xsl.XslTransform.Transform%2A>.  
  
 В следующем примере выполняется преобразование фрагмента узла.  
  
```csharp  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out);  
```  
  
 В этом примере в качестве входных данных используются `library.xml` и `print_root.xsl` файлы, а в консоли выводятся следующие данные.  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```xml  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```xml  
<stylesheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />  
  <template match="/">  
  Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</stylesheet>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">При обработке преобразования XSLT возникла ошибка.  
  
Примечание. Это поведение было изменено по сравнению с предыдущими версиями. Исключение <see cref="T:System.Xml.Xsl.XsltException" /> создается при использовании версии 1.1 или более ранней версии платформы Microsoft .NET Framework.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab">Реализация поведения по выбору в классе XslTransform</related>
        <related type="Article" href="https://msdn.microsoft.com/library/8e149d32-4b2f-493f-9e4b-d0d93475acde">Результаты вывода XslTransform</related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.IO.Stream output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.Stream output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XPathNavigator, args As XsltArgumentList, output As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::Stream ^ output);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.XPathNavigator * System.Xml.Xsl.XsltArgumentList * System.IO.Stream -&gt; unit" Usage="xslTransform.Transform (input, args, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass XmlResolver to Transform() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="input">Объект <see cref="T:System.Xml.XPath.XPathNavigator" />, содержащий преобразуемые данные.</param>
        <param name="args">Объект <see cref="T:System.Xml.Xsl.XsltArgumentList" />, содержащий имена аргументов с указанием пространства имен, используемый в качестве входных данных для преобразования.</param>
        <param name="output">Поток, в который требуется направить вывод.</param>
        <summary>Преобразует данные XML в <see cref="T:System.Xml.XPath.XPathNavigator" />, используя указанные аргументы <paramref name="args" />, результат выводит в <see cref="T:System.IO.Stream" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Класс <xref:System.Xml.Xsl.XslTransform> устарел в .NET Framework версии 2,0. Класс <xref:System.Xml.Xsl.XslCompiledTransform> — это новый процессор XSLT. Дополнительные сведения см. в разделе [использование класса XslCompiledTransform](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) и [Миграция из класса XslTransform](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).  
  
 <xref:System.Xml.Xsl.XslTransform> поддерживает синтаксис XSLT 1,0. Таблица стилей XSLT должна включать объявление пространства имен `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.  
  
 `args` сопоставляются с элементами `xsl:param`, определенными в таблице стилей. Выделенные преобразования применяются к документу в целом. Иными словами, если текущий узел задан в дереве узлов, отличном от корневого узла документа, это не мешает процессу преобразования получить доступ ко всем узлам в загруженном документе. После выполнения преобразования <xref:System.Xml.XPath.XPathNavigator> остается в исходном состоянии. Это означает, что узел, который является текущим до процесса преобразования, остается текущим узлом после вызова метода <xref:System.Xml.Xsl.XslTransform.Transform%2A>.  
  
 Сведения о том, какие атрибуты `xsl:output` поддерживаются, см. в разделе [выходные данные из XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) .  
  
> [!NOTE]
>  Этот метод устарел. Значение свойства <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> определяет, как разрешается функция XSLT `document()`. Рекомендуется использовать метод <xref:System.Xml.Xsl.XslTransform.Transform%2A>, который принимает объект <xref:System.Xml.XmlResolver> в качестве одного из своих аргументов.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">При обработке преобразования XSLT возникла ошибка.  
  
Примечание. Это поведение было изменено по сравнению с предыдущими версиями. Исключение <see cref="T:System.Xml.Xsl.XsltException" /> создается при использовании версии 1.1 или более ранней версии платформы Microsoft .NET Framework.</exception>
        <altmember cref="T:System.Xml.Xsl.XsltArgumentList" />
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab">Реализация поведения по выбору в классе XslTransform</related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XPathNavigator, args As XsltArgumentList, output As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::TextWriter ^ output);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.XPathNavigator * System.Xml.Xsl.XsltArgumentList * System.IO.TextWriter -&gt; unit" Usage="xslTransform.Transform (input, args, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass XmlResolver to Transform() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="input">Объект <see cref="T:System.Xml.XPath.XPathNavigator" />, содержащий преобразуемые данные.</param>
        <param name="args">Объект <see cref="T:System.Xml.Xsl.XsltArgumentList" />, содержащий имена аргументов с указанием пространства имен, используемый в качестве входных данных для преобразования.</param>
        <param name="output">Модуль записи <see cref="T:System.IO.TextWriter" />, в который нужно направить выход.</param>
        <summary>Преобразует данные XML в <see cref="T:System.Xml.XPath.XPathNavigator" />, используя указанные аргументы <paramref name="args" />, результат выводит в <see cref="T:System.IO.TextWriter" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Класс <xref:System.Xml.Xsl.XslTransform> устарел в .NET Framework версии 2,0. Класс <xref:System.Xml.Xsl.XslCompiledTransform> — это новый процессор XSLT. Дополнительные сведения см. в разделе [использование класса XslCompiledTransform](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) и [Миграция из класса XslTransform](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).  
  
 <xref:System.Xml.Xsl.XslTransform> поддерживает синтаксис XSLT 1,0. Таблица стилей XSLT должна включать объявление пространства имен `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.  
  
 `args` сопоставляются с элементами `xsl:param`, определенными в таблице стилей. Выделенные преобразования применяются к документу в целом. Иными словами, если текущий узел задан в дереве узлов, отличном от корневого узла документа, это не мешает процессу преобразования получить доступ ко всем узлам в загруженном документе. После выполнения преобразования <xref:System.Xml.XPath.XPathNavigator> остается в исходном состоянии. Это означает, что узел, который является текущим до процесса преобразования, остается текущим узлом после вызова метода <xref:System.Xml.Xsl.XslTransform.Transform%2A>.  
  
 Атрибут Encoding элемента `xsl:output` не поддерживается при выводе в <xref:System.IO.TextWriter>. Сведения о том, какие атрибуты `xsl:output` поддерживаются, см. в разделе [выходные данные из XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) .  
  
> [!NOTE]
>  Этот метод устарел. Значение свойства <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> определяет, как разрешается функция XSLT `document()`. Рекомендуется использовать метод <xref:System.Xml.Xsl.XslTransform.Transform%2A>, который принимает объект <xref:System.Xml.XmlResolver> в качестве одного из своих аргументов.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">При обработке преобразования XSLT возникла ошибка.  
  
Примечание. Это поведение было изменено по сравнению с предыдущими версиями. Исключение <see cref="T:System.Xml.Xsl.XsltException" /> создается при использовании версии 1.1 или более ранней версии платформы Microsoft .NET Framework.</exception>
        <altmember cref="T:System.Xml.Xsl.XsltArgumentList" />
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab">Реализация поведения по выбору в классе XslTransform</related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public System.Xml.XmlReader Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlReader Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Function Transform (input As XPathNavigator, args As XsltArgumentList, resolver As XmlResolver) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlReader ^ Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.XPathNavigator * System.Xml.Xsl.XsltArgumentList * System.Xml.XmlResolver -&gt; System.Xml.XmlReader" Usage="xslTransform.Transform (input, args, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input">Объект <see cref="T:System.Xml.XPath.XPathNavigator" />, содержащий преобразуемые данные.</param>
        <param name="args">Объект <see cref="T:System.Xml.Xsl.XsltArgumentList" />, содержащий имена аргументов с указанием пространства имен, используемый в качестве входных данных для преобразования.</param>
        <param name="resolver">Объект <see cref="T:System.Xml.XmlResolver" />, используемый для разрешения функции XSLT <c>document()</c>. Если значение равно <see langword="null" />, функция <c>document()</c> не разрешается.  
  
<see cref="T:System.Xml.XmlResolver" /> не кэшируется после завершения метода <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)" />.</param>
        <summary>Преобразует данные XML в <see cref="T:System.Xml.XPath.XPathNavigator" />, используя указанные аргументы <paramref name="args" />, результат выводит в <see cref="T:System.Xml.XmlReader" />.</summary>
        <returns>Объект <see cref="T:System.Xml.XmlReader" />, содержащий результат преобразования.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Класс <xref:System.Xml.Xsl.XslTransform> устарел в .NET Framework версии 2,0. Класс <xref:System.Xml.Xsl.XslCompiledTransform> — это новый процессор XSLT. Дополнительные сведения см. в разделе [использование класса XslCompiledTransform](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) и [Миграция из класса XslTransform](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).  
  
 <xref:System.Xml.Xsl.XslTransform> поддерживает синтаксис XSLT 1,0. Таблица стилей XSLT должна включать объявление пространства имен `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.  
  
 `args` сопоставляются с элементами `xsl:param`, определенными в таблице стилей. Выделенные преобразования применяются к документу в целом. Иными словами, если текущий узел задан в дереве узлов, отличном от корневого узла документа, это не мешает процессу преобразования получить доступ ко всем узлам в загруженном документе. После выполнения преобразования <xref:System.Xml.XPath.XPathNavigator> остается в исходном состоянии. Это означает, что узел, который является текущим до процесса преобразования, остается текущим узлом после вызова метода <xref:System.Xml.Xsl.XslTransform.Transform%2A>.  
  
 Поскольку <xref:System.Xml.XmlReader> предоставляет выходные данные только для чтения, элемент `xsl:output` игнорируется. Дополнительные сведения см. [в разделе выводы из XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) .  
  
 Этот метод позволяет выполнить асинхронное преобразование исходного документа.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">При обработке преобразования XSLT возникла ошибка.  
  
Примечание. Это поведение было изменено по сравнению с предыдущими версиями. Исключение <see cref="T:System.Xml.Xsl.XsltException" /> создается при использовании версии 1.1 или более ранней версии платформы Microsoft .NET Framework.</exception>
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab">Реализация поведения по выбору в классе XslTransform</related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args, class System.Xml.XmlWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XPathNavigator, args As XsltArgumentList, output As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::Xml::XmlWriter ^ output);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.XPathNavigator * System.Xml.Xsl.XsltArgumentList * System.Xml.XmlWriter -&gt; unit" Usage="xslTransform.Transform (input, args, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass XmlResolver to Transform() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="input">Объект <see cref="T:System.Xml.XPath.XPathNavigator" />, содержащий преобразуемые данные.</param>
        <param name="args">Объект <see cref="T:System.Xml.Xsl.XsltArgumentList" />, содержащий имена аргументов с указанием пространства имен, используемый в качестве входных данных для преобразования.</param>
        <param name="output">Модуль записи <see cref="T:System.Xml.XmlWriter" />, в который нужно направить выход.</param>
        <summary>Преобразует данные XML в <see cref="T:System.Xml.XPath.XPathNavigator" />, используя указанные аргументы, и результат выводит в <see cref="T:System.Xml.XmlWriter" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Класс <xref:System.Xml.Xsl.XslTransform> устарел в .NET Framework версии 2,0. Класс <xref:System.Xml.Xsl.XslCompiledTransform> — это новый процессор XSLT. Дополнительные сведения см. в разделе [использование класса XslCompiledTransform](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) и [Миграция из класса XslTransform](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).  
  
 <xref:System.Xml.Xsl.XslTransform> поддерживает синтаксис XSLT 1,0. Таблица стилей XSLT должна включать объявление пространства имен `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.  
  
 `args` сопоставляются с элементами `xsl:param`, определенными в таблице стилей. Выделенные преобразования применяются к документу в целом. Иными словами, если текущий узел задан в дереве узлов, отличном от корневого узла документа, это не мешает процессу преобразования получить доступ ко всем узлам в загруженном документе. После выполнения преобразования <xref:System.Xml.XPath.XPathNavigator> остается в исходном состоянии. Это означает, что узел, который является текущим до процесса преобразования, остается текущим узлом после вызова метода <xref:System.Xml.Xsl.XslTransform.Transform%2A>.  
  
 Элемент `xsl:output` не поддерживается при размещении в <xref:System.Xml.XmlWriter> (`xsl:output` игнорируется). Дополнительные сведения см. [в разделе выводы из XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) .  
  
> [!NOTE]
>  Этот метод устарел. Значение свойства <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> определяет, как разрешается функция XSLT `document()`. Рекомендуется использовать метод <xref:System.Xml.Xsl.XslTransform.Transform%2A>, который принимает объект <xref:System.Xml.XmlResolver> в качестве одного из своих аргументов.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">При обработке преобразования XSLT возникла ошибка.  
  
Примечание. Это поведение было изменено по сравнению с предыдущими версиями. Исключение <see cref="T:System.Xml.Xsl.XsltException" /> создается при использовании версии 1.1 или более ранней версии платформы Microsoft .NET Framework.</exception>
        <altmember cref="T:System.Xml.Xsl.XsltArgumentList" />
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab">Реализация поведения по выбору в классе XslTransform</related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.IO.Stream output, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.Stream output, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, args As XsltArgumentList, output As Stream, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::Stream ^ output, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltArgumentList * System.IO.Stream * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Transform (input, args, output, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.Stream" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input">Объект, реализующий интерфейс <see cref="T:System.Xml.XPath.IXPathNavigable" />. В платформе .NET Framework это может быть либо объект <see cref="T:System.Xml.XmlNode" /> (обычно <see cref="T:System.Xml.XmlDocument" />), либо объект <see cref="T:System.Xml.XPath.XPathDocument" />, содержащий преобразуемые данные.</param>
        <param name="args">Объект <see cref="T:System.Xml.Xsl.XsltArgumentList" />, содержащий имена аргументов с указанием пространства имен, используемый в качестве входных данных для преобразования.</param>
        <param name="output">Поток, в который требуется направить вывод.</param>
        <param name="resolver">Объект <see cref="T:System.Xml.XmlResolver" />, используемый для разрешения функции XSLT <c>document()</c>. Если значение равно <see langword="null" />, функция <c>document()</c> не разрешается.  
  
<see cref="T:System.Xml.XmlResolver" /> не кэшируется после завершения метода <see cref="Overload:System.Xml.Xsl.XslTransform.Transform" />.</param>
        <summary>Преобразует данные XML в <see cref="T:System.Xml.XPath.IXPathNavigable" />, используя указанные аргументы <paramref name="args" />, результат выводит в <see cref="T:System.IO.Stream" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Класс <xref:System.Xml.Xsl.XslTransform> устарел в .NET Framework версии 2,0. Класс <xref:System.Xml.Xsl.XslCompiledTransform> — это новый процессор XSLT. Дополнительные сведения см. в разделе [использование класса XslCompiledTransform](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) и [Миграция из класса XslTransform](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).  
  
 <xref:System.Xml.Xsl.XslTransform> поддерживает синтаксис XSLT 1,0. Таблица стилей XSLT должна включать объявление пространства имен `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.  
  
 `args` сопоставляются с элементами `xsl:param`, определенными в таблице стилей.  
  
 Преобразования применяются к документу в целом. Иными словами, если передать узел, отличный от корневого узла документа, это не помешает процессу преобразования обратиться ко всем узлам загружаемого документа. Чтобы преобразовать фрагмент узла, необходимо создать <xref:System.Xml.XmlDocument>, содержащий только фрагмент узла, и передать его <xref:System.Xml.XmlDocument> методу <xref:System.Xml.Xsl.XslTransform.Transform%2A>.  
  
 В следующем примере выполняется преобразование фрагмента узла.  
  
```csharp  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out, null);  
```  
  
 В этом примере в качестве входных данных используются `library.xml` и `print_root.xsl` файлы, а в консоли выводятся следующие данные.  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```xml  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```xml  
<stylesheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />   
  <template match="/">  
     Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</stylesheet>  
```  
  
   
  
## Examples  
 В следующем примере выполняется преобразование на странице ASP.NET.  
  
 [!code-aspx-csharp[XslTransform.Transform5#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Transform5/CS/transcs.aspx#1)]
 [!code-aspx-vb[XslTransform.Transform5#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Transform5/VB/transvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">При обработке преобразования XSLT возникла ошибка.  
  
Примечание. Это поведение было изменено по сравнению с предыдущими версиями. Исключение <see cref="T:System.Xml.Xsl.XsltException" /> создается при использовании версии 1.1 или более ранней версии платформы Microsoft .NET Framework.</exception>
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab">Реализация поведения по выбору в классе XslTransform</related>
        <related type="Article" href="https://msdn.microsoft.com/library/8e149d32-4b2f-493f-9e4b-d0d93475acde">Результаты вывода XslTransform</related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.IO.TextWriter output, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.TextWriter output, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, args As XsltArgumentList, output As TextWriter, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::TextWriter ^ output, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltArgumentList * System.IO.TextWriter * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Transform (input, args, output, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input">Объект, реализующий интерфейс <see cref="T:System.Xml.XPath.IXPathNavigable" />. В платформе .NET Framework это может быть либо объект <see cref="T:System.Xml.XmlNode" /> (обычно <see cref="T:System.Xml.XmlDocument" />), либо объект <see cref="T:System.Xml.XPath.XPathDocument" />, содержащий преобразуемые данные.</param>
        <param name="args">Объект <see cref="T:System.Xml.Xsl.XsltArgumentList" />, содержащий имена аргументов с указанием пространства имен, используемый в качестве входных данных для преобразования.</param>
        <param name="output">Модуль записи <see cref="T:System.IO.TextWriter" />, в который нужно направить выход.</param>
        <param name="resolver">Объект <see cref="T:System.Xml.XmlResolver" />, используемый для разрешения функции XSLT <c>document()</c>. Если значение равно <see langword="null" />, функция <c>document()</c> не разрешается.  
  
<see cref="T:System.Xml.XmlResolver" /> не кэшируется после завершения метода <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)" />.</param>
        <summary>Преобразует данные XML в <see cref="T:System.Xml.XPath.IXPathNavigable" />, используя указанные аргументы <paramref name="args" />, результат выводит в <see cref="T:System.IO.TextWriter" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Класс <xref:System.Xml.Xsl.XslTransform> устарел в .NET Framework версии 2,0. Класс <xref:System.Xml.Xsl.XslCompiledTransform> — это новый процессор XSLT. Дополнительные сведения см. в разделе [использование класса XslCompiledTransform](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) и [Миграция из класса XslTransform](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).  
  
 <xref:System.Xml.Xsl.XslTransform> поддерживает синтаксис XSLT 1,0. Таблица стилей XSLT должна включать объявление пространства имен `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.  
  
 `args` сопоставляются с элементами `xsl:param`, определенными в таблице стилей.  
  
 Атрибут Encoding элемента `xsl:output` не поддерживается при выводе в <xref:System.IO.TextWriter>. Сведения о том, какие атрибуты `xsl:output` поддерживаются, см. в разделе [выходные данные из XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) .  
  
 Преобразования применяются к документу в целом. Иными словами, если передать узел, отличный от корневого узла документа, это не помешает процессу преобразования обратиться ко всем узлам загружаемого документа. Чтобы преобразовать фрагмент узла, необходимо создать <xref:System.Xml.XmlDocument>, содержащий только фрагмент узла, и передать его <xref:System.Xml.XmlDocument> методу <xref:System.Xml.Xsl.XslTransform.Transform%2A>.  
  
 В следующем примере выполняется преобразование фрагмента узла.  
  
```csharp  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out, null);  
```  
  
 В этом примере в качестве входных данных используются `library.xml` и `print_root.xsl` файлы, а в консоли выводятся следующие данные.  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```xml  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```xml  
<stylesheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />   
  <template match="/">  
     Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</stylesheet>  
```  
  
   
  
## Examples  
 В следующем примере преобразуется XML-файл и выводится строка HTML. Классы <xref:System.IO.StringReader> и <xref:System.IO.StringWriter> используются для чтения и записи строк.  
  
 [!code-csharp[XslTransform.Transform6#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Transform6/CS/transstring.cs#1)]
 [!code-vb[XslTransform.Transform6#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Transform6/VB/transstring.vb#1)]  
  
 В примере в качестве входных данных используется файл `books.xml`.  
  
 [!code-xml[XslTransform.Transform6#2](~/samples/snippets/xml/VS_Snippets_Data/XslTransform.Transform6/XML/books.xml#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">При обработке преобразования XSLT возникла ошибка.  
  
Примечание. Это поведение было изменено по сравнению с предыдущими версиями. Исключение <see cref="T:System.Xml.Xsl.XsltException" /> создается при использовании версии 1.1 или более ранней версии платформы Microsoft .NET Framework.</exception>
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab">Реализация поведения по выбору в классе XslTransform</related>
        <related type="Article" href="https://msdn.microsoft.com/library/8e149d32-4b2f-493f-9e4b-d0d93475acde">Результаты вывода XslTransform</related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlWriter output, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args, class System.Xml.XmlWriter output, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, args As XsltArgumentList, output As XmlWriter, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::Xml::XmlWriter ^ output, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltArgumentList * System.Xml.XmlWriter * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Transform (input, args, output, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.Xml.XmlWriter" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input">Объект, реализующий интерфейс <see cref="T:System.Xml.XPath.IXPathNavigable" />. В платформе .NET Framework это может быть либо объект <see cref="T:System.Xml.XmlNode" /> (обычно <see cref="T:System.Xml.XmlDocument" />), либо объект <see cref="T:System.Xml.XPath.XPathDocument" />, содержащий преобразуемые данные.</param>
        <param name="args">Объект <see cref="T:System.Xml.Xsl.XsltArgumentList" />, содержащий имена аргументов с указанием пространства имен, используемый в качестве входных данных для преобразования.</param>
        <param name="output">Модуль записи <see cref="T:System.Xml.XmlWriter" />, в который нужно направить выход.</param>
        <param name="resolver">Объект <see cref="T:System.Xml.XmlResolver" />, используемый для разрешения функции XSLT <c>document()</c>. Если значение равно <see langword="null" />, функция <c>document()</c> не разрешается.  
  
<see cref="T:System.Xml.XmlResolver" /> не кэшируется после завершения метода <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)" />.</param>
        <summary>Преобразует данные XML в <see cref="T:System.Xml.XPath.IXPathNavigable" />, используя указанные аргументы <paramref name="args" />, результат выводит в <see cref="T:System.Xml.XmlWriter" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Класс <xref:System.Xml.Xsl.XslTransform> устарел в .NET Framework версии 2,0. Класс <xref:System.Xml.Xsl.XslCompiledTransform> — это новый процессор XSLT. Дополнительные сведения см. в разделе [использование класса XslCompiledTransform](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) и [Миграция из класса XslTransform](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).  
  
 <xref:System.Xml.Xsl.XslTransform> поддерживает синтаксис XSLT 1,0. Таблица стилей XSLT должна включать объявление пространства имен `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.  
  
 `args` сопоставляются с элементами `xsl:param`, определенными в таблице стилей. Элемент `xsl:output` не поддерживается при размещении в <xref:System.Xml.XmlWriter> (`xsl:output` игнорируется). Дополнительные сведения см. [в разделе выводы из XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) .  
  
 Преобразования применяются к документу в целом. Иными словами, если передать узел, отличный от корневого узла документа, это не помешает процессу преобразования обратиться ко всем узлам загружаемого документа. Чтобы преобразовать фрагмент узла, необходимо создать <xref:System.Xml.XmlDocument>, содержащий только фрагмент узла, и передать его <xref:System.Xml.XmlDocument> методу <xref:System.Xml.Xsl.XslTransform.Transform%2A>.  
  
 В следующем примере выполняется преобразование фрагмента узла.  
  
```csharp  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out, null);  
```  
  
 В этом примере в качестве входных данных используются `library.xml` и `print_root.xsl` файлы, а в консоли выводятся следующие данные.  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```xml  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```xml  
<stylesheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />  
  <template match="/">  
  Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</stylesheet>  
```  
  
   
  
## Examples  
 В следующем примере XML-документ преобразуется в HTML-документ. В нем отображаются номера ISBN, Title и Price для каждой книги в таблице.  
  
 [!code-cpp[Classic WebData XslTransform.Transform7 Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XslTransform.Transform7 Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XslTransform.Transform7 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/VB/source.vb#1)]  
  
 Образец использует следующие два входных файла.  
  
 `books.xml`  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/books.xml#2)]  
  
 `output.xsl`  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#3](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/output.xsl#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">При обработке преобразования XSLT возникла ошибка.  
  
Примечание. Это поведение было изменено по сравнению с предыдущими версиями. Исключение <see cref="T:System.Xml.Xsl.XsltException" /> создается при использовании версии 1.1 или более ранней версии платформы Microsoft .NET Framework.</exception>
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab">Реализация поведения по выбору в классе XslTransform</related>
        <related type="Article" href="https://msdn.microsoft.com/library/8e149d32-4b2f-493f-9e4b-d0d93475acde">Результаты вывода XslTransform</related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.IO.Stream output, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.Stream output, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XPathNavigator, args As XsltArgumentList, output As Stream, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::Stream ^ output, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.XPathNavigator * System.Xml.Xsl.XsltArgumentList * System.IO.Stream * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Transform (input, args, output, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.Stream" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input">Объект <see cref="T:System.Xml.XPath.XPathNavigator" />, содержащий преобразуемые данные.</param>
        <param name="args">Объект <see cref="T:System.Xml.Xsl.XsltArgumentList" />, содержащий имена аргументов с указанием пространства имен, используемый в качестве входных данных для преобразования.</param>
        <param name="output">Поток, в который требуется направить вывод.</param>
        <param name="resolver">Объект <see cref="T:System.Xml.XmlResolver" />, используемый для разрешения функции XSLT <c>document()</c>. Если значение равно <see langword="null" />, функция <c>document()</c> не разрешается.  
  
<see cref="T:System.Xml.XmlResolver" /> не кэшируется после завершения метода <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)" />.</param>
        <summary>Преобразует данные XML в <see cref="T:System.Xml.XPath.XPathNavigator" />, используя указанные аргументы <paramref name="args" />, результат выводит в <see cref="T:System.IO.Stream" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Класс <xref:System.Xml.Xsl.XslTransform> устарел в .NET Framework версии 2,0. Класс <xref:System.Xml.Xsl.XslCompiledTransform> — это новый процессор XSLT. Дополнительные сведения см. в разделе [использование класса XslCompiledTransform](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) и [Миграция из класса XslTransform](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).  
  
 <xref:System.Xml.Xsl.XslTransform> поддерживает синтаксис XSLT 1,0. Таблица стилей XSLT должна включать объявление пространства имен `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.  
  
 `args` сопоставляются с элементами `xsl:param`, определенными в таблице стилей. Выделенные преобразования применяются к документу в целом. Иными словами, если текущий узел задан в дереве узлов, отличном от корневого узла документа, это не мешает процессу преобразования получить доступ ко всем узлам в загруженном документе. После выполнения преобразования <xref:System.Xml.XPath.XPathNavigator> остается в исходном состоянии. Это означает, что узел, который является текущим до процесса преобразования, остается текущим узлом после вызова метода <xref:System.Xml.Xsl.XslTransform.Transform%2A>.  
  
 Сведения о том, какие атрибуты `xsl:output` поддерживаются, см. в разделе [выходные данные из XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) .  
  
   
  
## Examples  
 В следующем примере таблица Customer загружается в <xref:System.Xml.XmlDataDocument> и выполняется преобразование XSLT для извлечения данных клиента в таблицу HTML. В примере используется база данных Northwind Microsoft SQL Server 2000.  
  
 [!code-csharp[XmlDataDocument.CreateNavigator#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlDataDocument.CreateNavigator/CS/dataset_trans.cs#1)]
 [!code-vb[XmlDataDocument.CreateNavigator#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlDataDocument.CreateNavigator/VB/dataset_trans.vb#1)]  
  
 В примере в качестве входных данных используется файл `customers.xsl`.  
  
 [!code-xml[XmlDataDocument.CreateNavigator#2](~/samples/snippets/xml/VS_Snippets_Data/XmlDataDocument.CreateNavigator/XML/customers.xsl#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">При обработке преобразования XSLT возникла ошибка.  
  
Примечание. Это поведение было изменено по сравнению с предыдущими версиями. Исключение <see cref="T:System.Xml.Xsl.XsltException" /> создается при использовании версии 1.1 или более ранней версии платформы Microsoft .NET Framework.</exception>
        <altmember cref="T:System.Xml.Xsl.XsltArgumentList" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab">Реализация поведения по выбору в классе XslTransform</related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.IO.TextWriter output, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.TextWriter output, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XPathNavigator, args As XsltArgumentList, output As TextWriter, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::TextWriter ^ output, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.XPathNavigator * System.Xml.Xsl.XsltArgumentList * System.IO.TextWriter * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Transform (input, args, output, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input">Объект <see cref="T:System.Xml.XPath.XPathNavigator" />, содержащий преобразуемые данные.</param>
        <param name="args">Объект <see cref="T:System.Xml.Xsl.XsltArgumentList" />, содержащий имена аргументов с указанием пространства имен, используемый в качестве входных данных для преобразования.</param>
        <param name="output">Модуль записи <see cref="T:System.IO.TextWriter" />, в который нужно направить выход.</param>
        <param name="resolver">Объект <see cref="T:System.Xml.XmlResolver" />, используемый для разрешения функции XSLT <c>document()</c>. Если значение равно <see langword="null" />, функция <c>document()</c> не разрешается.  
  
<see cref="T:System.Xml.XmlResolver" /> не кэшируется после завершения метода <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)" />.</param>
        <summary>Преобразует данные XML в <see cref="T:System.Xml.XPath.XPathNavigator" />, используя указанные аргументы <paramref name="args" />, результат выводит в <see cref="T:System.IO.TextWriter" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Класс <xref:System.Xml.Xsl.XslTransform> устарел в .NET Framework версии 2,0. Класс <xref:System.Xml.Xsl.XslCompiledTransform> — это новый процессор XSLT. Дополнительные сведения см. в разделе [использование класса XslCompiledTransform](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) и [Миграция из класса XslTransform](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).  
  
 <xref:System.Xml.Xsl.XslTransform> поддерживает синтаксис XSLT 1,0. Таблица стилей XSLT должна включать объявление пространства имен `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.  
  
 `args` сопоставляются с элементами `xsl:param`, определенными в таблице стилей. Выделенные преобразования применяются к документу в целом. Иными словами, если текущий узел задан в дереве узлов, отличном от корневого узла документа, это не мешает процессу преобразования получить доступ ко всем узлам в загруженном документе. После выполнения преобразования <xref:System.Xml.XPath.XPathNavigator> остается в исходном состоянии. Это означает, что узел, который является текущим до процесса преобразования, остается текущим узлом после вызова метода <xref:System.Xml.Xsl.XslTransform.Transform%2A>.  
  
 Атрибут Encoding элемента `xsl:output` не поддерживается при выводе в <xref:System.IO.TextWriter>. Сведения о том, какие атрибуты `xsl:output` поддерживаются, см. в разделе [выходные данные из XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) .  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">При обработке преобразования XSLT возникла ошибка.  
  
Примечание. Это поведение было изменено по сравнению с предыдущими версиями. Исключение <see cref="T:System.Xml.Xsl.XsltException" /> создается при использовании версии 1.1 или более ранней версии платформы Microsoft .NET Framework.</exception>
        <altmember cref="T:System.Xml.Xsl.XsltArgumentList" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab">Реализация поведения по выбору в классе XslTransform</related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlWriter output, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args, class System.Xml.XmlWriter output, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XPathNavigator, args As XsltArgumentList, output As XmlWriter, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::Xml::XmlWriter ^ output, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.XPathNavigator * System.Xml.Xsl.XsltArgumentList * System.Xml.XmlWriter * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Transform (input, args, output, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.Xml.XmlWriter" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input">Объект <see cref="T:System.Xml.XPath.XPathNavigator" />, содержащий преобразуемые данные.</param>
        <param name="args">Объект <see cref="T:System.Xml.Xsl.XsltArgumentList" />, содержащий имена аргументов с указанием пространства имен, используемый в качестве входных данных для преобразования.</param>
        <param name="output">Модуль записи <see cref="T:System.Xml.XmlWriter" />, в который нужно направить выход.</param>
        <param name="resolver">Объект <see cref="T:System.Xml.XmlResolver" />, используемый для разрешения функции XSLT <c>document()</c>. Если значение равно <see langword="null" />, функция <c>document()</c> не разрешается.  
  
<see cref="T:System.Xml.XmlResolver" /> не кэшируется после завершения метода <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)" />.</param>
        <summary>Преобразует данные XML в <see cref="T:System.Xml.XPath.XPathNavigator" />, используя указанные аргументы, и результат выводит в <see cref="T:System.Xml.XmlWriter" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Класс <xref:System.Xml.Xsl.XslTransform> устарел в .NET Framework версии 2,0. Класс <xref:System.Xml.Xsl.XslCompiledTransform> — это новый процессор XSLT. Дополнительные сведения см. в разделе [использование класса XslCompiledTransform](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) и [Миграция из класса XslTransform](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).  
  
 <xref:System.Xml.Xsl.XslTransform> поддерживает синтаксис XSLT 1,0. Таблица стилей XSLT должна включать объявление пространства имен `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.  
  
 `args` сопоставляются с элементами `xsl:param`, определенными в таблице стилей. Выделенные преобразования применяются к документу в целом. Иными словами, если текущий узел задан в дереве узлов, отличном от корневого узла документа, это не мешает процессу преобразования получить доступ ко всем узлам в загруженном документе. После выполнения преобразования <xref:System.Xml.XPath.XPathNavigator> остается в исходном состоянии. Это означает, что узел, который является текущим до процесса преобразования, остается текущим узлом после вызова метода <xref:System.Xml.Xsl.XslTransform.Transform%2A>.  
  
 Элемент `xsl:output` не поддерживается при размещении в <xref:System.Xml.XmlWriter> (`xsl:output` игнорируется). Дополнительные сведения см. [в разделе выводы из XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) .  
  
   
  
## Examples  
 В следующем примере выполняется загрузка и редактирование XML-документа перед выполнением преобразования XSLT.  
  
 [!code-cpp[XslTransform.Transform2#1](~/samples/snippets/cpp/VS_Snippets_Data/XslTransform.Transform2/CPP/trans_snip.cpp#1)]
 [!code-csharp[XslTransform.Transform2#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Transform2/CS/trans_snip.cs#1)]
 [!code-vb[XslTransform.Transform2#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Transform2/VB/trans_snip.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">При обработке преобразования XSLT возникла ошибка.  
  
Примечание. Это поведение было изменено по сравнению с предыдущими версиями. Исключение <see cref="T:System.Xml.Xsl.XsltException" /> создается при использовании версии 1.1 или более ранней версии платформы Microsoft .NET Framework.</exception>
        <altmember cref="T:System.Xml.Xsl.XsltArgumentList" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab">Реализация поведения по выбору в классе XslTransform</related>
      </Docs>
    </Member>
    <Member MemberName="XmlResolver">
      <MemberSignature Language="C#" Value="public System.Xml.XmlResolver XmlResolver { set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlResolver XmlResolver" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Xsl.XslTransform.XmlResolver" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlResolver As XmlResolver" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlResolver ^ XmlResolver {  void set(System::Xml::XmlResolver ^ value); };" />
      <MemberSignature Language="F#" Value="member this.XmlResolver : System.Xml.XmlResolver" Usage="System.Xml.Xsl.XslTransform.XmlResolver" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass XmlResolver to Transform() method")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XmlResolver</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Устанавливает значение свойства <see cref="T:System.Xml.XmlResolver" />, используемого для обработки внешних ресурсов при вызове метода<see cref="Overload:System.Xml.Xsl.XslTransform.Transform" />.</summary>
        <value>Объект <see cref="T:System.Xml.XmlResolver" /> для использования во время преобразования. Если задано значение <see langword="null" />, функция XSLT <c>Document ()</c> не разрешается.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Класс <xref:System.Xml.Xsl.XslTransform> устарел в .NET Framework версии 2,0. Класс <xref:System.Xml.Xsl.XslCompiledTransform> — это новый процессор XSLT. Дополнительные сведения см. в разделе [использование класса XslCompiledTransform](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) и [Миграция из класса XslTransform](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).  
  
 В версии 1,1 .NET Framework уровень доверия приложения определяет поведение по умолчанию.  
  
 `Fully trusted code:` <xref:System.Xml.XmlUrlResolver> по умолчанию без учетных данных пользователя используется для разрешения функции `document()`. Если для доступа к внешнему ресурсу требуется проверка подлинности, используйте это свойство, чтобы указать <xref:System.Xml.XmlResolver> с необходимыми учетными данными.  
  
 `Semi-trusted code:` свойство имеет значение `null`, что означает, что функция `document()` не разрешена. Так как для указания <xref:System.Xml.XmlResolver>требуется полное доверие, это свойство также не может быть установлено.  
  
 Этот сопоставитель используется при вызове функции XSLT `document()`. Он не используется для разрешения `xsl:import` и `xsl:include` элементов, упоминаемых в таблице стилей. Чтобы указать <xref:System.Xml.XmlResolver>, который будет использоваться для разрешения `xsl:import` и `xsl:include` элементов, упоминаемых в таблице стилей, используйте перегрузку <xref:System.Xml.Xsl.XslTransform.Load%2A>, которая принимает <xref:System.Xml.XmlResolver> в качестве одного из своих аргументов.  
  
> [!NOTE]
>  Это свойство является устаревшим в версии 1,1 .NET Framework. Рекомендуется указать <xref:System.Xml.XmlResolver> с помощью метода <xref:System.Xml.Xsl.XslTransform.Transform%2A>. В этом случае <xref:System.Xml.XmlResolver> не кэшируется после завершения метода <xref:System.Xml.Xsl.XslTransform.Transform%2A>.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Net.NetworkCredential" />
      </Docs>
    </Member>
  </Members>
</Type>
