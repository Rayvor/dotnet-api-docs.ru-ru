<Type Name="ModelItemDictionary" FullName="System.Activities.Presentation.Model.ModelItemDictionary">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a7c9f39d32147ac4e00838cf171032ad64453b1e" /><Meta Name="ms.sourcegitcommit" Value="a22d0855bbf24d893f43605f8b7e3a44bd9551a5" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70339268" /></Metadata><TypeSignature Language="C#" Value="public abstract class ModelItemDictionary : System.Activities.Presentation.Model.ModelItem, System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem&gt;&gt;, System.Collections.Generic.IDictionary&lt;System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem&gt;, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem&gt;&gt;, System.Collections.IDictionary, System.Collections.Specialized.INotifyCollectionChanged" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ModelItemDictionary extends System.Activities.Presentation.Model.ModelItem implements class System.Collections.Generic.ICollection`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;class System.Activities.Presentation.Model.ModelItem, class System.Activities.Presentation.Model.ModelItem&gt;&gt;, class System.Collections.Generic.IDictionary`2&lt;class System.Activities.Presentation.Model.ModelItem, class System.Activities.Presentation.Model.ModelItem&gt;, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;class System.Activities.Presentation.Model.ModelItem, class System.Activities.Presentation.Model.ModelItem&gt;&gt;, class System.Collections.ICollection, class System.Collections.IDictionary, class System.Collections.IEnumerable, class System.Collections.Specialized.INotifyCollectionChanged" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Presentation.Model.ModelItemDictionary" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ModelItemDictionary&#xA;Inherits ModelItem&#xA;Implements ICollection(Of KeyValuePair(Of ModelItem, ModelItem)), IDictionary, IDictionary(Of ModelItem, ModelItem), IEnumerable(Of KeyValuePair(Of ModelItem, ModelItem)), INotifyCollectionChanged" />
  <TypeSignature Language="C++ CLI" Value="public ref class ModelItemDictionary abstract : System::Activities::Presentation::Model::ModelItem, System::Collections::Generic::ICollection&lt;System::Collections::Generic::KeyValuePair&lt;System::Activities::Presentation::Model::ModelItem ^, System::Activities::Presentation::Model::ModelItem ^&gt;&gt;, System::Collections::Generic::IDictionary&lt;System::Activities::Presentation::Model::ModelItem ^, System::Activities::Presentation::Model::ModelItem ^&gt;, System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;System::Activities::Presentation::Model::ModelItem ^, System::Activities::Presentation::Model::ModelItem ^&gt;&gt;, System::Collections::IDictionary, System::Collections::Specialized::INotifyCollectionChanged" />
  <TypeSignature Language="F#" Value="type ModelItemDictionary = class&#xA;    inherit ModelItem&#xA;    interface IDictionary&lt;ModelItem, ModelItem&gt;&#xA;    interface ICollection&lt;KeyValuePair&lt;ModelItem, ModelItem&gt;&gt;&#xA;    interface seq&lt;KeyValuePair&lt;ModelItem, ModelItem&gt;&gt;&#xA;    interface IEnumerable&#xA;    interface IDictionary&#xA;    interface ICollection&#xA;    interface INotifyCollectionChanged" />
  <AssemblyInfo>
    <AssemblyName>System.Activities.Presentation</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Activities.Presentation.Model.ModelItem</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem&gt;&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IDictionary&lt;System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem&gt;&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IDictionary</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Specialized.INotifyCollectionChanged</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="68c07-101">Наследуется от класса <see cref="T:System.Activities.Presentation.Model.ModelItem" /> и реализует поддержку словаря пар «ключ-значение».</span><span class="sxs-lookup"><span data-stu-id="68c07-101">Derives from <see cref="T:System.Activities.Presentation.Model.ModelItem" /> and implements support for a dictionary of key/value pairs.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ModelItemDictionary ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.ModelItemDictionary.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ModelItemDictionary();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="68c07-102">Создает новый экземпляр <see cref="T:System.Activities.Presentation.Model.ModelItemDictionary" />.</span><span class="sxs-lookup"><span data-stu-id="68c07-102">Creates a new <see cref="T:System.Activities.Presentation.Model.ModelItemDictionary" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="68c07-103">Добавляет значение в словарь с указанным ключом.</span><span class="sxs-lookup"><span data-stu-id="68c07-103">Adds the value to the dictionary under the given key.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public abstract void Add (System.Activities.Presentation.Model.ModelItem key, System.Activities.Presentation.Model.ModelItem value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(class System.Activities.Presentation.Model.ModelItem key, class System.Activities.Presentation.Model.ModelItem value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.ModelItemDictionary.Add(System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Add (key As ModelItem, value As ModelItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Add(System::Activities::Presentation::Model::ModelItem ^ key, System::Activities::Presentation::Model::ModelItem ^ value);" />
      <MemberSignature Language="F#" Value="abstract member Add : System.Activities.Presentation.Model.ModelItem * System.Activities.Presentation.Model.ModelItem -&gt; unit" Usage="modelItemDictionary.Add (key, value)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IDictionary`2.Add(`0,`1)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Activities.Presentation.Model.ModelItem" />
        <Parameter Name="value" Type="System.Activities.Presentation.Model.ModelItem" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="68c07-104">Класс <see cref="T:System.Activities.Presentation.Model.ModelItem" /> представляет ключ в добавляемой паре «ключ-значение».</span><span class="sxs-lookup"><span data-stu-id="68c07-104">The <see cref="T:System.Activities.Presentation.Model.ModelItem" /> that represents the key in the key/value pair to be added.</span></span></param>
        <param name="value"><span data-ttu-id="68c07-105">Класс <see cref="T:System.Activities.Presentation.Model.ModelItem" /> представляет значение в добавляемой паре «ключ-значение».</span><span class="sxs-lookup"><span data-stu-id="68c07-105">The <see cref="T:System.Activities.Presentation.Model.ModelItem" /> that represents the value in the key/value pair to be added.</span></span></param>
        <summary><span data-ttu-id="68c07-106">Добавляет значение в словарь с указанным ключом.</span><span class="sxs-lookup"><span data-stu-id="68c07-106">Adds the value to the dictionary under the given key.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="68c07-107">Если <see cref="T:System.Activities.Presentation.Model.ModelItemDictionary" /> доступен только для чтения.</span><span class="sxs-lookup"><span data-stu-id="68c07-107">If the <see cref="T:System.Activities.Presentation.Model.ModelItemDictionary" /> is read-only.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public abstract System.Activities.Presentation.Model.ModelItem Add (object key, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Activities.Presentation.Model.ModelItem Add(object key, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.ModelItemDictionary.Add(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Add (key As Object, value As Object) As ModelItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Activities::Presentation::Model::ModelItem ^ Add(System::Object ^ key, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member Add : obj * obj -&gt; System.Activities.Presentation.Model.ModelItem" Usage="modelItemDictionary.Add (key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.Model.ModelItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="68c07-108">Ключ в добавляемой паре «ключ-значение».</span><span class="sxs-lookup"><span data-stu-id="68c07-108">The key in the key/value pair to be added.</span></span></param>
        <param name="value"><span data-ttu-id="68c07-109">Значение в добавляемой паре «ключ-значение».</span><span class="sxs-lookup"><span data-stu-id="68c07-109">The value in the key/value pair to be added.</span></span></param>
        <summary><span data-ttu-id="68c07-110">Добавляет значение в словарь с указанным ключом.</span><span class="sxs-lookup"><span data-stu-id="68c07-110">Adds the value to the dictionary under the given key.</span></span> <span data-ttu-id="68c07-111">Метод создает оболочку для ключа и значения в наборе объектов <see cref="T:System.Activities.Presentation.Model.ModelItem" />.</span><span class="sxs-lookup"><span data-stu-id="68c07-111">This method wraps the key and value in a set of <see cref="T:System.Activities.Presentation.Model.ModelItem" /> objects.</span></span></summary>
        <returns><span data-ttu-id="68c07-112">Объект <see cref="T:System.Activities.Presentation.Model.ModelItem" />, который представляет ключ.</span><span class="sxs-lookup"><span data-stu-id="68c07-112">A <see cref="T:System.Activities.Presentation.Model.ModelItem" /> that represents the key.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="68c07-113">Если <paramref name="key" /> или <paramref name="value" /> равны <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="68c07-113">If <paramref name="key" /> or <paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="68c07-114">Если <see cref="T:System.Activities.Presentation.Model.ModelItemDictionary" /> доступен только для чтения.</span><span class="sxs-lookup"><span data-stu-id="68c07-114">If the <see cref="T:System.Activities.Presentation.Model.ModelItemDictionary" /> is read-only.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public abstract void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.ModelItemDictionary.Clear" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Clear();" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit" Usage="modelItemDictionary.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Clear</InterfaceMember>
        <InterfaceMember>M:System.Collections.IDictionary.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="68c07-115">Удаляет содержимое словаря.</span><span class="sxs-lookup"><span data-stu-id="68c07-115">Clears the contents of the dictionary.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CollectionChanged">
      <MemberSignature Language="C#" Value="public abstract event System.Collections.Specialized.NotifyCollectionChangedEventHandler CollectionChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Collections.Specialized.NotifyCollectionChangedEventHandler CollectionChanged" />
      <MemberSignature Language="DocId" Value="E:System.Activities.Presentation.Model.ModelItemDictionary.CollectionChanged" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Custom Event CollectionChanged As NotifyCollectionChangedEventHandler " FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract event System::Collections::Specialized::NotifyCollectionChangedEventHandler ^ CollectionChanged;" />
      <MemberSignature Language="F#" Value="member this.CollectionChanged : System.Collections.Specialized.NotifyCollectionChangedEventHandler " Usage="member this.CollectionChanged : System.Collections.Specialized.NotifyCollectionChangedEventHandler " />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Event CollectionChanged As NotifyCollectionChangedEventHandler " FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NotifyCollectionChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="68c07-116">Происходит во время изменения содержимого коллекции.</span><span class="sxs-lookup"><span data-stu-id="68c07-116">Raised when the contents of this collection change.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="protected virtual bool Contains (System.Collections.Generic.KeyValuePair&lt;System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem&gt; item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool Contains(valuetype System.Collections.Generic.KeyValuePair`2&lt;class System.Activities.Presentation.Model.ModelItem, class System.Activities.Presentation.Model.ModelItem&gt; item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.ModelItemDictionary.Contains(System.Collections.Generic.KeyValuePair{System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem})" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function Contains (item As KeyValuePair(Of ModelItem, ModelItem)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool Contains(System::Collections::Generic::KeyValuePair&lt;System::Activities::Presentation::Model::ModelItem ^, System::Activities::Presentation::Model::ModelItem ^&gt; item);" />
      <MemberSignature Language="F#" Value="abstract member Contains : System.Collections.Generic.KeyValuePair&lt;System.Activities.Presentation.Model.ModelItem, System.Activities.Presentation.Model.ModelItem&gt; -&gt; bool&#xA;override this.Contains : System.Collections.Generic.KeyValuePair&lt;System.Activities.Presentation.Model.ModelItem, System.Activities.Presentation.Model.ModelItem&gt; -&gt; bool" Usage="modelItemDictionary.Contains item" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Contains(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Collections.Generic.KeyValuePair&lt;System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem&gt;" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="68c07-117">Пара «ключ-значение», которую необходимо найти.</span><span class="sxs-lookup"><span data-stu-id="68c07-117">The key/value pair to find.</span></span></param>
        <summary><span data-ttu-id="68c07-118">Определяет, содержит ли словарь данную пару «ключ-значение».</span><span class="sxs-lookup"><span data-stu-id="68c07-118">Determines whether the dictionary contains the given key/value pair.</span></span></summary>
        <returns><span data-ttu-id="68c07-119">Значение <see langword="true" />, если словарь содержит данную пару "ключ-значение"; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="68c07-119"><see langword="true" /> if the dictionary contains the given key/value pair; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ContainsKey">
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="68c07-120">Определяет, содержит ли словарь данную пару «ключ-значение».</span><span class="sxs-lookup"><span data-stu-id="68c07-120">Determines whether the dictionary contains the given key.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ContainsKey">
      <MemberSignature Language="C#" Value="public abstract bool ContainsKey (System.Activities.Presentation.Model.ModelItem key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ContainsKey(class System.Activities.Presentation.Model.ModelItem key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.ModelItemDictionary.ContainsKey(System.Activities.Presentation.Model.ModelItem)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function ContainsKey (key As ModelItem) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool ContainsKey(System::Activities::Presentation::Model::ModelItem ^ key);" />
      <MemberSignature Language="F#" Value="abstract member ContainsKey : System.Activities.Presentation.Model.ModelItem -&gt; bool" Usage="modelItemDictionary.ContainsKey key" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IDictionary`2.ContainsKey(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Activities.Presentation.Model.ModelItem" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="68c07-121">Ключ для поиска.</span><span class="sxs-lookup"><span data-stu-id="68c07-121">The key to find.</span></span></param>
        <summary><span data-ttu-id="68c07-122">Определяет, содержит ли словарь данную пару «ключ-значение».</span><span class="sxs-lookup"><span data-stu-id="68c07-122">Determines whether the dictionary contains the given key.</span></span></summary>
        <returns><span data-ttu-id="68c07-123">Значение <see langword="true" />, если словарь содержит указанный ключ; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="68c07-123"><see langword="true" /> if the dictionary contains the given key; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="68c07-124">Если <paramref name="key" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="68c07-124">If <paramref name="key" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ContainsKey">
      <MemberSignature Language="C#" Value="public abstract bool ContainsKey (object key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ContainsKey(object key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.ModelItemDictionary.ContainsKey(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function ContainsKey (key As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool ContainsKey(System::Object ^ key);" />
      <MemberSignature Language="F#" Value="abstract member ContainsKey : obj -&gt; bool" Usage="modelItemDictionary.ContainsKey key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="68c07-125">Ключ для поиска.</span><span class="sxs-lookup"><span data-stu-id="68c07-125">The key to find.</span></span></param>
        <summary><span data-ttu-id="68c07-126">Определяет, содержит ли словарь данную пару «ключ-значение».</span><span class="sxs-lookup"><span data-stu-id="68c07-126">Determines whether the dictionary contains the given key.</span></span></summary>
        <returns><span data-ttu-id="68c07-127">Значение <see langword="true" />, если словарь содержит указанный ключ; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="68c07-127"><see langword="true" /> if the dictionary contains the given key; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="68c07-128">Если <paramref name="key" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="68c07-128">If <paramref name="key" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="protected virtual void CopyTo (System.Collections.Generic.KeyValuePair&lt;System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem&gt;[] array, int arrayIndex);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void CopyTo(valuetype System.Collections.Generic.KeyValuePair`2&lt;class System.Activities.Presentation.Model.ModelItem, class System.Activities.Presentation.Model.ModelItem&gt;[] array, int32 arrayIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.ModelItemDictionary.CopyTo(System.Collections.Generic.KeyValuePair{System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem}[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub CopyTo (array As KeyValuePair(Of ModelItem, ModelItem)(), arrayIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void CopyTo(cli::array &lt;System::Collections::Generic::KeyValuePair&lt;System::Activities::Presentation::Model::ModelItem ^, System::Activities::Presentation::Model::ModelItem ^&gt;&gt; ^ array, int arrayIndex);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : System.Collections.Generic.KeyValuePair&lt;System.Activities.Presentation.Model.ModelItem, System.Activities.Presentation.Model.ModelItem&gt;[] * int -&gt; unit&#xA;override this.CopyTo : System.Collections.Generic.KeyValuePair&lt;System.Activities.Presentation.Model.ModelItem, System.Activities.Presentation.Model.ModelItem&gt;[] * int -&gt; unit" Usage="modelItemDictionary.CopyTo (array, arrayIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Collections.Generic.KeyValuePair&lt;System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem&gt;[]" />
        <Parameter Name="arrayIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="68c07-129">Массив пар «ключ-значение» для копирования.</span><span class="sxs-lookup"><span data-stu-id="68c07-129">The array of key/value pairs to copy.</span></span></param>
        <param name="arrayIndex"><span data-ttu-id="68c07-130">Отсчитываемый от нуля индекс в текущем словаре, с которого начинается копирование.</span><span class="sxs-lookup"><span data-stu-id="68c07-130">The zero-based index in the current dictionary at which copying begins.</span></span></param>
        <summary><span data-ttu-id="68c07-131">Копирует массив пар «ключ-значение» в данный словарь.</span><span class="sxs-lookup"><span data-stu-id="68c07-131">Copies an array of key/value pairs into the given dictionary.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public abstract int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Model.ModelItemDictionary.Count" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Activities.Presentation.Model.ModelItemDictionary.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="68c07-132">Возвращает количество элементов в словаре.</span><span class="sxs-lookup"><span data-stu-id="68c07-132">Returns the count of items in the dictionary.</span></span></summary>
        <value><span data-ttu-id="68c07-133">Возвращает <see cref="T:System.Int32" />.</span><span class="sxs-lookup"><span data-stu-id="68c07-133">Returns <see cref="T:System.Int32" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem&gt;&gt; GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;class System.Activities.Presentation.Model.ModelItem, class System.Activities.Presentation.Model.ModelItem&gt;&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.ModelItemDictionary.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetEnumerator () As IEnumerator(Of KeyValuePair(Of ModelItem, ModelItem))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Collections::Generic::IEnumerator&lt;System::Collections::Generic::KeyValuePair&lt;System::Activities::Presentation::Model::ModelItem ^, System::Activities::Presentation::Model::ModelItem ^&gt;&gt; ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;System.Activities.Presentation.Model.ModelItem, System.Activities.Presentation.Model.ModelItem&gt;&gt;" Usage="modelItemDictionary.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="68c07-134">Возвращает перечислитель элементов словаря.</span><span class="sxs-lookup"><span data-stu-id="68c07-134">Returns an enumerator for the items in the dictionary.</span></span></summary>
        <returns><span data-ttu-id="68c07-135">Возвращает <see cref="T:System.Collections.Generic.IEnumerator`1" />.</span><span class="sxs-lookup"><span data-stu-id="68c07-135">Returns <see cref="T:System.Collections.Generic.IEnumerator`1" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFixedSize">
      <MemberSignature Language="C#" Value="protected virtual bool IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Model.ModelItemDictionary.IsFixedSize" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property IsFixedSize As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool IsFixedSize { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsFixedSize : bool" Usage="System.Activities.Presentation.Model.ModelItemDictionary.IsFixedSize" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="68c07-136">Определяет, имеет ли словарь фиксированный размер.</span><span class="sxs-lookup"><span data-stu-id="68c07-136">Determines whether the dictionary is a fixed size.</span></span></summary>
        <value><span data-ttu-id="68c07-137">Возвращается <see langword="true" />, если словарь имеет фиксированный размер. В противном случае возвращается значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="68c07-137"><see langword="true" /> if the dictionary is a fixed size; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="68c07-138">Если словарь предназначен только для чтения, в реализации по умолчанию возвращается <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="68c07-138">The default implementation returns <see langword="true" /> if the dictionary is read-only.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public abstract bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Model.ModelItemDictionary.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Activities.Presentation.Model.ModelItemDictionary.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.IsReadOnly</InterfaceMember>
        <InterfaceMember>P:System.Collections.IDictionary.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="68c07-139">Определяет, не может ли словарь быть изменен.</span><span class="sxs-lookup"><span data-stu-id="68c07-139">Determines whether the dictionary cannot be modified.</span></span></summary>
        <value><span data-ttu-id="68c07-140">Значение <see langword="true" />, если словарь не может быть изменен; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="68c07-140"><see langword="true" /> if the dictionary cannot be modified; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="protected virtual bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Model.ModelItemDictionary.IsSynchronized" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property IsSynchronized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSynchronized : bool" Usage="System.Activities.Presentation.Model.ModelItemDictionary.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="68c07-141">Возвращает значение, указывающее, является ли доступ к словарю синхронизированным (потокобезопасным).</span><span class="sxs-lookup"><span data-stu-id="68c07-141">Gets a value that indicates whether access to the dictionary is synchronized (thread safe).</span></span></summary>
        <value><span data-ttu-id="68c07-142">Значение <see langword="true" />, если доступ к словарю является синхронизированным (потокобезопасным); в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="68c07-142"><see langword="true" /> if access to the dictionary is synchronized (thread safe); otherwise, <see langword="false" />.</span></span> <span data-ttu-id="68c07-143">Реализация по умолчанию возвращает значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="68c07-143">The default implementation returns <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="68c07-144">Возвращает или задает элемент при указанном ключе.</span><span class="sxs-lookup"><span data-stu-id="68c07-144">Gets or sets the item at the specified key.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public abstract System.Activities.Presentation.Model.ModelItem this[System.Activities.Presentation.Model.ModelItem key] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Presentation.Model.ModelItem Item(class System.Activities.Presentation.Model.ModelItem)" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Model.ModelItemDictionary.Item(System.Activities.Presentation.Model.ModelItem)" />
      <MemberSignature Language="VB.NET" Value="Default Public MustOverride Property Item(key As ModelItem) As ModelItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Activities::Presentation::Model::ModelItem ^ default[System::Activities::Presentation::Model::ModelItem ^] { System::Activities::Presentation::Model::ModelItem ^ get(System::Activities::Presentation::Model::ModelItem ^ key); void set(System::Activities::Presentation::Model::ModelItem ^ key, System::Activities::Presentation::Model::ModelItem ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(System.Activities.Presentation.Model.ModelItem) : System.Activities.Presentation.Model.ModelItem with get, set" Usage="System.Activities.Presentation.Model.ModelItemDictionary.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IDictionary`2.Item(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.Model.ModelItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Activities.Presentation.Model.ModelItem" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="68c07-145">Указанный ключ элемента.</span><span class="sxs-lookup"><span data-stu-id="68c07-145">The specified key of the item.</span></span></param>
        <summary><span data-ttu-id="68c07-146">Возвращает или задает элемент при указанном ключе.</span><span class="sxs-lookup"><span data-stu-id="68c07-146">Gets or sets the item at the specified key.</span></span></summary>
        <value><span data-ttu-id="68c07-147">Возвращает <see cref="T:System.Activities.Presentation.Model.ModelItem" />.</span><span class="sxs-lookup"><span data-stu-id="68c07-147">Returns <see cref="T:System.Activities.Presentation.Model.ModelItem" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68c07-148">Если элемент для указанного ключа отсутствует, этот метод возвращает значение `null`.</span><span class="sxs-lookup"><span data-stu-id="68c07-148">If there is no item for the given key, this method returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="68c07-149">Если <paramref name="key" /> или значение равно <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="68c07-149">If <paramref name="key" /> or the value is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="68c07-150">Если словарь доступен только для чтения и установлено новое значение.</span><span class="sxs-lookup"><span data-stu-id="68c07-150">If the dictionary is read-only and you set a new value.</span></span></exception>
        <exception cref="T:System.Collections.Generic.KeyNotFoundException"><span data-ttu-id="68c07-151">Если <paramref name="key" /> отсутствует в словаре.</span><span class="sxs-lookup"><span data-stu-id="68c07-151">If <paramref name="key" /> is not in the dictionary.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public abstract System.Activities.Presentation.Model.ModelItem this[object key] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Presentation.Model.ModelItem Item(object)" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Model.ModelItemDictionary.Item(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Default Public MustOverride Property Item(key As Object) As ModelItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Activities::Presentation::Model::ModelItem ^ default[System::Object ^] { System::Activities::Presentation::Model::ModelItem ^ get(System::Object ^ key); void set(System::Object ^ key, System::Activities::Presentation::Model::ModelItem ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(obj) : System.Activities.Presentation.Model.ModelItem with get, set" Usage="System.Activities.Presentation.Model.ModelItemDictionary.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.Model.ModelItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="68c07-152">Указанный ключ элемента.</span><span class="sxs-lookup"><span data-stu-id="68c07-152">The specified key of the item.</span></span></param>
        <summary><span data-ttu-id="68c07-153">Возвращает или задает элемент при указанном ключе.</span><span class="sxs-lookup"><span data-stu-id="68c07-153">Gets or sets the item at the specified key.</span></span></summary>
        <value><span data-ttu-id="68c07-154">Возвращает <see cref="T:System.Activities.Presentation.Model.ModelItem" />.</span><span class="sxs-lookup"><span data-stu-id="68c07-154">Returns <see cref="T:System.Activities.Presentation.Model.ModelItem" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68c07-155">Если элемент для указанного ключа отсутствует, этот метод возвращает значение `null`.</span><span class="sxs-lookup"><span data-stu-id="68c07-155">If there is no item for the given key, this method returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="68c07-156">Если <paramref name="key" /> или значение равно <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="68c07-156">If <paramref name="key" /> or the value is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="68c07-157">Если словарь доступен только для чтения и установлено новое значение.</span><span class="sxs-lookup"><span data-stu-id="68c07-157">If the dictionary is read-only and you set a new value.</span></span></exception>
        <exception cref="T:System.Collections.Generic.KeyNotFoundException"><span data-ttu-id="68c07-158">Если <paramref name="key" /> отсутствует в словаре.</span><span class="sxs-lookup"><span data-stu-id="68c07-158">If <paramref name="key" /> is not in the dictionary.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="KeyProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty KeyProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty KeyProperty" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.Model.ModelItemDictionary.KeyProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly KeyProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ KeyProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable KeyProperty : System.Windows.DependencyProperty" Usage="System.Activities.Presentation.Model.ModelItemDictionary.KeyProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="68c07-159"><see langword="DependencyProperty" />, представляющее ключ в паре "ключ-значение", который добавляется ко всем элементам в словаре.</span><span class="sxs-lookup"><span data-stu-id="68c07-159">The <see langword="DependencyProperty" /> that represents the key in the key/value pair that is added to all items in the dictionary.</span></span> <span data-ttu-id="68c07-160">Тип данных <see langword="KeyProperty" /> — <see cref="T:System.Activities.Presentation.Model.ModelItem" />.</span><span class="sxs-lookup"><span data-stu-id="68c07-160">The data type of the <see langword="KeyProperty" /> is <see cref="T:System.Activities.Presentation.Model.ModelItem" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Keys">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.ICollection&lt;System.Activities.Presentation.Model.ModelItem&gt; Keys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class System.Activities.Presentation.Model.ModelItem&gt; Keys" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Model.ModelItemDictionary.Keys" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Keys As ICollection(Of ModelItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Collections::Generic::ICollection&lt;System::Activities::Presentation::Model::ModelItem ^&gt; ^ Keys { System::Collections::Generic::ICollection&lt;System::Activities::Presentation::Model::ModelItem ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Keys : System.Collections.Generic.ICollection&lt;System.Activities.Presentation.Model.ModelItem&gt;" Usage="System.Activities.Presentation.Model.ModelItemDictionary.Keys" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IDictionary`2.Keys</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;System.Activities.Presentation.Model.ModelItem&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="68c07-161">Возвращает ключи коллекции.</span><span class="sxs-lookup"><span data-stu-id="68c07-161">Gets the keys of the collection.</span></span> <span data-ttu-id="68c07-162">Ключи гарантированно располагаются в том же порядке, что и значения.</span><span class="sxs-lookup"><span data-stu-id="68c07-162">The keys are guaranteed to be in the same order as the values.</span></span> <span data-ttu-id="68c07-163">Возвращаемая коллекция доступна только для чтения.</span><span class="sxs-lookup"><span data-stu-id="68c07-163">The resulting collection is read-only.</span></span></summary>
        <value><span data-ttu-id="68c07-164">Возвращает <see cref="T:System.Collections.Generic.ICollection`1" />.</span><span class="sxs-lookup"><span data-stu-id="68c07-164">Returns <see cref="T:System.Collections.Generic.ICollection`1" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Remove">
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="68c07-165">Удаляет элемент из словаря.</span><span class="sxs-lookup"><span data-stu-id="68c07-165">Removes the item from the dictionary.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public abstract bool Remove (System.Activities.Presentation.Model.ModelItem key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Remove(class System.Activities.Presentation.Model.ModelItem key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.ModelItemDictionary.Remove(System.Activities.Presentation.Model.ModelItem)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Remove (key As ModelItem) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool Remove(System::Activities::Presentation::Model::ModelItem ^ key);" />
      <MemberSignature Language="F#" Value="abstract member Remove : System.Activities.Presentation.Model.ModelItem -&gt; bool" Usage="modelItemDictionary.Remove key" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IDictionary`2.Remove(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Activities.Presentation.Model.ModelItem" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="68c07-166">Ключ элемента, который требуется удалить.</span><span class="sxs-lookup"><span data-stu-id="68c07-166">The key of the element to remove.</span></span></param>
        <summary><span data-ttu-id="68c07-167">Удаляет элемент с заданным ключом из словаря.</span><span class="sxs-lookup"><span data-stu-id="68c07-167">Removes the item with the specified key from the dictionary.</span></span></summary>
        <returns><span data-ttu-id="68c07-168">Значение <see langword="true" />, если элемент существует; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="68c07-168"><see langword="true" /> if the item exists; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68c07-169">Если элемент отсутствует в коллекции, метод не выполняет никаких действий.</span><span class="sxs-lookup"><span data-stu-id="68c07-169">This method does nothing if the item does not exist in the collection.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="68c07-170">Если значение параметра <paramref name="key" /> равно <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="68c07-170">If the <paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="68c07-171">Если словарь доступен только для чтения.</span><span class="sxs-lookup"><span data-stu-id="68c07-171">If the dictionary is read-only.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public abstract bool Remove (object key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Remove(object key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.ModelItemDictionary.Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Remove (key As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool Remove(System::Object ^ key);" />
      <MemberSignature Language="F#" Value="abstract member Remove : obj -&gt; bool" Usage="modelItemDictionary.Remove key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="68c07-172">Элемент, который удаляется при помощи ключа, заданного в качестве условия поиска.</span><span class="sxs-lookup"><span data-stu-id="68c07-172">The item to remove using the key as the search criterion.</span></span></param>
        <summary><span data-ttu-id="68c07-173">Удаляет элемент из словаря.</span><span class="sxs-lookup"><span data-stu-id="68c07-173">Removes the item from the dictionary.</span></span></summary>
        <returns><span data-ttu-id="68c07-174">Значение <see langword="true" />, если элемент существует; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="68c07-174"><see langword="true" /> if the item exists; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68c07-175">Если элемент отсутствует в коллекции, метод не выполняет никаких действий.</span><span class="sxs-lookup"><span data-stu-id="68c07-175">This method does nothing if the item does not exist in the collection.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="68c07-176">Если значение параметра <paramref name="key" /> равно <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="68c07-176">If the <paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="68c07-177">Если словарь доступен только для чтения.</span><span class="sxs-lookup"><span data-stu-id="68c07-177">If the dictionary is read-only.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="protected virtual object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Model.ModelItemDictionary.SyncRoot" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property SyncRoot As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Object ^ SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SyncRoot : obj" Usage="System.Activities.Presentation.Model.ModelItemDictionary.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="68c07-178">Возвращает объект, который можно использовать для синхронизации доступа к этой коллекции.</span><span class="sxs-lookup"><span data-stu-id="68c07-178">Gets an object that can be used to synchronize access to this collection.</span></span></summary>
        <value><span data-ttu-id="68c07-179">Возвращает <see cref="T:System.Object" />.</span><span class="sxs-lookup"><span data-stu-id="68c07-179">Returns <see cref="T:System.Object" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68c07-180">Реализация по умолчанию возвращает «this».</span><span class="sxs-lookup"><span data-stu-id="68c07-180">The default implementation returns "this."</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem&gt;&gt;.Add">
      <MemberSignature Language="C#" Value="void ICollection&lt;KeyValuePair&lt;ModelItem,ModelItem&gt;&gt;.Add (System.Collections.Generic.KeyValuePair&lt;System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem&gt; item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem&gt;&gt;.Add(valuetype System.Collections.Generic.KeyValuePair`2&lt;class System.Activities.Presentation.Model.ModelItem, class System.Activities.Presentation.Model.ModelItem&gt; item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#Generic#ICollection&lt;System#Collections#Generic#KeyValuePair&lt;System#Activities#Presentation#Model#ModelItem,System#Activities#Presentation#Model#ModelItem&gt;&gt;#Add(System.Collections.Generic.KeyValuePair{System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem})" />
      <MemberSignature Language="VB.NET" Value="Sub Add (item As KeyValuePair(Of ModelItem, ModelItem)) Implements ICollection(Of KeyValuePair(Of ModelItem, ModelItem)).Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem&gt;&gt;.Add(System::Collections::Generic::KeyValuePair&lt;System::Activities::Presentation::Model::ModelItem ^, System::Activities::Presentation::Model::ModelItem ^&gt; item) = System::Collections::Generic::ICollection&lt;System::Collections::Generic::KeyValuePair&lt;System::Activities::Presentation::Model::ModelItem ^, System::Activities::Presentation::Model::ModelItem ^&gt;&gt;::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Add(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Collections.Generic.KeyValuePair&lt;System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem&gt;" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="68c07-181">Добавляемый элемент.</span><span class="sxs-lookup"><span data-stu-id="68c07-181">The element to add.</span></span></param>
        <summary><span data-ttu-id="68c07-182">Добавляет новый элемент в конец коллекции.</span><span class="sxs-lookup"><span data-stu-id="68c07-182">Adds a new element to the end of the collection.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem&gt;&gt;.Contains">
      <MemberSignature Language="C#" Value="bool ICollection&lt;KeyValuePair&lt;ModelItem,ModelItem&gt;&gt;.Contains (System.Collections.Generic.KeyValuePair&lt;System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem&gt; item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem&gt;&gt;.Contains(valuetype System.Collections.Generic.KeyValuePair`2&lt;class System.Activities.Presentation.Model.ModelItem, class System.Activities.Presentation.Model.ModelItem&gt; item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#Generic#ICollection&lt;System#Collections#Generic#KeyValuePair&lt;System#Activities#Presentation#Model#ModelItem,System#Activities#Presentation#Model#ModelItem&gt;&gt;#Contains(System.Collections.Generic.KeyValuePair{System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem})" />
      <MemberSignature Language="VB.NET" Value="Function Contains (item As KeyValuePair(Of ModelItem, ModelItem)) As Boolean Implements ICollection(Of KeyValuePair(Of ModelItem, ModelItem)).Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem&gt;&gt;.Contains(System::Collections::Generic::KeyValuePair&lt;System::Activities::Presentation::Model::ModelItem ^, System::Activities::Presentation::Model::ModelItem ^&gt; item) = System::Collections::Generic::ICollection&lt;System::Collections::Generic::KeyValuePair&lt;System::Activities::Presentation::Model::ModelItem ^, System::Activities::Presentation::Model::ModelItem ^&gt;&gt;::Contains;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Contains(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Collections.Generic.KeyValuePair&lt;System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem&gt;" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="68c07-183">Пара «ключ-значение», которую необходимо найти.</span><span class="sxs-lookup"><span data-stu-id="68c07-183">The key/value pair to find.</span></span></param>
        <summary><span data-ttu-id="68c07-184">Определяет, содержит ли словарь данную пару «ключ-значение».</span><span class="sxs-lookup"><span data-stu-id="68c07-184">Determines whether the dictionary contains the given key/value pair.</span></span></summary>
        <returns><span data-ttu-id="68c07-185">Значение <see langword="true" />, если словарь содержит данную пару "ключ-значение"; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="68c07-185"><see langword="true" /> if the dictionary contains the given key/value pair; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem&gt;&gt;.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection&lt;KeyValuePair&lt;ModelItem,ModelItem&gt;&gt;.CopyTo (System.Collections.Generic.KeyValuePair&lt;System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem&gt;[] array, int arrayIndex);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem&gt;&gt;.CopyTo(valuetype System.Collections.Generic.KeyValuePair`2&lt;class System.Activities.Presentation.Model.ModelItem, class System.Activities.Presentation.Model.ModelItem&gt;[] array, int32 arrayIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#Generic#ICollection&lt;System#Collections#Generic#KeyValuePair&lt;System#Activities#Presentation#Model#ModelItem,System#Activities#Presentation#Model#ModelItem&gt;&gt;#CopyTo(System.Collections.Generic.KeyValuePair{System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem}[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Sub CopyTo (array As KeyValuePair(Of ModelItem, ModelItem)(), arrayIndex As Integer) Implements ICollection(Of KeyValuePair(Of ModelItem, ModelItem)).CopyTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem&gt;&gt;.CopyTo(cli::array &lt;System::Collections::Generic::KeyValuePair&lt;System::Activities::Presentation::Model::ModelItem ^, System::Activities::Presentation::Model::ModelItem ^&gt;&gt; ^ array, int arrayIndex) = System::Collections::Generic::ICollection&lt;System::Collections::Generic::KeyValuePair&lt;System::Activities::Presentation::Model::ModelItem ^, System::Activities::Presentation::Model::ModelItem ^&gt;&gt;::CopyTo;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Collections.Generic.KeyValuePair&lt;System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem&gt;[]" />
        <Parameter Name="arrayIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="68c07-186">Массив пар «ключ-значение» для копирования.</span><span class="sxs-lookup"><span data-stu-id="68c07-186">The array of key/value pairs to copy.</span></span></param>
        <param name="arrayIndex"><span data-ttu-id="68c07-187">Отсчитываемый от нуля индекс в текущем словаре, с которого начинается копирование.</span><span class="sxs-lookup"><span data-stu-id="68c07-187">The zero-based index in the current dictionary at which copying begins.</span></span></param>
        <summary><span data-ttu-id="68c07-188">Копирует массив пар «ключ-значение» в данный словарь.</span><span class="sxs-lookup"><span data-stu-id="68c07-188">Copies an array of key/value pairs into the given dictionary.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem&gt;&gt;.Remove">
      <MemberSignature Language="C#" Value="bool ICollection&lt;KeyValuePair&lt;ModelItem,ModelItem&gt;&gt;.Remove (System.Collections.Generic.KeyValuePair&lt;System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem&gt; item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem&gt;&gt;.Remove(valuetype System.Collections.Generic.KeyValuePair`2&lt;class System.Activities.Presentation.Model.ModelItem, class System.Activities.Presentation.Model.ModelItem&gt; item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#Generic#ICollection&lt;System#Collections#Generic#KeyValuePair&lt;System#Activities#Presentation#Model#ModelItem,System#Activities#Presentation#Model#ModelItem&gt;&gt;#Remove(System.Collections.Generic.KeyValuePair{System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem})" />
      <MemberSignature Language="VB.NET" Value="Function Remove (item As KeyValuePair(Of ModelItem, ModelItem)) As Boolean Implements ICollection(Of KeyValuePair(Of ModelItem, ModelItem)).Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem&gt;&gt;.Remove(System::Collections::Generic::KeyValuePair&lt;System::Activities::Presentation::Model::ModelItem ^, System::Activities::Presentation::Model::ModelItem ^&gt; item) = System::Collections::Generic::ICollection&lt;System::Collections::Generic::KeyValuePair&lt;System::Activities::Presentation::Model::ModelItem ^, System::Activities::Presentation::Model::ModelItem ^&gt;&gt;::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Remove(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Collections.Generic.KeyValuePair&lt;System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem&gt;" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="68c07-189">Пара «ключ-значение», которую необходимо удалить.</span><span class="sxs-lookup"><span data-stu-id="68c07-189">The key/value pair to remove.</span></span></param>
        <summary><span data-ttu-id="68c07-190">Удаляет из словаря указанную пару «ключ-значение».</span><span class="sxs-lookup"><span data-stu-id="68c07-190">Removes the specified key/value pair from the dictionary.</span></span></summary>
        <returns><span data-ttu-id="68c07-191">Значение <see langword="true" />, если элемент существует и удаляется; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="68c07-191"><see langword="true" /> if the item exists and is removed; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ array, int index) = System::Collections::ICollection::CopyTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="68c07-192">Одномерный массив, в который копируются элементы из коллекции <see cref="T:System.Collections.ICollection" />.</span><span class="sxs-lookup"><span data-stu-id="68c07-192">The one-dimensional array that is the destination of the elements copied from <see cref="T:System.Collections.ICollection" />.</span></span> <span data-ttu-id="68c07-193">Индексирование в массиве должно начинаться с нуля.</span><span class="sxs-lookup"><span data-stu-id="68c07-193">The array must have zero-based indexing</span></span></param>
        <param name="index"><span data-ttu-id="68c07-194">Отсчитываемый от нуля индекс в массиве <paramref name="array" />, указывающий начало копирования.</span><span class="sxs-lookup"><span data-stu-id="68c07-194">The zero-based index in <paramref name="array" /> at which copying begins.</span></span></param>
        <summary><span data-ttu-id="68c07-195">Копирует элементы <see cref="T:System.Collections.ICollection" /> в массив, начиная с определенного индекса массива.</span><span class="sxs-lookup"><span data-stu-id="68c07-195">Copies the elements of the <see cref="T:System.Collections.ICollection" /> to an array, starting at a particular array index.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.Count">
      <MemberSignature Language="C#" Value="int System.Collections.ICollection.Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 System.Collections.ICollection.Count" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#ICollection#Count" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Count As Integer Implements ICollection.Count" />
      <MemberSignature Language="C++ CLI" Value="property int System::Collections::ICollection::Count { int get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="68c07-196">Получает число элементов, содержащихся в интерфейсе <see cref="T:System.Collections.ICollection" />.</span><span class="sxs-lookup"><span data-stu-id="68c07-196">Gets the number of elements contained in the <see cref="T:System.Collections.ICollection" />.</span></span></summary>
        <value><span data-ttu-id="68c07-197">Число элементов, содержащихся в интерфейсе <see cref="T:System.Collections.ICollection" />.</span><span class="sxs-lookup"><span data-stu-id="68c07-197">The number of elements contained in the <see cref="T:System.Collections.ICollection" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::ICollection::IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="68c07-198">Получает значение, определяющее, является ли доступ к коллекции <see cref="T:System.Collections.ICollection" /> синхронизированным (потокобезопасным).</span><span class="sxs-lookup"><span data-stu-id="68c07-198">Gets a value that indicates whether access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe).</span></span></summary>
        <value><span data-ttu-id="68c07-199"><see langword="true" />, если доступ к классу <see cref="T:System.Collections.ICollection" /> является синхронизированным (потокобезопасным); в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="68c07-199"><see langword="true" /> if access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe); otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::ICollection::SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="68c07-200">Получает объект, с помощью которого можно синхронизировать доступ к коллекции <see cref="T:System.Collections.ICollection" />.</span><span class="sxs-lookup"><span data-stu-id="68c07-200">Gets an object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.</span></span></summary>
        <value><span data-ttu-id="68c07-201">Объект, который может использоваться для синхронизации доступа к <see cref="T:System.Collections.ICollection" />.</span><span class="sxs-lookup"><span data-stu-id="68c07-201">An object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.Add">
      <MemberSignature Language="C#" Value="void IDictionary.Add (object key, object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IDictionary.Add(object key, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#IDictionary#Add(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Add (key As Object, value As Object) Implements IDictionary.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IDictionary.Add(System::Object ^ key, System::Object ^ value) = System::Collections::IDictionary::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.Add(System.Object,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="68c07-202">Объект, используемый в качестве ключа добавляемого элемента.</span><span class="sxs-lookup"><span data-stu-id="68c07-202">The object to use as the key of the element to add.</span></span></param>
        <param name="value"><span data-ttu-id="68c07-203">Объект, используемый в качестве значения добавляемого элемента.</span><span class="sxs-lookup"><span data-stu-id="68c07-203">The object to use as the value of the element to add.</span></span></param>
        <summary><span data-ttu-id="68c07-204">Добавляет элемент с указанными ключом и значением в объект <see cref="T:System.Collections.IDictionary" />.</span><span class="sxs-lookup"><span data-stu-id="68c07-204">Adds an element with the provided key and value to the <see cref="T:System.Collections.IDictionary" /> object.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.Clear">
      <MemberSignature Language="C#" Value="void IDictionary.Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IDictionary.Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#IDictionary#Clear" />
      <MemberSignature Language="VB.NET" Value="Sub Clear () Implements IDictionary.Clear" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IDictionary.Clear() = System::Collections::IDictionary::Clear;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="68c07-205">Удаляет все элементы из объекта <see cref="T:System.Collections.IDictionary" />.</span><span class="sxs-lookup"><span data-stu-id="68c07-205">Removes all elements from the <see cref="T:System.Collections.IDictionary" /> object.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.Contains">
      <MemberSignature Language="C#" Value="bool IDictionary.Contains (object key);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IDictionary.Contains(object key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#IDictionary#Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (key As Object) As Boolean Implements IDictionary.Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IDictionary.Contains(System::Object ^ key) = System::Collections::IDictionary::Contains;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="68c07-206">Ключ для размещения в объекте <see cref="T:System.Collections.IDictionary" />.</span><span class="sxs-lookup"><span data-stu-id="68c07-206">The key to locate in the <see cref="T:System.Collections.IDictionary" /> object.</span></span></param>
        <summary><span data-ttu-id="68c07-207">Определяет, содержится ли элемент с указанным ключом в объекте <see cref="T:System.Collections.IDictionary" />.</span><span class="sxs-lookup"><span data-stu-id="68c07-207">Determines whether the <see cref="T:System.Collections.IDictionary" /> object contains an element with the specified key.</span></span></summary>
        <returns><span data-ttu-id="68c07-208">Значение <see langword="true" />, если в <see cref="T:System.Collections.IDictionary" /> содержится элемент с данным ключом; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="68c07-208"><see langword="true" /> if the <see cref="T:System.Collections.IDictionary" /> contains an element with the key; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IDictionaryEnumerator IDictionary.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IDictionaryEnumerator System.Collections.IDictionary.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#IDictionary#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IDictionaryEnumerator Implements IDictionary.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IDictionaryEnumerator ^ System.Collections.IDictionary.GetEnumerator() = System::Collections::IDictionary::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionaryEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="68c07-209">Возвращает объект <see cref="T:System.Collections.IDictionaryEnumerator" /> для объекта <see cref="T:System.Collections.IDictionary" />.</span><span class="sxs-lookup"><span data-stu-id="68c07-209">Returns the <see cref="T:System.Collections.IDictionaryEnumerator" /> object for the <see cref="T:System.Collections.IDictionary" /> object.</span></span></summary>
        <returns><span data-ttu-id="68c07-210">Объект <see cref="T:System.Collections.IDictionaryEnumerator" /> для объекта <see cref="T:System.Collections.IDictionary" />.</span><span class="sxs-lookup"><span data-stu-id="68c07-210">An <see cref="T:System.Collections.IDictionaryEnumerator" /> object for the <see cref="T:System.Collections.IDictionary" /> object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IDictionary.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IDictionary.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#IDictionary#IsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsFixedSize As Boolean Implements IDictionary.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::IDictionary::IsFixedSize { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IDictionary.IsFixedSize" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="68c07-211">Получает значение, указывающее, имеет ли объект <see cref="T:System.Collections.IDictionary" /> фиксированный размер.</span><span class="sxs-lookup"><span data-stu-id="68c07-211">Gets a value that indicates whether the <see cref="T:System.Collections.IDictionary" /> object has a fixed size.</span></span></summary>
        <value><span data-ttu-id="68c07-212"><see langword="true" />, если объект <see cref="T:System.Collections.IDictionary" /> имеет фиксированный размер, в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="68c07-212"><see langword="true" /> if the <see cref="T:System.Collections.IDictionary" /> object has a fixed size; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.IDictionary.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IDictionary.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#IDictionary#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements IDictionary.IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::IDictionary::IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IDictionary.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="68c07-213">Возвращает значение, указывающее, является ли объект <see cref="T:System.Collections.IDictionary" /> доступным только для чтения.</span><span class="sxs-lookup"><span data-stu-id="68c07-213">Gets a value that indicates whether the <see cref="T:System.Collections.IDictionary" /> object is read-only.</span></span></summary>
        <value><span data-ttu-id="68c07-214">Значение <see langword="true" />, если объект <see cref="T:System.Collections.IDictionary" /> доступен только для чтения; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="68c07-214"><see langword="true" /> if the <see cref="T:System.Collections.IDictionary" /> object is read-only; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IDictionary.Item[object key] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IDictionary.Item(object)" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#IDictionary#Item(System.Object)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(key As Object) As Object Implements IDictionary.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::IDictionary::Item[System::Object ^] { System::Object ^ get(System::Object ^ key); void set(System::Object ^ key, System::Object ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IDictionary.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.Item(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="68c07-215">Ключ элемента, который требуется получить или задать.</span><span class="sxs-lookup"><span data-stu-id="68c07-215">The key of the element to get or set.</span></span></param>
        <summary><span data-ttu-id="68c07-216">Возвращает или задает элемент с указанным ключом.</span><span class="sxs-lookup"><span data-stu-id="68c07-216">Gets or sets the element with the specified key.</span></span></summary>
        <value><span data-ttu-id="68c07-217">Элемент с указанным ключом.</span><span class="sxs-lookup"><span data-stu-id="68c07-217">The element with the specified key.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.Keys">
      <MemberSignature Language="C#" Value="System.Collections.ICollection System.Collections.IDictionary.Keys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection System.Collections.IDictionary.Keys" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#IDictionary#Keys" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Keys As ICollection Implements IDictionary.Keys" />
      <MemberSignature Language="C++ CLI" Value="property System::Collections::ICollection ^ System::Collections::IDictionary::Keys { System::Collections::ICollection ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IDictionary.Keys" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.Keys</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="68c07-218">Возвращает объект <see cref="T:System.Collections.ICollection" />, который содержит ключи объекта <see cref="T:System.Collections.IDictionary" />.</span><span class="sxs-lookup"><span data-stu-id="68c07-218">Gets an <see cref="T:System.Collections.ICollection" /> object that contains the keys of the <see cref="T:System.Collections.IDictionary" /> object.</span></span></summary>
        <value><span data-ttu-id="68c07-219">Объект <see cref="T:System.Collections.ICollection" />, который содержит ключи объекта <see cref="T:System.Collections.IDictionary" />.</span><span class="sxs-lookup"><span data-stu-id="68c07-219">An <see cref="T:System.Collections.ICollection" /> object that contains the keys of the <see cref="T:System.Collections.IDictionary" /> object.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.Remove">
      <MemberSignature Language="C#" Value="void IDictionary.Remove (object key);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IDictionary.Remove(object key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#IDictionary#Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Remove (key As Object) Implements IDictionary.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IDictionary.Remove(System::Object ^ key) = System::Collections::IDictionary::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="68c07-220">Ключ элемента, который требуется удалить.</span><span class="sxs-lookup"><span data-stu-id="68c07-220">The key of the element to remove.</span></span></param>
        <summary><span data-ttu-id="68c07-221">Удаляет элемент с указанным ключом из объекта <see cref="T:System.Collections.IDictionary" />.</span><span class="sxs-lookup"><span data-stu-id="68c07-221">Removes the element with the specified key from the <see cref="T:System.Collections.IDictionary" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68c07-222">Если объект <xref:System.Collections.IDictionary> не содержит элемент с указанным ключом, объект <xref:System.Collections.IDictionary> не изменяется.</span><span class="sxs-lookup"><span data-stu-id="68c07-222">If the <xref:System.Collections.IDictionary> object does not contain an element with the specified key, the <xref:System.Collections.IDictionary> remains unchanged.</span></span> <span data-ttu-id="68c07-223">Исключение не возникает.</span><span class="sxs-lookup"><span data-stu-id="68c07-223">No exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.Values">
      <MemberSignature Language="C#" Value="System.Collections.ICollection System.Collections.IDictionary.Values { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection System.Collections.IDictionary.Values" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#IDictionary#Values" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Values As ICollection Implements IDictionary.Values" />
      <MemberSignature Language="C++ CLI" Value="property System::Collections::ICollection ^ System::Collections::IDictionary::Values { System::Collections::ICollection ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IDictionary.Values" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.Values</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="68c07-224">Возвращает объект <see cref="T:System.Collections.ICollection" />, который содержит значения из объекта <see cref="T:System.Collections.IDictionary" />.</span><span class="sxs-lookup"><span data-stu-id="68c07-224">Gets an <see cref="T:System.Collections.ICollection" /> object that contains the values in the <see cref="T:System.Collections.IDictionary" /> object.</span></span></summary>
        <value><span data-ttu-id="68c07-225">Объект <see cref="T:System.Collections.ICollection" />, который содержит значения объекта <see cref="T:System.Collections.IDictionary" />.</span><span class="sxs-lookup"><span data-stu-id="68c07-225">An <see cref="T:System.Collections.ICollection" /> object that contains the values in the <see cref="T:System.Collections.IDictionary" /> object.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberSignature Language="VB.NET" Value=" Iterator Overridable NotOverridable Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.Activities.Presentation.Model.ModelItemDictionary/&lt;System-Collections-IEnumerable-GetEnumerator&gt;d__61))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.6">
          <AttributeName>System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.Activities.Presentation.Model.ModelItemDictionary/&lt;System_Collections_IEnumerable_GetEnumerator&gt;d__1))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="68c07-226">Возвращает перечислитель, который осуществляет итерацию по коллекции.</span><span class="sxs-lookup"><span data-stu-id="68c07-226">Returns an enumerator that iterates through a collection.</span></span></summary>
        <returns><span data-ttu-id="68c07-227">Объект <see cref="T:System.Collections.IEnumerator" />, который используется для прохода по коллекции.</span><span class="sxs-lookup"><span data-stu-id="68c07-227">An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryGetValue">
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="68c07-228">Извлекает значение для указанного ключа, если возможно.</span><span class="sxs-lookup"><span data-stu-id="68c07-228">Retrieves the value for the given key, if possible.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TryGetValue">
      <MemberSignature Language="C#" Value="public abstract bool TryGetValue (System.Activities.Presentation.Model.ModelItem key, out System.Activities.Presentation.Model.ModelItem value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryGetValue(class System.Activities.Presentation.Model.ModelItem key, [out] class System.Activities.Presentation.Model.ModelItem&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.ModelItemDictionary.TryGetValue(System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem@)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function TryGetValue (key As ModelItem, ByRef value As ModelItem) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool TryGetValue(System::Activities::Presentation::Model::ModelItem ^ key, [Runtime::InteropServices::Out] System::Activities::Presentation::Model::ModelItem ^ % value);" />
      <MemberSignature Language="F#" Value="abstract member TryGetValue : System.Activities.Presentation.Model.ModelItem * ModelItem -&gt; bool" Usage="modelItemDictionary.TryGetValue (key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Activities.Presentation.Model.ModelItem" />
        <Parameter Name="value" Type="System.Activities.Presentation.Model.ModelItem" RefType="out" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="68c07-229">Ключ, связанный с получаемым значением.</span><span class="sxs-lookup"><span data-stu-id="68c07-229">The key associated with the value to retrieve.</span></span></param>
        <param name="value"><span data-ttu-id="68c07-230">Значение, связанное с указанным ключом.</span><span class="sxs-lookup"><span data-stu-id="68c07-230">The value associated with the specified key.</span></span></param>
        <summary><span data-ttu-id="68c07-231">Извлекает значение для указанного ключа, если возможно.</span><span class="sxs-lookup"><span data-stu-id="68c07-231">Retrieves the value for the given key, if possible.</span></span></summary>
        <returns><span data-ttu-id="68c07-232">Значение <see langword="true" />, если присутствует значение для заданного ключа; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="68c07-232"><see langword="true" /> if there is a value present for the specified key; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="68c07-233">Если <paramref name="key" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="68c07-233">If <paramref name="key" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TryGetValue">
      <MemberSignature Language="C#" Value="public abstract bool TryGetValue (object key, out System.Activities.Presentation.Model.ModelItem value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryGetValue(object key, [out] class System.Activities.Presentation.Model.ModelItem&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.ModelItemDictionary.TryGetValue(System.Object,System.Activities.Presentation.Model.ModelItem@)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function TryGetValue (key As Object, ByRef value As ModelItem) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool TryGetValue(System::Object ^ key, [Runtime::InteropServices::Out] System::Activities::Presentation::Model::ModelItem ^ % value);" />
      <MemberSignature Language="F#" Value="abstract member TryGetValue : obj * ModelItem -&gt; bool" Usage="modelItemDictionary.TryGetValue (key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
        <Parameter Name="value" Type="System.Activities.Presentation.Model.ModelItem" RefType="out" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="68c07-234">Ключ, связанный с получаемым значением.</span><span class="sxs-lookup"><span data-stu-id="68c07-234">The key associated with the value to retrieve.</span></span></param>
        <param name="value"><span data-ttu-id="68c07-235">Значение, связанное с указанным ключом.</span><span class="sxs-lookup"><span data-stu-id="68c07-235">The value associated with the specified key.</span></span></param>
        <summary><span data-ttu-id="68c07-236">Извлекает значение для указанного ключа, если возможно.</span><span class="sxs-lookup"><span data-stu-id="68c07-236">Retrieves the value for the given key, if possible.</span></span></summary>
        <returns><span data-ttu-id="68c07-237">Значение <see langword="true" />, если присутствует значение для заданного ключа; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="68c07-237"><see langword="true" /> if there is a value present for the specified key; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="68c07-238">Если <paramref name="key" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="68c07-238">If <paramref name="key" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Values">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.ICollection&lt;System.Activities.Presentation.Model.ModelItem&gt; Values { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class System.Activities.Presentation.Model.ModelItem&gt; Values" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Model.ModelItemDictionary.Values" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Values As ICollection(Of ModelItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Collections::Generic::ICollection&lt;System::Activities::Presentation::Model::ModelItem ^&gt; ^ Values { System::Collections::Generic::ICollection&lt;System::Activities::Presentation::Model::ModelItem ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Values : System.Collections.Generic.ICollection&lt;System.Activities.Presentation.Model.ModelItem&gt;" Usage="System.Activities.Presentation.Model.ModelItemDictionary.Values" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IDictionary`2.Values</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;System.Activities.Presentation.Model.ModelItem&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="68c07-239">Возвращает значения коллекции.</span><span class="sxs-lookup"><span data-stu-id="68c07-239">Gets the values of the collection.</span></span></summary>
        <value><span data-ttu-id="68c07-240">Возвращает <see cref="T:System.Collections.Generic.ICollection`1" />.</span><span class="sxs-lookup"><span data-stu-id="68c07-240">Returns <see cref="T:System.Collections.Generic.ICollection`1" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68c07-241">Значения гарантированно располагаются в том же порядке, что и ключи.</span><span class="sxs-lookup"><span data-stu-id="68c07-241">The values are guaranteed to be in the same order as the keys.</span></span> <span data-ttu-id="68c07-242">Возвращаемая коллекция доступна только для чтения.</span><span class="sxs-lookup"><span data-stu-id="68c07-242">The resulting collection is read-only.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
