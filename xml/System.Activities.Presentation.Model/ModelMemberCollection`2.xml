<Type Name="ModelMemberCollection&lt;TItemType,TFindType&gt;" FullName="System.Activities.Presentation.Model.ModelMemberCollection&lt;TItemType,TFindType&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6526a62c1a7bfa45db8df764991dd3f0a0fd8cf8" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69308043" /></Metadata><TypeSignature Language="C#" Value="public abstract class ModelMemberCollection&lt;TItemType,TFindType&gt; : System.Collections.Generic.IEnumerable&lt;TItemType&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ModelMemberCollection`2&lt;TItemType, TFindType&gt; extends System.Object implements class System.Collections.Generic.IEnumerable`1&lt;!TItemType&gt;, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Presentation.Model.ModelMemberCollection`2" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ModelMemberCollection(Of TItemType, TFindType)&#xA;Implements IEnumerable(Of TItemType)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TItemType, typename TFindType&gt;&#xA;public ref class ModelMemberCollection abstract : System::Collections::Generic::IEnumerable&lt;TItemType&gt;" />
  <TypeSignature Language="F#" Value="type ModelMemberCollection&lt;'ItemType, 'FindType&gt; = class&#xA;    interface seq&lt;'ItemType&gt;&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Activities.Presentation</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TItemType" />
    <TypeParameter Name="TFindType" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;TItemType&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="TItemType"><span data-ttu-id="c2d7e-101">Тип элемента, который представляет коллекция.</span><span class="sxs-lookup"><span data-stu-id="c2d7e-101">The type of item that the collection represents.</span></span></typeparam>
    <typeparam name="TFindType"><span data-ttu-id="c2d7e-102">Тип, который следует использовать в качестве ключа в методах Find.</span><span class="sxs-lookup"><span data-stu-id="c2d7e-102">The type that should be used as a key in the "Find" methods.</span></span></typeparam>
    <summary><span data-ttu-id="c2d7e-103">Абстрактный базовый класс, от которого наследуется класс <see cref="T:System.Activities.Presentation.Model.ModelPropertyCollection" />.</span><span class="sxs-lookup"><span data-stu-id="c2d7e-103">An abstract base class that <see cref="T:System.Activities.Presentation.Model.ModelPropertyCollection" /> derives from.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="Find">
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c2d7e-104">Поиск в коллекции данного ключа и возврат найденного ключа.</span><span class="sxs-lookup"><span data-stu-id="c2d7e-104">Searches the collection for the given key and returns it if it is found.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Find">
      <MemberSignature Language="C#" Value="public TItemType Find (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !TItemType Find(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.ModelMemberCollection`2.Find(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Find (name As String) As TItemType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TItemType Find(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.Find : string -&gt; 'ItemType" Usage="modelMemberCollection.Find name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TItemType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="c2d7e-105">Имя заданного ключа.</span><span class="sxs-lookup"><span data-stu-id="c2d7e-105">The name of the given key.</span></span></param>
        <summary><span data-ttu-id="c2d7e-106">Поиск в коллекции данного ключа и возврат найденного ключа.</span><span class="sxs-lookup"><span data-stu-id="c2d7e-106">Searches the collection for the given key and returns it if it is found.</span></span> <span data-ttu-id="c2d7e-107">Если ключ не найден, этот метод возвращает значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c2d7e-107">If the key is not found, this method returns <see langword="null" />.</span></span></summary>
        <returns><span data-ttu-id="c2d7e-108">Если найден, возвращает элемент.</span><span class="sxs-lookup"><span data-stu-id="c2d7e-108">If found, returns the item.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c2d7e-109">Значение параметра <paramref name="name" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c2d7e-109">The <paramref name="name" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Find">
      <MemberSignature Language="C#" Value="public TItemType Find (TFindType value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !TItemType Find(!TFindType value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.ModelMemberCollection`2.Find(`1)" />
      <MemberSignature Language="VB.NET" Value="Public Function Find (value As TFindType) As TItemType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TItemType Find(TFindType value);" />
      <MemberSignature Language="F#" Value="member this.Find : 'FindType -&gt; 'ItemType" Usage="modelMemberCollection.Find value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TItemType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="TFindType" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="c2d7e-110">Тип заданного ключа.</span><span class="sxs-lookup"><span data-stu-id="c2d7e-110">The type of the given key.</span></span></param>
        <summary><span data-ttu-id="c2d7e-111">Поиск в коллекции данного ключа и возврат найденного ключа.</span><span class="sxs-lookup"><span data-stu-id="c2d7e-111">Searches the collection for the given key and returns it if it is found.</span></span> <span data-ttu-id="c2d7e-112">Если ключ не найден, этот метод возвращает значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c2d7e-112">If the key is not found, this method returns <see langword="null" />.</span></span></summary>
        <returns><span data-ttu-id="c2d7e-113">Если найден, возвращает элемент.</span><span class="sxs-lookup"><span data-stu-id="c2d7e-113">If found, returns the item.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c2d7e-114">Значение параметра <paramref name="value" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c2d7e-114">The <paramref name="value" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Find">
      <MemberSignature Language="C#" Value="protected abstract TItemType Find (string name, bool throwOnError);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance !TItemType Find(string name, bool throwOnError) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.ModelMemberCollection`2.Find(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function Find (name As String, throwOnError As Boolean) As TItemType" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract TItemType Find(System::String ^ name, bool throwOnError);" />
      <MemberSignature Language="F#" Value="abstract member Find : string * bool -&gt; 'ItemType" Usage="modelMemberCollection.Find (name, throwOnError)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TItemType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="throwOnError" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="c2d7e-115">Имя заданного ключа.</span><span class="sxs-lookup"><span data-stu-id="c2d7e-115">The name of the given key.</span></span></param>
        <param name="throwOnError"><span data-ttu-id="c2d7e-116">Значение <see langword="true" /> для создания исключения, если данный ключ не найден; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c2d7e-116"><see langword="true" /> to throw an exception if the given key is not found; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="c2d7e-117">Поиск в коллекции заданного ключа и возврат найденного элемента (при переопределении в производном классе).</span><span class="sxs-lookup"><span data-stu-id="c2d7e-117">When overridden in a derived class, searches the collection for the given key and returns it if it is found.</span></span> <span data-ttu-id="c2d7e-118">Если ключ не найден, этот метод вызывает исключение или возвращает значение <see langword="null" /> (в зависимости от значения, переданного параметру <paramref name="throwOnError" />).</span><span class="sxs-lookup"><span data-stu-id="c2d7e-118">If the key is not found, this method throws an exception or returns <see langword="null" />, depending on the value passed to <paramref name="throwOnError" />.</span></span></summary>
        <returns><span data-ttu-id="c2d7e-119">Если найден, возвращает элемент</span><span class="sxs-lookup"><span data-stu-id="c2d7e-119">If found, returns the item</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c2d7e-120">Параметр <paramref name="name" /> не найден, и параметр <paramref name="throwOnError" /> имеет значение <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="c2d7e-120">The <paramref name="name" /> is not found and <paramref name="throwOnError" /> is <see langword="true" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Find">
      <MemberSignature Language="C#" Value="protected abstract TItemType Find (TFindType value, bool throwOnError);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance !TItemType Find(!TFindType value, bool throwOnError) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.ModelMemberCollection`2.Find(`1,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function Find (value As TFindType, throwOnError As Boolean) As TItemType" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract TItemType Find(TFindType value, bool throwOnError);" />
      <MemberSignature Language="F#" Value="abstract member Find : 'FindType * bool -&gt; 'ItemType" Usage="modelMemberCollection.Find (value, throwOnError)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TItemType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="TFindType" />
        <Parameter Name="throwOnError" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="c2d7e-121">Тип заданного ключа.</span><span class="sxs-lookup"><span data-stu-id="c2d7e-121">The type of the given key.</span></span></param>
        <param name="throwOnError"><span data-ttu-id="c2d7e-122">Значение <see langword="true" /> для создания исключения, если данный ключ не найден; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c2d7e-122"><see langword="true" /> to throw an exception if the given key is not found; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="c2d7e-123">Поиск в коллекции заданного ключа и возврат найденного элемента (при переопределении в производном классе).</span><span class="sxs-lookup"><span data-stu-id="c2d7e-123">When overridden in a derived class, searches the collection for the given key and returns it if it is found.</span></span> <span data-ttu-id="c2d7e-124">Если ключ не найден, этот метод вызывает исключение или возвращает значение <see langword="null" /> (в зависимости от значения, переданного параметру <paramref name="throwOnError" />).</span><span class="sxs-lookup"><span data-stu-id="c2d7e-124">If the key is not found, this method throws an exception or returns <see langword="null" />, depending on the value passed to <paramref name="throwOnError" />.</span></span></summary>
        <returns><span data-ttu-id="c2d7e-125">Если найден, возвращает элемент.</span><span class="sxs-lookup"><span data-stu-id="c2d7e-125">If found, returns the item.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c2d7e-126">Параметр <paramref name="value" /> не найден, и параметр <paramref name="throwOnError" /> имеет значение <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="c2d7e-126">The <paramref name="value" /> is not found and <paramref name="throwOnError" /> is <see langword="true" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IEnumerator&lt;TItemType&gt; GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;!TItemType&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.ModelMemberCollection`2.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetEnumerator () As IEnumerator(Of TItemType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Collections::Generic::IEnumerator&lt;TItemType&gt; ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;'ItemType&gt;" Usage="modelMemberCollection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;TItemType&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c2d7e-127">Возвращает перечислитель для перебора значений в коллекции.</span><span class="sxs-lookup"><span data-stu-id="c2d7e-127">Returns an enumerator to enumerate through the values in the collection.</span></span></summary>
        <returns><span data-ttu-id="c2d7e-128">Возвращает <see cref="T:System.Collections.Generic.IEnumerator`1" />.</span><span class="sxs-lookup"><span data-stu-id="c2d7e-128">Returns <see cref="T:System.Collections.Generic.IEnumerator`1" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c2d7e-129">Возвращает значение по указанному индексу.</span><span class="sxs-lookup"><span data-stu-id="c2d7e-129">Gets the value at the specified index.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public TItemType this[string name] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !TItemType Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Model.ModelMemberCollection`2.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(name As String) As TItemType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TItemType default[System::String ^] { TItemType get(System::String ^ name); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : 'ItemType" Usage="System.Activities.Presentation.Model.ModelMemberCollection&lt;'ItemType, 'FindType&gt;.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TItemType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="c2d7e-130">Имя загружаемого типа.</span><span class="sxs-lookup"><span data-stu-id="c2d7e-130">The name of the type to retrieve.</span></span></param>
        <summary><span data-ttu-id="c2d7e-131">Возвращает значение по указанному индексу по имени.</span><span class="sxs-lookup"><span data-stu-id="c2d7e-131">Gets the value at the specified index by name.</span></span></summary>
        <value><span data-ttu-id="c2d7e-132">Значение по указанному индексу по имени.</span><span class="sxs-lookup"><span data-stu-id="c2d7e-132">The value at the specified index by name.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c2d7e-133">Параметр <paramref name="name" /> не найден.</span><span class="sxs-lookup"><span data-stu-id="c2d7e-133">The <paramref name="name" /> is not found.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c2d7e-134">Значение параметра <paramref name="name" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c2d7e-134">The <paramref name="name" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public TItemType this[TFindType value] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !TItemType Item(!TFindType)" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Model.ModelMemberCollection`2.Item(`1)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(value As TFindType) As TItemType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TItemType default[TFindType] { TItemType get(TFindType value); };" />
      <MemberSignature Language="F#" Value="member this.Item('FindType) : 'ItemType" Usage="System.Activities.Presentation.Model.ModelMemberCollection&lt;'ItemType, 'FindType&gt;.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TItemType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="TFindType" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="c2d7e-135">Тип, который необходимо получить.</span><span class="sxs-lookup"><span data-stu-id="c2d7e-135">The type to retrieve.</span></span></param>
        <summary><span data-ttu-id="c2d7e-136">Возвращает значение по указанному индексу по типу.</span><span class="sxs-lookup"><span data-stu-id="c2d7e-136">Gets the value at the specified index by type.</span></span></summary>
        <value><span data-ttu-id="c2d7e-137">Значение по указанному индексу по типу.</span><span class="sxs-lookup"><span data-stu-id="c2d7e-137">The value at the specified index by type.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c2d7e-138">Параметр <paramref name="value" /> не найден.</span><span class="sxs-lookup"><span data-stu-id="c2d7e-138">The <paramref name="value" /> is not found.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c2d7e-139">Значение параметра <paramref name="value" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c2d7e-139">The <paramref name="value" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.ModelMemberCollection`2.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c2d7e-140">Возвращает перечислитель, который осуществляет итерацию по коллекции.</span><span class="sxs-lookup"><span data-stu-id="c2d7e-140">Returns an enumerator that iterates through a collection.</span></span></summary>
        <returns><span data-ttu-id="c2d7e-141">Возвращает <see cref="T:System.Collections.IEnumerator" />.</span><span class="sxs-lookup"><span data-stu-id="c2d7e-141">Returns <see cref="T:System.Collections.IEnumerator" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
