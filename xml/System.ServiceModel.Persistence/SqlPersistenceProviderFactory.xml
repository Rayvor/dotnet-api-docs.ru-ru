<Type Name="SqlPersistenceProviderFactory" FullName="System.ServiceModel.Persistence.SqlPersistenceProviderFactory">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7b08053aee8c6a87c34a120250044af0a680e863" /><Meta Name="ms.sourcegitcommit" Value="f1d16425528e237257ca3b58eb49217a514849ea" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="04/24/2019" /><Meta Name="ms.locfileid" Value="64030864" /></Metadata><TypeSignature Language="C#" Value="public class SqlPersistenceProviderFactory : System.ServiceModel.Persistence.PersistenceProviderFactory" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SqlPersistenceProviderFactory extends System.ServiceModel.Persistence.PersistenceProviderFactory" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Persistence.SqlPersistenceProviderFactory" />
  <TypeSignature Language="VB.NET" Value="Public Class SqlPersistenceProviderFactory&#xA;Inherits PersistenceProviderFactory" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlPersistenceProviderFactory : System::ServiceModel::Persistence::PersistenceProviderFactory" />
  <TypeSignature Language="F#" Value="type SqlPersistenceProviderFactory = class&#xA;    inherit PersistenceProviderFactory" />
  <AssemblyInfo>
    <AssemblyName>System.WorkflowServices</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.Persistence.PersistenceProviderFactory</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Obsolete("The WF3 types are deprecated.  Instead, please use the new WF4 types from System.Activities.*")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="d70b6-101">Предоставляемая системой реализация <see cref="T:System.ServiceModel.Persistence.PersistenceProviderFactory" />, используемая для создания экземпляра <see cref="T:System.ServiceModel.Persistence.LockingPersistenceProvider" />, использующего базу данных SQL для хранения сведений о сохраняемом состоянии службы.</span><span class="sxs-lookup"><span data-stu-id="d70b6-101">A system-provided <see cref="T:System.ServiceModel.Persistence.PersistenceProviderFactory" /> implementation used to create a <see cref="T:System.ServiceModel.Persistence.LockingPersistenceProvider" /> instance that uses a SQL database to store persisted service state data.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d70b6-102">Класс <xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory> представляет класс фабрики для полнофункционального поставщика сохраняемых служб.</span><span class="sxs-lookup"><span data-stu-id="d70b6-102">The <xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory> class represents a factory class for a fully-functional, durable service persistence provider.</span></span> <span data-ttu-id="d70b6-103">Для сохранения и получения сведений о состоянии о устойчивой службы WCF можно использовать этот поставщик, предоставляемый системой.</span><span class="sxs-lookup"><span data-stu-id="d70b6-103">You can use this system-provided provider to persist and retrieve state information about a durable WCF service.</span></span>  
  
 <span data-ttu-id="d70b6-104">Помимо сохраняемости, поставщик, созданный классом <xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory>, реализует блокировку записей данных о состоянии службы путем наследования из абстрактного класса <xref:System.ServiceModel.Persistence.LockingPersistenceProvider>.</span><span class="sxs-lookup"><span data-stu-id="d70b6-104">In addition to persistence, the provider created by the <xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory> class implements locking of service state data records by inheriting from the abstract <xref:System.ServiceModel.Persistence.LockingPersistenceProvider> class.</span></span>  <span data-ttu-id="d70b6-105">Методы, взаимодействующие с сохраненными данными (такие как <xref:System.ServiceModel.Persistence.LockingPersistenceProvider.Create%2A> или <xref:System.ServiceModel.Persistence.LockingPersistenceProvider.Update%2A>) имеют необязательный параметр (`lockInstance`), определяет ли сняты или сохранены блокировки на соответствующих данных.</span><span class="sxs-lookup"><span data-stu-id="d70b6-105">Methods that interact with persisted data (such as <xref:System.ServiceModel.Persistence.LockingPersistenceProvider.Create%2A> or <xref:System.ServiceModel.Persistence.LockingPersistenceProvider.Update%2A>) have an optional parameter (`lockInstance`) that defines whether locks on the data in question are released or maintained.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d70b6-106">Для исключений <xref:System.ServiceModel.Persistence.PersistenceException>, вызываемых объектом <xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory>, по умолчанию не скрываются подробные сведения.</span><span class="sxs-lookup"><span data-stu-id="d70b6-106"><xref:System.ServiceModel.Persistence.PersistenceException> exceptions thrown by <xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory> do not have their exception details hidden by default.</span></span> <span data-ttu-id="d70b6-107">Чтобы обеспечить защиту от уязвимостей системы безопасности, можно скрыть эти сведения, задав <xref:System.Workflow.Activities.WorkflowServiceAttributes.IncludeExceptionDetailInFaults%2A> для `false`.</span><span class="sxs-lookup"><span data-stu-id="d70b6-107">To protect against security vulnerabilities, these details can be hidden by setting <xref:System.Workflow.Activities.WorkflowServiceAttributes.IncludeExceptionDetailInFaults%2A> to `false`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d70b6-108">Поставщик сохраняемости SQL сохраняет данные в базе данных SQL Server и извлекает их из этой базы.</span><span class="sxs-lookup"><span data-stu-id="d70b6-108">The SQL Persistence Provider stores and retrieves data from a SQL Server database.</span></span> <span data-ttu-id="d70b6-109">Ведущее приложение должно создать безопасную среду SQL Server, чтобы защититься от злоумышленников, получающих доступ для чтения/записи данных о состоянии экземпляра либо в базе данных, либо на линии связи между приложением и базой данных.</span><span class="sxs-lookup"><span data-stu-id="d70b6-109">The host must create a secure SQL Server environment to protect against attackers gaining read/write access to the instance state either in the database or on the wire between the application and the database.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d70b6-110">Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Persistence.SqlPersistenceProviderFactory" />.</span><span class="sxs-lookup"><span data-stu-id="d70b6-110">Initializes a new instance of the <see cref="T:System.ServiceModel.Persistence.SqlPersistenceProviderFactory" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d70b6-111">Перегружает конструктор для класса <xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory> и предоставляет параметры для задания перечисленного ниже.</span><span class="sxs-lookup"><span data-stu-id="d70b6-111">Overloads of the constructor for the <xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory> class provide parameters for setting the following:</span></span>  
  
-   <span data-ttu-id="d70b6-112">Строка соединения, используемая для доступа к базе данных SQL.</span><span class="sxs-lookup"><span data-stu-id="d70b6-112">The connection string used for accessing the SQL database.</span></span>  
  
-   <span data-ttu-id="d70b6-113">Время ожидания блокировки, используемое для задания длительности блокировки владения.</span><span class="sxs-lookup"><span data-stu-id="d70b6-113">The lock time-out used for defining lock ownership duration.</span></span>  
  
-   <span data-ttu-id="d70b6-114">Формат сериализации данных сохраняемости: XML или двоичные данные.</span><span class="sxs-lookup"><span data-stu-id="d70b6-114">Whether the persistence data is serialized as XML or binary data.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlPersistenceProviderFactory (System.Collections.Specialized.NameValueCollection parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Specialized.NameValueCollection parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (parameters As NameValueCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlPersistenceProviderFactory(System::Collections::Specialized::NameValueCollection ^ parameters);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Persistence.SqlPersistenceProviderFactory : System.Collections.Specialized.NameValueCollection -&gt; System.ServiceModel.Persistence.SqlPersistenceProviderFactory" Usage="new System.ServiceModel.Persistence.SqlPersistenceProviderFactory parameters" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parameters" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="parameters"><span data-ttu-id="d70b6-115">Коллекция параметров, используемых новой фабрикой поставщика сохраняемости.</span><span class="sxs-lookup"><span data-stu-id="d70b6-115">The collection of parameters used by the new persistence provider factory.</span></span> <span data-ttu-id="d70b6-116">В число допустимых параметров входят <see langword="lockTimeout" />, <see langword="connectionStringName" /> и <see langword="serializeAsText" />.</span><span class="sxs-lookup"><span data-stu-id="d70b6-116">Valid parameters include <see langword="lockTimeout" />, <see langword="connectionStringName" />, and <see langword="serializeAsText" />.</span></span></param>
        <summary><span data-ttu-id="d70b6-117">Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Persistence.SqlPersistenceProviderFactory" />, настроенный с указанной коллекцией параметров.</span><span class="sxs-lookup"><span data-stu-id="d70b6-117">Initializes a new instance of the <see cref="T:System.ServiceModel.Persistence.SqlPersistenceProviderFactory" /> class, configured with the specified parameter collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d70b6-118">Этот конструктор можно использовать для произвольного задания параметров `lockTimeout`, `connectionString` и `serializeAsText` без задания остальных параметров, необходимых для других конструкторов (например, чтобы задать параметры `connectionString` и `lockTimeout`, не задавая параметр `serializeAsText`).</span><span class="sxs-lookup"><span data-stu-id="d70b6-118">This constructor can be used to arbitrarily specify `lockTimeout`, `connectionString`, and `serializeAsText` without specifying the other parameters as required by the other constructors (for example, to specify the `connectionString` and `lockTimeout` parameters without specifying the `serializeAsText` parameter.)</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d70b6-119">В следующем примере кода показано, как создать новый экземпляр класса <xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory>, используя коллекцию параметров.</span><span class="sxs-lookup"><span data-stu-id="d70b6-119">The following code example shows how to create a new instance of the <xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory> class using a parameters collection.</span></span>  
  
 [!code-csharp[SqlPersistenceProviderFactory#3](~/samples/snippets/csharp/VS_Snippets_CFX/sqlpersistenceproviderfactory/cs/sqlpersistenceproviderfactory.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlPersistenceProviderFactory (string connectionString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string connectionString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connectionString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlPersistenceProviderFactory(System::String ^ connectionString);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Persistence.SqlPersistenceProviderFactory : string -&gt; System.ServiceModel.Persistence.SqlPersistenceProviderFactory" Usage="new System.ServiceModel.Persistence.SqlPersistenceProviderFactory connectionString" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connectionString"><span data-ttu-id="d70b6-120">Параметры соединения для нового экземпляра поставщика сохраняемости.</span><span class="sxs-lookup"><span data-stu-id="d70b6-120">The connection parameters for the new persistence provider instance.</span></span></param>
        <summary><span data-ttu-id="d70b6-121">Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Persistence.SqlPersistenceProviderFactory" />, настроенный с указанной строкой подключения.</span><span class="sxs-lookup"><span data-stu-id="d70b6-121">Initializes a new instance of the <see cref="T:System.ServiceModel.Persistence.SqlPersistenceProviderFactory" /> class, configured with the specified connection string.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d70b6-122">В следующем примере кода показано, как создать новый экземпляр класса <xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory>, используя строку подключения.</span><span class="sxs-lookup"><span data-stu-id="d70b6-122">The following code example shows how to create a new instance of the <xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory> class using a connection string.</span></span>  
  
 [!code-csharp[SqlPersistenceProviderFactory#2](~/samples/snippets/csharp/VS_Snippets_CFX/sqlpersistenceproviderfactory/cs/sqlpersistenceproviderfactory.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlPersistenceProviderFactory (string connectionString, bool serializeAsText);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string connectionString, bool serializeAsText) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connectionString As String, serializeAsText As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlPersistenceProviderFactory(System::String ^ connectionString, bool serializeAsText);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Persistence.SqlPersistenceProviderFactory : string * bool -&gt; System.ServiceModel.Persistence.SqlPersistenceProviderFactory" Usage="new System.ServiceModel.Persistence.SqlPersistenceProviderFactory (connectionString, serializeAsText)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
        <Parameter Name="serializeAsText" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="connectionString"><span data-ttu-id="d70b6-123">Параметры соединения для нового экземпляра поставщика сохраняемости.</span><span class="sxs-lookup"><span data-stu-id="d70b6-123">The connection parameters for the new persistence provider instance.</span></span></param>
        <param name="serializeAsText"><span data-ttu-id="d70b6-124">Задает, будут ли данные сериализованы как текст или как двоичные данные.</span><span class="sxs-lookup"><span data-stu-id="d70b6-124">Specifies whether data is serialized as text rather than binary.</span></span></param>
        <summary><span data-ttu-id="d70b6-125">Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Persistence.SqlPersistenceProviderFactory" />, настроенный с указанной строкой подключения и параметрами <see langword="serializeAsText" />.</span><span class="sxs-lookup"><span data-stu-id="d70b6-125">Initializes a new instance of the <see cref="T:System.ServiceModel.Persistence.SqlPersistenceProviderFactory" /> class, configured with the specified connection string and <see langword="serializeAsText" /> parameters.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d70b6-126">Значение по умолчанию для `serializeAsText` является `false`, который указывает, что сведения о сохраняемости сериализуется как двоичные данные.</span><span class="sxs-lookup"><span data-stu-id="d70b6-126">The default value for `serializeAsText` is `false`, which indicates that persistence information is serialized as binary data.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d70b6-127">В следующем примере кода демонстрируется создание нового экземпляра класса <xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory>.</span><span class="sxs-lookup"><span data-stu-id="d70b6-127">The following code example shows how to create a new instance of the <xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory> class.</span></span>  
  
 [!code-csharp[SqlPersistenceProviderFactory#1](~/samples/snippets/csharp/VS_Snippets_CFX/sqlpersistenceproviderfactory/cs/sqlpersistenceproviderfactory.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlPersistenceProviderFactory (string connectionString, bool serializeAsText, TimeSpan lockTimeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string connectionString, bool serializeAsText, valuetype System.TimeSpan lockTimeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.String,System.Boolean,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connectionString As String, serializeAsText As Boolean, lockTimeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlPersistenceProviderFactory(System::String ^ connectionString, bool serializeAsText, TimeSpan lockTimeout);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Persistence.SqlPersistenceProviderFactory : string * bool * TimeSpan -&gt; System.ServiceModel.Persistence.SqlPersistenceProviderFactory" Usage="new System.ServiceModel.Persistence.SqlPersistenceProviderFactory (connectionString, serializeAsText, lockTimeout)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
        <Parameter Name="serializeAsText" Type="System.Boolean" />
        <Parameter Name="lockTimeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="connectionString"><span data-ttu-id="d70b6-128">Параметры соединения для нового экземпляра фабрики поставщика сохраняемости.</span><span class="sxs-lookup"><span data-stu-id="d70b6-128">The connection parameters for the new persistence provider factory instance.</span></span></param>
        <param name="serializeAsText"><span data-ttu-id="d70b6-129">Задает, будут ли данные сериализованы как текст или как двоичные данные.</span><span class="sxs-lookup"><span data-stu-id="d70b6-129">Specifies whether data is serialized as text rather than binary.</span></span></param>
        <param name="lockTimeout"><span data-ttu-id="d70b6-130">Время ожидания для блокировки владения.</span><span class="sxs-lookup"><span data-stu-id="d70b6-130">The time-out for lock ownership.</span></span> <span data-ttu-id="d70b6-131">Заблокированные экземпляры автоматически разблокируются по прошествии этого времени.</span><span class="sxs-lookup"><span data-stu-id="d70b6-131">Locked instances are automatically unlocked after this time period.</span></span> <span data-ttu-id="d70b6-132">Время ожидания <see langword="TimeSpan.Zero" />означает, что блокировка не используется.</span><span class="sxs-lookup"><span data-stu-id="d70b6-132">A time-out of <see langword="TimeSpan.Zero" /> specifies that no locking is used.</span></span></param>
        <summary><span data-ttu-id="d70b6-133">Инициализирует новый экземпляр класса <see cref="T:System.ServiceModel.Persistence.SqlPersistenceProviderFactory" />, настроенный с указанной строкой подключения и параметрами <see langword="serializeAsText" /> и <see langword="lockTimeout" />.</span><span class="sxs-lookup"><span data-stu-id="d70b6-133">Initializes a new instance of the <see cref="T:System.ServiceModel.Persistence.SqlPersistenceProviderFactory" /> class, configured with the specified connection string, <see langword="serializeAsText" />, and <see langword="lockTimeout" /> parameters.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d70b6-134">Значение по умолчанию для `serializeAsText` является `false`, который указывает, что сведения о сохраняемости сериализуется как двоичные данные.</span><span class="sxs-lookup"><span data-stu-id="d70b6-134">The default value for `serializeAsText` is `false`, which indicates that persistence information is serialized as binary data.</span></span>  
  
 <span data-ttu-id="d70b6-135">Значение по умолчанию для `lockTimeout` является `TimeSpan.Zero`, который указывает, что блокировка не используется.</span><span class="sxs-lookup"><span data-stu-id="d70b6-135">The default value for `lockTimeout` is `TimeSpan.Zero`, which indicates that locking is not used.</span></span> <span data-ttu-id="d70b6-136">Если `TimeSpan.MaxValue` используется, то блокировки удерживаются неограниченно долго.</span><span class="sxs-lookup"><span data-stu-id="d70b6-136">If `TimeSpan.MaxValue` is used, then locks are maintained indefinitely.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d70b6-137">В следующем примере кода демонстрируется создание нового экземпляра класса <xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory>.</span><span class="sxs-lookup"><span data-stu-id="d70b6-137">The following code example shows how to create a new instance of the <xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory> class.</span></span>  
  
 [!code-csharp[SqlPersistenceProviderFactory#0](~/samples/snippets/csharp/VS_Snippets_CFX/sqlpersistenceproviderfactory/cs/sqlpersistenceproviderfactory.cs#0)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConnectionString">
      <MemberSignature Language="C#" Value="public string ConnectionString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConnectionString" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.ConnectionString" />
      <MemberSignature Language="VB.NET" Value="Public Property ConnectionString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ConnectionString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ConnectionString : string with get, set" Usage="System.ServiceModel.Persistence.SqlPersistenceProviderFactory.ConnectionString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d70b6-138">Возвращает параметры соединения для экземпляров поставщика сохраняемости, создаваемых этой фабрикой.</span><span class="sxs-lookup"><span data-stu-id="d70b6-138">Gets the connection parameters for persistence provider instances created with this factory.</span></span></summary>
        <value><span data-ttu-id="d70b6-139">Параметры соединения для экземпляров поставщика сохраняемости, создаваемых этой фабрикой.</span><span class="sxs-lookup"><span data-stu-id="d70b6-139">The connection parameters for persistence provider instances created with this factory.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d70b6-140">В следующем примере кода показано, как осуществляется задание свойства `ConnectionString` и доступ к нему.</span><span class="sxs-lookup"><span data-stu-id="d70b6-140">The following code example shows how to set and access the `ConnectionString` property.</span></span>  
  
 [!code-csharp[SqlPersistenceProviderFactory#4](~/samples/snippets/csharp/VS_Snippets_CFX/sqlpersistenceproviderfactory/cs/sqlpersistenceproviderfactory.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateProvider">
      <MemberSignature Language="C#" Value="public override System.ServiceModel.Persistence.PersistenceProvider CreateProvider (Guid id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ServiceModel.Persistence.PersistenceProvider CreateProvider(valuetype System.Guid id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.CreateProvider(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateProvider (id As Guid) As PersistenceProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::ServiceModel::Persistence::PersistenceProvider ^ CreateProvider(Guid id);" />
      <MemberSignature Language="F#" Value="override this.CreateProvider : Guid -&gt; System.ServiceModel.Persistence.PersistenceProvider" Usage="sqlPersistenceProviderFactory.CreateProvider id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Persistence.PersistenceProvider</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="id"><span data-ttu-id="d70b6-141">Уникальный идентификатор создаваемого поставщика сохраняемости.</span><span class="sxs-lookup"><span data-stu-id="d70b6-141">The unique identifier of the persistence provider being created.</span></span></param>
        <summary><span data-ttu-id="d70b6-142">Инициализирует новый экземпляр <see cref="T:System.ServiceModel.Persistence.LockingPersistenceProvider" />, использующий в качестве хранилища сохраняемости базу данных SQL.</span><span class="sxs-lookup"><span data-stu-id="d70b6-142">Initializes a new <see cref="T:System.ServiceModel.Persistence.LockingPersistenceProvider" /> instance that uses a SQL database as its persistence store.</span></span></summary>
        <returns><span data-ttu-id="d70b6-143">Созданный новый объект <see cref="T:System.ServiceModel.Persistence.PersistenceProvider" />.</span><span class="sxs-lookup"><span data-stu-id="d70b6-143">A newly-created <see cref="T:System.ServiceModel.Persistence.PersistenceProvider" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d70b6-144">Инициализированный поставщик сохраняемости использует текущие параметры создающей фабрики (<xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.ConnectionString%2A>, <xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.LockTimeout%2A> и <xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.SerializeAsText%2A>), даже если параметры фабрики изменились после создания поставщика сохраняемости.</span><span class="sxs-lookup"><span data-stu-id="d70b6-144">The initialized persistence provider uses the current parameters of the creating factory (<xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.ConnectionString%2A>, <xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.LockTimeout%2A>, and <xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.SerializeAsText%2A>), even if the factory's parameters are changed after the persistence provider is created.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d70b6-145">В следующем примере кода демонстрируется выполнение метода `CreateProvider`.</span><span class="sxs-lookup"><span data-stu-id="d70b6-145">The following code example shows how to execute the `CreateProvider` method.</span></span> <span data-ttu-id="d70b6-146">Обратите внимание, что обращение к получающемуся поставщику производится как к экземпляру <xref:System.ServiceModel.Persistence.LockingPersistenceProvider>.</span><span class="sxs-lookup"><span data-stu-id="d70b6-146">Note that the resulting provider is accessed as a <xref:System.ServiceModel.Persistence.LockingPersistenceProvider> instance.</span></span>  
  
 [!code-csharp[SqlPersistenceProviderFactory#7](~/samples/snippets/csharp/VS_Snippets_CFX/sqlpersistenceproviderfactory/cs/sqlpersistenceproviderfactory.cs#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultCloseTimeout">
      <MemberSignature Language="C#" Value="protected override TimeSpan DefaultCloseTimeout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan DefaultCloseTimeout" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.DefaultCloseTimeout" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DefaultCloseTimeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property TimeSpan DefaultCloseTimeout { TimeSpan get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultCloseTimeout : TimeSpan" Usage="System.ServiceModel.Persistence.SqlPersistenceProviderFactory.DefaultCloseTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d70b6-147">Возвращает значение времени ожидания по умолчанию, используемое при закрытии поставщиков сохраняемости, созданных с помощью этой фабрики.</span><span class="sxs-lookup"><span data-stu-id="d70b6-147">Gets the default time-out value used when persistence providers created with this factory are closed.</span></span></summary>
        <value><span data-ttu-id="d70b6-148">Значение времени ожидания по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="d70b6-148">The default time-out value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d70b6-149">Значение по умолчанию для времени ожидания закрытия составляет 15 секунд.</span><span class="sxs-lookup"><span data-stu-id="d70b6-149">The default value for close time-out is 15 seconds.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultOpenTimeout">
      <MemberSignature Language="C#" Value="protected override TimeSpan DefaultOpenTimeout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan DefaultOpenTimeout" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.DefaultOpenTimeout" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DefaultOpenTimeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property TimeSpan DefaultOpenTimeout { TimeSpan get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultOpenTimeout : TimeSpan" Usage="System.ServiceModel.Persistence.SqlPersistenceProviderFactory.DefaultOpenTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d70b6-150">Возвращает значение времени ожидания по умолчанию, используемое при открытии поставщика сохраняемости.</span><span class="sxs-lookup"><span data-stu-id="d70b6-150">Gets the default time-out value used when persistence provider is opened.</span></span></summary>
        <value><span data-ttu-id="d70b6-151">Значение времени ожидания по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="d70b6-151">The default time-out value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d70b6-152">Значение по умолчанию для времени ожидания открытия составляет 15 секунд.</span><span class="sxs-lookup"><span data-stu-id="d70b6-152">The default value for open time-out is 15 seconds.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LockTimeout">
      <MemberSignature Language="C#" Value="public TimeSpan LockTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan LockTimeout" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.LockTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property LockTimeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan LockTimeout { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.LockTimeout : TimeSpan with get, set" Usage="System.ServiceModel.Persistence.SqlPersistenceProviderFactory.LockTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d70b6-153">Значение времени ожидания для блокировки владения, используемое экземплярами поставщика сохраняемости, созданными этим экземпляром.</span><span class="sxs-lookup"><span data-stu-id="d70b6-153">The time-out for lock ownership used by persistence provider instances created by this instance.</span></span> <span data-ttu-id="d70b6-154">Заблокированные экземпляры автоматически разблокируются по прошествии этого времени.</span><span class="sxs-lookup"><span data-stu-id="d70b6-154">Locked instances are automatically unlocked after this time period.</span></span></summary>
        <value><span data-ttu-id="d70b6-155">Значение времени ожидания для владения блокировкой.</span><span class="sxs-lookup"><span data-stu-id="d70b6-155">The time-out value for lock ownership.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d70b6-156">Время ожидания `TimeSpan.Zero`означает, что блокировка не используется.</span><span class="sxs-lookup"><span data-stu-id="d70b6-156">A time-out of `TimeSpan.Zero` specifies that no locking is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d70b6-157">В следующем примере кода показано, как осуществляется доступ к свойству `LockTimeout`.</span><span class="sxs-lookup"><span data-stu-id="d70b6-157">The following code example shows how to access the `LockTimeout` property.</span></span>  
  
 [!code-csharp[SqlPersistenceProviderFactory#5](~/samples/snippets/csharp/VS_Snippets_CFX/sqlpersistenceproviderfactory/cs/sqlpersistenceproviderfactory.cs#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAbort">
      <MemberSignature Language="C#" Value="protected override void OnAbort ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnAbort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnAbort" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnAbort ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnAbort();" />
      <MemberSignature Language="F#" Value="override this.OnAbort : unit -&gt; unit" Usage="sqlPersistenceProviderFactory.OnAbort " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d70b6-158">Представляет этап прерывания.</span><span class="sxs-lookup"><span data-stu-id="d70b6-158">Represents the Abort phase.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d70b6-159">`OnAbort` активируется, когда узел службы завершает работу немедленно и, обрабатываемый активные команды закрываются.</span><span class="sxs-lookup"><span data-stu-id="d70b6-159">`OnAbort` fires when the service host shuts down abruptly and active commands currently being processed are closed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBeginClose">
      <MemberSignature Language="C#" Value="protected override IAsyncResult OnBeginClose (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.IAsyncResult OnBeginClose(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnBeginClose (timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override IAsyncResult ^ OnBeginClose(TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="override this.OnBeginClose : TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="sqlPersistenceProviderFactory.OnBeginClose (timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="d70b6-160">Промежуток времени, по истечении которого поставщик сохраняемости прерывает эту попытку.</span><span class="sxs-lookup"><span data-stu-id="d70b6-160">The time period after which the persistence provider aborts this attempt.</span></span></param>
        <param name="callback"><span data-ttu-id="d70b6-161">Метод, вызываемый при завершении этой операции.</span><span class="sxs-lookup"><span data-stu-id="d70b6-161">The method to be called when the operation is completed.</span></span></param>
        <param name="state"><span data-ttu-id="d70b6-162">Предоставляемый пользователем объект, отличающий конкретную асинхронную операцию от других операций.</span><span class="sxs-lookup"><span data-stu-id="d70b6-162">A user-provided object that distinguishes this particular asynchronous operation from other operations.</span></span></param>
        <summary><span data-ttu-id="d70b6-163">Представляет начало этапа Close.</span><span class="sxs-lookup"><span data-stu-id="d70b6-163">Represents the beginning of the Close phase.</span></span></summary>
        <returns><span data-ttu-id="d70b6-164">Состояние вызова асинхронного метода <see cref="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />.</span><span class="sxs-lookup"><span data-stu-id="d70b6-164">The state of the <see cref="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" /> asynchronous method call.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d70b6-165">Этап Close наступает при закрытии службы.</span><span class="sxs-lookup"><span data-stu-id="d70b6-165">The Close phase occurs when the service is closed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBeginOpen">
      <MemberSignature Language="C#" Value="protected override IAsyncResult OnBeginOpen (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.IAsyncResult OnBeginOpen(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnBeginOpen (timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override IAsyncResult ^ OnBeginOpen(TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="override this.OnBeginOpen : TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="sqlPersistenceProviderFactory.OnBeginOpen (timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="d70b6-166">Промежуток времени, по истечении которого поставщик сохраняемости прерывает эту попытку.</span><span class="sxs-lookup"><span data-stu-id="d70b6-166">The time period after which the persistence provider aborts this attempt.</span></span></param>
        <param name="callback"><span data-ttu-id="d70b6-167">Метод, вызываемый при завершении этой операции.</span><span class="sxs-lookup"><span data-stu-id="d70b6-167">The method to be called when the operation is completed.</span></span></param>
        <param name="state"><span data-ttu-id="d70b6-168">Предоставляемый пользователем объект, отличающий конкретную асинхронную операцию от других операций.</span><span class="sxs-lookup"><span data-stu-id="d70b6-168">A user-provided object that distinguishes this particular asynchronous operation from other operations.</span></span></param>
        <summary><span data-ttu-id="d70b6-169">Представляет начало этапа Open.</span><span class="sxs-lookup"><span data-stu-id="d70b6-169">Represents the beginning of the Open phase.</span></span></summary>
        <returns><span data-ttu-id="d70b6-170">Состояние вызова асинхронного метода <see cref="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" />.</span><span class="sxs-lookup"><span data-stu-id="d70b6-170">The state of the <see cref="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" /> asynchronous method call.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d70b6-171">Этап Open наступает при открытии службы.</span><span class="sxs-lookup"><span data-stu-id="d70b6-171">The Open phase occurs when the service is opened.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnClose">
      <MemberSignature Language="C#" Value="protected override void OnClose (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnClose(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnClose(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnClose (timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnClose(TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="override this.OnClose : TimeSpan -&gt; unit" Usage="sqlPersistenceProviderFactory.OnClose timeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="d70b6-172">Промежуток времени, по истечении которого поставщик сохраняемости прерывает эту попытку.</span><span class="sxs-lookup"><span data-stu-id="d70b6-172">The time period after which the persistence provider aborts this attempt.</span></span></param>
        <summary><span data-ttu-id="d70b6-173">Представляет этап Close.</span><span class="sxs-lookup"><span data-stu-id="d70b6-173">Represents the Close phase.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d70b6-174">Этап Close наступает при закрытии службы.</span><span class="sxs-lookup"><span data-stu-id="d70b6-174">The Close phase occurs when the service is closed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEndClose">
      <MemberSignature Language="C#" Value="protected override void OnEndClose (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnEndClose(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnEndClose(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnEndClose (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnEndClose(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="override this.OnEndClose : IAsyncResult -&gt; unit" Usage="sqlPersistenceProviderFactory.OnEndClose result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="d70b6-175">Ссылка на результат операции.</span><span class="sxs-lookup"><span data-stu-id="d70b6-175">A reference to the result of the operation.</span></span></param>
        <summary><span data-ttu-id="d70b6-176">Представляет конец этапа Close.</span><span class="sxs-lookup"><span data-stu-id="d70b6-176">Represents the end of the Close phase.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d70b6-177">Этап Close наступает при закрытии службы.</span><span class="sxs-lookup"><span data-stu-id="d70b6-177">The Close phase occurs when the service is closed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEndOpen">
      <MemberSignature Language="C#" Value="protected override void OnEndOpen (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnEndOpen(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnEndOpen(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnEndOpen (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnEndOpen(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="override this.OnEndOpen : IAsyncResult -&gt; unit" Usage="sqlPersistenceProviderFactory.OnEndOpen result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="d70b6-178">Ссылка на результат операции.</span><span class="sxs-lookup"><span data-stu-id="d70b6-178">A reference to the result of the operation.</span></span></param>
        <summary><span data-ttu-id="d70b6-179">Представляет конец этапа Open.</span><span class="sxs-lookup"><span data-stu-id="d70b6-179">Represents the end of the Open phase.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d70b6-180">Этап Open наступает при открытии службы.</span><span class="sxs-lookup"><span data-stu-id="d70b6-180">The Open phase occurs when the service is opened.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnOpen">
      <MemberSignature Language="C#" Value="protected override void OnOpen (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnOpen(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnOpen(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnOpen (timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnOpen(TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="override this.OnOpen : TimeSpan -&gt; unit" Usage="sqlPersistenceProviderFactory.OnOpen timeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="d70b6-181">Промежуток времени, по истечении которого поставщик сохраняемости прерывает эту попытку.</span><span class="sxs-lookup"><span data-stu-id="d70b6-181">The time period after which the persistence provider aborts this attempt.</span></span></param>
        <summary><span data-ttu-id="d70b6-182">Представляет этап Open.</span><span class="sxs-lookup"><span data-stu-id="d70b6-182">Represents the Open phase.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d70b6-183">Этап Open наступает при открытии службы.</span><span class="sxs-lookup"><span data-stu-id="d70b6-183">The Open phase occurs when the service is opened.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SerializeAsText">
      <MemberSignature Language="C#" Value="public bool SerializeAsText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SerializeAsText" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.SerializeAsText" />
      <MemberSignature Language="VB.NET" Value="Public Property SerializeAsText As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SerializeAsText { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SerializeAsText : bool with get, set" Usage="System.ServiceModel.Persistence.SqlPersistenceProviderFactory.SerializeAsText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d70b6-184">Указывает способ сериализации данных в поставщиках сохраняемости, созданных этой фабрикой: как текст или как двоичные данные.</span><span class="sxs-lookup"><span data-stu-id="d70b6-184">Specifies whether data is serialized as text rather than binary in persistence providers created with this factory.</span></span></summary>
        <value><span data-ttu-id="d70b6-185">Значение <see langword="true" />, если данные службы проходят сериализацию как текст, в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d70b6-185"><see langword="true" /> if the service information is serialized as text; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d70b6-186">Значение по умолчанию для `serializeAsText` является `false`, который указывает, что сведения о сохраняемости сериализуется как двоичные данные.</span><span class="sxs-lookup"><span data-stu-id="d70b6-186">The default value for `serializeAsText` is `false`, which indicates that persistence information is serialized as binary data.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d70b6-187">В следующем примере кода показано, как осуществляется доступ к свойству `SerializeAsText`.</span><span class="sxs-lookup"><span data-stu-id="d70b6-187">The following code example shows how to access the `SerializeAsText` property.</span></span>  
  
 [!code-csharp[SqlPersistenceProviderFactory#6](~/samples/snippets/csharp/VS_Snippets_CFX/sqlpersistenceproviderfactory/cs/sqlpersistenceproviderfactory.cs#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>