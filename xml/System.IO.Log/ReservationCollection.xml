<Type Name="ReservationCollection" FullName="System.IO.Log.ReservationCollection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0b5f7c5e00b035f2197d50e122641e5237cd5df1" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70459830" /></Metadata><TypeSignature Language="C#" Value="public abstract class ReservationCollection : System.Collections.Generic.ICollection&lt;long&gt;, System.Collections.Generic.IEnumerable&lt;long&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ReservationCollection extends System.Object implements class System.Collections.Generic.ICollection`1&lt;int64&gt;, class System.Collections.Generic.IEnumerable`1&lt;int64&gt;, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.IO.Log.ReservationCollection" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ReservationCollection&#xA;Implements ICollection(Of Long), IEnumerable(Of Long)" />
  <TypeSignature Language="C++ CLI" Value="public ref class ReservationCollection abstract : System::Collections::Generic::ICollection&lt;long&gt;, System::Collections::Generic::IEnumerable&lt;long&gt;" />
  <TypeSignature Language="F#" Value="type ReservationCollection = class&#xA;    interface ICollection&lt;int64&gt;&#xA;    interface seq&lt;int64&gt;&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.IO.Log</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.ICollection&lt;System.Int64&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;System.Int64&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="8d24e-101">Управляет коллекцией резервирований пространства, созданной в последовательности записей.</span><span class="sxs-lookup"><span data-stu-id="8d24e-101">Manages the collection of space reservations made in a record sequence.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d24e-102">Этот класс представляет набор областей резервирования, созданных в последовательности записей.</span><span class="sxs-lookup"><span data-stu-id="8d24e-102">This class represents a set of reservation areas that are made in a record sequence.</span></span> <span data-ttu-id="8d24e-103">Новые резервирования выделяются при добавлении элементов в коллекцию.</span><span class="sxs-lookup"><span data-stu-id="8d24e-103">Adding items to the collection allocates new reservations.</span></span> <span data-ttu-id="8d24e-104">При удалении элементов из коллекции данные резервирования освобождаются.</span><span class="sxs-lookup"><span data-stu-id="8d24e-104">Removing items from the collection frees those reservations.</span></span>  
  
 <span data-ttu-id="8d24e-105">Приложение резервирует пространство в журнале, когда имеются данные для записи в будущем, но их нельзя записать немедленно.</span><span class="sxs-lookup"><span data-stu-id="8d24e-105">An application reserves space in the log when it has data that is to be written to the log in the future, but cannot write it immediately.</span></span> <span data-ttu-id="8d24e-106">Резервирования гарантируют, что данные могут быть записаны в журнал, когда они будут доступны для записи.</span><span class="sxs-lookup"><span data-stu-id="8d24e-106">Reservations provide a guarantee that the data can be written to the log when the data is available to be written.</span></span> <span data-ttu-id="8d24e-107">При использовании журналов приложения часто зарезервированы одну или несколько записей журнала в области маршалирования.</span><span class="sxs-lookup"><span data-stu-id="8d24e-107">When using logs, applications often reserve one or more log records in a marshaling area.</span></span> <span data-ttu-id="8d24e-108">Перед добавлением записи необходимо резервировать.</span><span class="sxs-lookup"><span data-stu-id="8d24e-108">You must reserve records prior to appending them.</span></span>  
  
 <span data-ttu-id="8d24e-109">Резервирования можно использовать, чтобы гарантировать завершение операции перед записью данных; в противном случае выполняется откат изменений.</span><span class="sxs-lookup"><span data-stu-id="8d24e-109">Reservations can be used to guarantee that an operation can be completed before the data is committed; otherwise, the changes are rolled back.</span></span> <span data-ttu-id="8d24e-110">Его также можно использовать, чтобы записать "отмененное действие" в журнале.</span><span class="sxs-lookup"><span data-stu-id="8d24e-110">It can also be used to record an "undo action" in the log.</span></span> <span data-ttu-id="8d24e-111">Во время операции отката диспетчер ресурсов транзакций должен иметь возможность восстановить свое состояние, если его работа была прервана.</span><span class="sxs-lookup"><span data-stu-id="8d24e-111">During a rollback operation, a transactional resource manager (RM) must be able to recover its state if the RM is interrupted during the rollback operation.</span></span> <span data-ttu-id="8d24e-112">Диспетчер ресурсов может резервировать пространство в журнале до его использования с помощью области резервирования.</span><span class="sxs-lookup"><span data-stu-id="8d24e-112">By using a reservation area, an RM can reserve space in a log before it is used.</span></span>  
  
 <span data-ttu-id="8d24e-113">Метод <xref:System.IO.Log.IRecordSequence.ReserveAndAppend%2A> может резервировать пространство или добавлять данные, либо выполнять оба действия, в зависимости от параметров, указанных при выполнении вызова.</span><span class="sxs-lookup"><span data-stu-id="8d24e-113">The <xref:System.IO.Log.IRecordSequence.ReserveAndAppend%2A> method can either reserve space or append data, or both, depending on the parameters that are specified when making the call.</span></span> <span data-ttu-id="8d24e-114">В ходе выполнения транзакции приложение может добавлять сведения отмены действия и резервировать пространство для записей компенсации.</span><span class="sxs-lookup"><span data-stu-id="8d24e-114">As work progresses in a transaction, an application can append the undo information and reserve space for compensation records.</span></span> <span data-ttu-id="8d24e-115">Во время операции отката созданные записи компенсации указывают, что было отменено на диске.</span><span class="sxs-lookup"><span data-stu-id="8d24e-115">During a rollback operation, compensation records that are created indicate what has been undone on the disk.</span></span> <span data-ttu-id="8d24e-116">Записи добавляются с использованием ранее зарезервированного пространства.</span><span class="sxs-lookup"><span data-stu-id="8d24e-116">The records are appended using space that has been previously reserved.</span></span> <span data-ttu-id="8d24e-117">Это гарантирует, что во время операции отката у диспетчера ресурсов не закончится пространство журнала, что является неустранимой ошибкой.</span><span class="sxs-lookup"><span data-stu-id="8d24e-117">This guarantees that an RM does not run out of log space, which is a fatal condition, while performing a rollback operation.</span></span> <span data-ttu-id="8d24e-118">Если журнал заполнится во время транзакции, приложение может выполнить безопасный откат без повреждения устойчивых данных.</span><span class="sxs-lookup"><span data-stu-id="8d24e-118">If a log fills up during a transaction, an application can safely roll back a transaction without corrupting durable data.</span></span>  
  
 <span data-ttu-id="8d24e-119">CLFS — это ARIES-совместимая система, предназначенная для упреждающего ведения журнала.</span><span class="sxs-lookup"><span data-stu-id="8d24e-119">CLFS is an ARIES-compliant logging system, meant for write-ahead logging.</span></span> <span data-ttu-id="8d24e-120">В упреждающем ведении журнала приложение записывает отмененное действие перед выполнением операции, резервируя пространство для внесения в журнал записи компенсации, которая может использоваться во время отката.</span><span class="sxs-lookup"><span data-stu-id="8d24e-120">In write-ahead logging, an application writes an undo record before it performs the operation, reserving the amount of space it takes in the log to write a compensating record, which may be used during rollback.</span></span> <span data-ttu-id="8d24e-121">В дальнейшем зарезервированное пространство используется при внесении записи компенсации.</span><span class="sxs-lookup"><span data-stu-id="8d24e-121">Later, the reserved space is used when the compensation record is actually written.</span></span>  
  
 <span data-ttu-id="8d24e-122">Приложения могут резервировать или получать доступ к пространству журнала (данные операции являются взаимоисключающими).</span><span class="sxs-lookup"><span data-stu-id="8d24e-122">Applications can either reserve or access long space at any given time (they are mutually exclusive operations).</span></span> <span data-ttu-id="8d24e-123">После внесения записи фиксации в журнал приложение может освободить резервирования для записей компенсации.</span><span class="sxs-lookup"><span data-stu-id="8d24e-123">After a commit record is written to the log, an application can free up the reservations for the compensation records.</span></span> <span data-ttu-id="8d24e-124">Это действие можно выполнить с помощью вызова метода <xref:System.IO.Log.ReservationCollection.FreeReservation%2A> или <xref:System.IO.Log.IRecordSequence.ReserveAndAppend%2A>.</span><span class="sxs-lookup"><span data-stu-id="8d24e-124">This action can be done by calling either the <xref:System.IO.Log.ReservationCollection.FreeReservation%2A> or <xref:System.IO.Log.IRecordSequence.ReserveAndAppend%2A> method.</span></span> <span data-ttu-id="8d24e-125">Вызов метода <xref:System.IO.Log.IRecordSequence.ReserveAndAppend%2A> гарантирует, что операция является атомарной, а вызов метода <xref:System.IO.Log.ReservationCollection.FreeReservation%2A> такой гарантии не предоставляет.</span><span class="sxs-lookup"><span data-stu-id="8d24e-125">Calling the <xref:System.IO.Log.IRecordSequence.ReserveAndAppend%2A> method guarantees that the operation is atomic, while calling the <xref:System.IO.Log.ReservationCollection.FreeReservation%2A> method does not.</span></span>  
  
 <span data-ttu-id="8d24e-126">При освобождении записей необходимо освобождать те же записи, которые совместно резервировались в предыдущем вызове метода <xref:System.IO.Log.IRecordSequence.ReserveAndAppend%2A>.</span><span class="sxs-lookup"><span data-stu-id="8d24e-126">When you free records, you must free the same records that you reserved together in a previous call to the <xref:System.IO.Log.IRecordSequence.ReserveAndAppend%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8d24e-127">Реализация <xref:System.IO.Log.IRecordSequence> должна использовать методы <xref:System.IO.Log.ReservationCollection.MakeReservation%2A> и <xref:System.IO.Log.ReservationCollection.FreeReservation%2A>, чтобы выполнить выделение и освобождение резервирований.</span><span class="sxs-lookup"><span data-stu-id="8d24e-127">Your implementation of <xref:System.IO.Log.IRecordSequence> must implement the <xref:System.IO.Log.ReservationCollection.MakeReservation%2A> and <xref:System.IO.Log.ReservationCollection.FreeReservation%2A> methods to perform the actual reservation allocation and deallocation.</span></span> <span data-ttu-id="8d24e-128">Кроме того, реализация должна вызывать метод <xref:System.IO.Log.ReservationCollection.ReservationFreed%2A> при внесении записи в зарезервированное пространство.</span><span class="sxs-lookup"><span data-stu-id="8d24e-128">In addition, your implementation must also call <xref:System.IO.Log.ReservationCollection.ReservationFreed%2A> when a record is written into a reserved space.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d24e-129">Резервирование можно выполнить двумя способами, которые демонстрируют следующие примеры.</span><span class="sxs-lookup"><span data-stu-id="8d24e-129">Reservations can be performed in two ways as shown in the following examples.</span></span> <span data-ttu-id="8d24e-130">Для надежной обработки можно пользоваться способами из образцов.</span><span class="sxs-lookup"><span data-stu-id="8d24e-130">You can adopt the practices in the samples for robust processing.</span></span> <span data-ttu-id="8d24e-131">Обратите внимание, что эта задача может быть выполнена только при использовании класса <xref:System.IO.Log.LogRecordSequence>, основанного на CLFS.</span><span class="sxs-lookup"><span data-stu-id="8d24e-131">Notice that this task can only be performed when using the CLFS-based <xref:System.IO.Log.LogRecordSequence> class.</span></span>  
  
```  
//Using the ReserveAndAppend Method  
ReservationCollection reservations = recordSequence.CreateReservationCollection();  
long[] lengthOfUndoRecords = new long[] { 1000 };  
recordSequence.ReserveAndAppend(recordData,  
                                                     userSqn,  
                                                     previousSqn,  
                                                     RecordSequenceAppendOptions.None,  
                                                     reservations,  
                                                     lengthOfUndoRecords);  
recordSequence.Append(undoRecordData,    // If necessary …  
                                    userSqn,  
                                    previousSqn,  
                                    RecordSequenceAppendOptions.ForceFlush,  
                                    reservations);  
  
// Using the Manual Approach  
ReservationCollection reservations = recordSequence.CreateReservationCollection();  
reservations.Add(lengthOfUndoRecord);  
try  
{  
   recordSequence.Append(recordData, userSqn, previousSqn, RecordAppendOptions.None);  
}  
catch (Exception)  
{  
   reservations.Remove(lengthOfUndoRecord);  
   throw;  
}  
  
recordSequence.Append(undoRecordData, userSqn, previousSqn, RecordAppendOptions.ForceFlush, reservations);  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ReservationCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.ReservationCollection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ReservationCollection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8d24e-132">Инициализирует новый экземпляр класса <see cref="T:System.IO.Log.ReservationCollection" />.</span><span class="sxs-lookup"><span data-stu-id="8d24e-132">Initializes a new instance of the <see cref="T:System.IO.Log.ReservationCollection" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (long size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(int64 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.ReservationCollection.Add(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (size As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Add(long size);" />
      <MemberSignature Language="F#" Value="abstract member Add : int64 -&gt; unit&#xA;override this.Add : int64 -&gt; unit" Usage="reservationCollection.Add size" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Add(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="size" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="size"><span data-ttu-id="8d24e-133">Размер запрошенного резервирования в байтах.</span><span class="sxs-lookup"><span data-stu-id="8d24e-133">The size of the requested reservation, in bytes.</span></span></param>
        <summary><span data-ttu-id="8d24e-134">Выделяет резервирование и добавляет его в коллекцию.</span><span class="sxs-lookup"><span data-stu-id="8d24e-134">Allocates a reservation and adds it to the collection.</span></span> <span data-ttu-id="8d24e-135">Наследовать этот метод нельзя.</span><span class="sxs-lookup"><span data-stu-id="8d24e-135">This method cannot be inherited.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8d24e-136">В следующем примере показано, как создать резервирование вручную.</span><span class="sxs-lookup"><span data-stu-id="8d24e-136">The following example shows how to manually make a reservation.</span></span> <span data-ttu-id="8d24e-137">Обратите внимание, что эта задача может быть выполнена только при использовании класса <xref:System.IO.Log.LogRecordSequence>, основанного на CLFS.</span><span class="sxs-lookup"><span data-stu-id="8d24e-137">Notice that this task can only be performed when using the CLFS-based <xref:System.IO.Log.LogRecordSequence> class.</span></span>  
  
```  
ReservationCollection reservations = recordSequence.CreateReservationCollection();  
reservations.Add(lengthOfUndoRecord);  
try  
{  
   recordSequence.Append(recordData, userSqn, previousSqn, RecordAppendOptions.None);  
}  
catch (Exception)  
{  
   reservations.Remove(lengthOfUndoRecord);  
   throw;  
}  
  
recordSequence.Append(undoRecordData, userSqn, previousSqn, RecordAppendOptions.ForceFlush, reservations);  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="8d24e-138">Значение параметра <paramref name="archiveTail" /> не лежит между основным и последним порядковыми номерами этой последовательности.</span><span class="sxs-lookup"><span data-stu-id="8d24e-138"><paramref name="archiveTail" /> is not between the base and last sequence numbers of this sequence.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8d24e-139">Значение параметра <paramref name="size" /> недействительно или превышает максимальный размер резервирования.</span><span class="sxs-lookup"><span data-stu-id="8d24e-139"><paramref name="size" /> is invalid or exceeds maximum reservation size.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="8d24e-140">При создании моментального снимка архива произошла ошибка ввода-вывода.</span><span class="sxs-lookup"><span data-stu-id="8d24e-140">An I/O error occurs when creating the archive snapshot.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="8d24e-141">Метод был вызван после удаления последовательности.</span><span class="sxs-lookup"><span data-stu-id="8d24e-141">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="8d24e-142">Недостаточно памяти, чтобы продолжить выполнение программы.</span><span class="sxs-lookup"><span data-stu-id="8d24e-142">There is not enough memory to continue the execution of the program.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="8d24e-143">Доступ к заданному хранилищу журнала запрещен операционной системой.</span><span class="sxs-lookup"><span data-stu-id="8d24e-143">Access for the specified log store is denied by the operating system.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="8d24e-144">Последовательность записей заполнена.</span><span class="sxs-lookup"><span data-stu-id="8d24e-144">The record sequence is full.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.ReservationCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit&#xA;override this.Clear : unit -&gt; unit" Usage="reservationCollection.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8d24e-145">Освобождает все резервирования в коллекции.</span><span class="sxs-lookup"><span data-stu-id="8d24e-145">Releases all of the reservations in the collection.</span></span> <span data-ttu-id="8d24e-146">Наследовать этот метод нельзя.</span><span class="sxs-lookup"><span data-stu-id="8d24e-146">This method cannot be inherited.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8d24e-147">Значение параметра <paramref name="size" /> недействительно или превышает максимальный размер резервирования.</span><span class="sxs-lookup"><span data-stu-id="8d24e-147"><paramref name="size" /> is invalid or exceeds maximum reservation size.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="8d24e-148">При создании моментального снимка архива произошла ошибка ввода-вывода.</span><span class="sxs-lookup"><span data-stu-id="8d24e-148">An I/O error occurs when creating the archive snapshot.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="8d24e-149">Метод был вызван после удаления последовательности.</span><span class="sxs-lookup"><span data-stu-id="8d24e-149">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="8d24e-150">Недостаточно памяти, чтобы продолжить выполнение программы.</span><span class="sxs-lookup"><span data-stu-id="8d24e-150">There is not enough memory to continue the execution of the program.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="8d24e-151">Последовательность записей заполнена.</span><span class="sxs-lookup"><span data-stu-id="8d24e-151">The record sequence is full.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="8d24e-152">Доступ к заданному хранилищу журнала запрещен операционной системой.</span><span class="sxs-lookup"><span data-stu-id="8d24e-152">Access for the specified log store is denied by the operating system.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (long size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(int64 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.ReservationCollection.Contains(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (size As Long) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Contains(long size);" />
      <MemberSignature Language="F#" Value="abstract member Contains : int64 -&gt; bool&#xA;override this.Contains : int64 -&gt; bool" Usage="reservationCollection.Contains size" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Contains(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="size" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="size"><span data-ttu-id="8d24e-153">Размер, который требуется найти в коллекции.</span><span class="sxs-lookup"><span data-stu-id="8d24e-153">The size to locate in the collection.</span></span></param>
        <summary><span data-ttu-id="8d24e-154">Определяет, создано ли резервирование указанного размера.</span><span class="sxs-lookup"><span data-stu-id="8d24e-154">Determines whether a reservation of the specified size has been made.</span></span> <span data-ttu-id="8d24e-155">Наследовать этот метод нельзя.</span><span class="sxs-lookup"><span data-stu-id="8d24e-155">This method cannot be inherited.</span></span></summary>
        <returns><span data-ttu-id="8d24e-156">Значение <see langword="true" />, если было создано по крайней мере одно резервирование указанного размера; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8d24e-156"><see langword="true" /> if at least one reservation of the specified size has been made; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="8d24e-157">Метод был вызван после удаления последовательности.</span><span class="sxs-lookup"><span data-stu-id="8d24e-157">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="8d24e-158">Недостаточно памяти, чтобы продолжить выполнение программы.</span><span class="sxs-lookup"><span data-stu-id="8d24e-158">There is not enough memory to continue the execution of the program.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="8d24e-159">Доступ к заданному хранилищу журнала запрещен операционной системой.</span><span class="sxs-lookup"><span data-stu-id="8d24e-159">Access for the specified log store is denied by the operating system.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (long[] array, int arrayIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(int64[] array, int32 arrayIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.ReservationCollection.CopyTo(System.Int64[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As Long(), arrayIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(cli::array &lt;long&gt; ^ array, int arrayIndex);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : int64[] * int -&gt; unit&#xA;override this.CopyTo : int64[] * int -&gt; unit" Usage="reservationCollection.CopyTo (array, arrayIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Int64[]" />
        <Parameter Name="arrayIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="8d24e-160">Массив, который является целевым объектом копирования.</span><span class="sxs-lookup"><span data-stu-id="8d24e-160">The array that is the destination of the copy.</span></span></param>
        <param name="arrayIndex"><span data-ttu-id="8d24e-161">Индекс (отсчет с нуля) в массиве, с которого начинается копирование.</span><span class="sxs-lookup"><span data-stu-id="8d24e-161">The zero-based index in the array at which copying begins.</span></span></param>
        <summary><span data-ttu-id="8d24e-162">Копирует коллекцию в одномерный массив, начиная с указанного индекса массива назначения.</span><span class="sxs-lookup"><span data-stu-id="8d24e-162">Copies the entire collection to a one-dimensional array, starting at the specified index of the target array.</span></span> <span data-ttu-id="8d24e-163">Наследовать этот метод нельзя.</span><span class="sxs-lookup"><span data-stu-id="8d24e-163">This method cannot be inherited.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8d24e-164">Значение параметра <paramref name="array" /> или <paramref name="arrayIndex" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="8d24e-164"><paramref name="array" /> or <paramref name="arrayIndex" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="8d24e-165">Параметр <paramref name="arrayIndex" /> меньше нуля или больше либо равен длине массива <paramref name="array" />.</span><span class="sxs-lookup"><span data-stu-id="8d24e-165"><paramref name="arrayIndex" /> is less than zero, or greater than or equal to the length of <paramref name="array" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8d24e-166">В указанном пространстве недостаточно пространства для копирования данных.</span><span class="sxs-lookup"><span data-stu-id="8d24e-166">There is not enough space in the specified array to copy the data.</span></span>  
  
<span data-ttu-id="8d24e-167">- или -</span><span class="sxs-lookup"><span data-stu-id="8d24e-167">-or-</span></span> 
 <span data-ttu-id="8d24e-168">Массив <paramref name="array" /> не является одномерным. Одномерный массив — это единственный тип, который поддерживается запрошенным действием.</span><span class="sxs-lookup"><span data-stu-id="8d24e-168"><paramref name="array" /> is not a single dimensional array, which is the only type supported for the requested action.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="8d24e-169">Метод был вызван после удаления последовательности.</span><span class="sxs-lookup"><span data-stu-id="8d24e-169">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="8d24e-170">Недостаточно памяти, чтобы продолжить выполнение программы.</span><span class="sxs-lookup"><span data-stu-id="8d24e-170">There is not enough memory to continue the execution of the program.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="8d24e-171">Доступ к заданному хранилищу журнала запрещен операционной системой.</span><span class="sxs-lookup"><span data-stu-id="8d24e-171">Access for the specified log store is denied by the operating system.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.IO.Log.ReservationCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.IO.Log.ReservationCollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8d24e-172">Возвращает количество резервирований в коллекции.</span><span class="sxs-lookup"><span data-stu-id="8d24e-172">Gets the number of reservations in the collection.</span></span></summary>
        <value><span data-ttu-id="8d24e-173">Количество резервирований в коллекции.</span><span class="sxs-lookup"><span data-stu-id="8d24e-173">The number of reservations in the collection.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~ReservationCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.ReservationCollection.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!ReservationCollection ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="reservationCollection.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8d24e-174">Позволяет объекту <see cref="T:System.IO.Log.ReservationCollection" /> освободить ресурсы, прежде чем он будет уничтожен сборщиком мусора.</span><span class="sxs-lookup"><span data-stu-id="8d24e-174">Allows the <see cref="T:System.IO.Log.ReservationCollection" /> to free resources before it is destroyed by the garbage collector.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FreeReservation">
      <MemberSignature Language="C#" Value="protected abstract void FreeReservation (long size);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void FreeReservation(int64 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.ReservationCollection.FreeReservation(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub FreeReservation (size As Long)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void FreeReservation(long size);" />
      <MemberSignature Language="F#" Value="abstract member FreeReservation : int64 -&gt; unit" Usage="reservationCollection.FreeReservation size" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="size" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="size"><span data-ttu-id="8d24e-175">Размер освобождаемого резервирования.</span><span class="sxs-lookup"><span data-stu-id="8d24e-175">The size of the reservation to release.</span></span></param>
        <summary><span data-ttu-id="8d24e-176">При переопределении в производном классе освобождает резервирование указанного размера.</span><span class="sxs-lookup"><span data-stu-id="8d24e-176">When overridden in a derived class, releases a reservation of the specified size.</span></span></summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="8d24e-177">При наследовании от класса <see cref="T:System.IO.Log.ReservationCollection" /> необходимо реализовать этот метод, чтобы освободить пространство в последовательности записей.</span><span class="sxs-lookup"><span data-stu-id="8d24e-177">When you inherit from <see cref="T:System.IO.Log.ReservationCollection" />, you must implement this method to actually release space in the record sequence.</span></span> <span data-ttu-id="8d24e-178">Не следует вызывать <see cref="M:System.IO.Log.ReservationCollection.ReservationFreed(System.Int64)" /> при завершении метода; данная логика будет обработана.</span><span class="sxs-lookup"><span data-stu-id="8d24e-178">You should not call <see cref="M:System.IO.Log.ReservationCollection.ReservationFreed(System.Int64)" /> when this method is complete; that logic is handled for you.</span></span>  
  
<span data-ttu-id="8d24e-179">При освобождении записей необходимо освобождать те же записи, которые совместно резервировались в предыдущем вызове метода <see cref="Overload:System.IO.Log.IRecordSequence.ReserveAndAppend" />.</span><span class="sxs-lookup"><span data-stu-id="8d24e-179">When you free records, you must free the same records that you reserved together in a previous call to the <see cref="Overload:System.IO.Log.IRecordSequence.ReserveAndAppend" /> method.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="GetBestMatchingReservation">
      <MemberSignature Language="C#" Value="protected long GetBestMatchingReservation (long size);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance int64 GetBestMatchingReservation(int64 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.ReservationCollection.GetBestMatchingReservation(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetBestMatchingReservation (size As Long) As Long" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; long GetBestMatchingReservation(long size);" />
      <MemberSignature Language="F#" Value="member this.GetBestMatchingReservation : int64 -&gt; int64" Usage="reservationCollection.GetBestMatchingReservation size" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="size" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="size"><span data-ttu-id="8d24e-180">Размер резервирования, который должен совпадать.</span><span class="sxs-lookup"><span data-stu-id="8d24e-180">The size of the reservation that must be fit.</span></span></param>
        <summary><span data-ttu-id="8d24e-181">При переопределении в производном классе возвращает наиболее подходящее резервирование для заданного размера.</span><span class="sxs-lookup"><span data-stu-id="8d24e-181">When overridden in a derived class, gets the best matching reservation for a given size.</span></span></summary>
        <returns><span data-ttu-id="8d24e-182">Резервирование из коллекции, которая больше или равна указанному размеру или -1, если такое резервирование отсутствует.</span><span class="sxs-lookup"><span data-stu-id="8d24e-182">A reservation from the collection that is greater than or equal to the specified size, or -1 if no such reservation exists.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d24e-183">Обычно этот метод вызывается при добавлении записи из зарезервированного пространства в последовательность записей.</span><span class="sxs-lookup"><span data-stu-id="8d24e-183">This method is typically called when appending a record from reserved space to a record sequence.</span></span> <span data-ttu-id="8d24e-184">При возвращении метода резервирование возвращаемого размера удаляется из коллекции.</span><span class="sxs-lookup"><span data-stu-id="8d24e-184">When it returns, a reservation of the returned size has been removed from the collection.</span></span> <span data-ttu-id="8d24e-185">Если по какой-то причине отсутствует доступ к зарезервированному пространству, следует вызвать метод <xref:System.IO.Log.ReservationCollection.ReservationMade%2A>, чтобы убедиться в том, что коллекция <xref:System.IO.Log.ReservationCollection> точно представляет размер зарезервированного пространства в последовательности записей.</span><span class="sxs-lookup"><span data-stu-id="8d24e-185">If, for some reason, the reserved space is not actually accessed, the <xref:System.IO.Log.ReservationCollection.ReservationMade%2A> method should be called to ensure that the <xref:System.IO.Log.ReservationCollection> accurately represents the amount of reserved space in the record sequence.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerator&lt;long&gt; GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;int64&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.ReservationCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator(Of Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerator&lt;long&gt; ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;int64&gt;&#xA;override this.GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;int64&gt;" Usage="reservationCollection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8d24e-186">Возвращает перечислитель, который выполняет итерацию коллекции <see cref="T:System.IO.Log.ReservationCollection" />.</span><span class="sxs-lookup"><span data-stu-id="8d24e-186">Returns an enumerator that can iterate through the <see cref="T:System.IO.Log.ReservationCollection" />.</span></span> <span data-ttu-id="8d24e-187">Наследовать этот метод нельзя.</span><span class="sxs-lookup"><span data-stu-id="8d24e-187">This method cannot be inherited.</span></span></summary>
        <returns><span data-ttu-id="8d24e-188">Перечислитель, выполняющий итерацию по коллекции <see cref="T:System.IO.Log.ReservationCollection" />.</span><span class="sxs-lookup"><span data-stu-id="8d24e-188">An enumerator that can iterate through the <see cref="T:System.IO.Log.ReservationCollection" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8d24e-189">Операция недопустима по одной из следующих причин.</span><span class="sxs-lookup"><span data-stu-id="8d24e-189">The operation is invalid for one of the following reasons:</span></span> 
<span data-ttu-id="8d24e-190">– Перечисление завершено.</span><span class="sxs-lookup"><span data-stu-id="8d24e-190">-   The enumeration has ended.</span></span>  
  
<span data-ttu-id="8d24e-191">– Коллекция изменена.</span><span class="sxs-lookup"><span data-stu-id="8d24e-191">-   The collection has been modified.</span></span>  
  
<span data-ttu-id="8d24e-192">– Перечисление не запущено.</span><span class="sxs-lookup"><span data-stu-id="8d24e-192">-   The enumeration has not been started.</span></span> <span data-ttu-id="8d24e-193">Должен быть вызван метод <see cref="M:System.Collections.IEnumerator.MoveNext" />.</span><span class="sxs-lookup"><span data-stu-id="8d24e-193">A call to <see cref="M:System.Collections.IEnumerator.MoveNext" /> must be made.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="8d24e-194">Метод был вызван после удаления последовательности.</span><span class="sxs-lookup"><span data-stu-id="8d24e-194">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="8d24e-195">Недостаточно памяти, чтобы продолжить выполнение программы.</span><span class="sxs-lookup"><span data-stu-id="8d24e-195">There is not enough memory to continue the execution of the program.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="8d24e-196">Доступ к заданному хранилищу журнала запрещен операционной системой.</span><span class="sxs-lookup"><span data-stu-id="8d24e-196">Access for the specified log store is denied by the operating system.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.IO.Log.ReservationCollection.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.IO.Log.ReservationCollection.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8d24e-197">Возвращает значение, указывающее на то, доступна ли коллекция только для чтения.</span><span class="sxs-lookup"><span data-stu-id="8d24e-197">Gets a value that indicates whether the collection is read-only.</span></span></summary>
        <value><span data-ttu-id="8d24e-198">Данное свойство всегда возвращает значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8d24e-198">This property always returns <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d24e-199">Коллекция <xref:System.IO.Log.ReservationCollection> никогда не бывает доступна только для чтения.</span><span class="sxs-lookup"><span data-stu-id="8d24e-199">A <xref:System.IO.Log.ReservationCollection> is never read-only.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MakeReservation">
      <MemberSignature Language="C#" Value="protected abstract void MakeReservation (long size);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void MakeReservation(int64 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.ReservationCollection.MakeReservation(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub MakeReservation (size As Long)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void MakeReservation(long size);" />
      <MemberSignature Language="F#" Value="abstract member MakeReservation : int64 -&gt; unit" Usage="reservationCollection.MakeReservation size" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="size" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="size"><span data-ttu-id="8d24e-200">Размер выделяемого резервирования.</span><span class="sxs-lookup"><span data-stu-id="8d24e-200">The size of the reservation to allocate.</span></span></param>
        <summary><span data-ttu-id="8d24e-201">При переопределении в производном классе выделяет резервирование указанного размера.</span><span class="sxs-lookup"><span data-stu-id="8d24e-201">When overridden in a derived class, allocates a reservation of the specified size.</span></span></summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="8d24e-202">При наследовании от класса <see cref="T:System.IO.Log.ReservationCollection" /> необходимо реализовать этот метод, чтобы зарезервировать пространство в последовательности записей.</span><span class="sxs-lookup"><span data-stu-id="8d24e-202">When you inherit from <see cref="T:System.IO.Log.ReservationCollection" />, you must implement this method to actually reserve space in the record sequence.</span></span> <span data-ttu-id="8d24e-203">Не следует вызывать <see cref="M:System.IO.Log.ReservationCollection.ReservationMade(System.Int64)" /> при завершении метода; данная логика будет обработана.</span><span class="sxs-lookup"><span data-stu-id="8d24e-203">You should not call <see cref="M:System.IO.Log.ReservationCollection.ReservationMade(System.Int64)" /> when this method is complete; that logic is handled for you.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (long item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Remove(int64 item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.ReservationCollection.Remove(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (item As Long) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Remove(long item);" />
      <MemberSignature Language="F#" Value="abstract member Remove : int64 -&gt; bool&#xA;override this.Remove : int64 -&gt; bool" Usage="reservationCollection.Remove item" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Remove(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="8d24e-204">Размер освобождаемого резервирования.</span><span class="sxs-lookup"><span data-stu-id="8d24e-204">The size of the reservation to release.</span></span></param>
        <summary><span data-ttu-id="8d24e-205">Освобождает резервирование указанного размера, если данное резервирование выполнялось.</span><span class="sxs-lookup"><span data-stu-id="8d24e-205">Releases a reservation of the specified size, if one has been made.</span></span> <span data-ttu-id="8d24e-206">Наследовать этот метод нельзя.</span><span class="sxs-lookup"><span data-stu-id="8d24e-206">This method cannot be inherited.</span></span></summary>
        <returns><span data-ttu-id="8d24e-207">Значение <see langword="true" />, если резервирование указанного размера было найдено и удалено; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8d24e-207"><see langword="true" /> if a reservation of the specified size was found and removed; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8d24e-208">В следующем примере показано, как создать резервирование вручную.</span><span class="sxs-lookup"><span data-stu-id="8d24e-208">The following example shows how to manually make a reservation.</span></span> <span data-ttu-id="8d24e-209">Обратите внимание, что эта задача может быть выполнена только при использовании класса <xref:System.IO.Log.LogRecordSequence>, основанного на CLFS.</span><span class="sxs-lookup"><span data-stu-id="8d24e-209">Notice that this task can only be performed when using the CLFS-based <xref:System.IO.Log.LogRecordSequence> class.</span></span>  
  
```  
ReservationCollection reservations = recordSequence.CreateReservationCollection();  
reservations.Add(lengthOfUndoRecord);  
try  
{  
   recordSequence.Append(recordData, userSqn, previousSqn, RecordAppendOptions.None);  
}  
catch (Exception)  
{  
   reservations.Remove(lengthOfUndoRecord);  
   throw;  
}  
  
recordSequence.Append(undoRecordData, userSqn, previousSqn, RecordAppendOptions.ForceFlush, reservations);  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8d24e-210">В указанной коллекции резервирования отсутствует резервирование достаточного размера, чтобы вместить предоставленную запись.</span><span class="sxs-lookup"><span data-stu-id="8d24e-210">No reservation large enough to fit the provided record can be found in the specified reservation collection.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="8d24e-211">При создании моментального снимка архива произошла ошибка ввода-вывода.</span><span class="sxs-lookup"><span data-stu-id="8d24e-211">An I/O error occurs when creating the archive snapshot.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="8d24e-212">Метод был вызван после удаления последовательности.</span><span class="sxs-lookup"><span data-stu-id="8d24e-212">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="8d24e-213">Недостаточно памяти, чтобы продолжить выполнение программы.</span><span class="sxs-lookup"><span data-stu-id="8d24e-213">There is not enough memory to continue the execution of the program.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="8d24e-214">Последовательность записей заполнена.</span><span class="sxs-lookup"><span data-stu-id="8d24e-214">The record sequence is full.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="8d24e-215">Доступ к заданному хранилищу журнала запрещен операционной системой.</span><span class="sxs-lookup"><span data-stu-id="8d24e-215">Access for the specified log store is denied by the operating system.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReservationFreed">
      <MemberSignature Language="C#" Value="protected void ReservationFreed (long size);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void ReservationFreed(int64 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.ReservationCollection.ReservationFreed(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub ReservationFreed (size As Long)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void ReservationFreed(long size);" />
      <MemberSignature Language="F#" Value="member this.ReservationFreed : int64 -&gt; unit" Usage="reservationCollection.ReservationFreed size" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="size" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="size"><span data-ttu-id="8d24e-216">Размер освобожденного резервирования.</span><span class="sxs-lookup"><span data-stu-id="8d24e-216">The size of the reservation that has been released.</span></span></param>
        <summary><span data-ttu-id="8d24e-217">При переопределении в производном классе указывает, что резервирование было освобождено.</span><span class="sxs-lookup"><span data-stu-id="8d24e-217">When overridden in a derived class, indicates that a reservation has been released.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d24e-218">При наследовании от класса <xref:System.IO.Log.ReservationCollection> необходимо вызвать этот метод, если резервирование было освобождено по причине, отличной от его удаления из коллекции.</span><span class="sxs-lookup"><span data-stu-id="8d24e-218">When you inherit from <xref:System.IO.Log.ReservationCollection>, you must call this method when a reservation is released for a reason other than removing it from the collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReservationMade">
      <MemberSignature Language="C#" Value="protected void ReservationMade (long size);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void ReservationMade(int64 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.ReservationCollection.ReservationMade(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub ReservationMade (size As Long)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void ReservationMade(long size);" />
      <MemberSignature Language="F#" Value="member this.ReservationMade : int64 -&gt; unit" Usage="reservationCollection.ReservationMade size" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="size" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="size"><span data-ttu-id="8d24e-219">Размер созданного резервирования.</span><span class="sxs-lookup"><span data-stu-id="8d24e-219">The size of the reservation that has been made.</span></span></param>
        <summary><span data-ttu-id="8d24e-220">При переопределении в производном классе указывает, что резервирование было создано.</span><span class="sxs-lookup"><span data-stu-id="8d24e-220">When overridden in a derived class, indicates that a reservation has been made.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d24e-221">При наследовании из <xref:System.IO.Log.ReservationCollection>необходимо вызывать этот метод, когда резервирование выполняется за пределами <xref:System.IO.Log.ReservationCollection.Add%2A>вызова.</span><span class="sxs-lookup"><span data-stu-id="8d24e-221">When you inherit from <xref:System.IO.Log.ReservationCollection>, you must call this method when a reservation is made outside of a call to <xref:System.IO.Log.ReservationCollection.Add%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.ReservationCollection.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8d24e-222">Возвращает перечислитель, который выполняет итерацию коллекции <see cref="T:System.IO.Log.ReservationCollection" />.</span><span class="sxs-lookup"><span data-stu-id="8d24e-222">Returns an enumerator that can iterate through the <see cref="T:System.IO.Log.ReservationCollection" />.</span></span> <span data-ttu-id="8d24e-223">Наследовать этот метод нельзя.</span><span class="sxs-lookup"><span data-stu-id="8d24e-223">This method cannot be inherited.</span></span></summary>
        <returns><span data-ttu-id="8d24e-224">Перечислитель, выполняющий итерацию по коллекции <see cref="T:System.IO.Log.ReservationCollection" />.</span><span class="sxs-lookup"><span data-stu-id="8d24e-224">An enumerator that can iterate through the <see cref="T:System.IO.Log.ReservationCollection" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8d24e-225">Операция недопустима по одной из следующих причин.</span><span class="sxs-lookup"><span data-stu-id="8d24e-225">The operation is invalid for one of the following reasons:</span></span> 
<span data-ttu-id="8d24e-226">– Перечисление завершено.</span><span class="sxs-lookup"><span data-stu-id="8d24e-226">-   The enumeration has ended.</span></span>  
  
<span data-ttu-id="8d24e-227">– Коллекция изменена.</span><span class="sxs-lookup"><span data-stu-id="8d24e-227">-   The collection has been modified.</span></span>  
  
<span data-ttu-id="8d24e-228">– Перечисление не запущено.</span><span class="sxs-lookup"><span data-stu-id="8d24e-228">-   The enumeration has not been started.</span></span> <span data-ttu-id="8d24e-229">Должен быть вызван метод <see cref="M:System.Collections.IEnumerator.MoveNext" />.</span><span class="sxs-lookup"><span data-stu-id="8d24e-229">A call to <see cref="M:System.Collections.IEnumerator.MoveNext" /> must be made.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="8d24e-230">Метод был вызван после удаления последовательности.</span><span class="sxs-lookup"><span data-stu-id="8d24e-230">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="8d24e-231">Недостаточно памяти, чтобы продолжить выполнение программы.</span><span class="sxs-lookup"><span data-stu-id="8d24e-231">There is not enough memory to continue the execution of the program.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="8d24e-232">Доступ к заданному хранилищу журнала запрещен операционной системой.</span><span class="sxs-lookup"><span data-stu-id="8d24e-232">Access for the specified log store is denied by the operating system.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
