<Type Name="LogPolicy" FullName="System.IO.Log.LogPolicy">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4c9fa9f7d34c0d8d15ad26a41a63b0d55c9811cf" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70599195" /></Metadata><TypeSignature Language="C#" Value="public sealed class LogPolicy" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit LogPolicy extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IO.Log.LogPolicy" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class LogPolicy" />
  <TypeSignature Language="C++ CLI" Value="public ref class LogPolicy sealed" />
  <TypeSignature Language="F#" Value="type LogPolicy = class" />
  <AssemblyInfo>
    <AssemblyName>System.IO.Log</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="4a1c1-101">Представляет политику, связанную с классом <see cref="T:System.IO.Log.LogStore" />.</span><span class="sxs-lookup"><span data-stu-id="4a1c1-101">Represents the policy associated with a <see cref="T:System.IO.Log.LogStore" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a1c1-102">Политика — это набор правил, которым следует экземпляр <xref:System.IO.Log.LogStore> и его клиенты.</span><span class="sxs-lookup"><span data-stu-id="4a1c1-102">A policy is a set of rules to be followed by a <xref:System.IO.Log.LogStore> instance and its clients.</span></span> <span data-ttu-id="4a1c1-103">Экземпляр <xref:System.IO.Log.LogPolicy> используется для проверки и изменения политики, связанной с конкретным экземпляром <xref:System.IO.Log.LogStore>.</span><span class="sxs-lookup"><span data-stu-id="4a1c1-103">A <xref:System.IO.Log.LogPolicy> instance is used to examine and modify the policy associated with a specific <xref:System.IO.Log.LogStore>.</span></span> <span data-ttu-id="4a1c1-104">Политика описывает минимально и максимально допустимые размера журнала, а также способы увеличения экземпляра <xref:System.IO.Log.LogStore>.</span><span class="sxs-lookup"><span data-stu-id="4a1c1-104">A policy can describe the minimum and maximum allowable log sizes, or how the <xref:System.IO.Log.LogStore> instance is allowed to grow.</span></span> <span data-ttu-id="4a1c1-105">Кроме того, можно задать, разрешено ли архивирование экземпляра <xref:System.IO.Log.LogStore>.</span><span class="sxs-lookup"><span data-stu-id="4a1c1-105">In addition, you can also control whether a <xref:System.IO.Log.LogStore> instance can be archived.</span></span>  
  
 <span data-ttu-id="4a1c1-106">После изменения любых свойств необходимо использовать метод <xref:System.IO.Log.LogPolicy.Commit%2A>, чтобы применить данные изменения к объекту <xref:System.IO.Log.LogStore>.</span><span class="sxs-lookup"><span data-stu-id="4a1c1-106">After changing any of the properties, you should use the <xref:System.IO.Log.LogPolicy.Commit%2A> method to ensure that the changes are applied to the <xref:System.IO.Log.LogStore>.</span></span> <span data-ttu-id="4a1c1-107">Метод <xref:System.IO.Log.LogPolicy.Refresh%2A> можно вызвать, чтобы отменить изменения или получить самую новую политику.</span><span class="sxs-lookup"><span data-stu-id="4a1c1-107">You can call the <xref:System.IO.Log.LogPolicy.Refresh%2A> method to discard changes or to get the most current policy.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a1c1-108">В этом примере показано, как использовать класс <xref:System.IO.Log.LogPolicy>, чтобы задать политику для последовательности записи журнала.</span><span class="sxs-lookup"><span data-stu-id="4a1c1-108">This example shows how to use the <xref:System.IO.Log.LogPolicy> class to set policy for a log record sequence.</span></span>  
  
 [!code-csharp[S_UELogRecordSequence#2](~/samples/snippets/csharp/VS_Snippets_CFX/s_uelogrecordsequence/cs/mylogrecordsequence.cs#2)]
 [!code-vb[S_UELogRecordSequence#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uelogrecordsequence/vb/mylogrecordsequence.vb#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AutoGrow">
      <MemberSignature Language="C#" Value="public bool AutoGrow { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoGrow" />
      <MemberSignature Language="DocId" Value="P:System.IO.Log.LogPolicy.AutoGrow" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoGrow As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoGrow { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoGrow : bool with get, set" Usage="System.IO.Log.LogPolicy.AutoGrow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4a1c1-109">Возвращает или задает значение, показывающее, разрешено ли автоматическое увеличение объекта <see cref="T:System.IO.Log.LogStore" />.</span><span class="sxs-lookup"><span data-stu-id="4a1c1-109">Gets or sets a value indicating whether the <see cref="T:System.IO.Log.LogStore" /> can grow automatically.</span></span></summary>
        <value><span data-ttu-id="4a1c1-110">Значение <see langword="true" />, если размер объекта <see cref="T:System.IO.Log.LogStore" /> может увеличиваться автоматически; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4a1c1-110"><see langword="true" /> if the <see cref="T:System.IO.Log.LogStore" /> can grow its size automatically; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a1c1-111">В этом примере показано, как использовать класс <xref:System.IO.Log.LogPolicy>, чтобы задать политику для последовательности записи журнала.</span><span class="sxs-lookup"><span data-stu-id="4a1c1-111">This example shows how to use the <xref:System.IO.Log.LogPolicy> class to set policy for a log record sequence.</span></span>  
  
 [!code-csharp[S_UELogRecordSequence#2](~/samples/snippets/csharp/VS_Snippets_CFX/s_uelogrecordsequence/cs/mylogrecordsequence.cs#2)]
 [!code-vb[S_UELogRecordSequence#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uelogrecordsequence/vb/mylogrecordsequence.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoShrinkPercentage">
      <MemberSignature Language="C#" Value="public int AutoShrinkPercentage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AutoShrinkPercentage" />
      <MemberSignature Language="DocId" Value="P:System.IO.Log.LogPolicy.AutoShrinkPercentage" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoShrinkPercentage As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int AutoShrinkPercentage { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.AutoShrinkPercentage : int with get, set" Usage="System.IO.Log.LogPolicy.AutoShrinkPercentage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4a1c1-112">Возвращает или задает процент свободного пространства, доступный для сжатия с помощью объекта <see cref="T:System.IO.Log.LogStore" />.</span><span class="sxs-lookup"><span data-stu-id="4a1c1-112">Gets or sets the percentage of free space the <see cref="T:System.IO.Log.LogStore" /> can shrink.</span></span></summary>
        <value><span data-ttu-id="4a1c1-113">Процент свободного пространства, доступный для сжатия с помощью объекта <see cref="T:System.IO.Log.LogStore" />.</span><span class="sxs-lookup"><span data-stu-id="4a1c1-113">The percentage of free space the <see cref="T:System.IO.Log.LogStore" /> can shrink.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a1c1-114">Если объем свободного пространства в <xref:System.IO.Log.LogStore> больше объема, заданного этим свойством, объект <xref:System.IO.Log.LogStore> выполняет автоматическое уменьшение, пока не будет достигнут размер, заданный свойством <xref:System.IO.Log.LogPolicy.MinimumExtentCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="4a1c1-114">When the amount of free space in the <xref:System.IO.Log.LogStore> is greater than the amount specified by this property, the <xref:System.IO.Log.LogStore> automatically reduces its size until it reaches the size specified by the <xref:System.IO.Log.LogPolicy.MinimumExtentCount%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a1c1-115">В этом примере показано, как использовать класс <xref:System.IO.Log.LogPolicy>, чтобы задать политику для последовательности записи журнала.</span><span class="sxs-lookup"><span data-stu-id="4a1c1-115">This example shows how to use the <xref:System.IO.Log.LogPolicy> class to set policy for a log record sequence.</span></span>  
  
 [!code-csharp[S_UELogRecordSequence#2](~/samples/snippets/csharp/VS_Snippets_CFX/s_uelogrecordsequence/cs/mylogrecordsequence.cs#2)]
 [!code-vb[S_UELogRecordSequence#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uelogrecordsequence/vb/mylogrecordsequence.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Commit">
      <MemberSignature Language="C#" Value="public void Commit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Commit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.LogPolicy.Commit" />
      <MemberSignature Language="VB.NET" Value="Public Sub Commit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Commit();" />
      <MemberSignature Language="F#" Value="member this.Commit : unit -&gt; unit" Usage="logPolicy.Commit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4a1c1-116">Задает текущую политику для <see cref="T:System.IO.Log.LogStore" />.</span><span class="sxs-lookup"><span data-stu-id="4a1c1-116">Sets this policy as the current policy for the <see cref="T:System.IO.Log.LogStore" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a1c1-117">Чтобы обеспечить запись изменений после их внесения, необходимо вызвать метод <xref:System.IO.Log.LogPolicy.Commit%2A>.</span><span class="sxs-lookup"><span data-stu-id="4a1c1-117">You must call <xref:System.IO.Log.LogPolicy.Commit%2A> after making any changes to ensure that the changes are recorded.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a1c1-118">В этом примере показано, как использовать класс <xref:System.IO.Log.LogPolicy>, чтобы задать политику для последовательности записи журнала.</span><span class="sxs-lookup"><span data-stu-id="4a1c1-118">This example shows how to use the <xref:System.IO.Log.LogPolicy> class to set policy for a log record sequence.</span></span>  
  
 [!code-csharp[S_UELogRecordSequence#2](~/samples/snippets/csharp/VS_Snippets_CFX/s_uelogrecordsequence/cs/mylogrecordsequence.cs#2)]
 [!code-vb[S_UELogRecordSequence#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uelogrecordsequence/vb/mylogrecordsequence.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="4a1c1-119">Установленный набор политик для этого журнала недействителен.</span><span class="sxs-lookup"><span data-stu-id="4a1c1-119">The set of policies installed on the log is invalid.</span></span>  
  
 <span data-ttu-id="4a1c1-120">-или-</span><span class="sxs-lookup"><span data-stu-id="4a1c1-120">-or-</span></span>  
  
 <span data-ttu-id="4a1c1-121">Операция не завершена из-за политики для этого журнала.</span><span class="sxs-lookup"><span data-stu-id="4a1c1-121">A policy of the log prevented this operation from completing.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="4a1c1-122">Не удалось выполнить запрос, так как возникла неожиданная ошибка ввода-вывода.</span><span class="sxs-lookup"><span data-stu-id="4a1c1-122">The request could not be performed because of an unexpected I/O exception.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="4a1c1-123">Установка этой политики не поддерживается на текущей платформе.</span><span class="sxs-lookup"><span data-stu-id="4a1c1-123">Setting this policy is not supported on the current platform.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="4a1c1-124">Метод был вызван после удаления последовательности.</span><span class="sxs-lookup"><span data-stu-id="4a1c1-124">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="4a1c1-125">Недостаточно памяти, чтобы продолжить выполнение программы.</span><span class="sxs-lookup"><span data-stu-id="4a1c1-125">There is not enough memory to continue the execution of the program.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="4a1c1-126">Новый префикс области слишком длинный или недопустим.</span><span class="sxs-lookup"><span data-stu-id="4a1c1-126">The new extent prefix is invalid or too long.</span></span> <span data-ttu-id="4a1c1-127">Необходимо предоставить допустимый префикс.</span><span class="sxs-lookup"><span data-stu-id="4a1c1-127">A valid prefix must be provided.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="4a1c1-128">Последовательность записей заполнена.</span><span class="sxs-lookup"><span data-stu-id="4a1c1-128">The record sequence is full.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="4a1c1-129">Доступ к заданному хранилищу журнала запрещен операционной системой.</span><span class="sxs-lookup"><span data-stu-id="4a1c1-129">Access for the specified log store is denied by the operating system.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GrowthRate">
      <MemberSignature Language="C#" Value="public System.IO.Log.PolicyUnit GrowthRate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.Log.PolicyUnit GrowthRate" />
      <MemberSignature Language="DocId" Value="P:System.IO.Log.LogPolicy.GrowthRate" />
      <MemberSignature Language="VB.NET" Value="Public Property GrowthRate As PolicyUnit" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Log::PolicyUnit GrowthRate { System::IO::Log::PolicyUnit get(); void set(System::IO::Log::PolicyUnit value); };" />
      <MemberSignature Language="F#" Value="member this.GrowthRate : System.IO.Log.PolicyUnit with get, set" Usage="System.IO.Log.LogPolicy.GrowthRate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.PolicyUnit</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4a1c1-130">Возвращает или задает величину автоматического увеличения объекта <see cref="T:System.IO.Log.LogStore" />.</span><span class="sxs-lookup"><span data-stu-id="4a1c1-130">Gets or sets the rate of automatic growth of the <see cref="T:System.IO.Log.LogStore" />.</span></span></summary>
        <value><span data-ttu-id="4a1c1-131">Величина автоматического увеличения объекта <see cref="T:System.IO.Log.LogStore" />.</span><span class="sxs-lookup"><span data-stu-id="4a1c1-131">The rate of automatic growth of the <see cref="T:System.IO.Log.LogStore" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a1c1-132">Если объект <xref:System.IO.Log.LogStore> заполнен, значение этой политики определяет, какой объем дополнительного пространства можно добавить.</span><span class="sxs-lookup"><span data-stu-id="4a1c1-132">When the <xref:System.IO.Log.LogStore> becomes full, this policy value determines how much more space can be added.</span></span> <span data-ttu-id="4a1c1-133">Пространство не добавляется, если это приведет к тому, что количество областей в <xref:System.IO.Log.LogStore> превысит значение свойства <xref:System.IO.Log.LogPolicy.MaximumExtentCount%2A>.</span><span class="sxs-lookup"><span data-stu-id="4a1c1-133">Space will not be added if it causes the number of extents in the <xref:System.IO.Log.LogStore> to exceed <xref:System.IO.Log.LogPolicy.MaximumExtentCount%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a1c1-134">В этом примере показано, как использовать класс <xref:System.IO.Log.LogPolicy>, чтобы задать политику для последовательности записи журнала.</span><span class="sxs-lookup"><span data-stu-id="4a1c1-134">This example shows how to use the <xref:System.IO.Log.LogPolicy> class to set policy for a log record sequence.</span></span>  
  
 [!code-csharp[S_UELogRecordSequence#2](~/samples/snippets/csharp/VS_Snippets_CFX/s_uelogrecordsequence/cs/mylogrecordsequence.cs#2)]
 [!code-vb[S_UELogRecordSequence#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uelogrecordsequence/vb/mylogrecordsequence.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaximumExtentCount">
      <MemberSignature Language="C#" Value="public int MaximumExtentCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaximumExtentCount" />
      <MemberSignature Language="DocId" Value="P:System.IO.Log.LogPolicy.MaximumExtentCount" />
      <MemberSignature Language="VB.NET" Value="Public Property MaximumExtentCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaximumExtentCount { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaximumExtentCount : int with get, set" Usage="System.IO.Log.LogPolicy.MaximumExtentCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4a1c1-135">Возвращает или задает максимальное количество экземпляров <see cref="T:System.IO.Log.LogExtent" />, которые могут содержаться в объекте <see cref="T:System.IO.Log.LogStore" />.</span><span class="sxs-lookup"><span data-stu-id="4a1c1-135">Gets or sets the maximum number of <see cref="T:System.IO.Log.LogExtent" /> instances the <see cref="T:System.IO.Log.LogStore" /> can contain.</span></span></summary>
        <value><span data-ttu-id="4a1c1-136">Максимальное количество экземпляров <see cref="T:System.IO.Log.LogExtent" />, которые могут содержаться в объекте <see cref="T:System.IO.Log.LogStore" />.</span><span class="sxs-lookup"><span data-stu-id="4a1c1-136">The maximum number of <see cref="T:System.IO.Log.LogExtent" /> instances the <see cref="T:System.IO.Log.LogStore" /> can contain.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a1c1-137">В этом примере показано, как использовать класс <xref:System.IO.Log.LogPolicy>, чтобы задать политику для последовательности записи журнала.</span><span class="sxs-lookup"><span data-stu-id="4a1c1-137">This example shows how to use the <xref:System.IO.Log.LogPolicy> class to set policy for a log record sequence.</span></span>  
  
 [!code-csharp[S_UELogRecordSequence#2](~/samples/snippets/csharp/VS_Snippets_CFX/s_uelogrecordsequence/cs/mylogrecordsequence.cs#2)]
 [!code-vb[S_UELogRecordSequence#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uelogrecordsequence/vb/mylogrecordsequence.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinimumExtentCount">
      <MemberSignature Language="C#" Value="public int MinimumExtentCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MinimumExtentCount" />
      <MemberSignature Language="DocId" Value="P:System.IO.Log.LogPolicy.MinimumExtentCount" />
      <MemberSignature Language="VB.NET" Value="Public Property MinimumExtentCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MinimumExtentCount { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MinimumExtentCount : int with get, set" Usage="System.IO.Log.LogPolicy.MinimumExtentCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4a1c1-138">Возвращает или задает минимальное количество экземпляров <see cref="T:System.IO.Log.LogExtent" />, которые могут содержаться в объекте <see cref="T:System.IO.Log.LogStore" />.</span><span class="sxs-lookup"><span data-stu-id="4a1c1-138">Gets or sets the minimum number of <see cref="T:System.IO.Log.LogExtent" /> instances the <see cref="T:System.IO.Log.LogStore" /> can contain.</span></span></summary>
        <value><span data-ttu-id="4a1c1-139">Целое число, задающее минимальное количество экземпляров <see cref="T:System.IO.Log.LogExtent" />, которые могут содержаться в объекте <see cref="T:System.IO.Log.LogStore" />.</span><span class="sxs-lookup"><span data-stu-id="4a1c1-139">An integer that specifies the minimum number of <see cref="T:System.IO.Log.LogExtent" /> instances the <see cref="T:System.IO.Log.LogStore" /> can contain.</span></span> <span data-ttu-id="4a1c1-140">Поскольку система CLFS требует наличия не менее 2 областей, это значение должно быть не менее 2.</span><span class="sxs-lookup"><span data-stu-id="4a1c1-140">Since the CLFS requires that the minimum extent count to be 2 extents, this value should be at least 2.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a1c1-141">В этом примере показано, как использовать класс <xref:System.IO.Log.LogPolicy>, чтобы задать политику для последовательности записи журнала.</span><span class="sxs-lookup"><span data-stu-id="4a1c1-141">This example shows how to use the <xref:System.IO.Log.LogPolicy> class to set policy for a log record sequence.</span></span>  
  
 [!code-csharp[S_UELogRecordSequence#2](~/samples/snippets/csharp/VS_Snippets_CFX/s_uelogrecordsequence/cs/mylogrecordsequence.cs#2)]
 [!code-vb[S_UELogRecordSequence#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uelogrecordsequence/vb/mylogrecordsequence.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NewExtentPrefix">
      <MemberSignature Language="C#" Value="public string NewExtentPrefix { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NewExtentPrefix" />
      <MemberSignature Language="DocId" Value="P:System.IO.Log.LogPolicy.NewExtentPrefix" />
      <MemberSignature Language="VB.NET" Value="Public Property NewExtentPrefix As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NewExtentPrefix { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.NewExtentPrefix : string with get, set" Usage="System.IO.Log.LogPolicy.NewExtentPrefix" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4a1c1-142">Возвращает или задает строку префикса для автоматически созданных областей.</span><span class="sxs-lookup"><span data-stu-id="4a1c1-142">Gets or sets the prefix string for automatically created extents.</span></span></summary>
        <value><span data-ttu-id="4a1c1-143">Строка префикса для автоматически созданных областей.</span><span class="sxs-lookup"><span data-stu-id="4a1c1-143">The prefix string for automatically created extents.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a1c1-144">В этой строке может содержаться полный путь к каталогу, в котором создана новая область.</span><span class="sxs-lookup"><span data-stu-id="4a1c1-144">This string can contain a full path to the directory where the new extent is created.</span></span> <span data-ttu-id="4a1c1-145">Путь к области по умолчанию — это каталог, содержащий базовый файл <xref:System.IO.Log.LogStore>.</span><span class="sxs-lookup"><span data-stu-id="4a1c1-145">The default path to the extent is the directory that contains the base <xref:System.IO.Log.LogStore> file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a1c1-146">В этом примере показано, как использовать класс <xref:System.IO.Log.LogPolicy>, чтобы задать политику для последовательности записи журнала.</span><span class="sxs-lookup"><span data-stu-id="4a1c1-146">This example shows how to use the <xref:System.IO.Log.LogPolicy> class to set policy for a log record sequence.</span></span>  
  
 [!code-csharp[S_UELogRecordSequence#2](~/samples/snippets/csharp/VS_Snippets_CFX/s_uelogrecordsequence/cs/mylogrecordsequence.cs#2)]
 [!code-vb[S_UELogRecordSequence#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uelogrecordsequence/vb/mylogrecordsequence.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NextExtentSuffix">
      <MemberSignature Language="C#" Value="public long NextExtentSuffix { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 NextExtentSuffix" />
      <MemberSignature Language="DocId" Value="P:System.IO.Log.LogPolicy.NextExtentSuffix" />
      <MemberSignature Language="VB.NET" Value="Public Property NextExtentSuffix As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long NextExtentSuffix { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.NextExtentSuffix : int64 with get, set" Usage="System.IO.Log.LogPolicy.NextExtentSuffix" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4a1c1-147">Возвращает или задает номер суффикса для новых областей.</span><span class="sxs-lookup"><span data-stu-id="4a1c1-147">Gets or sets the suffix number for new extents.</span></span></summary>
        <value><span data-ttu-id="4a1c1-148">Номер суффикса для новых областей.</span><span class="sxs-lookup"><span data-stu-id="4a1c1-148">The suffix number for new extents.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a1c1-149">В этом примере показано, как использовать класс <xref:System.IO.Log.LogPolicy>, чтобы задать политику для последовательности записи журнала.</span><span class="sxs-lookup"><span data-stu-id="4a1c1-149">This example shows how to use the <xref:System.IO.Log.LogPolicy> class to set policy for a log record sequence.</span></span>  
  
 [!code-csharp[S_UELogRecordSequence#2](~/samples/snippets/csharp/VS_Snippets_CFX/s_uelogrecordsequence/cs/mylogrecordsequence.cs#2)]
 [!code-vb[S_UELogRecordSequence#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uelogrecordsequence/vb/mylogrecordsequence.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PinnedTailThreshold">
      <MemberSignature Language="C#" Value="public System.IO.Log.PolicyUnit PinnedTailThreshold { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.Log.PolicyUnit PinnedTailThreshold" />
      <MemberSignature Language="DocId" Value="P:System.IO.Log.LogPolicy.PinnedTailThreshold" />
      <MemberSignature Language="VB.NET" Value="Public Property PinnedTailThreshold As PolicyUnit" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Log::PolicyUnit PinnedTailThreshold { System::IO::Log::PolicyUnit get(); void set(System::IO::Log::PolicyUnit value); };" />
      <MemberSignature Language="F#" Value="member this.PinnedTailThreshold : System.IO.Log.PolicyUnit with get, set" Usage="System.IO.Log.LogPolicy.PinnedTailThreshold" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.PolicyUnit</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4a1c1-150">Возвращает или задает объем пространства, необходимый событию <see cref="E:System.IO.Log.LogRecordSequence.TailPinned" /> для перемещения базы журнала.</span><span class="sxs-lookup"><span data-stu-id="4a1c1-150">Gets or sets the amount of space that the <see cref="E:System.IO.Log.LogRecordSequence.TailPinned" /> event requires for advancing the base of the log.</span></span></summary>
        <value><span data-ttu-id="4a1c1-151">Объем пространства, необходимый событию <see cref="E:System.IO.Log.LogRecordSequence.TailPinned" /> для перемещения базы журнала.</span><span class="sxs-lookup"><span data-stu-id="4a1c1-151">The amount of space that the <see cref="E:System.IO.Log.LogRecordSequence.TailPinned" /> event requires for advancing the base of the log.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a1c1-152">Объем пространства может быть выражен в процентах или в байтах, которые округляются до ближайших контейнеров в CLFS.</span><span class="sxs-lookup"><span data-stu-id="4a1c1-152">The amount of space can be expressed in percentage, or in bytes which is rounded off to the nearest containers in CLFS.</span></span> <span data-ttu-id="4a1c1-153">Значение по умолчанию — 35%.</span><span class="sxs-lookup"><span data-stu-id="4a1c1-153">The default is 35 percent.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a1c1-154">В этом примере показано, как использовать класс <xref:System.IO.Log.LogPolicy>, чтобы задать политику для последовательности записи журнала.</span><span class="sxs-lookup"><span data-stu-id="4a1c1-154">This example shows how to use the <xref:System.IO.Log.LogPolicy> class to set policy for a log record sequence.</span></span>  
  
 [!code-csharp[S_UELogRecordSequence#2](~/samples/snippets/csharp/VS_Snippets_CFX/s_uelogrecordsequence/cs/mylogrecordsequence.cs#2)]
 [!code-vb[S_UELogRecordSequence#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uelogrecordsequence/vb/mylogrecordsequence.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public void Refresh ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Refresh() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.LogPolicy.Refresh" />
      <MemberSignature Language="VB.NET" Value="Public Sub Refresh ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Refresh();" />
      <MemberSignature Language="F#" Value="member this.Refresh : unit -&gt; unit" Usage="logPolicy.Refresh " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4a1c1-155">Считывает текущую политику для объекта <see cref="T:System.IO.Log.LogStore" />, выполняя сброс всех сделанных изменений.</span><span class="sxs-lookup"><span data-stu-id="4a1c1-155">Reads the current policy for the <see cref="T:System.IO.Log.LogStore" />, discarding any changes that may have been made.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4a1c1-156">В этом примере показано, как использовать класс <xref:System.IO.Log.LogPolicy>, чтобы задать политику для последовательности записи журнала.</span><span class="sxs-lookup"><span data-stu-id="4a1c1-156">This example shows how to use the <xref:System.IO.Log.LogPolicy> class to set policy for a log record sequence.</span></span>  
  
 [!code-csharp[S_UELogRecordSequence#2](~/samples/snippets/csharp/VS_Snippets_CFX/s_uelogrecordsequence/cs/mylogrecordsequence.cs#2)]
 [!code-vb[S_UELogRecordSequence#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uelogrecordsequence/vb/mylogrecordsequence.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="4a1c1-157">Установленный набор политик для этого журнала недействителен.</span><span class="sxs-lookup"><span data-stu-id="4a1c1-157">The set of policies installed on the log is invalid.</span></span>  
  
 <span data-ttu-id="4a1c1-158">- или -</span><span class="sxs-lookup"><span data-stu-id="4a1c1-158">-or-</span></span>  
  
 <span data-ttu-id="4a1c1-159">Операция не завершена из-за политики для этого журнала.</span><span class="sxs-lookup"><span data-stu-id="4a1c1-159">A policy of the log prevented this operation from completing.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="4a1c1-160">Не удалось выполнить запрос, так как возникла неожиданная ошибка ввода-вывода.</span><span class="sxs-lookup"><span data-stu-id="4a1c1-160">The request could not be performed because of an unexpected I/O exception.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="4a1c1-161">Установка этой политики не поддерживается на текущей платформе.</span><span class="sxs-lookup"><span data-stu-id="4a1c1-161">Setting this policy is not supported on the current platform.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="4a1c1-162">Метод был вызван после удаления последовательности.</span><span class="sxs-lookup"><span data-stu-id="4a1c1-162">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="4a1c1-163">Недостаточно памяти, чтобы продолжить выполнение программы.</span><span class="sxs-lookup"><span data-stu-id="4a1c1-163">There is not enough memory to continue the execution of the program.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="4a1c1-164">Последовательность записей заполнена.</span><span class="sxs-lookup"><span data-stu-id="4a1c1-164">The record sequence is full.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="4a1c1-165">Доступ к заданному хранилищу журнала запрещен операционной системой.</span><span class="sxs-lookup"><span data-stu-id="4a1c1-165">Access for the specified log store is denied by the operating system.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
