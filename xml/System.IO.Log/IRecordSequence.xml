<Type Name="IRecordSequence" FullName="System.IO.Log.IRecordSequence">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6a2bacddb80f2006249ed7194edf1d3865804236" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70525995" /></Metadata><TypeSignature Language="C#" Value="public interface IRecordSequence : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IRecordSequence implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.IO.Log.IRecordSequence" />
  <TypeSignature Language="VB.NET" Value="Public Interface IRecordSequence&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public interface class IRecordSequence : IDisposable" />
  <TypeSignature Language="F#" Value="type IRecordSequence = interface&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.IO.Log</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="24760-101">Предоставляет универсальный интерфейс последовательности записей.</span><span class="sxs-lookup"><span data-stu-id="24760-101">Provides a generic interface to a sequence of records.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24760-102">Интерфейс <xref:System.IO.Log.IRecordSequence> предоставляет абстрактный интерфейс потоку, ориентированному на записи.</span><span class="sxs-lookup"><span data-stu-id="24760-102">The <xref:System.IO.Log.IRecordSequence> interface provides an abstract interface to a record-oriented stream.</span></span> <span data-ttu-id="24760-103">Экземпляр <xref:System.IO.Log.IRecordSequence> можно использовать для чтения и записи записей журнала.</span><span class="sxs-lookup"><span data-stu-id="24760-103">A <xref:System.IO.Log.IRecordSequence> instance can be used to read and write log records.</span></span>  
  
 <span data-ttu-id="24760-104">Интерфейс <xref:System.IO.Log.IRecordSequence> предоставляет следующие возможности.</span><span class="sxs-lookup"><span data-stu-id="24760-104">The <xref:System.IO.Log.IRecordSequence> interface provides the following capabilities,</span></span>  
  
-   <span data-ttu-id="24760-105">Добавление записей журнала с помощью методов <xref:System.IO.Log.IRecordSequence.Append%2A>.</span><span class="sxs-lookup"><span data-stu-id="24760-105">Append log records using the <xref:System.IO.Log.IRecordSequence.Append%2A> methods.</span></span>  
  
-   <span data-ttu-id="24760-106">Считывание добавленных записей с помощью метода <xref:System.IO.Log.IRecordSequence.ReadLogRecords%2A>.</span><span class="sxs-lookup"><span data-stu-id="24760-106">Read the appended records using the <xref:System.IO.Log.IRecordSequence.ReadLogRecords%2A> method.</span></span>  
  
-   <span data-ttu-id="24760-107">Регистрация специальной записи перезапуска с помощью метода <xref:System.IO.Log.IRecordSequence.WriteRestartArea%2A>.</span><span class="sxs-lookup"><span data-stu-id="24760-107">Write a special restart record using the <xref:System.IO.Log.IRecordSequence.WriteRestartArea%2A> method.</span></span>  
  
-   <span data-ttu-id="24760-108">Считывание записей из последней перезаписанной записи перезапуска с помощью <xref:System.IO.Log.IRecordSequence.ReadRestartAreas%2A>.</span><span class="sxs-lookup"><span data-stu-id="24760-108">Read restart records from the most recently written restart record using the <xref:System.IO.Log.IRecordSequence.ReadRestartAreas%2A> method.</span></span>  
  
-   <span data-ttu-id="24760-109">Очистка записей для устойчивого хранения с помощью метода <xref:System.IO.Log.IRecordSequence.Flush%2A>.</span><span class="sxs-lookup"><span data-stu-id="24760-109">Flush the records to durable store using the  <xref:System.IO.Log.IRecordSequence.Flush%2A> method.</span></span>  
  
-   <span data-ttu-id="24760-110">Резервирование пространства для добавления записей.</span><span class="sxs-lookup"><span data-stu-id="24760-110">Reserve space for appending records.</span></span>  
  
-   <span data-ttu-id="24760-111">Освобождение пространства журнала с помощью перемещения базы журнала.</span><span class="sxs-lookup"><span data-stu-id="24760-111">Free log space by advancing the base of the log.</span></span>  
  
-   <span data-ttu-id="24760-112">Получение уведомлений о событиях <xref:System.IO.Log.IRecordSequence.TailPinned> для перемещения базы журнала на свободное пространство.</span><span class="sxs-lookup"><span data-stu-id="24760-112">Receive <xref:System.IO.Log.IRecordSequence.TailPinned> event notifications to move the base of the log to free space.</span></span>  
  
 <span data-ttu-id="24760-113">Записи журнала добавляются в экземпляр <xref:System.IO.Log.IRecordSequence>, и каждой записи присваивается уникальный порядковый номер.</span><span class="sxs-lookup"><span data-stu-id="24760-113">Log records are appended to a <xref:System.IO.Log.IRecordSequence> instance, and each log record is given a unique sequence number.</span></span> <span data-ttu-id="24760-114">Порядковые номера увеличиваются строго монотонно в рамках определенной последовательности записей.</span><span class="sxs-lookup"><span data-stu-id="24760-114">Sequence numbers are strictly monotonically increasing within a given record sequence.</span></span> <span data-ttu-id="24760-115">Запись журнала состоит из непрозрачных данных, предоставляемых экземпляру <xref:System.IO.Log.IRecordSequence> в списке <xref:System.Collections.IList> фрагментов массива байтов.</span><span class="sxs-lookup"><span data-stu-id="24760-115">A log record consists of opaque data, supplied to the <xref:System.IO.Log.IRecordSequence> instance in an <xref:System.Collections.IList> of ArraySegments of bytes.</span></span>  
  
 <span data-ttu-id="24760-116">Интерфейс <xref:System.IO.Log.IRecordSequence> также предоставляет несколько базовых свойств, содержащих сведения о границах журнала.</span><span class="sxs-lookup"><span data-stu-id="24760-116">The <xref:System.IO.Log.IRecordSequence> interface also exposes a few basic properties which provides information about log boundaries.</span></span>  
  
-   <span data-ttu-id="24760-117">Свойство <xref:System.IO.Log.IRecordSequence.BaseSequenceNumber%2A> содержит порядковый номер первой допустимой записи в последовательности записей.</span><span class="sxs-lookup"><span data-stu-id="24760-117">The <xref:System.IO.Log.IRecordSequence.BaseSequenceNumber%2A> property contains the sequence number of the first valid record in the record sequence.</span></span>  
  
-   <span data-ttu-id="24760-118">Свойство <xref:System.IO.Log.IRecordSequence.LastSequenceNumber%2A> содержит порядковый номер, который гарантированно больше, чем порядковый номер последней добавленной записи.</span><span class="sxs-lookup"><span data-stu-id="24760-118">The <xref:System.IO.Log.IRecordSequence.LastSequenceNumber%2A> property contains a sequence number that is guaranteed to be larger than the sequence number of the last appended record.</span></span>  
  
-   <span data-ttu-id="24760-119">Свойство <xref:System.IO.Log.IRecordSequence.RestartSequenceNumber%2A> содержит порядковый номер последней записанной области перезапуска.</span><span class="sxs-lookup"><span data-stu-id="24760-119">The <xref:System.IO.Log.IRecordSequence.RestartSequenceNumber%2A> property contains the sequence number of the last written restart area.</span></span>  
  
-   <span data-ttu-id="24760-120">Свойство <xref:System.IO.Log.IRecordSequence.MaximumRecordLength%2A> содержит размер в байтах наибольшей записи, которую можно добавить или прочитать из последовательности.</span><span class="sxs-lookup"><span data-stu-id="24760-120">The <xref:System.IO.Log.IRecordSequence.MaximumRecordLength%2A> property contains the size of the largest record that can be appended to, or read from the sequence.</span></span>  
  
-   <span data-ttu-id="24760-121">Свойство <xref:System.IO.Log.IRecordSequence.ReservedBytes%2A> содержит общий размер резервирований, созданных в последовательности записей.</span><span class="sxs-lookup"><span data-stu-id="24760-121">The <xref:System.IO.Log.IRecordSequence.ReservedBytes%2A> property contains the total size of all reservations made in this record sequence.</span></span>  
  
-   <span data-ttu-id="24760-122">Если свойство <xref:System.IO.Log.IRecordSequence.RetryAppend%2A> имеет значение `true` и операция <xref:System.IO.Log.IRecordSequence.Append%2A> завершается неудачно из-за отсутствия места в последовательности, последовательность записей пытается освободить место и повторно выполнить операцию добавления.</span><span class="sxs-lookup"><span data-stu-id="24760-122">If the <xref:System.IO.Log.IRecordSequence.RetryAppend%2A> property is set to `true`, and an <xref:System.IO.Log.IRecordSequence.Append%2A> operation fails because there is no space in the sequence, the record sequence will attempt to free space, and retry the Append operation.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AdvanceBaseSequenceNumber">
      <MemberSignature Language="C#" Value="public void AdvanceBaseSequenceNumber (System.IO.Log.SequenceNumber newBaseSequenceNumber);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AdvanceBaseSequenceNumber(valuetype System.IO.Log.SequenceNumber newBaseSequenceNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.IRecordSequence.AdvanceBaseSequenceNumber(System.IO.Log.SequenceNumber)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AdvanceBaseSequenceNumber (newBaseSequenceNumber As SequenceNumber)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AdvanceBaseSequenceNumber(System::IO::Log::SequenceNumber newBaseSequenceNumber);" />
      <MemberSignature Language="F#" Value="abstract member AdvanceBaseSequenceNumber : System.IO.Log.SequenceNumber -&gt; unit" Usage="iRecordSequence.AdvanceBaseSequenceNumber newBaseSequenceNumber" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newBaseSequenceNumber" Type="System.IO.Log.SequenceNumber" />
      </Parameters>
      <Docs>
        <param name="newBaseSequenceNumber"><span data-ttu-id="24760-123">Новый базовый порядковый номер последовательности журналов.</span><span class="sxs-lookup"><span data-stu-id="24760-123">The new base sequence number of the record sequence.</span></span></param>
        <summary><span data-ttu-id="24760-124">Выполняет переход базового порядкового номера журнала.</span><span class="sxs-lookup"><span data-stu-id="24760-124">Moves the base sequence number of the log forward.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24760-125">При использовании экземпляра <xref:System.IO.Log.LogRecordSequence> и попытке переместить порядковый номер для освобождения пространства в журнале новый базовый порядковый номер должен находиться в другой области журнала, чтобы предыдущая область была помечена как пустая.</span><span class="sxs-lookup"><span data-stu-id="24760-125">When you use a <xref:System.IO.Log.LogRecordSequence> instance and try to advance the sequence number to free up space in the log, the new base sequence number must reside in a different log extent for the previous extent to be marked as empty.</span></span> <span data-ttu-id="24760-126">Частичное освобождение областей не поддерживается.</span><span class="sxs-lookup"><span data-stu-id="24760-126">Freeing extents partially is not supported.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="24760-127"><paramref name="newBaseSequenceNumber" /> недопустим.</span><span class="sxs-lookup"><span data-stu-id="24760-127"><paramref name="newBaseSequenceNumber" /> is invalid.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="24760-128">Параметр <paramref name="newBaseSequenceNumber" /> не активен в журнале.</span><span class="sxs-lookup"><span data-stu-id="24760-128"><paramref name="newBaseSequenceNumber" /> is not active in the log.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="24760-129">При изменении последовательности произошла ошибка ввода-вывода.</span><span class="sxs-lookup"><span data-stu-id="24760-129">An I/O error occurred while modifying the sequence.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="24760-130">Метод был вызван после удаления последовательности.</span><span class="sxs-lookup"><span data-stu-id="24760-130">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="24760-131">Последовательность записей заполнена.</span><span class="sxs-lookup"><span data-stu-id="24760-131">The record sequence is full.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Append">
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="24760-132">При переопределении в производном классе записывает запись журнала в последовательность <see cref="T:System.IO.Log.IRecordSequence" />.</span><span class="sxs-lookup"><span data-stu-id="24760-132">When overridden in a derived class, writes a log record to the <see cref="T:System.IO.Log.IRecordSequence" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber Append (ArraySegment&lt;byte&gt; data, System.IO.Log.SequenceNumber nextUndoRecord, System.IO.Log.SequenceNumber previousRecord, System.IO.Log.RecordAppendOptions recordAppendOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber Append(valuetype System.ArraySegment`1&lt;unsigned int8&gt; data, valuetype System.IO.Log.SequenceNumber nextUndoRecord, valuetype System.IO.Log.SequenceNumber previousRecord, valuetype System.IO.Log.RecordAppendOptions recordAppendOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.IRecordSequence.Append(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Log::SequenceNumber Append(ArraySegment&lt;System::Byte&gt; data, System::IO::Log::SequenceNumber nextUndoRecord, System::IO::Log::SequenceNumber previousRecord, System::IO::Log::RecordAppendOptions recordAppendOptions);" />
      <MemberSignature Language="F#" Value="abstract member Append : ArraySegment&lt;byte&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions -&gt; System.IO.Log.SequenceNumber" Usage="iRecordSequence.Append (data, nextUndoRecord, previousRecord, recordAppendOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.ArraySegment&lt;System.Byte&gt;" />
        <Parameter Name="nextUndoRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="previousRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="recordAppendOptions" Type="System.IO.Log.RecordAppendOptions" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="24760-133">Список фрагментов массива байтов, которые будут сцеплены и добавлены в качестве записи.</span><span class="sxs-lookup"><span data-stu-id="24760-133">A list of byte array segments that will be concatenated and appended as the record.</span></span></param>
        <param name="nextUndoRecord"><span data-ttu-id="24760-134">Порядковый номер следующей записи в порядке, заданном пользователем.</span><span class="sxs-lookup"><span data-stu-id="24760-134">The sequence number of the next record in the user-specified order.</span></span></param>
        <param name="previousRecord"><span data-ttu-id="24760-135">Порядковый номер следующей записи в обратном порядке.</span><span class="sxs-lookup"><span data-stu-id="24760-135">The sequence number of the next record in Previous order.</span></span></param>
        <param name="recordAppendOptions"><span data-ttu-id="24760-136">Допустимое значение объекта <see cref="T:System.IO.Log.RecordAppendOptions" />, задающего, как должны записываться данные.</span><span class="sxs-lookup"><span data-stu-id="24760-136">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</span></span></param>
        <summary><span data-ttu-id="24760-137">При переопределении в производном классе записывает запись журнала в последовательность <see cref="T:System.IO.Log.IRecordSequence" />.</span><span class="sxs-lookup"><span data-stu-id="24760-137">When overridden in a derived class, writes a log record to the <see cref="T:System.IO.Log.IRecordSequence" />.</span></span></summary>
        <returns><span data-ttu-id="24760-138">Порядковый номер добавленной в журнал записи.</span><span class="sxs-lookup"><span data-stu-id="24760-138">The sequence number of the appended log record.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24760-139">Данные, содержащиеся в параметре `data`, будут сцеплены в единый массив байтов для добавления в качестве записи.</span><span class="sxs-lookup"><span data-stu-id="24760-139">Data contained in the `data` parameter will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="24760-140">Однако не делается допущение об обратном разделении данных на фрагменты массива при чтении записи.</span><span class="sxs-lookup"><span data-stu-id="24760-140">However, no provision is made for splitting data back into array segments when the record is read.</span></span>  
  
 <span data-ttu-id="24760-141">Обычно этот метод завершает работу до того, как запись будет записана.</span><span class="sxs-lookup"><span data-stu-id="24760-141">Normally, this method completes before the record has been written.</span></span> <span data-ttu-id="24760-142">Чтобы запись точно была записана, либо укажите флаг <xref:System.IO.Log.RecordAppendOptions.ForceFlush> с помощью параметра `recordAppendOptions`, либо вызовите метод <xref:System.IO.Log.IRecordSequence.Flush%2A>.</span><span class="sxs-lookup"><span data-stu-id="24760-142">To ensure that a record has been written, either specify the <xref:System.IO.Log.RecordAppendOptions.ForceFlush> flag using the `recordAppendOptions` parameter, or call the <xref:System.IO.Log.IRecordSequence.Flush%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="24760-143">Один или несколько аргументов являются недопустимыми.</span><span class="sxs-lookup"><span data-stu-id="24760-143">One or more of the arguments is invalid.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="24760-144">При добавлении записи произошла ошибка ввода-вывода.</span><span class="sxs-lookup"><span data-stu-id="24760-144">An I/O error occurred while appending the record.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="24760-145">Последовательности записей не удалось выделить достаточно свободного пространства для новой записи.</span><span class="sxs-lookup"><span data-stu-id="24760-145">The record sequence could not make enough free space to contain the new record.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="24760-146">Метод был вызван после удаления последовательности.</span><span class="sxs-lookup"><span data-stu-id="24760-146">The method was called after the sequence has been disposed of.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber Append (System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; data, System.IO.Log.SequenceNumber nextUndoRecord, System.IO.Log.SequenceNumber previousRecord, System.IO.Log.RecordAppendOptions recordAppendOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber Append(class System.Collections.Generic.IList`1&lt;valuetype System.ArraySegment`1&lt;unsigned int8&gt;&gt; data, valuetype System.IO.Log.SequenceNumber nextUndoRecord, valuetype System.IO.Log.SequenceNumber previousRecord, valuetype System.IO.Log.RecordAppendOptions recordAppendOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.IRecordSequence.Append(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Log::SequenceNumber Append(System::Collections::Generic::IList&lt;ArraySegment&lt;System::Byte&gt;&gt; ^ data, System::IO::Log::SequenceNumber nextUndoRecord, System::IO::Log::SequenceNumber previousRecord, System::IO::Log::RecordAppendOptions recordAppendOptions);" />
      <MemberSignature Language="F#" Value="abstract member Append : System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions -&gt; System.IO.Log.SequenceNumber" Usage="iRecordSequence.Append (data, nextUndoRecord, previousRecord, recordAppendOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.Generic.IList&lt;System.ArraySegment&lt;System.Byte&gt;&gt;" />
        <Parameter Name="nextUndoRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="previousRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="recordAppendOptions" Type="System.IO.Log.RecordAppendOptions" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="24760-147">Список фрагментов массива байтов, которые будут сцеплены и добавлены в качестве записи.</span><span class="sxs-lookup"><span data-stu-id="24760-147">A list of byte array segments that will be concatenated and appended as the record.</span></span></param>
        <param name="nextUndoRecord"><span data-ttu-id="24760-148">Порядковый номер следующей записи в порядке, заданном пользователем.</span><span class="sxs-lookup"><span data-stu-id="24760-148">The sequence number of the next record in the user-specified order.</span></span></param>
        <param name="previousRecord"><span data-ttu-id="24760-149">Порядковый номер следующей записи в обратном порядке.</span><span class="sxs-lookup"><span data-stu-id="24760-149">The sequence number of the next record in Previous order.</span></span></param>
        <param name="recordAppendOptions"><span data-ttu-id="24760-150">Допустимое значение объекта <see cref="T:System.IO.Log.RecordAppendOptions" />, задающего, как должны записываться данные.</span><span class="sxs-lookup"><span data-stu-id="24760-150">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</span></span></param>
        <summary><span data-ttu-id="24760-151">При переопределении в производном классе добавляет запись журнала в последовательность <see cref="T:System.IO.Log.IRecordSequence" />.</span><span class="sxs-lookup"><span data-stu-id="24760-151">When overridden in a derived class, appends a log record to the <see cref="T:System.IO.Log.IRecordSequence" />.</span></span></summary>
        <returns><span data-ttu-id="24760-152">Порядковый номер добавленной в журнал записи.</span><span class="sxs-lookup"><span data-stu-id="24760-152">The sequence number of the appended log record.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24760-153">Данные, содержащиеся в параметре `data`, будут сцеплены в единый массив байтов для добавления в качестве записи.</span><span class="sxs-lookup"><span data-stu-id="24760-153">Data contained in the `data` parameter will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="24760-154">Однако не делается допущение об обратном разделении данных на фрагменты массива при чтении записи.</span><span class="sxs-lookup"><span data-stu-id="24760-154">However, no provision is made for splitting data back into array segments when the record is read.</span></span>  
  
 <span data-ttu-id="24760-155">Обычно этот метод завершает работу до того, как запись будет записана.</span><span class="sxs-lookup"><span data-stu-id="24760-155">Normally, this method completes before the record has been written.</span></span> <span data-ttu-id="24760-156">Чтобы запись точно была записана, либо укажите флаг <xref:System.IO.Log.RecordAppendOptions.ForceFlush> с помощью параметра `recordAppendOptions`, либо вызовите метод <xref:System.IO.Log.IRecordSequence.Flush%2A>.</span><span class="sxs-lookup"><span data-stu-id="24760-156">To ensure that a record has been written, either specify the <xref:System.IO.Log.RecordAppendOptions.ForceFlush> flag using the `recordAppendOptions` parameter, or call the <xref:System.IO.Log.IRecordSequence.Flush%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="24760-157">Один или несколько аргументов являются недопустимыми.</span><span class="sxs-lookup"><span data-stu-id="24760-157">One or more of the arguments is invalid.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="24760-158">При добавлении записи произошла ошибка ввода-вывода.</span><span class="sxs-lookup"><span data-stu-id="24760-158">An I/O error occurred while appending the record.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="24760-159">Последовательности записей не удалось выделить достаточно свободного пространства для новой записи.</span><span class="sxs-lookup"><span data-stu-id="24760-159">The record sequence could not make enough free space to contain the new record.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="24760-160">Метод был вызван после удаления последовательности.</span><span class="sxs-lookup"><span data-stu-id="24760-160">The method was called after the sequence has been disposed of.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber Append (ArraySegment&lt;byte&gt; data, System.IO.Log.SequenceNumber nextUndoRecord, System.IO.Log.SequenceNumber previousRecord, System.IO.Log.RecordAppendOptions recordAppendOptions, System.IO.Log.ReservationCollection reservations);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber Append(valuetype System.ArraySegment`1&lt;unsigned int8&gt; data, valuetype System.IO.Log.SequenceNumber nextUndoRecord, valuetype System.IO.Log.SequenceNumber previousRecord, valuetype System.IO.Log.RecordAppendOptions recordAppendOptions, class System.IO.Log.ReservationCollection reservations) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.IRecordSequence.Append(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Log::SequenceNumber Append(ArraySegment&lt;System::Byte&gt; data, System::IO::Log::SequenceNumber nextUndoRecord, System::IO::Log::SequenceNumber previousRecord, System::IO::Log::RecordAppendOptions recordAppendOptions, System::IO::Log::ReservationCollection ^ reservations);" />
      <MemberSignature Language="F#" Value="abstract member Append : ArraySegment&lt;byte&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions * System.IO.Log.ReservationCollection -&gt; System.IO.Log.SequenceNumber" Usage="iRecordSequence.Append (data, nextUndoRecord, previousRecord, recordAppendOptions, reservations)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.ArraySegment&lt;System.Byte&gt;" />
        <Parameter Name="nextUndoRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="previousRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="recordAppendOptions" Type="System.IO.Log.RecordAppendOptions" />
        <Parameter Name="reservations" Type="System.IO.Log.ReservationCollection" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="24760-161">Список фрагментов массива байтов, которые будут сцеплены и добавлены в качестве записи.</span><span class="sxs-lookup"><span data-stu-id="24760-161">A list of byte array segments that will be concatenated and appended as the record.</span></span></param>
        <param name="nextUndoRecord"><span data-ttu-id="24760-162">Порядковый номер следующей записи в порядке, заданном пользователем.</span><span class="sxs-lookup"><span data-stu-id="24760-162">The sequence number of the next record in the user-specified order.</span></span></param>
        <param name="previousRecord"><span data-ttu-id="24760-163">Порядковый номер следующей записи в обратном порядке.</span><span class="sxs-lookup"><span data-stu-id="24760-163">The sequence number of the next record in Previous order.</span></span></param>
        <param name="recordAppendOptions"><span data-ttu-id="24760-164">Допустимое значение объекта <see cref="T:System.IO.Log.RecordAppendOptions" />, задающего, как должны записываться данные.</span><span class="sxs-lookup"><span data-stu-id="24760-164">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</span></span></param>
        <param name="reservations"><span data-ttu-id="24760-165">Коллекция <see cref="T:System.IO.Log.ReservationCollection" />, содержащая резервирование, которое следует использовать для данной записи.</span><span class="sxs-lookup"><span data-stu-id="24760-165">A <see cref="T:System.IO.Log.ReservationCollection" /> that contains the reservation that should be used for this record.</span></span></param>
        <summary><span data-ttu-id="24760-166">При переопределении в производном классе добавляет запись журнала в <see cref="T:System.IO.Log.IRecordSequence" />, используя пространство, которое было ранее зарезервировано в последовательности.</span><span class="sxs-lookup"><span data-stu-id="24760-166">When overridden in a derived class, appends a log record to the <see cref="T:System.IO.Log.IRecordSequence" />, using space previously reserved in the sequence.</span></span></summary>
        <returns><span data-ttu-id="24760-167">Порядковый номер добавленной в журнал записи.</span><span class="sxs-lookup"><span data-stu-id="24760-167">The sequence number of the appended log record.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24760-168">Данные, содержащиеся в параметре `data`, будут сцеплены в единый массив байтов для добавления в качестве записи.</span><span class="sxs-lookup"><span data-stu-id="24760-168">Data contained in the `data` parameter will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="24760-169">Однако не делается допущение об обратном разделении данных на фрагменты массива при чтении записи.</span><span class="sxs-lookup"><span data-stu-id="24760-169">However, no provision is made for splitting data back into array segments when the record is read.</span></span>  
  
 <span data-ttu-id="24760-170">Добавленная запись будет занимать пространство, ранее зарезервированное с помощью резервирования, заданного параметром `reservations`.</span><span class="sxs-lookup"><span data-stu-id="24760-170">The appended record will consume space that has been previously reserved, using a reservation specified by the `reservations` parameter.</span></span> <span data-ttu-id="24760-171">Если выполнить добавление удается, оно займет минимальную область резервирования, в которой поместятся данные, а эта область резервирования будет удалена из коллекции.</span><span class="sxs-lookup"><span data-stu-id="24760-171">If the append succeeds, it will consume the smallest reservation area that can hold the data, and that reservation area will be removed from the collection.</span></span>  
  
 <span data-ttu-id="24760-172">Обычно этот метод завершает работу до того, как запись будет записана.</span><span class="sxs-lookup"><span data-stu-id="24760-172">Normally, this method completes before the record has been written.</span></span> <span data-ttu-id="24760-173">Чтобы запись точно была записана, либо укажите флаг <xref:System.IO.Log.RecordAppendOptions.ForceFlush> с помощью параметра `recordAppendOptions`, либо вызовите метод <xref:System.IO.Log.IRecordSequence.Flush%2A>.</span><span class="sxs-lookup"><span data-stu-id="24760-173">To ensure that a record has been written, either specify the <xref:System.IO.Log.RecordAppendOptions.ForceFlush> flag using the `recordAppendOptions` parameter, or call the <xref:System.IO.Log.IRecordSequence.Flush%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="24760-174">Один или несколько аргументов являются недопустимыми.</span><span class="sxs-lookup"><span data-stu-id="24760-174">One or more of the arguments is invalid.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="24760-175">При добавлении записи произошла ошибка ввода-вывода.</span><span class="sxs-lookup"><span data-stu-id="24760-175">An I/O error occurred while appending the record.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="24760-176">Последовательности записей не удалось выделить достаточно свободного пространства для новой записи.</span><span class="sxs-lookup"><span data-stu-id="24760-176">The record sequence could not make enough free space to contain the new record.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="24760-177">Метод был вызван после удаления последовательности.</span><span class="sxs-lookup"><span data-stu-id="24760-177">The method was called after the sequence has been disposed of.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber Append (System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; data, System.IO.Log.SequenceNumber nextUndoRecord, System.IO.Log.SequenceNumber previousRecord, System.IO.Log.RecordAppendOptions recordAppendOptions, System.IO.Log.ReservationCollection reservations);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber Append(class System.Collections.Generic.IList`1&lt;valuetype System.ArraySegment`1&lt;unsigned int8&gt;&gt; data, valuetype System.IO.Log.SequenceNumber nextUndoRecord, valuetype System.IO.Log.SequenceNumber previousRecord, valuetype System.IO.Log.RecordAppendOptions recordAppendOptions, class System.IO.Log.ReservationCollection reservations) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.IRecordSequence.Append(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Log::SequenceNumber Append(System::Collections::Generic::IList&lt;ArraySegment&lt;System::Byte&gt;&gt; ^ data, System::IO::Log::SequenceNumber nextUndoRecord, System::IO::Log::SequenceNumber previousRecord, System::IO::Log::RecordAppendOptions recordAppendOptions, System::IO::Log::ReservationCollection ^ reservations);" />
      <MemberSignature Language="F#" Value="abstract member Append : System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions * System.IO.Log.ReservationCollection -&gt; System.IO.Log.SequenceNumber" Usage="iRecordSequence.Append (data, nextUndoRecord, previousRecord, recordAppendOptions, reservations)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.Generic.IList&lt;System.ArraySegment&lt;System.Byte&gt;&gt;" />
        <Parameter Name="nextUndoRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="previousRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="recordAppendOptions" Type="System.IO.Log.RecordAppendOptions" />
        <Parameter Name="reservations" Type="System.IO.Log.ReservationCollection" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="24760-178">Список фрагментов массива байтов, которые будут сцеплены и добавлены в качестве записи.</span><span class="sxs-lookup"><span data-stu-id="24760-178">A list of byte array segments that will be concatenated and appended as the record.</span></span></param>
        <param name="nextUndoRecord"><span data-ttu-id="24760-179">Порядковый номер следующей записи в порядке, заданном пользователем.</span><span class="sxs-lookup"><span data-stu-id="24760-179">The sequence number of the next record in the user-specified order.</span></span></param>
        <param name="previousRecord"><span data-ttu-id="24760-180">Порядковый номер следующей записи в обратном порядке.</span><span class="sxs-lookup"><span data-stu-id="24760-180">The sequence number of the next record in Previous order.</span></span></param>
        <param name="recordAppendOptions"><span data-ttu-id="24760-181">Допустимое значение объекта <see cref="T:System.IO.Log.RecordAppendOptions" />, задающего, как должны записываться данные.</span><span class="sxs-lookup"><span data-stu-id="24760-181">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</span></span></param>
        <param name="reservations"><span data-ttu-id="24760-182">Коллекция <see cref="T:System.IO.Log.ReservationCollection" />, содержащая резервирование, которое следует использовать для данной записи.</span><span class="sxs-lookup"><span data-stu-id="24760-182">A <see cref="T:System.IO.Log.ReservationCollection" /> that contains the reservation that should be used for this record.</span></span></param>
        <summary><span data-ttu-id="24760-183">При переопределении в производном классе добавляет запись журнала в <see cref="T:System.IO.Log.IRecordSequence" />, используя пространство, которое было ранее зарезервировано в последовательности.</span><span class="sxs-lookup"><span data-stu-id="24760-183">When overridden in a derived class, appends a log record to the <see cref="T:System.IO.Log.IRecordSequence" />, using space previously reserved in the sequence.</span></span></summary>
        <returns><span data-ttu-id="24760-184">Порядковый номер добавленной в журнал записи.</span><span class="sxs-lookup"><span data-stu-id="24760-184">The sequence number of the appended log record.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24760-185">Данные, содержащиеся в параметре `data`, будут сцеплены в единый массив байтов для добавления в качестве записи.</span><span class="sxs-lookup"><span data-stu-id="24760-185">Data contained in the `data` parameter will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="24760-186">Однако не делается допущение об обратном разделении данных на фрагменты массива при чтении записи.</span><span class="sxs-lookup"><span data-stu-id="24760-186">However, no provision is made for splitting data back into array segments when the record is read.</span></span>  
  
 <span data-ttu-id="24760-187">Добавленная запись будет занимать пространство, ранее зарезервированное с помощью резервирования, заданного параметром `reservations`.</span><span class="sxs-lookup"><span data-stu-id="24760-187">The appended record will consume space that has been previously reserved, using a reservation specified by the `reservations` parameter.</span></span> <span data-ttu-id="24760-188">Если выполнить добавление удается, оно займет минимальную область резервирования, в которой поместятся данные, а эта область резервирования будет удалена из коллекции.</span><span class="sxs-lookup"><span data-stu-id="24760-188">If the append succeeds, it will consume the smallest reservation area that can hold the data, and that reservation area will be removed from the collection.</span></span>  
  
 <span data-ttu-id="24760-189">Обычно этот метод завершает работу до того, как запись будет записана.</span><span class="sxs-lookup"><span data-stu-id="24760-189">Normally, this method completes before the record has been written.</span></span> <span data-ttu-id="24760-190">Чтобы запись точно была записана, либо укажите флаг <xref:System.IO.Log.RecordAppendOptions.ForceFlush> с помощью параметра `recordAppendOptions`, либо вызовите метод <xref:System.IO.Log.IRecordSequence.Flush%2A>.</span><span class="sxs-lookup"><span data-stu-id="24760-190">To ensure that a record has been written, either specify the <xref:System.IO.Log.RecordAppendOptions.ForceFlush> flag using the `recordAppendOptions` parameter, or call the <xref:System.IO.Log.IRecordSequence.Flush%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="24760-191">Один или несколько аргументов являются недопустимыми.</span><span class="sxs-lookup"><span data-stu-id="24760-191">One or more of the arguments is invalid.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="24760-192">При добавлении записи произошла ошибка ввода-вывода.</span><span class="sxs-lookup"><span data-stu-id="24760-192">An I/O error occurred while appending the record.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="24760-193">Последовательности записей не удалось выделить достаточно свободного пространства для новой записи.</span><span class="sxs-lookup"><span data-stu-id="24760-193">The record sequence could not make enough free space to contain the new record.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="24760-194">Метод был вызван после удаления последовательности.</span><span class="sxs-lookup"><span data-stu-id="24760-194">The method was called after the sequence has been disposed of.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BaseSequenceNumber">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber BaseSequenceNumber { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.Log.SequenceNumber BaseSequenceNumber" />
      <MemberSignature Language="DocId" Value="P:System.IO.Log.IRecordSequence.BaseSequenceNumber" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BaseSequenceNumber As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Log::SequenceNumber BaseSequenceNumber { System::IO::Log::SequenceNumber get(); };" />
      <MemberSignature Language="F#" Value="member this.BaseSequenceNumber : System.IO.Log.SequenceNumber" Usage="System.IO.Log.IRecordSequence.BaseSequenceNumber" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="24760-195">При переопределении в производном классе возвращает порядковый номер первой допустимой записи в текущей последовательности <see cref="T:System.IO.Log.IRecordSequence" />.</span><span class="sxs-lookup"><span data-stu-id="24760-195">When overridden in a derived class, gets the sequence number of the first valid record in the current <see cref="T:System.IO.Log.IRecordSequence" />.</span></span></summary>
        <value><span data-ttu-id="24760-196">Самый низкий порядковый номер, соответствующий допустимой записи в последовательности <see cref="T:System.IO.Log.IRecordSequence" />.</span><span class="sxs-lookup"><span data-stu-id="24760-196">The lowest sequence number that corresponds to a valid record in the <see cref="T:System.IO.Log.IRecordSequence" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24760-197">Допустимые порядковые номера больше или равны <xref:System.IO.Log.IRecordSequence.BaseSequenceNumber%2A> и меньше <xref:System.IO.Log.IRecordSequence.LastSequenceNumber%2A>.</span><span class="sxs-lookup"><span data-stu-id="24760-197">Valid sequence numbers are greater than or equal to <xref:System.IO.Log.IRecordSequence.BaseSequenceNumber%2A> and less than <xref:System.IO.Log.IRecordSequence.LastSequenceNumber%2A>.</span></span>  
  
 <span data-ttu-id="24760-198">Значение этого свойства можно изменить вызовом метода<xref:System.IO.Log.IRecordSequence.AdvanceBaseSequenceNumber%2A> или <xref:System.IO.Log.IRecordSequence.WriteRestartArea%2A>.</span><span class="sxs-lookup"><span data-stu-id="24760-198">The value of this property can be changed by calling the <xref:System.IO.Log.IRecordSequence.AdvanceBaseSequenceNumber%2A> or <xref:System.IO.Log.IRecordSequence.WriteRestartArea%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="24760-199">Обращение к свойству произошло после удаления последовательности.</span><span class="sxs-lookup"><span data-stu-id="24760-199">The property was accessed after the sequence has been disposed of.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginAppend">
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="24760-200">При переопределении в производном классе начинает асинхронную операцию добавления.</span><span class="sxs-lookup"><span data-stu-id="24760-200">When overridden in a derived class, begins an asynchronous append operation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginAppend">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginAppend (ArraySegment&lt;byte&gt; data, System.IO.Log.SequenceNumber nextUndoRecord, System.IO.Log.SequenceNumber previousRecord, System.IO.Log.RecordAppendOptions recordAppendOptions, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAppend(valuetype System.ArraySegment`1&lt;unsigned int8&gt; data, valuetype System.IO.Log.SequenceNumber nextUndoRecord, valuetype System.IO.Log.SequenceNumber previousRecord, valuetype System.IO.Log.RecordAppendOptions recordAppendOptions, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.IRecordSequence.BeginAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginAppend(ArraySegment&lt;System::Byte&gt; data, System::IO::Log::SequenceNumber nextUndoRecord, System::IO::Log::SequenceNumber previousRecord, System::IO::Log::RecordAppendOptions recordAppendOptions, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginAppend : ArraySegment&lt;byte&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions * AsyncCallback * obj -&gt; IAsyncResult" Usage="iRecordSequence.BeginAppend (data, nextUndoRecord, previousRecord, recordAppendOptions, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.ArraySegment&lt;System.Byte&gt;" />
        <Parameter Name="nextUndoRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="previousRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="recordAppendOptions" Type="System.IO.Log.RecordAppendOptions" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="24760-201">Список фрагментов массива байтов, которые будут сцеплены и добавлены в качестве записи.</span><span class="sxs-lookup"><span data-stu-id="24760-201">A list of byte array segments that will be concatenated and appended as the record.</span></span></param>
        <param name="nextUndoRecord"><span data-ttu-id="24760-202">Порядковый номер следующей записи в порядке, заданном пользователем.</span><span class="sxs-lookup"><span data-stu-id="24760-202">The sequence number of the next record in the user-specified order.</span></span></param>
        <param name="previousRecord"><span data-ttu-id="24760-203">Порядковый номер следующей записи в обратном порядке.</span><span class="sxs-lookup"><span data-stu-id="24760-203">The sequence number of the next record in Previous order.</span></span></param>
        <param name="recordAppendOptions"><span data-ttu-id="24760-204">Допустимое значение объекта <see cref="T:System.IO.Log.RecordAppendOptions" />, задающего, как должны записываться данные.</span><span class="sxs-lookup"><span data-stu-id="24760-204">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</span></span></param>
        <param name="callback"><span data-ttu-id="24760-205">Необязательный асинхронный обратный вызов по завершении добавления.</span><span class="sxs-lookup"><span data-stu-id="24760-205">An optional asynchronous callback, to be called when the append is complete.</span></span></param>
        <param name="state"><span data-ttu-id="24760-206">Предоставляемый пользователем объект, отличающий конкретный запрос на асинхронное добавление от других запросов.</span><span class="sxs-lookup"><span data-stu-id="24760-206">A user-provided object that distinguishes this particular asynchronous append request from other requests.</span></span></param>
        <summary><span data-ttu-id="24760-207">При переопределении в производном классе начинает асинхронную операцию добавления.</span><span class="sxs-lookup"><span data-stu-id="24760-207">When overridden in a derived class, begins an asynchronous append operation.</span></span></summary>
        <returns><span data-ttu-id="24760-208">Объект <see cref="T:System.IAsyncResult" />, представляющий асинхронное добавление, которое может все еще ожидать выполнения.</span><span class="sxs-lookup"><span data-stu-id="24760-208">An <see cref="T:System.IAsyncResult" /> that represents the asynchronous append, which could still be pending.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24760-209">Чтобы обеспечить завершение операции добавления и освободить соответствующие ресурсы, необходимо передать значение <xref:System.IAsyncResult>, возвращенное этим методом, в метод <xref:System.IO.Log.IRecordSequence.EndAppend%2A>.</span><span class="sxs-lookup"><span data-stu-id="24760-209">You should pass the <xref:System.IAsyncResult> returned by this method to the <xref:System.IO.Log.IRecordSequence.EndAppend%2A> method to ensure that the append operation has completed and resources can be freed appropriately.</span></span> <span data-ttu-id="24760-210">Если ошибка возникла при выполнении асинхронного добавления, исключение не будет создано до тех пор, пока метод <xref:System.IO.Log.IRecordSequence.EndAppend%2A> не будет вызван со значением <xref:System.IAsyncResult>, возвращенным данным методом.</span><span class="sxs-lookup"><span data-stu-id="24760-210">If an error has occurred during an asynchronous append, an exception is not thrown until the <xref:System.IO.Log.IRecordSequence.EndAppend%2A> method is called with the <xref:System.IAsyncResult> returned by this method.</span></span>  
  
 <span data-ttu-id="24760-211">Данные, содержащиеся в параметре `data`, будут сцеплены в единый массив байтов для добавления в качестве записи.</span><span class="sxs-lookup"><span data-stu-id="24760-211">Data contained in the `data` parameter will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="24760-212">Однако не делается допущение об обратном разделении данных на фрагменты массива при чтении записи.</span><span class="sxs-lookup"><span data-stu-id="24760-212">However, no provision is made for splitting data back into array segments when the record is read.</span></span>  
  
 <span data-ttu-id="24760-213">Обычно этот метод завершает работу до того, как запись будет записана.</span><span class="sxs-lookup"><span data-stu-id="24760-213">Normally, this method completes before the record has been written.</span></span> <span data-ttu-id="24760-214">Чтобы запись точно была записана, либо укажите флаг <xref:System.IO.Log.RecordAppendOptions.ForceFlush> с помощью параметра `recordAppendOptions`, либо вызовите метод <xref:System.IO.Log.IRecordSequence.Flush%2A>.</span><span class="sxs-lookup"><span data-stu-id="24760-214">To ensure that a record has been written, either specify the <xref:System.IO.Log.RecordAppendOptions.ForceFlush> flag using the `recordAppendOptions` parameter, or call the <xref:System.IO.Log.IRecordSequence.Flush%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="24760-215">Один или несколько аргументов являются недопустимыми.</span><span class="sxs-lookup"><span data-stu-id="24760-215">One or more of the arguments is invalid.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="24760-216">При добавлении записи произошла ошибка ввода-вывода.</span><span class="sxs-lookup"><span data-stu-id="24760-216">An I/O error occurred while appending the record.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="24760-217">Последовательности записей не удалось выделить достаточно свободного пространства для новой записи.</span><span class="sxs-lookup"><span data-stu-id="24760-217">The record sequence could not make enough free space to contain the new record.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="24760-218">Метод был вызван после удаления последовательности.</span><span class="sxs-lookup"><span data-stu-id="24760-218">The method was called after the sequence has been disposed of.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BeginAppend">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginAppend (System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; data, System.IO.Log.SequenceNumber nextUndoRecord, System.IO.Log.SequenceNumber previousRecord, System.IO.Log.RecordAppendOptions recordAppendOptions, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAppend(class System.Collections.Generic.IList`1&lt;valuetype System.ArraySegment`1&lt;unsigned int8&gt;&gt; data, valuetype System.IO.Log.SequenceNumber nextUndoRecord, valuetype System.IO.Log.SequenceNumber previousRecord, valuetype System.IO.Log.RecordAppendOptions recordAppendOptions, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.IRecordSequence.BeginAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginAppend(System::Collections::Generic::IList&lt;ArraySegment&lt;System::Byte&gt;&gt; ^ data, System::IO::Log::SequenceNumber nextUndoRecord, System::IO::Log::SequenceNumber previousRecord, System::IO::Log::RecordAppendOptions recordAppendOptions, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginAppend : System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions * AsyncCallback * obj -&gt; IAsyncResult" Usage="iRecordSequence.BeginAppend (data, nextUndoRecord, previousRecord, recordAppendOptions, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.Generic.IList&lt;System.ArraySegment&lt;System.Byte&gt;&gt;" />
        <Parameter Name="nextUndoRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="previousRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="recordAppendOptions" Type="System.IO.Log.RecordAppendOptions" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="24760-219">Список фрагментов массива байтов, которые будут сцеплены и добавлены в качестве записи.</span><span class="sxs-lookup"><span data-stu-id="24760-219">A list of byte array segments that will be concatenated and appended as the record.</span></span></param>
        <param name="nextUndoRecord"><span data-ttu-id="24760-220">Порядковый номер следующей записи в порядке, заданном пользователем.</span><span class="sxs-lookup"><span data-stu-id="24760-220">The sequence number of the next record in the user-specified order.</span></span></param>
        <param name="previousRecord"><span data-ttu-id="24760-221">Порядковый номер следующей записи в обратном порядке.</span><span class="sxs-lookup"><span data-stu-id="24760-221">The sequence number of the next record in Previous order.</span></span></param>
        <param name="recordAppendOptions"><span data-ttu-id="24760-222">Допустимое значение объекта <see cref="T:System.IO.Log.RecordAppendOptions" />, задающего, как должны записываться данные.</span><span class="sxs-lookup"><span data-stu-id="24760-222">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</span></span></param>
        <param name="callback"><span data-ttu-id="24760-223">Необязательный асинхронный обратный вызов по завершении добавления.</span><span class="sxs-lookup"><span data-stu-id="24760-223">An optional asynchronous callback, to be called when the append is complete.</span></span></param>
        <param name="state"><span data-ttu-id="24760-224">Предоставляемый пользователем объект, отличающий конкретный запрос на асинхронное добавление от других запросов.</span><span class="sxs-lookup"><span data-stu-id="24760-224">A user-provided object that distinguishes this particular asynchronous append request from other requests.</span></span></param>
        <summary><span data-ttu-id="24760-225">При переопределении в производном классе начинает асинхронную операцию добавления, используя пространство, которое было ранее зарезервировано в последовательности.</span><span class="sxs-lookup"><span data-stu-id="24760-225">When overridden in a derived class, begins an asynchronous append operation, using space previously reserved in the sequence.</span></span></summary>
        <returns><span data-ttu-id="24760-226">Объект <see cref="T:System.IAsyncResult" />, представляющий асинхронное добавление, которое может все еще ожидать выполнения.</span><span class="sxs-lookup"><span data-stu-id="24760-226">An <see cref="T:System.IAsyncResult" /> that represents the asynchronous append, which could still be pending.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24760-227">Чтобы обеспечить завершение операции добавления и освободить соответствующие ресурсы, необходимо передать значение <xref:System.IAsyncResult>, возвращенное этим методом, в метод <xref:System.IO.Log.IRecordSequence.EndAppend%2A>.</span><span class="sxs-lookup"><span data-stu-id="24760-227">You should pass the <xref:System.IAsyncResult> returned by this method to the <xref:System.IO.Log.IRecordSequence.EndAppend%2A> method to ensure that the append operation has completed and resources can be freed appropriately.</span></span> <span data-ttu-id="24760-228">Если ошибка возникла при выполнении асинхронного добавления, исключение не будет создано до тех пор, пока метод <xref:System.IO.Log.IRecordSequence.EndAppend%2A> не будет вызван со значением <xref:System.IAsyncResult>, возвращенным данным методом.</span><span class="sxs-lookup"><span data-stu-id="24760-228">If an error has occurred during an asynchronous append, an exception is not thrown until the <xref:System.IO.Log.IRecordSequence.EndAppend%2A> method is called with the <xref:System.IAsyncResult> returned by this method.</span></span>  
  
 <span data-ttu-id="24760-229">Данные, содержащиеся в параметре `data`, будут сцеплены в единый массив байтов для добавления в качестве записи.</span><span class="sxs-lookup"><span data-stu-id="24760-229">Data contained in the `data` parameter will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="24760-230">Однако не делается допущение об обратном разделении данных на фрагменты массива при чтении записи.</span><span class="sxs-lookup"><span data-stu-id="24760-230">However, no provision is made for splitting data back into array segments when the record is read.</span></span>  
  
 <span data-ttu-id="24760-231">Обычно этот метод завершает работу до того, как запись будет записана.</span><span class="sxs-lookup"><span data-stu-id="24760-231">Normally, this method completes before the record has been written.</span></span> <span data-ttu-id="24760-232">Чтобы запись точно была записана, либо укажите флаг <xref:System.IO.Log.RecordAppendOptions.ForceFlush> с помощью параметра `recordAppendOptions`, либо вызовите метод <xref:System.IO.Log.IRecordSequence.Flush%2A>.</span><span class="sxs-lookup"><span data-stu-id="24760-232">To ensure that a record has been written, either specify the <xref:System.IO.Log.RecordAppendOptions.ForceFlush> flag using the `recordAppendOptions` parameter, or call the <xref:System.IO.Log.IRecordSequence.Flush%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="24760-233">Один или несколько аргументов являются недопустимыми.</span><span class="sxs-lookup"><span data-stu-id="24760-233">One or more of the arguments is invalid.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="24760-234">При добавлении записи произошла ошибка ввода-вывода.</span><span class="sxs-lookup"><span data-stu-id="24760-234">An I/O error occurred while appending the record.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="24760-235">Последовательности записей не удалось выделить достаточно свободного пространства для новой записи.</span><span class="sxs-lookup"><span data-stu-id="24760-235">The record sequence could not make enough free space to contain the new record.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="24760-236">Метод был вызван после удаления последовательности.</span><span class="sxs-lookup"><span data-stu-id="24760-236">The method was called after the sequence has been disposed of.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BeginAppend">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginAppend (ArraySegment&lt;byte&gt; data, System.IO.Log.SequenceNumber nextUndoRecord, System.IO.Log.SequenceNumber previousRecord, System.IO.Log.RecordAppendOptions recordAppendOptions, System.IO.Log.ReservationCollection reservations, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAppend(valuetype System.ArraySegment`1&lt;unsigned int8&gt; data, valuetype System.IO.Log.SequenceNumber nextUndoRecord, valuetype System.IO.Log.SequenceNumber previousRecord, valuetype System.IO.Log.RecordAppendOptions recordAppendOptions, class System.IO.Log.ReservationCollection reservations, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.IRecordSequence.BeginAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginAppend(ArraySegment&lt;System::Byte&gt; data, System::IO::Log::SequenceNumber nextUndoRecord, System::IO::Log::SequenceNumber previousRecord, System::IO::Log::RecordAppendOptions recordAppendOptions, System::IO::Log::ReservationCollection ^ reservations, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginAppend : ArraySegment&lt;byte&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions * System.IO.Log.ReservationCollection * AsyncCallback * obj -&gt; IAsyncResult" Usage="iRecordSequence.BeginAppend (data, nextUndoRecord, previousRecord, recordAppendOptions, reservations, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.ArraySegment&lt;System.Byte&gt;" />
        <Parameter Name="nextUndoRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="previousRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="recordAppendOptions" Type="System.IO.Log.RecordAppendOptions" />
        <Parameter Name="reservations" Type="System.IO.Log.ReservationCollection" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="24760-237">Список фрагментов массива байтов, которые будут сцеплены и добавлены в качестве записи.</span><span class="sxs-lookup"><span data-stu-id="24760-237">A list of byte array segments that will be concatenated and appended as the record.</span></span></param>
        <param name="nextUndoRecord"><span data-ttu-id="24760-238">Порядковый номер следующей записи в порядке, заданном пользователем.</span><span class="sxs-lookup"><span data-stu-id="24760-238">The sequence number of the next record in the user-specified order.</span></span></param>
        <param name="previousRecord"><span data-ttu-id="24760-239">Порядковый номер следующей записи в обратном порядке.</span><span class="sxs-lookup"><span data-stu-id="24760-239">The sequence number of the next record in Previous order.</span></span></param>
        <param name="recordAppendOptions"><span data-ttu-id="24760-240">Допустимое значение объекта <see cref="T:System.IO.Log.RecordAppendOptions" />, задающего, как должны записываться данные.</span><span class="sxs-lookup"><span data-stu-id="24760-240">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</span></span></param>
        <param name="reservations"><span data-ttu-id="24760-241">Коллекция <see cref="T:System.IO.Log.ReservationCollection" />, содержащая резервирование, которое следует использовать для данной записи.</span><span class="sxs-lookup"><span data-stu-id="24760-241">A <see cref="T:System.IO.Log.ReservationCollection" /> that contains the reservation that should be used for this record.</span></span></param>
        <param name="callback"><span data-ttu-id="24760-242">Необязательный асинхронный обратный вызов по завершении добавления.</span><span class="sxs-lookup"><span data-stu-id="24760-242">An optional asynchronous callback, to be called when the append is complete.</span></span></param>
        <param name="state"><span data-ttu-id="24760-243">Предоставляемый пользователем объект, отличающий конкретный запрос на асинхронное добавление от других запросов.</span><span class="sxs-lookup"><span data-stu-id="24760-243">A user-provided object that distinguishes this particular asynchronous append request from other requests.</span></span></param>
        <summary><span data-ttu-id="24760-244">При переопределении в производном классе начинает асинхронную операцию добавления, используя пространство, которое было ранее зарезервировано в последовательности.</span><span class="sxs-lookup"><span data-stu-id="24760-244">When overridden in a derived class, begins an asynchronous append operation using space previously reserved in the sequence.</span></span></summary>
        <returns><span data-ttu-id="24760-245">Объект <see cref="T:System.IAsyncResult" />, представляющий асинхронное добавление, которое может все еще ожидать выполнения.</span><span class="sxs-lookup"><span data-stu-id="24760-245">An <see cref="T:System.IAsyncResult" /> that represents the asynchronous append, which could still be pending.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24760-246">Чтобы обеспечить завершение операции добавления и освободить соответствующие ресурсы, необходимо передать значение <xref:System.IAsyncResult>, возвращенное этим методом, в метод <xref:System.IO.Log.IRecordSequence.EndAppend%2A>.</span><span class="sxs-lookup"><span data-stu-id="24760-246">You should pass the <xref:System.IAsyncResult> returned by this method to the <xref:System.IO.Log.IRecordSequence.EndAppend%2A> method to ensure that the append operation has completed and resources can be freed appropriately.</span></span> <span data-ttu-id="24760-247">Если ошибка возникла при выполнении асинхронного добавления, исключение не будет создано до тех пор, пока метод <xref:System.IO.Log.IRecordSequence.EndAppend%2A> не будет вызван со значением <xref:System.IAsyncResult>, возвращенным данным методом.</span><span class="sxs-lookup"><span data-stu-id="24760-247">If an error has occurred during an asynchronous append, an exception is not thrown until the <xref:System.IO.Log.IRecordSequence.EndAppend%2A> method is called with the <xref:System.IAsyncResult> returned by this method.</span></span>  
  
 <span data-ttu-id="24760-248">Данные, содержащиеся в параметре `data`, будут сцеплены в единый массив байтов для добавления в качестве записи.</span><span class="sxs-lookup"><span data-stu-id="24760-248">Data contained in the `data` parameter will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="24760-249">Однако не делается допущение об обратном разделении данных на фрагменты массива при чтении записи.</span><span class="sxs-lookup"><span data-stu-id="24760-249">However, no provision is made for splitting data back into array segments when the record is read.</span></span>  
  
 <span data-ttu-id="24760-250">Добавленная запись будет занимать пространство, ранее зарезервированное с помощью резервирования, заданного параметром `reservations`.</span><span class="sxs-lookup"><span data-stu-id="24760-250">The appended record will consume space that has been previously reserved, using a reservation specified by the `reservations` parameter.</span></span> <span data-ttu-id="24760-251">Если выполнить добавление удается, оно займет минимальную область резервирования, в которой поместятся данные, а эта область резервирования будет удалена из коллекции.</span><span class="sxs-lookup"><span data-stu-id="24760-251">If the append succeeds, it will consume the smallest reservation area that can hold the data, and that reservation area will be removed from the collection.</span></span>  
  
 <span data-ttu-id="24760-252">Обычно этот метод завершает работу до того, как запись будет записана.</span><span class="sxs-lookup"><span data-stu-id="24760-252">Normally, this method completes before the record has been written.</span></span> <span data-ttu-id="24760-253">Чтобы запись точно была записана, либо укажите флаг <xref:System.IO.Log.RecordAppendOptions.ForceFlush> с помощью параметра `recordAppendOptions`, либо вызовите метод <xref:System.IO.Log.IRecordSequence.Flush%2A>.</span><span class="sxs-lookup"><span data-stu-id="24760-253">To ensure that a record has been written, either specify the <xref:System.IO.Log.RecordAppendOptions.ForceFlush> flag using the `recordAppendOptions` parameter, or call the <xref:System.IO.Log.IRecordSequence.Flush%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="24760-254">Один или несколько аргументов являются недопустимыми.</span><span class="sxs-lookup"><span data-stu-id="24760-254">One or more of the arguments is invalid.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="24760-255">При добавлении записи произошла ошибка ввода-вывода.</span><span class="sxs-lookup"><span data-stu-id="24760-255">An I/O error occurred while appending the record.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="24760-256">Последовательности записей не удалось выделить достаточно свободного пространства для новой записи.</span><span class="sxs-lookup"><span data-stu-id="24760-256">The record sequence could not make enough free space to contain the new record.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="24760-257">Метод был вызван после удаления последовательности.</span><span class="sxs-lookup"><span data-stu-id="24760-257">The method was called after the sequence has been disposed of.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BeginAppend">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginAppend (System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; data, System.IO.Log.SequenceNumber nextUndoRecord, System.IO.Log.SequenceNumber previousUndoRecord, System.IO.Log.RecordAppendOptions recordAppendOptions, System.IO.Log.ReservationCollection reservations, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAppend(class System.Collections.Generic.IList`1&lt;valuetype System.ArraySegment`1&lt;unsigned int8&gt;&gt; data, valuetype System.IO.Log.SequenceNumber nextUndoRecord, valuetype System.IO.Log.SequenceNumber previousUndoRecord, valuetype System.IO.Log.RecordAppendOptions recordAppendOptions, class System.IO.Log.ReservationCollection reservations, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.IRecordSequence.BeginAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginAppend(System::Collections::Generic::IList&lt;ArraySegment&lt;System::Byte&gt;&gt; ^ data, System::IO::Log::SequenceNumber nextUndoRecord, System::IO::Log::SequenceNumber previousUndoRecord, System::IO::Log::RecordAppendOptions recordAppendOptions, System::IO::Log::ReservationCollection ^ reservations, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginAppend : System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions * System.IO.Log.ReservationCollection * AsyncCallback * obj -&gt; IAsyncResult" Usage="iRecordSequence.BeginAppend (data, nextUndoRecord, previousUndoRecord, recordAppendOptions, reservations, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.Generic.IList&lt;System.ArraySegment&lt;System.Byte&gt;&gt;" />
        <Parameter Name="nextUndoRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="previousUndoRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="recordAppendOptions" Type="System.IO.Log.RecordAppendOptions" />
        <Parameter Name="reservations" Type="System.IO.Log.ReservationCollection" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="24760-258">Список фрагментов массива байтов, которые будут сцеплены и добавлены в качестве записи.</span><span class="sxs-lookup"><span data-stu-id="24760-258">A list of byte array segments that will be concatenated and appended as the record.</span></span></param>
        <param name="nextUndoRecord"><span data-ttu-id="24760-259">Порядковый номер следующей записи в порядке, заданном пользователем.</span><span class="sxs-lookup"><span data-stu-id="24760-259">The sequence number of the next record in the user-specified order.</span></span></param>
        <param name="previousUndoRecord"><span data-ttu-id="24760-260">Порядковый номер следующей записи в обратном порядке.</span><span class="sxs-lookup"><span data-stu-id="24760-260">The sequence number of the next record in Previous order.</span></span></param>
        <param name="recordAppendOptions"><span data-ttu-id="24760-261">Допустимое значение объекта <see cref="T:System.IO.Log.RecordAppendOptions" />, задающего, как должны записываться данные.</span><span class="sxs-lookup"><span data-stu-id="24760-261">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</span></span></param>
        <param name="reservations"><span data-ttu-id="24760-262">Коллекция <see cref="T:System.IO.Log.ReservationCollection" />, содержащая резервирование, которое следует использовать для данной записи.</span><span class="sxs-lookup"><span data-stu-id="24760-262">A <see cref="T:System.IO.Log.ReservationCollection" /> that contains the reservation that should be used for this record.</span></span></param>
        <param name="callback"><span data-ttu-id="24760-263">Необязательный асинхронный обратный вызов по завершении добавления.</span><span class="sxs-lookup"><span data-stu-id="24760-263">An optional asynchronous callback, to be called when the append is complete.</span></span></param>
        <param name="state"><span data-ttu-id="24760-264">Предоставляемый пользователем объект, отличающий конкретный запрос на асинхронное добавление от других запросов.</span><span class="sxs-lookup"><span data-stu-id="24760-264">A user-provided object that distinguishes this particular asynchronous append request from other requests.</span></span></param>
        <summary><span data-ttu-id="24760-265">При переопределении в производном классе начинает асинхронную операцию добавления, используя пространство, которое было ранее зарезервировано в последовательности.</span><span class="sxs-lookup"><span data-stu-id="24760-265">When overridden in a derived class, begins an asynchronous append operation, using space previously reserved in the sequence.</span></span></summary>
        <returns><span data-ttu-id="24760-266">Объект <see cref="T:System.IAsyncResult" />, представляющий асинхронное добавление, которое может все еще ожидать выполнения.</span><span class="sxs-lookup"><span data-stu-id="24760-266">An <see cref="T:System.IAsyncResult" /> that represents the asynchronous append, which could still be pending.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24760-267">Чтобы обеспечить завершение операции добавления и освободить соответствующие ресурсы, необходимо передать значение <xref:System.IAsyncResult>, возвращенное этим методом, в метод <xref:System.IO.Log.IRecordSequence.EndAppend%2A>.</span><span class="sxs-lookup"><span data-stu-id="24760-267">You should pass the <xref:System.IAsyncResult> returned by this method to the <xref:System.IO.Log.IRecordSequence.EndAppend%2A> method to ensure that the append operation has completed and resources can be freed appropriately.</span></span> <span data-ttu-id="24760-268">Если ошибка возникла при выполнении асинхронного добавления, исключение не будет создано до тех пор, пока метод <xref:System.IO.Log.IRecordSequence.EndAppend%2A> не будет вызван со значением <xref:System.IAsyncResult>, возвращенным данным методом.</span><span class="sxs-lookup"><span data-stu-id="24760-268">If an error has occurred during an asynchronous append, an exception is not thrown until the <xref:System.IO.Log.IRecordSequence.EndAppend%2A> method is called with the <xref:System.IAsyncResult> returned by this method.</span></span>  
  
 <span data-ttu-id="24760-269">Данные, содержащиеся в параметре `data`, будут сцеплены в единый массив байтов для добавления в качестве записи.</span><span class="sxs-lookup"><span data-stu-id="24760-269">Data contained in the `data` parameter will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="24760-270">Однако не делается допущение об обратном разделении данных на фрагменты массива при чтении записи.</span><span class="sxs-lookup"><span data-stu-id="24760-270">However, no provision is made for splitting data back into array segments when the record is read.</span></span>  
  
 <span data-ttu-id="24760-271">Добавленная запись будет занимать пространство, ранее зарезервированное с помощью резервирования, заданного параметром `reservations`.</span><span class="sxs-lookup"><span data-stu-id="24760-271">The appended record will consume space that has been previously reserved, using a reservation specified by the `reservations` parameter.</span></span> <span data-ttu-id="24760-272">Если выполнить добавление удается, оно займет минимальную область резервирования, в которой поместятся данные, а эта область резервирования будет удалена из коллекции.</span><span class="sxs-lookup"><span data-stu-id="24760-272">If the append succeeds, it will consume the smallest reservation area that can hold the data, and that reservation area will be removed from the collection.</span></span>  
  
 <span data-ttu-id="24760-273">Обычно этот метод завершает работу до того, как запись будет записана.</span><span class="sxs-lookup"><span data-stu-id="24760-273">Normally, this method completes before the record has been written.</span></span> <span data-ttu-id="24760-274">Чтобы запись точно была записана, либо укажите флаг <xref:System.IO.Log.RecordAppendOptions.ForceFlush> с помощью параметра `recordAppendOptions`, либо вызовите метод <xref:System.IO.Log.IRecordSequence.Flush%2A>.</span><span class="sxs-lookup"><span data-stu-id="24760-274">To ensure that a record has been written, either specify the <xref:System.IO.Log.RecordAppendOptions.ForceFlush> flag using the `recordAppendOptions` parameter, or call the <xref:System.IO.Log.IRecordSequence.Flush%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="24760-275">Один или несколько аргументов являются недопустимыми.</span><span class="sxs-lookup"><span data-stu-id="24760-275">One or more of the arguments is invalid.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="24760-276">При добавлении записи произошла ошибка ввода-вывода.</span><span class="sxs-lookup"><span data-stu-id="24760-276">An I/O error occurred while appending the record.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="24760-277">Последовательности записей не удалось выделить достаточно свободного пространства для новой записи.</span><span class="sxs-lookup"><span data-stu-id="24760-277">The record sequence could not make enough free space to contain the new record.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="24760-278">Метод был вызван после удаления последовательности.</span><span class="sxs-lookup"><span data-stu-id="24760-278">The method was called after the sequence has been disposed of.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BeginFlush">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginFlush (System.IO.Log.SequenceNumber sequenceNumber, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginFlush(valuetype System.IO.Log.SequenceNumber sequenceNumber, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.IRecordSequence.BeginFlush(System.IO.Log.SequenceNumber,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginFlush(System::IO::Log::SequenceNumber sequenceNumber, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginFlush : System.IO.Log.SequenceNumber * AsyncCallback * obj -&gt; IAsyncResult" Usage="iRecordSequence.BeginFlush (sequenceNumber, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sequenceNumber" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="sequenceNumber"><span data-ttu-id="24760-279">Порядковый номер последней записи, которую требуется записать.</span><span class="sxs-lookup"><span data-stu-id="24760-279">The sequence number of the latest record that must be written.</span></span> <span data-ttu-id="24760-280">Если этот номер <see cref="T:System.IO.Log.SequenceNumber" /> недопустим, необходимо записать все записи.</span><span class="sxs-lookup"><span data-stu-id="24760-280">If this <see cref="T:System.IO.Log.SequenceNumber" /> is invalid, then all records must be written.</span></span></param>
        <param name="callback"><span data-ttu-id="24760-281">Необязательный асинхронный обратный вызов по завершении операции записи на диск.</span><span class="sxs-lookup"><span data-stu-id="24760-281">An optional asynchronous callback, to be called when the flush is complete.</span></span></param>
        <param name="state"><span data-ttu-id="24760-282">Предоставляемый пользователем объект, являющийся отличительным признаком данного конкретного запроса на запись на диск от других запросов.</span><span class="sxs-lookup"><span data-stu-id="24760-282">A user-provided object that distinguishes this particular asynchronous flush request from other requests.</span></span></param>
        <summary><span data-ttu-id="24760-283">При переопределении в производном классе начинает асинхронную операцию записи на диск, используя пространство, которое было ранее зарезервировано в последовательности.</span><span class="sxs-lookup"><span data-stu-id="24760-283">When overridden in a derived class, begins an asynchronous flush operation, using space previously reserved in the sequence.</span></span></summary>
        <returns><span data-ttu-id="24760-284">Объект <see cref="T:System.IAsyncResult" />, представляющий асинхронную операцию записи на диск, которая может все еще ожидать выполнения.</span><span class="sxs-lookup"><span data-stu-id="24760-284">An <see cref="T:System.IAsyncResult" /> that represents the asynchronous flush operation, which could still be pending.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24760-285">Необходимо передать объект <xref:System.IAsyncResult>, возвращаемый текущим методом, методу <xref:System.IO.Log.IRecordSequence.EndFlush%2A>, чтобы обеспечить завершение очистки и правильное освобождение ресурсов.</span><span class="sxs-lookup"><span data-stu-id="24760-285">You should pass the <xref:System.IAsyncResult> returned by the current method to the <xref:System.IO.Log.IRecordSequence.EndFlush%2A> method to ensure that the flush completes and resources are freed appropriately.</span></span> <span data-ttu-id="24760-286">Если ошибка возникает при выполнении асинхронной очистки, исключение не будет создано до тех пор, пока не будет вызван метод <xref:System.IO.Log.IRecordSequence.EndFlush%2A> с объектом <xref:System.IAsyncResult>, возвращаемым данным методом.</span><span class="sxs-lookup"><span data-stu-id="24760-286">If an error occurs during an asynchronous flush, an exception is not thrown until the <xref:System.IO.Log.IRecordSequence.EndFlush%2A> method is called with the <xref:System.IAsyncResult> returned by this method.</span></span>  
  
 <span data-ttu-id="24760-287">Вызов этого метода гарантирует, что внесены все записи, добавленные в последовательность <xref:System.IO.Log.IRecordSequence>.</span><span class="sxs-lookup"><span data-stu-id="24760-287">Calling this method ensures that all records that have been appended to the <xref:System.IO.Log.IRecordSequence> are durably written.</span></span>  
  
 <span data-ttu-id="24760-288">Если последовательность записей была удалена, или если передается неверный аргумент, исключения создаются немедленно, в пределах данной операции.</span><span class="sxs-lookup"><span data-stu-id="24760-288">If a record sequence has been disposed of, or if you pass an invalid argument, exceptions are thrown immediately within this operation.</span></span> <span data-ttu-id="24760-289">Ошибки, возникшие при выполнении запроса асинхронной очистки, например ошибка диска в процессе запроса ввода-вывода, приводят к созданию исключений при вызове метода <xref:System.IO.Log.IRecordSequence.EndFlush%2A>.</span><span class="sxs-lookup"><span data-stu-id="24760-289">Errors that occurred during an asynchronous flush request, for example, a disk failure during the I/O request, will result in exceptions being thrown when the <xref:System.IO.Log.IRecordSequence.EndFlush%2A> method is called.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="24760-290">Один или несколько аргументов являются недопустимыми.</span><span class="sxs-lookup"><span data-stu-id="24760-290">One or more of the arguments is invalid.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="24760-291">При очистке данных произошла ошибка ввода-вывода.</span><span class="sxs-lookup"><span data-stu-id="24760-291">An I/O error occurred while flushing the data.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="24760-292">Метод был вызван после удаления последовательности.</span><span class="sxs-lookup"><span data-stu-id="24760-292">The method was called after the sequence has been disposed of.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginReserveAndAppend">
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="24760-293">При переопределении в производном классе начинает асинхронную операцию резервирования и добавления.</span><span class="sxs-lookup"><span data-stu-id="24760-293">When overridden in a derived class, begins an asynchronous reserve and append operation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginReserveAndAppend">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginReserveAndAppend (ArraySegment&lt;byte&gt; data, System.IO.Log.SequenceNumber nextUndoRecord, System.IO.Log.SequenceNumber previousRecord, System.IO.Log.RecordAppendOptions recordAppendOptions, System.IO.Log.ReservationCollection reservationCollection, long[] reservations, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginReserveAndAppend(valuetype System.ArraySegment`1&lt;unsigned int8&gt; data, valuetype System.IO.Log.SequenceNumber nextUndoRecord, valuetype System.IO.Log.SequenceNumber previousRecord, valuetype System.IO.Log.RecordAppendOptions recordAppendOptions, class System.IO.Log.ReservationCollection reservationCollection, int64[] reservations, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.IRecordSequence.BeginReserveAndAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[],System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginReserveAndAppend(ArraySegment&lt;System::Byte&gt; data, System::IO::Log::SequenceNumber nextUndoRecord, System::IO::Log::SequenceNumber previousRecord, System::IO::Log::RecordAppendOptions recordAppendOptions, System::IO::Log::ReservationCollection ^ reservationCollection, cli::array &lt;long&gt; ^ reservations, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginReserveAndAppend : ArraySegment&lt;byte&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions * System.IO.Log.ReservationCollection * int64[] * AsyncCallback * obj -&gt; IAsyncResult" Usage="iRecordSequence.BeginReserveAndAppend (data, nextUndoRecord, previousRecord, recordAppendOptions, reservationCollection, reservations, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.ArraySegment&lt;System.Byte&gt;" />
        <Parameter Name="nextUndoRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="previousRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="recordAppendOptions" Type="System.IO.Log.RecordAppendOptions" />
        <Parameter Name="reservationCollection" Type="System.IO.Log.ReservationCollection" />
        <Parameter Name="reservations" Type="System.Int64[]" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="24760-294">Список фрагментов массива байтов, которые будут сцеплены и добавлены в качестве записи.</span><span class="sxs-lookup"><span data-stu-id="24760-294">A list of byte array segments that will be concatenated and appended as the record.</span></span></param>
        <param name="nextUndoRecord"><span data-ttu-id="24760-295">Порядковый номер следующей записи в порядке, заданном пользователем.</span><span class="sxs-lookup"><span data-stu-id="24760-295">The sequence number of the next record in the user-specified order.</span></span></param>
        <param name="previousRecord"><span data-ttu-id="24760-296">Порядковый номер следующей записи в обратном порядке.</span><span class="sxs-lookup"><span data-stu-id="24760-296">The sequence number of the next record in Previous order.</span></span></param>
        <param name="recordAppendOptions"><span data-ttu-id="24760-297">Допустимое значение объекта <see cref="T:System.IO.Log.RecordAppendOptions" />, задающего, как должны записываться данные.</span><span class="sxs-lookup"><span data-stu-id="24760-297">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</span></span></param>
        <param name="reservationCollection"><span data-ttu-id="24760-298">Коллекция резервирования, в которой требуется сделать резервирования.</span><span class="sxs-lookup"><span data-stu-id="24760-298">The reservation collection to make reservations in.</span></span></param>
        <param name="reservations"><span data-ttu-id="24760-299">Размер необходимого резервирования (в байтах).</span><span class="sxs-lookup"><span data-stu-id="24760-299">The reservations to make, in bytes.</span></span></param>
        <param name="callback"><span data-ttu-id="24760-300">Необязательный асинхронный обратный вызов по завершении добавления.</span><span class="sxs-lookup"><span data-stu-id="24760-300">An optional asynchronous callback, to be called when the append is complete.</span></span></param>
        <param name="state"><span data-ttu-id="24760-301">Предоставляемый пользователем объект, отличающий конкретный запрос на асинхронное добавление от других запросов.</span><span class="sxs-lookup"><span data-stu-id="24760-301">A user-provided object that distinguishes this particular asynchronous append request from other requests.</span></span></param>
        <summary><span data-ttu-id="24760-302">При переопределении в производном классе начинает асинхронную операцию резервирования и добавления.</span><span class="sxs-lookup"><span data-stu-id="24760-302">When overridden in a derived class, begins an asynchronous reserve and append operation.</span></span></summary>
        <returns><span data-ttu-id="24760-303">Объект <see cref="T:System.IAsyncResult" />, представляющий данную асинхронную операцию, которая может все еще ожидать выполнения.</span><span class="sxs-lookup"><span data-stu-id="24760-303">An <see cref="T:System.IAsyncResult" /> that represents this asynchronous operation, which could still be pending.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24760-304">Чтобы обеспечить завершение операции добавления и освободить соответствующие ресурсы, необходимо передать значение <xref:System.IAsyncResult>, возвращенное этим методом, в метод <xref:System.IO.Log.IRecordSequence.EndReserveAndAppend%2A>.</span><span class="sxs-lookup"><span data-stu-id="24760-304">You should pass the <xref:System.IAsyncResult> returned by this method to the <xref:System.IO.Log.IRecordSequence.EndReserveAndAppend%2A> method to ensure that the append operation has completed and resources can be freed appropriately.</span></span> <span data-ttu-id="24760-305">Если ошибка возникла при выполнении асинхронного добавления, исключение не будет создано до тех пор, пока метод <xref:System.IO.Log.IRecordSequence.EndReserveAndAppend%2A> не будет вызван со значением <xref:System.IAsyncResult>, возвращенным данным методом.</span><span class="sxs-lookup"><span data-stu-id="24760-305">If an error has occurred during an asynchronous append, an exception is not thrown until the <xref:System.IO.Log.IRecordSequence.EndReserveAndAppend%2A> method is called with the <xref:System.IAsyncResult> returned by this method.</span></span>  
  
 <span data-ttu-id="24760-306">Данные, содержащиеся в параметре `data`, будут сцеплены в единый массив байтов для добавления в качестве записи.</span><span class="sxs-lookup"><span data-stu-id="24760-306">Data contained in the `data` parameter will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="24760-307">Однако не делается допущение об обратном разделении данных на фрагменты массива при чтении записи.</span><span class="sxs-lookup"><span data-stu-id="24760-307">However, no provision is made for splitting data back into array segments when the record is read.</span></span>  
  
 <span data-ttu-id="24760-308">Заданные резервирования добавляются в предоставленную коллекцию резервирования при помощи атомарной операции добавления записи.</span><span class="sxs-lookup"><span data-stu-id="24760-308">The specified reservations are added to the provided reservation collection in an atomic operation with a record append operation.</span></span> <span data-ttu-id="24760-309">Если выполнить добавление не удается, место не резервируется.</span><span class="sxs-lookup"><span data-stu-id="24760-309">If the append fails, no space is reserved.</span></span>  
  
 <span data-ttu-id="24760-310">Обычно этот метод может завершить работу до того, как запись будет записана.</span><span class="sxs-lookup"><span data-stu-id="24760-310">Normally, this method may complete before the record has been written.</span></span> <span data-ttu-id="24760-311">Чтобы запись точно была записана, либо укажите флаг <xref:System.IO.Log.RecordAppendOptions.ForceFlush> с помощью параметра `recordAppendOptions`, либо вызовите метод <xref:System.IO.Log.IRecordSequence.Flush%2A>.</span><span class="sxs-lookup"><span data-stu-id="24760-311">To ensure that a record has been written, either specify the <xref:System.IO.Log.RecordAppendOptions.ForceFlush> flag using the `recordAppendOptions` parameter, or call the <xref:System.IO.Log.IRecordSequence.Flush%2A> method.</span></span>  
  
 <span data-ttu-id="24760-312">Если последовательность записей была удалена, или если передается неверный аргумент, исключения создаются немедленно, в пределах данной операции.</span><span class="sxs-lookup"><span data-stu-id="24760-312">If a record sequence has been disposed of, or if you pass an invalid argument, exceptions are thrown immediately within this operation.</span></span> <span data-ttu-id="24760-313">Ошибки, возникшие при выполнении запроса асинхронного добавления, например ошибка диска в процессе запроса ввода-вывода, приводят к созданию исключений при вызове метода <xref:System.IO.Log.IRecordSequence.EndReserveAndAppend%2A>.</span><span class="sxs-lookup"><span data-stu-id="24760-313">Errors that occurred during an asynchronous append request, for example, a disk failure during the I/O request, will result in exceptions being thrown when the <xref:System.IO.Log.IRecordSequence.EndReserveAndAppend%2A> method is called.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="24760-314">Один или несколько аргументов являются недопустимыми.</span><span class="sxs-lookup"><span data-stu-id="24760-314">One or more of the arguments is invalid.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="24760-315">При добавлении записи произошла ошибка ввода-вывода.</span><span class="sxs-lookup"><span data-stu-id="24760-315">An I/O error occurred while appending the record.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="24760-316">Последовательности записей не удалось выделить достаточно свободного пространства для новой записи или выполнить резервирование.</span><span class="sxs-lookup"><span data-stu-id="24760-316">The record sequence could not make enough free space to contain the new record, or to make the reservation.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="24760-317">Метод был вызван после удаления последовательности.</span><span class="sxs-lookup"><span data-stu-id="24760-317">The method was called after the sequence has been disposed of.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BeginReserveAndAppend">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginReserveAndAppend (System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; data, System.IO.Log.SequenceNumber nextUndoRecord, System.IO.Log.SequenceNumber previousRecord, System.IO.Log.RecordAppendOptions recordAppendOptions, System.IO.Log.ReservationCollection reservationCollection, long[] reservations, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginReserveAndAppend(class System.Collections.Generic.IList`1&lt;valuetype System.ArraySegment`1&lt;unsigned int8&gt;&gt; data, valuetype System.IO.Log.SequenceNumber nextUndoRecord, valuetype System.IO.Log.SequenceNumber previousRecord, valuetype System.IO.Log.RecordAppendOptions recordAppendOptions, class System.IO.Log.ReservationCollection reservationCollection, int64[] reservations, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.IRecordSequence.BeginReserveAndAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[],System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginReserveAndAppend(System::Collections::Generic::IList&lt;ArraySegment&lt;System::Byte&gt;&gt; ^ data, System::IO::Log::SequenceNumber nextUndoRecord, System::IO::Log::SequenceNumber previousRecord, System::IO::Log::RecordAppendOptions recordAppendOptions, System::IO::Log::ReservationCollection ^ reservationCollection, cli::array &lt;long&gt; ^ reservations, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginReserveAndAppend : System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions * System.IO.Log.ReservationCollection * int64[] * AsyncCallback * obj -&gt; IAsyncResult" Usage="iRecordSequence.BeginReserveAndAppend (data, nextUndoRecord, previousRecord, recordAppendOptions, reservationCollection, reservations, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.Generic.IList&lt;System.ArraySegment&lt;System.Byte&gt;&gt;" />
        <Parameter Name="nextUndoRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="previousRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="recordAppendOptions" Type="System.IO.Log.RecordAppendOptions" />
        <Parameter Name="reservationCollection" Type="System.IO.Log.ReservationCollection" />
        <Parameter Name="reservations" Type="System.Int64[]" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="24760-318">Список фрагментов массива байтов, которые будут сцеплены и добавлены в качестве записи.</span><span class="sxs-lookup"><span data-stu-id="24760-318">A list of byte array segments that will be concatenated and appended as the record.</span></span></param>
        <param name="nextUndoRecord"><span data-ttu-id="24760-319">Порядковый номер следующей записи в порядке, заданном пользователем.</span><span class="sxs-lookup"><span data-stu-id="24760-319">The sequence number of the next record in the user-specified order.</span></span></param>
        <param name="previousRecord"><span data-ttu-id="24760-320">Порядковый номер следующей записи в обратном порядке.</span><span class="sxs-lookup"><span data-stu-id="24760-320">The sequence number of the next record in Previous order.</span></span></param>
        <param name="recordAppendOptions"><span data-ttu-id="24760-321">Допустимое значение объекта <see cref="T:System.IO.Log.RecordAppendOptions" />, задающего, как должны записываться данные.</span><span class="sxs-lookup"><span data-stu-id="24760-321">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</span></span></param>
        <param name="reservationCollection"><span data-ttu-id="24760-322">Коллекция резервирования, в которой требуется сделать резервирования.</span><span class="sxs-lookup"><span data-stu-id="24760-322">The reservation collection to make reservations in.</span></span></param>
        <param name="reservations"><span data-ttu-id="24760-323">Размер необходимого резервирования (в байтах).</span><span class="sxs-lookup"><span data-stu-id="24760-323">The reservations to make, in bytes.</span></span></param>
        <param name="callback"><span data-ttu-id="24760-324">Необязательный асинхронный обратный вызов по завершении добавления.</span><span class="sxs-lookup"><span data-stu-id="24760-324">An optional asynchronous callback, to be called when the append is complete.</span></span></param>
        <param name="state"><span data-ttu-id="24760-325">Предоставляемый пользователем объект, отличающий конкретный запрос на асинхронное добавление от других запросов.</span><span class="sxs-lookup"><span data-stu-id="24760-325">A user-provided object that distinguishes this particular asynchronous append request from other requests.</span></span></param>
        <summary><span data-ttu-id="24760-326">При переопределении в производном классе начинает асинхронную операцию резервирования и добавления.</span><span class="sxs-lookup"><span data-stu-id="24760-326">When overridden in a derived class, begins an asynchronous reserve and append operation.</span></span></summary>
        <returns><span data-ttu-id="24760-327">Объект <see cref="T:System.IAsyncResult" />, представляющий данную асинхронную операцию, которая может все еще ожидать выполнения.</span><span class="sxs-lookup"><span data-stu-id="24760-327">An <see cref="T:System.IAsyncResult" /> that represents this asynchronous operation, which could still be pending.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24760-328">Чтобы обеспечить завершение операции добавления и освободить соответствующие ресурсы, необходимо передать значение <xref:System.IAsyncResult>, возвращенное этим методом, в метод <xref:System.IO.Log.IRecordSequence.EndReserveAndAppend%2A>.</span><span class="sxs-lookup"><span data-stu-id="24760-328">You should pass the <xref:System.IAsyncResult> returned by this method to the <xref:System.IO.Log.IRecordSequence.EndReserveAndAppend%2A> method to ensure that the append operation has completed and resources can be freed appropriately.</span></span> <span data-ttu-id="24760-329">Если ошибка возникла при выполнении асинхронного добавления, исключение не будет создано до тех пор, пока метод <xref:System.IO.Log.IRecordSequence.EndReserveAndAppend%2A> не будет вызван со значением <xref:System.IAsyncResult>, возвращенным данным методом.</span><span class="sxs-lookup"><span data-stu-id="24760-329">If an error has occurred during an asynchronous append, an exception is not thrown until the <xref:System.IO.Log.IRecordSequence.EndReserveAndAppend%2A> method is called with the <xref:System.IAsyncResult> returned by this method.</span></span>  
  
 <span data-ttu-id="24760-330">Данные, содержащиеся в параметре `data`, будут сцеплены в единый массив байтов для добавления в качестве записи.</span><span class="sxs-lookup"><span data-stu-id="24760-330">Data contained in the `data` parameter will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="24760-331">Однако не делается допущение об обратном разделении данных на фрагменты массива при чтении записи.</span><span class="sxs-lookup"><span data-stu-id="24760-331">However, no provision is made for splitting data back into array segments when the record is read.</span></span>  
  
 <span data-ttu-id="24760-332">Заданные резервирования добавляются в предоставленную коллекцию резервирования при помощи атомарной операции добавления записи.</span><span class="sxs-lookup"><span data-stu-id="24760-332">The specified reservations are added to the provided reservation collection in an atomic operation with a record append operation.</span></span> <span data-ttu-id="24760-333">Если выполнить добавление не удается, место не резервируется.</span><span class="sxs-lookup"><span data-stu-id="24760-333">If the append fails, no space is reserved.</span></span>  
  
 <span data-ttu-id="24760-334">Обычно этот метод может завершить работу до того, как запись будет записана.</span><span class="sxs-lookup"><span data-stu-id="24760-334">Normally, this method may complete before the record has been written.</span></span> <span data-ttu-id="24760-335">Чтобы запись точно была записана, либо укажите флаг <xref:System.IO.Log.RecordAppendOptions.ForceFlush> с помощью параметра `recordAppendOptions`, либо вызовите метод <xref:System.IO.Log.IRecordSequence.Flush%2A>.</span><span class="sxs-lookup"><span data-stu-id="24760-335">To ensure that a record has been written, either specify the <xref:System.IO.Log.RecordAppendOptions.ForceFlush> flag using the `recordAppendOptions` parameter, or call the <xref:System.IO.Log.IRecordSequence.Flush%2A> method.</span></span>  
  
 <span data-ttu-id="24760-336">Если последовательность записей была удалена, или если передается неверный аргумент, исключения создаются немедленно, в пределах данной операции.</span><span class="sxs-lookup"><span data-stu-id="24760-336">If a record sequence has been disposed of, or if you pass an invalid argument, exceptions are thrown immediately within this operation.</span></span> <span data-ttu-id="24760-337">Ошибки, возникшие при выполнении запроса асинхронного добавления, например ошибка диска в процессе запроса ввода-вывода, приводят к созданию исключений при вызове метода <xref:System.IO.Log.IRecordSequence.EndReserveAndAppend%2A>.</span><span class="sxs-lookup"><span data-stu-id="24760-337">Errors that occurred during an asynchronous append request, for example, a disk failure during the I/O request, will result in exceptions being thrown when the <xref:System.IO.Log.IRecordSequence.EndReserveAndAppend%2A> method is called.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="24760-338">Один или несколько аргументов являются недопустимыми.</span><span class="sxs-lookup"><span data-stu-id="24760-338">One or more of the arguments is invalid.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="24760-339">При добавлении записи произошла ошибка ввода-вывода.</span><span class="sxs-lookup"><span data-stu-id="24760-339">An I/O error occurred while appending the record.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="24760-340">Последовательности записей не удалось выделить достаточно свободного пространства для новой записи или выполнить резервирование.</span><span class="sxs-lookup"><span data-stu-id="24760-340">The record sequence could not make enough free space to contain the new record, or to make the reservation.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="24760-341">Метод был вызван после удаления последовательности.</span><span class="sxs-lookup"><span data-stu-id="24760-341">The method was called after the sequence has been disposed of.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginWriteRestartArea">
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="24760-342">При переопределении в производном классе начинает асинхронную операцию записи области перезапуска.</span><span class="sxs-lookup"><span data-stu-id="24760-342">When overridden in a derived class, begins an asynchronous restart area write operation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginWriteRestartArea">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginWriteRestartArea (ArraySegment&lt;byte&gt; data, System.IO.Log.SequenceNumber newBaseSequenceNumber, System.IO.Log.ReservationCollection reservation, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginWriteRestartArea(valuetype System.ArraySegment`1&lt;unsigned int8&gt; data, valuetype System.IO.Log.SequenceNumber newBaseSequenceNumber, class System.IO.Log.ReservationCollection reservation, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.IRecordSequence.BeginWriteRestartArea(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginWriteRestartArea (data As ArraySegment(Of Byte), newBaseSequenceNumber As SequenceNumber, reservation As ReservationCollection, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginWriteRestartArea(ArraySegment&lt;System::Byte&gt; data, System::IO::Log::SequenceNumber newBaseSequenceNumber, System::IO::Log::ReservationCollection ^ reservation, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginWriteRestartArea : ArraySegment&lt;byte&gt; * System.IO.Log.SequenceNumber * System.IO.Log.ReservationCollection * AsyncCallback * obj -&gt; IAsyncResult" Usage="iRecordSequence.BeginWriteRestartArea (data, newBaseSequenceNumber, reservation, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.ArraySegment&lt;System.Byte&gt;" />
        <Parameter Name="newBaseSequenceNumber" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="reservation" Type="System.IO.Log.ReservationCollection" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="24760-343">Список фрагментов массива байтов, которые будут сцеплены и добавлены в качестве записи.</span><span class="sxs-lookup"><span data-stu-id="24760-343">A list of byte array segments that will be concatenated and appended as the record.</span></span></param>
        <param name="newBaseSequenceNumber"><span data-ttu-id="24760-344">Новый базовый порядковый номер.</span><span class="sxs-lookup"><span data-stu-id="24760-344">The new base sequence number.</span></span> <span data-ttu-id="24760-345">Заданный порядковый номер должен быть больше или равен текущему базовому порядковому номеру.</span><span class="sxs-lookup"><span data-stu-id="24760-345">The specified sequence number must be greater than or equal to the current base sequence number.</span></span></param>
        <param name="reservation"><span data-ttu-id="24760-346">Коллекция <see cref="T:System.IO.Log.ReservationCollection" />, содержащая резервирование, которое следует использовать для данной области перезапуска.</span><span class="sxs-lookup"><span data-stu-id="24760-346">A <see cref="T:System.IO.Log.ReservationCollection" /> that contains the reservation that should be used for this restart area.</span></span></param>
        <param name="callback"><span data-ttu-id="24760-347">Необязательный асинхронный обратный вызов по завершении записи в области перезапуска.</span><span class="sxs-lookup"><span data-stu-id="24760-347">An optional asynchronous callback, to be called when the restart area write is complete.</span></span></param>
        <param name="state"><span data-ttu-id="24760-348">Предоставляемый пользователем объект, отличающий конкретный запрос на асинхронную запись в область перезапуска от других запросов.</span><span class="sxs-lookup"><span data-stu-id="24760-348">A user-provided object that distinguishes this particular asynchronous restart area write request from other requests.</span></span></param>
        <summary><span data-ttu-id="24760-349">При переопределении в производном классе начинает асинхронную операцию записи области перезапуска, используя пространство, которое было ранее зарезервировано в последовательности.</span><span class="sxs-lookup"><span data-stu-id="24760-349">When overridden in a derived class, begins an asynchronous restart area write operation, using space previously reserved in the sequence.</span></span></summary>
        <returns><span data-ttu-id="24760-350">Объект <see cref="T:System.IAsyncResult" /> представляет асинхронную операцию записи в область перезапуска, которая может все еще быть отложена.</span><span class="sxs-lookup"><span data-stu-id="24760-350">An <see cref="T:System.IAsyncResult" /> that represents the asynchronous restart area write operation, which could still be pending.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24760-351">Чтобы обеспечить завершение операции записи в область перезапуска и освободить соответствующие ресурсы, необходимо передать значение <xref:System.IAsyncResult>, возвращенное этим методом, в метод <xref:System.IO.Log.IRecordSequence.EndWriteRestartArea%2A>.</span><span class="sxs-lookup"><span data-stu-id="24760-351">You should pass the <xref:System.IAsyncResult> returned by this method to the <xref:System.IO.Log.IRecordSequence.EndWriteRestartArea%2A> method, to assure that the restart area write operation has completed and resources can be freed appropriately.</span></span> <span data-ttu-id="24760-352">Если ошибка возникла при выполнении операции асинхронной записи в область перезапуска, исключение не будет создано до тех пор, пока метод <xref:System.IO.Log.IRecordSequence.EndWriteRestartArea%2A> не будет вызван со значением <xref:System.IAsyncResult>, возвращенным данным методом.</span><span class="sxs-lookup"><span data-stu-id="24760-352">If an error has occurred during an asynchronous restart area write operation, an exception is not thrown until the <xref:System.IO.Log.IRecordSequence.EndWriteRestartArea%2A> method is called with the <xref:System.IAsyncResult> returned by this method.</span></span>  
  
 <span data-ttu-id="24760-353">Данные, содержащиеся в параметре `data`, будут сцеплены в единый массив байтов для добавления в качестве записи.</span><span class="sxs-lookup"><span data-stu-id="24760-353">Data contained in the `data` parameter will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="24760-354">Однако не делается допущение об обратном разделении данных на фрагменты массива при чтении записи.</span><span class="sxs-lookup"><span data-stu-id="24760-354">However, no provision is made for splitting data back into array segments when the record is read.</span></span>  
  
 <span data-ttu-id="24760-355">При успешном выполнении операции базовый порядковый номер обновляется.</span><span class="sxs-lookup"><span data-stu-id="24760-355">When the operation successfully completes, the base sequence number has been updated.</span></span> <span data-ttu-id="24760-356">Все записи журнала с порядковыми номерами меньшими, чем новый базовый порядковый номер, недоступны.</span><span class="sxs-lookup"><span data-stu-id="24760-356">All log records with sequence numbers less than the new base sequence number are inaccessible.</span></span>  
  
 <span data-ttu-id="24760-357">Если задано <xref:System.IO.Log.ReservationCollection>, записанная область перезапуска будет занимать место, ранее зарезервированное с помощью содержащегося в коллекции резервирования.</span><span class="sxs-lookup"><span data-stu-id="24760-357">If a <xref:System.IO.Log.ReservationCollection> is specified, the written restart area will consume space that has been previously reserved, using a reservation contained in the collection.</span></span> <span data-ttu-id="24760-358">Если метод завершается успешно, будет занята минимальная область резервирования, в которой поместятся данные, а эта область резервирования будет удалена из коллекции.</span><span class="sxs-lookup"><span data-stu-id="24760-358">If the method succeeds, it will consume the smallest reservation that can hold the data, and that reservation will be removed from the collection.</span></span>  
  
 <span data-ttu-id="24760-359">Если последовательность записей была удалена, или если передается неверный аргумент, исключения создаются немедленно, в пределах данной операции.</span><span class="sxs-lookup"><span data-stu-id="24760-359">If a record sequence has been disposed of, or if you pass an invalid argument, exceptions are thrown immediately within this operation.</span></span> <span data-ttu-id="24760-360">Ошибки, возникшие при выполнении запроса асинхронного добавления, например ошибка диска в процессе запроса ввода-вывода, приводят к созданию исключений при вызове метода <xref:System.IO.Log.IRecordSequence.EndWriteRestartArea%2A>.</span><span class="sxs-lookup"><span data-stu-id="24760-360">Errors that occurred during an asynchronous append request, for example, a disk failure during the I/O request, will result in exceptions being thrown when the <xref:System.IO.Log.IRecordSequence.EndWriteRestartArea%2A> method is called.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginWriteRestartArea">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginWriteRestartArea (System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; data, System.IO.Log.SequenceNumber newBaseSequenceNumber, System.IO.Log.ReservationCollection reservation, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginWriteRestartArea(class System.Collections.Generic.IList`1&lt;valuetype System.ArraySegment`1&lt;unsigned int8&gt;&gt; data, valuetype System.IO.Log.SequenceNumber newBaseSequenceNumber, class System.IO.Log.ReservationCollection reservation, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.IRecordSequence.BeginWriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginWriteRestartArea (data As IList(Of ArraySegment(Of Byte)), newBaseSequenceNumber As SequenceNumber, reservation As ReservationCollection, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginWriteRestartArea(System::Collections::Generic::IList&lt;ArraySegment&lt;System::Byte&gt;&gt; ^ data, System::IO::Log::SequenceNumber newBaseSequenceNumber, System::IO::Log::ReservationCollection ^ reservation, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginWriteRestartArea : System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; * System.IO.Log.SequenceNumber * System.IO.Log.ReservationCollection * AsyncCallback * obj -&gt; IAsyncResult" Usage="iRecordSequence.BeginWriteRestartArea (data, newBaseSequenceNumber, reservation, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.Generic.IList&lt;System.ArraySegment&lt;System.Byte&gt;&gt;" />
        <Parameter Name="newBaseSequenceNumber" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="reservation" Type="System.IO.Log.ReservationCollection" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="24760-361">Список фрагментов массива байтов, которые будут сцеплены и добавлены в качестве записи.</span><span class="sxs-lookup"><span data-stu-id="24760-361">A list of byte array segments that will be concatenated and appended as the record.</span></span></param>
        <param name="newBaseSequenceNumber"><span data-ttu-id="24760-362">Новый базовый порядковый номер.</span><span class="sxs-lookup"><span data-stu-id="24760-362">The new base sequence number.</span></span> <span data-ttu-id="24760-363">Заданный порядковый номер должен быть больше или равен текущему базовому порядковому номеру.</span><span class="sxs-lookup"><span data-stu-id="24760-363">The specified sequence number must be greater than or equal to the current base sequence number.</span></span></param>
        <param name="reservation"><span data-ttu-id="24760-364">Коллекция <see cref="T:System.IO.Log.ReservationCollection" />, содержащая резервирование, которое следует использовать для данной области перезапуска.</span><span class="sxs-lookup"><span data-stu-id="24760-364">A <see cref="T:System.IO.Log.ReservationCollection" /> that contains the reservation that should be used for this restart area.</span></span></param>
        <param name="callback"><span data-ttu-id="24760-365">Необязательный асинхронный обратный вызов по завершении записи в области перезапуска.</span><span class="sxs-lookup"><span data-stu-id="24760-365">An optional asynchronous callback, to be called when the restart area write is complete.</span></span></param>
        <param name="state"><span data-ttu-id="24760-366">Предоставляемый пользователем объект, отличающий конкретный запрос на асинхронную запись в область перезапуска от других запросов.</span><span class="sxs-lookup"><span data-stu-id="24760-366">A user-provided object that distinguishes this particular asynchronous restart area write request from other requests.</span></span></param>
        <summary><span data-ttu-id="24760-367">При переопределении в производном классе начинает асинхронную операцию записи области перезапуска, используя пространство, которое было ранее зарезервировано в последовательности.</span><span class="sxs-lookup"><span data-stu-id="24760-367">When overridden in a derived class, begins an asynchronous restart area write operation, using space previously reserved in the sequence.</span></span></summary>
        <returns><span data-ttu-id="24760-368">Объект <see cref="T:System.IAsyncResult" /> представляет асинхронную операцию записи в область перезапуска, которая может все еще быть отложена.</span><span class="sxs-lookup"><span data-stu-id="24760-368">An <see cref="T:System.IAsyncResult" /> that represents the asynchronous restart area write operation, which could still be pending.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24760-369">Чтобы обеспечить завершение операции записи в область перезапуска и освободить соответствующие ресурсы, необходимо передать значение <xref:System.IAsyncResult>, возвращенное этим методом, в метод <xref:System.IO.Log.IRecordSequence.EndWriteRestartArea%2A>.</span><span class="sxs-lookup"><span data-stu-id="24760-369">You should pass the <xref:System.IAsyncResult> returned by this method to the <xref:System.IO.Log.IRecordSequence.EndWriteRestartArea%2A> method to ensure that the restart area write operation has completed and resources can be freed appropriately.</span></span> <span data-ttu-id="24760-370">Если ошибка возникла при выполнении операции асинхронной записи в область перезапуска, исключение не будет создано до тех пор, пока метод <xref:System.IO.Log.IRecordSequence.EndWriteRestartArea%2A> не будет вызван со значением <xref:System.IAsyncResult>, возвращенным данным методом.</span><span class="sxs-lookup"><span data-stu-id="24760-370">If an error has occurred during an asynchronous restart area write operation, an exception is not thrown until the <xref:System.IO.Log.IRecordSequence.EndWriteRestartArea%2A> method is called with the <xref:System.IAsyncResult> returned by this method.</span></span>  
  
 <span data-ttu-id="24760-371">Данные, содержащиеся в параметре `data`, будут сцеплены в единый массив байтов для добавления в качестве записи.</span><span class="sxs-lookup"><span data-stu-id="24760-371">Data contained in the `data` parameter will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="24760-372">Однако не делается допущение об обратном разделении данных на фрагменты массива при чтении записи.</span><span class="sxs-lookup"><span data-stu-id="24760-372">However, no provision is made for splitting data back into array segments when the record is read.</span></span>  
  
 <span data-ttu-id="24760-373">При успешном выполнении операции базовый порядковый номер обновляется.</span><span class="sxs-lookup"><span data-stu-id="24760-373">When the operation successfully completes, the base sequence number has been updated.</span></span> <span data-ttu-id="24760-374">Все записи журнала с порядковыми номерами меньшими, чем новый базовый порядковый номер, недоступны.</span><span class="sxs-lookup"><span data-stu-id="24760-374">All log records with sequence numbers less than the new base sequence number are inaccessible.</span></span>  
  
 <span data-ttu-id="24760-375">Если задано <xref:System.IO.Log.ReservationCollection>, записанная область перезапуска будет занимать место, ранее зарезервированное с помощью содержащегося в коллекции резервирования.</span><span class="sxs-lookup"><span data-stu-id="24760-375">If a <xref:System.IO.Log.ReservationCollection> is specified, the written restart area will consume space that has been previously reserved, using a reservation contained in the collection.</span></span> <span data-ttu-id="24760-376">Если метод завершается успешно, будет занята минимальная область резервирования, в которой поместятся данные, а эта область резервирования будет удалена из коллекции.</span><span class="sxs-lookup"><span data-stu-id="24760-376">If the method succeeds, it will consume the smallest reservation that can hold the data, and that reservation will be removed from the collection.</span></span>  
  
 <span data-ttu-id="24760-377">Если последовательность записей была удалена, или если передается неверный аргумент, исключения создаются немедленно, в пределах данной операции.</span><span class="sxs-lookup"><span data-stu-id="24760-377">If a record sequence has been disposed of, or if you pass an invalid argument, exceptions are thrown immediately within this operation.</span></span> <span data-ttu-id="24760-378">Ошибки, возникшие при выполнении запроса асинхронного добавления, например ошибка диска в процессе запроса ввода-вывода, приводят к созданию исключений при вызове метода <xref:System.IO.Log.IRecordSequence.EndWriteRestartArea%2A>.</span><span class="sxs-lookup"><span data-stu-id="24760-378">Errors that occurred during an asynchronous append request, for example, a disk failure during the I/O request, will result in exceptions being thrown when the <xref:System.IO.Log.IRecordSequence.EndWriteRestartArea%2A> method is called.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="24760-379">Один или несколько аргументов являются недопустимыми.</span><span class="sxs-lookup"><span data-stu-id="24760-379">One or more of the arguments is invalid.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="24760-380">При записи в область перезапуска произошла ошибка ввода-вывода.</span><span class="sxs-lookup"><span data-stu-id="24760-380">An I/O error occurred while writing the restart area.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="24760-381">Последовательности записей не удалось выделить достаточно свободного пространства для новой записи.</span><span class="sxs-lookup"><span data-stu-id="24760-381">The record sequence could not make enough free space to contain the new record.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="24760-382">Метод был вызван после удаления последовательности.</span><span class="sxs-lookup"><span data-stu-id="24760-382">The method was called after the sequence has been disposed of.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateReservationCollection">
      <MemberSignature Language="C#" Value="public System.IO.Log.ReservationCollection CreateReservationCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.Log.ReservationCollection CreateReservationCollection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.IRecordSequence.CreateReservationCollection" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateReservationCollection () As ReservationCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Log::ReservationCollection ^ CreateReservationCollection();" />
      <MemberSignature Language="F#" Value="abstract member CreateReservationCollection : unit -&gt; System.IO.Log.ReservationCollection" Usage="iRecordSequence.CreateReservationCollection " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.ReservationCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="24760-383">При переопределении в производном классе создает новый объект <see cref="T:System.IO.Log.ReservationCollection" />.</span><span class="sxs-lookup"><span data-stu-id="24760-383">When overridden in a derived class, creates a new <see cref="T:System.IO.Log.ReservationCollection" />.</span></span></summary>
        <returns><span data-ttu-id="24760-384">Вновь созданный <see cref="T:System.IO.Log.ReservationCollection" />.</span><span class="sxs-lookup"><span data-stu-id="24760-384">The newly created <see cref="T:System.IO.Log.ReservationCollection" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="24760-385">Метод был вызван после удаления последовательности.</span><span class="sxs-lookup"><span data-stu-id="24760-385">The method was called after the sequence has been disposed of.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EndAppend">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber EndAppend (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber EndAppend(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.IRecordSequence.EndAppend(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndAppend (result As IAsyncResult) As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Log::SequenceNumber EndAppend(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndAppend : IAsyncResult -&gt; System.IO.Log.SequenceNumber" Usage="iRecordSequence.EndAppend result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="24760-386">Ссылка на невыполненный асинхронный запрос ввода-вывода.</span><span class="sxs-lookup"><span data-stu-id="24760-386">A reference to the outstanding asynchronous I/O request.</span></span></param>
        <summary><span data-ttu-id="24760-387">При переопределении в производном классе завершает асинхронную операцию добавления.</span><span class="sxs-lookup"><span data-stu-id="24760-387">When overridden in a derived class, ends an asynchronous append operation.</span></span></summary>
        <returns><span data-ttu-id="24760-388">Порядковый номер добавленной в журнал записи.</span><span class="sxs-lookup"><span data-stu-id="24760-388">The sequence number of the appended log record.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24760-389">Этот метод блокируется до завершения операции ввода-вывода.</span><span class="sxs-lookup"><span data-stu-id="24760-389">This method blocks until the I/O operation has completed.</span></span> <span data-ttu-id="24760-390">Ошибки, возникающие при выполнении запроса асинхронной записи, например ошибка диска в процессе запроса ввода-вывода, отображаются при вызове <xref:System.IO.Log.IRecordSequence.EndAppend%2A>.</span><span class="sxs-lookup"><span data-stu-id="24760-390">Errors that occur during an asynchronous write request, such as a disk failure during the I/O request, become visible when <xref:System.IO.Log.IRecordSequence.EndAppend%2A> is called.</span></span>  
  
 <span data-ttu-id="24760-391">Этот метод должен вызываться ровно по одному разу для каждого объекта <xref:System.IAsyncResult>, возвращенного методом <xref:System.IO.Log.IRecordSequence.BeginAppend%2A>.</span><span class="sxs-lookup"><span data-stu-id="24760-391">This method must be called exactly once on every <xref:System.IAsyncResult> returned by the <xref:System.IO.Log.IRecordSequence.BeginAppend%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="24760-392">Один или несколько аргументов являются недопустимыми.</span><span class="sxs-lookup"><span data-stu-id="24760-392">One or more of the arguments is invalid.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="24760-393">Метод был вызван после удаления последовательности.</span><span class="sxs-lookup"><span data-stu-id="24760-393">The method was called after the sequence has been disposed of.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EndFlush">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber EndFlush (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber EndFlush(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.IRecordSequence.EndFlush(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndFlush (result As IAsyncResult) As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Log::SequenceNumber EndFlush(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndFlush : IAsyncResult -&gt; System.IO.Log.SequenceNumber" Usage="iRecordSequence.EndFlush result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="24760-394">Ссылка на невыполненный асинхронный запрос ввода-вывода.</span><span class="sxs-lookup"><span data-stu-id="24760-394">A reference to the outstanding asynchronous I/O request.</span></span></param>
        <summary><span data-ttu-id="24760-395">При переопределении в производном классе завершает асинхронную операцию очистки.</span><span class="sxs-lookup"><span data-stu-id="24760-395">When overridden in a derived class, ends an asynchronous flush operation.</span></span></summary>
        <returns><span data-ttu-id="24760-396">Порядковый номер последней записи, которая была записана.</span><span class="sxs-lookup"><span data-stu-id="24760-396">The sequence number of the last record written.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24760-397">Этот метод блокируется до завершения операции ввода-вывода.</span><span class="sxs-lookup"><span data-stu-id="24760-397">This method blocks until the I/O operation has completed.</span></span> <span data-ttu-id="24760-398">Ошибки, возникающие при выполнении запроса асинхронной очистки, например ошибка диска в процессе запроса ввода-вывода, отображаются при вызове <xref:System.IO.Log.IRecordSequence.EndFlush%2A>.</span><span class="sxs-lookup"><span data-stu-id="24760-398">Errors that occur during an asynchronous flush request, such as a disk failure during the I/O request, become visible when <xref:System.IO.Log.IRecordSequence.EndFlush%2A> is called.</span></span>  
  
 <span data-ttu-id="24760-399">Этот метод должен вызываться ровно по одному разу для каждого объекта <xref:System.IAsyncResult>, возвращенного методом <xref:System.IO.Log.IRecordSequence.BeginFlush%2A>.</span><span class="sxs-lookup"><span data-stu-id="24760-399">This method must be called exactly once on every <xref:System.IAsyncResult> returned by the <xref:System.IO.Log.IRecordSequence.BeginFlush%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="24760-400">Один или несколько аргументов являются недопустимыми.</span><span class="sxs-lookup"><span data-stu-id="24760-400">One or more of the arguments is invalid.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="24760-401">Метод был вызван после удаления последовательности.</span><span class="sxs-lookup"><span data-stu-id="24760-401">The method was called after the sequence has been disposed of.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EndReserveAndAppend">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber EndReserveAndAppend (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber EndReserveAndAppend(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.IRecordSequence.EndReserveAndAppend(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndReserveAndAppend (result As IAsyncResult) As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Log::SequenceNumber EndReserveAndAppend(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndReserveAndAppend : IAsyncResult -&gt; System.IO.Log.SequenceNumber" Usage="iRecordSequence.EndReserveAndAppend result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="24760-402">Ссылка на невыполненный асинхронный запрос ввода-вывода.</span><span class="sxs-lookup"><span data-stu-id="24760-402">A reference to the outstanding asynchronous I/O request.</span></span></param>
        <summary><span data-ttu-id="24760-403">При переопределении в производном классе завершает асинхронную операцию резервирования и добавления.</span><span class="sxs-lookup"><span data-stu-id="24760-403">When overridden in a derived class, ends an asynchronous reserve and append operation.</span></span></summary>
        <returns><span data-ttu-id="24760-404">Порядковый номер добавленной в журнал записи.</span><span class="sxs-lookup"><span data-stu-id="24760-404">The sequence number of the appended log record.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24760-405">Этот метод блокируется до завершения операции ввода-вывода.</span><span class="sxs-lookup"><span data-stu-id="24760-405">This method blocks until the I/O operation has completed.</span></span> <span data-ttu-id="24760-406">Ошибки, возникающие при выполнении запроса асинхронной записи, например ошибка диска в процессе запроса ввода-вывода, отображаются при вызове <xref:System.IO.Log.IRecordSequence.EndReserveAndAppend%2A>.</span><span class="sxs-lookup"><span data-stu-id="24760-406">Errors that occur during an asynchronous write request, such as a disk failure during the I/O request, become visible when <xref:System.IO.Log.IRecordSequence.EndReserveAndAppend%2A> is called.</span></span>  
  
 <span data-ttu-id="24760-407">Этот метод должен вызываться ровно по одному разу для каждого объекта <xref:System.IAsyncResult>, возвращенного методом <xref:System.IO.Log.IRecordSequence.BeginReserveAndAppend%2A>.</span><span class="sxs-lookup"><span data-stu-id="24760-407">This method must be called exactly once on every <xref:System.IAsyncResult> returned by the <xref:System.IO.Log.IRecordSequence.BeginReserveAndAppend%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="24760-408">Один или несколько аргументов являются недопустимыми.</span><span class="sxs-lookup"><span data-stu-id="24760-408">One or more of the arguments is invalid.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="24760-409">Метод был вызван после удаления последовательности.</span><span class="sxs-lookup"><span data-stu-id="24760-409">The method was called after the sequence has been disposed of.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EndWriteRestartArea">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber EndWriteRestartArea (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber EndWriteRestartArea(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.IRecordSequence.EndWriteRestartArea(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndWriteRestartArea (result As IAsyncResult) As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Log::SequenceNumber EndWriteRestartArea(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndWriteRestartArea : IAsyncResult -&gt; System.IO.Log.SequenceNumber" Usage="iRecordSequence.EndWriteRestartArea result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="24760-410">Ссылка на невыполненный асинхронный запрос ввода-вывода.</span><span class="sxs-lookup"><span data-stu-id="24760-410">A reference to the outstanding asynchronous I/O request.</span></span></param>
        <summary><span data-ttu-id="24760-411">При переопределении в производном классе завершает асинхронную операцию записи области перезапуска.</span><span class="sxs-lookup"><span data-stu-id="24760-411">When overridden in a derived class, ends an asynchronous restart area write operation.</span></span></summary>
        <returns><span data-ttu-id="24760-412">Порядковый номер записанной в журнал записи.</span><span class="sxs-lookup"><span data-stu-id="24760-412">The sequence number of the written log record.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24760-413">Этот метод блокируется до завершения операции ввода-вывода.</span><span class="sxs-lookup"><span data-stu-id="24760-413">This method blocks until the I/O operation has completed.</span></span> <span data-ttu-id="24760-414">Ошибки, возникающие при выполнении запроса асинхронной записи, например ошибка диска в процессе запроса ввода-вывода, отображаются при вызове <xref:System.IO.Log.IRecordSequence.EndWriteRestartArea%2A>.</span><span class="sxs-lookup"><span data-stu-id="24760-414">Errors that occur during an asynchronous write request, such as a disk failure during the I/O request, become visible when <xref:System.IO.Log.IRecordSequence.EndWriteRestartArea%2A> is called.</span></span>  
  
 <span data-ttu-id="24760-415">Этот метод должен вызываться ровно по одному разу для каждого объекта <xref:System.IAsyncResult>, возвращенного методом <xref:System.IO.Log.IRecordSequence.BeginWriteRestartArea%2A>.</span><span class="sxs-lookup"><span data-stu-id="24760-415">This method must be called exactly once on every <xref:System.IAsyncResult> returned by the <xref:System.IO.Log.IRecordSequence.BeginWriteRestartArea%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="24760-416">Один или несколько аргументов являются недопустимыми.</span><span class="sxs-lookup"><span data-stu-id="24760-416">One or more of the arguments is invalid.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="24760-417">Метод был вызван после удаления последовательности.</span><span class="sxs-lookup"><span data-stu-id="24760-417">The method was called after the sequence has been disposed of.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Flush">
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="24760-418">При переопределении в производном классе приводит к регистрации всех добавленных записей.</span><span class="sxs-lookup"><span data-stu-id="24760-418">When overridden in a derived class, causes appended records to be written.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.IRecordSequence.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Function Flush () As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Log::SequenceNumber Flush();" />
      <MemberSignature Language="F#" Value="abstract member Flush : unit -&gt; System.IO.Log.SequenceNumber" Usage="iRecordSequence.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="24760-419">При переопределении в производном классе обеспечивает регистрацию всех добавленных записей.</span><span class="sxs-lookup"><span data-stu-id="24760-419">When overridden in a derived class, ensures that all appended records have been written.</span></span></summary>
        <returns><span data-ttu-id="24760-420">Порядковый номер последней записи, которая была записана.</span><span class="sxs-lookup"><span data-stu-id="24760-420">The sequence number of the last record written.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24760-421">Вызов этого метода гарантирует выполнение устойчивых записей, добавленных в последовательность <xref:System.IO.Log.IRecordSequence>.</span><span class="sxs-lookup"><span data-stu-id="24760-421">Calling this method ensures that all records that have been appended to the <xref:System.IO.Log.IRecordSequence> have been durably written.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="24760-422">При очистке данных произошла ошибка ввода-вывода.</span><span class="sxs-lookup"><span data-stu-id="24760-422">An I/O error occurred while flushing the data.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="24760-423">Метод был вызван после удаления последовательности.</span><span class="sxs-lookup"><span data-stu-id="24760-423">The method was called after the sequence has been disposed of.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber Flush (System.IO.Log.SequenceNumber sequenceNumber);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber Flush(valuetype System.IO.Log.SequenceNumber sequenceNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.IRecordSequence.Flush(System.IO.Log.SequenceNumber)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Log::SequenceNumber Flush(System::IO::Log::SequenceNumber sequenceNumber);" />
      <MemberSignature Language="F#" Value="abstract member Flush : System.IO.Log.SequenceNumber -&gt; System.IO.Log.SequenceNumber" Usage="iRecordSequence.Flush sequenceNumber" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sequenceNumber" Type="System.IO.Log.SequenceNumber" />
      </Parameters>
      <Docs>
        <param name="sequenceNumber"><span data-ttu-id="24760-424">Порядковый номер последней записи, которую требуется записать.</span><span class="sxs-lookup"><span data-stu-id="24760-424">The sequence number of the latest record that must be written.</span></span> <span data-ttu-id="24760-425">Если этот номер <see cref="T:System.IO.Log.SequenceNumber" /> недопустим, необходимо записать все записи.</span><span class="sxs-lookup"><span data-stu-id="24760-425">If this <see cref="T:System.IO.Log.SequenceNumber" /> is invalid, then all records must be written.</span></span></param>
        <summary><span data-ttu-id="24760-426">При переопределении в производном классе обеспечивает устойчивую запись всех добавленных записей до указанного порядкового номера включительно.</span><span class="sxs-lookup"><span data-stu-id="24760-426">When overridden in a derived class, ensures that all appended records up to and including the record with the specified sequence number have been durably written.</span></span></summary>
        <returns><span data-ttu-id="24760-427">Порядковый номер последней записи, которая была записана.</span><span class="sxs-lookup"><span data-stu-id="24760-427">The sequence number of the last record written.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24760-428">Вызов этого метода обеспечивает устойчивую запись всех записей до указанного порядкового номера включительно.</span><span class="sxs-lookup"><span data-stu-id="24760-428">Calling this method ensures that all records with sequence numbers up to and including the specified sequence number have been durably written.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="24760-429">Один или несколько аргументов являются недопустимыми.</span><span class="sxs-lookup"><span data-stu-id="24760-429">One or more of the arguments is invalid.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="24760-430">При очистке данных произошла ошибка ввода-вывода.</span><span class="sxs-lookup"><span data-stu-id="24760-430">An I/O error occurred while flushing the data.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="24760-431">Метод был вызван после удаления последовательности.</span><span class="sxs-lookup"><span data-stu-id="24760-431">The method was called after the sequence has been disposed of.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="LastSequenceNumber">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber LastSequenceNumber { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.Log.SequenceNumber LastSequenceNumber" />
      <MemberSignature Language="DocId" Value="P:System.IO.Log.IRecordSequence.LastSequenceNumber" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LastSequenceNumber As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Log::SequenceNumber LastSequenceNumber { System::IO::Log::SequenceNumber get(); };" />
      <MemberSignature Language="F#" Value="member this.LastSequenceNumber : System.IO.Log.SequenceNumber" Usage="System.IO.Log.IRecordSequence.LastSequenceNumber" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="24760-432">При переопределении в производном классе возвращает порядковый номер, превышающий последнюю добавленную запись.</span><span class="sxs-lookup"><span data-stu-id="24760-432">When overridden in a derived class, gets the sequence number which is greater than the last record appended.</span></span></summary>
        <value><span data-ttu-id="24760-433">Порядковый номер, превышающий последнюю добавленную запись.</span><span class="sxs-lookup"><span data-stu-id="24760-433">A sequence number which is greater than the last record appended.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24760-434">Данное свойство содержит порядковый номер, который гарантированно больше, чем порядковый номер последней добавленной записи.</span><span class="sxs-lookup"><span data-stu-id="24760-434">This property contains a sequence number that is guaranteed to be larger than the sequence number of the last appended record.</span></span> <span data-ttu-id="24760-435">Допустимые порядковые номера больше или равны <xref:System.IO.Log.IRecordSequence.BaseSequenceNumber%2A> и меньше <xref:System.IO.Log.IRecordSequence.LastSequenceNumber%2A>.</span><span class="sxs-lookup"><span data-stu-id="24760-435">Valid sequence numbers are greater than or equal to <xref:System.IO.Log.IRecordSequence.BaseSequenceNumber%2A> and less than <xref:System.IO.Log.IRecordSequence.LastSequenceNumber%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="24760-436">При использовании экземпляра <xref:System.IO.Log.LogRecordSequence> значение <xref:System.IO.Log.LogRecordSequence.LastSequenceNumber%2A> может стать устаревшим, пока записи не помещены в журнал.</span><span class="sxs-lookup"><span data-stu-id="24760-436">When using a <xref:System.IO.Log.LogRecordSequence> instance, the <xref:System.IO.Log.LogRecordSequence.LastSequenceNumber%2A> value can become out of date until records are flushed to the log.</span></span> <span data-ttu-id="24760-437">Дополнительные <xref:System.IO.Log.IRecordSequence.Flush%2A> сведения <xref:System.IO.Log.RecordAppendOptions> о сбросе записей см. в разделе и.</span><span class="sxs-lookup"><span data-stu-id="24760-437">See <xref:System.IO.Log.IRecordSequence.Flush%2A> and <xref:System.IO.Log.RecordAppendOptions> for more information on flushing records.</span></span> 
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="24760-438">Обращение к свойству произошло после удаления последовательности.</span><span class="sxs-lookup"><span data-stu-id="24760-438">The property was accessed after the sequence has been disposed of.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MaximumRecordLength">
      <MemberSignature Language="C#" Value="public long MaximumRecordLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 MaximumRecordLength" />
      <MemberSignature Language="DocId" Value="P:System.IO.Log.IRecordSequence.MaximumRecordLength" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MaximumRecordLength As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long MaximumRecordLength { long get(); };" />
      <MemberSignature Language="F#" Value="member this.MaximumRecordLength : int64" Usage="System.IO.Log.IRecordSequence.MaximumRecordLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="24760-439">При переопределении в производном классе возвращает размер в байтах наибольшей записи, которую можно добавить или прочитать из последовательности.</span><span class="sxs-lookup"><span data-stu-id="24760-439">When overridden in a derived class, gets the size of the largest record that can be appended to or read from this sequence, in bytes.</span></span></summary>
        <value><span data-ttu-id="24760-440">Размер в байтах наибольшей записи, которую можно добавить или прочитать из последовательности.</span><span class="sxs-lookup"><span data-stu-id="24760-440">The size of the largest record that can be appended to or read from this sequence, in bytes.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="24760-441">Обращение к свойству произошло после удаления последовательности.</span><span class="sxs-lookup"><span data-stu-id="24760-441">The property was accessed after the sequence has been disposed of.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadLogRecords">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.Log.LogRecord&gt; ReadLogRecords (System.IO.Log.SequenceNumber start, System.IO.Log.LogRecordEnumeratorType logRecordEnum);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.Log.LogRecord&gt; ReadLogRecords(valuetype System.IO.Log.SequenceNumber start, valuetype System.IO.Log.LogRecordEnumeratorType logRecordEnum) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.IRecordSequence.ReadLogRecords(System.IO.Log.SequenceNumber,System.IO.Log.LogRecordEnumeratorType)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadLogRecords (start As SequenceNumber, logRecordEnum As LogRecordEnumeratorType) As IEnumerable(Of LogRecord)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::Log::LogRecord ^&gt; ^ ReadLogRecords(System::IO::Log::SequenceNumber start, System::IO::Log::LogRecordEnumeratorType logRecordEnum);" />
      <MemberSignature Language="F#" Value="abstract member ReadLogRecords : System.IO.Log.SequenceNumber * System.IO.Log.LogRecordEnumeratorType -&gt; seq&lt;System.IO.Log.LogRecord&gt;" Usage="iRecordSequence.ReadLogRecords (start, logRecordEnum)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.Log.LogRecord&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="start" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="logRecordEnum" Type="System.IO.Log.LogRecordEnumeratorType" />
      </Parameters>
      <Docs>
        <param name="start"><span data-ttu-id="24760-442">Порядковый номер первой записи, с которой начинается чтение.</span><span class="sxs-lookup"><span data-stu-id="24760-442">The sequence number of the first record where the reading starts.</span></span></param>
        <param name="logRecordEnum"><span data-ttu-id="24760-443">Допустимое значение <see cref="T:System.IO.Log.LogRecordEnumeratorType" />, указывающее способ (вперед или назад), которым записи должны считываться из <see cref="T:System.IO.Log.LogRecordSequence" />.</span><span class="sxs-lookup"><span data-stu-id="24760-443">A valid <see cref="T:System.IO.Log.LogRecordEnumeratorType" /> value that specifies the manner (that is, forward or backward) in which records should be read from a <see cref="T:System.IO.Log.LogRecordSequence" />.</span></span></param>
        <summary><span data-ttu-id="24760-444">При переопределении в производном классе возвращает перечислимую коллекцию записей в последовательности.</span><span class="sxs-lookup"><span data-stu-id="24760-444">When overridden in a derived class, returns an enumerable collection of records in the sequence.</span></span></summary>
        <returns><span data-ttu-id="24760-445">Перечисляемая коллекция записей в последовательности.</span><span class="sxs-lookup"><span data-stu-id="24760-445">An enumerable collection of records in the sequence.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24760-446">При переопределении в производном классе возвращает перечислимую коллекцию записей в последовательности.</span><span class="sxs-lookup"><span data-stu-id="24760-446">When overridden in a derived class, returns an enumerable collection of records in the sequence.</span></span> <span data-ttu-id="24760-447">Порядок перечисленных записей зависит от значения параметра `logRecordEnum`.</span><span class="sxs-lookup"><span data-stu-id="24760-447">The order of the enumerated records depends on the value of the `logRecordEnum` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="24760-448">В этом образце демонстрируется использование метода <xref:System.IO.Log.IRecordSequence.ReadLogRecords%2A>.</span><span class="sxs-lookup"><span data-stu-id="24760-448">This sample demonstrates the use of the <xref:System.IO.Log.IRecordSequence.ReadLogRecords%2A> method.</span></span>  
  
```csharp  
using System;  
 using System.IO;  
 using System.IO.Log;  
  
 class ReadRecordsSample  
 {  
     static SequenceNumber AppendRecord(IRecordSequence sequence,  
                                        string message,  
                                        SequenceNumber user,  
                                        SequenceNumber previous)  
     {  
         MemoryStream data = new MemoryStream();  
         BinaryWriter writer = new BinaryWriter(data);  
         writer.Write(message);  
  
         ArraySegment<byte>[] segments;  
         segments = new ArraySegment<byte>[1];  
         segments[0] = new ArraySegment(data.GetBuffer(),  
                                        0,  
                                        Data.Length);  
  
         return sequence.Append(segments,  
                                user,  
                                previous,  
                                WriteFlags.None);  
     }  
  
     public static void Main(string[] args)  
     {  
         IRecordSequence sequence;  
         sequence = new FileIRecordSequence(args[0]);  
  
         SequenceNumber a, b, c, d;  
  
         a = AppendRecord(sequence,  
                          "This is record A",  
                          SequenceNumber.Invalid,  
                          SequenceNumber.Invalid);  
         Console.WriteLine("Record A has sequence number System.IO.Log", a);  
  
         b = AppendRecord(sequence,  
                          "This is record B",  
                          a,  
                          a);  
         Console.WriteLine("Record B has sequence number System.IO.Log", b);  
  
         c = AppendRecord(sequence,  
                          "This is record C",  
                          a,  
                          a);  
         Console.WriteLine("Record C has sequence number System.IO.Log", c);  
  
         d = AppendRecord(sequence,  
                          "This is record D",  
                          b,  
                          c);  
         Console.WriteLine("Record D has sequence number System.IO.Log", d);  
  
         foreach(LogRecord record in  
                 sequence.ReadLogRecords(a, ReadDirection.Forward))  
         {  
             BinaryReader reader = new BinaryReader(record.Data);  
             Console.WriteLine("System.IO.Log: T:System.IO.Log.IRecordSequence",  
                               record.SequenceNumber,  
                               reader.ReadString());  
         }  
  
         foreach(LogRecord record in  
                 sequence.ReadLogRecords(d, ReadDirection.User))  
         {  
             BinaryReader reader = new BinaryReader(record.Data);  
             Console.WriteLine("System.IO.Log: T:System.IO.Log.IRecordSequence",  
                               record.SequenceNumber,  
                               reader.ReadString());  
         }  
  
         foreach(LogRecord record in  
                 sequence.ReadLogRecords(d, ReadDirection.Previous))  
         {  
             BinaryReader reader = new BinaryReader(record.Data);  
             Console.WriteLine("System.IO.Log: T:System.IO.Log.IRecordSequence",  
                               record.SequenceNumber,  
                               reader.ReadString());  
         }  
     }  
       }  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="24760-449">Один или несколько аргументов являются недопустимыми.</span><span class="sxs-lookup"><span data-stu-id="24760-449">One or more of the arguments is invalid.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="24760-450">При чтении записи произошла ошибка ввода-вывода.</span><span class="sxs-lookup"><span data-stu-id="24760-450">An I/O error occurred while reading the record.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="24760-451">Метод был вызван после удаления последовательности.</span><span class="sxs-lookup"><span data-stu-id="24760-451">The method was called after the sequence has been disposed of.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadRestartAreas">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.Log.LogRecord&gt; ReadRestartAreas ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.Log.LogRecord&gt; ReadRestartAreas() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.IRecordSequence.ReadRestartAreas" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadRestartAreas () As IEnumerable(Of LogRecord)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::IO::Log::LogRecord ^&gt; ^ ReadRestartAreas();" />
      <MemberSignature Language="F#" Value="abstract member ReadRestartAreas : unit -&gt; seq&lt;System.IO.Log.LogRecord&gt;" Usage="iRecordSequence.ReadRestartAreas " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.Log.LogRecord&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="24760-452">При переопределении в производном классе возвращает перечисляемую коллекцию областей перезапуска в последовательности.</span><span class="sxs-lookup"><span data-stu-id="24760-452">When overridden in a derived class, returns an enumerable collection of the restart areas in the sequence.</span></span></summary>
        <returns><span data-ttu-id="24760-453">Перечисляемая коллекция областей перезапуска в последовательности.</span><span class="sxs-lookup"><span data-stu-id="24760-453">An enumerable collection of the restart areas in the sequence.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24760-454">Области перезапуска перечислены в обратном порядке их номеров, т.е. от самого высокого порядкового номера до самого низкого.</span><span class="sxs-lookup"><span data-stu-id="24760-454">The restart areas are enumerated in reverse sequence number order, that is, from the highest sequence number to the lowest sequence number.</span></span> <span data-ttu-id="24760-455">Выполняется перечисление только областей перезапуска между последним и базовым порядковым номером.</span><span class="sxs-lookup"><span data-stu-id="24760-455">Only restart areas with sequence numbers between the last sequence number and the base sequence number are enumerated.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="24760-456">В случае повреждения области журнала, содержащей свойство <xref:System.IO.Log.IRecordSequence.BaseSequenceNumber%2A>, этот метод может создать исключение <xref:System.IO.IOException> с сообщением об ошибке "Не удалось выполнить запрос, так как возникла неожиданная ошибка ввода-вывода.</span><span class="sxs-lookup"><span data-stu-id="24760-456">If the log extent containing the <xref:System.IO.Log.IRecordSequence.BaseSequenceNumber%2A> becomes corrupted, this method can throw an <xref:System.IO.IOException> with the error message "The request could not be performed because of an unexpected I/O exception.</span></span> <span data-ttu-id="24760-457">Возвращен код ошибки: '80070026'".</span><span class="sxs-lookup"><span data-stu-id="24760-457">The following error code was returned: '80070026'".</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="24760-458">Один или несколько аргументов являются недопустимыми.</span><span class="sxs-lookup"><span data-stu-id="24760-458">One or more of the arguments is invalid.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="24760-459">При чтении записи произошла ошибка ввода-вывода.</span><span class="sxs-lookup"><span data-stu-id="24760-459">An I/O error occurred while reading the record.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="24760-460">Метод был вызван после удаления последовательности.</span><span class="sxs-lookup"><span data-stu-id="24760-460">The method was called after the sequence has been disposed of.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ReserveAndAppend">
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="24760-461">При переопределении в производном классе автоматически делает одно резервирование и добавляет запись в последовательность.</span><span class="sxs-lookup"><span data-stu-id="24760-461">When overridden in a derived class, automatically makes a single reservation and appends a record to the sequence.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReserveAndAppend">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber ReserveAndAppend (ArraySegment&lt;byte&gt; data, System.IO.Log.SequenceNumber nextUndoRecord, System.IO.Log.SequenceNumber previousRecord, System.IO.Log.RecordAppendOptions recordAppendOptions, System.IO.Log.ReservationCollection reservationCollection, params long[] reservations);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber ReserveAndAppend(valuetype System.ArraySegment`1&lt;unsigned int8&gt; data, valuetype System.IO.Log.SequenceNumber nextUndoRecord, valuetype System.IO.Log.SequenceNumber previousRecord, valuetype System.IO.Log.RecordAppendOptions recordAppendOptions, class System.IO.Log.ReservationCollection reservationCollection, int64[] reservations) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.IRecordSequence.ReserveAndAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Log::SequenceNumber ReserveAndAppend(ArraySegment&lt;System::Byte&gt; data, System::IO::Log::SequenceNumber nextUndoRecord, System::IO::Log::SequenceNumber previousRecord, System::IO::Log::RecordAppendOptions recordAppendOptions, System::IO::Log::ReservationCollection ^ reservationCollection, ... cli::array &lt;long&gt; ^ reservations);" />
      <MemberSignature Language="F#" Value="abstract member ReserveAndAppend : ArraySegment&lt;byte&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions * System.IO.Log.ReservationCollection * int64[] -&gt; System.IO.Log.SequenceNumber" Usage="iRecordSequence.ReserveAndAppend (data, nextUndoRecord, previousRecord, recordAppendOptions, reservationCollection, reservations)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.ArraySegment&lt;System.Byte&gt;" />
        <Parameter Name="nextUndoRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="previousRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="recordAppendOptions" Type="System.IO.Log.RecordAppendOptions" />
        <Parameter Name="reservationCollection" Type="System.IO.Log.ReservationCollection" />
        <Parameter Name="reservations" Type="System.Int64[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-3.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="24760-462">Список фрагментов массива байтов, которые будут сцеплены и добавлены в качестве записи.</span><span class="sxs-lookup"><span data-stu-id="24760-462">A list of byte array segments that will be concatenated and appended as the record.</span></span></param>
        <param name="nextUndoRecord"><span data-ttu-id="24760-463">Порядковый номер следующей записи в порядке, заданном пользователем.</span><span class="sxs-lookup"><span data-stu-id="24760-463">The sequence number of the next record in the user-specified order.</span></span></param>
        <param name="previousRecord"><span data-ttu-id="24760-464">Порядковый номер следующей записи в обратном порядке.</span><span class="sxs-lookup"><span data-stu-id="24760-464">The sequence number of the next record in Previous order.</span></span></param>
        <param name="recordAppendOptions"><span data-ttu-id="24760-465">Допустимое значение объекта <see cref="T:System.IO.Log.RecordAppendOptions" />, задающего, как должны записываться данные.</span><span class="sxs-lookup"><span data-stu-id="24760-465">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</span></span></param>
        <param name="reservationCollection"><span data-ttu-id="24760-466">Объект <see cref="T:System.IO.Log.ReservationCollection" />, содержащий коллекцию, в которой создается резервирование.</span><span class="sxs-lookup"><span data-stu-id="24760-466">A <see cref="T:System.IO.Log.ReservationCollection" /> that contains the collection to make reservations in.</span></span></param>
        <param name="reservations"><span data-ttu-id="24760-467">Размер необходимого резервирования (в байтах).</span><span class="sxs-lookup"><span data-stu-id="24760-467">The reservations to make, in bytes.</span></span></param>
        <summary><span data-ttu-id="24760-468">При переопределении в производном классе автоматически делает одно резервирование и добавляет запись в последовательность.</span><span class="sxs-lookup"><span data-stu-id="24760-468">When overridden in a derived class, automatically makes a single reservation and appends a record to the sequence.</span></span></summary>
        <returns><span data-ttu-id="24760-469">Порядковый номер добавленной в журнал записи.</span><span class="sxs-lookup"><span data-stu-id="24760-469">The sequence number of the appended log record.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24760-470">Данные, содержащиеся в параметре `data`, будут сцеплены в единый массив байтов для добавления в качестве записи.</span><span class="sxs-lookup"><span data-stu-id="24760-470">Data contained in the `data` parameter will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="24760-471">Однако не делается допущение об обратном разделении данных на фрагменты массива при чтении записи.</span><span class="sxs-lookup"><span data-stu-id="24760-471">However, no provision is made for splitting data back into array segments when the record is read.</span></span>  
  
 <span data-ttu-id="24760-472">Заданные резервирования добавляются в предоставленную коллекцию резервирования при помощи атомарной операции добавления записи.</span><span class="sxs-lookup"><span data-stu-id="24760-472">The specified reservations are added to the provided reservation collection in an atomic operation with a record append operation.</span></span> <span data-ttu-id="24760-473">Если выполнить добавление не удается, место не резервируется.</span><span class="sxs-lookup"><span data-stu-id="24760-473">If the append fails, no space is reserved.</span></span>  
  
 <span data-ttu-id="24760-474">Обычно этот метод может завершить работу до того, как запись будет записана.</span><span class="sxs-lookup"><span data-stu-id="24760-474">Normally, this method may complete before the record has been written.</span></span> <span data-ttu-id="24760-475">Чтобы запись точно была записана, либо укажите флаг <xref:System.IO.Log.RecordAppendOptions.ForceFlush> с помощью параметра `recordAppendOptions`, либо вызовите метод <xref:System.IO.Log.IRecordSequence.Flush%2A>.</span><span class="sxs-lookup"><span data-stu-id="24760-475">To ensure that a record has been written, either specify the <xref:System.IO.Log.RecordAppendOptions.ForceFlush> flag using the `recordAppendOptions` parameter, or call the <xref:System.IO.Log.IRecordSequence.Flush%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="24760-476">Один или несколько аргументов являются недопустимыми.</span><span class="sxs-lookup"><span data-stu-id="24760-476">One or more of the arguments is invalid.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="24760-477">При добавлении записи произошла ошибка ввода-вывода.</span><span class="sxs-lookup"><span data-stu-id="24760-477">An I/O error occurred while appending the record.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="24760-478">Последовательности записей не удалось выделить достаточно свободного пространства для новой записи или выполнить резервирование.</span><span class="sxs-lookup"><span data-stu-id="24760-478">The record sequence could not make enough free space to contain the new record, or to make the reservation.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="24760-479">Метод был вызван после удаления последовательности.</span><span class="sxs-lookup"><span data-stu-id="24760-479">The method was called after the sequence has been disposed of.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReserveAndAppend">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber ReserveAndAppend (System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; data, System.IO.Log.SequenceNumber nextUndoRecord, System.IO.Log.SequenceNumber previousRecord, System.IO.Log.RecordAppendOptions recordAppendOptions, System.IO.Log.ReservationCollection reservationCollection, params long[] reservations);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber ReserveAndAppend(class System.Collections.Generic.IList`1&lt;valuetype System.ArraySegment`1&lt;unsigned int8&gt;&gt; data, valuetype System.IO.Log.SequenceNumber nextUndoRecord, valuetype System.IO.Log.SequenceNumber previousRecord, valuetype System.IO.Log.RecordAppendOptions recordAppendOptions, class System.IO.Log.ReservationCollection reservationCollection, int64[] reservations) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.IRecordSequence.ReserveAndAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Log::SequenceNumber ReserveAndAppend(System::Collections::Generic::IList&lt;ArraySegment&lt;System::Byte&gt;&gt; ^ data, System::IO::Log::SequenceNumber nextUndoRecord, System::IO::Log::SequenceNumber previousRecord, System::IO::Log::RecordAppendOptions recordAppendOptions, System::IO::Log::ReservationCollection ^ reservationCollection, ... cli::array &lt;long&gt; ^ reservations);" />
      <MemberSignature Language="F#" Value="abstract member ReserveAndAppend : System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions * System.IO.Log.ReservationCollection * int64[] -&gt; System.IO.Log.SequenceNumber" Usage="iRecordSequence.ReserveAndAppend (data, nextUndoRecord, previousRecord, recordAppendOptions, reservationCollection, reservations)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.Generic.IList&lt;System.ArraySegment&lt;System.Byte&gt;&gt;" />
        <Parameter Name="nextUndoRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="previousRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="recordAppendOptions" Type="System.IO.Log.RecordAppendOptions" />
        <Parameter Name="reservationCollection" Type="System.IO.Log.ReservationCollection" />
        <Parameter Name="reservations" Type="System.Int64[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-3.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="24760-480">Список фрагментов массива байтов, которые будут сцеплены и добавлены в качестве записи.</span><span class="sxs-lookup"><span data-stu-id="24760-480">A list of byte array segments that will be concatenated and appended as the record.</span></span></param>
        <param name="nextUndoRecord"><span data-ttu-id="24760-481">Порядковый номер следующей записи в порядке, заданном пользователем.</span><span class="sxs-lookup"><span data-stu-id="24760-481">The sequence number of the next record in the user-specified order.</span></span></param>
        <param name="previousRecord"><span data-ttu-id="24760-482">Порядковый номер следующей записи в обратном порядке.</span><span class="sxs-lookup"><span data-stu-id="24760-482">The sequence number of the next record in Previous order.</span></span></param>
        <param name="recordAppendOptions"><span data-ttu-id="24760-483">Допустимое значение объекта <see cref="T:System.IO.Log.RecordAppendOptions" />, задающего, как должны записываться данные.</span><span class="sxs-lookup"><span data-stu-id="24760-483">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</span></span></param>
        <param name="reservationCollection"><span data-ttu-id="24760-484">Коллекция резервирования, в которой требуется сделать резервирования.</span><span class="sxs-lookup"><span data-stu-id="24760-484">The reservation collection to make reservations in.</span></span></param>
        <param name="reservations"><span data-ttu-id="24760-485">Размер необходимого резервирования (в байтах).</span><span class="sxs-lookup"><span data-stu-id="24760-485">The reservations to make, in bytes.</span></span></param>
        <summary><span data-ttu-id="24760-486">При переопределении в производном классе автоматически делает одно резервирование и добавляет запись в последовательность.</span><span class="sxs-lookup"><span data-stu-id="24760-486">When overridden in a derived class, automatically makes a single reservation and appends a record to the sequence.</span></span></summary>
        <returns><span data-ttu-id="24760-487">Порядковый номер добавленной в журнал записи.</span><span class="sxs-lookup"><span data-stu-id="24760-487">The sequence number of the appended log record.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24760-488">Данные, содержащиеся в параметре `data`, будут сцеплены в единый массив байтов для добавления в качестве записи.</span><span class="sxs-lookup"><span data-stu-id="24760-488">Data contained in the `data` parameter will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="24760-489">Однако не делается допущение об обратном разделении данных на фрагменты массива при чтении записи.</span><span class="sxs-lookup"><span data-stu-id="24760-489">However, no provision is made for splitting data back into array segments when the record is read.</span></span>  
  
 <span data-ttu-id="24760-490">Заданные резервирования добавляются в предоставленную коллекцию резервирования при помощи атомарной операции добавления записи.</span><span class="sxs-lookup"><span data-stu-id="24760-490">The specified reservations are added to the provided reservation collection in an atomic operation with a record append operation.</span></span> <span data-ttu-id="24760-491">Если выполнить добавление не удается, место не резервируется.</span><span class="sxs-lookup"><span data-stu-id="24760-491">If the append fails, no space is reserved.</span></span>  
  
 <span data-ttu-id="24760-492">Обычно этот метод может завершить работу до того, как запись будет записана.</span><span class="sxs-lookup"><span data-stu-id="24760-492">Normally, this method may complete before the record has been written.</span></span> <span data-ttu-id="24760-493">Чтобы запись точно была записана, либо укажите флаг <xref:System.IO.Log.RecordAppendOptions.ForceFlush> с помощью параметра `recordAppendOptions`, либо вызовите метод <xref:System.IO.Log.IRecordSequence.Flush%2A>.</span><span class="sxs-lookup"><span data-stu-id="24760-493">To ensure that a record has been written, either specify the <xref:System.IO.Log.RecordAppendOptions.ForceFlush> flag using the `recordAppendOptions` parameter, or call the <xref:System.IO.Log.IRecordSequence.Flush%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="24760-494">Один или несколько аргументов являются недопустимыми.</span><span class="sxs-lookup"><span data-stu-id="24760-494">One or more of the arguments is invalid.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="24760-495">При добавлении записи произошла ошибка ввода-вывода.</span><span class="sxs-lookup"><span data-stu-id="24760-495">An I/O error occurred while appending the record.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="24760-496">Последовательности записей не удалось выделить достаточно свободного пространства для новой записи или выполнить резервирование.</span><span class="sxs-lookup"><span data-stu-id="24760-496">The record sequence could not make enough free space to contain the new record, or to make the reservation.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="24760-497">Метод был вызван после удаления последовательности.</span><span class="sxs-lookup"><span data-stu-id="24760-497">The method was called after the sequence has been disposed of.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReservedBytes">
      <MemberSignature Language="C#" Value="public long ReservedBytes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 ReservedBytes" />
      <MemberSignature Language="DocId" Value="P:System.IO.Log.IRecordSequence.ReservedBytes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReservedBytes As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long ReservedBytes { long get(); };" />
      <MemberSignature Language="F#" Value="member this.ReservedBytes : int64" Usage="System.IO.Log.IRecordSequence.ReservedBytes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="24760-498">При переопределении в производном классе возвращает общее количество зарезервированных байтов.</span><span class="sxs-lookup"><span data-stu-id="24760-498">When overridden in a derived class, gets the total number of bytes that have been reserved.</span></span></summary>
        <value><span data-ttu-id="24760-499">Общий размер резервирований, созданных в последовательности записей.</span><span class="sxs-lookup"><span data-stu-id="24760-499">The total size of all reservations made in this record sequence.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="24760-500">Обращение к свойству произошло после удаления последовательности.</span><span class="sxs-lookup"><span data-stu-id="24760-500">The property was accessed after the sequence has been disposed of.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RestartSequenceNumber">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber RestartSequenceNumber { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.Log.SequenceNumber RestartSequenceNumber" />
      <MemberSignature Language="DocId" Value="P:System.IO.Log.IRecordSequence.RestartSequenceNumber" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RestartSequenceNumber As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Log::SequenceNumber RestartSequenceNumber { System::IO::Log::SequenceNumber get(); };" />
      <MemberSignature Language="F#" Value="member this.RestartSequenceNumber : System.IO.Log.SequenceNumber" Usage="System.IO.Log.IRecordSequence.RestartSequenceNumber" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="24760-501">При переопределении в производном классе возвращает порядковый номер последней записанной области перезапуска.</span><span class="sxs-lookup"><span data-stu-id="24760-501">When overridden in a derived class, gets the sequence number of the most recently written restart area.</span></span></summary>
        <value><span data-ttu-id="24760-502">Порядковый номер последней записанной области перезапуска.</span><span class="sxs-lookup"><span data-stu-id="24760-502">The sequence number of the most recently written restart area.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24760-503">Область перезапуска служит для временного хранения сведений, содержащих последнюю операцию контрольной точки клиента.</span><span class="sxs-lookup"><span data-stu-id="24760-503">A restart area is used to temporarily store information containing a client's last checkpoint operation.</span></span> <span data-ttu-id="24760-504">Если требуется выполнить восстановление, можно проанализировать область перезапуска, чтобы извлечь все данные с последней операции контрольной точки.</span><span class="sxs-lookup"><span data-stu-id="24760-504">When a recovery is necessary, you can parse the restart area to retrieve all the data from the last checkpoint operation.</span></span> <span data-ttu-id="24760-505">Эти данные инициализирует таблицу транзакций, таблицу "грязных страниц" и таблицу открытых файлов, чтобы их можно было использовать в процессе восстановления.</span><span class="sxs-lookup"><span data-stu-id="24760-505">This data initializes the transaction table, dirty pages table, and open file table so they can be used in the recovery process.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="24760-506">Обращение к свойству произошло после удаления последовательности.</span><span class="sxs-lookup"><span data-stu-id="24760-506">The property was accessed after the sequence has been disposed of.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RetryAppend">
      <MemberSignature Language="C#" Value="public bool RetryAppend { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RetryAppend" />
      <MemberSignature Language="DocId" Value="P:System.IO.Log.IRecordSequence.RetryAppend" />
      <MemberSignature Language="VB.NET" Value="Public Property RetryAppend As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RetryAppend { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.RetryAppend : bool with get, set" Usage="System.IO.Log.IRecordSequence.RetryAppend" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="24760-507">Возвращает или задает значение, указывающее, выполняется ли повторная автоматическая попытка добавления в случае заполнения журнала.</span><span class="sxs-lookup"><span data-stu-id="24760-507">Gets or sets a value indicating whether appends are automatically retried if the log is full.</span></span></summary>
        <value><span data-ttu-id="24760-508">Значение <see langword="true" />, если выполняется автоматическая повторная попытка добавления при заполнении журнала; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="24760-508"><see langword="true" /> if appends are automatically retried if the log is full; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="24760-509">Значение по умолчанию — <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="24760-509">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24760-510">Если значением данного свойства является `true` и происходит сбой вызова <xref:System.IO.Log.IRecordSequence.Append%2A> из-за недостатка места в последовательности, последовательность записей пытается освободить место и совершает повторную попытку добавления.</span><span class="sxs-lookup"><span data-stu-id="24760-510">If the value of this property is `true`, and an <xref:System.IO.Log.IRecordSequence.Append%2A> call fails because there is not enough space in the sequence, the record sequence will try to free space and retry the append.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="24760-511">Обращение к свойству произошло после удаления последовательности.</span><span class="sxs-lookup"><span data-stu-id="24760-511">The property was accessed after the sequence has been disposed of.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TailPinned">
      <MemberSignature Language="C#" Value="event EventHandler&lt;System.IO.Log.TailPinnedEventArgs&gt; TailPinned;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.IO.Log.TailPinnedEventArgs&gt; TailPinned" />
      <MemberSignature Language="DocId" Value="E:System.IO.Log.IRecordSequence.TailPinned" />
      <MemberSignature Language="VB.NET" Value="Event TailPinned As EventHandler(Of TailPinnedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::IO::Log::TailPinnedEventArgs ^&gt; ^ TailPinned;" />
      <MemberSignature Language="F#" Value="member this.TailPinned : EventHandler&lt;System.IO.Log.TailPinnedEventArgs&gt; " Usage="member this.TailPinned : System.EventHandler&lt;System.IO.Log.TailPinnedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.IO.Log.TailPinnedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="24760-512">Происходит, когда последовательность записей определяет завершающую часть, которую необходимо переместить вперед.</span><span class="sxs-lookup"><span data-stu-id="24760-512">Occurs when the record sequence determines that the tail must be moved forward.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24760-513">Это событие можно создать, когда в последовательности записей закончилось свободное пространство.</span><span class="sxs-lookup"><span data-stu-id="24760-513">You can fire this event when the record sequence has run out of space.</span></span> <span data-ttu-id="24760-514">При создании этого события завершающая часть последовательности (то есть базовый порядковый номер) перемещается вперед для освобождения места.</span><span class="sxs-lookup"><span data-stu-id="24760-514">When this event is fired, the tail of the sequence (that is, the base sequence number) is moved forward to free up space.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteRestartArea">
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="24760-515">При переопределении в производном классе записывает область перезапуска в последовательность <see cref="T:System.IO.Log.IRecordSequence" />.</span><span class="sxs-lookup"><span data-stu-id="24760-515">When overridden in a derived class, writes a restart area to the <see cref="T:System.IO.Log.IRecordSequence" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24760-516">Область перезапуска служит для временного хранения сведений, содержащих последнюю операцию контрольной точки клиента.</span><span class="sxs-lookup"><span data-stu-id="24760-516">A restart area is used to temporarily store information containing a client's last checkpoint operation.</span></span> <span data-ttu-id="24760-517">Если требуется выполнить восстановление, можно проанализировать область перезапуска, чтобы извлечь все данные с последней операции контрольной точки.</span><span class="sxs-lookup"><span data-stu-id="24760-517">When a recovery is necessary, you can parse the restart area to retrieve all the data from the last checkpoint operation.</span></span> <span data-ttu-id="24760-518">Эти данные инициализирует таблицу транзакций, таблицу "грязных страниц" и таблицу открытых файлов, чтобы их можно было использовать в процессе восстановления.</span><span class="sxs-lookup"><span data-stu-id="24760-518">This data initializes the transaction table, dirty pages table, and open file table so they can be used in the recovery process.</span></span> <span data-ttu-id="24760-519">Чтение области перезапуска возможно с помощью метода <xref:System.IO.Log.IRecordSequence.ReadRestartAreas%2A>.</span><span class="sxs-lookup"><span data-stu-id="24760-519">A restart area can be read using the <xref:System.IO.Log.IRecordSequence.ReadRestartAreas%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteRestartArea">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber WriteRestartArea (ArraySegment&lt;byte&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber WriteRestartArea(valuetype System.ArraySegment`1&lt;unsigned int8&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.IRecordSequence.WriteRestartArea(System.ArraySegment{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Function WriteRestartArea (data As ArraySegment(Of Byte)) As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Log::SequenceNumber WriteRestartArea(ArraySegment&lt;System::Byte&gt; data);" />
      <MemberSignature Language="F#" Value="abstract member WriteRestartArea : ArraySegment&lt;byte&gt; -&gt; System.IO.Log.SequenceNumber" Usage="iRecordSequence.WriteRestartArea data" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.ArraySegment&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="24760-520">Список фрагментов массива байтов, которые будут сцеплены и добавлены в качестве записи.</span><span class="sxs-lookup"><span data-stu-id="24760-520">A list of byte array segments that will be concatenated and appended as the record.</span></span></param>
        <summary><span data-ttu-id="24760-521">При переопределении в производном классе записывает область перезапуска в последовательность <see cref="T:System.IO.Log.IRecordSequence" />.</span><span class="sxs-lookup"><span data-stu-id="24760-521">When overridden in a derived class, writes a restart area to the <see cref="T:System.IO.Log.IRecordSequence" />.</span></span></summary>
        <returns><span data-ttu-id="24760-522">Порядковый номер записанной области перезапуска.</span><span class="sxs-lookup"><span data-stu-id="24760-522">The sequence number of the written restart area.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24760-523">Область перезапуска служит для временного хранения сведений, содержащих последнюю операцию контрольной точки клиента.</span><span class="sxs-lookup"><span data-stu-id="24760-523">A restart area is used to temporarily store information containing a client's last checkpoint operation.</span></span> <span data-ttu-id="24760-524">Файловая система CLFS поддерживает две области перезапуска, чтобы всегда была доступна хотя бы одна действительная область.</span><span class="sxs-lookup"><span data-stu-id="24760-524">The Common Log File System (CLFS) maintains two restart areas to guarantee that at least one valid area is always available.</span></span> <span data-ttu-id="24760-525">Если требуется выполнить восстановление, файловая система CLFS читает область перезапуска и все данные с последней операции контрольной точки.</span><span class="sxs-lookup"><span data-stu-id="24760-525">When a recovery is necessary, the CLFS reads its restart area and all the data from the last checkpoint operation.</span></span> <span data-ttu-id="24760-526">Эти данные инициализирует таблицу транзакций, таблицу "грязных страниц" и таблицу открытых файлов, чтобы их можно было использовать в процессе восстановления.</span><span class="sxs-lookup"><span data-stu-id="24760-526">This data initializes the transaction table, dirty pages table, and open file table so they can be used in the recovery process.</span></span>  
  
 <span data-ttu-id="24760-527">Чтение области перезапуска возможно с помощью метода <xref:System.IO.Log.IRecordSequence.ReadRestartAreas%2A>.</span><span class="sxs-lookup"><span data-stu-id="24760-527">A restart area can be read using the <xref:System.IO.Log.IRecordSequence.ReadRestartAreas%2A> method.</span></span>  
  
 <span data-ttu-id="24760-528">Данные в этих фрагментах массива байтов будут сцеплены в единый массив байтов для добавления в качестве записи.</span><span class="sxs-lookup"><span data-stu-id="24760-528">The data in the byte array segments will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="24760-529">Не делается никаких допущений об обратном разделении данных на фрагменты массива при чтении области перезапуска.</span><span class="sxs-lookup"><span data-stu-id="24760-529">No provision is made for splitting data back into array segments when the restart area is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="24760-530">Один или несколько аргументов являются недопустимыми.</span><span class="sxs-lookup"><span data-stu-id="24760-530">One or more of the arguments is invalid.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="24760-531">При записи в область перезапуска произошла ошибка ввода-вывода.</span><span class="sxs-lookup"><span data-stu-id="24760-531">An I/O error occurred while writing the restart area.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="24760-532">Последовательности записей не удалось выделить достаточно свободного пространства для новой области перезапуска.</span><span class="sxs-lookup"><span data-stu-id="24760-532">The record sequence could not make enough free space to contain the new restart area.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="24760-533">Метод был вызван после удаления последовательности.</span><span class="sxs-lookup"><span data-stu-id="24760-533">The method was called after the sequence has been disposed of.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteRestartArea">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber WriteRestartArea (System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber WriteRestartArea(class System.Collections.Generic.IList`1&lt;valuetype System.ArraySegment`1&lt;unsigned int8&gt;&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.IRecordSequence.WriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}})" />
      <MemberSignature Language="VB.NET" Value="Public Function WriteRestartArea (data As IList(Of ArraySegment(Of Byte))) As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Log::SequenceNumber WriteRestartArea(System::Collections::Generic::IList&lt;ArraySegment&lt;System::Byte&gt;&gt; ^ data);" />
      <MemberSignature Language="F#" Value="abstract member WriteRestartArea : System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; -&gt; System.IO.Log.SequenceNumber" Usage="iRecordSequence.WriteRestartArea data" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.Generic.IList&lt;System.ArraySegment&lt;System.Byte&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="24760-534">Список фрагментов массива байтов, которые будут сцеплены и добавлены в качестве записи.</span><span class="sxs-lookup"><span data-stu-id="24760-534">A list of byte array segments that will be concatenated and appended as the record.</span></span></param>
        <summary><span data-ttu-id="24760-535">При переопределении в производном классе записывает область перезапуска в последовательность <see cref="T:System.IO.Log.IRecordSequence" />.</span><span class="sxs-lookup"><span data-stu-id="24760-535">When overridden in a derived class, writes a restart area to the <see cref="T:System.IO.Log.IRecordSequence" />.</span></span></summary>
        <returns><span data-ttu-id="24760-536">Порядковый номер записанной области перезапуска.</span><span class="sxs-lookup"><span data-stu-id="24760-536">The sequence number of the written restart area.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24760-537">Область перезапуска служит для временного хранения сведений, содержащих последнюю операцию контрольной точки клиента.</span><span class="sxs-lookup"><span data-stu-id="24760-537">A restart area is used to temporarily store information containing a client's last checkpoint operation.</span></span> <span data-ttu-id="24760-538">Если требуется выполнить восстановление, можно проанализировать область перезапуска, чтобы извлечь все данные с последней операции контрольной точки.</span><span class="sxs-lookup"><span data-stu-id="24760-538">When a recovery is necessary, you can parse the restart area to retrieve all the data from the last checkpoint operation.</span></span> <span data-ttu-id="24760-539">Эти данные инициализирует таблицу транзакций, таблицу "грязных страниц" и таблицу открытых файлов, чтобы их можно было использовать в процессе восстановления.</span><span class="sxs-lookup"><span data-stu-id="24760-539">This data initializes the transaction table, dirty pages table, and open file table so they can be used in the recovery process.</span></span> <span data-ttu-id="24760-540">Чтение области перезапуска возможно с помощью метода <xref:System.IO.Log.IRecordSequence.ReadRestartAreas%2A>.</span><span class="sxs-lookup"><span data-stu-id="24760-540">A restart area can be read using the <xref:System.IO.Log.IRecordSequence.ReadRestartAreas%2A> method.</span></span>  
  
 <span data-ttu-id="24760-541">Данные в этих фрагментах массива байтов будут сцеплены в единый массив байтов для добавления в качестве записи.</span><span class="sxs-lookup"><span data-stu-id="24760-541">The data in the byte array segments will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="24760-542">Не делается никаких допущений об обратном разделении данных на фрагменты массива при чтении области перезапуска.</span><span class="sxs-lookup"><span data-stu-id="24760-542">No provision is made for splitting data back into array segments when the restart area is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="24760-543">Один или несколько аргументов являются недопустимыми.</span><span class="sxs-lookup"><span data-stu-id="24760-543">One or more of the arguments is invalid.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="24760-544">При записи в область перезапуска произошла ошибка ввода-вывода.</span><span class="sxs-lookup"><span data-stu-id="24760-544">An I/O error occurred while writing the restart area.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="24760-545">Последовательности записей не удалось выделить достаточно свободного пространства для новой области перезапуска.</span><span class="sxs-lookup"><span data-stu-id="24760-545">The record sequence could not make enough free space to contain the new restart area.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="24760-546">Метод был вызван после удаления последовательности.</span><span class="sxs-lookup"><span data-stu-id="24760-546">The method was called after the sequence has been disposed of.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteRestartArea">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber WriteRestartArea (ArraySegment&lt;byte&gt; data, System.IO.Log.SequenceNumber newBaseSequenceNumber);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber WriteRestartArea(valuetype System.ArraySegment`1&lt;unsigned int8&gt; data, valuetype System.IO.Log.SequenceNumber newBaseSequenceNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.IRecordSequence.WriteRestartArea(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber)" />
      <MemberSignature Language="VB.NET" Value="Public Function WriteRestartArea (data As ArraySegment(Of Byte), newBaseSequenceNumber As SequenceNumber) As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Log::SequenceNumber WriteRestartArea(ArraySegment&lt;System::Byte&gt; data, System::IO::Log::SequenceNumber newBaseSequenceNumber);" />
      <MemberSignature Language="F#" Value="abstract member WriteRestartArea : ArraySegment&lt;byte&gt; * System.IO.Log.SequenceNumber -&gt; System.IO.Log.SequenceNumber" Usage="iRecordSequence.WriteRestartArea (data, newBaseSequenceNumber)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.ArraySegment&lt;System.Byte&gt;" />
        <Parameter Name="newBaseSequenceNumber" Type="System.IO.Log.SequenceNumber" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="24760-547">Список фрагментов массива байтов, которые будут сцеплены и добавлены в качестве записи.</span><span class="sxs-lookup"><span data-stu-id="24760-547">A list of byte array segments that will be concatenated and appended as the record.</span></span></param>
        <param name="newBaseSequenceNumber"><span data-ttu-id="24760-548">Новый базовый порядковый номер.</span><span class="sxs-lookup"><span data-stu-id="24760-548">The new base sequence number.</span></span> <span data-ttu-id="24760-549">Заданный порядковый номер должен быть больше или равен текущему базовому порядковому номеру.</span><span class="sxs-lookup"><span data-stu-id="24760-549">The specified sequence number must be greater than or equal to the current base sequence number.</span></span></param>
        <summary><span data-ttu-id="24760-550">При переопределении в производном классе записывает область перезапуска в последовательность <see cref="T:System.IO.Log.IRecordSequence" /> и обновляет базовый порядковый номер.</span><span class="sxs-lookup"><span data-stu-id="24760-550">When overridden in a derived class, writes a restart area to the <see cref="T:System.IO.Log.IRecordSequence" /> and updates the base sequence number</span></span></summary>
        <returns><span data-ttu-id="24760-551">Порядковый номер записанной области перезапуска.</span><span class="sxs-lookup"><span data-stu-id="24760-551">The sequence number of the written restart area.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24760-552">Область перезапуска служит для временного хранения сведений, содержащих последнюю операцию контрольной точки клиента.</span><span class="sxs-lookup"><span data-stu-id="24760-552">A restart area is used to temporarily store information containing a client's last checkpoint operation.</span></span> <span data-ttu-id="24760-553">Если требуется выполнить восстановление, можно проанализировать область перезапуска, чтобы извлечь все данные с последней операции контрольной точки.</span><span class="sxs-lookup"><span data-stu-id="24760-553">When a recovery is necessary, you can parse the restart area to retrieve all the data from the last checkpoint operation.</span></span> <span data-ttu-id="24760-554">Эти данные инициализирует таблицу транзакций, таблицу "грязных страниц" и таблицу открытых файлов, чтобы их можно было использовать в процессе восстановления.</span><span class="sxs-lookup"><span data-stu-id="24760-554">This data initializes the transaction table, dirty pages table, and open file table so they can be used in the recovery process.</span></span> <span data-ttu-id="24760-555">Чтение области перезапуска возможно с помощью метода <xref:System.IO.Log.IRecordSequence.ReadRestartAreas%2A>.</span><span class="sxs-lookup"><span data-stu-id="24760-555">A restart area can be read using the <xref:System.IO.Log.IRecordSequence.ReadRestartAreas%2A> method.</span></span>  
  
 <span data-ttu-id="24760-556">При записи области перезапуска данные в этих фрагментах массива байтов сцепляются в единый массив байтов для добавления в качестве записи.</span><span class="sxs-lookup"><span data-stu-id="24760-556">When a restart area is written, the data in the byte array segments are concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="24760-557">Не делается никаких допущений об обратном разделении данных на фрагменты массива при чтении области перезапуска.</span><span class="sxs-lookup"><span data-stu-id="24760-557">No provision is made for splitting data back into array segments when the restart area is read.</span></span>  
  
 <span data-ttu-id="24760-558">При успешном выполнении этого метода базовый порядковый номер обновляется.</span><span class="sxs-lookup"><span data-stu-id="24760-558">When this method successfully completes, the base sequence number has been updated.</span></span> <span data-ttu-id="24760-559">Все записи журнала с порядковыми номерами меньшими, чем новый базовый порядковый номер, недоступны.</span><span class="sxs-lookup"><span data-stu-id="24760-559">All log records with sequence numbers less than the new base sequence number are inaccessible.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="24760-560">Один или несколько аргументов являются недопустимыми.</span><span class="sxs-lookup"><span data-stu-id="24760-560">One or more of the arguments is invalid.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="24760-561">При записи в область перезапуска произошла ошибка ввода-вывода.</span><span class="sxs-lookup"><span data-stu-id="24760-561">An I/O error occurred while writing the restart area.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="24760-562">Последовательности записей не удалось выделить достаточно свободного пространства для новой области перезапуска.</span><span class="sxs-lookup"><span data-stu-id="24760-562">The record sequence could not make enough free space to contain the new restart area.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="24760-563">Метод был вызван после удаления последовательности.</span><span class="sxs-lookup"><span data-stu-id="24760-563">The method was called after the sequence has been disposed of.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteRestartArea">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber WriteRestartArea (System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; data, System.IO.Log.SequenceNumber newBaseSequenceNumber);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber WriteRestartArea(class System.Collections.Generic.IList`1&lt;valuetype System.ArraySegment`1&lt;unsigned int8&gt;&gt; data, valuetype System.IO.Log.SequenceNumber newBaseSequenceNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.IRecordSequence.WriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber)" />
      <MemberSignature Language="VB.NET" Value="Public Function WriteRestartArea (data As IList(Of ArraySegment(Of Byte)), newBaseSequenceNumber As SequenceNumber) As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Log::SequenceNumber WriteRestartArea(System::Collections::Generic::IList&lt;ArraySegment&lt;System::Byte&gt;&gt; ^ data, System::IO::Log::SequenceNumber newBaseSequenceNumber);" />
      <MemberSignature Language="F#" Value="abstract member WriteRestartArea : System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; * System.IO.Log.SequenceNumber -&gt; System.IO.Log.SequenceNumber" Usage="iRecordSequence.WriteRestartArea (data, newBaseSequenceNumber)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.Generic.IList&lt;System.ArraySegment&lt;System.Byte&gt;&gt;" />
        <Parameter Name="newBaseSequenceNumber" Type="System.IO.Log.SequenceNumber" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="24760-564">Список фрагментов массива байтов, которые будут сцеплены и добавлены в качестве записи.</span><span class="sxs-lookup"><span data-stu-id="24760-564">A list of byte array segments that will be concatenated and appended as the record.</span></span></param>
        <param name="newBaseSequenceNumber"><span data-ttu-id="24760-565">Новый базовый порядковый номер.</span><span class="sxs-lookup"><span data-stu-id="24760-565">The new base sequence number.</span></span> <span data-ttu-id="24760-566">Заданный порядковый номер должен быть больше или равен текущему базовому порядковому номеру.</span><span class="sxs-lookup"><span data-stu-id="24760-566">The specified sequence number must be greater than or equal to the current base sequence number.</span></span></param>
        <summary><span data-ttu-id="24760-567">При переопределении в производном классе записывает область перезапуска в последовательность <see cref="T:System.IO.Log.IRecordSequence" /> и обновляет базовый порядковый номер.</span><span class="sxs-lookup"><span data-stu-id="24760-567">When overridden in a derived class, writes a restart area to the <see cref="T:System.IO.Log.IRecordSequence" /> and updates the base sequence number.</span></span></summary>
        <returns><span data-ttu-id="24760-568">Порядковый номер записанной области перезапуска.</span><span class="sxs-lookup"><span data-stu-id="24760-568">The sequence number of the written restart area.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24760-569">Область перезапуска служит для временного хранения сведений, содержащих последнюю операцию контрольной точки клиента.</span><span class="sxs-lookup"><span data-stu-id="24760-569">A restart area is used to temporarily store information containing a client's last checkpoint operation.</span></span> <span data-ttu-id="24760-570">Если требуется выполнить восстановление, можно проанализировать область перезапуска, чтобы извлечь все данные с последней операции контрольной точки.</span><span class="sxs-lookup"><span data-stu-id="24760-570">When a recovery is necessary, you can parse the restart area to retrieve all the data from the last checkpoint operation.</span></span> <span data-ttu-id="24760-571">Эти данные инициализирует таблицу транзакций, таблицу "грязных страниц" и таблицу открытых файлов, чтобы их можно было использовать в процессе восстановления.</span><span class="sxs-lookup"><span data-stu-id="24760-571">This data initializes the transaction table, dirty pages table, and open file table so they can be used in the recovery process.</span></span> <span data-ttu-id="24760-572">Чтение области перезапуска возможно с помощью метода <xref:System.IO.Log.IRecordSequence.ReadRestartAreas%2A>.</span><span class="sxs-lookup"><span data-stu-id="24760-572">A restart area can be read using the <xref:System.IO.Log.IRecordSequence.ReadRestartAreas%2A> method.</span></span>  
  
 <span data-ttu-id="24760-573">При записи области перезапуска данные в этих фрагментах массива байтов сцепляются в единый массив байтов для добавления в качестве записи.</span><span class="sxs-lookup"><span data-stu-id="24760-573">When a restart area is written, the data in the byte array segments are concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="24760-574">Не делается никаких допущений об обратном разделении данных на фрагменты массива при чтении области перезапуска.</span><span class="sxs-lookup"><span data-stu-id="24760-574">No provision is made for splitting data back into array segments when the restart area is read.</span></span>  
  
 <span data-ttu-id="24760-575">При успешном выполнении этого метода базовый порядковый номер обновляется.</span><span class="sxs-lookup"><span data-stu-id="24760-575">When this method successfully completes, the base sequence number has been updated.</span></span> <span data-ttu-id="24760-576">Все записи журнала с порядковыми номерами меньшими, чем новый базовый порядковый номер, недоступны.</span><span class="sxs-lookup"><span data-stu-id="24760-576">All log records with sequence numbers less than the new base sequence number are inaccessible.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="24760-577">Один или несколько аргументов являются недопустимыми.</span><span class="sxs-lookup"><span data-stu-id="24760-577">One or more of the arguments is invalid.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="24760-578">При записи в область перезапуска произошла ошибка ввода-вывода.</span><span class="sxs-lookup"><span data-stu-id="24760-578">An I/O error occurred while writing the restart area.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="24760-579">Последовательности записей не удалось выделить достаточно свободного пространства для новой области перезапуска.</span><span class="sxs-lookup"><span data-stu-id="24760-579">The record sequence could not make enough free space to contain the new restart area.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="24760-580">Метод был вызван после удаления последовательности.</span><span class="sxs-lookup"><span data-stu-id="24760-580">The method was called after the sequence has been disposed of.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteRestartArea">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber WriteRestartArea (ArraySegment&lt;byte&gt; data, System.IO.Log.SequenceNumber newBaseSequenceNumber, System.IO.Log.ReservationCollection reservation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber WriteRestartArea(valuetype System.ArraySegment`1&lt;unsigned int8&gt; data, valuetype System.IO.Log.SequenceNumber newBaseSequenceNumber, class System.IO.Log.ReservationCollection reservation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.IRecordSequence.WriteRestartArea(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Function WriteRestartArea (data As ArraySegment(Of Byte), newBaseSequenceNumber As SequenceNumber, reservation As ReservationCollection) As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Log::SequenceNumber WriteRestartArea(ArraySegment&lt;System::Byte&gt; data, System::IO::Log::SequenceNumber newBaseSequenceNumber, System::IO::Log::ReservationCollection ^ reservation);" />
      <MemberSignature Language="F#" Value="abstract member WriteRestartArea : ArraySegment&lt;byte&gt; * System.IO.Log.SequenceNumber * System.IO.Log.ReservationCollection -&gt; System.IO.Log.SequenceNumber" Usage="iRecordSequence.WriteRestartArea (data, newBaseSequenceNumber, reservation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.ArraySegment&lt;System.Byte&gt;" />
        <Parameter Name="newBaseSequenceNumber" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="reservation" Type="System.IO.Log.ReservationCollection" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="24760-581">Список фрагментов массива байтов, которые будут сцеплены и добавлены в качестве записи.</span><span class="sxs-lookup"><span data-stu-id="24760-581">A list of byte array segments that will be concatenated and appended as the record.</span></span></param>
        <param name="newBaseSequenceNumber"><span data-ttu-id="24760-582">Новый базовый порядковый номер.</span><span class="sxs-lookup"><span data-stu-id="24760-582">The new base sequence number.</span></span> <span data-ttu-id="24760-583">Заданный порядковый номер должен быть больше или равен текущему базовому порядковому номеру.</span><span class="sxs-lookup"><span data-stu-id="24760-583">The specified sequence number must be greater than or equal to the current base sequence number.</span></span></param>
        <param name="reservation"><span data-ttu-id="24760-584">Коллекция <see cref="T:System.IO.Log.ReservationCollection" />, содержащая резервирование, которое следует использовать для данной области перезапуска.</span><span class="sxs-lookup"><span data-stu-id="24760-584">A <see cref="T:System.IO.Log.ReservationCollection" /> that contains the reservation that should be used for this restart area.</span></span></param>
        <summary><span data-ttu-id="24760-585">При переопределении в производном классе записывает область перезапуска в последовательность <see cref="T:System.IO.Log.IRecordSequence" />, используя резервирование, и обновляет базовый порядковый номер.</span><span class="sxs-lookup"><span data-stu-id="24760-585">When overridden in a derived class, writes a restart area to the <see cref="T:System.IO.Log.IRecordSequence" /> using a reservation, and updates the base sequence number</span></span></summary>
        <returns><span data-ttu-id="24760-586">Порядковый номер записанной области перезапуска.</span><span class="sxs-lookup"><span data-stu-id="24760-586">The sequence number of the written restart area.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24760-587">Область перезапуска служит для временного хранения сведений, содержащих последнюю операцию контрольной точки клиента.</span><span class="sxs-lookup"><span data-stu-id="24760-587">A restart area is used to temporarily store information containing a client's last checkpoint operation.</span></span> <span data-ttu-id="24760-588">Если требуется выполнить восстановление, можно проанализировать область перезапуска, чтобы извлечь все данные с последней операции контрольной точки.</span><span class="sxs-lookup"><span data-stu-id="24760-588">When a recovery is necessary, you can parse the restart area to retrieve all the data from the last checkpoint operation.</span></span> <span data-ttu-id="24760-589">Эти данные инициализирует таблицу транзакций, таблицу "грязных страниц" и таблицу открытых файлов, чтобы их можно было использовать в процессе восстановления.</span><span class="sxs-lookup"><span data-stu-id="24760-589">This data initializes the transaction table, dirty pages table, and open file table so they can be used in the recovery process.</span></span> <span data-ttu-id="24760-590">Чтение области перезапуска возможно с помощью метода <xref:System.IO.Log.IRecordSequence.ReadRestartAreas%2A>.</span><span class="sxs-lookup"><span data-stu-id="24760-590">A restart area can be read using the <xref:System.IO.Log.IRecordSequence.ReadRestartAreas%2A> method.</span></span>  
  
 <span data-ttu-id="24760-591">При записи области перезапуска данные в этих фрагментах массива байтов сцепляются в единый массив байтов для добавления в качестве записи.</span><span class="sxs-lookup"><span data-stu-id="24760-591">When a restart area is written, the data in the byte array segments are concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="24760-592">Не делается никаких допущений об обратном разделении данных на фрагменты массива при чтении области перезапуска.</span><span class="sxs-lookup"><span data-stu-id="24760-592">No provision is made for splitting data back into array segments when the restart area is read.</span></span>  
  
 <span data-ttu-id="24760-593">Если задано резервирование, записанная область перезапуска будет занимать место, ранее зарезервированное с помощью содержащегося в коллекции резервирования.</span><span class="sxs-lookup"><span data-stu-id="24760-593">If a reservation is specified, the written restart area will consume space that has been previously reserved, using a reservation contained in the collection.</span></span> <span data-ttu-id="24760-594">Если метод завершается успешно, будет занята минимальная область резервирования, в которой поместятся данные, а эта область резервирования будет удалена из коллекции.</span><span class="sxs-lookup"><span data-stu-id="24760-594">If the method succeeds, it will consume the smallest reservation that can contain the data, and that reservation will be removed from the collection.</span></span>  
  
 <span data-ttu-id="24760-595">При успешном выполнении этого метода базовый порядковый номер обновляется.</span><span class="sxs-lookup"><span data-stu-id="24760-595">When this method successfully completes, the base sequence number has been updated.</span></span> <span data-ttu-id="24760-596">Все записи журнала с порядковыми номерами меньшими, чем новый базовый порядковый номер, недоступны.</span><span class="sxs-lookup"><span data-stu-id="24760-596">All log records with sequence numbers less than the new base sequence number are inaccessible.</span></span>  
  
 <span data-ttu-id="24760-597">Если последовательность записей была удалена, или если передается неверный аргумент, исключения создаются немедленно, в пределах данной операции.</span><span class="sxs-lookup"><span data-stu-id="24760-597">If a record sequence has been disposed of, or if you pass an invalid argument, exceptions are thrown immediately within this operation.</span></span> <span data-ttu-id="24760-598">Ошибки, возникшие при выполнении запроса асинхронного добавления, например ошибка диска в процессе запроса ввода-вывода, приводят к созданию исключений при вызове метода <xref:System.IO.Log.IRecordSequence.EndReserveAndAppend%2A>.</span><span class="sxs-lookup"><span data-stu-id="24760-598">Errors that occurred during an asynchronous append request, for example, a disk failure during the I/O request, will result in exceptions being thrown when the <xref:System.IO.Log.IRecordSequence.EndReserveAndAppend%2A> method is called.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="24760-599">Один или несколько аргументов являются недопустимыми.</span><span class="sxs-lookup"><span data-stu-id="24760-599">One or more of the arguments is invalid.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="24760-600">При записи в область перезапуска произошла ошибка ввода-вывода.</span><span class="sxs-lookup"><span data-stu-id="24760-600">An I/O error occurred while writing the restart area.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="24760-601">Последовательности записей не удалось выделить достаточно свободного пространства для новой области перезапуска.</span><span class="sxs-lookup"><span data-stu-id="24760-601">The record sequence could not make enough free space to contain the new restart area.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="24760-602">Метод был вызван после удаления последовательности.</span><span class="sxs-lookup"><span data-stu-id="24760-602">The method was called after the sequence has been disposed of.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteRestartArea">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber WriteRestartArea (System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; data, System.IO.Log.SequenceNumber newBaseSequenceNumber, System.IO.Log.ReservationCollection reservation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber WriteRestartArea(class System.Collections.Generic.IList`1&lt;valuetype System.ArraySegment`1&lt;unsigned int8&gt;&gt; data, valuetype System.IO.Log.SequenceNumber newBaseSequenceNumber, class System.IO.Log.ReservationCollection reservation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.IRecordSequence.WriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Function WriteRestartArea (data As IList(Of ArraySegment(Of Byte)), newBaseSequenceNumber As SequenceNumber, reservation As ReservationCollection) As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Log::SequenceNumber WriteRestartArea(System::Collections::Generic::IList&lt;ArraySegment&lt;System::Byte&gt;&gt; ^ data, System::IO::Log::SequenceNumber newBaseSequenceNumber, System::IO::Log::ReservationCollection ^ reservation);" />
      <MemberSignature Language="F#" Value="abstract member WriteRestartArea : System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; * System.IO.Log.SequenceNumber * System.IO.Log.ReservationCollection -&gt; System.IO.Log.SequenceNumber" Usage="iRecordSequence.WriteRestartArea (data, newBaseSequenceNumber, reservation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.Generic.IList&lt;System.ArraySegment&lt;System.Byte&gt;&gt;" />
        <Parameter Name="newBaseSequenceNumber" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="reservation" Type="System.IO.Log.ReservationCollection" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="24760-603">Список фрагментов массива байтов, которые будут сцеплены и добавлены в качестве записи.</span><span class="sxs-lookup"><span data-stu-id="24760-603">A list of byte array segments that will be concatenated and appended as the record.</span></span></param>
        <param name="newBaseSequenceNumber"><span data-ttu-id="24760-604">Новый базовый порядковый номер.</span><span class="sxs-lookup"><span data-stu-id="24760-604">The new base sequence number.</span></span> <span data-ttu-id="24760-605">Заданный порядковый номер должен быть больше или равен текущему базовому порядковому номеру.</span><span class="sxs-lookup"><span data-stu-id="24760-605">The specified sequence number must be greater than or equal to the current base sequence number.</span></span></param>
        <param name="reservation"><span data-ttu-id="24760-606">Коллекция <see cref="T:System.IO.Log.ReservationCollection" />, содержащая резервирование, которое следует использовать для данной области перезапуска.</span><span class="sxs-lookup"><span data-stu-id="24760-606">A <see cref="T:System.IO.Log.ReservationCollection" /> that contains the reservation that should be used for this restart area.</span></span></param>
        <summary><span data-ttu-id="24760-607">При переопределении в производном классе записывает область перезапуска в последовательность <see cref="T:System.IO.Log.IRecordSequence" />, используя резервирование, и обновляет базовый порядковый номер.</span><span class="sxs-lookup"><span data-stu-id="24760-607">When overridden in a derived class, writes a restart area to the <see cref="T:System.IO.Log.IRecordSequence" /> using a reservation, and updates the base sequence number.</span></span></summary>
        <returns><span data-ttu-id="24760-608">Порядковый номер записанной области перезапуска.</span><span class="sxs-lookup"><span data-stu-id="24760-608">The sequence number of the written restart area.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24760-609">Область перезапуска служит для временного хранения сведений, содержащих последнюю операцию контрольной точки клиента.</span><span class="sxs-lookup"><span data-stu-id="24760-609">A restart area is used to temporarily store information containing a client's last checkpoint operation.</span></span> <span data-ttu-id="24760-610">Если требуется выполнить восстановление, можно проанализировать область перезапуска, чтобы извлечь все данные с последней операции контрольной точки.</span><span class="sxs-lookup"><span data-stu-id="24760-610">When a recovery is necessary, you can parse the restart area to retrieve all the data from the last checkpoint operation.</span></span> <span data-ttu-id="24760-611">Эти данные инициализирует таблицу транзакций, таблицу "грязных страниц" и таблицу открытых файлов, чтобы их можно было использовать в процессе восстановления.</span><span class="sxs-lookup"><span data-stu-id="24760-611">This data initializes the transaction table, dirty pages table, and open file table so they can be used in the recovery process.</span></span> <span data-ttu-id="24760-612">Чтение области перезапуска возможно с помощью метода <xref:System.IO.Log.IRecordSequence.ReadRestartAreas%2A>.</span><span class="sxs-lookup"><span data-stu-id="24760-612">A restart area can be read using the <xref:System.IO.Log.IRecordSequence.ReadRestartAreas%2A> method.</span></span>  
  
 <span data-ttu-id="24760-613">При записи области перезапуска данные в этих фрагментах массива байтов сцепляются в единый массив байтов для добавления в качестве записи.</span><span class="sxs-lookup"><span data-stu-id="24760-613">When a restart area is written, the data in the byte array segments are concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="24760-614">Не делается никаких допущений об обратном разделении данных на фрагменты массива при чтении области перезапуска.</span><span class="sxs-lookup"><span data-stu-id="24760-614">No provision is made for splitting data back into array segments when the restart area is read.</span></span>  
  
 <span data-ttu-id="24760-615">Если задано резервирование, записанная область перезапуска будет занимать место, ранее зарезервированное с помощью содержащегося в коллекции резервирования.</span><span class="sxs-lookup"><span data-stu-id="24760-615">If a reservation is specified, the written restart area will consume space that has been previously reserved, using a reservation contained in the collection.</span></span> <span data-ttu-id="24760-616">Если метод завершается успешно, будет занята минимальная область резервирования, в которой поместятся данные, а эта область резервирования будет удалена из коллекции.</span><span class="sxs-lookup"><span data-stu-id="24760-616">If the method succeeds, it will consume the smallest reservation that can contain the data, and that reservation will be removed from the collection.</span></span>  
  
 <span data-ttu-id="24760-617">При успешном выполнении этого метода базовый порядковый номер обновляется.</span><span class="sxs-lookup"><span data-stu-id="24760-617">When this method successfully completes, the base sequence number has been updated.</span></span> <span data-ttu-id="24760-618">Все записи журнала с порядковыми номерами меньшими, чем новый базовый порядковый номер, недоступны.</span><span class="sxs-lookup"><span data-stu-id="24760-618">All log records with sequence numbers less than the new base sequence number are inaccessible.</span></span>  
  
 <span data-ttu-id="24760-619">Если последовательность записей была удалена, или если передается неверный аргумент, исключения создаются немедленно, в пределах данной операции.</span><span class="sxs-lookup"><span data-stu-id="24760-619">If a record sequence has been disposed of, or if you pass an invalid argument, exceptions are thrown immediately within this operation.</span></span> <span data-ttu-id="24760-620">Ошибки, возникшие при выполнении запроса асинхронного добавления, например ошибка диска в процессе запроса ввода-вывода, приводят к созданию исключений при вызове метода <xref:System.IO.Log.IRecordSequence.EndReserveAndAppend%2A>.</span><span class="sxs-lookup"><span data-stu-id="24760-620">Errors that occurred during an asynchronous append request, for example, a disk failure during the I/O request, will result in exceptions being thrown when the <xref:System.IO.Log.IRecordSequence.EndReserveAndAppend%2A> method is called.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="24760-621">Один или несколько аргументов являются недопустимыми.</span><span class="sxs-lookup"><span data-stu-id="24760-621">One or more of the arguments is invalid.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="24760-622">При записи в область перезапуска произошла ошибка ввода-вывода.</span><span class="sxs-lookup"><span data-stu-id="24760-622">An I/O error occurred while writing the restart area.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="24760-623">Последовательности записей не удалось выделить достаточно свободного пространства для новой области перезапуска.</span><span class="sxs-lookup"><span data-stu-id="24760-623">The record sequence could not make enough free space to contain the new restart area.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="24760-624">Метод был вызван после удаления последовательности.</span><span class="sxs-lookup"><span data-stu-id="24760-624">The method was called after the sequence has been disposed of.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
