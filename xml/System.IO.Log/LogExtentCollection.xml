<Type Name="LogExtentCollection" FullName="System.IO.Log.LogExtentCollection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c91ca54dcc80553c2b43275ab8378b50843a53b8" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70688796" /></Metadata><TypeSignature Language="C#" Value="public sealed class LogExtentCollection : System.Collections.Generic.IEnumerable&lt;System.IO.Log.LogExtent&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit LogExtentCollection extends System.Object implements class System.Collections.Generic.IEnumerable`1&lt;class System.IO.Log.LogExtent&gt;, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.IO.Log.LogExtentCollection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class LogExtentCollection&#xA;Implements IEnumerable(Of LogExtent)" />
  <TypeSignature Language="C++ CLI" Value="public ref class LogExtentCollection sealed : System::Collections::Generic::IEnumerable&lt;System::IO::Log::LogExtent ^&gt;" />
  <TypeSignature Language="F#" Value="type LogExtentCollection = class&#xA;    interface seq&lt;LogExtent&gt;&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.IO.Log</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;System.IO.Log.LogExtent&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Представляет коллекцию объектов <see cref="T:System.IO.Log.LogExtent" />, связанных с хранилищем <see cref="T:System.IO.Log.LogStore" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот класс содержит коллекцию объектов <xref:System.IO.Log.LogExtent>, связанных с хранилищем <xref:System.IO.Log.LogStore>. Экземпляр <xref:System.IO.Log.LogStore> хранит данные в коллекции областей диска, представленных экземплярами <xref:System.IO.Log.LogExtent>. Конкретная область <xref:System.IO.Log.LogExtent> связана с одним экземпляром <xref:System.IO.Log.LogStore>, и объекты <xref:System.IO.Log.LogExtent> в одном <xref:System.IO.Log.LogStore> имеют одинаковый размер. Пространство добавляется и удаляется из экземпляра <xref:System.IO.Log.LogStore> с шагом в области диска.  
  
 Несмотря на то что объекты <xref:System.IO.Log.LogExtent> представлены на диске в виде файлов, их не следует перемещать или удалять как обычные файлы. Вместо этого следует использовать методы, предоставленные этим классом, для непосредственного добавления или удаления экземпляров <xref:System.IO.Log.LogExtent>. Обычно области удаляются, когда они больше не содержат активных данных. Однако если параметр `force` в методе <xref:System.IO.Log.LogExtentCollection.Remove%2A> имеет значение `true`, возникает исключение, если не удается удалить области немедленно.  
  
 Последнюю область в коллекции <xref:System.IO.Log.LogExtentCollection> удалить невозможно. Это означает, что свойство <xref:System.IO.Log.LogExtentCollection.Count%2A> не может быть равным нулю после добавления области.  
  
   
  
## Examples  
 В этом примере показано, как использовать классы <xref:System.IO.Log.LogExtent> и <xref:System.IO.Log.LogExtentCollection>, чтобы добавлять и эмулировать области в последовательности журнала.  
  
 [!code-csharp[S_UELogRecordSequence#0](~/samples/snippets/csharp/VS_Snippets_CFX/s_uelogrecordsequence/cs/mylogrecordsequence.cs#0)]
 [!code-vb[S_UELogRecordSequence#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uelogrecordsequence/vb/mylogrecordsequence.vb#0)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IO.Log.LogExtent" />
    <altmember cref="T:System.IO.Log.LogStore" />
  </Docs>
  <Members>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Создает новую область <see cref="T:System.IO.Log.LogExtent" /> и добавляет ее в коллекцию.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.LogExtentCollection.Add(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::String ^ path);" />
      <MemberSignature Language="F#" Value="member this.Add : string -&gt; unit" Usage="logExtentCollection.Add path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">Путь к добавляемой области журнала.</param>
        <summary>Добавляет экземпляр <see cref="T:System.IO.Log.LogExtent" /> в коллекцию.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Размер нового добавленного экземпляра <xref:System.IO.Log.LogExtent> совпадает с размером существующих экземпляров <xref:System.IO.Log.LogExtent> в коллекции.  
  
> [!NOTE]
>  Не используйте этот метод, чтобы добавить область <xref:System.IO.Log.LogExtent> в коллекцию.  
  
   
  
## Examples  
 В этом примере показано, как использовать классы <xref:System.IO.Log.LogExtent> и <xref:System.IO.Log.LogExtentCollection>, чтобы добавлять и эмулировать области в последовательности журнала.  
  
 [!code-csharp[S_UELogRecordSequence#0](~/samples/snippets/csharp/VS_Snippets_CFX/s_uelogrecordsequence/cs/mylogrecordsequence.cs#0)]
 [!code-vb[S_UELogRecordSequence#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uelogrecordsequence/vb/mylogrecordsequence.vb#0)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="path" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Имя файла хранилища журнала, указанное параметром <paramref name="path" />, является недопустимым.</exception>
        <exception cref="T:System.InvalidOperationException">Должен быть указан размер первой области.</exception>
        <exception cref="T:System.IO.IOException">Не удалось выполнить запрос, так как возникла неожиданная ошибка ввода-вывода.  
  
- или - 
Невозможно создать файл, указанный параметром <paramref name="path" />, так как файл или каталог уже существует.</exception>
        <exception cref="T:System.ObjectDisposedException">Метод был вызван после удаления последовательности.</exception>
        <exception cref="T:System.OutOfMemoryException">Недостаточно памяти, чтобы продолжить выполнение программы.</exception>
        <exception cref="T:System.IO.Log.SequenceFullException">Последовательность записей заполнена.  
  
 - или -  
  
 Диск или носитель, содержащий хранилище, заполнен.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Доступ к заданному хранилищу журнала запрещен операционной системой.</exception>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (string path, long size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(string path, int64 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.LogExtentCollection.Add(System.String,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (path As String, size As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::String ^ path, long size);" />
      <MemberSignature Language="F#" Value="member this.Add : string * int64 -&gt; unit" Usage="logExtentCollection.Add (path, size)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="size" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="path">Путь к области журнала.</param>
        <param name="size">Размер области журнала.</param>
        <summary>Создает новую область <see cref="T:System.IO.Log.LogExtent" /> указанного размера и добавляет ее коллекцию.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если коллекция пуста, указанный размер должен быть не меньше, чем размер других областей в коллекции. В таком случае параметр `size` не учитывается и создается область такого же размера, что и другие области в коллекции.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="path" /> или <paramref name="size" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="archiveTail" /> не входит в диапазон допустимых значений.</exception>
        <exception cref="T:System.ArgumentException">Имя файла хранилища журнала, указанное параметром <paramref name="path" />, является недопустимым.  
  
 Значение параметра <paramref name="size" /> меньше, чем размер других областей в хранилище.</exception>
        <exception cref="T:System.InvalidOperationException">Должен быть указан размер первой области.  
  
 -или-  
  
 Использование дублированных имен для областей журнала запрещено.</exception>
        <exception cref="T:System.IO.IOException">Не удалось выполнить запрос, так как возникла неожиданная ошибка ввода-вывода.  
  
- или - 
Невозможно создать файл, указанный параметром <paramref name="path" />, так как файл или каталог уже существует.</exception>
        <exception cref="T:System.ObjectDisposedException">Метод был вызван после удаления последовательности.</exception>
        <exception cref="T:System.OutOfMemoryException">Недостаточно памяти, чтобы продолжить выполнение программы.</exception>
        <exception cref="T:System.IO.Log.SequenceFullException">Последовательность записей заполнена.  
  
 - или -  
  
 Диск или носитель, содержащий хранилище, заполнен.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Доступ к заданному хранилищу журнала запрещен операционной системой.</exception>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.IO.Log.LogExtentCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.IO.Log.LogExtentCollection.Count" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает количество областей журнала в коллекции.</summary>
        <value>Количество областей журнала в коллекции.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В этом примере показано, как использовать классы <xref:System.IO.Log.LogExtent> и <xref:System.IO.Log.LogExtentCollection>, чтобы добавлять и эмулировать области в последовательности журнала.  
  
 [!code-csharp[S_UELogRecordSequence#0](~/samples/snippets/csharp/VS_Snippets_CFX/s_uelogrecordsequence/cs/mylogrecordsequence.cs#0)]
 [!code-vb[S_UELogRecordSequence#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uelogrecordsequence/vb/mylogrecordsequence.vb#0)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Хранилище журнала удалено.</exception>
      </Docs>
    </Member>
    <Member MemberName="FreeCount">
      <MemberSignature Language="C#" Value="public int FreeCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 FreeCount" />
      <MemberSignature Language="DocId" Value="P:System.IO.Log.LogExtentCollection.FreeCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FreeCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int FreeCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.FreeCount : int" Usage="System.IO.Log.LogExtentCollection.FreeCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает количество свободных экземпляров <see cref="T:System.IO.Log.LogExtent" /> в коллекции, т.е. количество экземпляров <see cref="T:System.IO.Log.LogExtent" />, которые не содержат данных.</summary>
        <value>Количество свободных <see cref="T:System.IO.Log.LogExtent" /> экземпляров в коллекции.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В этом примере показано, как использовать классы <xref:System.IO.Log.LogExtent> и <xref:System.IO.Log.LogExtentCollection>, чтобы добавлять и эмулировать области в последовательности журнала.  
  
 [!code-csharp[S_UELogRecordSequence#0](~/samples/snippets/csharp/VS_Snippets_CFX/s_uelogrecordsequence/cs/mylogrecordsequence.cs#0)]
 [!code-vb[S_UELogRecordSequence#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uelogrecordsequence/vb/mylogrecordsequence.vb#0)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Хранилище журнала удалено.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerator&lt;System.IO.Log.LogExtent&gt; GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;class System.IO.Log.LogExtent&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.LogExtentCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator(Of LogExtent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerator&lt;System::IO::Log::LogExtent ^&gt; ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;System.IO.Log.LogExtent&gt;&#xA;override this.GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;System.IO.Log.LogExtent&gt;" Usage="logExtentCollection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.IO.Log.LogExtent&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает перечислитель для экземпляров <see cref="T:System.IO.Log.LogExtent" /> в этой коллекции. Наследовать этот метод нельзя.</summary>
        <returns>Перечислитель для экземпляров <see cref="T:System.IO.Log.LogExtent" /> в этой коллекции.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IO.IOException">Не удалось выполнить запрос, так как возникла неожиданная ошибка ввода-вывода.</exception>
        <exception cref="T:System.InvalidOperationException">Операция недопустима по одной из следующих причин. 
– Перечисление завершено.  
  
– Коллекция изменена.  
  
– Перечисление не запущено. Должен быть вызван метод <see cref="M:System.Collections.IEnumerator.MoveNext" />.</exception>
        <exception cref="T:System.ObjectDisposedException">Метод был вызван после удаления последовательности.</exception>
        <exception cref="T:System.OutOfMemoryException">Недостаточно памяти, чтобы продолжить выполнение программы.</exception>
        <exception cref="T:System.IO.Log.SequenceFullException">Последовательность записей заполнена.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Доступ к заданному хранилищу журнала запрещен операционной системой.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Remove">
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Удаляет экземпляр <see cref="T:System.IO.Log.LogExtent" /> из коллекции.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.IO.Log.LogExtent extent, bool force);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.IO.Log.LogExtent extent, bool force) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.LogExtentCollection.Remove(System.IO.Log.LogExtent,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (extent As LogExtent, force As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::IO::Log::LogExtent ^ extent, bool force);" />
      <MemberSignature Language="F#" Value="member this.Remove : System.IO.Log.LogExtent * bool -&gt; unit" Usage="logExtentCollection.Remove (extent, force)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="extent" Type="System.IO.Log.LogExtent" />
        <Parameter Name="force" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="extent">Экземпляр <see cref="T:System.IO.Log.LogExtent" /> для удаления.</param>
        <param name="force">Значение <see langword="true" />, если область необходимо удалить немедленно; в противном случае — значение <see langword="false" />.</param>
        <summary>Удаляет указанный экземпляр <see cref="T:System.IO.Log.LogExtent" /> из коллекции.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Экземпляр <xref:System.IO.Log.LogExtent> можно удалить из коллекции, если только он не является частью активной области хранилища <xref:System.IO.Log.LogStore>. Если параметр `force` имеет значение `true` и область не удается удалить немедленно, создается исключение. Если параметр `force` имеет значение `false` и область не удается удалить немедленно, удаление откладывается, пока область больше не будет частью активной области.  
  
 Последнюю область в коллекции <xref:System.IO.Log.LogExtentCollection> удалить невозможно. Это означает, что свойство <xref:System.IO.Log.LogExtentCollection.Count%2A> не может быть равным нулю после того как добавлена область.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="extent" /> или <paramref name="force" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Не удается найти в коллекции область <paramref name="extent" />.</exception>
        <exception cref="T:System.InvalidOperationException">Не удается удалить область <paramref name="extent" />. Либо она все еще остается частью активной области, либо доступ к ней запрещен.</exception>
        <exception cref="T:System.IO.IOException">Не удалось выполнить запрос, так как возникла неожиданная ошибка ввода-вывода.  
  
-или- 
 Не удается удалить область <paramref name="extent" />.</exception>
        <exception cref="T:System.ObjectDisposedException">Метод был вызван после удаления последовательности.</exception>
        <exception cref="T:System.OutOfMemoryException">Недостаточно памяти, чтобы продолжить выполнение программы.</exception>
        <exception cref="T:System.IO.Log.SequenceFullException">Последовательность записей заполнена.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Доступ к заданному хранилищу журнала запрещен операционной системой.</exception>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (string path, bool force);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(string path, bool force) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.LogExtentCollection.Remove(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (path As String, force As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::String ^ path, bool force);" />
      <MemberSignature Language="F#" Value="member this.Remove : string * bool -&gt; unit" Usage="logExtentCollection.Remove (path, force)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="force" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="path">Путь к экземпляру <see cref="T:System.IO.Log.LogExtent" /> для удаления.</param>
        <param name="force">Значение <see langword="true" />, если область необходимо удалить немедленно; в противном случае — значение <see langword="false" />.</param>
        <summary>Удаляет экземпляр <see cref="T:System.IO.Log.LogExtent" /> с указанным путем из коллекции.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Экземпляр <xref:System.IO.Log.LogExtent> можно удалить из коллекции, если только он не является частью активной области хранилища <xref:System.IO.Log.LogStore>. Если параметр `force` имеет значение `true` и область не удается удалить немедленно, создается исключение. Если параметр `force` имеет значение `false` и область не удается удалить немедленно, удаление откладывается, пока область больше не будет частью активной области.  
  
 Последнюю область в коллекции <xref:System.IO.Log.LogExtentCollection> удалить невозможно. Это означает, что свойство <xref:System.IO.Log.LogExtentCollection.Count%2A> не может быть равным нулю после того как добавлена область.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="path" /> или <paramref name="force" /> — <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Не удалось найти в коллекции область, указанную в параметре <paramref name="path" />.</exception>
        <exception cref="T:System.InvalidOperationException">Не удалось удалить область, указанную в параметре <paramref name="path" />. Либо она все еще остается частью активной области, либо доступ к ней запрещен.</exception>
        <exception cref="T:System.IO.IOException">Не удалось выполнить запрос, так как возникла неожиданная ошибка ввода-вывода.  
  
-или- 
Не удалось удалить область, указанную параметром <paramref name="path" />.</exception>
        <exception cref="T:System.ObjectDisposedException">Метод был вызван после удаления последовательности.</exception>
        <exception cref="T:System.OutOfMemoryException">Недостаточно памяти, чтобы продолжить выполнение программы.</exception>
        <exception cref="T:System.IO.Log.SequenceFullException">Последовательность записей заполнена.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Доступ к заданному хранилищу журнала запрещен операционной системой.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.LogExtentCollection.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает перечислитель для экземпляров <see cref="T:System.IO.Log.LogExtent" /> в этой коллекции. Наследовать этот метод нельзя.</summary>
        <returns>Перечислитель для экземпляров <see cref="T:System.IO.Log.LogExtent" /> в этой коллекции.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
