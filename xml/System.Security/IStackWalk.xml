<Type Name="IStackWalk" FullName="System.Security.IStackWalk">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b99905bd594da9cbaa59becfb187520b823e57d1" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75161433" /></Metadata><TypeSignature Language="C#" Value="public interface IStackWalk" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IStackWalk" />
  <TypeSignature Language="DocId" Value="T:System.Security.IStackWalk" />
  <TypeSignature Language="VB.NET" Value="Public Interface IStackWalk" />
  <TypeSignature Language="C++ CLI" Value="public interface class IStackWalk" />
  <TypeSignature Language="F#" Value="type IStackWalk = interface" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Permissions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Управляет проверкой стека, которая определяет, имеют ли все вызывающие объекты в стеке вызовов разрешения, необходимые для доступа к защищенному ресурсу.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Частично доверенный код всегда представляет угрозу безопасности. Иногда ее можно использовать для выполнения действий от имени вредоносного кода, который не имеет разрешения на доступ к ресурсу. Таким образом, вредоносный код может обеспечить более высокий уровень безопасности, чем он должен быть разрешен.  
  
 Среда CLR помогает защитить управляемый код от таких атак, выполняя проверку стека для всех вызовов. Проверка стека требует, чтобы весь код в стеке вызовов получил разрешение на доступ к защищенному ресурсу. Поскольку код, пытающийся атаку, всегда находится где-то в стеке вызовов, он не сможет превышать собственные разрешения безопасности.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Assert">
      <MemberSignature Language="C#" Value="public void Assert ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Assert() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.IStackWalk.Assert" />
      <MemberSignature Language="VB.NET" Value="Public Sub Assert ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Assert();" />
      <MemberSignature Language="F#" Value="abstract member Assert : unit -&gt; unit" Usage="iStackWalk.Assert " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Подтверждает, что вызывающий код может получить доступ к ресурсу, определяемому текущим объектом разрешения, даже если вызывающим объектам выше в стеке вызовов не предоставлено разрешение на доступ к ресурсу.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Вызов <xref:System.Security.IStackWalk.Assert%2A> останавливает проверку разрешений для вызывающих объектов выше в стеке вызовов. Таким образом, даже если эти вызывающие объекты не имеют необходимых разрешений, они по-прежнему могут обращаться к ресурсам. Утверждение вступает в силу только в том случае, если код, вызывающий <xref:System.Security.IStackWalk.Assert%2A>, проходит проверку безопасности для разрешения, которое он утверждает.  
  
 Вызов <xref:System.Security.IStackWalk.Assert%2A> действует до тех пор, пока вызывающий код не вернется в вызывающий объект или пока последующий вызов <xref:System.Security.IStackWalk.Assert%2A> не выводит предыдущее утверждение. Кроме того, <xref:System.Security.CodeAccessPermission.RevertAssert%2A> или <xref:System.Security.CodeAccessPermission.RevertAll%2A> удаляет ожидающие <xref:System.Security.IStackWalk.Assert%2A>.  
  
 <xref:System.Security.IStackWalk.Assert%2A> не учитывается для разрешения, которое не предоставлено, так как запрос на это разрешение не будет выполнен. Однако если код, расположенный ниже в стеке вызовов, вызывает <xref:System.Security.IStackWalk.Demand%2A> для этого разрешения, то при достижении проходом стека кода, который пытался вызвать <xref:System.Security.IStackWalk.Assert%2A>, выдается <xref:System.Security.SecurityException>. Это происходит потому, что коду, вызвавшему <xref:System.Security.IStackWalk.Assert%2A>, не предоставлено разрешение, хотя он пытался <xref:System.Security.IStackWalk.Assert%2A> его.  
  
> [!CAUTION]
>  Поскольку вызов <xref:System.Security.IStackWalk.Assert%2A> устраняет необходимость предоставления всем коду в цепочке вызовов разрешения на доступ к указанному ресурсу, он может открыть уязвимости системы безопасности при неправильном или ненадлежащем использовании. Поэтому его следует использовать с большой осторожностью.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">У вызывающего кода отсутствует <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Assertion" />.</exception>
        <related type="Article" href="~/docs/framework/misc/using-the-assert-method.md">Использование метода Assert</related>
      </Docs>
    </Member>
    <Member MemberName="Demand">
      <MemberSignature Language="C#" Value="public void Demand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Demand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.IStackWalk.Demand" />
      <MemberSignature Language="VB.NET" Value="Public Sub Demand ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Demand();" />
      <MemberSignature Language="F#" Value="abstract member Demand : unit -&gt; unit" Usage="iStackWalk.Demand " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Определяет во время выполнения, было ли разрешение, указанное текущим объектом разрешений, предоставлено всем вызывающим методам в стеке вызовов.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод обычно используется безопасными библиотеками, чтобы убедиться, что вызывающие объекты имеют разрешение на доступ к ресурсу. Например, класс файла в безопасной библиотеке классов вызывает <xref:System.Security.IStackWalk.Demand%2A> для необходимых <xref:System.Security.Permissions.FileIOPermission> перед выполнением операции с файлом, запрошенной вызывающим объектом.  
  
 Разрешения кода, вызывающего этот метод, не проверяются; проверка начинается с непосредственного вызывающего объекта этого кода и продолжается вверх по стеку. <xref:System.Security.IStackWalk.Demand%2A> считается выполненным, только если <xref:System.Security.SecurityException> не возникает.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">Вызывающий метод, расположенный выше в стеке вызовов, не имеет разрешения, указанного текущим объектом разрешений.  
  
-или- 
Вызывающий метод в стеке вызовов вызвал <see cref="M:System.Security.IStackWalk.Deny" /> в текущем объекте разрешений.</exception>
      </Docs>
    </Member>
    <Member MemberName="Deny">
      <MemberSignature Language="C#" Value="public void Deny ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Deny() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.IStackWalk.Deny" />
      <MemberSignature Language="VB.NET" Value="Public Sub Deny ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Deny();" />
      <MemberSignature Language="F#" Value="abstract member Deny : unit -&gt; unit" Usage="iStackWalk.Deny " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Вызывает ошибку каждого <see cref="M:System.Security.IStackWalk.Demand" /> для текущего объекта, проходящего через вызывающий код.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод не позволяет вызывающим объектам, находящихся выше в стеке вызовов, получить доступ к защищенному ресурсу через код, вызывающий этот метод, даже если этим вызывающим объектам предоставлено разрешение на доступ к нему. Стек вызовов обычно представляется как увеличивающийся, поэтому методы, набольшиеся в методах вызова стека вызовов, располагаются ниже в стеке вызовов.  
  
 <xref:System.Security.IStackWalk.Deny%2A> может ограничить ответственность программиста или предотвратить случайные уязвимости в системе безопасности, так как она помогает предотвратить использование метода, вызывающего <xref:System.Security.IStackWalk.Deny%2A>, для доступа к ресурсу, защищенному с помощью запрещенного разрешения. Если метод вызывает <xref:System.Security.IStackWalk.Deny%2A> для разрешения, а <xref:System.Security.IStackWalk.Demand%2A> для этого разрешения вызывается вызывающим объектом ниже в стеке вызовов, проверка безопасности завершится ошибкой, когда достигается <xref:System.Security.IStackWalk.Deny%2A>.  
  
 <xref:System.Security.IStackWalk.Deny%2A> не учитывается для разрешения, которое не предоставлено, так как запрос на это разрешение не будет выполнен.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Этот метод нельзя переопределить.</para></block>
      </Docs>
    </Member>
    <Member MemberName="PermitOnly">
      <MemberSignature Language="C#" Value="public void PermitOnly ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PermitOnly() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.IStackWalk.PermitOnly" />
      <MemberSignature Language="VB.NET" Value="Public Sub PermitOnly ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PermitOnly();" />
      <MemberSignature Language="F#" Value="abstract member PermitOnly : unit -&gt; unit" Usage="iStackWalk.PermitOnly " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Вызывает сбой всех <see cref="M:System.Security.IStackWalk.Demand" /> для всех объектов, кроме текущего, проходящих через вызывающий код, даже если коду выше в стеке вызовов было предоставлено разрешение на доступ к другим ресурсам.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.IStackWalk.PermitOnly%2A> похожа на <xref:System.Security.IStackWalk.Deny%2A>, в результате чего в обоих случаях происходит сбой проверки стека, если в противном случае они будут успешными. Разница заключается в том, что <xref:System.Security.IStackWalk.Deny%2A> указывает разрешения, которые приведут к сбою при анализе стека, но <xref:System.Security.IStackWalk.PermitOnly%2A> задает единственные разрешения, которые не приводят к сбою при анализе стека. Вызовите этот метод, чтобы убедиться, что код можно использовать для доступа только к указанным ресурсам.  
  
 <xref:System.Security.IStackWalk.PermitOnly%2A> не учитывается для разрешения, которое не предоставлено, так как запрос на это разрешение не будет выполнен. Однако если код ниже в стеке вызовов позже вызывает <xref:System.Security.IStackWalk.Demand%2A> для этого разрешения, то при достижении проходом стека кода, который пытался вызвать <xref:System.Security.IStackWalk.PermitOnly%2A>, выдается <xref:System.Security.SecurityException>. Это связано с тем, что код, вызвавший <xref:System.Security.IStackWalk.PermitOnly%2A>, не предоставил разрешение, хотя он называется <xref:System.Security.IStackWalk.PermitOnly%2A> для этого разрешения. Стек вызовов обычно представляется как увеличивающийся, поэтому методы, набольшиеся в методах вызова стека вызовов, располагаются ниже в стеке вызовов.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
