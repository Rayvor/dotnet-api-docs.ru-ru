<Type Name="IStackWalk" FullName="System.Security.IStackWalk">
  <Metadata><Meta Name="ms.openlocfilehash" Value="483fd0c19eb94202f890b134abe0af6b4d2336e7" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69161702" /></Metadata><TypeSignature Language="C#" Value="public interface IStackWalk" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IStackWalk" />
  <TypeSignature Language="DocId" Value="T:System.Security.IStackWalk" />
  <TypeSignature Language="VB.NET" Value="Public Interface IStackWalk" />
  <TypeSignature Language="C++ CLI" Value="public interface class IStackWalk" />
  <TypeSignature Language="F#" Value="type IStackWalk = interface" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Permissions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Управляет проверкой стека для определения того, все ли вызывающие элементы в стеке обладают необходимыми разрешениями на доступ к защищенному ресурсу.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Частично доверенный код всегда представляет угрозу безопасности. Иногда ее можно использовать для выполнения действий от имени вредоносного кода, который не имеет разрешения на доступ к ресурсу. Таким образом, вредоносный код может обеспечить более высокий уровень безопасности, чем он должен быть разрешен.  
  
 Среда CLR помогает защитить управляемый код от таких атак, выполняя проверку стека для всех вызовов. Проверка стека требует, чтобы весь код в стеке вызовов получил разрешение на доступ к защищенному ресурсу. Поскольку код, пытающийся атаку, всегда находится где-то в стеке вызовов, он не сможет превышать собственные разрешения безопасности.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Assert">
      <MemberSignature Language="C#" Value="public void Assert ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Assert() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.IStackWalk.Assert" />
      <MemberSignature Language="VB.NET" Value="Public Sub Assert ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Assert();" />
      <MemberSignature Language="F#" Value="abstract member Assert : unit -&gt; unit" Usage="iStackWalk.Assert " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Утверждает, что вызывающий код может получить доступ к ресурсу, определяемому текущим объектом разрешений, даже если расположенные выше в стеке вызывающие элементы не имеют разрешения на доступ к этому ресурсу.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Вызов <xref:System.Security.IStackWalk.Assert%2A> останавливает проверку разрешений для вызывающих объектов выше в стеке вызовов. Таким образом, даже если эти вызывающие объекты не имеют необходимых разрешений, они по-прежнему могут обращаться к ресурсам. Утверждение вступает в силу только в том случае, если код <xref:System.Security.IStackWalk.Assert%2A> , вызывающий, передает проверку безопасности для разрешения, которое он утверждает.  
  
 Вызов <xref:System.Security.IStackWalk.Assert%2A> вступает в силу до тех пор, пока вызывающий код не вернется в вызывающий его <xref:System.Security.IStackWalk.Assert%2A> вызов или пока последующий вызов не выводит предыдущее утверждение. Кроме того <xref:System.Security.CodeAccessPermission.RevertAssert%2A> , <xref:System.Security.CodeAccessPermission.RevertAll%2A> или удаляет ожидание <xref:System.Security.IStackWalk.Assert%2A>.  
  
 <xref:System.Security.IStackWalk.Assert%2A>не учитывается для разрешения, которое не предоставлено, так как запрос на это разрешение не будет выполнен. Однако если в коде ниже вызовов <xref:System.Security.IStackWalk.Demand%2A> стека вызовов для этого разрешения <xref:System.Security.SecurityException> , то при достижении проходом стека кода, который пытался вызвать <xref:System.Security.IStackWalk.Assert%2A>, возникает исключение. Это происходит потому, что вызывающему <xref:System.Security.IStackWalk.Assert%2A> коду не было предоставлено разрешение, несмотря на то, что <xref:System.Security.IStackWalk.Assert%2A> он пытался выполнить его.  
  
> [!CAUTION]
>  Поскольку вызов <xref:System.Security.IStackWalk.Assert%2A> удаляет требование, что весь код в цепочке вызовов должен иметь разрешение на доступ к указанному ресурсу, он может открыть уязвимости системы безопасности, если они используются неправильно или ненадлежащим образом. Поэтому его следует использовать с большой осторожностью.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">У вызывающего кода отсутствует <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Assertion" />.</exception>
        <related type="Article" href="~/docs/framework/misc/using-the-assert-method.md">Использование метода Assert</related>
      </Docs>
    </Member>
    <Member MemberName="Demand">
      <MemberSignature Language="C#" Value="public void Demand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Demand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.IStackWalk.Demand" />
      <MemberSignature Language="VB.NET" Value="Public Sub Demand ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Demand();" />
      <MemberSignature Language="F#" Value="abstract member Demand : unit -&gt; unit" Usage="iStackWalk.Demand " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Определяет во время выполнения, все ли вызывающие объекты в стеке вызова обладают разрешением, указанным в текущем объекте разрешений.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод обычно используется безопасными библиотеками, чтобы убедиться, что вызывающие объекты имеют разрешение на доступ к ресурсу. Например, класс файла в безопасной библиотеке классов вызывает <xref:System.Security.IStackWalk.Demand%2A> необходимую <xref:System.Security.Permissions.FileIOPermission> перед выполнением операции с файлом, запрошенной вызывающим объектом.  
  
 Разрешения кода, вызывающего этот метод, не проверяются; проверка начинается с непосредственного вызывающего объекта этого кода и продолжается вверх по стеку. <xref:System.Security.IStackWalk.Demand%2A>может выполняться, только если <xref:System.Security.SecurityException> не возникло исключение.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">У вызывающего объекта, находящегося выше в стеке вызова, нет разрешения, указанного в текущем объекте разрешений.  
  
- или - 
Вызывающий код в стеке вызова вызвал метод <see cref="M:System.Security.IStackWalk.Deny" /> для текущего объекта разрешений.</exception>
      </Docs>
    </Member>
    <Member MemberName="Deny">
      <MemberSignature Language="C#" Value="public void Deny ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Deny() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.IStackWalk.Deny" />
      <MemberSignature Language="VB.NET" Value="Public Sub Deny ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Deny();" />
      <MemberSignature Language="F#" Value="abstract member Deny : unit -&gt; unit" Usage="iStackWalk.Deny " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Принудительно блокирует каждый проходящий через вызывающий код вызов метода <see cref="M:System.Security.IStackWalk.Demand" /> для текущего объекта.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод не позволяет вызывающим объектам, находящихся выше в стеке вызовов, получить доступ к защищенному ресурсу через код, вызывающий этот метод, даже если этим вызывающим объектам предоставлено разрешение на доступ к нему. Стек вызовов обычно представляется как увеличивающийся, поэтому методы, набольшиеся в методах вызова стека вызовов, располагаются ниже в стеке вызовов.  
  
 <xref:System.Security.IStackWalk.Deny%2A>может ограничить ответственность программиста или помочь предотвратить случайные уязвимости системы безопасности, так как она помогает предотвратить использование метода <xref:System.Security.IStackWalk.Deny%2A> , который вызывает метод, для доступа к ресурсу, защищенному с помощью запрещенного разрешения. Если метод вызывает <xref:System.Security.IStackWalk.Deny%2A> разрешение, и если объект <xref:System.Security.IStackWalk.Demand%2A> для этого разрешения вызывается вызывающим объектом ниже в стеке вызовов, проверка безопасности завершится <xref:System.Security.IStackWalk.Deny%2A>ошибкой, когда достигает.  
  
 <xref:System.Security.IStackWalk.Deny%2A>не учитывается для разрешения, которое не предоставлено, так как запрос на это разрешение не будет выполнен.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Этот метод нельзя переопределить.</para></block>
      </Docs>
    </Member>
    <Member MemberName="PermitOnly">
      <MemberSignature Language="C#" Value="public void PermitOnly ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PermitOnly() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.IStackWalk.PermitOnly" />
      <MemberSignature Language="VB.NET" Value="Public Sub PermitOnly ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PermitOnly();" />
      <MemberSignature Language="F#" Value="abstract member PermitOnly : unit -&gt; unit" Usage="iStackWalk.PermitOnly " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Принудительно блокирует все проходящие через вызывающий код вызовы <see cref="M:System.Security.IStackWalk.Demand" /> для всех объектов, кроме текущего, даже если расположенный выше в стеке вызовов код обладает разрешениями на доступ к другим ресурсам.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.IStackWalk.PermitOnly%2A>аналогичен <xref:System.Security.IStackWalk.Deny%2A>, в том, что обе вызывают ошибку стека, если в противном случае они будут успешными. Разница заключается в том <xref:System.Security.IStackWalk.Deny%2A> , что указывает разрешения, которые приведут к сбою при анализе <xref:System.Security.IStackWalk.PermitOnly%2A> стека, но задает только те разрешения, которые не приводят к сбою при анализе стека. Вызовите этот метод, чтобы убедиться, что код можно использовать для доступа только к указанным ресурсам.  
  
 <xref:System.Security.IStackWalk.PermitOnly%2A>не учитывается для разрешения, которое не предоставлено, так как запрос на это разрешение не будет выполнен. Однако если код, расположенный ниже в стеке вызовов, <xref:System.Security.IStackWalk.Demand%2A> последующий вызовет для <xref:System.Security.SecurityException> этого разрешения, то при достижении проходом стека кода, <xref:System.Security.IStackWalk.PermitOnly%2A>который пытался вызвать, возникает исключение. Это вызвано тем, что вызывающему <xref:System.Security.IStackWalk.PermitOnly%2A> коду не было предоставлено разрешение, хотя он вызывается <xref:System.Security.IStackWalk.PermitOnly%2A> для этого разрешения. Стек вызовов обычно представляется как увеличивающийся, поэтому методы, набольшиеся в методах вызова стека вызовов, располагаются ниже в стеке вызовов.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
