<Type Name="SecurityElement" FullName="System.Security.SecurityElement">
  <Metadata><Meta Name="ms.openlocfilehash" Value="aada18079c14a31383b20458ba57bd6da6cd0647" /><Meta Name="ms.sourcegitcommit" Value="367e1eae0725e6da7136cd073aaa856ded5d5c29" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="12/13/2019" /><Meta Name="ms.locfileid" Value="75027981" /></Metadata><TypeSignature Language="C#" Value="public sealed class SecurityElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit SecurityElement extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Security.SecurityElement" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SecurityElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class SecurityElement sealed" />
  <TypeSignature Language="F#" Value="type SecurityElement = class" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Permissions</AssemblyName>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="f4c5a-101">Представляет объектную модель XML для кодирования объектов безопасности.</span><span class="sxs-lookup"><span data-stu-id="f4c5a-101">Represents the XML object model for encoding security objects.</span></span> <span data-ttu-id="f4c5a-102">Этот класс не наследуется.</span><span class="sxs-lookup"><span data-stu-id="f4c5a-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4c5a-103">Этот класс предназначен для упрощенной реализации простой объектной модели XML для использования в системе безопасности, а не для использования в качестве общей объектной модели XML.</span><span class="sxs-lookup"><span data-stu-id="f4c5a-103">This class is intended to be a lightweight implementation of a simple XML object model for use within the security system, and not for use as a general XML object model.</span></span> <span data-ttu-id="f4c5a-104">В этой документации предполагается наличие базовых знаний о XML.</span><span class="sxs-lookup"><span data-stu-id="f4c5a-104">This documentation assumes a basic knowledge of XML.</span></span>  
  
 <span data-ttu-id="f4c5a-105">Простая объектная модель XML для элемента состоит из следующих частей:</span><span class="sxs-lookup"><span data-stu-id="f4c5a-105">The simple XML object model for an element consists of the following parts:</span></span>  
  
-   <span data-ttu-id="f4c5a-106">Тег — это имя элемента.</span><span class="sxs-lookup"><span data-stu-id="f4c5a-106">The tag is the element name.</span></span>  
  
-   <span data-ttu-id="f4c5a-107">Атрибуты — это ноль или более пар атрибутов name/value элемента.</span><span class="sxs-lookup"><span data-stu-id="f4c5a-107">The attributes are zero or more name/value attribute pairs on the element.</span></span>  
  
-   <span data-ttu-id="f4c5a-108">Дочерние элементы — это ноль или более элементов, вложенных в `<tag>` и `</tag>`.</span><span class="sxs-lookup"><span data-stu-id="f4c5a-108">The children are zero or more elements nested within `<tag>` and `</tag>`.</span></span>  
  
 <span data-ttu-id="f4c5a-109">Настоятельно рекомендуется использовать XML-представление на основе атрибутов для выражения элементов безопасности и их значений.</span><span class="sxs-lookup"><span data-stu-id="f4c5a-109">It is strongly suggested that attribute based XML representation is used to express security elements and their values.</span></span> <span data-ttu-id="f4c5a-110">Это означает, что свойства элемента выражаются в виде атрибутов, а значения свойств выражаются как значения атрибутов.</span><span class="sxs-lookup"><span data-stu-id="f4c5a-110">This means properties of an element are expressed as attributes and property values are expressed as attribute values.</span></span> <span data-ttu-id="f4c5a-111">Избегайте вложенного текста внутри тегов.</span><span class="sxs-lookup"><span data-stu-id="f4c5a-111">Avoid nesting text within tags.</span></span> <span data-ttu-id="f4c5a-112">Для любого `<tag>text</tag>` представления обычно доступен представление типа `<tag value="text"/>`.</span><span class="sxs-lookup"><span data-stu-id="f4c5a-112">For any `<tag>text</tag>` representation a representation of type `<tag value="text"/>` is usually available.</span></span> <span data-ttu-id="f4c5a-113">Использование этого XML-представления на основе атрибутов повышает удобочитаемость и обеспечивает простое переносимость WMI для результирующей XML-сериализации.</span><span class="sxs-lookup"><span data-stu-id="f4c5a-113">Using this attribute-based XML representation increases readability and allows easy WMI portability of the resulting XML serialization.</span></span>  
  
 <span data-ttu-id="f4c5a-114">Имя атрибута должно содержать один или более символов и не может быть `null`.</span><span class="sxs-lookup"><span data-stu-id="f4c5a-114">An attribute name must be one character or longer, and cannot be `null`.</span></span> <span data-ttu-id="f4c5a-115">Если используется представление значений на основе элементов, то элементы с текстовой строкой, `null`, представлены в `<tag/>` форме. в противном случае текст отделяется маркерами `<tag>` и `</tag>`.</span><span class="sxs-lookup"><span data-stu-id="f4c5a-115">If element-based value representation is used, elements with a text string that is `null` are represented in the `<tag/>` form; otherwise, text is delimited by the `<tag>` and `</tag>` tokens.</span></span> <span data-ttu-id="f4c5a-116">Обе формы можно сочетать с атрибутами, которые отображаются при их наличии.</span><span class="sxs-lookup"><span data-stu-id="f4c5a-116">Both forms can be combined with attributes, which are shown if present.</span></span>  
  
 <span data-ttu-id="f4c5a-117">Теги, атрибуты и текст элементов, если они есть, всегда чувствительны к регистру.</span><span class="sxs-lookup"><span data-stu-id="f4c5a-117">The tags, attributes, and text of elements, if present, are always case-sensitive.</span></span> <span data-ttu-id="f4c5a-118">При необходимости форма XML содержит кавычки и escape-символы.</span><span class="sxs-lookup"><span data-stu-id="f4c5a-118">The XML form contains quotations and escapes where necessary.</span></span> <span data-ttu-id="f4c5a-119">Строковые значения, содержащие символы, недопустимые для использования в XML, приводят к <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="f4c5a-119">String values that include characters invalid for use in XML result in an <xref:System.ArgumentException>.</span></span> <span data-ttu-id="f4c5a-120">Эти правила применяются ко всем свойствам и методам.</span><span class="sxs-lookup"><span data-stu-id="f4c5a-120">These rules apply to all properties and methods.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f4c5a-121">По соображениям производительности допустимость символов проверяется только при кодировании элемента в XML-текстовую форму, а не в каждом наборе свойства или метода.</span><span class="sxs-lookup"><span data-stu-id="f4c5a-121">For performance reasons, character validity is only checked when the element is encoded into XML text form, and not on every set of a property or method.</span></span> <span data-ttu-id="f4c5a-122">Статические методы позволяют явно проверить, где это необходимо.</span><span class="sxs-lookup"><span data-stu-id="f4c5a-122">Static methods allow explicit checking where needed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f4c5a-123">В следующем примере показано использование членов класса <xref:System.Security.SecurityElement>.</span><span class="sxs-lookup"><span data-stu-id="f4c5a-123">The following example shows the use of members of the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#1](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#1)]
 [!code-csharp[SecurityElementMembers#1](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#1)]
 [!code-vb[SecurityElementMembers#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f4c5a-124">Инициализирует новый экземпляр класса <see cref="T:System.Security.SecurityElement" />.</span><span class="sxs-lookup"><span data-stu-id="f4c5a-124">Initializes a new instance of the <see cref="T:System.Security.SecurityElement" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SecurityElement (string tag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (tag As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SecurityElement(System::String ^ tag);" />
      <MemberSignature Language="F#" Value="new System.Security.SecurityElement : string -&gt; System.Security.SecurityElement" Usage="new System.Security.SecurityElement tag" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="tag" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tag"><span data-ttu-id="f4c5a-125">Имя тега элемента XML.</span><span class="sxs-lookup"><span data-stu-id="f4c5a-125">The tag name of an XML element.</span></span></param>
        <summary><span data-ttu-id="f4c5a-126">Инициализирует новый экземпляр класса <see cref="T:System.Security.SecurityElement" /> с указанным тегом.</span><span class="sxs-lookup"><span data-stu-id="f4c5a-126">Initializes a new instance of the <see cref="T:System.Security.SecurityElement" /> class with the specified tag.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4c5a-127">Параметр `tag` должен состоять из допустимого имени XML-тега.</span><span class="sxs-lookup"><span data-stu-id="f4c5a-127">The `tag` parameter must consist of a valid XML tag name.</span></span> <span data-ttu-id="f4c5a-128">Используйте <xref:System.Security.SecurityElement.Escape%2A>, чтобы удалить недопустимые символы из строки.</span><span class="sxs-lookup"><span data-stu-id="f4c5a-128">Use <xref:System.Security.SecurityElement.Escape%2A> to remove invalid characters from the string.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f4c5a-129">В следующем коде показано использование конструктора <xref:System.Security.SecurityElement.%23ctor%2A> для создания нового объекта <xref:System.Security.SecurityElement>.</span><span class="sxs-lookup"><span data-stu-id="f4c5a-129">The following code shows the use of  the <xref:System.Security.SecurityElement.%23ctor%2A> constructor to create a new <xref:System.Security.SecurityElement> object.</span></span>  <span data-ttu-id="f4c5a-130">Этот пример кода является частью большого примера, приведенного для класса <xref:System.Security.SecurityElement>.</span><span class="sxs-lookup"><span data-stu-id="f4c5a-130">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#2](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#2)]
 [!code-csharp[SecurityElementMembers#2](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#2)]
 [!code-vb[SecurityElementMembers#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f4c5a-131">Параметр <paramref name="tag" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f4c5a-131">The <paramref name="tag" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f4c5a-132">Параметр <paramref name="tag" /> недопустим в XML.</span><span class="sxs-lookup"><span data-stu-id="f4c5a-132">The <paramref name="tag" /> parameter is invalid in XML.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SecurityElement (string tag, string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string tag, string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (tag As String, text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SecurityElement(System::String ^ tag, System::String ^ text);" />
      <MemberSignature Language="F#" Value="new System.Security.SecurityElement : string * string -&gt; System.Security.SecurityElement" Usage="new System.Security.SecurityElement (tag, text)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="tag" Type="System.String" />
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tag"><span data-ttu-id="f4c5a-133">Имя тега элемента XML.</span><span class="sxs-lookup"><span data-stu-id="f4c5a-133">The tag name of the XML element.</span></span></param>
        <param name="text"><span data-ttu-id="f4c5a-134">Текстовое содержимое элемента.</span><span class="sxs-lookup"><span data-stu-id="f4c5a-134">The text content within the element.</span></span></param>
        <summary><span data-ttu-id="f4c5a-135">Инициализирует новый экземпляр класса <see cref="T:System.Security.SecurityElement" /> с указанным тегом и текстом.</span><span class="sxs-lookup"><span data-stu-id="f4c5a-135">Initializes a new instance of the <see cref="T:System.Security.SecurityElement" /> class with the specified tag and text.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4c5a-136">Если параметр `text` имеет значение `null` этот конструктор создает элемент, идентичный конструктору без параметров.</span><span class="sxs-lookup"><span data-stu-id="f4c5a-136">If the `text` parameter is `null` this constructor produces an element identical to the parameterless constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f4c5a-137">Параметр <paramref name="tag" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f4c5a-137">The <paramref name="tag" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f4c5a-138">Параметры <paramref name="tag" /> и <paramref name="text" /> недопустимы в XML.</span><span class="sxs-lookup"><span data-stu-id="f4c5a-138">The <paramref name="tag" /> parameter or <paramref name="text" /> parameter is invalid in XML.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddAttribute">
      <MemberSignature Language="C#" Value="public void AddAttribute (string name, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddAttribute(string name, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.AddAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddAttribute (name As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddAttribute(System::String ^ name, System::String ^ value);" />
      <MemberSignature Language="F#" Value="member this.AddAttribute : string * string -&gt; unit" Usage="securityElement.AddAttribute (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="f4c5a-139">Имя атрибута.</span><span class="sxs-lookup"><span data-stu-id="f4c5a-139">The name of the attribute.</span></span></param>
        <param name="value"><span data-ttu-id="f4c5a-140">Значение атрибута.</span><span class="sxs-lookup"><span data-stu-id="f4c5a-140">The value of the attribute.</span></span></param>
        <summary><span data-ttu-id="f4c5a-141">Добавляет атрибут "имя-значение" к элементу XML.</span><span class="sxs-lookup"><span data-stu-id="f4c5a-141">Adds a name/value attribute to an XML element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4c5a-142">Имена и значения в атрибутах должны содержать только допустимые символы атрибутов XML.</span><span class="sxs-lookup"><span data-stu-id="f4c5a-142">Names and values in attributes should only contain valid XML attribute characters.</span></span> <span data-ttu-id="f4c5a-143">Имена XML-атрибутов должны быть уникальными.</span><span class="sxs-lookup"><span data-stu-id="f4c5a-143">XML attribute names must be unique.</span></span> <span data-ttu-id="f4c5a-144">Используйте <xref:System.Security.SecurityElement.Escape%2A>, чтобы удалить недопустимые символы из строки.</span><span class="sxs-lookup"><span data-stu-id="f4c5a-144">Use <xref:System.Security.SecurityElement.Escape%2A> to remove invalid characters from the string.</span></span>  
  
 <span data-ttu-id="f4c5a-145">Строки, заключенные в кавычки, не поддерживаются, поэтому строки для пар "имя-значение" не должны содержать кавычек и других символов, в которых требуется заменять кавычки.</span><span class="sxs-lookup"><span data-stu-id="f4c5a-145">There is no support for quoted strings, so strings for name/value pairs should not contain quotes or other characters requiring quoting.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f4c5a-146">В следующем коде показано использование метода <xref:System.Security.SecurityElement.AddAttribute%2A> для добавления атрибута «имя-значение» к элементу XML.</span><span class="sxs-lookup"><span data-stu-id="f4c5a-146">The following code shows the use of the <xref:System.Security.SecurityElement.AddAttribute%2A> method to add a name/value attribute to an XML element.</span></span> <span data-ttu-id="f4c5a-147">Этот пример кода является частью большого примера, приведенного для класса <xref:System.Security.SecurityElement>.</span><span class="sxs-lookup"><span data-stu-id="f4c5a-147">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#4](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#4)]
 [!code-csharp[SecurityElementMembers#4](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#4)]
 [!code-vb[SecurityElementMembers#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f4c5a-148">Параметр <paramref name="name" /> или <paramref name="value" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f4c5a-148">The <paramref name="name" /> parameter or <paramref name="value" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f4c5a-149">Параметры <paramref name="name" /> и <paramref name="value" /> недопустимы в XML.</span><span class="sxs-lookup"><span data-stu-id="f4c5a-149">The <paramref name="name" /> parameter or <paramref name="value" /> parameter is invalid in XML.</span></span>  
  
<span data-ttu-id="f4c5a-150">- или -</span><span class="sxs-lookup"><span data-stu-id="f4c5a-150">-or-</span></span> 
<span data-ttu-id="f4c5a-151">Атрибут с именем, определяемым параметром <paramref name="name" />, уже существует.</span><span class="sxs-lookup"><span data-stu-id="f4c5a-151">An attribute with the name specified by the <paramref name="name" /> parameter already exists.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddChild">
      <MemberSignature Language="C#" Value="public void AddChild (System.Security.SecurityElement child);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddChild(class System.Security.SecurityElement child) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.AddChild(System.Security.SecurityElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddChild (child As SecurityElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddChild(System::Security::SecurityElement ^ child);" />
      <MemberSignature Language="F#" Value="member this.AddChild : System.Security.SecurityElement -&gt; unit" Usage="securityElement.AddChild child" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="System.Security.SecurityElement" />
      </Parameters>
      <Docs>
        <param name="child"><span data-ttu-id="f4c5a-152">Добавляемый дочерний элемент.</span><span class="sxs-lookup"><span data-stu-id="f4c5a-152">The child element to add.</span></span></param>
        <summary><span data-ttu-id="f4c5a-153">Добавляет дочерний элемент в элемент XML.</span><span class="sxs-lookup"><span data-stu-id="f4c5a-153">Adds a child element to the XML element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4c5a-154">Дочерний элемент добавляется после всех ранее существующих дочерних элементов.</span><span class="sxs-lookup"><span data-stu-id="f4c5a-154">The child element is added following any previously existing child elements.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f4c5a-155">В следующем коде показано использование метода <xref:System.Security.SecurityElement.AddChild%2A> для добавления дочернего элемента в XML-элемент.</span><span class="sxs-lookup"><span data-stu-id="f4c5a-155">The following code shows the use of the <xref:System.Security.SecurityElement.AddChild%2A> method to add a child element to the XML element.</span></span>  <span data-ttu-id="f4c5a-156">Этот пример кода является частью большого примера, приведенного для класса <xref:System.Security.SecurityElement>.</span><span class="sxs-lookup"><span data-stu-id="f4c5a-156">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#5](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#5)]
 [!code-csharp[SecurityElementMembers#5](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#5)]
 [!code-vb[SecurityElementMembers#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f4c5a-157">Параметр <paramref name="child" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f4c5a-157">The <paramref name="child" /> parameter is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Attribute">
      <MemberSignature Language="C#" Value="public string Attribute (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string Attribute(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.Attribute(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Attribute (name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ Attribute(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.Attribute : string -&gt; string" Usage="securityElement.Attribute name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="f4c5a-158">Имя атрибута для поиска.</span><span class="sxs-lookup"><span data-stu-id="f4c5a-158">The name of the attribute for which to search.</span></span></param>
        <summary><span data-ttu-id="f4c5a-159">Находит атрибут с заданным именем в элементе XML.</span><span class="sxs-lookup"><span data-stu-id="f4c5a-159">Finds an attribute by name in an XML element.</span></span></summary>
        <returns><span data-ttu-id="f4c5a-160">Значение, связанное с именованным атрибутом, или <see langword="null" />, если атрибута с именем <paramref name="name" /> не существует.</span><span class="sxs-lookup"><span data-stu-id="f4c5a-160">The value associated with the named attribute, or <see langword="null" /> if no attribute with <paramref name="name" /> exists.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4c5a-161">Используя следующий код XML, `Attribute("B")` возвратит "456".</span><span class="sxs-lookup"><span data-stu-id="f4c5a-161">With XML as follows, `Attribute("B")` would return "456".</span></span>  
  
```  
<thetag A="123" B="456" C="789">text</thetag>  
```  
  
   
  
## Examples  
 <span data-ttu-id="f4c5a-162">В следующем коде показано использование метода <xref:System.Security.SecurityElement.Attribute%2A> для поиска атрибута по имени.</span><span class="sxs-lookup"><span data-stu-id="f4c5a-162">The following code shows the use of the <xref:System.Security.SecurityElement.Attribute%2A> method to find an attribute by name.</span></span> <span data-ttu-id="f4c5a-163">Этот пример кода является частью большого примера, приведенного для класса <xref:System.Security.SecurityElement>.</span><span class="sxs-lookup"><span data-stu-id="f4c5a-163">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#13](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#13)]
 [!code-csharp[SecurityElementMembers#13](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#13)]
 [!code-vb[SecurityElementMembers#13](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f4c5a-164">Параметр <paramref name="name" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f4c5a-164">The <paramref name="name" /> parameter is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="public System.Collections.Hashtable Attributes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Hashtable Attributes" />
      <MemberSignature Language="DocId" Value="P:System.Security.SecurityElement.Attributes" />
      <MemberSignature Language="VB.NET" Value="Public Property Attributes As Hashtable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Hashtable ^ Attributes { System::Collections::Hashtable ^ get(); void set(System::Collections::Hashtable ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Attributes : System.Collections.Hashtable with get, set" Usage="System.Security.SecurityElement.Attributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Hashtable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f4c5a-165">Получает или задает атрибуты элемента XML в виде пар "имя-значение".</span><span class="sxs-lookup"><span data-stu-id="f4c5a-165">Gets or sets the attributes of an XML element as name/value pairs.</span></span></summary>
        <value><span data-ttu-id="f4c5a-166">Объект <see cref="T:System.Collections.Hashtable" /> для значений атрибутов элемента XML.</span><span class="sxs-lookup"><span data-stu-id="f4c5a-166">The <see cref="T:System.Collections.Hashtable" /> object for the attribute values of the XML element.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4c5a-167">Каждый атрибут хранится в <xref:System.Collections.Hashtable> в виде пары "имя-значение".</span><span class="sxs-lookup"><span data-stu-id="f4c5a-167">Each attribute is stored in the <xref:System.Collections.Hashtable> as a name/value pair.</span></span>  
  
 <span data-ttu-id="f4c5a-168">Имена и значения в атрибутах должны содержать только допустимые символы атрибутов XML.</span><span class="sxs-lookup"><span data-stu-id="f4c5a-168">Names and values in attributes should contain only valid XML attribute characters.</span></span> <span data-ttu-id="f4c5a-169">Используйте <xref:System.Security.SecurityElement.Escape%2A>, чтобы удалить недопустимые символы из строки.</span><span class="sxs-lookup"><span data-stu-id="f4c5a-169">Use <xref:System.Security.SecurityElement.Escape%2A> to remove invalid characters from the string.</span></span>  
  
 <span data-ttu-id="f4c5a-170">Строки, заключенные в кавычки, не поддерживаются, поэтому строки для пар "имя-значение" не должны содержать кавычек и других символов, в которых требуется заменять кавычки.</span><span class="sxs-lookup"><span data-stu-id="f4c5a-170">There is no support for quoted strings, so strings for name/value pairs should not contain quotes or other characters requiring quoting.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f4c5a-171">В следующем коде показано использование свойства <xref:System.Security.SecurityElement.Attributes%2A> для получения атрибута элемента XML.</span><span class="sxs-lookup"><span data-stu-id="f4c5a-171">The following code shows the use of the <xref:System.Security.SecurityElement.Attributes%2A> property to get an attribute of an XML element.</span></span> <span data-ttu-id="f4c5a-172">Этот пример кода является частью большого примера, приведенного для класса <xref:System.Security.SecurityElement>.</span><span class="sxs-lookup"><span data-stu-id="f4c5a-172">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#15](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#15)]
 [!code-csharp[SecurityElementMembers#15](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#15)]
 [!code-vb[SecurityElementMembers#15](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="f4c5a-173">Недопустимое имя или значение объекта <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="f4c5a-173">The name or value of the <see cref="T:System.Collections.Hashtable" /> object is invalid.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f4c5a-174">Имя атрибута XML является недопустимым.</span><span class="sxs-lookup"><span data-stu-id="f4c5a-174">The name is not a valid XML attribute name.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Children">
      <MemberSignature Language="C#" Value="public System.Collections.ArrayList Children { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ArrayList Children" />
      <MemberSignature Language="DocId" Value="P:System.Security.SecurityElement.Children" />
      <MemberSignature Language="VB.NET" Value="Public Property Children As ArrayList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ArrayList ^ Children { System::Collections::ArrayList ^ get(); void set(System::Collections::ArrayList ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Children : System.Collections.ArrayList with get, set" Usage="System.Security.SecurityElement.Children" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ArrayList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f4c5a-175">Получает или задает массив дочерних элементов данного элемента XML.</span><span class="sxs-lookup"><span data-stu-id="f4c5a-175">Gets or sets the array of child elements of the XML element.</span></span></summary>
        <value><span data-ttu-id="f4c5a-176">Упорядоченные дочерние элементы данного элемента XML в виде элементов безопасности.</span><span class="sxs-lookup"><span data-stu-id="f4c5a-176">The ordered child elements of the XML element as security elements.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4c5a-177">Если <xref:System.Security.SecurityElement> содержит как <xref:System.Security.SecurityElement.Text%2A>, так и <xref:System.Security.SecurityElement.Children%2A>, <xref:System.Security.SecurityElement.Text%2A> будет отображаться первыми.</span><span class="sxs-lookup"><span data-stu-id="f4c5a-177">If a <xref:System.Security.SecurityElement> contains both <xref:System.Security.SecurityElement.Text%2A> and <xref:System.Security.SecurityElement.Children%2A>, <xref:System.Security.SecurityElement.Text%2A> will appear first.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f4c5a-178">В следующем коде показано использование свойства <xref:System.Security.SecurityElement.Children%2A> для получения массива дочерних элементов XML-элемента.</span><span class="sxs-lookup"><span data-stu-id="f4c5a-178">The following code shows the use of the <xref:System.Security.SecurityElement.Children%2A> property to get the array of child elements of the XML element.</span></span> <span data-ttu-id="f4c5a-179">Этот пример кода является частью большого примера, приведенного для класса <xref:System.Security.SecurityElement>.</span><span class="sxs-lookup"><span data-stu-id="f4c5a-179">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#14](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#14)]
 [!code-csharp[SecurityElementMembers#14](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#14)]
 [!code-vb[SecurityElementMembers#14](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f4c5a-180">Дочерний элемент родительского узла XML равен <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f4c5a-180">A child of the XML parent node is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public System.Security.SecurityElement Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.SecurityElement Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Function Copy () As SecurityElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::SecurityElement ^ Copy();" />
      <MemberSignature Language="F#" Value="member this.Copy : unit -&gt; System.Security.SecurityElement" Usage="securityElement.Copy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.SecurityElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f4c5a-181">Создает и возвращает точную копию текущего объекта <see cref="T:System.Security.SecurityElement" />.</span><span class="sxs-lookup"><span data-stu-id="f4c5a-181">Creates and returns an identical copy of the current <see cref="T:System.Security.SecurityElement" /> object.</span></span></summary>
        <returns><span data-ttu-id="f4c5a-182">Копия текущего объекта <see cref="T:System.Security.SecurityElement" />.</span><span class="sxs-lookup"><span data-stu-id="f4c5a-182">A copy of the current <see cref="T:System.Security.SecurityElement" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4c5a-183">Копия включает как свойства <xref:System.Security.SecurityElement.Children%2A>, так и <xref:System.Security.SecurityElement.Attributes%2A>.</span><span class="sxs-lookup"><span data-stu-id="f4c5a-183">The copy includes both the <xref:System.Security.SecurityElement.Children%2A> and <xref:System.Security.SecurityElement.Attributes%2A> properties.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equal">
      <MemberSignature Language="C#" Value="public bool Equal (System.Security.SecurityElement other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Equal(class System.Security.SecurityElement other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.Equal(System.Security.SecurityElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equal (other As SecurityElement) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equal(System::Security::SecurityElement ^ other);" />
      <MemberSignature Language="F#" Value="member this.Equal : System.Security.SecurityElement -&gt; bool" Usage="securityElement.Equal other" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Security.SecurityElement" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="f4c5a-184">Объект элемента XML, с которым сравнивается текущий объект элемента XML.</span><span class="sxs-lookup"><span data-stu-id="f4c5a-184">An XML element object to which to compare the current XML element object.</span></span></param>
        <summary><span data-ttu-id="f4c5a-185">Сравнивает два объекта элементов XML, чтобы определить, равны ли они.</span><span class="sxs-lookup"><span data-stu-id="f4c5a-185">Compares two XML element objects for equality.</span></span></summary>
        <returns><span data-ttu-id="f4c5a-186"><see langword="true" />, если тег, имена и значения атрибутов, дочерние элементы и текстовые поля текущего элемента XML идентичны соответствующим составляющим параметра <paramref name="other" />; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f4c5a-186"><see langword="true" /> if the tag, attribute names and values, child elements, and text fields in the current XML element are identical to their counterparts in the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4c5a-187">Если имеются дочерние элементы, сравнение выполняется рекурсивно.</span><span class="sxs-lookup"><span data-stu-id="f4c5a-187">If there are child elements, comparison extends recursively to them.</span></span>  
  
 <span data-ttu-id="f4c5a-188">Сравнение различных XML-представлений одних и тех же символов не поддерживается.</span><span class="sxs-lookup"><span data-stu-id="f4c5a-188">There is no support for comparing different XML representations of the same characters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f4c5a-189">В следующем коде показано использование метода <xref:System.Security.SecurityElement.Equal%2A> для сравнения двух XML-элементов.</span><span class="sxs-lookup"><span data-stu-id="f4c5a-189">The following code shows the use of the <xref:System.Security.SecurityElement.Equal%2A> method to compare two XML elements.</span></span> <span data-ttu-id="f4c5a-190">Этот пример кода является частью большого примера, приведенного для класса <xref:System.Security.SecurityElement>.</span><span class="sxs-lookup"><span data-stu-id="f4c5a-190">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#22](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#22)]
 [!code-csharp[SecurityElementMembers#22](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#22)]
 [!code-vb[SecurityElementMembers#22](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#22)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Escape">
      <MemberSignature Language="C#" Value="public static string Escape (string str);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Escape(string str) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.Escape(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Escape (str As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Escape(System::String ^ str);" />
      <MemberSignature Language="F#" Value="static member Escape : string -&gt; string" Usage="System.Security.SecurityElement.Escape str" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="str"><span data-ttu-id="f4c5a-191">Строка, в которой выполняется обработка недопустимых знаков.</span><span class="sxs-lookup"><span data-stu-id="f4c5a-191">The string within which to escape invalid characters.</span></span></param>
        <summary><span data-ttu-id="f4c5a-192">Заменяет недопустимые для XML знаки в строке их допустимыми эквивалентами в XML.</span><span class="sxs-lookup"><span data-stu-id="f4c5a-192">Replaces invalid XML characters in a string with their valid XML equivalent.</span></span></summary>
        <returns><span data-ttu-id="f4c5a-193">Строка ввода с замененными недопустимыми знаками.</span><span class="sxs-lookup"><span data-stu-id="f4c5a-193">The input string with invalid characters replaced.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4c5a-194">Используйте этот метод, чтобы заменить недопустимые символы в строке перед использованием строки в <xref:System.Security.SecurityElement>.</span><span class="sxs-lookup"><span data-stu-id="f4c5a-194">Use this method to replace invalid characters in a string before using the string in a <xref:System.Security.SecurityElement>.</span></span> <span data-ttu-id="f4c5a-195">Если в <xref:System.Security.SecurityElement> используются недопустимые символы без экранирования, выдается <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="f4c5a-195">If invalid characters are used in a <xref:System.Security.SecurityElement> without being escaped, an <xref:System.ArgumentException> is thrown.</span></span>  
  
 <span data-ttu-id="f4c5a-196">В следующей таблице приведены недопустимые символы XML и их escape-эквиваленты.</span><span class="sxs-lookup"><span data-stu-id="f4c5a-196">The following table shows the invalid XML characters and their escaped equivalents.</span></span>  

| <span data-ttu-id="f4c5a-197">Недопустимый символ XML</span><span class="sxs-lookup"><span data-stu-id="f4c5a-197">Invalid XML character</span></span> | <span data-ttu-id="f4c5a-198">Заменено на</span><span class="sxs-lookup"><span data-stu-id="f4c5a-198">Replaced with</span></span> |
|-----------------------|---------------|
| `<`                   | `&lt;`        |
| `>`                   | `&gt;`        |
| `"`                   | `&quot;`      |
| `'`                   | `&apos;`      |
| `&`                   | `&amp;`       |   

## Examples  
 <span data-ttu-id="f4c5a-199">В следующем коде показано использование метода <xref:System.Security.SecurityElement.Escape%2A> для замены недопустимых символов XML в строке допустимым эквивалентом XML.</span><span class="sxs-lookup"><span data-stu-id="f4c5a-199">The following code shows the use of the <xref:System.Security.SecurityElement.Escape%2A> method to replace invalid XML characters in a string with their valid XML equivalent.</span></span> <span data-ttu-id="f4c5a-200">Этот пример кода является частью большого примера, приведенного для класса <xref:System.Security.SecurityElement>.</span><span class="sxs-lookup"><span data-stu-id="f4c5a-200">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#19](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#19)]
 [!code-csharp[SecurityElementMembers#19](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#19)]
 [!code-vb[SecurityElementMembers#19](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#19)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromString">
      <MemberSignature Language="C#" Value="public static System.Security.SecurityElement FromString (string xml);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.SecurityElement FromString(string xml) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.FromString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromString (xml As String) As SecurityElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::SecurityElement ^ FromString(System::String ^ xml);" />
      <MemberSignature Language="F#" Value="static member FromString : string -&gt; System.Security.SecurityElement" Usage="System.Security.SecurityElement.FromString xml" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.SecurityElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xml" Type="System.String" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="xml"><span data-ttu-id="f4c5a-201">Строка в XML-кодировке, на основе которой следует создать элемент безопасности.</span><span class="sxs-lookup"><span data-stu-id="f4c5a-201">The XML-encoded string from which to create the security element.</span></span></param>
        <summary><span data-ttu-id="f4c5a-202">Создает элемент безопасности на основании строки кода XML.</span><span class="sxs-lookup"><span data-stu-id="f4c5a-202">Creates a security element from an XML-encoded string.</span></span></summary>
        <returns><span data-ttu-id="f4c5a-203">Элемент <see cref="T:System.Security.SecurityElement" />, созданный на основе XML.</span><span class="sxs-lookup"><span data-stu-id="f4c5a-203">A <see cref="T:System.Security.SecurityElement" /> created from the XML.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4c5a-204">Не используйте одинарные кавычки в XML-строке. Вместо этого используйте экранированные двойные кавычки.</span><span class="sxs-lookup"><span data-stu-id="f4c5a-204">Do not use single quotation marks in the XML string; instead, use escaped double quotation marks.</span></span> <span data-ttu-id="f4c5a-205">Например, вместо "`<value name='Company'>Microsoft</value>"` использовать"`<value name=\"Company\">Microsoft</value>"`.</span><span class="sxs-lookup"><span data-stu-id="f4c5a-205">For example, instead of "`<value name='Company'>Microsoft</value>"` use "`<value name=\"Company\">Microsoft</value>"`.</span></span>  
  
 <span data-ttu-id="f4c5a-206">Использование одинарных кавычек может привести либо к возникновению исключения, либо в некоторых случаях одинарные кавычки интерпретируются как текст в строке.</span><span class="sxs-lookup"><span data-stu-id="f4c5a-206">Using single quotation marks can result in either an exception being thrown or, in some cases, the single quotation marks being treated as text in the string.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.XmlSyntaxException"><span data-ttu-id="f4c5a-207"><paramref name="xml" /> содержит один или несколько символов одинарных кавычек.</span><span class="sxs-lookup"><span data-stu-id="f4c5a-207"><paramref name="xml" /> contains one or more single quotation mark characters.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f4c5a-208">Свойство <paramref name="xml" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f4c5a-208"><paramref name="xml" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsValidAttributeName">
      <MemberSignature Language="C#" Value="public static bool IsValidAttributeName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsValidAttributeName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.IsValidAttributeName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsValidAttributeName (name As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsValidAttributeName(System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member IsValidAttributeName : string -&gt; bool" Usage="System.Security.SecurityElement.IsValidAttributeName name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="f4c5a-209">Имя атрибута, проверяемое на допустимость.</span><span class="sxs-lookup"><span data-stu-id="f4c5a-209">The attribute name to test for validity.</span></span></param>
        <summary><span data-ttu-id="f4c5a-210">Определяет, является ли строка допустимым именем атрибута.</span><span class="sxs-lookup"><span data-stu-id="f4c5a-210">Determines whether a string is a valid attribute name.</span></span></summary>
        <returns><span data-ttu-id="f4c5a-211"><see langword="true" />, если параметр <paramref name="name" /> является допустимым именем атрибута XML; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f4c5a-211"><see langword="true" /> if the <paramref name="name" /> parameter is a valid XML attribute name; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4c5a-212">Этот метод можно использовать для проверки атрибута перед его добавлением в элемент безопасности.</span><span class="sxs-lookup"><span data-stu-id="f4c5a-212">This method can be used to test an attribute before adding it to a security element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f4c5a-213">В следующем коде показано использование метода <xref:System.Security.SecurityElement.IsValidAttributeName%2A>, чтобы определить, является ли строка допустимым именем атрибута.</span><span class="sxs-lookup"><span data-stu-id="f4c5a-213">The following code shows the use of the <xref:System.Security.SecurityElement.IsValidAttributeName%2A> method to determine whether a string is a valid attribute name.</span></span> <span data-ttu-id="f4c5a-214">Этот пример кода является частью большого примера, приведенного для класса <xref:System.Security.SecurityElement>.</span><span class="sxs-lookup"><span data-stu-id="f4c5a-214">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#6](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#6)]
 [!code-csharp[SecurityElementMembers#6](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#6)]
 [!code-vb[SecurityElementMembers#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsValidAttributeValue">
      <MemberSignature Language="C#" Value="public static bool IsValidAttributeValue (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsValidAttributeValue(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.IsValidAttributeValue(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsValidAttributeValue (value As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsValidAttributeValue(System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member IsValidAttributeValue : string -&gt; bool" Usage="System.Security.SecurityElement.IsValidAttributeValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="f4c5a-215">Значение атрибута, проверяемое на допустимость.</span><span class="sxs-lookup"><span data-stu-id="f4c5a-215">The attribute value to test for validity.</span></span></param>
        <summary><span data-ttu-id="f4c5a-216">Определяет, является ли строка допустимым значением атрибута.</span><span class="sxs-lookup"><span data-stu-id="f4c5a-216">Determines whether a string is a valid attribute value.</span></span></summary>
        <returns><span data-ttu-id="f4c5a-217"><see langword="true" />, если параметр <paramref name="value" /> является допустимым значением атрибута XML; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f4c5a-217"><see langword="true" /> if the <paramref name="value" /> parameter is a valid XML attribute value; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4c5a-218">Этот метод можно использовать для проверки атрибута перед его добавлением в элемент безопасности.</span><span class="sxs-lookup"><span data-stu-id="f4c5a-218">This method can be used to test an attribute before adding it to a security element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f4c5a-219">В следующем коде показано использование метода <xref:System.Security.SecurityElement.IsValidAttributeValue%2A> для определения, является ли строка допустимым значением атрибута.</span><span class="sxs-lookup"><span data-stu-id="f4c5a-219">The following code shows the use of the <xref:System.Security.SecurityElement.IsValidAttributeValue%2A> method to determine whether a string is a valid attribute value.</span></span> <span data-ttu-id="f4c5a-220">Этот пример кода является частью большого примера, приведенного для класса <xref:System.Security.SecurityElement>.</span><span class="sxs-lookup"><span data-stu-id="f4c5a-220">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#7](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#7)]
 [!code-csharp[SecurityElementMembers#7](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#7)]
 [!code-vb[SecurityElementMembers#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsValidTag">
      <MemberSignature Language="C#" Value="public static bool IsValidTag (string tag);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsValidTag(string tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.IsValidTag(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsValidTag (tag As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsValidTag(System::String ^ tag);" />
      <MemberSignature Language="F#" Value="static member IsValidTag : string -&gt; bool" Usage="System.Security.SecurityElement.IsValidTag tag" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tag" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tag"><span data-ttu-id="f4c5a-221">Тег, проверяемый на допустимость.</span><span class="sxs-lookup"><span data-stu-id="f4c5a-221">The tag to test for validity.</span></span></param>
        <summary><span data-ttu-id="f4c5a-222">Определяет, является ли строка допустимым тегом.</span><span class="sxs-lookup"><span data-stu-id="f4c5a-222">Determines whether a string is a valid tag.</span></span></summary>
        <returns><span data-ttu-id="f4c5a-223"><see langword="true" />, если параметр <paramref name="tag" /> является допустимым тегом XML; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f4c5a-223"><see langword="true" /> if the <paramref name="tag" /> parameter is a valid XML tag; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4c5a-224">Это можно использовать для проверки <xref:System.Security.SecurityElement.Tag%2A> перед его настройкой.</span><span class="sxs-lookup"><span data-stu-id="f4c5a-224">This can be used to test a <xref:System.Security.SecurityElement.Tag%2A> before setting it.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f4c5a-225">В следующем коде показано использование метода <xref:System.Security.SecurityElement.IsValidTag%2A> для определения, является ли строка допустимым тегом атрибута.</span><span class="sxs-lookup"><span data-stu-id="f4c5a-225">The following code shows the use of the <xref:System.Security.SecurityElement.IsValidTag%2A> method to determine whether a string is a valid attribute tag.</span></span> <span data-ttu-id="f4c5a-226">Этот пример кода является частью большого примера, приведенного для класса <xref:System.Security.SecurityElement>.</span><span class="sxs-lookup"><span data-stu-id="f4c5a-226">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#10](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#10)]
 [!code-csharp[SecurityElementMembers#10](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#10)]
 [!code-vb[SecurityElementMembers#10](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsValidText">
      <MemberSignature Language="C#" Value="public static bool IsValidText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsValidText(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.IsValidText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsValidText (text As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsValidText(System::String ^ text);" />
      <MemberSignature Language="F#" Value="static member IsValidText : string -&gt; bool" Usage="System.Security.SecurityElement.IsValidText text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="f4c5a-227">Текст, проверяемый на допустимость.</span><span class="sxs-lookup"><span data-stu-id="f4c5a-227">The text to test for validity.</span></span></param>
        <summary><span data-ttu-id="f4c5a-228">Определяет, допустима ли строка в качестве текста в составе элемента XML.</span><span class="sxs-lookup"><span data-stu-id="f4c5a-228">Determines whether a string is valid as text within an XML element.</span></span></summary>
        <returns><span data-ttu-id="f4c5a-229"><see langword="true" />, если параметр <paramref name="text" /> является допустимым текстовым элементом XML; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f4c5a-229"><see langword="true" /> if the <paramref name="text" /> parameter is a valid XML text element; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4c5a-230">Этот метод можно использовать для проверки <xref:System.Security.SecurityElement.Text%2A> перед его настройкой.</span><span class="sxs-lookup"><span data-stu-id="f4c5a-230">This method can be used to test <xref:System.Security.SecurityElement.Text%2A> before setting it.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f4c5a-231">В следующем коде показано использование метода <xref:System.Security.SecurityElement.IsValidText%2A>, чтобы определить, допустима ли строка как текст XML-элемента.</span><span class="sxs-lookup"><span data-stu-id="f4c5a-231">The following code shows the use of the <xref:System.Security.SecurityElement.IsValidText%2A> method to determine whether a string is valid as XML element text.</span></span> <span data-ttu-id="f4c5a-232">Этот пример кода является частью большого примера, приведенного для класса <xref:System.Security.SecurityElement>.</span><span class="sxs-lookup"><span data-stu-id="f4c5a-232">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#9](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#9)]
 [!code-csharp[SecurityElementMembers#9](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#9)]
 [!code-vb[SecurityElementMembers#9](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SearchForChildByTag">
      <MemberSignature Language="C#" Value="public System.Security.SecurityElement SearchForChildByTag (string tag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.SecurityElement SearchForChildByTag(string tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.SearchForChildByTag(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SearchForChildByTag (tag As String) As SecurityElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::SecurityElement ^ SearchForChildByTag(System::String ^ tag);" />
      <MemberSignature Language="F#" Value="member this.SearchForChildByTag : string -&gt; System.Security.SecurityElement" Usage="securityElement.SearchForChildByTag tag" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.SecurityElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tag" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tag"><span data-ttu-id="f4c5a-233">Тег, для которого нужно выполнить поиск среди дочерних элементов.</span><span class="sxs-lookup"><span data-stu-id="f4c5a-233">The tag for which to search in child elements.</span></span></param>
        <summary><span data-ttu-id="f4c5a-234">Выполняет поиск дочернего элемента по имени тега.</span><span class="sxs-lookup"><span data-stu-id="f4c5a-234">Finds a child by its tag name.</span></span></summary>
        <returns><span data-ttu-id="f4c5a-235">Первый дочерний элемент XML с указанным значением тега или <see langword="null" />, если дочернего элемента с тегом <paramref name="tag" /> не существует.</span><span class="sxs-lookup"><span data-stu-id="f4c5a-235">The first child XML element with the specified tag value, or <see langword="null" /> if no child element with <paramref name="tag" /> exists.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4c5a-236">При использовании XML, как показано ниже, `SearchForChildByTag("second")` возвращать дочерний элемент `<second>`.</span><span class="sxs-lookup"><span data-stu-id="f4c5a-236">With XML as follows, `SearchForChildByTag("second")` would return the child element `<second>`.</span></span>  
  
```  
<thetag A="123" B="456" C="789"> <first>text1</first>  
       <second>text2</second></thetag>  
```  
  
   
  
## Examples  
 <span data-ttu-id="f4c5a-237">В следующем коде показано использование метода <xref:System.Security.SecurityElement.SearchForChildByTag%2A> для поиска дочернего элемента по имени тега.</span><span class="sxs-lookup"><span data-stu-id="f4c5a-237">The following code shows the use of the <xref:System.Security.SecurityElement.SearchForChildByTag%2A> method to find a child by its tag name.</span></span> <span data-ttu-id="f4c5a-238">Этот пример кода является частью большого примера, приведенного для класса <xref:System.Security.SecurityElement>.</span><span class="sxs-lookup"><span data-stu-id="f4c5a-238">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#17](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#17)]
 [!code-csharp[SecurityElementMembers#17](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#17)]
 [!code-vb[SecurityElementMembers#17](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#17)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f4c5a-239">Параметр <paramref name="tag" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f4c5a-239">The <paramref name="tag" /> parameter is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SearchForTextOfTag">
      <MemberSignature Language="C#" Value="public string SearchForTextOfTag (string tag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string SearchForTextOfTag(string tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.SearchForTextOfTag(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SearchForTextOfTag (tag As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ SearchForTextOfTag(System::String ^ tag);" />
      <MemberSignature Language="F#" Value="member this.SearchForTextOfTag : string -&gt; string" Usage="securityElement.SearchForTextOfTag tag" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tag" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tag"><span data-ttu-id="f4c5a-240">Тег, для которого нужно выполнить поиск среди дочерних элементов.</span><span class="sxs-lookup"><span data-stu-id="f4c5a-240">The tag for which to search in child elements.</span></span></param>
        <summary><span data-ttu-id="f4c5a-241">Выполняет поиск дочернего элемента по имени тега и возвращает содержащийся в элементе текст.</span><span class="sxs-lookup"><span data-stu-id="f4c5a-241">Finds a child by its tag name and returns the contained text.</span></span></summary>
        <returns><span data-ttu-id="f4c5a-242">Текстовое содержимое первого дочернего элемента с указанным значением тега.</span><span class="sxs-lookup"><span data-stu-id="f4c5a-242">The text contents of the first child element with the specified tag value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4c5a-243">Этот метод эквивалентен следующему:</span><span class="sxs-lookup"><span data-stu-id="f4c5a-243">This method is equivalent to the following:</span></span>  
  
 [!code-cpp[System.Security.SecurityElement#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.security.securityelement/cpp/remarks.cpp#1)]
 [!code-csharp[System.Security.SecurityElement#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.security.securityelement/cs/remarks.cs#1)]
 [!code-vb[System.Security.SecurityElement#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.security.securityelement/vb/remarks.vb#1)]  
  
 <span data-ttu-id="f4c5a-244">При использовании XML, как показано ниже, `SearchForTextOfTag("second")` вернет «текст2».</span><span class="sxs-lookup"><span data-stu-id="f4c5a-244">With XML as follows, `SearchForTextOfTag("second")` would return "text2".</span></span>  
  
```  
<thetag A="123" B="456" C="789"> <first>text1</first>  
    <second>text2</second></thetag>  
```  
  
   
  
## Examples  
 <span data-ttu-id="f4c5a-245">В следующем коде показано использование метода <xref:System.Security.SecurityElement.SearchForTextOfTag%2A> для поиска дочернего элемента по имени тега и возвращения содержащегося текста.</span><span class="sxs-lookup"><span data-stu-id="f4c5a-245">The following code shows the use of the <xref:System.Security.SecurityElement.SearchForTextOfTag%2A> method to find a child by its tag name and return the contained text.</span></span> <span data-ttu-id="f4c5a-246">Этот пример кода является частью большого примера, приведенного для класса <xref:System.Security.SecurityElement>.</span><span class="sxs-lookup"><span data-stu-id="f4c5a-246">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#18](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#18)]
 [!code-csharp[SecurityElementMembers#18](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#18)]
 [!code-vb[SecurityElementMembers#18](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#18)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f4c5a-247">Свойство <paramref name="tag" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f4c5a-247"><paramref name="tag" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Tag">
      <MemberSignature Language="C#" Value="public string Tag { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Tag" />
      <MemberSignature Language="DocId" Value="P:System.Security.SecurityElement.Tag" />
      <MemberSignature Language="VB.NET" Value="Public Property Tag As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Tag { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Tag : string with get, set" Usage="System.Security.SecurityElement.Tag" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f4c5a-248">Получает или задает имя тега элемента XML.</span><span class="sxs-lookup"><span data-stu-id="f4c5a-248">Gets or sets the tag name of an XML element.</span></span></summary>
        <value><span data-ttu-id="f4c5a-249">Имя тега элемента XML.</span><span class="sxs-lookup"><span data-stu-id="f4c5a-249">The tag name of an XML element.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4c5a-250">В XML тег отображается в скрипте, как показано ниже:</span><span class="sxs-lookup"><span data-stu-id="f4c5a-250">In XML, the tag appears in the script as appears below:</span></span>  
  
```  
<tag attributes>text</tag>  
```  
  
 <span data-ttu-id="f4c5a-251">Если этот элемент имеет дочерние элементы, потомки заменяют `text`.</span><span class="sxs-lookup"><span data-stu-id="f4c5a-251">If this element has child elements, the children will replace `text`.</span></span>  
  
 <span data-ttu-id="f4c5a-252">Присвоить этому свойству только допустимые строки XML-тегов.</span><span class="sxs-lookup"><span data-stu-id="f4c5a-252">Assign only valid XML tag strings to this property.</span></span> <span data-ttu-id="f4c5a-253">Используйте <xref:System.Security.SecurityElement.Escape%2A>, чтобы удалить недопустимые символы из строки.</span><span class="sxs-lookup"><span data-stu-id="f4c5a-253">Use <xref:System.Security.SecurityElement.Escape%2A> to remove invalid characters from the string.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f4c5a-254">В следующем коде показано использование свойства <xref:System.Security.SecurityElement.Tag%2A> для получения имени тега XML-элемента.</span><span class="sxs-lookup"><span data-stu-id="f4c5a-254">The following code shows the use of the <xref:System.Security.SecurityElement.Tag%2A> property to get the tag name of an XML element.</span></span> <span data-ttu-id="f4c5a-255">Этот пример кода является частью большого примера, приведенного для класса <xref:System.Security.SecurityElement>.</span><span class="sxs-lookup"><span data-stu-id="f4c5a-255">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#11](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#11)]
 [!code-csharp[SecurityElementMembers#11](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#11)]
 [!code-vb[SecurityElementMembers#11](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f4c5a-256">Значение тега равно <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f4c5a-256">The tag is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f4c5a-257">Тег не является допустимым в XML.</span><span class="sxs-lookup"><span data-stu-id="f4c5a-257">The tag is not valid in XML.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Security.SecurityElement.Text" />
      <MemberSignature Language="VB.NET" Value="Public Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Text : string with get, set" Usage="System.Security.SecurityElement.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f4c5a-258">Получает или задает текст внутри элемента XML.</span><span class="sxs-lookup"><span data-stu-id="f4c5a-258">Gets or sets the text within an XML element.</span></span></summary>
        <value><span data-ttu-id="f4c5a-259">Значение текста внутри элемента XML.</span><span class="sxs-lookup"><span data-stu-id="f4c5a-259">The value of the text within an XML element.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4c5a-260">Текст не должен содержать специальные символы XML.</span><span class="sxs-lookup"><span data-stu-id="f4c5a-260">The text should not contain XML special characters.</span></span> <span data-ttu-id="f4c5a-261">Используйте <xref:System.Security.SecurityElement.Escape%2A>, чтобы удалить недопустимые символы из строки.</span><span class="sxs-lookup"><span data-stu-id="f4c5a-261">Use <xref:System.Security.SecurityElement.Escape%2A> to remove invalid characters from the string.</span></span>  
  
 <span data-ttu-id="f4c5a-262">Если <xref:System.Security.SecurityElement> содержит как <xref:System.Security.SecurityElement.Text%2A>, так и <xref:System.Security.SecurityElement.Children%2A>, <xref:System.Security.SecurityElement.Text%2A> будет отображаться первыми.</span><span class="sxs-lookup"><span data-stu-id="f4c5a-262">If a <xref:System.Security.SecurityElement> contains both <xref:System.Security.SecurityElement.Text%2A> and <xref:System.Security.SecurityElement.Children%2A>, <xref:System.Security.SecurityElement.Text%2A> will appear first.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f4c5a-263">В следующем коде показано использование свойства <xref:System.Security.SecurityElement.Text%2A> для получения текста элемента XML.</span><span class="sxs-lookup"><span data-stu-id="f4c5a-263">The following code shows the use of the <xref:System.Security.SecurityElement.Text%2A> property to get the text of an XML element.</span></span> <span data-ttu-id="f4c5a-264">Этот пример кода является частью большого примера, приведенного для класса <xref:System.Security.SecurityElement>.</span><span class="sxs-lookup"><span data-stu-id="f4c5a-264">This code example is part of a larger example provided for the <xref:System.Security.SecurityElement> class.</span></span>  
  
 [!code-cpp[SecurityElementMembers#12](~/samples/snippets/cpp/VS_Snippets_CLR/SecurityElementMembers/CPP/SecurityElementMembers.cpp#12)]
 [!code-csharp[SecurityElementMembers#12](~/samples/snippets/csharp/VS_Snippets_CLR/SecurityElementMembers/CS/securityelementmembers.cs#12)]
 [!code-vb[SecurityElementMembers#12](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecurityElementMembers/VB/Form1.vb#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f4c5a-265">Текст не является допустимым в XML.</span><span class="sxs-lookup"><span data-stu-id="f4c5a-265">The text is not valid in XML.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityElement.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="securityElement.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f4c5a-266">Выдает строковое представление элемента XML вместе с атрибутами, дочерними элементами и текстом.</span><span class="sxs-lookup"><span data-stu-id="f4c5a-266">Produces a string representation of an XML element and its constituent attributes, child elements, and text.</span></span></summary>
        <returns><span data-ttu-id="f4c5a-267">Элемент XML и его содержимое.</span><span class="sxs-lookup"><span data-stu-id="f4c5a-267">The XML element and its contents.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4c5a-268">Этот метод полезен при отладке для просмотра XML-представления элемента.</span><span class="sxs-lookup"><span data-stu-id="f4c5a-268">This method is useful in debugging to see the XML representation of the element.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
