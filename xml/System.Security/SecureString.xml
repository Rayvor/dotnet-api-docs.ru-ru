<Type Name="SecureString" FullName="System.Security.SecureString">
  <Metadata><Meta Name="ms.openlocfilehash" Value="96bc424553b906350ab42e30474aa7eb58c02455" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70688466" /></Metadata><TypeSignature Language="C#" Value="public sealed class SecureString : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed SecureString extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Security.SecureString" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SecureString&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class SecureString sealed : IDisposable" />
  <TypeSignature Language="F#" Value="type SecureString = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Security.SecureString</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.InteropServices</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="1f918-101">Представляет текст, который должен оставаться конфиденциальным, например, путем его удаления из памяти компьютера, если он больше не нужен.</span><span class="sxs-lookup"><span data-stu-id="1f918-101">Represents text that should be kept confidential, such as by deleting it from computer memory when no longer needed.</span></span> <span data-ttu-id="1f918-102">Этот класс не наследуется.</span><span class="sxs-lookup"><span data-stu-id="1f918-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  

> [!IMPORTANT]
>  <span data-ttu-id="1f918-103">Мы не рекомендуем использовать `SecureString` класс для новой разработки.</span><span class="sxs-lookup"><span data-stu-id="1f918-103">We don't recommend that you use the `SecureString` class for new development.</span></span> <span data-ttu-id="1f918-104">Дополнительные сведения см. в разделе [SecureString не следует использовать](https://github.com/dotnet/platform-compat/blob/master/docs/DE0001.md) в GitHub.</span><span class="sxs-lookup"><span data-stu-id="1f918-104">For more information, see [SecureString shouldn't be used](https://github.com/dotnet/platform-compat/blob/master/docs/DE0001.md) on GitHub.</span></span>

 <span data-ttu-id="1f918-105"><xref:System.Security.SecureString>— это строковый тип, предоставляющий меру безопасности.</span><span class="sxs-lookup"><span data-stu-id="1f918-105"><xref:System.Security.SecureString> is a string type that provides a measure of security.</span></span> <span data-ttu-id="1f918-106">Он пытается избежать сохранения потенциально конфиденциальных строк в памяти процесса в виде обычного текста.</span><span class="sxs-lookup"><span data-stu-id="1f918-106">It tries to avoid storing potentially sensitive strings in process memory as plain text.</span></span>  <span data-ttu-id="1f918-107">(Дополнительные сведения об ограничениях см. в разделе [насколько безопасным является SecureString?](#HowSecure) ) Значение экземпляра <xref:System.Security.SecureString> автоматически защищается с помощью механизма, поддерживаемого базовой платформой при инициализации экземпляра или при изменении значения.</span><span class="sxs-lookup"><span data-stu-id="1f918-107">(For limitations, however, see the [How secure is SecureString?](#HowSecure) section.) The value of an instance of <xref:System.Security.SecureString> is automatically protected using a mechanism supported by the underlying platform when the instance is initialized or when the value is modified.</span></span> <span data-ttu-id="1f918-108">Приложение может преобразовать экземпляр в неизменяемый и предотвратить дальнейшее изменение, вызвав <xref:System.Security.SecureString.MakeReadOnly%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="1f918-108">Your application can render the instance immutable and prevent further modification by invoking the <xref:System.Security.SecureString.MakeReadOnly%2A> method.</span></span>  
  
 <span data-ttu-id="1f918-109">Максимальная длина <xref:System.Security.SecureString> экземпляра — 65 536 символов.</span><span class="sxs-lookup"><span data-stu-id="1f918-109">The maximum length of a <xref:System.Security.SecureString> instance is 65,536 characters.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="1f918-110">Этот тип реализует интерфейс <xref:System.IDisposable>.</span><span class="sxs-lookup"><span data-stu-id="1f918-110">This type implements the <xref:System.IDisposable> interface.</span></span> <span data-ttu-id="1f918-111">После завершения использования экземпляра типа его следует удалить прямо или косвенно.</span><span class="sxs-lookup"><span data-stu-id="1f918-111">When you have finished using an instance of the type, you should dispose of it either directly or indirectly.</span></span> <span data-ttu-id="1f918-112">Чтобы сделать это прямо, вызовите его метод <xref:System.IDisposable.Dispose%2A> в блоке `try`/`catch`.</span><span class="sxs-lookup"><span data-stu-id="1f918-112">To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block.</span></span> <span data-ttu-id="1f918-113">Чтобы сделать это косвенно, используйте языковые конструкции, такие как `using` (в C#) или `Using` (в Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="1f918-113">To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic).</span></span> <span data-ttu-id="1f918-114">Дополнительные сведения см. в разделе "Использование объекта, реализующего IDisposable" в статье об интерфейсе <xref:System.IDisposable>.</span><span class="sxs-lookup"><span data-stu-id="1f918-114">For more information, see the "Using an Object that Implements IDisposable" section in the <xref:System.IDisposable> interface topic.</span></span>  
  
 <span data-ttu-id="1f918-115"><xref:System.Security.SecureString> Класс и его члены не видимы для com.</span><span class="sxs-lookup"><span data-stu-id="1f918-115">The <xref:System.Security.SecureString> class and its members are not visible to COM.</span></span> <span data-ttu-id="1f918-116">Для получения дополнительной информации см. <xref:System.Runtime.InteropServices.ComVisibleAttribute>.</span><span class="sxs-lookup"><span data-stu-id="1f918-116">For more information, see <xref:System.Runtime.InteropServices.ComVisibleAttribute>.</span></span>  
  
 <span data-ttu-id="1f918-117">Содержание</span><span class="sxs-lookup"><span data-stu-id="1f918-117">In this section:</span></span>  
  
 <span data-ttu-id="1f918-118">[String и SecureString](#vsString) </span><span class="sxs-lookup"><span data-stu-id="1f918-118">[String vs. SecureString](#vsString) </span></span>  
 <span data-ttu-id="1f918-119">[Операции SecureString](#Ops) </span><span class="sxs-lookup"><span data-stu-id="1f918-119">[SecureString operations](#Ops) </span></span>  
 <span data-ttu-id="1f918-120">[SecureString и Interop](#interop) </span><span class="sxs-lookup"><span data-stu-id="1f918-120">[SecureString and interop](#interop) </span></span>  
 [<span data-ttu-id="1f918-121">Насколько безопасным является SecureString?</span><span class="sxs-lookup"><span data-stu-id="1f918-121">How secure is  SecureString?</span></span>](#HowSecure)  
  
<a name="vsString"></a>   
## <a name="string-versus-securestring"></a><span data-ttu-id="1f918-122">Строка и SecureString</span><span class="sxs-lookup"><span data-stu-id="1f918-122">String versus SecureString</span></span>  
 <span data-ttu-id="1f918-123">Экземпляр <xref:System.String?displayProperty=nameWithType> класса является неизменяемым и, когда он больше не нужен, не может быть запланированным программным путем для сборки мусора, т. е. экземпляр доступен только для чтения после его создания, и невозможно предсказать, когда экземпляр будет удалено из памяти компьютера.</span><span class="sxs-lookup"><span data-stu-id="1f918-123">An instance of the <xref:System.String?displayProperty=nameWithType> class is both immutable and, when no longer needed, cannot be programmatically scheduled for garbage collection; that is, the instance is read-only after it is created, and it is not possible to predict when the instance will be deleted from computer memory.</span></span> <span data-ttu-id="1f918-124">Поскольку <xref:System.String?displayProperty=nameWithType> экземпляры являются неизменяемыми, операции, которые могут изменить существующий экземпляр, фактически создают его копию для обработки.</span><span class="sxs-lookup"><span data-stu-id="1f918-124">Because <xref:System.String?displayProperty=nameWithType> instances are immutable, operations that appear to modify an existing instance  actually create a copy of it to manipulate.</span></span> <span data-ttu-id="1f918-125">Следовательно, если <xref:System.String> объект содержит конфиденциальные сведения, такие как пароль, номер кредитной карты или персональные данные, существует риск, что данные можно было бы раскрывать после использования, так как приложение не может удалить данные из памяти компьютера. .</span><span class="sxs-lookup"><span data-stu-id="1f918-125">Consequently, if a <xref:System.String> object contains sensitive information such as a password, credit card number, or personal data, there is a risk the information could be revealed after it is used because your application cannot delete the data from computer memory.</span></span>  
  
 <span data-ttu-id="1f918-126"><xref:System.Security.SecureString> Объект похож <xref:System.String>  на объект в том, что он имеет текстовое значение.</span><span class="sxs-lookup"><span data-stu-id="1f918-126">A <xref:System.Security.SecureString> object is similar to a <xref:System.String> object in that it has a text value.</span></span> <span data-ttu-id="1f918-127">Однако значение <xref:System.Security.SecureString> объекта закрепляется в памяти, может использовать механизм защиты, такой как шифрование, предоставляемый базовой операционной системой, может быть изменен до тех пор, пока приложение не пометит его как доступное только для чтения и может быть удалено из памяти компьютера. либо приложением, вызывающим <xref:System.Security.SecureString.Dispose%2A> метод, либо сборщиком мусора .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="1f918-127">However, the value of a <xref:System.Security.SecureString> object is pinned in memory, may use a protection mechanism, such as encryption, provided by the underlying operating system, can be modified until your application marks it as read-only, and can be deleted from computer memory either by your application calling the <xref:System.Security.SecureString.Dispose%2A> method  or by the .NET Framework garbage collector.</span></span>  
  
 <span data-ttu-id="1f918-128">Сведения об ограничениях <xref:System.Security.SecureString> класса см. в разделе [Безопасная защита](#HowSecure) с помощью SecureString.</span><span class="sxs-lookup"><span data-stu-id="1f918-128">For a discussion of the limitations of the <xref:System.Security.SecureString> class, see the [How secure is  SecureString?](#HowSecure) section.</span></span>  
  
 [<span data-ttu-id="1f918-129">К началу</span><span class="sxs-lookup"><span data-stu-id="1f918-129">Back to top</span></span>](#top)  
  
<a name="Ops"></a>   
## <a name="securestring-operations"></a><span data-ttu-id="1f918-130">Операции SecureString</span><span class="sxs-lookup"><span data-stu-id="1f918-130">SecureString operations</span></span>  
 <span data-ttu-id="1f918-131"><xref:System.Security.SecureString> Класс включает члены, которые позволяют выполнять следующие действия:</span><span class="sxs-lookup"><span data-stu-id="1f918-131">The <xref:System.Security.SecureString> class includes members that allow you to do the following:</span></span>  
  
 <span data-ttu-id="1f918-132">Создание экземпляра <xref:System.Security.SecureString> объекта</span><span class="sxs-lookup"><span data-stu-id="1f918-132">Instantiate a <xref:System.Security.SecureString> object</span></span>  
 <span data-ttu-id="1f918-133">Экземпляр <xref:System.Security.SecureString> объекта создается путем вызова его конструктора без параметров.</span><span class="sxs-lookup"><span data-stu-id="1f918-133">You instantiate a <xref:System.Security.SecureString> object by calling its parameterless constructor.</span></span>  
  
 <span data-ttu-id="1f918-134">Добавление символов в <xref:System.Security.SecureString> объект</span><span class="sxs-lookup"><span data-stu-id="1f918-134">Add characters to a <xref:System.Security.SecureString> object</span></span>  
 <span data-ttu-id="1f918-135">Можно добавить один символ за раз <xref:System.Security.SecureString> в объект, вызвав его <xref:System.Security.SecureString.AppendChar%2A> метод или <xref:System.Security.SecureString.InsertAt%2A> .</span><span class="sxs-lookup"><span data-stu-id="1f918-135">You can add a single character at a time to a <xref:System.Security.SecureString> object  by calling its <xref:System.Security.SecureString.AppendChar%2A> or <xref:System.Security.SecureString.InsertAt%2A> method.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="1f918-136">Объект не должен быть создан <xref:System.String>из, так как конфиденциальные данные уже подчиняются последствиям сохраняемости памяти для неизменяемого <xref:System.String> класса. <xref:System.Security.SecureString></span><span class="sxs-lookup"><span data-stu-id="1f918-136">A <xref:System.Security.SecureString> object should never be constructed from a <xref:System.String>, because the sensitive data is already subject to the memory persistence consequences of the immutable <xref:System.String> class.</span></span> <span data-ttu-id="1f918-137">Лучший способ создания <xref:System.Security.SecureString> объекта — из неуправляемого источника «символ-время», такого <xref:System.Console.ReadKey%2A?displayProperty=nameWithType> как метод.</span><span class="sxs-lookup"><span data-stu-id="1f918-137">The best way to construct a <xref:System.Security.SecureString> object is from a character-at-a-time unmanaged source, such as the <xref:System.Console.ReadKey%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="1f918-138">Удаление символов из <xref:System.Security.SecureString> объекта</span><span class="sxs-lookup"><span data-stu-id="1f918-138">Remove characters from a <xref:System.Security.SecureString> object</span></span>  
 <span data-ttu-id="1f918-139">Можно заменить отдельный символ, вызвав <xref:System.Security.SecureString.SetAt%2A> метод, удалив отдельный символ, <xref:System.Security.SecureString.RemoveAt%2A> вызвав метод, или <xref:System.Security.SecureString> удалить все символы из экземпляра, вызвав <xref:System.Security.SecureString.Clear%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="1f918-139">You can replace an individual character by calling the <xref:System.Security.SecureString.SetAt%2A> method, remove an individual character by calling the <xref:System.Security.SecureString.RemoveAt%2A> method, or remove all characters from the <xref:System.Security.SecureString> instance by calling the  <xref:System.Security.SecureString.Clear%2A> method.</span></span>  
  
 <span data-ttu-id="1f918-140"><xref:System.Security.SecureString> Сделать объект доступным только для чтения</span><span class="sxs-lookup"><span data-stu-id="1f918-140">Make the <xref:System.Security.SecureString> object read-only</span></span>  
 <span data-ttu-id="1f918-141">Определив строку, <xref:System.Security.SecureString> которую представляет объект, вызовите его <xref:System.Security.SecureString.MakeReadOnly%2A> метод, чтобы сделать строку доступной только для чтения.</span><span class="sxs-lookup"><span data-stu-id="1f918-141">Once you have defined the string that the <xref:System.Security.SecureString> object represents, you call its  <xref:System.Security.SecureString.MakeReadOnly%2A> method to make the string read-only.</span></span>  
  
 <span data-ttu-id="1f918-142">Получение сведений об <xref:System.Security.SecureString> объекте</span><span class="sxs-lookup"><span data-stu-id="1f918-142">Get information about the <xref:System.Security.SecureString> object</span></span>  
 <span data-ttu-id="1f918-143">Класс содержит только два члена, которые предоставляют сведения о строке: его <xref:System.Security.SecureString.Length%2A> свойство, которое указывает число единиц кода в кодировке UTF16, в строке, и <xref:System.Security.SecureString.IsReadOnly%2A>метод, который указывает, является ли экземпляр <xref:System.Security.SecureString> только для чтения.</span><span class="sxs-lookup"><span data-stu-id="1f918-143">The <xref:System.Security.SecureString> class has only two members that provide information about the string: its <xref:System.Security.SecureString.Length%2A> property, which indicates the number of UTF16-encoded code units in the string; and the <xref:System.Security.SecureString.IsReadOnly%2A>, method, which indicates whether the instance is read-only.</span></span>  
  
 <span data-ttu-id="1f918-144">Освобождение памяти, выделенной для <xref:System.Security.SecureString> экземпляра</span><span class="sxs-lookup"><span data-stu-id="1f918-144">Release the memory allocated to the <xref:System.Security.SecureString> instance</span></span>  
 <span data-ttu-id="1f918-145">Поскольку <xref:System.Security.SecureString> <xref:System.Security.SecureString.Dispose%2A> реализует интерфейс, вы освобождаете его память путем вызова метода. <xref:System.IDisposable></span><span class="sxs-lookup"><span data-stu-id="1f918-145">Because <xref:System.Security.SecureString> implements the <xref:System.IDisposable> interface, you release its memory by calling the <xref:System.Security.SecureString.Dispose%2A> method.</span></span>  
  
 <span data-ttu-id="1f918-146">Класс не имеет членов, которые проверяют, сравнивают или преобразуют значение  <xref:System.Security.SecureString> .  <xref:System.Security.SecureString></span><span class="sxs-lookup"><span data-stu-id="1f918-146">The <xref:System.Security.SecureString> class has no members that inspect, compare, or convert the value of a <xref:System.Security.SecureString>.</span></span> <span data-ttu-id="1f918-147">Отсутствие таких членов помогает защитить значение экземпляра от случайной или злонамеренной уязвимости.</span><span class="sxs-lookup"><span data-stu-id="1f918-147">The absence of such members helps protect the value of the instance from accidental or malicious exposure.</span></span> <span data-ttu-id="1f918-148">Используйте соответствующие члены <xref:System.Runtime.InteropServices.Marshal?displayProperty=nameWithType> класса, такие <xref:System.Runtime.InteropServices.Marshal.SecureStringToBSTR%2A> как метод, для <xref:System.Security.SecureString> управления значением объекта.</span><span class="sxs-lookup"><span data-stu-id="1f918-148">Use appropriate members of the <xref:System.Runtime.InteropServices.Marshal?displayProperty=nameWithType> class, such as the <xref:System.Runtime.InteropServices.Marshal.SecureStringToBSTR%2A> method, to manipulate the value of a <xref:System.Security.SecureString> object.</span></span>  
  
 <span data-ttu-id="1f918-149">Библиотека классов .NET Framework обычно использует <xref:System.Security.SecureString> экземпляры следующими способами.</span><span class="sxs-lookup"><span data-stu-id="1f918-149">The .NET Framework Class Library commonly uses <xref:System.Security.SecureString> instances in the following ways:</span></span>  
  
-   <span data-ttu-id="1f918-150">Для предоставления сведений о паролях процессу с помощью <xref:System.Diagnostics.ProcessStartInfo> структуры или путем вызова перегрузки <xref:System.Diagnostics.Process.Start%2A?displayProperty=nameWithType> метода, имеющего параметр типа <xref:System.Security.SecureString>.</span><span class="sxs-lookup"><span data-stu-id="1f918-150">To provide password information to a process by using the <xref:System.Diagnostics.ProcessStartInfo> structure or by calling an overload of the <xref:System.Diagnostics.Process.Start%2A?displayProperty=nameWithType> method that has a parameter of type <xref:System.Security.SecureString>.</span></span>  
  
-   <span data-ttu-id="1f918-151">Для предоставления сведений о сетевом пароле <xref:System.Net.NetworkCredential> путем вызова конструктора класса с параметром типа <xref:System.Security.SecureString> или с помощью <xref:System.Net.NetworkCredential.SecurePassword%2A?displayProperty=nameWithType> свойства.</span><span class="sxs-lookup"><span data-stu-id="1f918-151">To provide network password information by calling a <xref:System.Net.NetworkCredential> class constructor that has a parameter of type <xref:System.Security.SecureString> or by using the <xref:System.Net.NetworkCredential.SecurePassword%2A?displayProperty=nameWithType> property.</span></span>  
  
-   <span data-ttu-id="1f918-152">Для предоставления сведений о паролях для SQL Server проверки подлинности путем вызова <xref:System.Data.SqlClient.SqlCredential.%23ctor%2A?displayProperty=nameWithType> конструктора или получения значения <xref:System.Data.SqlClient.SqlCredential.Password%2A?displayProperty=nameWithType> свойства.</span><span class="sxs-lookup"><span data-stu-id="1f918-152">To provide password information for SQL Server Authentication by calling the <xref:System.Data.SqlClient.SqlCredential.%23ctor%2A?displayProperty=nameWithType> constructor or retrieving the value of the <xref:System.Data.SqlClient.SqlCredential.Password%2A?displayProperty=nameWithType> property.</span></span>  
  
-   <span data-ttu-id="1f918-153">Передать строку в неуправляемый код.</span><span class="sxs-lookup"><span data-stu-id="1f918-153">To pass a string to unmanaged code.</span></span> <span data-ttu-id="1f918-154">Дополнительные сведения см. в разделе [SecureString и Interop](#interop) .</span><span class="sxs-lookup"><span data-stu-id="1f918-154">For more information, see the [SecureString and interop](#interop) section.</span></span>  
  
 [<span data-ttu-id="1f918-155">К началу</span><span class="sxs-lookup"><span data-stu-id="1f918-155">Back to top</span></span>](#top)  
  
<a name="interop"></a>   
## <a name="securestring-and-interop"></a><span data-ttu-id="1f918-156">SecureString и Interop</span><span class="sxs-lookup"><span data-stu-id="1f918-156">SecureString and interop</span></span>  
 <span data-ttu-id="1f918-157">Поскольку операционная система не поддерживает <xref:System.Security.SecureString>непосредственно, необходимо преобразовать значение <xref:System.Security.SecureString> объекта в требуемый строковый тип перед передачей строки в собственный метод.</span><span class="sxs-lookup"><span data-stu-id="1f918-157">Because the operating system does not  directly support <xref:System.Security.SecureString>, you must convert the value of the <xref:System.Security.SecureString> object to the required string type before passing the string to a native method.</span></span>  <span data-ttu-id="1f918-158"><xref:System.Runtime.InteropServices.Marshal> Класс имеет пять методов, которые делают это:</span><span class="sxs-lookup"><span data-stu-id="1f918-158">The <xref:System.Runtime.InteropServices.Marshal> class has five methods that do this:</span></span>  
  
-   <span data-ttu-id="1f918-159"><xref:System.Runtime.InteropServices.Marshal.SecureStringToBSTR%2A?displayProperty=nameWithType>, который преобразует <xref:System.Security.SecureString> строковое значение в двоичную строку (BSTR), распознанную com.</span><span class="sxs-lookup"><span data-stu-id="1f918-159"><xref:System.Runtime.InteropServices.Marshal.SecureStringToBSTR%2A?displayProperty=nameWithType>, which converts the <xref:System.Security.SecureString> string value to a binary string (BSTR) recognized by COM.</span></span>  
  
-   <span data-ttu-id="1f918-160"><xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi%2A?displayProperty=nameWithType>и <xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocAnsi%2A?displayProperty=nameWithType>, который <xref:System.Security.SecureString> копирует строковое значение в строку ANSI в неуправляемой памяти.</span><span class="sxs-lookup"><span data-stu-id="1f918-160"><xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi%2A?displayProperty=nameWithType> and <xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocAnsi%2A?displayProperty=nameWithType>, which copy the <xref:System.Security.SecureString> string value to an ANSI string in unmanaged memory.</span></span>  
  
-   <span data-ttu-id="1f918-161"><xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode%2A?displayProperty=nameWithType>и <xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode%2A?displayProperty=nameWithType>, который <xref:System.Security.SecureString> копирует строковое значение в строку Юникода в неуправляемой памяти.</span><span class="sxs-lookup"><span data-stu-id="1f918-161"><xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode%2A?displayProperty=nameWithType> and <xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode%2A?displayProperty=nameWithType>, which copy the <xref:System.Security.SecureString> string value to a Unicode string in unmanaged memory.</span></span>  
  
 <span data-ttu-id="1f918-162">Каждый из этих методов создает в неуправляемой памяти строку в виде открытого текста.</span><span class="sxs-lookup"><span data-stu-id="1f918-162">Each of these methods creates a clear-text string in unmanaged memory.</span></span> <span data-ttu-id="1f918-163">Разработчику необходимо обнулить и освободить память, как только она больше не нужна.</span><span class="sxs-lookup"><span data-stu-id="1f918-163">It is the responsibility of the developer to zero out and free that memory as soon as it is no longer needed.</span></span> <span data-ttu-id="1f918-164">Каждое преобразование строки и методы выделения памяти имеют соответствующий метод для обнуления и освобождения выделенной памяти:</span><span class="sxs-lookup"><span data-stu-id="1f918-164">Each of the string conversion and memory allocation methods has a corresponding method to zero out and free the allocated memory:</span></span>  
  
|<span data-ttu-id="1f918-165">Метод выделения и преобразования</span><span class="sxs-lookup"><span data-stu-id="1f918-165">Allocation and conversion method</span></span>|<span data-ttu-id="1f918-166">Ноль и бесплатный метод</span><span class="sxs-lookup"><span data-stu-id="1f918-166">Zero and free method</span></span>|  
|--------------------------------------|--------------------------|  
|<xref:System.Runtime.InteropServices.Marshal.SecureStringToBSTR%2A?displayProperty=nameWithType>|<xref:System.Runtime.InteropServices.Marshal.ZeroFreeBSTR%2A?displayProperty=nameWithType>|  
|<xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi%2A?displayProperty=nameWithType>|<xref:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemAnsi%2A?displayProperty=nameWithType>|  
|<xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode%2A?displayProperty=nameWithType>|<xref:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemUnicode%2A?displayProperty=nameWithType>|  
|<xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocAnsi%2A?displayProperty=nameWithType>|<xref:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocAnsi%2A?displayProperty=nameWithType>|  
|<xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode%2A?displayProperty=nameWithType>|<xref:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocUnicode%2A?displayProperty=nameWithType>|  
  
 [<span data-ttu-id="1f918-167">К началу</span><span class="sxs-lookup"><span data-stu-id="1f918-167">Back to top</span></span>](#top)  
  
<a name="HowSecure"></a>   
## <a name="how-secure-is-securestring"></a><span data-ttu-id="1f918-168">Насколько безопасным является SecureString?</span><span class="sxs-lookup"><span data-stu-id="1f918-168">How secure is SecureString?</span></span>  
 <span data-ttu-id="1f918-169">При правильном создании <xref:System.Security.SecureString> экземпляр обеспечивает дополнительную защиту данных, <xref:System.String>чем.</span><span class="sxs-lookup"><span data-stu-id="1f918-169">When created properly, a <xref:System.Security.SecureString> instance provides more data protection than a <xref:System.String>.</span></span> <span data-ttu-id="1f918-170">При создании строки на основе символа источника <xref:System.String> времени создает несколько промежуточных данных в памяти, <xref:System.Security.SecureString> тогда как создает только один экземпляр.</span><span class="sxs-lookup"><span data-stu-id="1f918-170">When creating a string from a character-at-a-time source, <xref:System.String> creates multiple intermediate in memory, whereas  <xref:System.Security.SecureString> creates just a single instance.</span></span>  <span data-ttu-id="1f918-171">Сборка мусора объектов не является детерминированной. <xref:System.String></span><span class="sxs-lookup"><span data-stu-id="1f918-171">Garbage collection of <xref:System.String> objects  is non-deterministic.</span></span> <span data-ttu-id="1f918-172">Кроме того, поскольку память не закреплена, сборщик мусора будет создавать дополнительные копии <xref:System.String> значений при перемещении и сжатии памяти.</span><span class="sxs-lookup"><span data-stu-id="1f918-172">In addition, because its memory is not pinned, the garbage collector will make additional copies of <xref:System.String> values when moving and compacting memory.</span></span> <span data-ttu-id="1f918-173">В отличие от этого, память, выделенная для <xref:System.Security.SecureString> объекта, закреплена, и эту память можно освободить путем <xref:System.Security.SecureString.Dispose%2A> вызова метода.</span><span class="sxs-lookup"><span data-stu-id="1f918-173">In contrast, the memory allocated to a <xref:System.Security.SecureString> object is pinned,  and that memory can be freed by calling the <xref:System.Security.SecureString.Dispose%2A> method.</span></span>  
  
 <span data-ttu-id="1f918-174">Хотя данные, хранящиеся <xref:System.Security.SecureString> в экземпляре, более безопасны, чем <xref:System.String> данные, хранящиеся в экземпляре, существуют значительные <xref:System.Security.SecureString> ограничения на степень защиты экземпляра.</span><span class="sxs-lookup"><span data-stu-id="1f918-174">Although data stored in a <xref:System.Security.SecureString> instance is more secure than data stored in a <xref:System.String> instance, there are significant limitations on how secure a <xref:System.Security.SecureString> instance is.</span></span> <span data-ttu-id="1f918-175">Сюда входит следующее.</span><span class="sxs-lookup"><span data-stu-id="1f918-175">These include:</span></span>  
  
 <span data-ttu-id="1f918-176">Platform</span><span class="sxs-lookup"><span data-stu-id="1f918-176">Platform</span></span>  
 <span data-ttu-id="1f918-177">В операционной системе Windows содержимое <xref:System.Security.SecureString> массива внутренних символов экземпляра шифруется.</span><span class="sxs-lookup"><span data-stu-id="1f918-177">On the Windows operating system, the contents of a <xref:System.Security.SecureString> instance's internal character array are encrypted.</span></span> <span data-ttu-id="1f918-178">Тем не менее, из-за отсутствия API или проблем с управлением ключами шифрование недоступно на всех платформах.</span><span class="sxs-lookup"><span data-stu-id="1f918-178">However, whether because of missing APIs or key management issues,  encryption is not available on all platforms.</span></span> <span data-ttu-id="1f918-179">Из-за этой зависимости <xref:System.Security.SecureString> от платформы не шифрует внутреннее хранилище на платформе, отличной от Windows.</span><span class="sxs-lookup"><span data-stu-id="1f918-179">Because of this platform dependency, <xref:System.Security.SecureString> does not encrypt the internal storage on non-Windows platform.</span></span> <span data-ttu-id="1f918-180">Для обеспечения дополнительной защиты на этих платформах используются другие методы.</span><span class="sxs-lookup"><span data-stu-id="1f918-180">Other techniques are used on those platforms to provide additional protection.</span></span>
  
 <span data-ttu-id="1f918-181">Длительность</span><span class="sxs-lookup"><span data-stu-id="1f918-181">Duration</span></span>  
 <span data-ttu-id="1f918-182">Даже если <xref:System.Security.SecureString> реализация может использовать преимущества шифрования, простой текст, назначенный <xref:System.Security.SecureString> экземпляру, может быть представлен в различные моменты времени:</span><span class="sxs-lookup"><span data-stu-id="1f918-182">Even if the <xref:System.Security.SecureString> implementation is able to take advantage of encryption, the plain text assigned to the <xref:System.Security.SecureString> instance may be exposed at various times:</span></span>  
  
-   <span data-ttu-id="1f918-183">Поскольку в Windows не предусмотрена Безопасная реализация строк на уровне операционной системы, .NET Framework по-прежнему необходимо преобразовать защищенное строковое значение в его текстовое представление, чтобы использовать его.</span><span class="sxs-lookup"><span data-stu-id="1f918-183">Because Windows doesn't offer a secure string implementation at the operating system level, the .NET Framework still has to convert the secure string value to its plain text representation in order to use it.</span></span>  
  
-   <span data-ttu-id="1f918-184">Всякий раз, когда значение защищенной строки изменяется такими методами <xref:System.Security.SecureString.AppendChar%2A> , <xref:System.Security.SecureString.RemoveAt%2A>как или, оно должно быть расшифровано (то есть преобразовано обратно в обычный текст), изменено, а затем снова зашифровано.</span><span class="sxs-lookup"><span data-stu-id="1f918-184">Whenever the value of the secure string is modified by methods such as <xref:System.Security.SecureString.AppendChar%2A> or <xref:System.Security.SecureString.RemoveAt%2A>, it must be decrypted (that is, converted back to plain text), modified, and then encrypted again.</span></span>  
  
-   <span data-ttu-id="1f918-185">Если безопасная строка используется в вызове взаимодействия, ее необходимо преобразовать в строку ANSI, строку в Юникоде или двоичную строку (BSTR).</span><span class="sxs-lookup"><span data-stu-id="1f918-185">If the secure string is used in an interop call, it must be converted to an ANSI string, a Unicode string, or a binary string (BSTR).</span></span> <span data-ttu-id="1f918-186">Дополнительные сведения см. в разделе [SecureString и Interop](#interop) .</span><span class="sxs-lookup"><span data-stu-id="1f918-186">For more information, see the [SecureString and interop](#interop) section.</span></span>  
  
 <span data-ttu-id="1f918-187">Интервал времени, для которого <xref:System.Security.SecureString> предоставляется значение экземпляра, просто сокращается в сравнении <xref:System.String> с классом.</span><span class="sxs-lookup"><span data-stu-id="1f918-187">The time interval for which the <xref:System.Security.SecureString> instance's value is exposed  is merely shortened in comparison to the <xref:System.String> class.</span></span>  
  
 <span data-ttu-id="1f918-188">Хранение и использование</span><span class="sxs-lookup"><span data-stu-id="1f918-188">Storage versus usage</span></span>  
 <span data-ttu-id="1f918-189">В <xref:System.Security.SecureString> общем, класс определяет механизм хранения для строковых значений, которые должны быть защищены или сохранены в конфиденциальном виде.</span><span class="sxs-lookup"><span data-stu-id="1f918-189">More generally, the <xref:System.Security.SecureString> class defines a storage mechanism for string values that should be protected or kept confidential.</span></span> <span data-ttu-id="1f918-190">Однако за пределами самого .NET Framework механизм использования не поддерживается <xref:System.Security.SecureString>.</span><span class="sxs-lookup"><span data-stu-id="1f918-190">However, outside of the .NET Framework itself, no usage mechanism supports <xref:System.Security.SecureString>.</span></span> <span data-ttu-id="1f918-191">Это означает, что безопасная строка должна быть преобразована в пригодную для использования форму (обычно это форма с открытым текстом), которую можно распознать целевым объектом, а расшифровка и преобразование должны происходить в пространстве пользователя.</span><span class="sxs-lookup"><span data-stu-id="1f918-191">This means that the secure string must be converted to a usable form (typically a clear text form) that can be recognized by its target, and     that decryption and conversion must occur in user space.</span></span>  
  
 <span data-ttu-id="1f918-192">В целом <xref:System.Security.SecureString> , является более безопасным <xref:System.String> , чем потому, что он ограничивает раскрытие конфиденциальных строковых данных.</span><span class="sxs-lookup"><span data-stu-id="1f918-192">Overall, <xref:System.Security.SecureString> is more secure than <xref:System.String> because it limits the exposure of sensitive string data.</span></span> <span data-ttu-id="1f918-193">Однако эти строки могут по-прежнему предоставляться любому процессу или операции, имеющей доступ к необработанной памяти, например к вредоносному процессу, выполняемому на главном компьютере, дампу процесса или файлу подкачки, видимому пользователю.</span><span class="sxs-lookup"><span data-stu-id="1f918-193">However, those strings may still be exposed to any process or operation that has access to raw memory, such as a malicious process running on the host computer, a process dump, or a user-viewable swap file.</span></span> <span data-ttu-id="1f918-194">Вместо использования <xref:System.Security.SecureString> для защиты паролей рекомендуется использовать непрозрачный маркер для учетных данных, хранящихся за пределами процесса.</span><span class="sxs-lookup"><span data-stu-id="1f918-194">Instead of using <xref:System.Security.SecureString> to protect passwords, the recommended alternative is to use an opaque handle to credentials that are stored outside of the process.</span></span>  
  
 [<span data-ttu-id="1f918-195">К началу</span><span class="sxs-lookup"><span data-stu-id="1f918-195">Back to top</span></span>](#top)  
  
   
  
## Examples  
 <span data-ttu-id="1f918-196">В следующем примере показано, <xref:System.Security.SecureString> как использовать для защиты пароля пользователя, чтобы использовать его в качестве учетных данных для запуска нового процесса.</span><span class="sxs-lookup"><span data-stu-id="1f918-196">The following example demonstrates how to use a <xref:System.Security.SecureString> to secure a user's password for use as a credential to start a new process.</span></span>  
  
 [!code-csharp[System.Security.SecureString.Ctor#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.SecureString.Ctor/cs/ctor4.cs#4)]
 [!code-vb[System.Security.SecureString.Ctor#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.SecureString.Ctor/vb/ctor4.vb#4)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Runtime.InteropServices.ComVisibleAttribute" />
    <altmember cref="T:System.Runtime.InteropServices.Marshal" />
    <altmember cref="T:System.Runtime.ConstrainedExecution.CriticalFinalizerObject" />
    <altmember cref="T:System.IDisposable" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Security.SecureString</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1f918-197">Инициализирует новый экземпляр класса <see cref="T:System.Security.SecureString" />.</span><span class="sxs-lookup"><span data-stu-id="1f918-197">Initializes a new instance of the <see cref="T:System.Security.SecureString" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SecureString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecureString.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SecureString();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.SecureString</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1f918-198">Инициализирует новый экземпляр класса <see cref="T:System.Security.SecureString" />.</span><span class="sxs-lookup"><span data-stu-id="1f918-198">Initializes a new instance of the <see cref="T:System.Security.SecureString" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="1f918-199">В следующем примере используется конструктор по умолчанию (без параметров) для создания экземпляра нового <xref:System.Security.SecureString> объекта.</span><span class="sxs-lookup"><span data-stu-id="1f918-199">The following example uses the default (or parameterless) constructor to instantiate a new <xref:System.Security.SecureString> object.</span></span> <span data-ttu-id="1f918-200">Затем вызывается <xref:System.Security.SecureString.AppendChar%2A> метод для добавления в него массива символов.</span><span class="sxs-lookup"><span data-stu-id="1f918-200">It then calls the <xref:System.Security.SecureString.AppendChar%2A> method to add an array of characters to it.</span></span>  
  
 [!code-cpp[System.Security.SecureString.Ctor#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.SecureString.Ctor/cpp/Ctor2.cpp#2)]
 [!code-csharp[System.Security.SecureString.Ctor#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.SecureString.Ctor/cs/Ctor2.cs#2)]
 [!code-vb[System.Security.SecureString.Ctor#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.SecureString.Ctor/vb/ctor2.vb#2)]  
  
 <span data-ttu-id="1f918-201">В следующем примере создается <xref:System.Security.SecureString> объект на основе значения <xref:System.String> объекта.</span><span class="sxs-lookup"><span data-stu-id="1f918-201">The following example creates a <xref:System.Security.SecureString> object from the value of a <xref:System.String> object.</span></span>  
  
 [!code-cpp[System.Security.SecureString.Ctor#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.SecureString.Ctor/cpp/Ctor3.cpp#3)]
 [!code-csharp[System.Security.SecureString.Ctor#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.SecureString.Ctor/cs/Ctor3.cs#3)]
 [!code-vb[System.Security.SecureString.Ctor#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.SecureString.Ctor/vb/Ctor3.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="1f918-202">Произошла ошибка при защите значения этого экземпляра или снятии с него защиты.</span><span class="sxs-lookup"><span data-stu-id="1f918-202">An error occurred while protecting or unprotecting the value of this instance.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="1f918-203">Эта операция не поддерживается этой платформой.</span><span class="sxs-lookup"><span data-stu-id="1f918-203">This operation is not supported on this platform.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SecureString (char* value, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(char* value, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecureString.#ctor(System.Char*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SecureString(char* value, int length);" />
      <MemberSignature Language="F#" Value="new System.Security.SecureString : nativeptr&lt;char&gt; * int -&gt; System.Security.SecureString" Usage="new System.Security.SecureString (value, length)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.SecureString</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="value" Type="System.Char*" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="1f918-204">Указатель на массив объектов <see cref="T:System.Char" />.</span><span class="sxs-lookup"><span data-stu-id="1f918-204">A pointer to an array of <see cref="T:System.Char" /> objects.</span></span></param>
        <param name="length"><span data-ttu-id="1f918-205">Число элементов массива <paramref name="value" />, включаемых в новый экземпляр.</span><span class="sxs-lookup"><span data-stu-id="1f918-205">The number of elements of <paramref name="value" /> to include in the new instance.</span></span></param>
        <summary><span data-ttu-id="1f918-206">Инициализирует новый экземпляр класса <see cref="T:System.Security.SecureString" /> из подмассива объектов <see cref="T:System.Char" />.</span><span class="sxs-lookup"><span data-stu-id="1f918-206">Initializes a new instance of the <see cref="T:System.Security.SecureString" /> class from a subarray of <see cref="T:System.Char" /> objects.</span></span>  
  
<span data-ttu-id="1f918-207">Этот конструктор несовместим с CLS.</span><span class="sxs-lookup"><span data-stu-id="1f918-207">This constructor is not CLS-compliant.</span></span> <span data-ttu-id="1f918-208">CLS-совместимая альтернатива — <see cref="M:System.Security.SecureString.#ctor" />.</span><span class="sxs-lookup"><span data-stu-id="1f918-208">The CLS-compliant alternative is <see cref="M:System.Security.SecureString.#ctor" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f918-209">Этот конструктор инициализирует новый <xref:System.Security.SecureString> объект до количества символов в `value` указанном параметре `length`. Затем значение шифруется.</span><span class="sxs-lookup"><span data-stu-id="1f918-209">This constructor initializes the new <xref:System.Security.SecureString> object to the number of characters in `value` specified by `length`; the value of the instance is then encrypted.</span></span>  
  
 <span data-ttu-id="1f918-210">В C#этот конструктор определяется только в контексте ненадежного кода.</span><span class="sxs-lookup"><span data-stu-id="1f918-210">In C#, this constructor is defined only in the context of unsafe code.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1f918-211">В следующем примере создается экземпляр нового <xref:System.Security.SecureString> объекта путем передачи его конструктора указателя на массив символов.</span><span class="sxs-lookup"><span data-stu-id="1f918-211">The following example instantiates a new <xref:System.Security.SecureString> object by passing its constructor a pointer to a character array.</span></span>  
  
 [!code-cpp[System.Security.SecureString.Ctor2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.security.securestring.ctor2/cpp/ctor1.cpp#1)]
 [!code-csharp[System.Security.SecureString.Ctor2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.security.securestring.ctor2/cs/ctor1.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1f918-212">Свойство <paramref name="value" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1f918-212"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="1f918-213"><paramref name="length" /> меньше нуля или больше 65 536.</span><span class="sxs-lookup"><span data-stu-id="1f918-213"><paramref name="length" /> is less than zero or greater than 65,536.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="1f918-214">Произошла ошибка при защите значения этой защищенной строки или снятии с него защиты.</span><span class="sxs-lookup"><span data-stu-id="1f918-214">An error occurred while protecting or unprotecting the value of this secure string.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="1f918-215">Эта операция не поддерживается этой платформой.</span><span class="sxs-lookup"><span data-stu-id="1f918-215">This operation is not supported on this platform.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="1f918-216">требуется полное доверие для немедленного вызывающего объекта.</span><span class="sxs-lookup"><span data-stu-id="1f918-216">requires full trust for the immediate caller.</span></span> <span data-ttu-id="1f918-217">Этот член не может использоваться частично доверенным или прозрачным кодом.</span><span class="sxs-lookup"><span data-stu-id="1f918-217">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="AppendChar">
      <MemberSignature Language="C#" Value="public void AppendChar (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendChar(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecureString.AppendChar(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendChar (c As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendChar(char c);" />
      <MemberSignature Language="F#" Value="member this.AppendChar : char -&gt; unit" Usage="secureString.AppendChar c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.SecureString</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netstandard-2.1">
          <AttributeName>System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptions</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c"><span data-ttu-id="1f918-218">Знак, добавляемый к защищенной строке.</span><span class="sxs-lookup"><span data-stu-id="1f918-218">A character to append to this secure string.</span></span></param>
        <summary><span data-ttu-id="1f918-219">Добавляет знак в конец текущей защищенной строки.</span><span class="sxs-lookup"><span data-stu-id="1f918-219">Appends a character to the end of the current secure string.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f918-220">Если в реализации используется механизм защиты, например шифрование, то значение этой защищенной строки, если таковое имеется, не защищено; `c` добавляется, а затем новое значение защищенной строки повторно защищается.</span><span class="sxs-lookup"><span data-stu-id="1f918-220">If the implementation uses a protection mechanism, such as encryption, the value of this secure string, if any, is unprotected; `c` is appended; then the new value of the secure string is re-protected.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1f918-221">В следующем <xref:System.Security.SecureString.AppendChar%2A>примере показано <xref:System.Security.SecureString.InsertAt%2A> <xref:System.Security.SecureString.Clear%2A> <xref:System.Security.SecureString.SetAt%2A>, как методы,, <xref:System.Security.SecureString> , и влияют на значение объекта. <xref:System.Security.SecureString.RemoveAt%2A></span><span class="sxs-lookup"><span data-stu-id="1f918-221">The following example demonstrates how the <xref:System.Security.SecureString.AppendChar%2A>, <xref:System.Security.SecureString.InsertAt%2A>, <xref:System.Security.SecureString.RemoveAt%2A>, <xref:System.Security.SecureString.SetAt%2A>, and <xref:System.Security.SecureString.Clear%2A> methods affect the value of a <xref:System.Security.SecureString> object.</span></span>  
  
 [!code-cpp[SecureString.xAt#1](~/samples/snippets/cpp/VS_Snippets_CLR/SecureString.xAt/CPP/SecureString.xAt.cpp#1)]
 [!code-csharp[SecureString.xAt#1](~/samples/snippets/csharp/VS_Snippets_CLR/SecureString.xAt/CS/xat.cs#1)]
 [!code-vb[SecureString.xAt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecureString.xAt/VB/xat.vb#1)]  
  
 <span data-ttu-id="1f918-222">В следующем примере показано, <xref:System.Security.SecureString.AppendChar%2A> как можно использовать методы и <xref:System.Security.SecureString.RemoveAt%2A> для получения символов в пароле.</span><span class="sxs-lookup"><span data-stu-id="1f918-222">The following example demonstrates how the <xref:System.Security.SecureString.AppendChar%2A> and <xref:System.Security.SecureString.RemoveAt%2A> methods can be used to collect the characters in a password.</span></span>  
  
 [!code-cpp[SecureString.xChar#1](~/samples/snippets/cpp/VS_Snippets_CLR/SecureString.xChar/CPP/SecureString.xChar.cpp#1)]
 [!code-csharp[SecureString.xChar#1](~/samples/snippets/csharp/VS_Snippets_CLR/SecureString.xChar/CS/xchar.cs#1)]
 [!code-vb[SecureString.xChar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecureString.xChar/VB/xchar.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="1f918-223">Защищенная строка уже удалена.</span><span class="sxs-lookup"><span data-stu-id="1f918-223">This secure string has already been disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1f918-224">Данная защищенная строка доступна только для чтения.</span><span class="sxs-lookup"><span data-stu-id="1f918-224">This secure string is read-only.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="1f918-225">При выполнении этой операции длина защищенной строки превысит 65 536 символов.</span><span class="sxs-lookup"><span data-stu-id="1f918-225">Performing this operation would make the length of this secure string greater than 65,536 characters.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="1f918-226">Произошла ошибка при защите значения этой защищенной строки или снятии с него защиты.</span><span class="sxs-lookup"><span data-stu-id="1f918-226">An error occurred while protecting or unprotecting the value of this secure string.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecureString.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; unit" Usage="secureString.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.SecureString</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1f918-227">Удаляет значение текущей защищенной строки.</span><span class="sxs-lookup"><span data-stu-id="1f918-227">Deletes the value of the current secure string.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f918-228">Объем памяти компьютера, который содержит значение этой защищенной строки, равен нулю, а длина значения этой защищенной строки равна нулю.</span><span class="sxs-lookup"><span data-stu-id="1f918-228">The computer memory that contains the value of this secure string is zeroed, then the length of the value of this secure string is set to zero.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1f918-229">В следующем <xref:System.Security.SecureString.AppendChar%2A>примере показано <xref:System.Security.SecureString.InsertAt%2A> <xref:System.Security.SecureString.Clear%2A> <xref:System.Security.SecureString.SetAt%2A>, как методы,, <xref:System.Security.SecureString> , и влияют на значение объекта. <xref:System.Security.SecureString.RemoveAt%2A></span><span class="sxs-lookup"><span data-stu-id="1f918-229">The following example demonstrates how the <xref:System.Security.SecureString.AppendChar%2A>, <xref:System.Security.SecureString.InsertAt%2A>, <xref:System.Security.SecureString.RemoveAt%2A>, <xref:System.Security.SecureString.SetAt%2A>, and <xref:System.Security.SecureString.Clear%2A> methods affect the value of a <xref:System.Security.SecureString> object.</span></span>  
  
 [!code-cpp[SecureString.xAt#1](~/samples/snippets/cpp/VS_Snippets_CLR/SecureString.xAt/CPP/SecureString.xAt.cpp#1)]
 [!code-csharp[SecureString.xAt#1](~/samples/snippets/csharp/VS_Snippets_CLR/SecureString.xAt/CS/xat.cs#1)]
 [!code-vb[SecureString.xAt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecureString.xAt/VB/xat.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="1f918-230">Защищенная строка уже удалена.</span><span class="sxs-lookup"><span data-stu-id="1f918-230">This secure string has already been disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1f918-231">Данная защищенная строка доступна только для чтения.</span><span class="sxs-lookup"><span data-stu-id="1f918-231">This secure string is read-only.</span></span></exception>
        <altmember cref="P:System.Security.SecureString.Length" />
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public System.Security.SecureString Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.SecureString Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecureString.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Function Copy () As SecureString" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::SecureString ^ Copy();" />
      <MemberSignature Language="F#" Value="member this.Copy : unit -&gt; System.Security.SecureString" Usage="secureString.Copy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.SecureString</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.SecureString</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1f918-232">Создает копию текущей защищенной строки.</span><span class="sxs-lookup"><span data-stu-id="1f918-232">Creates a copy of the current secure string.</span></span></summary>
        <returns><span data-ttu-id="1f918-233">Копия этой защищенной строки.</span><span class="sxs-lookup"><span data-stu-id="1f918-233">A duplicate of this secure string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f918-234">Если экземпляр <xref:System.Security.SecureString> объекта помечен атрибутом только для чтения, копия этого экземпляра не будет доступна только для чтения.</span><span class="sxs-lookup"><span data-stu-id="1f918-234">If an instance of a <xref:System.Security.SecureString> is marked read-only, the copy of that instance will not be read-only.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="1f918-235">Защищенная строка уже удалена.</span><span class="sxs-lookup"><span data-stu-id="1f918-235">This secure string has already been disposed.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="1f918-236">Произошла ошибка при защите значения этой защищенной строки или снятии с него защиты.</span><span class="sxs-lookup"><span data-stu-id="1f918-236">An error occurred while protecting or unprotecting the value of this secure string.</span></span></exception>
        <altmember cref="M:System.Security.SecureString.MakeReadOnly" />
        <altmember cref="M:System.Security.SecureString.IsReadOnly" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecureString.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="secureString.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Security.SecureString</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1f918-237">Освобождает все ресурсы, используемые текущим объектом <see cref="T:System.Security.SecureString" />.</span><span class="sxs-lookup"><span data-stu-id="1f918-237">Releases all resources used by the current <see cref="T:System.Security.SecureString" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f918-238">Метод записывает двоичные нули в выделенную память, содержащую значение этого <xref:System.Security.SecureString> объекта, а затем освобождает выделенную память. <xref:System.Security.SecureString.Dispose%2A></span><span class="sxs-lookup"><span data-stu-id="1f918-238">The <xref:System.Security.SecureString.Dispose%2A> method writes binary zeroes to the allocated memory that contains the value of this <xref:System.Security.SecureString> object, then frees the allocated memory.</span></span>  
  
 <span data-ttu-id="1f918-239">Дополнительные сведения см. в разделе [Сборка мусора](~/docs/standard/garbage-collection/index.md).</span><span class="sxs-lookup"><span data-stu-id="1f918-239">For more information, see [Garbage Collection](~/docs/standard/garbage-collection/index.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertAt">
      <MemberSignature Language="C#" Value="public void InsertAt (int index, char c);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InsertAt(int32 index, char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecureString.InsertAt(System.Int32,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InsertAt (index As Integer, c As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InsertAt(int index, char c);" />
      <MemberSignature Language="F#" Value="member this.InsertAt : int * char -&gt; unit" Usage="secureString.InsertAt (index, c)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.SecureString</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netstandard-2.1">
          <AttributeName>System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptions</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="1f918-240">Индекс позиции вставки параметра <paramref name="c" />.</span><span class="sxs-lookup"><span data-stu-id="1f918-240">The index position where parameter <paramref name="c" /> is inserted.</span></span></param>
        <param name="c"><span data-ttu-id="1f918-241">Вставляемый знак.</span><span class="sxs-lookup"><span data-stu-id="1f918-241">The character to insert.</span></span></param>
        <summary><span data-ttu-id="1f918-242">Вставляет знак в заданную индексом позицию защищенной строки.</span><span class="sxs-lookup"><span data-stu-id="1f918-242">Inserts a character in this secure string at the specified index position.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f918-243">Индекс отсчитывается от нуля; Первый символ в этой защищенной строке находится в нулевой позиции индекса.</span><span class="sxs-lookup"><span data-stu-id="1f918-243">The index is zero-based; the first character in this secure string is at index position zero.</span></span>  
  
 <span data-ttu-id="1f918-244">Если в реализации используется механизм защиты, например шифрование, то значение защищенной строки (если таковое имеется) не защищается; `c` вставляется по указанной позиции индекса; затем новое значение защищается повторно.</span><span class="sxs-lookup"><span data-stu-id="1f918-244">If the implementation uses a protection mechanism, such as encryption, the value of the secure string, if any, is unprotected; `c` is inserted at the specified index position; then the new value is re-protected.</span></span> <span data-ttu-id="1f918-245">Метод возвращает те же результаты, <xref:System.Security.SecureString.AppendChar%2A> что и метод, который вставляет символ в конце `index` защищенной строки <xref:System.Security.SecureString.InsertAt%2A> , если параметр имеет значение длины данного экземпляра. <xref:System.Security.SecureString.InsertAt%2A></span><span class="sxs-lookup"><span data-stu-id="1f918-245">The <xref:System.Security.SecureString.InsertAt%2A> method yields the same results as the <xref:System.Security.SecureString.AppendChar%2A> method, which inserts a character at the end of a secure string, if the `index` parameter of <xref:System.Security.SecureString.InsertAt%2A> is set to the length of this instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1f918-246">В следующем <xref:System.Security.SecureString.AppendChar%2A>примере показано <xref:System.Security.SecureString.InsertAt%2A> <xref:System.Security.SecureString.Clear%2A> <xref:System.Security.SecureString.SetAt%2A>, как методы,, <xref:System.Security.SecureString> , и влияют на значение объекта. <xref:System.Security.SecureString.RemoveAt%2A></span><span class="sxs-lookup"><span data-stu-id="1f918-246">The following example demonstrates how the <xref:System.Security.SecureString.AppendChar%2A>, <xref:System.Security.SecureString.InsertAt%2A>, <xref:System.Security.SecureString.RemoveAt%2A>, <xref:System.Security.SecureString.SetAt%2A>, and <xref:System.Security.SecureString.Clear%2A> methods affect the value of a <xref:System.Security.SecureString> object.</span></span>  
  
 [!code-cpp[SecureString.xAt#1](~/samples/snippets/cpp/VS_Snippets_CLR/SecureString.xAt/CPP/SecureString.xAt.cpp#1)]
 [!code-csharp[SecureString.xAt#1](~/samples/snippets/csharp/VS_Snippets_CLR/SecureString.xAt/CS/xat.cs#1)]
 [!code-vb[SecureString.xAt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecureString.xAt/VB/xat.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="1f918-247">Защищенная строка уже удалена.</span><span class="sxs-lookup"><span data-stu-id="1f918-247">This secure string has already been disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1f918-248">Данная защищенная строка доступна только для чтения.</span><span class="sxs-lookup"><span data-stu-id="1f918-248">This secure string is read-only.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="1f918-249">Значение <paramref name="index" /> менее нуля или более длины защищенной строки.</span><span class="sxs-lookup"><span data-stu-id="1f918-249"><paramref name="index" /> is less than zero, or greater than the length of this secure string.</span></span>  
  
<span data-ttu-id="1f918-250">- или -</span><span class="sxs-lookup"><span data-stu-id="1f918-250">-or-</span></span> 
<span data-ttu-id="1f918-251">При выполнении этой операции длина защищенной строки превысит 65 536 символов.</span><span class="sxs-lookup"><span data-stu-id="1f918-251">Performing this operation would make the length of this secure string greater than 65,536 characters.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="1f918-252">Произошла ошибка при защите значения этой защищенной строки или снятии с него защиты.</span><span class="sxs-lookup"><span data-stu-id="1f918-252">An error occurred while protecting or unprotecting the value of this secure string.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsReadOnly() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecureString.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Function IsReadOnly () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsReadOnly();" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : unit -&gt; bool" Usage="secureString.IsReadOnly " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.SecureString</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1f918-253">Указывает, что защищенная строка доступна только для чтения.</span><span class="sxs-lookup"><span data-stu-id="1f918-253">Indicates whether this secure string is marked read-only.</span></span></summary>
        <returns><span data-ttu-id="1f918-254">Значение <see langword="true" />, если защищенная строка доступна только для чтения; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="1f918-254"><see langword="true" /> if this secure string is marked read-only; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f918-255">После того как экземпляр <xref:System.Security.SecureString> помечается как доступный только <xref:System.Security.SecureString.MakeReadOnly%2A> для чтения методом, любая попытка изменить значение экземпляра приведет к возникновению <xref:System.InvalidOperationException>исключения.</span><span class="sxs-lookup"><span data-stu-id="1f918-255">After an instance of <xref:System.Security.SecureString> is marked read-only by the <xref:System.Security.SecureString.MakeReadOnly%2A> method, any attempt to modify the value of the instance throws an <xref:System.InvalidOperationException>.</span></span> <span data-ttu-id="1f918-256">Используйте метод, чтобы проверить, доступен <xref:System.Security.SecureString> ли объект только для чтения, прежде чем пытаться изменить его. <xref:System.Security.SecureString.IsReadOnly%2A></span><span class="sxs-lookup"><span data-stu-id="1f918-256">Use the <xref:System.Security.SecureString.IsReadOnly%2A> method to test whether a <xref:System.Security.SecureString> is read-only before attempting to modify it.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="1f918-257">Защищенная строка уже удалена.</span><span class="sxs-lookup"><span data-stu-id="1f918-257">This secure string has already been disposed.</span></span></exception>
        <altmember cref="M:System.Security.SecureString.MakeReadOnly" />
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public int Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Length" />
      <MemberSignature Language="DocId" Value="P:System.Security.SecureString.Length" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Length As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Length { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Length : int" Usage="System.Security.SecureString.Length" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.SecureString</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1f918-258">Возвращает количество символов в текущей защищенной строке.</span><span class="sxs-lookup"><span data-stu-id="1f918-258">Gets the number of characters in the current secure string.</span></span></summary>
        <value><span data-ttu-id="1f918-259">Количество объектов <see cref="T:System.Char" /> в этой защищенной строке.</span><span class="sxs-lookup"><span data-stu-id="1f918-259">The number of <see cref="T:System.Char" /> objects in this secure string.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f918-260"><xref:System.Security.SecureString.Length%2A> Свойство возвращает <xref:System.Char>  количество объектов в данном экземпляре, а не число символов Юникода.</span><span class="sxs-lookup"><span data-stu-id="1f918-260">The <xref:System.Security.SecureString.Length%2A> property returns the number of <xref:System.Char> objects in this instance, not the number of Unicode characters.</span></span> <span data-ttu-id="1f918-261">Символ Юникода может быть представлен более чем одним <xref:System.Char> объектом.</span><span class="sxs-lookup"><span data-stu-id="1f918-261">A Unicode character might be represented by more than one <xref:System.Char> object.</span></span>  
  
 <span data-ttu-id="1f918-262">Максимальная длина <xref:System.Security.SecureString> экземпляра — 65 536 символов.</span><span class="sxs-lookup"><span data-stu-id="1f918-262">The maximum length of a <xref:System.Security.SecureString> instance is 65,536 characters.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="1f918-263">Защищенная строка уже удалена.</span><span class="sxs-lookup"><span data-stu-id="1f918-263">This secure string has already been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MakeReadOnly">
      <MemberSignature Language="C#" Value="public void MakeReadOnly ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MakeReadOnly() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecureString.MakeReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Sub MakeReadOnly ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MakeReadOnly();" />
      <MemberSignature Language="F#" Value="member this.MakeReadOnly : unit -&gt; unit" Usage="secureString.MakeReadOnly " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.SecureString</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1f918-264">Делает текстовое значение этой защищенной строки доступным только для чтения.</span><span class="sxs-lookup"><span data-stu-id="1f918-264">Makes the text value of this secure string read-only.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f918-265"><xref:System.Security.SecureString> Инициализируйте текстовое значение экземпляра класса <xref:System.Security.SecureString.%23ctor%2A> с помощью конструкторов и <xref:System.Security.SecureString.Clear%2A>измените <xref:System.Security.SecureString.SetAt%2A>значение с помощью методов, <xref:System.Security.SecureString.RemoveAt%2A>,, <xref:System.Security.SecureString.InsertAt%2A>и <xref:System.Security.SecureString.AppendChar%2A> .</span><span class="sxs-lookup"><span data-stu-id="1f918-265">Initialize the text value of an instance of the <xref:System.Security.SecureString> class with the <xref:System.Security.SecureString.%23ctor%2A> constructors, and modify the value with the <xref:System.Security.SecureString.Clear%2A>, <xref:System.Security.SecureString.RemoveAt%2A>, <xref:System.Security.SecureString.SetAt%2A>, <xref:System.Security.SecureString.InsertAt%2A>, and <xref:System.Security.SecureString.AppendChar%2A> methods.</span></span>  
  
 <span data-ttu-id="1f918-266">После внесения окончательных изменений используйте <xref:System.Security.SecureString.MakeReadOnly%2A> метод, чтобы сделать значение экземпляра неизменяемым (только для чтения).</span><span class="sxs-lookup"><span data-stu-id="1f918-266">After you have made your final modifications, use the <xref:System.Security.SecureString.MakeReadOnly%2A> method to make the value of the instance immutable (read-only).</span></span> <span data-ttu-id="1f918-267">Если значение помечено как доступное только для чтения, дальнейшая попытка его изменения приведет <xref:System.InvalidOperationException>к возникновению исключения.</span><span class="sxs-lookup"><span data-stu-id="1f918-267">After the value is marked as read-only, any further attempt to modify it throws an <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="1f918-268">Результат вызова <xref:System.Security.SecureString.MakeReadOnly%2A> является постоянным, <xref:System.Security.SecureString> так как класс не предоставляет средств для повторного изменения защищенной строки.</span><span class="sxs-lookup"><span data-stu-id="1f918-268">The effect of invoking <xref:System.Security.SecureString.MakeReadOnly%2A> is permanent because the <xref:System.Security.SecureString> class provides no means to make the secure string modifiable again.</span></span> <span data-ttu-id="1f918-269">Используйте метод, чтобы проверить <xref:System.Security.SecureString> , доступен ли экземпляр только для чтения. <xref:System.Security.SecureString.IsReadOnly%2A></span><span class="sxs-lookup"><span data-stu-id="1f918-269">Use the <xref:System.Security.SecureString.IsReadOnly%2A> method to test whether an instance of <xref:System.Security.SecureString> is read-only.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1f918-270">В следующем примере показано, <xref:System.Security.SecureString.AppendChar%2A> как можно использовать методы и <xref:System.Security.SecureString.RemoveAt%2A> для получения символов в пароле.</span><span class="sxs-lookup"><span data-stu-id="1f918-270">The following example demonstrates how the <xref:System.Security.SecureString.AppendChar%2A> and <xref:System.Security.SecureString.RemoveAt%2A> methods can be used to collect the characters in a password.</span></span> <span data-ttu-id="1f918-271">После сбора пароль становится доступен только для чтения.</span><span class="sxs-lookup"><span data-stu-id="1f918-271">After the password is collected, it is made read-only.</span></span>  
  
 [!code-cpp[SecureString.xChar#1](~/samples/snippets/cpp/VS_Snippets_CLR/SecureString.xChar/CPP/SecureString.xChar.cpp#1)]
 [!code-csharp[SecureString.xChar#1](~/samples/snippets/csharp/VS_Snippets_CLR/SecureString.xChar/CS/xchar.cs#1)]
 [!code-vb[SecureString.xChar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecureString.xChar/VB/xchar.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="1f918-272">Защищенная строка уже удалена.</span><span class="sxs-lookup"><span data-stu-id="1f918-272">This secure string has already been disposed.</span></span></exception>
        <altmember cref="M:System.Security.SecureString.IsReadOnly" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecureString.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="member this.RemoveAt : int -&gt; unit" Usage="secureString.RemoveAt index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.SecureString</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netstandard-2.1">
          <AttributeName>System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptions</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="1f918-273">Индекс знака в защищенной строке.</span><span class="sxs-lookup"><span data-stu-id="1f918-273">The index position of a character in this secure string.</span></span></param>
        <summary><span data-ttu-id="1f918-274">Удаляет из защищенной строки знак, расположенный по указанному индексу.</span><span class="sxs-lookup"><span data-stu-id="1f918-274">Removes the character at the specified index position from this secure string.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f918-275">Индекс отсчитывается от нуля; Первый символ в этом экземпляре находится в нулевой позиции индекса.</span><span class="sxs-lookup"><span data-stu-id="1f918-275">The index is zero-based; the first character in this instance is at index position zero.</span></span>  
  
 <span data-ttu-id="1f918-276">Если в реализации используется механизм защиты, например шифрование, то значение этой защищенной строки, если таковое имеется, не защищено; символ в указанной позиции индекса удаляется; Затем новое значение защищается повторно.</span><span class="sxs-lookup"><span data-stu-id="1f918-276">If the implementation uses a protection mechanism, such as encryption, the value of this secure string, if any, is unprotected; the character at the specified index position is removed; then the new value is re-protected.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1f918-277">В следующем <xref:System.Security.SecureString.AppendChar%2A>примере показано <xref:System.Security.SecureString.InsertAt%2A> <xref:System.Security.SecureString.Clear%2A> <xref:System.Security.SecureString.SetAt%2A>, как методы,, <xref:System.Security.SecureString> , и влияют на значение объекта. <xref:System.Security.SecureString.RemoveAt%2A></span><span class="sxs-lookup"><span data-stu-id="1f918-277">The following example demonstrates how the <xref:System.Security.SecureString.AppendChar%2A>, <xref:System.Security.SecureString.InsertAt%2A>, <xref:System.Security.SecureString.RemoveAt%2A>, <xref:System.Security.SecureString.SetAt%2A>, and <xref:System.Security.SecureString.Clear%2A> methods affect the value of a <xref:System.Security.SecureString> object.</span></span>  
  
 [!code-cpp[SecureString.xAt#1](~/samples/snippets/cpp/VS_Snippets_CLR/SecureString.xAt/CPP/SecureString.xAt.cpp#1)]
 [!code-csharp[SecureString.xAt#1](~/samples/snippets/csharp/VS_Snippets_CLR/SecureString.xAt/CS/xat.cs#1)]
 [!code-vb[SecureString.xAt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecureString.xAt/VB/xat.vb#1)]  
  
 <span data-ttu-id="1f918-278">В следующем примере показано, <xref:System.Security.SecureString.AppendChar%2A> как можно использовать методы и <xref:System.Security.SecureString.RemoveAt%2A> для получения символов в пароле.</span><span class="sxs-lookup"><span data-stu-id="1f918-278">The following example demonstrates how the <xref:System.Security.SecureString.AppendChar%2A> and <xref:System.Security.SecureString.RemoveAt%2A> methods can be used to collect the characters in a password.</span></span>  
  
 [!code-cpp[SecureString.xChar#1](~/samples/snippets/cpp/VS_Snippets_CLR/SecureString.xChar/CPP/SecureString.xChar.cpp#1)]
 [!code-csharp[SecureString.xChar#1](~/samples/snippets/csharp/VS_Snippets_CLR/SecureString.xChar/CS/xchar.cs#1)]
 [!code-vb[SecureString.xChar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecureString.xChar/VB/xchar.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="1f918-279">Защищенная строка уже удалена.</span><span class="sxs-lookup"><span data-stu-id="1f918-279">This secure string has already been disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1f918-280">Данная защищенная строка доступна только для чтения.</span><span class="sxs-lookup"><span data-stu-id="1f918-280">This secure string is read-only.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="1f918-281">Значение <paramref name="index" /> меньше нуля или больше или равно длине данной защищенной строки.</span><span class="sxs-lookup"><span data-stu-id="1f918-281"><paramref name="index" /> is less than zero, or greater than or equal to the length of this secure string.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="1f918-282">Произошла ошибка при защите значения этой защищенной строки или снятии с него защиты.</span><span class="sxs-lookup"><span data-stu-id="1f918-282">An error occurred while protecting or unprotecting the value of this secure string.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetAt">
      <MemberSignature Language="C#" Value="public void SetAt (int index, char c);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAt(int32 index, char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecureString.SetAt(System.Int32,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetAt (index As Integer, c As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAt(int index, char c);" />
      <MemberSignature Language="F#" Value="member this.SetAt : int * char -&gt; unit" Usage="secureString.SetAt (index, c)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.SecureString</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netstandard-2.1">
          <AttributeName>System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptions</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="1f918-283">Индекс имеющегося знака в защищенной строке.</span><span class="sxs-lookup"><span data-stu-id="1f918-283">The index position of an existing character in this secure string</span></span></param>
        <param name="c"><span data-ttu-id="1f918-284">Знак, заменяющий имеющийся знак.</span><span class="sxs-lookup"><span data-stu-id="1f918-284">A character that replaces the existing character.</span></span></param>
        <summary><span data-ttu-id="1f918-285">Заменяет расположенный по указанному индексу знак другим знаком.</span><span class="sxs-lookup"><span data-stu-id="1f918-285">Replaces the existing character at the specified index position with another character.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f918-286">Индекс отсчитывается от нуля; Первый символ в этом экземпляре находится в нулевой позиции индекса.</span><span class="sxs-lookup"><span data-stu-id="1f918-286">The index is zero-based; the first character in this instance is at index position zero.</span></span>  
  
 <span data-ttu-id="1f918-287">Если в реализации используется механизм защиты, например шифрование, то значение защищенной строки (если таковое имеется) не защищается; `c` присваивается указанной позиции индекса; затем новое значение защищается повторно.</span><span class="sxs-lookup"><span data-stu-id="1f918-287">If the implementation uses a protection mechanism, such as encryption, the value of the secure string, if any, is unprotected; `c` is assigned to the specified index position; then the new value is re-protected.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1f918-288">В следующем <xref:System.Security.SecureString.AppendChar%2A>примере показано <xref:System.Security.SecureString.InsertAt%2A> <xref:System.Security.SecureString.Clear%2A> <xref:System.Security.SecureString.SetAt%2A>, как методы,, <xref:System.Security.SecureString> , и влияют на значение объекта. <xref:System.Security.SecureString.RemoveAt%2A></span><span class="sxs-lookup"><span data-stu-id="1f918-288">The following example demonstrates how the <xref:System.Security.SecureString.AppendChar%2A>, <xref:System.Security.SecureString.InsertAt%2A>, <xref:System.Security.SecureString.RemoveAt%2A>, <xref:System.Security.SecureString.SetAt%2A>, and <xref:System.Security.SecureString.Clear%2A> methods affect the value of a <xref:System.Security.SecureString> object.</span></span>  
  
 [!code-cpp[SecureString.xAt#1](~/samples/snippets/cpp/VS_Snippets_CLR/SecureString.xAt/CPP/SecureString.xAt.cpp#1)]
 [!code-csharp[SecureString.xAt#1](~/samples/snippets/csharp/VS_Snippets_CLR/SecureString.xAt/CS/xat.cs#1)]
 [!code-vb[SecureString.xAt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/SecureString.xAt/VB/xat.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="1f918-289">Защищенная строка уже удалена.</span><span class="sxs-lookup"><span data-stu-id="1f918-289">This secure string has already been disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1f918-290">Данная защищенная строка доступна только для чтения.</span><span class="sxs-lookup"><span data-stu-id="1f918-290">This secure string is read-only.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="1f918-291">Значение <paramref name="index" /> меньше нуля или больше или равно длине данной защищенной строки.</span><span class="sxs-lookup"><span data-stu-id="1f918-291"><paramref name="index" /> is less than zero, or greater than or equal to the length of this secure string.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="1f918-292">Произошла ошибка при защите значения этой защищенной строки или снятии с него защиты.</span><span class="sxs-lookup"><span data-stu-id="1f918-292">An error occurred while protecting or unprotecting the value of this secure string.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
