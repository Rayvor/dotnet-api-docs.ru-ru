<Type Name="SuppressUnmanagedCodeSecurityAttribute" FullName="System.Security.SuppressUnmanagedCodeSecurityAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="60170840b96d5e63470d8b52472cb3fa7bd188c6" /><Meta Name="ms.sourcegitcommit" Value="bc24a3ba616ee1df8b858f9400cae4f058ea3a7e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="06/19/2019" /><Meta Name="ms.locfileid" Value="67246197" /></Metadata><TypeSignature Language="C#" Value="public sealed class SuppressUnmanagedCodeSecurityAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SuppressUnmanagedCodeSecurityAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Security.SuppressUnmanagedCodeSecurityAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SuppressUnmanagedCodeSecurityAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class SuppressUnmanagedCodeSecurityAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type SuppressUnmanagedCodeSecurityAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-3.0">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Method | System.AttributeTargets.Interface | System.AttributeTargets.Delegate, AllowMultiple=true, Inherited=false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netstandard-2.0;netcore-2.2;netstandard-2.1">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Delegate | System.AttributeTargets.Interface | System.AttributeTargets.Method, AllowMultiple=true, Inherited=false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Method | System.AttributeTargets.Interface, AllowMultiple=true, Inherited=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Позволяет управляемому коду передавать управление неуправляемому коду без проверки стека. Этот класс не наследуется.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!CAUTION]
>  Этот атрибут можно используйте с особой осторожностью. Неправильное использование может создать уязвимостей системы безопасности.  
  
 Этот атрибут может применяться к методам, которые нужно вызывать в машинном коде без потерь производительности, проверку безопасности во время выполнения при этом. Проверка стека, выполняемая при вызове неуправляемого кода опускается во время выполнения, что значительно повышает быстродействие. С помощью этого атрибута в классе применяет их на все методы класса.  
  
 Как правило, каждый раз, когда управляемый код вызывает неуправляемый код (с помощью PInvoke или COM-взаимодействия в машинный код), есть требование `UnmanagedCode` разрешение, чтобы обеспечить все вызывающие объекты имеют необходимое разрешение для этого. Применяя этот явный атрибут, разработчики могут отключить это требование во время выполнения. Разработчик должен нести ответственность за обеспечение того, что переход к неуправляемому коду надежно защищен другими способами. Спрос на `UnmanagedCode` разрешение будет выполняться во время компоновки. Например, если функция A вызывает функцию B и функцию B помечается <xref:System.Security.SuppressUnmanagedCodeSecurityAttribute>, функция будет выполнена проверка типа разрешение неуправляемого кода во время компиляции just-in-time, но не во время выполнения.  
  
 Этот атрибут действует только при применении к методам PInvoke (или классов, содержащих методы PInvoke) или определении интерфейса, через который будет осуществляться взаимодействие вызовов. Он будет проигнорирован в других контекстах.  
  
 Этот атрибут полезен для реализации класса, который предоставляет доступ к системным ресурсам посредством неуправляемого кода. Код, не имеет разрешения на доступ к неуправляемому коду, может вызвать класс с этим атрибутом, для доступа к неуправляемому коду. Это только безопасно, если модуль записи класса с этим атрибутом, обеспечил безопасность класса. В противном случае этот атрибут является опасной операцией и может разрешить кода, который его использует злонамеренное использование.  
  
 Это не является атрибутом декларативной безопасности, но обычным атрибутом (он является производным от <xref:System.Attribute>, а не <xref:System.Security.Permissions.SecurityAttribute>).  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/standard/attributes/index.md">Расширение метаданных с помощью атрибутов</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SuppressUnmanagedCodeSecurityAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SuppressUnmanagedCodeSecurityAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SuppressUnmanagedCodeSecurityAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Security.SuppressUnmanagedCodeSecurityAttribute" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Конструктор по умолчанию инициализирует все поля значениями по умолчанию.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>