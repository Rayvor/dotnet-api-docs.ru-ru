<Type Name="SuppressUnmanagedCodeSecurityAttribute" FullName="System.Security.SuppressUnmanagedCodeSecurityAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4c4aeaae6c9f349d63c3fc5a6e682faee9360e70" /><Meta Name="ms.sourcegitcommit" Value="e7974886b08aa83a8fb461e8550f31a7d4331ee3" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="07/23/2019" /><Meta Name="ms.locfileid" Value="68398820" /></Metadata><TypeSignature Language="C#" Value="public sealed class SuppressUnmanagedCodeSecurityAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SuppressUnmanagedCodeSecurityAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Security.SuppressUnmanagedCodeSecurityAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SuppressUnmanagedCodeSecurityAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class SuppressUnmanagedCodeSecurityAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type SuppressUnmanagedCodeSecurityAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-3.0">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Method | System.AttributeTargets.Interface | System.AttributeTargets.Delegate, AllowMultiple=true, Inherited=false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netstandard-2.0;netcore-2.2;netstandard-2.1">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Delegate | System.AttributeTargets.Interface | System.AttributeTargets.Method, AllowMultiple=true, Inherited=false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Method | System.AttributeTargets.Interface, AllowMultiple=true, Inherited=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Позволяет управляемому коду передавать управление неуправляемому коду без проверки стека. Этот класс не наследуется.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!CAUTION]
>  Используйте этот атрибут с крайней осторожностью. Неправильное использование может создать слабые места в системе безопасности.  
  
 Этот атрибут может применяться к методам, которые хотят вызывать машинный код без потери производительности при выполнении проверки безопасности во время выполнения. Проверка стека, выполненная при вызове неуправляемого кода, пропускается во время выполнения, что приводит к существенной экономии производительности. Использование этого атрибута в классе применяет его ко всем вложенным методам.  
  
 Как правило, каждый раз, когда управляемый код вызывает неуправляемый код (вызов PInvoke или COM-взаимодействие в машинный код), `UnmanagedCode` существует потребность в том, чтобы все вызывающие объекты имели необходимые разрешения. Применяя этот явный атрибут, разработчики могут подавить требование во время выполнения. Разработчик должен принять участие в гарантии того, что переход в неуправляемый код достаточно защищен другими средствами. Требование `UnmanagedCode` разрешения будет по-прежнему происходить во время компоновки. Например, если функция A вызывает функцию b, а функция б помечена атрибутом <xref:System.Security.SuppressUnmanagedCodeSecurityAttribute>, функция A будет проверяться на наличие разрешения на неуправляемый код во время JIT-компиляции, но не во время выполнения.  
  
 Этот атрибут эффективен только при применении к методам PInvoke (или к классам, содержащим методы PInvoke) или к определению интерфейса, через который будут выполняться вызовы взаимодействия. Он будет игнорироваться во всех других контекстах.  
  
 Этот атрибут полезен для реализации класса, предоставляющего доступ к системным ресурсам через неуправляемый код. Код, который не имеет разрешения на доступ к неуправляемому коду, может вызывать класс с этим атрибутом для доступа к неуправляемому коду. Это безопасно, только если средство записи класса с этим атрибутом запрограммирует класс для обеспечения безопасности. В противном случае этот атрибут является опасным и может разрешить неверное использование кода, использующего его.  
  
 Это не декларативный атрибут безопасности, а обычный атрибут (он наследуется от <xref:System.Attribute>, а не <xref:System.Security.Permissions.SecurityAttribute>).  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/standard/attributes/index.md">Расширение метаданных с помощью атрибутов</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SuppressUnmanagedCodeSecurityAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SuppressUnmanagedCodeSecurityAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SuppressUnmanagedCodeSecurityAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Security.SuppressUnmanagedCodeSecurityAttribute" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Конструктор без параметров инициализирует все поля значениями по умолчанию.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>