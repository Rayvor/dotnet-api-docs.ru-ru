<Type Name="Handle" FullName="System.Activities.Handle">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9099b2861558de764fc9641567759d760b7a91ba" /><Meta Name="ms.sourcegitcommit" Value="e7974886b08aa83a8fb461e8550f31a7d4331ee3" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="07/23/2019" /><Meta Name="ms.locfileid" Value="68396313" /></Metadata><TypeSignature Language="C#" Value="public abstract class Handle" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit Handle extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Handle" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Handle" />
  <TypeSignature Language="C++ CLI" Value="public ref class Handle abstract" />
  <TypeSignature Language="F#" Value="type Handle = class" />
  <AssemblyInfo>
    <AssemblyName>System.Activities</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.Serialization.DataContract</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="b2dfc-101">Представляет тип, время существования которого управляется средой выполнения рабочего процесса.</span><span class="sxs-lookup"><span data-stu-id="b2dfc-101">Represents a type that has its lifetime controlled by the workflow runtime.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b2dfc-102">Среда выполнения рабочего процесса управляет временем существования типов, производных от <xref:System.Activities.Handle>.</span><span class="sxs-lookup"><span data-stu-id="b2dfc-102">Types derived from <xref:System.Activities.Handle> have their lifetimes controlled by the workflow runtime.</span></span> <span data-ttu-id="b2dfc-103">Для переменных рабочего процесса, использующих типы обработки, среда выполнения использует необходимый конструктор без параметров для создания экземпляра типа, присваивает его <xref:System.Activities.Variable>и вызывает <xref:System.Activities.Handle.OnInitialize%2A> при инициализации среды.</span><span class="sxs-lookup"><span data-stu-id="b2dfc-103">For workflow variables of handle types, the runtime uses the required parameterless constructor to create an instance of the type, assigns it to the <xref:System.Activities.Variable>, and calls <xref:System.Activities.Handle.OnInitialize%2A> when initializing the environment.</span></span> <span data-ttu-id="b2dfc-104">Когда переменная выходит за пределы области, вызывается метод <xref:System.Activities.Handle.OnUninitialize%2A>.</span><span class="sxs-lookup"><span data-stu-id="b2dfc-104">When the variable goes out of scope, <xref:System.Activities.Handle.OnUninitialize%2A> is called.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Handle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Handle.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Handle();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b2dfc-105">Инициализирует новый экземпляр класса <see cref="T:System.Activities.Handle" />.</span><span class="sxs-lookup"><span data-stu-id="b2dfc-105">Initializes a new instance of the <see cref="T:System.Activities.Handle" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b2dfc-106">Классы, производные от <xref:System.Activities.Handle> , должны предоставлять конструктор без параметров.</span><span class="sxs-lookup"><span data-stu-id="b2dfc-106">Classes that derive from <xref:System.Activities.Handle> must provide a parameterless constructor.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecutionPropertyName">
      <MemberSignature Language="C#" Value="public string ExecutionPropertyName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ExecutionPropertyName" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Handle.ExecutionPropertyName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ExecutionPropertyName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ExecutionPropertyName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ExecutionPropertyName : string" Usage="System.Activities.Handle.ExecutionPropertyName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b2dfc-107">Возвращает имя, используемое этим дескриптором <see cref="T:System.Activities.Handle" /> при добавлении к свойствам выполнения действия.</span><span class="sxs-lookup"><span data-stu-id="b2dfc-107">Gets the name to be used by this <see cref="T:System.Activities.Handle" /> when added to an activity's execution properties.</span></span></summary>
        <value><span data-ttu-id="b2dfc-108">Имя производного типа, указанное в свойстве <see cref="P:System.Type.FullName" />.</span><span class="sxs-lookup"><span data-stu-id="b2dfc-108">The name of derived type as provided by <see cref="P:System.Type.FullName" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnInitialize">
      <MemberSignature Language="C#" Value="protected virtual void OnInitialize (System.Activities.HandleInitializationContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnInitialize(class System.Activities.HandleInitializationContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Handle.OnInitialize(System.Activities.HandleInitializationContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnInitialize (context As HandleInitializationContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnInitialize(System::Activities::HandleInitializationContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member OnInitialize : System.Activities.HandleInitializationContext -&gt; unit&#xA;override this.OnInitialize : System.Activities.HandleInitializationContext -&gt; unit" Usage="handle.OnInitialize context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Activities.HandleInitializationContext" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="b2dfc-109">Среда, в которой создается дескриптор.</span><span class="sxs-lookup"><span data-stu-id="b2dfc-109">The environment in which the handle is being created.</span></span></param>
        <summary><span data-ttu-id="b2dfc-110">Вызывается средой выполнения рабочего процесса, когда инициализируется среда, содержащая <see cref="T:System.Activities.Handle" />.</span><span class="sxs-lookup"><span data-stu-id="b2dfc-110">Called by the workflow runtime when the environment that contains the <see cref="T:System.Activities.Handle" /> is initialized.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnUninitialize">
      <MemberSignature Language="C#" Value="protected virtual void OnUninitialize (System.Activities.HandleInitializationContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnUninitialize(class System.Activities.HandleInitializationContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Handle.OnUninitialize(System.Activities.HandleInitializationContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnUninitialize (context As HandleInitializationContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnUninitialize(System::Activities::HandleInitializationContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member OnUninitialize : System.Activities.HandleInitializationContext -&gt; unit&#xA;override this.OnUninitialize : System.Activities.HandleInitializationContext -&gt; unit" Usage="handle.OnUninitialize context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Activities.HandleInitializationContext" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="b2dfc-111">Среда, в которой создан дескриптор.</span><span class="sxs-lookup"><span data-stu-id="b2dfc-111">The environment in which the handle was created.</span></span></param>
        <summary><span data-ttu-id="b2dfc-112">Вызывается средой выполнения рабочего процесса, когда переменная <see cref="T:System.Activities.Variable" /> для <see cref="T:System.Activities.Handle" /> выходит за пределы области.</span><span class="sxs-lookup"><span data-stu-id="b2dfc-112">Called by the workflow runtime when the <see cref="T:System.Activities.Variable" /> for the <see cref="T:System.Activities.Handle" /> goes out of scope.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Owner">
      <MemberSignature Language="C#" Value="public System.Activities.ActivityInstance Owner { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.ActivityInstance Owner" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Handle.Owner" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Owner As ActivityInstance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Activities::ActivityInstance ^ Owner { System::Activities::ActivityInstance ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Owner : System.Activities.ActivityInstance" Usage="System.Activities.Handle.Owner" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Activities.ActivityInstance</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b2dfc-113">Возвращает экземпляр <see cref="T:System.Activities.ActivityInstance" />, содержащий переменную <see cref="T:System.Activities.Variable" />, которая содержит дескриптор <see cref="T:System.Activities.Handle" />.</span><span class="sxs-lookup"><span data-stu-id="b2dfc-113">Gets the <see cref="T:System.Activities.ActivityInstance" /> that contains the <see cref="T:System.Activities.Variable" /> that contains the <see cref="T:System.Activities.Handle" />.</span></span></summary>
        <value><span data-ttu-id="b2dfc-114">Экземпляр действия, содержащий переменную <see cref="T:System.Activities.Variable" />, которая содержит дескриптор <see cref="T:System.Activities.Handle" />.</span><span class="sxs-lookup"><span data-stu-id="b2dfc-114">The activity instance that contains the <see cref="T:System.Activities.Variable" /> that contains the <see cref="T:System.Activities.Handle" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ThrowIfUninitialized">
      <MemberSignature Language="C#" Value="protected void ThrowIfUninitialized ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void ThrowIfUninitialized() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Handle.ThrowIfUninitialized" />
      <MemberSignature Language="VB.NET" Value="Protected Sub ThrowIfUninitialized ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void ThrowIfUninitialized();" />
      <MemberSignature Language="F#" Value="member this.ThrowIfUninitialized : unit -&gt; unit" Usage="handle.ThrowIfUninitialized " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b2dfc-115">Вызывает исключение <see cref="T:System.InvalidOperationException" />, если дескриптор <see cref="T:System.Activities.Handle" /> не инициализирован.</span><span class="sxs-lookup"><span data-stu-id="b2dfc-115">Throws an <see cref="T:System.InvalidOperationException" /> if the <see cref="T:System.Activities.Handle" /> has not been initialized.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b2dfc-116"><xref:System.Activities.Handle.ThrowIfUninitialized%2A> предоставляет авторам производных классов пользовательских дескрипторов удобный метод для вызова из любых методов и свойств производного класса, которые недопустимы, если не инициализирован <xref:System.Activities.Handle>.</span><span class="sxs-lookup"><span data-stu-id="b2dfc-116"><xref:System.Activities.Handle.ThrowIfUninitialized%2A> gives custom handle derived class authors a convenient method to call from any methods or properties of the derived class that are not valid if the <xref:System.Activities.Handle> is uninitialized.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>