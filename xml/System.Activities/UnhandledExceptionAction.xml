<Type Name="UnhandledExceptionAction" FullName="System.Activities.UnhandledExceptionAction">
  <Metadata><Meta Name="ms.openlocfilehash" Value="49ec3f0e8e54b201065483c932c4fb2a0667b4b5" /><Meta Name="ms.sourcegitcommit" Value="74239f3977d28923e5020663db2c4e91601bea79" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="07/24/2019" /><Meta Name="ms.locfileid" Value="68437481" /></Metadata><TypeSignature Language="C#" Value="public enum UnhandledExceptionAction" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed UnhandledExceptionAction extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Activities.UnhandledExceptionAction" />
  <TypeSignature Language="VB.NET" Value="Public Enum UnhandledExceptionAction" />
  <TypeSignature Language="C++ CLI" Value="public enum class UnhandledExceptionAction" />
  <TypeSignature Language="F#" Value="type UnhandledExceptionAction = " />
  <AssemblyInfo>
    <AssemblyName>System.Activities</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>Указывает действие, которое выполняется, когда исключение покидает корневой элемент рабочего процесса.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Функция <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A> вызывается, если исключение покидает корневой элемент рабочего процесса. Объект <xref:System.Activities.WorkflowApplicationUnhandledExceptionEventArgs> предоставляет доступ к исключению, а также к указателю на объект <xref:System.Activities.Activity>, который сформировал это исключение. Если <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A> обработчик не указан, то действие Terminate используется по умолчанию.  
  
   
  
## Examples

В следующем примере кода вызывается рабочий процесс, в котором создается исключение. Исключение не обрабатывается рабочим процессом, и вызывается обработчик <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A>. Чтобы получить сведения об исключении, проверяются аргументы <xref:System.Activities.WorkflowApplicationUnhandledExceptionEventArgs>, и рабочий процесс завершается.  
  
[!code-csharp[CFX_WorkflowApplicationExample#6](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#6)]  

В следующем примере кода вызывается рабочий процесс, в котором создается исключение. Исключение не обрабатывается рабочим процессом, и вызывается обработчик <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A>. Аргументы <xref:System.Activities.WorkflowApplicationUnhandledExceptionEventArgs> проверяются, чтобы получить сведения об исключении, а рабочий процесс завершается.  
  
[!code-csharp[CFX_WorkflowApplicationExample#7](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#7)]  

В следующем примере кода вызывается рабочий процесс, в котором создается исключение. Исключение не обрабатывается рабочим процессом, и вызывается обработчик <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A>. Аргументы <xref:System.Activities.WorkflowApplicationUnhandledExceptionEventArgs> проверяются, чтобы получить сведения об исключении, а рабочий процесс отменяется.  
  
 [!code-csharp[CFX_WorkflowApplicationExample#8](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#8)]  

 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Abort">
      <MemberSignature Language="C#" Value="Abort" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Activities.UnhandledExceptionAction Abort = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Activities.UnhandledExceptionAction.Abort" />
      <MemberSignature Language="VB.NET" Value="Abort" />
      <MemberSignature Language="C++ CLI" Value="Abort" />
      <MemberSignature Language="F#" Value="Abort = 0" Usage="System.Activities.UnhandledExceptionAction.Abort" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.UnhandledExceptionAction</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Указывает, что экземпляр <see cref="T:System.Activities.WorkflowApplication" /> должен прервать рабочий процесс. В результате вызывается делегат, возвращаемый <see cref="P:System.Activities.WorkflowApplication.Aborted" /> после прерывания процесса. Причиной прерывания служит необработанное исключение.</summary>
      </Docs>
    </Member>
    <Member MemberName="Cancel">
      <MemberSignature Language="C#" Value="Cancel" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Activities.UnhandledExceptionAction Cancel = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Activities.UnhandledExceptionAction.Cancel" />
      <MemberSignature Language="VB.NET" Value="Cancel" />
      <MemberSignature Language="C++ CLI" Value="Cancel" />
      <MemberSignature Language="F#" Value="Cancel = 1" Usage="System.Activities.UnhandledExceptionAction.Cancel" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.UnhandledExceptionAction</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Указывает, что экземпляр <see cref="T:System.Activities.WorkflowApplication" /> должен запланировать отмену корневого действия и возобновить выполнение. В результате вызывается делегат, возвращаемый свойством <see cref="P:System.Activities.WorkflowApplication.Completed" /> после отмены процесса.</summary>
      </Docs>
    </Member>
    <Member MemberName="Terminate">
      <MemberSignature Language="C#" Value="Terminate" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Activities.UnhandledExceptionAction Terminate = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Activities.UnhandledExceptionAction.Terminate" />
      <MemberSignature Language="VB.NET" Value="Terminate" />
      <MemberSignature Language="C++ CLI" Value="Terminate" />
      <MemberSignature Language="F#" Value="Terminate = 2" Usage="System.Activities.UnhandledExceptionAction.Terminate" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.UnhandledExceptionAction</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>Указывает, что экземпляр <see cref="T:System.Activities.WorkflowApplication" /> должен запланировать завершение корневого действия и возобновить выполнение. В результате вызывается делегат, назначаемый свойству <see cref="P:System.Activities.WorkflowApplication.Completed" /> после завершения процесса. Причиной завершения служит необработанное исключение. <see langword="Terminate" /> — действие по умолчанию, если не задан обработчик в свойстве <see cref="P:System.Activities.WorkflowApplication.OnUnhandledException" />.</summary>
      </Docs>
    </Member>
  </Members>
</Type>