<Type Name="NativeActivityMetadata" FullName="System.Activities.NativeActivityMetadata">
  <Metadata><Meta Name="ms.openlocfilehash" Value="baaddbd7e4ddf9a67f1ed5b141592900776ae817" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70623426" /></Metadata><TypeSignature Language="C#" Value="public struct NativeActivityMetadata" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit NativeActivityMetadata extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.Activities.NativeActivityMetadata" />
  <TypeSignature Language="VB.NET" Value="Public Structure NativeActivityMetadata" />
  <TypeSignature Language="C++ CLI" Value="public value class NativeActivityMetadata" />
  <TypeSignature Language="F#" Value="type NativeActivityMetadata = struct" />
  <AssemblyInfo>
    <AssemblyName>System.Activities</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Представляет набор аргументов, дочерних действий, переменных и делегатов, которые настроенный <see cref="T:System.Activities.NativeActivity" /> вносит в среду выполнения.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AddArgument">
      <MemberSignature Language="C#" Value="public void AddArgument (System.Activities.RuntimeArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddArgument(class System.Activities.RuntimeArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityMetadata.AddArgument(System.Activities.RuntimeArgument)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddArgument (argument As RuntimeArgument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddArgument(System::Activities::RuntimeArgument ^ argument);" />
      <MemberSignature Language="F#" Value="member this.AddArgument : System.Activities.RuntimeArgument -&gt; unit" Usage="nativeActivityMetadata.AddArgument argument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Activities.RuntimeArgument" />
      </Parameters>
      <Docs>
        <param name="argument">Аргумент для добавления в коллекцию.</param>
        <summary>Добавляет аргумент в коллекцию аргументов действия.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddChild">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Добавляет указанное действие в список дочерних действий в метаданных.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddChild">
      <MemberSignature Language="C#" Value="public void AddChild (System.Activities.Activity child);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddChild(class System.Activities.Activity child) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityMetadata.AddChild(System.Activities.Activity)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddChild (child As Activity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddChild(System::Activities::Activity ^ child);" />
      <MemberSignature Language="F#" Value="member this.AddChild : System.Activities.Activity -&gt; unit" Usage="nativeActivityMetadata.AddChild child" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="System.Activities.Activity" />
      </Parameters>
      <Docs>
        <param name="child">Действие для добавления.</param>
        <summary>Добавляет указанное действие в список дочерних действий в метаданных.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Действие, добавленное с помощью метода <xref:System.Activities.NativeActivityMetadata.AddChild%2A>, — это дочернее действие, которое может планироваться родительским действием напрямую. Эти действия должны предоставляться потребителем действия. Примером является коллекция <xref:System.Activities.Statements.Sequence.Activities%2A> действия <xref:System.Activities.Statements.Sequence>. Эти действия (а также все действия, добавляемые методом <xref:System.Activities.NativeActivityMetadata.AddChild%2A> или <xref:System.Activities.NativeActivityMetadata.AddImportedChild%2A>) имеют доступ к переменным, добавленным методом <xref:System.Activities.NativeActivityMetadata.AddVariable%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddChild">
      <MemberSignature Language="C#" Value="public void AddChild (System.Activities.Activity child, object origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddChild(class System.Activities.Activity child, object origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityMetadata.AddChild(System.Activities.Activity,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddChild (child As Activity, origin As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddChild(System::Activities::Activity ^ child, System::Object ^ origin);" />
      <MemberSignature Language="F#" Value="member this.AddChild : System.Activities.Activity * obj -&gt; unit" Usage="nativeActivityMetadata.AddChild (child, origin)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="System.Activities.Activity" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="origin" Type="System.Object" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="child">Действие для добавления.</param>
        <param name="origin">Источник действия.</param>
        <summary>Добавляет указанное действие в список дочерних действий в метаданных.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddDefaultExtensionProvider&lt;T&gt;">
      <MemberSignature Language="C#" Value="public void AddDefaultExtensionProvider&lt;T&gt; (Func&lt;T&gt; extensionProvider) where T : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddDefaultExtensionProvider&lt;class T&gt;(class System.Func`1&lt;!!T&gt; extensionProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityMetadata.AddDefaultExtensionProvider``1(System.Func{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddDefaultExtensionProvider(Of T As Class) (extensionProvider As Func(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : class void AddDefaultExtensionProvider(Func&lt;T&gt; ^ extensionProvider);" />
      <MemberSignature Language="F#" Value="member this.AddDefaultExtensionProvider : Func&lt;'T (requires 'T : null)&gt; -&gt; unit (requires 'T : null)" Usage="nativeActivityMetadata.AddDefaultExtensionProvider extensionProvider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="extensionProvider" Type="System.Func&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">Тип поставщика расширений.</typeparam>
        <param name="extensionProvider">Функция, возвращающая расширение.</param>
        <summary>Добавляет указанный поставщик расширений в коллекцию поставщиков расширений по умолчанию для данного действия.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если узел не предоставляет расширение типа `T`, то для его предоставления вычисляется данный поставщик расширений.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddDelegate">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Добавляет указанный делегат в список делегатов в метаданных.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddDelegate">
      <MemberSignature Language="C#" Value="public void AddDelegate (System.Activities.ActivityDelegate activityDelegate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddDelegate(class System.Activities.ActivityDelegate activityDelegate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityMetadata.AddDelegate(System.Activities.ActivityDelegate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddDelegate(System::Activities::ActivityDelegate ^ activityDelegate);" />
      <MemberSignature Language="F#" Value="member this.AddDelegate : System.Activities.ActivityDelegate -&gt; unit" Usage="nativeActivityMetadata.AddDelegate activityDelegate" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activityDelegate" Type="System.Activities.ActivityDelegate" />
      </Parameters>
      <Docs>
        <param name="activityDelegate">Добавляемый делегат.</param>
        <summary>Добавляет указанный делегат в список делегатов в метаданных.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddDelegate">
      <MemberSignature Language="C#" Value="public void AddDelegate (System.Activities.ActivityDelegate activityDelegate, object origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddDelegate(class System.Activities.ActivityDelegate activityDelegate, object origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityMetadata.AddDelegate(System.Activities.ActivityDelegate,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddDelegate(System::Activities::ActivityDelegate ^ activityDelegate, System::Object ^ origin);" />
      <MemberSignature Language="F#" Value="member this.AddDelegate : System.Activities.ActivityDelegate * obj -&gt; unit" Usage="nativeActivityMetadata.AddDelegate (activityDelegate, origin)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activityDelegate" Type="System.Activities.ActivityDelegate" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="origin" Type="System.Object" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="activityDelegate">Добавляемый делегат.</param>
        <param name="origin">Источник делегата.</param>
        <summary>Добавляет указанный делегат в список делегатов в метаданных.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddImplementationChild">
      <MemberSignature Language="C#" Value="public void AddImplementationChild (System.Activities.Activity implementationChild);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddImplementationChild(class System.Activities.Activity implementationChild) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityMetadata.AddImplementationChild(System.Activities.Activity)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddImplementationChild (implementationChild As Activity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddImplementationChild(System::Activities::Activity ^ implementationChild);" />
      <MemberSignature Language="F#" Value="member this.AddImplementationChild : System.Activities.Activity -&gt; unit" Usage="nativeActivityMetadata.AddImplementationChild implementationChild" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="implementationChild" Type="System.Activities.Activity" />
      </Parameters>
      <Docs>
        <param name="implementationChild">Действие для добавления.</param>
        <summary>Добавляет указанное действие в список действий реализации в метаданных.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Действие, добавленное с помощью метода <xref:System.Activities.NativeActivityMetadata.AddImplementationChild%2A>, — это дочернее действие, которое может планироваться родительским действием напрямую.  Эти действия являются подробностями реализации действия. Эти действия (и все действия, которые они <xref:System.Activities.NativeActivityMetadata.AddChild%2A> добавляют с помощью или <xref:System.Activities.NativeActivityMetadata.AddImportedChild%2A>) имеют доступ к аргументам этого действия, а <xref:System.Activities.NativeActivityMetadata.AddImplementationVariable%2A>также к переменным, добавленным с помощью.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddImplementationDelegate">
      <MemberSignature Language="C#" Value="public void AddImplementationDelegate (System.Activities.ActivityDelegate implementationDelegate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddImplementationDelegate(class System.Activities.ActivityDelegate implementationDelegate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityMetadata.AddImplementationDelegate(System.Activities.ActivityDelegate)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddImplementationDelegate (implementationDelegate As ActivityDelegate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddImplementationDelegate(System::Activities::ActivityDelegate ^ implementationDelegate);" />
      <MemberSignature Language="F#" Value="member this.AddImplementationDelegate : System.Activities.ActivityDelegate -&gt; unit" Usage="nativeActivityMetadata.AddImplementationDelegate implementationDelegate" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="implementationDelegate" Type="System.Activities.ActivityDelegate" />
      </Parameters>
      <Docs>
        <param name="implementationDelegate">Добавляемый делегат.</param>
        <summary>Добавляет указанный делегат в список делегатов реализации в метаданных.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddImplementationVariable">
      <MemberSignature Language="C#" Value="public void AddImplementationVariable (System.Activities.Variable implementationVariable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddImplementationVariable(class System.Activities.Variable implementationVariable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityMetadata.AddImplementationVariable(System.Activities.Variable)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddImplementationVariable (implementationVariable As Variable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddImplementationVariable(System::Activities::Variable ^ implementationVariable);" />
      <MemberSignature Language="F#" Value="member this.AddImplementationVariable : System.Activities.Variable -&gt; unit" Usage="nativeActivityMetadata.AddImplementationVariable implementationVariable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="implementationVariable" Type="System.Activities.Variable" />
      </Parameters>
      <Docs>
        <param name="implementationVariable">Добавляемая переменная.</param>
        <summary>Добавляет указанную переменную в коллекцию переменных реализации в метаданных.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddImportedChild">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Добавляет указанное действие в список импортированных дочерних действий в метаданных.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddImportedChild">
      <MemberSignature Language="C#" Value="public void AddImportedChild (System.Activities.Activity importedChild);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddImportedChild(class System.Activities.Activity importedChild) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityMetadata.AddImportedChild(System.Activities.Activity)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddImportedChild (importedChild As Activity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddImportedChild(System::Activities::Activity ^ importedChild);" />
      <MemberSignature Language="F#" Value="member this.AddImportedChild : System.Activities.Activity -&gt; unit" Usage="nativeActivityMetadata.AddImportedChild importedChild" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="importedChild" Type="System.Activities.Activity" />
      </Parameters>
      <Docs>
        <param name="importedChild">Действие для добавления.</param>
        <summary>Добавляет указанное действие в список импортированных дочерних действий в метаданных.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Импортированное дочернее действие — это дочернее действие, не запланированное родительским действием напрямую. Вместо этого родительское действие использует данное действие для настройки какого-то другого дочернего действия.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddImportedChild">
      <MemberSignature Language="C#" Value="public void AddImportedChild (System.Activities.Activity importedChild, object origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddImportedChild(class System.Activities.Activity importedChild, object origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityMetadata.AddImportedChild(System.Activities.Activity,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddImportedChild (importedChild As Activity, origin As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddImportedChild(System::Activities::Activity ^ importedChild, System::Object ^ origin);" />
      <MemberSignature Language="F#" Value="member this.AddImportedChild : System.Activities.Activity * obj -&gt; unit" Usage="nativeActivityMetadata.AddImportedChild (importedChild, origin)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="importedChild" Type="System.Activities.Activity" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="origin" Type="System.Object" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="importedChild">Действие для добавления.</param>
        <param name="origin">Источник действия.</param>
        <summary>Добавляет указанное действие в список импортированных дочерних действий в метаданных.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddImportedDelegate">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Добавляет указанный делегат в список импортированных делегатов в метаданных.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddImportedDelegate">
      <MemberSignature Language="C#" Value="public void AddImportedDelegate (System.Activities.ActivityDelegate importedDelegate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddImportedDelegate(class System.Activities.ActivityDelegate importedDelegate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityMetadata.AddImportedDelegate(System.Activities.ActivityDelegate)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddImportedDelegate (importedDelegate As ActivityDelegate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddImportedDelegate(System::Activities::ActivityDelegate ^ importedDelegate);" />
      <MemberSignature Language="F#" Value="member this.AddImportedDelegate : System.Activities.ActivityDelegate -&gt; unit" Usage="nativeActivityMetadata.AddImportedDelegate importedDelegate" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="importedDelegate" Type="System.Activities.ActivityDelegate" />
      </Parameters>
      <Docs>
        <param name="importedDelegate">Добавляемый делегат.</param>
        <summary>Добавляет указанный делегат в список импортированных делегатов в метаданных.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddImportedDelegate">
      <MemberSignature Language="C#" Value="public void AddImportedDelegate (System.Activities.ActivityDelegate importedDelegate, object origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddImportedDelegate(class System.Activities.ActivityDelegate importedDelegate, object origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityMetadata.AddImportedDelegate(System.Activities.ActivityDelegate,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddImportedDelegate (importedDelegate As ActivityDelegate, origin As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddImportedDelegate(System::Activities::ActivityDelegate ^ importedDelegate, System::Object ^ origin);" />
      <MemberSignature Language="F#" Value="member this.AddImportedDelegate : System.Activities.ActivityDelegate * obj -&gt; unit" Usage="nativeActivityMetadata.AddImportedDelegate (importedDelegate, origin)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="importedDelegate" Type="System.Activities.ActivityDelegate" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="origin" Type="System.Object" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="importedDelegate">Добавляемый делегат.</param>
        <param name="origin">Источник делегата.</param>
        <summary>Добавляет указанный делегат в список импортированных делегатов в метаданных.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddValidationError">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Добавляет ошибку проверки в коллекцию ошибок проверки в метаданных.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
Дополнительные сведения см. в разделе [императивная проверка на основе кода](~/docs/framework/windows-workflow-foundation/imperative-code-based-validation.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddValidationError">
      <MemberSignature Language="C#" Value="public void AddValidationError (System.Activities.Validation.ValidationError validationError);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddValidationError(class System.Activities.Validation.ValidationError validationError) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityMetadata.AddValidationError(System.Activities.Validation.ValidationError)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddValidationError(System::Activities::Validation::ValidationError ^ validationError);" />
      <MemberSignature Language="F#" Value="member this.AddValidationError : System.Activities.Validation.ValidationError -&gt; unit" Usage="nativeActivityMetadata.AddValidationError validationError" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="validationError" Type="System.Activities.Validation.ValidationError" />
      </Parameters>
      <Docs>
        <param name="validationError">Добавляемая ошибка проверки.</param>
        <summary>Добавляет указанную ошибку проверки в коллекцию ошибок проверки в метаданных.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
Дополнительные сведения см. в разделе [императивная проверка на основе кода](~/docs/framework/windows-workflow-foundation/imperative-code-based-validation.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddValidationError">
      <MemberSignature Language="C#" Value="public void AddValidationError (string validationErrorMessage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddValidationError(string validationErrorMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityMetadata.AddValidationError(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddValidationError (validationErrorMessage As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddValidationError(System::String ^ validationErrorMessage);" />
      <MemberSignature Language="F#" Value="member this.AddValidationError : string -&gt; unit" Usage="nativeActivityMetadata.AddValidationError validationErrorMessage" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="validationErrorMessage" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="validationErrorMessage">Сообщение, описывающее ошибку проверки.</param>
        <summary>С помощью указанного описания добавляет ошибку проверки в коллекцию ошибок проверки в метаданных.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
Дополнительные сведения см. в разделе [императивная проверка на основе кода](~/docs/framework/windows-workflow-foundation/imperative-code-based-validation.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddVariable">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Добавляет указанную переменную в коллекцию переменных в метаданных.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddVariable">
      <MemberSignature Language="C#" Value="public void AddVariable (System.Activities.Variable variable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddVariable(class System.Activities.Variable variable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityMetadata.AddVariable(System.Activities.Variable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddVariable(System::Activities::Variable ^ variable);" />
      <MemberSignature Language="F#" Value="member this.AddVariable : System.Activities.Variable -&gt; unit" Usage="nativeActivityMetadata.AddVariable variable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="variable" Type="System.Activities.Variable" />
      </Parameters>
      <Docs>
        <param name="variable">Добавляемая переменная.</param>
        <summary>Добавляет указанную переменную в коллекцию переменных в метаданных.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Переменные, добавленные с помощью этого метода, считаются частью общедоступной настраиваемой поверхности действия, то есть они должны предоставляться потребителем действия. Реализация действия не может получить доступ к переменным, добавленным с помощью этого метода. Действия, добавленные методом <xref:System.Activities.NativeActivityMetadata.AddImportedChild%2A> или <xref:System.Activities.NativeActivityMetadata.AddChild%2A> (а также все дочерние действия, не относящиеся к реализации) имеют доступ к переменным, добавленным этим методом.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddVariable">
      <MemberSignature Language="C#" Value="public void AddVariable (System.Activities.Variable variable, object origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddVariable(class System.Activities.Variable variable, object origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityMetadata.AddVariable(System.Activities.Variable,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddVariable(System::Activities::Variable ^ variable, System::Object ^ origin);" />
      <MemberSignature Language="F#" Value="member this.AddVariable : System.Activities.Variable * obj -&gt; unit" Usage="nativeActivityMetadata.AddVariable (variable, origin)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="variable" Type="System.Activities.Variable" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="origin" Type="System.Object" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="variable">Добавляемая переменная.</param>
        <param name="origin">Источник переменной.</param>
        <summary>Добавляет указанную переменную в коллекцию переменных в метаданных.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Bind">
      <MemberSignature Language="C#" Value="public void Bind (System.Activities.Argument binding, System.Activities.RuntimeArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Bind(class System.Activities.Argument binding, class System.Activities.RuntimeArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityMetadata.Bind(System.Activities.Argument,System.Activities.RuntimeArgument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Bind(System::Activities::Argument ^ binding, System::Activities::RuntimeArgument ^ argument);" />
      <MemberSignature Language="F#" Value="member this.Bind : System.Activities.Argument * System.Activities.RuntimeArgument -&gt; unit" Usage="nativeActivityMetadata.Bind (binding, argument)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="binding" Type="System.Activities.Argument" />
        <Parameter Name="argument" Type="System.Activities.RuntimeArgument" />
      </Parameters>
      <Docs>
        <param name="binding">Привязываемый элемент управления <see cref="T:System.Activities.Argument" />.</param>
        <param name="argument">Привязываемый элемент управления <see cref="T:System.Activities.RuntimeArgument" />.</param>
        <summary>Привязывает указанный аргумент <see cref="T:System.Activities.Argument" /> к указанному <see cref="T:System.Activities.RuntimeArgument" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Environment">
      <MemberSignature Language="C#" Value="public System.Activities.LocationReferenceEnvironment Environment { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.LocationReferenceEnvironment Environment" />
      <MemberSignature Language="DocId" Value="P:System.Activities.NativeActivityMetadata.Environment" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Environment As LocationReferenceEnvironment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Activities::LocationReferenceEnvironment ^ Environment { System::Activities::LocationReferenceEnvironment ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Environment : System.Activities.LocationReferenceEnvironment" Usage="System.Activities.NativeActivityMetadata.Environment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Activities.LocationReferenceEnvironment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает среду <see cref="T:System.Activities.LocationReferenceEnvironment" /> аргументов, переменных, аргументов делегатов или символов действия, предоставляемых арбитром <see cref="T:System.Activities.Hosting.SymbolResolver" />.</summary>
        <value>Среда ссылки на расположение действия для аргументов, переменных, аргументов делегата или символов, введенных <see cref="T:System.Activities.Hosting.SymbolResolver" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityMetadata.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="nativeActivityMetadata.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">Объект для сравнения.</param>
        <summary>Определяет, равен ли этот экземпляр метаданных указанному объекту.</summary>
        <returns>Значение <see langword="true" />, если указанный объект равен данному экземпляру метаданных; в противном случае — значение <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetArgumentsWithReflection">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;System.Activities.RuntimeArgument&gt; GetArgumentsWithReflection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.Collection`1&lt;class System.Activities.RuntimeArgument&gt; GetArgumentsWithReflection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityMetadata.GetArgumentsWithReflection" />
      <MemberSignature Language="VB.NET" Value="Public Function GetArgumentsWithReflection () As Collection(Of RuntimeArgument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::Collection&lt;System::Activities::RuntimeArgument ^&gt; ^ GetArgumentsWithReflection();" />
      <MemberSignature Language="F#" Value="member this.GetArgumentsWithReflection : unit -&gt; System.Collections.ObjectModel.Collection&lt;System.Activities.RuntimeArgument&gt;" Usage="nativeActivityMetadata.GetArgumentsWithReflection " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.Activities.RuntimeArgument&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает коллекцию аргументов, полученных с помощью отражения.</summary>
        <returns>Коллекция аргументов.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод использует действие <xref:System.ComponentModel.TypeDescriptor> для проверки всех открытых свойств типа <xref:System.Activities.Argument> и возвращает их в коллекцию.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChildrenWithReflection">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;System.Activities.Activity&gt; GetChildrenWithReflection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.Collection`1&lt;class System.Activities.Activity&gt; GetChildrenWithReflection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityMetadata.GetChildrenWithReflection" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChildrenWithReflection () As Collection(Of Activity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::Collection&lt;System::Activities::Activity ^&gt; ^ GetChildrenWithReflection();" />
      <MemberSignature Language="F#" Value="member this.GetChildrenWithReflection : unit -&gt; System.Collections.ObjectModel.Collection&lt;System.Activities.Activity&gt;" Usage="nativeActivityMetadata.GetChildrenWithReflection " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.Activities.Activity&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает коллекцию дочерних действий с использованием отражения.</summary>
        <returns>Коллекция дочерних действий.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод <xref:System.ComponentModel.TypeDescriptor> использует действие для проверки всех открытых свойств типа <xref:System.Activities.Activity>, `IList<T>` или, `ICollection<T>` где `T` является производным от <xref:System.Activities.Activity>, и возвращает их в коллекцию.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDelegatesWithReflection">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;System.Activities.ActivityDelegate&gt; GetDelegatesWithReflection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.Collection`1&lt;class System.Activities.ActivityDelegate&gt; GetDelegatesWithReflection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityMetadata.GetDelegatesWithReflection" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDelegatesWithReflection () As Collection(Of ActivityDelegate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::Collection&lt;System::Activities::ActivityDelegate ^&gt; ^ GetDelegatesWithReflection();" />
      <MemberSignature Language="F#" Value="member this.GetDelegatesWithReflection : unit -&gt; System.Collections.ObjectModel.Collection&lt;System.Activities.ActivityDelegate&gt;" Usage="nativeActivityMetadata.GetDelegatesWithReflection " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.Activities.ActivityDelegate&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает коллекцию делегатов с использованием отражения.</summary>
        <returns>Коллекция делегатов.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод <xref:System.ComponentModel.TypeDescriptor> использует действие для проверки всех открытых свойств типа <xref:System.Activities.ActivityDelegate>, `IList<T>` или, `ICollection<T>` где `T` является производным от <xref:System.Activities.ActivityDelegate>, и возвращает их в коллекцию.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityMetadata.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="nativeActivityMetadata.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает уникальный идентификатор этого экземпляра метаданных.</summary>
        <returns>Целое число, которое служит уникальным идентификатором этого экземпляра метаданных.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVariablesWithReflection">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;System.Activities.Variable&gt; GetVariablesWithReflection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.Collection`1&lt;class System.Activities.Variable&gt; GetVariablesWithReflection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityMetadata.GetVariablesWithReflection" />
      <MemberSignature Language="VB.NET" Value="Public Function GetVariablesWithReflection () As Collection(Of Variable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::Collection&lt;System::Activities::Variable ^&gt; ^ GetVariablesWithReflection();" />
      <MemberSignature Language="F#" Value="member this.GetVariablesWithReflection : unit -&gt; System.Collections.ObjectModel.Collection&lt;System.Activities.Variable&gt;" Usage="nativeActivityMetadata.GetVariablesWithReflection " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.Activities.Variable&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>С помощью отражения возвращает коллекцию переменных.</summary>
        <returns>Коллекция переменных.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод <xref:System.ComponentModel.TypeDescriptor> использует действие для проверки всех открытых свойств типа <xref:System.Activities.Variable>, `IList<T>` или, `ICollection<T>` где `T` является производным от <xref:System.Activities.Variable>, и возвращает их в коллекцию.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasViolations">
      <MemberSignature Language="C#" Value="public bool HasViolations { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasViolations" />
      <MemberSignature Language="DocId" Value="P:System.Activities.NativeActivityMetadata.HasViolations" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasViolations As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasViolations { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasViolations : bool" Usage="System.Activities.NativeActivityMetadata.HasViolations" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает значение, указывающее наличие ошибок проверки в метаданных.</summary>
        <value>Значение <see langword="true" />, если ошибки проверки есть; в противном случае — значение <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Activities.NativeActivityMetadata left, System.Activities.NativeActivityMetadata right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Activities.NativeActivityMetadata left, valuetype System.Activities.NativeActivityMetadata right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityMetadata.op_Equality(System.Activities.NativeActivityMetadata,System.Activities.NativeActivityMetadata)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As NativeActivityMetadata, right As NativeActivityMetadata) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Activities::NativeActivityMetadata left, System::Activities::NativeActivityMetadata right);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Activities.NativeActivityMetadata * System.Activities.NativeActivityMetadata -&gt; bool" Usage="left = right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Activities.NativeActivityMetadata" />
        <Parameter Name="right" Type="System.Activities.NativeActivityMetadata" />
      </Parameters>
      <Docs>
        <param name="left">Первый элемент для сравнения.</param>
        <param name="right">Второй элемент для сравнения.</param>
        <summary>Возвращает значение, указывающее, равны ли два указанных экземпляра метаданных.</summary>
        <returns>Значение <see langword="true" />, если два элемента равны, в противном случае — значение <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Activities.NativeActivityMetadata left, System.Activities.NativeActivityMetadata right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Activities.NativeActivityMetadata left, valuetype System.Activities.NativeActivityMetadata right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityMetadata.op_Inequality(System.Activities.NativeActivityMetadata,System.Activities.NativeActivityMetadata)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As NativeActivityMetadata, right As NativeActivityMetadata) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Activities::NativeActivityMetadata left, System::Activities::NativeActivityMetadata right);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Activities.NativeActivityMetadata * System.Activities.NativeActivityMetadata -&gt; bool" Usage="System.Activities.NativeActivityMetadata.op_Inequality (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Activities.NativeActivityMetadata" />
        <Parameter Name="right" Type="System.Activities.NativeActivityMetadata" />
      </Parameters>
      <Docs>
        <param name="left">Первый элемент для сравнения.</param>
        <param name="right">Второй элемент для сравнения.</param>
        <summary>Возвращает значение, показывающее неравенство двух указанных экземпляров метаданных.</summary>
        <returns>Значение <see langword="true" />, если две элемента не равны; в противном случае — значение <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RequireExtension">
      <MemberSignature Language="C#" Value="public void RequireExtension (Type extensionType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RequireExtension(class System.Type extensionType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityMetadata.RequireExtension(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RequireExtension (extensionType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RequireExtension(Type ^ extensionType);" />
      <MemberSignature Language="F#" Value="member this.RequireExtension : Type -&gt; unit" Usage="nativeActivityMetadata.RequireExtension extensionType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="extensionType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="extensionType">Тип расширения.</param>
        <summary>Указывает, что во время выполнения действию требуется расширение указанного типа.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если узлу не удается предоставить расширение указанного типа, проверка завершается с ошибками.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequireExtension&lt;T&gt;">
      <MemberSignature Language="C#" Value="public void RequireExtension&lt;T&gt; () where T : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RequireExtension&lt;class T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityMetadata.RequireExtension``1" />
      <MemberSignature Language="VB.NET" Value="Public Sub RequireExtension(Of T As Class) ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : class void RequireExtension();" />
      <MemberSignature Language="F#" Value="member this.RequireExtension : unit -&gt; unit (requires 'T : null)" Usage="nativeActivityMetadata.RequireExtension " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T">Тип расширения.</typeparam>
        <summary>Указывает, что во время выполнения действию требуется расширение указанного универсального типа.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если узлу не удается предоставить расширение указанного типа, проверка завершается с ошибками.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetArgumentsCollection">
      <MemberSignature Language="C#" Value="public void SetArgumentsCollection (System.Collections.ObjectModel.Collection&lt;System.Activities.RuntimeArgument&gt; arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetArgumentsCollection(class System.Collections.ObjectModel.Collection`1&lt;class System.Activities.RuntimeArgument&gt; arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityMetadata.SetArgumentsCollection(System.Collections.ObjectModel.Collection{System.Activities.RuntimeArgument})" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetArgumentsCollection (arguments As Collection(Of RuntimeArgument))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetArgumentsCollection(System::Collections::ObjectModel::Collection&lt;System::Activities::RuntimeArgument ^&gt; ^ arguments);" />
      <MemberSignature Language="F#" Value="member this.SetArgumentsCollection : System.Collections.ObjectModel.Collection&lt;System.Activities.RuntimeArgument&gt; -&gt; unit" Usage="nativeActivityMetadata.SetArgumentsCollection arguments" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arguments" Type="System.Collections.ObjectModel.Collection&lt;System.Activities.RuntimeArgument&gt;" />
      </Parameters>
      <Docs>
        <param name="arguments">Добавляемые аргументы.</param>
        <summary>Добавляет указанную коллекцию аргументов к аргументам действия.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetChildrenCollection">
      <MemberSignature Language="C#" Value="public void SetChildrenCollection (System.Collections.ObjectModel.Collection&lt;System.Activities.Activity&gt; children);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetChildrenCollection(class System.Collections.ObjectModel.Collection`1&lt;class System.Activities.Activity&gt; children) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityMetadata.SetChildrenCollection(System.Collections.ObjectModel.Collection{System.Activities.Activity})" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetChildrenCollection (children As Collection(Of Activity))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetChildrenCollection(System::Collections::ObjectModel::Collection&lt;System::Activities::Activity ^&gt; ^ children);" />
      <MemberSignature Language="F#" Value="member this.SetChildrenCollection : System.Collections.ObjectModel.Collection&lt;System.Activities.Activity&gt; -&gt; unit" Usage="nativeActivityMetadata.SetChildrenCollection children" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="children" Type="System.Collections.ObjectModel.Collection&lt;System.Activities.Activity&gt;" />
      </Parameters>
      <Docs>
        <param name="children">Добавляемые действия.</param>
        <summary>Добавляет указанную коллекцию в качестве дочерних действий для действия.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это эквивалентно вызову метода <xref:System.Activities.NativeActivityMetadata.AddChild%2A> для каждого элемента в коллекции.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDelegatesCollection">
      <MemberSignature Language="C#" Value="public void SetDelegatesCollection (System.Collections.ObjectModel.Collection&lt;System.Activities.ActivityDelegate&gt; delegates);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetDelegatesCollection(class System.Collections.ObjectModel.Collection`1&lt;class System.Activities.ActivityDelegate&gt; delegates) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityMetadata.SetDelegatesCollection(System.Collections.ObjectModel.Collection{System.Activities.ActivityDelegate})" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetDelegatesCollection (delegates As Collection(Of ActivityDelegate))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetDelegatesCollection(System::Collections::ObjectModel::Collection&lt;System::Activities::ActivityDelegate ^&gt; ^ delegates);" />
      <MemberSignature Language="F#" Value="member this.SetDelegatesCollection : System.Collections.ObjectModel.Collection&lt;System.Activities.ActivityDelegate&gt; -&gt; unit" Usage="nativeActivityMetadata.SetDelegatesCollection delegates" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="delegates" Type="System.Collections.ObjectModel.Collection&lt;System.Activities.ActivityDelegate&gt;" />
      </Parameters>
      <Docs>
        <param name="delegates">Добавляемые делегаты.</param>
        <summary>Добавляет указанную коллекцию в качестве делегатов для действия.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это эквивалентно вызову метода <xref:System.Activities.NativeActivityMetadata.AddDelegate%2A> для каждого элемента в коллекции.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetImplementationChildrenCollection">
      <MemberSignature Language="C#" Value="public void SetImplementationChildrenCollection (System.Collections.ObjectModel.Collection&lt;System.Activities.Activity&gt; implementationChildren);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetImplementationChildrenCollection(class System.Collections.ObjectModel.Collection`1&lt;class System.Activities.Activity&gt; implementationChildren) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityMetadata.SetImplementationChildrenCollection(System.Collections.ObjectModel.Collection{System.Activities.Activity})" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetImplementationChildrenCollection (implementationChildren As Collection(Of Activity))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetImplementationChildrenCollection(System::Collections::ObjectModel::Collection&lt;System::Activities::Activity ^&gt; ^ implementationChildren);" />
      <MemberSignature Language="F#" Value="member this.SetImplementationChildrenCollection : System.Collections.ObjectModel.Collection&lt;System.Activities.Activity&gt; -&gt; unit" Usage="nativeActivityMetadata.SetImplementationChildrenCollection implementationChildren" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="implementationChildren" Type="System.Collections.ObjectModel.Collection&lt;System.Activities.Activity&gt;" />
      </Parameters>
      <Docs>
        <param name="implementationChildren">Добавляемые действия.</param>
        <summary>Добавляет указанную коллекцию в качестве дочерних действий реализации для действия.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это эквивалентно вызову метода <xref:System.Activities.NativeActivityMetadata.AddImplementationChild%2A> для каждого элемента в коллекции.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetImplementationDelegatesCollection">
      <MemberSignature Language="C#" Value="public void SetImplementationDelegatesCollection (System.Collections.ObjectModel.Collection&lt;System.Activities.ActivityDelegate&gt; implementationDelegates);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetImplementationDelegatesCollection(class System.Collections.ObjectModel.Collection`1&lt;class System.Activities.ActivityDelegate&gt; implementationDelegates) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityMetadata.SetImplementationDelegatesCollection(System.Collections.ObjectModel.Collection{System.Activities.ActivityDelegate})" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetImplementationDelegatesCollection (implementationDelegates As Collection(Of ActivityDelegate))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetImplementationDelegatesCollection(System::Collections::ObjectModel::Collection&lt;System::Activities::ActivityDelegate ^&gt; ^ implementationDelegates);" />
      <MemberSignature Language="F#" Value="member this.SetImplementationDelegatesCollection : System.Collections.ObjectModel.Collection&lt;System.Activities.ActivityDelegate&gt; -&gt; unit" Usage="nativeActivityMetadata.SetImplementationDelegatesCollection implementationDelegates" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="implementationDelegates" Type="System.Collections.ObjectModel.Collection&lt;System.Activities.ActivityDelegate&gt;" />
      </Parameters>
      <Docs>
        <param name="implementationDelegates">Добавляемые делегаты.</param>
        <summary>Добавляет указанную коллекцию в качестве делегатов реализации для действия.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это эквивалентно вызову метода <xref:System.Activities.NativeActivityMetadata.AddImplementationDelegate%2A> для каждого элемента в коллекции.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetImplementationVariablesCollection">
      <MemberSignature Language="C#" Value="public void SetImplementationVariablesCollection (System.Collections.ObjectModel.Collection&lt;System.Activities.Variable&gt; implementationVariables);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetImplementationVariablesCollection(class System.Collections.ObjectModel.Collection`1&lt;class System.Activities.Variable&gt; implementationVariables) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityMetadata.SetImplementationVariablesCollection(System.Collections.ObjectModel.Collection{System.Activities.Variable})" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetImplementationVariablesCollection (implementationVariables As Collection(Of Variable))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetImplementationVariablesCollection(System::Collections::ObjectModel::Collection&lt;System::Activities::Variable ^&gt; ^ implementationVariables);" />
      <MemberSignature Language="F#" Value="member this.SetImplementationVariablesCollection : System.Collections.ObjectModel.Collection&lt;System.Activities.Variable&gt; -&gt; unit" Usage="nativeActivityMetadata.SetImplementationVariablesCollection implementationVariables" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="implementationVariables" Type="System.Collections.ObjectModel.Collection&lt;System.Activities.Variable&gt;" />
      </Parameters>
      <Docs>
        <param name="implementationVariables">Добавляемые делегаты.</param>
        <summary>Добавляет указанную коллекцию в качестве переменных реализации для действия.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это эквивалентно вызову метода <xref:System.Activities.NativeActivityMetadata.AddImplementationVariable%2A> для каждого элемента в коллекции.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetImportedChildrenCollection">
      <MemberSignature Language="C#" Value="public void SetImportedChildrenCollection (System.Collections.ObjectModel.Collection&lt;System.Activities.Activity&gt; importedChildren);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetImportedChildrenCollection(class System.Collections.ObjectModel.Collection`1&lt;class System.Activities.Activity&gt; importedChildren) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityMetadata.SetImportedChildrenCollection(System.Collections.ObjectModel.Collection{System.Activities.Activity})" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetImportedChildrenCollection (importedChildren As Collection(Of Activity))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetImportedChildrenCollection(System::Collections::ObjectModel::Collection&lt;System::Activities::Activity ^&gt; ^ importedChildren);" />
      <MemberSignature Language="F#" Value="member this.SetImportedChildrenCollection : System.Collections.ObjectModel.Collection&lt;System.Activities.Activity&gt; -&gt; unit" Usage="nativeActivityMetadata.SetImportedChildrenCollection importedChildren" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="importedChildren" Type="System.Collections.ObjectModel.Collection&lt;System.Activities.Activity&gt;" />
      </Parameters>
      <Docs>
        <param name="importedChildren">Добавляемые действия.</param>
        <summary>Добавляет указанную коллекцию в качестве импортированных дочерних действий данного действия.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это эквивалентно вызову метода <xref:System.Activities.NativeActivityMetadata.AddImportedChild%2A> для каждого элемента в коллекции.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetImportedDelegatesCollection">
      <MemberSignature Language="C#" Value="public void SetImportedDelegatesCollection (System.Collections.ObjectModel.Collection&lt;System.Activities.ActivityDelegate&gt; importedDelegates);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetImportedDelegatesCollection(class System.Collections.ObjectModel.Collection`1&lt;class System.Activities.ActivityDelegate&gt; importedDelegates) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityMetadata.SetImportedDelegatesCollection(System.Collections.ObjectModel.Collection{System.Activities.ActivityDelegate})" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetImportedDelegatesCollection (importedDelegates As Collection(Of ActivityDelegate))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetImportedDelegatesCollection(System::Collections::ObjectModel::Collection&lt;System::Activities::ActivityDelegate ^&gt; ^ importedDelegates);" />
      <MemberSignature Language="F#" Value="member this.SetImportedDelegatesCollection : System.Collections.ObjectModel.Collection&lt;System.Activities.ActivityDelegate&gt; -&gt; unit" Usage="nativeActivityMetadata.SetImportedDelegatesCollection importedDelegates" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="importedDelegates" Type="System.Collections.ObjectModel.Collection&lt;System.Activities.ActivityDelegate&gt;" />
      </Parameters>
      <Docs>
        <param name="importedDelegates">Добавляемые делегаты.</param>
        <summary>Добавляет указанную коллекцию в качестве импортированных делегатов данного действия.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это эквивалентно вызову метода <xref:System.Activities.NativeActivityMetadata.AddImportedDelegate%2A> для каждого элемента в коллекции.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetValidationErrorsCollection">
      <MemberSignature Language="C#" Value="public void SetValidationErrorsCollection (System.Collections.ObjectModel.Collection&lt;System.Activities.Validation.ValidationError&gt; validationErrors);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetValidationErrorsCollection(class System.Collections.ObjectModel.Collection`1&lt;class System.Activities.Validation.ValidationError&gt; validationErrors) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityMetadata.SetValidationErrorsCollection(System.Collections.ObjectModel.Collection{System.Activities.Validation.ValidationError})" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetValidationErrorsCollection (validationErrors As Collection(Of ValidationError))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetValidationErrorsCollection(System::Collections::ObjectModel::Collection&lt;System::Activities::Validation::ValidationError ^&gt; ^ validationErrors);" />
      <MemberSignature Language="F#" Value="member this.SetValidationErrorsCollection : System.Collections.ObjectModel.Collection&lt;System.Activities.Validation.ValidationError&gt; -&gt; unit" Usage="nativeActivityMetadata.SetValidationErrorsCollection validationErrors" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="validationErrors" Type="System.Collections.ObjectModel.Collection&lt;System.Activities.Validation.ValidationError&gt;" />
      </Parameters>
      <Docs>
        <param name="validationErrors">Добавляемые ошибки проверки.</param>
        <summary>Добавляет указанную коллекцию ошибок проверки в коллекцию ошибок проверки в метаданных.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetVariablesCollection">
      <MemberSignature Language="C#" Value="public void SetVariablesCollection (System.Collections.ObjectModel.Collection&lt;System.Activities.Variable&gt; variables);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetVariablesCollection(class System.Collections.ObjectModel.Collection`1&lt;class System.Activities.Variable&gt; variables) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityMetadata.SetVariablesCollection(System.Collections.ObjectModel.Collection{System.Activities.Variable})" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetVariablesCollection (variables As Collection(Of Variable))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetVariablesCollection(System::Collections::ObjectModel::Collection&lt;System::Activities::Variable ^&gt; ^ variables);" />
      <MemberSignature Language="F#" Value="member this.SetVariablesCollection : System.Collections.ObjectModel.Collection&lt;System.Activities.Variable&gt; -&gt; unit" Usage="nativeActivityMetadata.SetVariablesCollection variables" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="variables" Type="System.Collections.ObjectModel.Collection&lt;System.Activities.Variable&gt;" />
      </Parameters>
      <Docs>
        <param name="variables">Добавляемые переменные.</param>
        <summary>Добавляет указанную коллекцию переменных к переменным действия.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
