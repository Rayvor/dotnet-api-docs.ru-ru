<Type Name="RuntimeTransactionHandle" FullName="System.Activities.RuntimeTransactionHandle">
  <Metadata><Meta Name="ms.openlocfilehash" Value="03fa328231c7503e9428d9b9d6fb3ae0e461a92c" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70480420" /></Metadata><TypeSignature Language="C#" Value="public sealed class RuntimeTransactionHandle : System.Activities.Handle, System.Activities.IExecutionProperty, System.Activities.IPropertyRegistrationCallback" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit RuntimeTransactionHandle extends System.Activities.Handle implements class System.Activities.IExecutionProperty, class System.Activities.IPropertyRegistrationCallback" />
  <TypeSignature Language="DocId" Value="T:System.Activities.RuntimeTransactionHandle" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class RuntimeTransactionHandle&#xA;Inherits Handle&#xA;Implements IExecutionProperty, IPropertyRegistrationCallback" />
  <TypeSignature Language="C++ CLI" Value="public ref class RuntimeTransactionHandle sealed : System::Activities::Handle, System::Activities::IExecutionProperty, System::Activities::IPropertyRegistrationCallback" />
  <TypeSignature Language="F#" Value="type RuntimeTransactionHandle = class&#xA;    inherit Handle&#xA;    interface IExecutionProperty&#xA;    interface IPropertyRegistrationCallback" />
  <AssemblyInfo>
    <AssemblyName>System.Activities</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Activities.Handle</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Activities.IExecutionProperty</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Activities.IPropertyRegistrationCallback</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.Serialization.DataContract</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Предоставляет доступ к транзакции времени выполнения в экземпляре рабочего процесса.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.RuntimeTransactionHandle" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RuntimeTransactionHandle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.RuntimeTransactionHandle.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RuntimeTransactionHandle();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.RuntimeTransactionHandle" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RuntimeTransactionHandle (System.Transactions.Transaction rootTransaction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Transactions.Transaction rootTransaction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.RuntimeTransactionHandle.#ctor(System.Transactions.Transaction)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (rootTransaction As Transaction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RuntimeTransactionHandle(System::Transactions::Transaction ^ rootTransaction);" />
      <MemberSignature Language="F#" Value="new System.Activities.RuntimeTransactionHandle : System.Transactions.Transaction -&gt; System.Activities.RuntimeTransactionHandle" Usage="new System.Activities.RuntimeTransactionHandle rootTransaction" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="rootTransaction" Type="System.Transactions.Transaction" />
      </Parameters>
      <Docs>
        <param name="rootTransaction">Корневая транзакция.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Activities.RuntimeTransactionHandle" />, используя указанную корневую транзакцию.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AbortInstanceOnTransactionFailure">
      <MemberSignature Language="C#" Value="public bool AbortInstanceOnTransactionFailure { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AbortInstanceOnTransactionFailure" />
      <MemberSignature Language="DocId" Value="P:System.Activities.RuntimeTransactionHandle.AbortInstanceOnTransactionFailure" />
      <MemberSignature Language="VB.NET" Value="Public Property AbortInstanceOnTransactionFailure As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AbortInstanceOnTransactionFailure { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AbortInstanceOnTransactionFailure : bool with get, set" Usage="System.Activities.RuntimeTransactionHandle.AbortInstanceOnTransactionFailure" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, которое показывает, должен ли прерываться экземпляр рабочего процесса, если происходит сбой транзакции.</summary>
        <value>Значение <see langword="true" />, если экземпляр рабочего процесса должен прерываться, если происходит сбой транзакции; в противном случае — значение <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если <xref:System.Activities.RuntimeTransactionHandle.AbortInstanceOnTransactionFailure%2A> имеет `false`значение, то сбой транзакции приводит к исключению, которое приводит к распространению сбоя как обычного. По умолчанию для объекта <xref:System.Activities.RuntimeTransactionHandle.AbortInstanceOnTransactionFailure%2A> установлено значение `true`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CompleteTransaction">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Выполняет текущую транзакцию времени выполнения.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CompleteTransaction">
      <MemberSignature Language="C#" Value="public void CompleteTransaction (System.Activities.NativeActivityContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CompleteTransaction(class System.Activities.NativeActivityContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.RuntimeTransactionHandle.CompleteTransaction(System.Activities.NativeActivityContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CompleteTransaction (context As NativeActivityContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CompleteTransaction(System::Activities::NativeActivityContext ^ context);" />
      <MemberSignature Language="F#" Value="member this.CompleteTransaction : System.Activities.NativeActivityContext -&gt; unit" Usage="runtimeTransactionHandle.CompleteTransaction context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Activities.NativeActivityContext" />
      </Parameters>
      <Docs>
        <param name="context">Текущая среда выполнения.</param>
        <summary>Выполняет текущую транзакцию времени выполнения.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompleteTransaction">
      <MemberSignature Language="C#" Value="public void CompleteTransaction (System.Activities.NativeActivityContext context, System.Activities.BookmarkCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CompleteTransaction(class System.Activities.NativeActivityContext context, class System.Activities.BookmarkCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.RuntimeTransactionHandle.CompleteTransaction(System.Activities.NativeActivityContext,System.Activities.BookmarkCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CompleteTransaction (context As NativeActivityContext, callback As BookmarkCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CompleteTransaction(System::Activities::NativeActivityContext ^ context, System::Activities::BookmarkCallback ^ callback);" />
      <MemberSignature Language="F#" Value="member this.CompleteTransaction : System.Activities.NativeActivityContext * System.Activities.BookmarkCallback -&gt; unit" Usage="runtimeTransactionHandle.CompleteTransaction (context, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Activities.NativeActivityContext" />
        <Parameter Name="callback" Type="System.Activities.BookmarkCallback" />
      </Parameters>
      <Docs>
        <param name="context">Текущая среда выполнения.</param>
        <param name="callback">Обратный вызов закладки, который должен выполняться после завершения транзакции.</param>
        <summary>Завершает текущую транзакцию времени выполнения и планирует обратный вызов закладки после завершения закладки.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCurrentTransaction">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Возвращает ссылку на текущую транзакцию времени выполнения.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCurrentTransaction">
      <MemberSignature Language="C#" Value="public System.Transactions.Transaction GetCurrentTransaction (System.Activities.AsyncCodeActivityContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Transactions.Transaction GetCurrentTransaction(class System.Activities.AsyncCodeActivityContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.RuntimeTransactionHandle.GetCurrentTransaction(System.Activities.AsyncCodeActivityContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentTransaction (context As AsyncCodeActivityContext) As Transaction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Transactions::Transaction ^ GetCurrentTransaction(System::Activities::AsyncCodeActivityContext ^ context);" />
      <MemberSignature Language="F#" Value="member this.GetCurrentTransaction : System.Activities.AsyncCodeActivityContext -&gt; System.Transactions.Transaction" Usage="runtimeTransactionHandle.GetCurrentTransaction context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Transactions.Transaction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Activities.AsyncCodeActivityContext" />
      </Parameters>
      <Docs>
        <param name="context">Текущая среда выполнения.</param>
        <summary>Возвращает ссылку на текущую транзакцию времени выполнения.</summary>
        <returns>Текущая транзакция.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentTransaction">
      <MemberSignature Language="C#" Value="public System.Transactions.Transaction GetCurrentTransaction (System.Activities.CodeActivityContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Transactions.Transaction GetCurrentTransaction(class System.Activities.CodeActivityContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.RuntimeTransactionHandle.GetCurrentTransaction(System.Activities.CodeActivityContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentTransaction (context As CodeActivityContext) As Transaction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Transactions::Transaction ^ GetCurrentTransaction(System::Activities::CodeActivityContext ^ context);" />
      <MemberSignature Language="F#" Value="member this.GetCurrentTransaction : System.Activities.CodeActivityContext -&gt; System.Transactions.Transaction" Usage="runtimeTransactionHandle.GetCurrentTransaction context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Transactions.Transaction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Activities.CodeActivityContext" />
      </Parameters>
      <Docs>
        <param name="context">Текущая среда выполнения.</param>
        <summary>Возвращает ссылку на текущую транзакцию времени выполнения.</summary>
        <returns>Текущая транзакция.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentTransaction">
      <MemberSignature Language="C#" Value="public System.Transactions.Transaction GetCurrentTransaction (System.Activities.NativeActivityContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Transactions.Transaction GetCurrentTransaction(class System.Activities.NativeActivityContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.RuntimeTransactionHandle.GetCurrentTransaction(System.Activities.NativeActivityContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentTransaction (context As NativeActivityContext) As Transaction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Transactions::Transaction ^ GetCurrentTransaction(System::Activities::NativeActivityContext ^ context);" />
      <MemberSignature Language="F#" Value="member this.GetCurrentTransaction : System.Activities.NativeActivityContext -&gt; System.Transactions.Transaction" Usage="runtimeTransactionHandle.GetCurrentTransaction context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Transactions.Transaction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Activities.NativeActivityContext" />
      </Parameters>
      <Docs>
        <param name="context">Текущая среда выполнения.</param>
        <summary>Возвращает ссылку на текущую транзакцию времени выполнения.</summary>
        <returns>Текущая транзакция времени выполнения.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnInitialize">
      <MemberSignature Language="C#" Value="protected override void OnInitialize (System.Activities.HandleInitializationContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnInitialize(class System.Activities.HandleInitializationContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.RuntimeTransactionHandle.OnInitialize(System.Activities.HandleInitializationContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnInitialize (context As HandleInitializationContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnInitialize(System::Activities::HandleInitializationContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.OnInitialize : System.Activities.HandleInitializationContext -&gt; unit" Usage="runtimeTransactionHandle.OnInitialize context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Activities.HandleInitializationContext" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnUninitialize">
      <MemberSignature Language="C#" Value="protected override void OnUninitialize (System.Activities.HandleInitializationContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnUninitialize(class System.Activities.HandleInitializationContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.RuntimeTransactionHandle.OnUninitialize(System.Activities.HandleInitializationContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnUninitialize (context As HandleInitializationContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnUninitialize(System::Activities::HandleInitializationContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.OnUninitialize : System.Activities.HandleInitializationContext -&gt; unit" Usage="runtimeTransactionHandle.OnUninitialize context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Activities.HandleInitializationContext" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestTransactionContext">
      <MemberSignature Language="C#" Value="public void RequestTransactionContext (System.Activities.NativeActivityContext context, Action&lt;System.Activities.NativeActivityTransactionContext,object&gt; callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RequestTransactionContext(class System.Activities.NativeActivityContext context, class System.Action`2&lt;class System.Activities.NativeActivityTransactionContext, object&gt; callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.RuntimeTransactionHandle.RequestTransactionContext(System.Activities.NativeActivityContext,System.Action{System.Activities.NativeActivityTransactionContext,System.Object},System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RequestTransactionContext (context As NativeActivityContext, callback As Action(Of NativeActivityTransactionContext, Object), state As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RequestTransactionContext(System::Activities::NativeActivityContext ^ context, Action&lt;System::Activities::NativeActivityTransactionContext ^, System::Object ^&gt; ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.RequestTransactionContext : System.Activities.NativeActivityContext * Action&lt;System.Activities.NativeActivityTransactionContext, obj&gt; * obj -&gt; unit" Usage="runtimeTransactionHandle.RequestTransactionContext (context, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Activities.NativeActivityContext" />
        <Parameter Name="callback" Type="System.Action&lt;System.Activities.NativeActivityTransactionContext,System.Object&gt;" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">Текущая среда выполнения.</param>
        <param name="callback">Метод, вызываемый при создании <see cref="T:System.Activities.NativeActivityTransactionContext" />.</param>
        <param name="state">Необязательное, предоставляемое пользователем состояние, содержащее сведения о запросе.</param>
        <summary>Запускает создание контекста <see cref="T:System.Activities.NativeActivityTransactionContext" /> для использования с новой транзакцией.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод используется, когда действие создает новую транзакцию для использования в среде выполнения. Рабочий процесс потенциально может сохраниться один или несколько раз перед обратным вызовом. Этот метод позволяет областям транзакции в нескольких ветвях параллельного выполнения одновременно ставить запросы в очередь, не препятствуя сохранению другой ветви после завершения транзакции. Чтобы избежать ошибок при сохранении рабочего потока, убедитесь, что объект состояния поддерживает сериализацию.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequireTransactionContext">
      <MemberSignature Language="C#" Value="public void RequireTransactionContext (System.Activities.NativeActivityContext context, Action&lt;System.Activities.NativeActivityTransactionContext,object&gt; callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RequireTransactionContext(class System.Activities.NativeActivityContext context, class System.Action`2&lt;class System.Activities.NativeActivityTransactionContext, object&gt; callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.RuntimeTransactionHandle.RequireTransactionContext(System.Activities.NativeActivityContext,System.Action{System.Activities.NativeActivityTransactionContext,System.Object},System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RequireTransactionContext (context As NativeActivityContext, callback As Action(Of NativeActivityTransactionContext, Object), state As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RequireTransactionContext(System::Activities::NativeActivityContext ^ context, Action&lt;System::Activities::NativeActivityTransactionContext ^, System::Object ^&gt; ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.RequireTransactionContext : System.Activities.NativeActivityContext * Action&lt;System.Activities.NativeActivityTransactionContext, obj&gt; * obj -&gt; unit" Usage="runtimeTransactionHandle.RequireTransactionContext (context, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Activities.NativeActivityContext" />
        <Parameter Name="callback" Type="System.Action&lt;System.Activities.NativeActivityTransactionContext,System.Object&gt;" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">Текущая среда выполнения.</param>
        <param name="callback">Метод, вызываемый при создании <see cref="T:System.Activities.NativeActivityTransactionContext" />.</param>
        <param name="state">Необязательное, предоставляемое пользователем состояние, содержащее сведения о запросе.</param>
        <summary>Запускает создание контекста <see cref="T:System.Activities.NativeActivityTransactionContext" /> для использования с существующей транзакцией.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод используется, если действие содержит транзакцию, которую необходимо использовать в среде выполнения. Рабочий процесс не может сохраняться между вызовом <xref:System.Activities.RuntimeTransactionHandle.RequireTransactionContext%2A> и последующим обратным вызовом. Повторный вызов <xref:System.Activities.RuntimeTransactionHandle.RequireTransactionContext%2A> до завершения первого вызова не допускается, а все вызовы после первого приводят к созданию исключений. Этот метод позволяет передавать в среду выполнения транзакции, прибывающие от ведущего приложения, без возможности создания промежуточной точки сохранения. Объект состояния с возможностью сериализации не обязателен, поскольку при использовании этого метода гарантируется невозможность сохраняемости экземпляра.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SuppressTransaction">
      <MemberSignature Language="C#" Value="public bool SuppressTransaction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SuppressTransaction" />
      <MemberSignature Language="DocId" Value="P:System.Activities.RuntimeTransactionHandle.SuppressTransaction" />
      <MemberSignature Language="VB.NET" Value="Public Property SuppressTransaction As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SuppressTransaction { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SuppressTransaction : bool with get, set" Usage="System.Activities.RuntimeTransactionHandle.SuppressTransaction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, которое показывает, подавляется ли эта транзакция времени выполнения.</summary>
        <value>Значение <see langword="true" />, если транзакция времени выполнения подавляется; в противном случае — значение <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Activities.IExecutionProperty.CleanupWorkflowThread">
      <MemberSignature Language="C#" Value="void IExecutionProperty.CleanupWorkflowThread ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Activities.IExecutionProperty.CleanupWorkflowThread() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.RuntimeTransactionHandle.System#Activities#IExecutionProperty#CleanupWorkflowThread" />
      <MemberSignature Language="VB.NET" Value="Sub CleanupWorkflowThread () Implements IExecutionProperty.CleanupWorkflowThread" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Activities.IExecutionProperty.CleanupWorkflowThread() = System::Activities::IExecutionProperty::CleanupWorkflowThread;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Activities.IExecutionProperty.CleanupWorkflowThread</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Описание этого члена см. в разделе <see cref="M:System.Activities.IExecutionProperty.CleanupWorkflowThread" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Activities.IExecutionProperty.SetupWorkflowThread">
      <MemberSignature Language="C#" Value="void IExecutionProperty.SetupWorkflowThread ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Activities.IExecutionProperty.SetupWorkflowThread() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.RuntimeTransactionHandle.System#Activities#IExecutionProperty#SetupWorkflowThread" />
      <MemberSignature Language="VB.NET" Value="Sub SetupWorkflowThread () Implements IExecutionProperty.SetupWorkflowThread" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Activities.IExecutionProperty.SetupWorkflowThread() = System::Activities::IExecutionProperty::SetupWorkflowThread;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Activities.IExecutionProperty.SetupWorkflowThread</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Описание этого члена см. в разделе <see cref="M:System.Activities.IExecutionProperty.SetupWorkflowThread" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Activities.IPropertyRegistrationCallback.Register">
      <MemberSignature Language="C#" Value="void IPropertyRegistrationCallback.Register (System.Activities.RegistrationContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Activities.IPropertyRegistrationCallback.Register(class System.Activities.RegistrationContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.RuntimeTransactionHandle.System#Activities#IPropertyRegistrationCallback#Register(System.Activities.RegistrationContext)" />
      <MemberSignature Language="VB.NET" Value="Sub Register (context As RegistrationContext) Implements IPropertyRegistrationCallback.Register" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Activities.IPropertyRegistrationCallback.Register(System::Activities::RegistrationContext ^ context) = System::Activities::IPropertyRegistrationCallback::Register;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Activities.IPropertyRegistrationCallback.Register(System.Activities.RegistrationContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Activities.RegistrationContext" />
      </Parameters>
      <Docs>
        <param name="context">Описание этого параметра см. в разделе <see cref="M:System.Activities.IPropertyRegistrationCallback.Register(System.Activities.RegistrationContext)" />.</param>
        <summary>Описание этого члена см. в разделе <see cref="M:System.Activities.IPropertyRegistrationCallback.Register(System.Activities.RegistrationContext)" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Activities.IPropertyRegistrationCallback.Unregister">
      <MemberSignature Language="C#" Value="void IPropertyRegistrationCallback.Unregister (System.Activities.RegistrationContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Activities.IPropertyRegistrationCallback.Unregister(class System.Activities.RegistrationContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.RuntimeTransactionHandle.System#Activities#IPropertyRegistrationCallback#Unregister(System.Activities.RegistrationContext)" />
      <MemberSignature Language="VB.NET" Value="Sub Unregister (context As RegistrationContext) Implements IPropertyRegistrationCallback.Unregister" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Activities.IPropertyRegistrationCallback.Unregister(System::Activities::RegistrationContext ^ context) = System::Activities::IPropertyRegistrationCallback::Unregister;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Activities.IPropertyRegistrationCallback.Unregister(System.Activities.RegistrationContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Activities.RegistrationContext" />
      </Parameters>
      <Docs>
        <param name="context">Описание этого параметра см. в разделе <see cref="M:System.Activities.IPropertyRegistrationCallback.Unregister(System.Activities.RegistrationContext)" />.</param>
        <summary>Описание этого члена см. в разделе <see cref="M:System.Activities.IPropertyRegistrationCallback.Unregister(System.Activities.RegistrationContext)" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
