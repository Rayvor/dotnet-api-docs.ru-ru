<Type Name="WorkflowApplicationInstance" FullName="System.Activities.WorkflowApplicationInstance">
  <Metadata><Meta Name="ms.openlocfilehash" Value="10956f57124a0163794ffcdcfd1fd4ccb7c81c6b" /><Meta Name="ms.sourcegitcommit" Value="0084afad1b3b1cb2c8ad2c142ae3597d08bad4a7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="10/31/2019" /><Meta Name="ms.locfileid" Value="73376236" /></Metadata><TypeSignature Language="C#" Value="public class WorkflowApplicationInstance" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WorkflowApplicationInstance extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Activities.WorkflowApplicationInstance" />
  <TypeSignature Language="VB.NET" Value="Public Class WorkflowApplicationInstance" />
  <TypeSignature Language="C++ CLI" Value="public ref class WorkflowApplicationInstance" />
  <TypeSignature Language="F#" Value="type WorkflowApplicationInstance = class" />
  <AssemblyInfo>
    <AssemblyName>System.Activities</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Указывает сведения об экземпляре приложения рабочего процесса.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот класс поддерживает функцию управления версиями и динамического обновления Windows Workflow Foundation. Дополнительные сведения об управлении версиями рабочего процесса, удостоверении рабочего процесса и динамическом обновлении см. в следующих разделах:  
  
 - [Управление версиями рабочих процессов](~/docs/framework/windows-workflow-foundation/whats-new-in-wf-in-dotnet.md)  
    Описывает функцию управления версиями рабочего процесса, появившуюся в [!INCLUDE[net_v45](~/includes/net-v45-md.md)].  
  
 - [Динамическое обновление](~/docs/framework/windows-workflow-foundation/dynamic-update.md)  
    Описывает, как обновить определение рабочего процесса сохраненного экземпляра рабочего процесса с помощью динамического обновления.  
  
 - [Использование удостоверений и управления версиями для WorkflowApplication](~/docs/framework/windows-workflow-foundation/using-workflowidentity-and-versioning.md)  
    Описывает, как использовать <xref:System.Activities.WorkflowIdentity> для параллельного размещения нескольких версий рабочего процесса.  
  
 - [Параллельное управление версиями в WorkflowServiceHost](~/docs/framework/wcf/feature-details/side-by-side-versioning-in-workflowservicehost.md)  
    Описывает, как разместить несколько версий рабочего процесса в одной конечной точке.  
  
 - [Практическое руководство. Параллельное размещение множества версий рабочего процесса](~/docs/framework/windows-workflow-foundation/how-to-host-multiple-versions-of-a-workflow-side-by-side.md)  
    Этот шаг в [учебнике начало работы](~/docs/framework/windows-workflow-foundation/getting-started-tutorial.md) демонстрирует обновление определения рабочего процесса и размещение рабочих процессов с использованием старого и нового определений одновременно.  
  
 - [Практическое руководство. Обновление определения выполняющегося экземпляра рабочего процесса](~/docs/framework/windows-workflow-foundation/how-to-update-the-definition-of-a-running-workflow-instance.md)  
    Этот шаг в [руководстве по начало работы](~/docs/framework/windows-workflow-foundation/getting-started-tutorial.md) демонстрирует обновление сохраненных экземпляров рабочих процессов для использования нового определения рабочего процесса.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="Abandon">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Вызывает переход конечного автомата в прерванное состояние.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Abandon">
      <MemberSignature Language="C#" Value="public void Abandon ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Abandon() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplicationInstance.Abandon" />
      <MemberSignature Language="VB.NET" Value="Public Sub Abandon ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Abandon();" />
      <MemberSignature Language="F#" Value="member this.Abandon : unit -&gt; unit" Usage="workflowApplicationInstance.Abandon " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Вызывает переход конечного автомата в прерванное состояние.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Abandon">
      <MemberSignature Language="C#" Value="public void Abandon (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Abandon(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplicationInstance.Abandon(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Abandon (timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Abandon(TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="member this.Abandon : TimeSpan -&gt; unit" Usage="workflowApplicationInstance.Abandon timeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout">Время ожидания для завершения операции прерывания.</param>
        <summary>Вызывает переход конечного автомата в прерванное состояние с указанным значением времени ожидания.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginAbandon">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Начинает асинхронную операцию прерывания.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginAbandon">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginAbandon (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginAbandon(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplicationInstance.BeginAbandon(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginAbandon (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginAbandon(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginAbandon : AsyncCallback * obj -&gt; IAsyncResult" Usage="workflowApplicationInstance.BeginAbandon (callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">Делегат асинхронного обратного вызова, принимающий уведомление о завершении асинхронной операции.</param>
        <param name="state">Определенные пользователем данные о состоянии.</param>
        <summary>Начинает асинхронную операцию прерывания.</summary>
        <returns>Асинхронная операция прерывания.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginAbandon">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginAbandon (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginAbandon(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplicationInstance.BeginAbandon(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginAbandon (timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginAbandon(TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginAbandon : TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="workflowApplicationInstance.BeginAbandon (timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout">Время ожидания, содержащее причину для операции прерывания.</param>
        <param name="callback">Делегат асинхронного обратного вызова, принимающий уведомление о завершении асинхронной операции.</param>
        <param name="state">Определенные пользователем данные о состоянии.</param>
        <summary>Начинает асинхронную операцию прерывания.</summary>
        <returns>Асинхронная операция прерывания.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanApplyUpdate">
      <MemberSignature Language="C#" Value="public bool CanApplyUpdate (System.Activities.DynamicUpdate.DynamicUpdateMap updateMap, out System.Collections.Generic.IList&lt;System.Activities.DynamicUpdate.ActivityBlockingUpdate&gt; activitiesBlockingUpdate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CanApplyUpdate(class System.Activities.DynamicUpdate.DynamicUpdateMap updateMap, [out] class System.Collections.Generic.IList`1&lt;class System.Activities.DynamicUpdate.ActivityBlockingUpdate&gt;&amp; activitiesBlockingUpdate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplicationInstance.CanApplyUpdate(System.Activities.DynamicUpdate.DynamicUpdateMap,System.Collections.Generic.IList{System.Activities.DynamicUpdate.ActivityBlockingUpdate}@)" />
      <MemberSignature Language="VB.NET" Value="Public Function CanApplyUpdate (updateMap As DynamicUpdateMap, ByRef activitiesBlockingUpdate As IList(Of ActivityBlockingUpdate)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanApplyUpdate(System::Activities::DynamicUpdate::DynamicUpdateMap ^ updateMap, [Runtime::InteropServices::Out] System::Collections::Generic::IList&lt;System::Activities::DynamicUpdate::ActivityBlockingUpdate ^&gt; ^ % activitiesBlockingUpdate);" />
      <MemberSignature Language="F#" Value="member this.CanApplyUpdate : System.Activities.DynamicUpdate.DynamicUpdateMap * IList -&gt; bool" Usage="workflowApplicationInstance.CanApplyUpdate (updateMap, activitiesBlockingUpdate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="updateMap" Type="System.Activities.DynamicUpdate.DynamicUpdateMap" />
        <Parameter Name="activitiesBlockingUpdate" Type="System.Collections.Generic.IList&lt;System.Activities.DynamicUpdate.ActivityBlockingUpdate&gt;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="updateMap">Обновляет сопоставление.</param>
        <param name="activitiesBlockingUpdate">Действия, блокирующие обновление.</param>
        <summary>Возвращает значение, указывающее, может ли применять обновление WorkflowApplicationInstance.</summary>
        <returns>Значение <see langword="true" />, если объект WorkflowApplicationInstance может применить обновление; в противном случае — значение <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefinitionIdentity">
      <MemberSignature Language="C#" Value="public System.Activities.WorkflowIdentity DefinitionIdentity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.WorkflowIdentity DefinitionIdentity" />
      <MemberSignature Language="DocId" Value="P:System.Activities.WorkflowApplicationInstance.DefinitionIdentity" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DefinitionIdentity As WorkflowIdentity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Activities::WorkflowIdentity ^ DefinitionIdentity { System::Activities::WorkflowIdentity ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DefinitionIdentity : System.Activities.WorkflowIdentity" Usage="System.Activities.WorkflowApplicationInstance.DefinitionIdentity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.WorkflowIdentity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает удостоверение определения рабочего процесса.</summary>
        <value>Удостоверение определения рабочего процесса.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndAbandon">
      <MemberSignature Language="C#" Value="public void EndAbandon (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndAbandon(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplicationInstance.EndAbandon(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndAbandon (asyncResult As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndAbandon(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="member this.EndAbandon : IAsyncResult -&gt; unit" Usage="workflowApplicationInstance.EndAbandon asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">IAsyncResult, возвращенный вызовом одного из методов BeginAbandon.</param>
        <summary>Завершает асинхронную операцию прерывания.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InstanceId">
      <MemberSignature Language="C#" Value="public Guid InstanceId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid InstanceId" />
      <MemberSignature Language="DocId" Value="P:System.Activities.WorkflowApplicationInstance.InstanceId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InstanceId As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Guid InstanceId { Guid get(); };" />
      <MemberSignature Language="F#" Value="member this.InstanceId : Guid" Usage="System.Activities.WorkflowApplicationInstance.InstanceId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает уникальный идентификатор экземпляра рабочего процесса.</summary>
        <value>Уникальный идентификатор экземпляра рабочего процесса.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InstanceStore">
      <MemberSignature Language="C#" Value="public System.Runtime.DurableInstancing.InstanceStore InstanceStore { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Runtime.DurableInstancing.InstanceStore InstanceStore" />
      <MemberSignature Language="DocId" Value="P:System.Activities.WorkflowApplicationInstance.InstanceStore" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InstanceStore As InstanceStore" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::DurableInstancing::InstanceStore ^ InstanceStore { System::Runtime::DurableInstancing::InstanceStore ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InstanceStore : System.Runtime.DurableInstancing.InstanceStore" Usage="System.Activities.WorkflowApplicationInstance.InstanceStore" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.DurableInstancing.InstanceStore</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает объект, который предоставляет доступ к сохраненному состоянию текущего экземпляра приложения рабочего процесса.</summary>
        <value>Объект, который предоставляет доступ к сохраненному состоянию текущего экземпляра приложения рабочего процесса.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
