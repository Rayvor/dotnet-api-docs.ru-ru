<Type Name="TryLoadRunnableWorkflowCommand" FullName="System.Activities.DurableInstancing.TryLoadRunnableWorkflowCommand">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5c352f7d2f647499d38b30c303bdd81702da03fd" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69326172" /></Metadata><TypeSignature Language="C#" Value="public sealed class TryLoadRunnableWorkflowCommand : System.Runtime.DurableInstancing.InstancePersistenceCommand" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit TryLoadRunnableWorkflowCommand extends System.Runtime.DurableInstancing.InstancePersistenceCommand" />
  <TypeSignature Language="DocId" Value="T:System.Activities.DurableInstancing.TryLoadRunnableWorkflowCommand" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TryLoadRunnableWorkflowCommand&#xA;Inherits InstancePersistenceCommand" />
  <TypeSignature Language="C++ CLI" Value="public ref class TryLoadRunnableWorkflowCommand sealed : System::Runtime::DurableInstancing::InstancePersistenceCommand" />
  <TypeSignature Language="F#" Value="type TryLoadRunnableWorkflowCommand = class&#xA;    inherit InstancePersistenceCommand" />
  <AssemblyInfo>
    <AssemblyName>System.Activities</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Runtime.DurableInstancing.InstancePersistenceCommand</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="0f787-101">Представляет команду, выполняемую узлом рабочего процесса в хранилище экземпляров для загрузки запускаемых экземпляров в хранилище сохраняемости в память.</span><span class="sxs-lookup"><span data-stu-id="0f787-101">Represents the command that a workflow host executes against an instance store to load runnable instances in the persistence store into the memory.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f787-102">Экземпляр может быть *готов*к запуску, если он не находится в приостановленном состоянии или завершенном состоянии и удовлетворяет следующим условиям.</span><span class="sxs-lookup"><span data-stu-id="0f787-102">An instance is *runnable*, if it is not in the suspended state or the completed state and satisfies the following conditions:</span></span>  
  
-   <span data-ttu-id="0f787-103">Экземпляр разблокирован и имеет таймер в состоянии ожидания, время которого истекло.</span><span class="sxs-lookup"><span data-stu-id="0f787-103">The instance is unlocked and has a pending timer that has expired.</span></span>  
  
-   <span data-ttu-id="0f787-104">Экземпляр разблокируется и его состояние — "выполнено \*\*\*\*".</span><span class="sxs-lookup"><span data-stu-id="0f787-104">The instance is unlocked and its status is **Executing**.</span></span>  
  
-   <span data-ttu-id="0f787-105">Время блокировки экземпляра истекло.</span><span class="sxs-lookup"><span data-stu-id="0f787-105">The instance has an expired lock on it.</span></span>  
  
 <span data-ttu-id="0f787-106">Хранилище экземпляров должно периодически выполнять поиск запускаемых экземпляров, принадлежащих к приложению рабочего процесса, которое использует хранилище.</span><span class="sxs-lookup"><span data-stu-id="0f787-106">An instance store should periodically search for runnable instances that belong to a workflow host that uses the store.</span></span> <span data-ttu-id="0f787-107">В случае обнаружения в хранилище сохраняемости запускаемого экземпляра, который соответствует типу узла рабочего процесса, должно вызываться событие <xref:System.Activities.DurableInstancing.HasRunnableWorkflowEvent>.</span><span class="sxs-lookup"><span data-stu-id="0f787-107">It should raise the <xref:System.Activities.DurableInstancing.HasRunnableWorkflowEvent> when it finds a runnable instance in the persistence store that matches its workflow host type.</span></span> <span data-ttu-id="0f787-108">Если хранилищу экземпляров не удается найти запускаемый экземпляр в хранилище сохраняемости, ему следует продолжить отслеживать постоянное хранилище на предмет запускаемых экземпляров.</span><span class="sxs-lookup"><span data-stu-id="0f787-108">If the instance store does not find a runnable instance in the persistence store, it should continue to monitor the persistence store for any runnable instances.</span></span>  
  
 <span data-ttu-id="0f787-109">После вызова события HasRunnableWorkflowEvent хранилищу экземпляров следует прекратить наблюдение за хранилищем сохраняемости на предмет запускаемых экземпляров до получения и выполнения команды <xref:System.Activities.DurableInstancing.TryLoadRunnableWorkflowCommand>.</span><span class="sxs-lookup"><span data-stu-id="0f787-109">After raising the HasRunnableWorkflowEvent, the instance store should stop monitoring the persistence store for runnable instances until it receives and executes the <xref:System.Activities.DurableInstancing.TryLoadRunnableWorkflowCommand>.</span></span> <span data-ttu-id="0f787-110">Наблюдение продолжается, только если в результате выполнения команды TryLoadRunnableWorkflowCommand не будет возвращено ни одного запускаемого экземпляра.</span><span class="sxs-lookup"><span data-stu-id="0f787-110">The monitoring continues only if the TryLoadRunnableWorkflowCommand execution does not return any runnable instances.</span></span>  
  
 <span data-ttu-id="0f787-111">При получении события HasRunnableWorkflowEvent узел рабочего процесса выполняет команду <xref:System.Activities.DurableInstancing.TryLoadRunnableWorkflowCommand> в хранилище экземпляров, чтобы загрузить экземпляр в память.</span><span class="sxs-lookup"><span data-stu-id="0f787-111">When a workflow host receives the HasRunnableWorkflowEvent, it executes the <xref:System.Activities.DurableInstancing.TryLoadRunnableWorkflowCommand> against the instance store to load the instance into the memory.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TryLoadRunnableWorkflowCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DurableInstancing.TryLoadRunnableWorkflowCommand.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TryLoadRunnableWorkflowCommand();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0f787-112">Инициализирует экземпляр класса <see cref="T:System.Activities.DurableInstancing.TryLoadRunnableWorkflowCommand" />.</span><span class="sxs-lookup"><span data-stu-id="0f787-112">Initializes an instance of the <see cref="T:System.Activities.DurableInstancing.TryLoadRunnableWorkflowCommand" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutomaticallyAcquiringLock">
      <MemberSignature Language="C#" Value="protected internal override bool AutomaticallyAcquiringLock { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutomaticallyAcquiringLock" />
      <MemberSignature Language="DocId" Value="P:System.Activities.DurableInstancing.TryLoadRunnableWorkflowCommand.AutomaticallyAcquiringLock" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides ReadOnly Property AutomaticallyAcquiringLock As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property bool AutomaticallyAcquiringLock { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.AutomaticallyAcquiringLock : bool" Usage="System.Activities.DurableInstancing.TryLoadRunnableWorkflowCommand.AutomaticallyAcquiringLock" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTransactionEnlistmentOptional">
      <MemberSignature Language="C#" Value="protected internal override bool IsTransactionEnlistmentOptional { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsTransactionEnlistmentOptional" />
      <MemberSignature Language="DocId" Value="P:System.Activities.DurableInstancing.TryLoadRunnableWorkflowCommand.IsTransactionEnlistmentOptional" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides ReadOnly Property IsTransactionEnlistmentOptional As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property bool IsTransactionEnlistmentOptional { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsTransactionEnlistmentOptional : bool" Usage="System.Activities.DurableInstancing.TryLoadRunnableWorkflowCommand.IsTransactionEnlistmentOptional" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="protected internal override void Validate (System.Runtime.DurableInstancing.InstanceView view);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Validate(class System.Runtime.DurableInstancing.InstanceView view) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DurableInstancing.TryLoadRunnableWorkflowCommand.Validate(System.Runtime.DurableInstancing.InstanceView)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Validate (view As InstanceView)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Validate(System::Runtime::DurableInstancing::InstanceView ^ view);" />
      <MemberSignature Language="F#" Value="override this.Validate : System.Runtime.DurableInstancing.InstanceView -&gt; unit" Usage="tryLoadRunnableWorkflowCommand.Validate view" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="view" Type="System.Runtime.DurableInstancing.InstanceView" />
      </Parameters>
      <Docs>
        <param name="view">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
