<Type Name="ServiceProcessInstaller" FullName="System.ServiceProcess.ServiceProcessInstaller">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c20e92c41d23587c8e791d251cf9ba3406bd2c80" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70458170" /></Metadata><TypeSignature Language="C#" Value="public class ServiceProcessInstaller : System.Configuration.Install.ComponentInstaller" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ServiceProcessInstaller extends System.Configuration.Install.ComponentInstaller" />
  <TypeSignature Language="DocId" Value="T:System.ServiceProcess.ServiceProcessInstaller" />
  <TypeSignature Language="VB.NET" Value="Public Class ServiceProcessInstaller&#xA;Inherits ComponentInstaller" />
  <TypeSignature Language="C++ CLI" Value="public ref class ServiceProcessInstaller : System::Configuration::Install::ComponentInstaller" />
  <TypeSignature Language="F#" Value="type ServiceProcessInstaller = class&#xA;    inherit ComponentInstaller" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceProcess</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.Install.ComponentInstaller</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Устанавливает классы, содержащие исполняемый файл, которые расширяют класс <see cref="T:System.ServiceProcess.ServiceBase" />. Этот класс вызывается программами установки, например InstallUtil.exe, при установке служебного приложения.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceProcess.ServiceProcessInstaller> Работает как общий для всех служб в исполняемом файле. Она используется программой установки для записи значений реестра, связанных со службами, которые необходимо установить.  
  
 Чтобы установить службу, создайте класс установщика проекта, наследующий от <xref:System.Configuration.Install.Installer>, и <xref:System.ComponentModel.RunInstallerAttribute> задайте для класса `true`значение. В проекте создайте экземпляр одного <xref:System.ServiceProcess.ServiceProcessInstaller> экземпляра для каждого приложения службы и один <xref:System.ServiceProcess.ServiceInstaller> экземпляр для каждой службы в приложении. Наконец, добавьте <xref:System.ServiceProcess.ServiceProcessInstaller> экземпляр <xref:System.ServiceProcess.ServiceInstaller> и экземпляры в класс установщика проекта.  
  
 При запуске программы InstallUtil. exe программа ищет классы в сборке службы с параметром, <xref:System.ComponentModel.RunInstallerAttribute> имеющим `true`значение. Добавьте классы в сборку службы, добавив их в <xref:System.Configuration.Install.Installer.Installers%2A> коллекцию, связанную с установщиком проекта. Если <xref:System.ComponentModel.RunInstallerAttribute> параметр `false`имеет значение, программа установки игнорирует установщик проекта.  
  
 Для экземпляра <xref:System.ServiceProcess.ServiceProcessInstaller>свойства можно изменить, указав, что приложение службы запускается от имени пользователя, не вошедшего в систему. Можно указать конкретную <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> пару и <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> , в которой должна выполняться служба, или использовать <xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A> , чтобы указать, что служба работает под системной учетной записью компьютера, локальной или сетевой учетной записью или учетной записью пользователя.  
  
> [!NOTE]
>  Системная учетная запись компьютера не совпадает с учетной записью администратора.  
  
 Обычно методы <xref:System.ServiceProcess.ServiceInstaller> в коде не вызываются; они обычно вызываются только программой установки. Программа установки автоматически вызывает методы и <xref:System.ServiceProcess.ServiceProcessInstaller.Install%2A?displayProperty=nameWithType> <xref:System.ServiceProcess.ServiceInstaller.Install%2A?displayProperty=nameWithType> в процессе установки. При необходимости он создает ошибки, вызывая <xref:System.ServiceProcess.ServiceProcessInstaller.Rollback%2A> (или <xref:System.ServiceProcess.ServiceInstaller.Rollback%2A?displayProperty=nameWithType>) для всех ранее установленных компонентов.  
  
 Программа установки приложения автоматически сохраняет сведения об уже установленных компонентах с помощью установщика <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType>проекта. Эти сведения о состоянии постоянно обновляются, <xref:System.ServiceProcess.ServiceProcessInstaller> так как экземпляр <xref:System.ServiceProcess.ServiceInstaller> и каждый экземпляр устанавливаются программой. Обычно нет необходимости явно изменять сведения о состоянии в коде.  
  
 При создании экземпляра вызывается <xref:System.Configuration.Install.ComponentInstaller.%23ctor%2A>конструктор базового класса. <xref:System.ServiceProcess.ServiceProcessInstaller>  
  
   
  
## Examples  
 В следующем примере создается установщик проекта с именем Мипрожектинсталлер, который наследует от <xref:System.Configuration.Install.Installer>. Предполагается наличие исполняемого файла службы, который содержит две службы: "Hello-World Service 1" и "Hello-World Service 2". В конструкторе для мипрожектинсталлер (который вызывается программой установки) <xref:System.ServiceProcess.ServiceInstaller> для каждой службы создаются объекты, <xref:System.ServiceProcess.ServiceProcessInstaller> а для исполняемого файла создается. Чтобы программа установки могла распознать мипрожектинсталлер как допустимый установщик, <xref:System.ComponentModel.RunInstallerAttribute> атрибуту присваивается `true`значение.  
  
 Дополнительные свойства задаются в установщике процесса и установщиках служб перед добавлением установщиков в <xref:System.Configuration.Install.Installer.Installers%2A> коллекцию. Когда программа установки обращается к мипрожектинсталлер, объекты, добавленные в <xref:System.Configuration.Install.Installer.Installers%2A> коллекцию через <xref:System.Configuration.Install.InstallerCollection.Add%2A?displayProperty=nameWithType> вызов, будут установлены в свою очередь. Во время процесса установщик сохраняет сведения о состоянии, указывающие, какие объекты были установлены, поэтому для каждого объекта можно включить резервное копирование в случае сбоя установки.  
  
 Как правило, класс установщика проекта не создается явным образом. Вы создадите его и добавите <xref:System.ComponentModel.RunInstallerAttribute>, но программа установки фактически вызывает, и, следовательно, создает экземпляр класса.  
  
 [!code-cpp[Classic ServiceInstaller Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ServiceInstaller Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ServiceInstaller Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ServiceInstaller Example/CS/source.cs#1)]
 [!code-vb[Classic ServiceInstaller Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ServiceInstaller Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ServiceProcess.ServiceInstaller" />
    <altmember cref="T:System.ServiceProcess.ServiceBase" />
    <altmember cref="T:System.Configuration.Install.ComponentInstaller" />
    <altmember cref="P:System.Configuration.Install.Installer.Installers" />
    <altmember cref="T:System.ServiceProcess.ServiceAccount" />
    <altmember cref="T:System.ServiceProcess.Design.ServiceInstallerDialog" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ServiceProcessInstaller ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceProcessInstaller.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ServiceProcessInstaller();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Создает новый экземпляр класса <see cref="T:System.ServiceProcess.ServiceProcessInstaller" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Account">
      <MemberSignature Language="C#" Value="public System.ServiceProcess.ServiceAccount Account { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceProcess.ServiceAccount Account" />
      <MemberSignature Language="DocId" Value="P:System.ServiceProcess.ServiceProcessInstaller.Account" />
      <MemberSignature Language="VB.NET" Value="Public Property Account As ServiceAccount" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceProcess::ServiceAccount Account { System::ServiceProcess::ServiceAccount get(); void set(System::ServiceProcess::ServiceAccount value); };" />
      <MemberSignature Language="F#" Value="member this.Account : System.ServiceProcess.ServiceAccount with get, set" Usage="System.ServiceProcess.ServiceProcessInstaller.Account" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ServiceProcess.ServiceProcessDescription("ServiceProcessInstallerAccount")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceProcess.ServiceAccount</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает тип учетной записи, под управлением которой должно запускаться данное служебное приложение.</summary>
        <value>Объект <see cref="T:System.ServiceProcess.ServiceAccount" />, определяющий тип учетной записи, под управлением которой система запускает данную службу. Значение по умолчанию — <see langword="User" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если свойство имеет `User`значение, <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> свойства и <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> используются для определения учетной записи, под которой выполняется приложение службы. <xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A>  
  
 Пара <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> и <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A>  позволяет запускать службу под учетной записью, отличной от системной учетной записи. Это может, например, разрешить автоматический запуск службы при перезагрузке, если в системе нет пользователей. Если оставить <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> значение или <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> пустое и присвоить `User`параметру значение <xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A> , будет предложено ввести допустимое имя пользователя и пароль при установке.  
  
 Можно также указать, что служба работает под локальной системной учетной записью или как локальная или сетевая служба. Дополнительные сведения <xref:System.ServiceProcess.ServiceAccount> о типах учетных записей см. в описании перечисления.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ServiceProcess.ServiceProcessInstaller.Username" />
        <altmember cref="P:System.ServiceProcess.ServiceProcessInstaller.Password" />
        <altmember cref="T:System.ServiceProcess.ServiceAccount" />
        <altmember cref="T:System.ServiceProcess.Design.ServiceInstallerDialog" />
      </Docs>
    </Member>
    <Member MemberName="CopyFromComponent">
      <MemberSignature Language="C#" Value="public override void CopyFromComponent (System.ComponentModel.IComponent comp);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void CopyFromComponent(class System.ComponentModel.IComponent comp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceProcessInstaller.CopyFromComponent(System.ComponentModel.IComponent)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub CopyFromComponent (comp As IComponent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void CopyFromComponent(System::ComponentModel::IComponent ^ comp);" />
      <MemberSignature Language="F#" Value="override this.CopyFromComponent : System.ComponentModel.IComponent -&gt; unit" Usage="serviceProcessInstaller.CopyFromComponent comp" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comp" Type="System.ComponentModel.IComponent" />
      </Parameters>
      <Docs>
        <param name="comp">Объект <see cref="T:System.ComponentModel.IComponent" />, представляющий процесс службы.</param>
        <summary>Реализует метод <see cref="M:System.Configuration.Install.ComponentInstaller.CopyFromComponent(System.ComponentModel.IComponent)" /> базового класса без поведения, определяемого классом <see cref="T:System.ServiceProcess.ServiceProcessInstaller" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод не следует вызывать в коде. Метод базового класса в <xref:System.Configuration.Install.ComponentInstaller> имеет значение `abstract`, поэтому он реализован в производном классе. Однако в реализации метода не <xref:System.ServiceProcess.ServiceProcessInstaller> существует обработки, зависящей от класса.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ServiceProcess.ServiceProcessInstaller.Install(System.Collections.IDictionary)" />
        <altmember cref="M:System.ServiceProcess.ServiceProcessInstaller.Rollback(System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="HelpText">
      <MemberSignature Language="C#" Value="public override string HelpText { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HelpText" />
      <MemberSignature Language="DocId" Value="P:System.ServiceProcess.ServiceProcessInstaller.HelpText" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property HelpText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ HelpText { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.HelpText : string" Usage="System.ServiceProcess.ServiceProcessInstaller.HelpText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает текст справки для параметров установки службы.</summary>
        <value>Текст справки, содержащий описание действий по заданию имени пользователя и пароля для запуска службы под управлением определенной учетной записи.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот текст справки можно использовать, когда служба запускается вручную. Он указывает пользователю, как ввести сведения о имени пользователя и пароле.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ServiceProcess.ServiceProcessInstaller.Username" />
        <altmember cref="P:System.ServiceProcess.ServiceProcessInstaller.Password" />
      </Docs>
    </Member>
    <Member MemberName="Install">
      <MemberSignature Language="C#" Value="public override void Install (System.Collections.IDictionary stateSaver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Install(class System.Collections.IDictionary stateSaver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceProcessInstaller.Install(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Install (stateSaver As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Install(System::Collections::IDictionary ^ stateSaver);" />
      <MemberSignature Language="F#" Value="override this.Install : System.Collections.IDictionary -&gt; unit" Usage="serviceProcessInstaller.Install stateSaver" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stateSaver" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="stateSaver">Объект <see cref="T:System.Collections.IDictionary" />, содержащий контекстные данные, связанные с процессом установки.</param>
        <summary>Записывает в реестр сведения о служебном приложении. Этот метод предназначен для использования инструментами установки, которые автоматически вызывают соответствующие методы.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Обычно методы <xref:System.ServiceProcess.ServiceProcessInstaller> в коде не вызываются; они обычно вызываются только программой установки. Программа установки автоматически вызывает метод в <xref:System.ServiceProcess.ServiceProcessInstaller.Install%2A?displayProperty=nameWithType> процессе установки. При необходимости она истекает, вызывая <xref:System.ServiceProcess.ServiceProcessInstaller.Rollback%2A> для всех ранее установленных компонентов. Этот метод передает установку в метод базового класса <xref:System.Configuration.Install.Installer.Install%2A?displayProperty=nameWithType> .  
  
 Обычно методы <xref:System.ServiceProcess.ServiceInstaller> в коде не вызываются; они обычно вызываются только программой установки. Программа установки автоматически вызывает методы и <xref:System.ServiceProcess.ServiceProcessInstaller.Install%2A?displayProperty=nameWithType> <xref:System.ServiceProcess.ServiceInstaller.Install%2A?displayProperty=nameWithType> в процессе установки. При необходимости он создает ошибки, вызывая <xref:System.ServiceProcess.ServiceProcessInstaller.Rollback%2A> (или <xref:System.ServiceProcess.ServiceInstaller.Rollback%2A?displayProperty=nameWithType>) для всех ранее установленных компонентов.  
  
 Программа установки приложения автоматически сохраняет сведения об уже установленных компонентах с помощью установщика <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType>проекта. Эти сведения о состоянии <xref:System.ServiceProcess.ServiceProcessInstaller.Install%2A> , переданные в `stateSaver` качестве параметра, постоянно обновляются как <xref:System.ServiceProcess.ServiceProcessInstaller> экземпляр и каждый <xref:System.ServiceProcess.ServiceInstaller> экземпляр устанавливается программой. Обычно нет необходимости явно изменять сведения о состоянии в коде.  
  
 <xref:System.ServiceProcess.ServiceProcessInstaller.Install%2A>передает вызывающему методу все исключения, вызванные методами базового <xref:System.Configuration.Install.Installer.BeforeInstall> класса или  /  <xref:System.Configuration.Install.Installer.AfterInstall> обработчиками событий.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Значение параметра <paramref name="stateSaver" /> — <see langword="null" />.</exception>
        <altmember cref="M:System.ServiceProcess.ServiceProcessInstaller.Rollback(System.Collections.IDictionary)" />
        <altmember cref="M:System.Configuration.Install.Installer.Commit(System.Collections.IDictionary)" />
        <altmember cref="M:System.Configuration.Install.Installer.Uninstall(System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="Password">
      <MemberSignature Language="C#" Value="public string Password { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Password" />
      <MemberSignature Language="DocId" Value="P:System.ServiceProcess.ServiceProcessInstaller.Password" />
      <MemberSignature Language="VB.NET" Value="Public Property Password As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Password { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Password : string with get, set" Usage="System.ServiceProcess.ServiceProcessInstaller.Password" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает пароль, связанный с учетной записью пользователя, под управлением которой запускается служебное приложение.</summary>
        <value>Пароль, связанный с учетной записью, под управлением которой должна запускаться служба. Значение по умолчанию — пустая строка (""). Это свойство не является общим и не может быть сериализовано.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Пара <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> и <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A>  позволяет запускать службу под учетной записью, отличной от системной учетной записи. Это может, например, разрешить автоматический запуск службы при перезагрузке, если в системе нет пользователей.  
  
 <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A>и <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> обрабатываются безопасным способом в том, что они никогда не сериализуются или не сохраняются в состоянии установки ( <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType>установщик проекта) или в другом расположении с общедоступным доступом.  
  
 <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> Настройка и <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> позволяет автоматически связывать учетную запись со службой во время установки. Если оставить <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> значение или <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> пустое и присвоить `User`параметру значение <xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A> , будет предложено ввести допустимое имя пользователя и пароль при установке.  
  
 Другой вариант для запуска службы под отдельной учетной записью — использование системной учетной записи компьютера. Эта учетная запись, которая отличается от учетной записи администратора, не требует пароля. Привилегии системной учетной записи могут превысить пользователей, вошедших в систему. Работа с системной учетной записью, а не учетной записью пользователя, позволяет избежать проблем, вызванных тем, что у пользователя отсутствует разрешение, требуемое службе.  
  
 Если <xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A> параметр имеет любое значение, `User`отличное от, <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> используется указанная учетная запись (локальная или сетевая служба или локальная система) <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> , даже если свойства и заполнены.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ServiceProcess.ServiceProcessInstaller.Username" />
        <altmember cref="P:System.ServiceProcess.ServiceProcessInstaller.Account" />
        <altmember cref="T:System.ServiceProcess.Design.ServiceInstallerDialog" />
      </Docs>
    </Member>
    <Member MemberName="Rollback">
      <MemberSignature Language="C#" Value="public override void Rollback (System.Collections.IDictionary savedState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Rollback(class System.Collections.IDictionary savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceProcessInstaller.Rollback(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Rollback (savedState As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Rollback(System::Collections::IDictionary ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.Rollback : System.Collections.IDictionary -&gt; unit" Usage="serviceProcessInstaller.Rollback savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="savedState">Объект <see cref="T:System.Collections.IDictionary" />, содержащий контекстные данные, связанные с процессом установки.</param>
        <summary>Отменяет сведения о служебном приложении, записанные в реестр процедурой установки. Этот метод предназначен для использования инструментами установки, которые автоматически обрабатывают соответствующие методы.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Обычно методы <xref:System.ServiceProcess.ServiceProcessInstaller> в коде не вызываются; они обычно вызываются только программой установки. Программа установки автоматически вызывает метод в <xref:System.ServiceProcess.ServiceProcessInstaller.Install%2A?displayProperty=nameWithType> процессе установки. При необходимости он создает ошибки, вызывая метод <xref:System.ServiceProcess.ServiceProcessInstaller.Rollback%2A> для объекта, создавшего исключение.  
  
 Программа установки приложения автоматически сохраняет сведения об уже установленных компонентах с помощью установщика <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType>проекта. Эти сведения о состоянии <xref:System.ServiceProcess.ServiceProcessInstaller.Rollback%2A> , переданные в `savedState` качестве параметра, постоянно обновляются как <xref:System.ServiceProcess.ServiceProcessInstaller> экземпляр и каждый <xref:System.ServiceProcess.ServiceInstaller> экземпляр устанавливается программой. Обычно нет необходимости явно изменять сведения о состоянии в коде.  
  
 <xref:System.ServiceProcess.ServiceProcessInstaller.Rollback%2A>передает вызывающему методу все исключения, вызванные методами базового <xref:System.Configuration.Install.Installer.BeforeInstall> класса или  /  <xref:System.Configuration.Install.Installer.AfterInstall> обработчиками событий.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Значение параметра <paramref name="savedState" /> — <see langword="null" />.  
  
-или- 
Параметр <paramref name="savedState" /> поврежден либо отсутствует.</exception>
        <altmember cref="M:System.ServiceProcess.ServiceProcessInstaller.Install(System.Collections.IDictionary)" />
        <altmember cref="T:System.Configuration.Install.ComponentInstaller" />
      </Docs>
    </Member>
    <Member MemberName="Username">
      <MemberSignature Language="C#" Value="public string Username { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Username" />
      <MemberSignature Language="DocId" Value="P:System.ServiceProcess.ServiceProcessInstaller.Username" />
      <MemberSignature Language="VB.NET" Value="Public Property Username As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Username { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Username : string with get, set" Usage="System.ServiceProcess.ServiceProcessInstaller.Username" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает учетную запись пользователя, под управлением которой будет запускаться служебное приложение.</summary>
        <value>Учетная запись, под управлением которой должна запускаться служба. Значение по умолчанию — пустая строка ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Пара <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> и <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A>  позволяет запускать службу под учетной записью, отличной от системной учетной записи. Это может, например, разрешить автоматический запуск службы при перезагрузке, если в системе нет пользователей.  
  
 <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A>и <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> обрабатываются безопасным способом в том, что они никогда не сериализуются или не сохраняются в состоянии установки ( <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType>установщик проекта) или в другом расположении с общедоступным доступом.  
  
 <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> Настройка и <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> позволяет автоматически связывать учетную запись со службой во время установки. Если оставить <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> значение или <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> пустое и присвоить `User`параметру значение <xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A> , будет предложено ввести допустимое имя пользователя и пароль при установке.  
  
 Другой вариант для запуска службы под отдельной учетной записью — использование системной учетной записи компьютера. Эта учетная запись, которая отличается от учетной записи администратора, не требует пароля. Привилегии системной учетной записи могут превысить пользователей, вошедших в систему. Работа с системной учетной записью, а не учетной записью пользователя, позволяет избежать проблем, вызванных тем, что у пользователя отсутствует разрешение, требуемое службе.  
  
 Если <xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A> параметр имеет любое значение, `User`отличное от, <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> используется указанная учетная запись (локальная или сетевая служба или локальная система) <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> , даже если свойства и заполнены.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ServiceProcess.ServiceProcessInstaller.Password" />
        <altmember cref="P:System.ServiceProcess.ServiceProcessInstaller.Account" />
        <altmember cref="T:System.ServiceProcess.Design.ServiceInstallerDialog" />
      </Docs>
    </Member>
  </Members>
</Type>
