<Type Name="ServiceInstaller" FullName="System.ServiceProcess.ServiceInstaller">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6e6765d4baec8d048456f421424ebdc9a9b90ced" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69231757" /></Metadata><TypeSignature Language="C#" Value="public class ServiceInstaller : System.Configuration.Install.ComponentInstaller" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ServiceInstaller extends System.Configuration.Install.ComponentInstaller" />
  <TypeSignature Language="DocId" Value="T:System.ServiceProcess.ServiceInstaller" />
  <TypeSignature Language="VB.NET" Value="Public Class ServiceInstaller&#xA;Inherits ComponentInstaller" />
  <TypeSignature Language="C++ CLI" Value="public ref class ServiceInstaller : System::Configuration::Install::ComponentInstaller" />
  <TypeSignature Language="F#" Value="type ServiceInstaller = class&#xA;    inherit ComponentInstaller" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceProcess</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.Install.ComponentInstaller</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="1fa49-101">Устанавливает класс, расширяющий класс <see cref="T:System.ServiceProcess.ServiceBase" /> для реализации службы.</span><span class="sxs-lookup"><span data-stu-id="1fa49-101">Installs a class that extends <see cref="T:System.ServiceProcess.ServiceBase" /> to implement a service.</span></span> <span data-ttu-id="1fa49-102">Этот класс вызывается программой установки при установке служебного приложения.</span><span class="sxs-lookup"><span data-stu-id="1fa49-102">This class is called by the install utility when installing a service application.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1fa49-103"><xref:System.ServiceProcess.ServiceInstaller> Работает только со службой, с которой она связана.</span><span class="sxs-lookup"><span data-stu-id="1fa49-103">The <xref:System.ServiceProcess.ServiceInstaller> does work specific to the service with which it is associated.</span></span> <span data-ttu-id="1fa49-104">Она используется программой установки для записи значений реестра, связанных со службой, в подраздел в разделе реестра HKEY_LOCAL_MACHINE\System\CurrentControlSet\Services.</span><span class="sxs-lookup"><span data-stu-id="1fa49-104">It is used by the installation utility to write registry values associated with the service to a subkey within the HKEY_LOCAL_MACHINE\System\CurrentControlSet\Services registry key.</span></span> <span data-ttu-id="1fa49-105">Служба идентифицируется по ее ServiceName в этом подразделе.</span><span class="sxs-lookup"><span data-stu-id="1fa49-105">The service is identified by its ServiceName within this subkey.</span></span> <span data-ttu-id="1fa49-106">Подраздел также содержит имя исполняемого файла или библиотеки DLL, к которой принадлежит служба.</span><span class="sxs-lookup"><span data-stu-id="1fa49-106">The subkey also includes the name of the executable or .dll to which the service belongs.</span></span>  
  
 <span data-ttu-id="1fa49-107">Чтобы установить службу, создайте класс установщика проекта, наследующий от <xref:System.Configuration.Install.Installer> класса, и <xref:System.ComponentModel.RunInstallerAttribute> задайте `true`атрибуту класса значение.</span><span class="sxs-lookup"><span data-stu-id="1fa49-107">To install a service, create a project installer class that inherits from the <xref:System.Configuration.Install.Installer> class, and set the <xref:System.ComponentModel.RunInstallerAttribute> attribute on the class to `true`.</span></span> <span data-ttu-id="1fa49-108">В проекте создайте по одному <xref:System.ServiceProcess.ServiceProcessInstaller> экземпляру для каждого приложения службы и по одному <xref:System.ServiceProcess.ServiceInstaller> экземпляру для каждой службы в приложении.</span><span class="sxs-lookup"><span data-stu-id="1fa49-108">Within your project, create one <xref:System.ServiceProcess.ServiceProcessInstaller> instance per service application, and one <xref:System.ServiceProcess.ServiceInstaller> instance for each service in the application.</span></span> <span data-ttu-id="1fa49-109">В конструкторе класса установщика проекта задайте свойства установки для службы с помощью <xref:System.ServiceProcess.ServiceProcessInstaller> экземпляров и <xref:System.ServiceProcess.ServiceInstaller> и <xref:System.Configuration.Install.Installer.Installers%2A> добавьте экземпляры в коллекцию.</span><span class="sxs-lookup"><span data-stu-id="1fa49-109">Within your project installer class constructor, set the installation properties for the service using the <xref:System.ServiceProcess.ServiceProcessInstaller> and <xref:System.ServiceProcess.ServiceInstaller> instances, and add the instances to the <xref:System.Configuration.Install.Installer.Installers%2A> collection.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1fa49-110">Рекомендуется использовать конструктор для добавления экземпляров установщика; Однако если необходимо добавить <xref:System.Configuration.Install.Installer.Installers%2A> в коллекцию <xref:System.ServiceProcess.ServiceInstaller.Install%2A> в методе, необходимо выполнить те же действия в коллекции в <xref:System.ServiceProcess.ServiceInstaller.Uninstall%2A> методе.</span><span class="sxs-lookup"><span data-stu-id="1fa49-110">It is recommended that you use the constructor for adding installer instances; however, if you need to add to the <xref:System.Configuration.Install.Installer.Installers%2A> collection in the <xref:System.ServiceProcess.ServiceInstaller.Install%2A> method, be sure to perform the same additions to the collection in the <xref:System.ServiceProcess.ServiceInstaller.Uninstall%2A> method.</span></span>  
  
 <span data-ttu-id="1fa49-111">Для всех классов, производных от <xref:System.Configuration.Install.Installer> класса, состояние <xref:System.Configuration.Install.Installer.Installers%2A> коллекции должно <xref:System.ServiceProcess.ServiceInstaller.Install%2A> быть одинаковым в методах и <xref:System.ServiceProcess.ServiceInstaller.Uninstall%2A> .</span><span class="sxs-lookup"><span data-stu-id="1fa49-111">For all classes deriving from the <xref:System.Configuration.Install.Installer> class, the state of the <xref:System.Configuration.Install.Installer.Installers%2A> collection must be the same in the <xref:System.ServiceProcess.ServiceInstaller.Install%2A> and <xref:System.ServiceProcess.ServiceInstaller.Uninstall%2A> methods.</span></span> <span data-ttu-id="1fa49-112">Однако при <xref:System.ServiceProcess.ServiceInstaller.Install%2A> добавленииэкземпляров<xref:System.ServiceProcess.ServiceInstaller.Uninstall%2A> установщика в коллекциювконструктореклассапользовательскогоустановщикаможноизбежатьобслуживанияколлекциипометодами.<xref:System.Configuration.Install.Installer.Installers%2A> При вызове программы установки она ищет <xref:System.ComponentModel.RunInstallerAttribute> атрибут.</span><span class="sxs-lookup"><span data-stu-id="1fa49-112">However, you can avoid the maintenance of the collection across the <xref:System.ServiceProcess.ServiceInstaller.Install%2A> and <xref:System.ServiceProcess.ServiceInstaller.Uninstall%2A> methods if you add installer instances to the <xref:System.Configuration.Install.Installer.Installers%2A> collection in your custom installer class constructor.When the install utility is called, it looks for the <xref:System.ComponentModel.RunInstallerAttribute> attribute.</span></span> <span data-ttu-id="1fa49-113">Если атрибут имеет `true`значение, программа устанавливает все службы, добавленные <xref:System.Configuration.Install.Installer.Installers%2A> в коллекцию, которая была связана с установщиком проекта.</span><span class="sxs-lookup"><span data-stu-id="1fa49-113">If the attribute is `true`, the utility installs all the services that were added to the <xref:System.Configuration.Install.Installer.Installers%2A> collection that were associated with your project installer.</span></span> <span data-ttu-id="1fa49-114">Если <xref:System.ComponentModel.RunInstallerAttribute> параметр `false` имеет значение или не существует, программа установки игнорирует установщик проекта.</span><span class="sxs-lookup"><span data-stu-id="1fa49-114">If <xref:System.ComponentModel.RunInstallerAttribute> is `false` or does not exist, the install utility ignores the project installer.</span></span>  
  
 <span data-ttu-id="1fa49-115">Объект <xref:System.ServiceProcess.ServiceProcessInstaller> , связанный с вашим классом установки проекта, устанавливает общие <xref:System.ServiceProcess.ServiceInstaller> для всех экземпляров в проекте сведения.</span><span class="sxs-lookup"><span data-stu-id="1fa49-115">The <xref:System.ServiceProcess.ServiceProcessInstaller> associated with your project installation class installs information common to all <xref:System.ServiceProcess.ServiceInstaller> instances in the project.</span></span> <span data-ttu-id="1fa49-116">Если эта служба разделяет ее от других служб в проекте установки, то сведения, относящиеся к конкретной службе, устанавливаются этим методом.</span><span class="sxs-lookup"><span data-stu-id="1fa49-116">If this service has anything that separates it from the other services in the installation project, that service-specific information is installed by this method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1fa49-117">Крайне важно, <xref:System.ServiceProcess.ServiceInstaller.ServiceName%2A> <xref:System.ServiceProcess.ServiceBase.ServiceName%2A?displayProperty=nameWithType> чтобы компонент был идентичен классу, производному от <xref:System.ServiceProcess.ServiceBase>.</span><span class="sxs-lookup"><span data-stu-id="1fa49-117">It is crucial that the <xref:System.ServiceProcess.ServiceInstaller.ServiceName%2A> be identical to the <xref:System.ServiceProcess.ServiceBase.ServiceName%2A?displayProperty=nameWithType> of the class you derived from <xref:System.ServiceProcess.ServiceBase>.</span></span> <span data-ttu-id="1fa49-118">Как правило, значение <xref:System.ServiceProcess.ServiceBase.ServiceName%2A?displayProperty=nameWithType> свойства для службы задается в функции Main () исполняемого файла приложения службы.</span><span class="sxs-lookup"><span data-stu-id="1fa49-118">Normally, the value of the <xref:System.ServiceProcess.ServiceBase.ServiceName%2A?displayProperty=nameWithType> property for the service is set within the Main() function of the service application's executable.</span></span> <span data-ttu-id="1fa49-119">Диспетчер управления службами использует <xref:System.ServiceProcess.ServiceInstaller.ServiceName%2A?displayProperty=nameWithType> свойство для нахождение службы в этом исполняемом файле.</span><span class="sxs-lookup"><span data-stu-id="1fa49-119">The Service Control Manager uses the <xref:System.ServiceProcess.ServiceInstaller.ServiceName%2A?displayProperty=nameWithType> property to locate the service within this executable.</span></span>  
  
 <span data-ttu-id="1fa49-120">Другие свойства <xref:System.ServiceProcess.ServiceInstaller> можно изменить либо до, либо после его добавления <xref:System.Configuration.Install.Installer.Installers%2A> в коллекцию установщика проекта.</span><span class="sxs-lookup"><span data-stu-id="1fa49-120">You can modify other properties on the <xref:System.ServiceProcess.ServiceInstaller> either before or after adding it to the <xref:System.Configuration.Install.Installer.Installers%2A> collection of your project installer.</span></span> <span data-ttu-id="1fa49-121">Например, служба <xref:System.ServiceProcess.ServiceInstaller.StartType%2A> может быть настроена на автоматический запуск службы при перезагрузке или потребовать от пользователя запуска службы вручную.</span><span class="sxs-lookup"><span data-stu-id="1fa49-121">For example, a service's <xref:System.ServiceProcess.ServiceInstaller.StartType%2A> may be set to start the service automatically at reboot or require a user to start the service manually.</span></span>  
  
 <span data-ttu-id="1fa49-122">Обычно методы <xref:System.ServiceProcess.ServiceInstaller> в коде не вызываются; они обычно вызываются только программой установки.</span><span class="sxs-lookup"><span data-stu-id="1fa49-122">Normally, you will not call the methods on <xref:System.ServiceProcess.ServiceInstaller> within your code; they are generally called only by the install utility.</span></span> <span data-ttu-id="1fa49-123">Программа установки автоматически вызывает методы и <xref:System.ServiceProcess.ServiceProcessInstaller.Install%2A?displayProperty=nameWithType> <xref:System.ServiceProcess.ServiceInstaller.Install%2A?displayProperty=nameWithType> в процессе установки.</span><span class="sxs-lookup"><span data-stu-id="1fa49-123">The install utility automatically calls the <xref:System.ServiceProcess.ServiceProcessInstaller.Install%2A?displayProperty=nameWithType> and <xref:System.ServiceProcess.ServiceInstaller.Install%2A?displayProperty=nameWithType> methods during the installation process.</span></span> <span data-ttu-id="1fa49-124">При необходимости он создает ошибки, вызывая <xref:System.ServiceProcess.ServiceProcessInstaller.Rollback%2A> (или <xref:System.ServiceProcess.ServiceInstaller.Rollback%2A?displayProperty=nameWithType>) для всех ранее установленных компонентов.</span><span class="sxs-lookup"><span data-stu-id="1fa49-124">It backs out failures, if necessary, by calling <xref:System.ServiceProcess.ServiceProcessInstaller.Rollback%2A> (or <xref:System.ServiceProcess.ServiceInstaller.Rollback%2A?displayProperty=nameWithType>) on all previously installed components.</span></span>  
  
 <span data-ttu-id="1fa49-125">Служебная программа установки <xref:System.ServiceProcess.ServiceInstaller.Uninstall%2A> вызывает метод для удаления объекта.</span><span class="sxs-lookup"><span data-stu-id="1fa49-125">The installation utility calls <xref:System.ServiceProcess.ServiceInstaller.Uninstall%2A> to remove the object.</span></span>  
  
 <span data-ttu-id="1fa49-126">Программа установки приложения автоматически сохраняет сведения об уже установленных компонентах с помощью установщика <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType>проекта.</span><span class="sxs-lookup"><span data-stu-id="1fa49-126">An application's install routine maintains information automatically about the components already installed, using the project installer's <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="1fa49-127">Эти сведения о состоянии постоянно обновляются как <xref:System.ServiceProcess.ServiceProcessInstaller> экземпляр, и каждый <xref:System.ServiceProcess.ServiceInstaller> экземпляр устанавливается программой.</span><span class="sxs-lookup"><span data-stu-id="1fa49-127">This state information is continuously updated as the <xref:System.ServiceProcess.ServiceProcessInstaller> instance, and each <xref:System.ServiceProcess.ServiceInstaller> instance is installed by the utility.</span></span> <span data-ttu-id="1fa49-128">Обычно нет необходимости явно изменять сведения о состоянии в коде.</span><span class="sxs-lookup"><span data-stu-id="1fa49-128">It is usually unnecessary for your code to modify state information explicitly.</span></span>  
  
 <span data-ttu-id="1fa49-129">При выполнении установки автоматически создается <xref:System.Diagnostics.EventLogInstaller> для установки источника журнала событий, связанного <xref:System.ServiceProcess.ServiceBase> с производным классом.</span><span class="sxs-lookup"><span data-stu-id="1fa49-129">When the installation is performed, it automatically creates an <xref:System.Diagnostics.EventLogInstaller> to install the event log source associated with the <xref:System.ServiceProcess.ServiceBase> derived class.</span></span> <span data-ttu-id="1fa49-130">Свойство для этого источника задается <xref:System.ServiceProcess.ServiceInstaller.%23ctor%2A> конструктором для журнала приложений компьютера. <xref:System.Diagnostics.EventLog.Log%2A></span><span class="sxs-lookup"><span data-stu-id="1fa49-130">The <xref:System.Diagnostics.EventLog.Log%2A> property for this source is set by the <xref:System.ServiceProcess.ServiceInstaller.%23ctor%2A> constructor to the computer's Application log.</span></span> <span data-ttu-id="1fa49-131"><xref:System.ServiceProcess.ServiceInstaller.ServiceName%2A> При задании <xref:System.ServiceProcess.ServiceInstaller> значения параметра (который должен совпадать с параметром <xref:System.ServiceProcess.ServiceBase.ServiceName%2A?displayProperty=nameWithType> службы) <xref:System.Diagnostics.EventLog.Source%2A> автоматически устанавливается одно и то же значение.</span><span class="sxs-lookup"><span data-stu-id="1fa49-131">When you set the <xref:System.ServiceProcess.ServiceInstaller.ServiceName%2A> of the <xref:System.ServiceProcess.ServiceInstaller> (which should be identical to the <xref:System.ServiceProcess.ServiceBase.ServiceName%2A?displayProperty=nameWithType> of the service), the <xref:System.Diagnostics.EventLog.Source%2A> is automatically set to the same value.</span></span> <span data-ttu-id="1fa49-132">При сбое установки выполняется откат установки источника вместе с ранее установленными службами.</span><span class="sxs-lookup"><span data-stu-id="1fa49-132">In an installation failure, the source's installation is rolled-back along with previously installed services.</span></span>  
  
 <span data-ttu-id="1fa49-133"><xref:System.ServiceProcess.ServiceInstaller.Uninstall%2A> Метод пытается прерывать работу службы, если она запущена.</span><span class="sxs-lookup"><span data-stu-id="1fa49-133">The <xref:System.ServiceProcess.ServiceInstaller.Uninstall%2A> method tries to stop the service if it is running.</span></span> <span data-ttu-id="1fa49-134">Независимо от успешности или нет, <xref:System.ServiceProcess.ServiceInstaller.Uninstall%2A> отменяет изменения, <xref:System.ServiceProcess.ServiceInstaller.Install%2A>внесенные.</span><span class="sxs-lookup"><span data-stu-id="1fa49-134">Whether this succeeds or not, <xref:System.ServiceProcess.ServiceInstaller.Uninstall%2A> undoes the changes made by <xref:System.ServiceProcess.ServiceInstaller.Install%2A>.</span></span> <span data-ttu-id="1fa49-135">Если для ведения журнала событий был создан новый источник, то источник удаляется.</span><span class="sxs-lookup"><span data-stu-id="1fa49-135">If a new source was created for event logging, the source is deleted.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1fa49-136">В следующем примере создается установщик проекта с именем `MyProjectInstaller`, который наследует от. <xref:System.Configuration.Install.Installer></span><span class="sxs-lookup"><span data-stu-id="1fa49-136">The following example creates a project installer, called `MyProjectInstaller`, which inherits from <xref:System.Configuration.Install.Installer>.</span></span> <span data-ttu-id="1fa49-137">Предполагается наличие исполняемого файла службы, который содержит две службы: "Hello-World Service 1" и "Hello-World Service 2".</span><span class="sxs-lookup"><span data-stu-id="1fa49-137">It is assumed there is a service executable that contains two services, "Hello-World Service 1" and "Hello-World Service 2".</span></span> <span data-ttu-id="1fa49-138">В конструкторе для `MyProjectInstaller` (который будет вызываться программой установки <xref:System.ServiceProcess.ServiceInstaller> ) для каждой из <xref:System.ServiceProcess.ServiceProcessInstaller> этих служб создаются объекты, а для исполняемого файла создается.</span><span class="sxs-lookup"><span data-stu-id="1fa49-138">Within the constructor for `MyProjectInstaller` (which would be called by the install utility), <xref:System.ServiceProcess.ServiceInstaller> objects are created for each of these services, and a <xref:System.ServiceProcess.ServiceProcessInstaller> is created for the executable.</span></span> <span data-ttu-id="1fa49-139">Чтобы программа установки могла распознать `MyProjectInstaller` как допустимый установщик <xref:System.ComponentModel.RunInstallerAttribute> , атрибуту присваивается значение `true`.</span><span class="sxs-lookup"><span data-stu-id="1fa49-139">For the install utility to recognize `MyProjectInstaller` as a valid installer, the <xref:System.ComponentModel.RunInstallerAttribute> attribute is set to `true`.</span></span>  
  
 <span data-ttu-id="1fa49-140">Дополнительные свойства задаются в установщике процесса и установщиках служб перед добавлением установщиков в <xref:System.Configuration.Install.Installer.Installers%2A> коллекцию.</span><span class="sxs-lookup"><span data-stu-id="1fa49-140">Optional properties are set on the process installer and the service installers before the installers are added to the <xref:System.Configuration.Install.Installer.Installers%2A> collection.</span></span> <span data-ttu-id="1fa49-141">Когда программа установки обращается к `MyProjectInstaller`, объекты, добавленные <xref:System.Configuration.Install.Installer.Installers%2A> в <xref:System.Configuration.Install.InstallerCollection.Add%2A?displayProperty=nameWithType> коллекцию через вызов, будут установлены в свою очередь.</span><span class="sxs-lookup"><span data-stu-id="1fa49-141">When the install utility accesses `MyProjectInstaller`, the objects added to the <xref:System.Configuration.Install.Installer.Installers%2A> collection through a call to <xref:System.Configuration.Install.InstallerCollection.Add%2A?displayProperty=nameWithType> will be installed in turn.</span></span> <span data-ttu-id="1fa49-142">В ходе этого процесса установщик сохраняет сведения о состоянии, указывающие, какие объекты были установлены, поэтому в случае сбоя установки можно выполнить резервное копирование каждого из них.</span><span class="sxs-lookup"><span data-stu-id="1fa49-142">During the process, the installer maintains state information indicating which objects have been installed, so each can be backed out in turn, if an installation failure occurs.</span></span>  
  
 <span data-ttu-id="1fa49-143">Как правило, экземпляр класса установщика проекта не создается явным образом.</span><span class="sxs-lookup"><span data-stu-id="1fa49-143">Normally, you would not create an instance of your project installer class explicitly.</span></span> <span data-ttu-id="1fa49-144">Необходимо создать его и добавить <xref:System.ComponentModel.RunInstallerAttribute> атрибут к синтаксису, но это программа установки, которая фактически вызывает, и, следовательно, создает класс.</span><span class="sxs-lookup"><span data-stu-id="1fa49-144">You would create it and add the <xref:System.ComponentModel.RunInstallerAttribute> attribute to the syntax, but it is the install utility that actually calls, and therefore instantiates, the class.</span></span>  
  
 [!code-cpp[Classic ServiceInstaller Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ServiceInstaller Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ServiceInstaller Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ServiceInstaller Example/CS/source.cs#1)]
 [!code-vb[Classic ServiceInstaller Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ServiceInstaller Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.ServiceProcess.ServiceBase.ServiceName" />
    <altmember cref="T:System.ServiceProcess.ServiceProcessInstaller" />
    <altmember cref="T:System.ServiceProcess.ServiceBase" />
    <altmember cref="P:System.ServiceProcess.ServiceBase.EventLog" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ServiceInstaller ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceInstaller.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ServiceInstaller();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1fa49-145">Инициализирует новый экземпляр класса <see cref="T:System.ServiceProcess.ServiceInstaller" />.</span><span class="sxs-lookup"><span data-stu-id="1fa49-145">Initializes a new instance of the <see cref="T:System.ServiceProcess.ServiceInstaller" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1fa49-146">Чтобы установить службу, создайте класс установщика проекта, наследующий от <xref:System.Configuration.Install.Installer> класса, и <xref:System.ComponentModel.RunInstallerAttribute> задайте `true`атрибуту класса значение.</span><span class="sxs-lookup"><span data-stu-id="1fa49-146">To install a service, create a project installer class that inherits from the <xref:System.Configuration.Install.Installer> class, and set the <xref:System.ComponentModel.RunInstallerAttribute> attribute on the class to `true`.</span></span> <span data-ttu-id="1fa49-147">В проекте создайте по одному <xref:System.ServiceProcess.ServiceProcessInstaller> экземпляру для каждого приложения службы и по одному <xref:System.ServiceProcess.ServiceInstaller> экземпляру для каждой службы в приложении.</span><span class="sxs-lookup"><span data-stu-id="1fa49-147">Within your project, create one <xref:System.ServiceProcess.ServiceProcessInstaller> instance per service application, and one <xref:System.ServiceProcess.ServiceInstaller> instance for each service in the application.</span></span> <span data-ttu-id="1fa49-148">В конструкторе класса установщика проекта задайте свойства установки для службы с помощью <xref:System.ServiceProcess.ServiceProcessInstaller> экземпляров и <xref:System.ServiceProcess.ServiceInstaller> и <xref:System.Configuration.Install.Installer.Installers%2A> добавьте экземпляры в коллекцию.</span><span class="sxs-lookup"><span data-stu-id="1fa49-148">Within your project installer class constructor, set the installation properties for the service using the <xref:System.ServiceProcess.ServiceProcessInstaller> and <xref:System.ServiceProcess.ServiceInstaller> instances, and add the instances to the <xref:System.Configuration.Install.Installer.Installers%2A> collection.</span></span>  
  
 <span data-ttu-id="1fa49-149">Конструктор автоматически создает источник журнала событий, свойство которого <xref:System.Diagnostics.EventLog.Log%2A> задано в журнале <xref:System.Diagnostics.EventLogInstaller>приложений компьютера, и. <xref:System.ServiceProcess.ServiceInstaller.%23ctor%2A></span><span class="sxs-lookup"><span data-stu-id="1fa49-149">The <xref:System.ServiceProcess.ServiceInstaller.%23ctor%2A> constructor automatically generates an event log source whose <xref:System.Diagnostics.EventLog.Log%2A> property is set to the computer's Application log, and an <xref:System.Diagnostics.EventLogInstaller>.</span></span> <span data-ttu-id="1fa49-150">При установке <xref:System.ServiceProcess.ServiceInstaller.ServiceName%2A> <xref:System.ServiceProcess.ServiceBase.ServiceName%2A?displayProperty=nameWithType> значения параметра <xref:System.Diagnostics.EventLog.Source%2A> , который должен совпадать с параметром службы, для свойства журнала событий автоматически устанавливается то же значение. <xref:System.ServiceProcess.ServiceInstaller></span><span class="sxs-lookup"><span data-stu-id="1fa49-150">When you set the <xref:System.ServiceProcess.ServiceInstaller.ServiceName%2A> of the <xref:System.ServiceProcess.ServiceInstaller>, which should be identical to the <xref:System.ServiceProcess.ServiceBase.ServiceName%2A?displayProperty=nameWithType> of the service, the <xref:System.Diagnostics.EventLog.Source%2A> property of the event log is automatically set to the same value.</span></span> <span data-ttu-id="1fa49-151">Источник удаляется автоматически в случае сбоя установки.</span><span class="sxs-lookup"><span data-stu-id="1fa49-151">The source is deleted automatically in the case of an installation failure.</span></span>  
  
 <span data-ttu-id="1fa49-152">Конструктор задает для`ServiceStartMode.Manual` свойства значение, чтобы указать, что пользователь запускает службу. <xref:System.ServiceProcess.ServiceInstaller.StartType%2A> <xref:System.ServiceProcess.ServiceInstaller.%23ctor%2A></span><span class="sxs-lookup"><span data-stu-id="1fa49-152">The <xref:System.ServiceProcess.ServiceInstaller.%23ctor%2A> constructor sets the <xref:System.ServiceProcess.ServiceInstaller.StartType%2A> property to `ServiceStartMode.Manual` to specify that a user start the service.</span></span> <span data-ttu-id="1fa49-153">Можно сбросить свойство, чтобы `ServiceStartMode.Automatic` указать, что служба запускается при перезагрузке компьютера.</span><span class="sxs-lookup"><span data-stu-id="1fa49-153">You can reset the property to `ServiceStartMode.Automatic` to specify that the service start when the computer reboots.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.EventLog" />
        <altmember cref="T:System.ServiceProcess.ServiceStartMode" />
      </Docs>
    </Member>
    <Member MemberName="CopyFromComponent">
      <MemberSignature Language="C#" Value="public override void CopyFromComponent (System.ComponentModel.IComponent component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void CopyFromComponent(class System.ComponentModel.IComponent component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceInstaller.CopyFromComponent(System.ComponentModel.IComponent)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub CopyFromComponent (component As IComponent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void CopyFromComponent(System::ComponentModel::IComponent ^ component);" />
      <MemberSignature Language="F#" Value="override this.CopyFromComponent : System.ComponentModel.IComponent -&gt; unit" Usage="serviceInstaller.CopyFromComponent component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="1fa49-154">Объект <see cref="T:System.ComponentModel.IComponent" />, из которого будет выполняться копирование.</span><span class="sxs-lookup"><span data-stu-id="1fa49-154">The <see cref="T:System.ComponentModel.IComponent" /> from which to copy.</span></span></param>
        <summary><span data-ttu-id="1fa49-155">Копирует в данный установщик свойства из экземпляра класса <see cref="T:System.ServiceProcess.ServiceBase" />.</span><span class="sxs-lookup"><span data-stu-id="1fa49-155">Copies properties from an instance of <see cref="T:System.ServiceProcess.ServiceBase" /> to this installer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1fa49-156">Этот метод редко вызывается в коде.</span><span class="sxs-lookup"><span data-stu-id="1fa49-156">This method will rarely be called within your code.</span></span> <span data-ttu-id="1fa49-157"><xref:System.ServiceProcess.ServiceInstaller.CopyFromComponent%2A>обычно вызывается только конструкторами.</span><span class="sxs-lookup"><span data-stu-id="1fa49-157"><xref:System.ServiceProcess.ServiceInstaller.CopyFromComponent%2A> is usually called only by designers.</span></span>  
  
 <span data-ttu-id="1fa49-158"><xref:System.ServiceProcess.ServiceInstaller.CopyFromComponent%2A>сохраняет имя `component` службы параметра <xref:System.ServiceProcess.ServiceInstaller.ServiceName%2A> в <xref:System.ServiceProcess.ServiceInstaller> экземпляре.</span><span class="sxs-lookup"><span data-stu-id="1fa49-158"><xref:System.ServiceProcess.ServiceInstaller.CopyFromComponent%2A> saves the service name of the `component` parameter to the <xref:System.ServiceProcess.ServiceInstaller.ServiceName%2A> of the <xref:System.ServiceProcess.ServiceInstaller> instance.</span></span> <span data-ttu-id="1fa49-159">(Поскольку параметр должен быть экземпляром класса, производного от <xref:System.ServiceProcess.ServiceBase>, `component` гарантированно имеет <xref:System.ServiceProcess.ServiceBase.ServiceName%2A?displayProperty=nameWithType> свойство.)</span><span class="sxs-lookup"><span data-stu-id="1fa49-159">(Because the parameter must be an instance of a class that derives from <xref:System.ServiceProcess.ServiceBase>, `component` is guaranteed to have a <xref:System.ServiceProcess.ServiceBase.ServiceName%2A?displayProperty=nameWithType> property.)</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1fa49-160">При использовании конструктора Visual Studio этот метод вызывается во время разработки, когда пользователь щелкает `Add Installer` компонент, который указал этот класс в качестве установщика.</span><span class="sxs-lookup"><span data-stu-id="1fa49-160">If you are using the Visual Studio designer, this method is called at design time when the user clicks `Add Installer` on a component that specified this class as its installer.</span></span> <span data-ttu-id="1fa49-161">Установщик принимает всю информацию из компонента Live Component и сохраняет ее для использования во время установки.</span><span class="sxs-lookup"><span data-stu-id="1fa49-161">The installer takes all information it can from the live component and stores it for use at install time.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1fa49-162">Компонент, связанный с данным установщиком, не наследуется из класса <see cref="T:System.ServiceProcess.ServiceBase" />.</span><span class="sxs-lookup"><span data-stu-id="1fa49-162">The component you are associating with this installer does not inherit from <see cref="T:System.ServiceProcess.ServiceBase" />.</span></span></exception>
        <altmember cref="M:System.ServiceProcess.ServiceProcessInstaller.CopyFromComponent(System.ComponentModel.IComponent)" />
      </Docs>
    </Member>
    <Member MemberName="DelayedAutoStart">
      <MemberSignature Language="C#" Value="public bool DelayedAutoStart { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DelayedAutoStart" />
      <MemberSignature Language="DocId" Value="P:System.ServiceProcess.ServiceInstaller.DelayedAutoStart" />
      <MemberSignature Language="VB.NET" Value="Public Property DelayedAutoStart As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DelayedAutoStart { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.DelayedAutoStart : bool with get, set" Usage="System.ServiceProcess.ServiceInstaller.DelayedAutoStart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ServiceProcess.ServiceProcessDescription("ServiceInstallerDelayedAutoStart")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1fa49-163">Получает или задает значение, указывающее, следует ли задержать запуск службы, пока не заработают другие автоматически запускающиеся службы.</span><span class="sxs-lookup"><span data-stu-id="1fa49-163">Gets or sets a value that indicates whether the service should be delayed from starting until other automatically started services are running.</span></span></summary>
        <value><span data-ttu-id="1fa49-164">Значение <see langword="true" /> для задержки автоматического запуска службы; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="1fa49-164"><see langword="true" /> to delay automatic start of the service; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="1fa49-165">Значение по умолчанию — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="1fa49-165">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1fa49-166">Свойство может быть применено к любой службе, но оно игнорируется, если только режим запуска службы не <xref:System.ServiceProcess.ServiceStartMode.Automatic>равен. <xref:System.ServiceProcess.ServiceInstaller.DelayedAutoStart%2A></span><span class="sxs-lookup"><span data-stu-id="1fa49-166">The <xref:System.ServiceProcess.ServiceInstaller.DelayedAutoStart%2A> property can be applied to any service, but it is ignored unless the service's start mode is <xref:System.ServiceProcess.ServiceStartMode.Automatic>.</span></span> <span data-ttu-id="1fa49-167">Параметр вступает в силу при следующем перезапуске системы.</span><span class="sxs-lookup"><span data-stu-id="1fa49-167">The setting takes effect the next time the system is restarted.</span></span> <span data-ttu-id="1fa49-168">Диспетчер управления службами не гарантирует определенное время запуска для службы.</span><span class="sxs-lookup"><span data-stu-id="1fa49-168">The Service Control Manager does not guarantee a specific start time for the service.</span></span>  
  
 <span data-ttu-id="1fa49-169">Служба отложенного автоматического запуска не может быть членом группы упорядочения нагрузки, но может зависеть от другой службы автоматического запуска.</span><span class="sxs-lookup"><span data-stu-id="1fa49-169">A delayed automatic start service cannot be a member of a load ordering group, but it can depend on another automatic start service.</span></span> <span data-ttu-id="1fa49-170">Если приложение вызывает службу отложенного автоматического запуска перед загрузкой, вызов завершается с ошибкой.</span><span class="sxs-lookup"><span data-stu-id="1fa49-170">If an application calls a delayed automatic start service before it is loaded, the call fails.</span></span>  
  
 <span data-ttu-id="1fa49-171">В операционных системах, не поддерживающих отложенный автоматический запуск, установка этого свойства не оказывает никакого влияния.</span><span class="sxs-lookup"><span data-stu-id="1fa49-171">On operating systems that do not support delayed automatic start, setting this property has no effect.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public string Description { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Description" />
      <MemberSignature Language="DocId" Value="P:System.ServiceProcess.ServiceInstaller.Description" />
      <MemberSignature Language="VB.NET" Value="Public Property Description As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Description { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Description : string with get, set" Usage="System.ServiceProcess.ServiceInstaller.Description" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ServiceProcess.ServiceProcessDescription("ServiceInstallerDescription")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1fa49-172">Получает или задает описание для службы.</span><span class="sxs-lookup"><span data-stu-id="1fa49-172">Gets or sets the description for the service.</span></span></summary>
        <value><span data-ttu-id="1fa49-173">Описание службы.</span><span class="sxs-lookup"><span data-stu-id="1fa49-173">The description of the service.</span></span> <span data-ttu-id="1fa49-174">Значение по умолчанию — пустая строка ("").</span><span class="sxs-lookup"><span data-stu-id="1fa49-174">The default is an empty string ("").</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1fa49-175"><xref:System.ServiceProcess.ServiceInstaller.Description%2A> Используйте свойство, чтобы описать назначение установленной службы пользователю.</span><span class="sxs-lookup"><span data-stu-id="1fa49-175">Use the <xref:System.ServiceProcess.ServiceInstaller.Description%2A> property to describe the purpose of the installed service to the user.</span></span> <span data-ttu-id="1fa49-176">Пользователь может просмотреть описание службы в приложениях, отображающих сведения об установленных службах.</span><span class="sxs-lookup"><span data-stu-id="1fa49-176">The user can view the service description in applications that display details for installed services.</span></span>  
  
 <span data-ttu-id="1fa49-177">Например, с помощью Windows XP можно просмотреть описание службы с помощью служебной программы командной строки (SC. exe) службы управления службами или просмотреть описание службы в узле **службы** консоли **управления компьютером** .</span><span class="sxs-lookup"><span data-stu-id="1fa49-177">For example, using Windows XP, you can view the service description with the Service Control command-line utility (Sc.exe) or you can view the service description within the **Services** node of the **Computer Management** console.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1fa49-178">В следующем примере кода задаются свойства установки для нового приложения службы Windows.</span><span class="sxs-lookup"><span data-stu-id="1fa49-178">The following code example sets the installation properties for a new Windows service application.</span></span> <span data-ttu-id="1fa49-179">В примере задается имя службы вместе с отображаемым именем и описанием.</span><span class="sxs-lookup"><span data-stu-id="1fa49-179">The example sets the service name, along with the display name and description.</span></span> <span data-ttu-id="1fa49-180">После назначения свойств установки для службы в этом примере <xref:System.ServiceProcess.ServiceInstaller> объект добавляется <xref:System.Configuration.Install.Installer.Installers%2A> в коллекцию.</span><span class="sxs-lookup"><span data-stu-id="1fa49-180">After assigning the installation properties for the service, the example adds the <xref:System.ServiceProcess.ServiceInstaller> object to the <xref:System.Configuration.Install.Installer.Installers%2A> collection.</span></span>  
  
 [!code-csharp[ServiceProcess_ServiceInstaller#3](~/samples/snippets/csharp/VS_Snippets_CLR/ServiceProcess_serviceinstaller/CS/simpleserviceinstaller.cs#3)]
 [!code-vb[ServiceProcess_ServiceInstaller#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/ServiceProcess_serviceinstaller/VB/service1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ServiceProcess.ServiceInstaller.ServiceName" />
        <altmember cref="P:System.ServiceProcess.ServiceInstaller.DisplayName" />
      </Docs>
    </Member>
    <Member MemberName="DisplayName">
      <MemberSignature Language="C#" Value="public string DisplayName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DisplayName" />
      <MemberSignature Language="DocId" Value="P:System.ServiceProcess.ServiceInstaller.DisplayName" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DisplayName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DisplayName : string with get, set" Usage="System.ServiceProcess.ServiceInstaller.DisplayName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ServiceProcess.ServiceProcessDescription("ServiceInstallerDisplayName")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1fa49-181">Указывает псевдоним, обозначающий службу для пользователя.</span><span class="sxs-lookup"><span data-stu-id="1fa49-181">Indicates the friendly name that identifies the service to the user.</span></span></summary>
        <value><span data-ttu-id="1fa49-182">Имя, связанное со службой, которое часто используется в интерактивных инструментах.</span><span class="sxs-lookup"><span data-stu-id="1fa49-182">The name associated with the service, used frequently for interactive tools.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1fa49-183"><xref:System.ServiceProcess.ServiceInstaller.DisplayName%2A> Используется, например, в диспетчере управления службами, чтобы предоставить понятное для пользователя описательное имя службы.</span><span class="sxs-lookup"><span data-stu-id="1fa49-183">The <xref:System.ServiceProcess.ServiceInstaller.DisplayName%2A> is used, for example, in the Service Control Manager to provide a user-readable descriptive name for the service.</span></span> <span data-ttu-id="1fa49-184">Параметр <xref:System.ServiceProcess.ServiceInstaller.DisplayName%2A> является значением реестра, но никогда не используется в качестве раздела реестра.</span><span class="sxs-lookup"><span data-stu-id="1fa49-184">The <xref:System.ServiceProcess.ServiceInstaller.DisplayName%2A> is a registry value, but is never used as a registry key.</span></span> <span data-ttu-id="1fa49-185">Поэтому ограничения на <xref:System.ServiceProcess.ServiceInstaller.ServiceName%2A> значение свойства не применяются.</span><span class="sxs-lookup"><span data-stu-id="1fa49-185">Therefore, restrictions on the <xref:System.ServiceProcess.ServiceInstaller.ServiceName%2A> property value do not apply.</span></span> <span data-ttu-id="1fa49-186"><xref:System.ServiceProcess.ServiceInstaller.ServiceName%2A>используется в качестве раздела реестра HKEY_LOCAL_MACHINES\System\CurrentControlSet\Services, поэтому он ограничен.</span><span class="sxs-lookup"><span data-stu-id="1fa49-186"><xref:System.ServiceProcess.ServiceInstaller.ServiceName%2A> is used as the HKEY_LOCAL_MACHINES\System\CurrentControlSet\Services registry key, so it is restricted.</span></span>  
  
 <span data-ttu-id="1fa49-187">Отображаемое имя никогда не используется программой установки для обнаружения службы, поэтому нет ограничений на выбор имени, как и для <xref:System.ServiceProcess.ServiceInstaller.ServiceName%2A> свойства.</span><span class="sxs-lookup"><span data-stu-id="1fa49-187">The display name is never used by the install utility to identify the service, so there are no restrictions on the choice of name, as there is for the <xref:System.ServiceProcess.ServiceInstaller.ServiceName%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ServiceProcess.ServiceInstaller.ServiceName" />
        <altmember cref="P:System.ServiceProcess.ServiceInstaller.Description" />
      </Docs>
    </Member>
    <Member MemberName="Install">
      <MemberSignature Language="C#" Value="public override void Install (System.Collections.IDictionary stateSaver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Install(class System.Collections.IDictionary stateSaver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceInstaller.Install(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Install (stateSaver As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Install(System::Collections::IDictionary ^ stateSaver);" />
      <MemberSignature Language="F#" Value="override this.Install : System.Collections.IDictionary -&gt; unit" Usage="serviceInstaller.Install stateSaver" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stateSaver" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="stateSaver"><span data-ttu-id="1fa49-188">Объект <see cref="T:System.Collections.IDictionary" />, содержащий контекстные данные, связанные с процессом установки.</span><span class="sxs-lookup"><span data-stu-id="1fa49-188">An <see cref="T:System.Collections.IDictionary" /> that contains the context information associated with the installation.</span></span></param>
        <summary><span data-ttu-id="1fa49-189">Устанавливает службу, записывая в реестр сведения о служебном приложении.</span><span class="sxs-lookup"><span data-stu-id="1fa49-189">Installs the service by writing service application information to the registry.</span></span> <span data-ttu-id="1fa49-190">Этот метод предназначен для использования инструментами установки, которые автоматически обрабатывают соответствующие методы.</span><span class="sxs-lookup"><span data-stu-id="1fa49-190">This method is meant to be used by installation tools, which process the appropriate methods automatically.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1fa49-191">Обычно методы <xref:System.ServiceProcess.ServiceInstaller> в коде не вызываются; они обычно вызываются только программой установки.</span><span class="sxs-lookup"><span data-stu-id="1fa49-191">Normally, you will not call the methods on <xref:System.ServiceProcess.ServiceInstaller> within your code; they are generally called only by the install utility.</span></span> <span data-ttu-id="1fa49-192">Программа установки автоматически вызывает <xref:System.ServiceProcess.ServiceInstaller.Install%2A> метод во время установки.</span><span class="sxs-lookup"><span data-stu-id="1fa49-192">The install utility automatically calls the <xref:System.ServiceProcess.ServiceInstaller.Install%2A> method during installation.</span></span> <span data-ttu-id="1fa49-193">При необходимости он создает ошибки, вызывая метод <xref:System.ServiceProcess.ServiceInstaller.Rollback%2A> для объекта, создавшего исключение.</span><span class="sxs-lookup"><span data-stu-id="1fa49-193">It backs out failures, if necessary, by calling <xref:System.ServiceProcess.ServiceInstaller.Rollback%2A> on the object that generated the exception.</span></span>  
  
 <span data-ttu-id="1fa49-194">Программа установки приложения автоматически сохраняет сведения о уже установленных компонентах с помощью установщика <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType>проекта.</span><span class="sxs-lookup"><span data-stu-id="1fa49-194">An application's install routine maintains information automatically about the components that were already installed, using the project installer's <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="1fa49-195">Эти сведения о состоянии <xref:System.ServiceProcess.ServiceInstaller.Install%2A> , переданные в `stateSaver` качестве параметра, постоянно обновляются как <xref:System.ServiceProcess.ServiceProcessInstaller> экземпляр и каждый <xref:System.ServiceProcess.ServiceInstaller> экземпляр устанавливается программой.</span><span class="sxs-lookup"><span data-stu-id="1fa49-195">This state information, passed into <xref:System.ServiceProcess.ServiceInstaller.Install%2A> as the `stateSaver` parameter, is continuously updated as the <xref:System.ServiceProcess.ServiceProcessInstaller> instance and each <xref:System.ServiceProcess.ServiceInstaller> instance is installed by the utility.</span></span> <span data-ttu-id="1fa49-196">Обычно нет необходимости явно изменять сведения о состоянии в коде.</span><span class="sxs-lookup"><span data-stu-id="1fa49-196">It is usually unnecessary for your code to modify this state information explicitly.</span></span>  
  
 <span data-ttu-id="1fa49-197">Объект <xref:System.ServiceProcess.ServiceProcessInstaller> , связанный с вашим классом установки проекта, устанавливает общие <xref:System.ServiceProcess.ServiceInstaller> для всех экземпляров в проекте сведения.</span><span class="sxs-lookup"><span data-stu-id="1fa49-197">The <xref:System.ServiceProcess.ServiceProcessInstaller> associated with your project installation class installs information common to all <xref:System.ServiceProcess.ServiceInstaller> instances in the project.</span></span> <span data-ttu-id="1fa49-198">Если эта служба разделяет ее от других служб в проекте установки, то сведения, относящиеся к конкретной службе, устанавливаются этим методом.</span><span class="sxs-lookup"><span data-stu-id="1fa49-198">If this service has anything that separates it from the other services in the installation project, that service-specific information is installed by this method.</span></span>  
  
 <span data-ttu-id="1fa49-199">Чтобы установить службу, создайте класс установщика проекта, наследующий от <xref:System.Configuration.Install.Installer> класса, и <xref:System.ComponentModel.RunInstallerAttribute> задайте `true`атрибуту класса значение.</span><span class="sxs-lookup"><span data-stu-id="1fa49-199">To install a service, create a project installer class that inherits from the <xref:System.Configuration.Install.Installer> class, and set the <xref:System.ComponentModel.RunInstallerAttribute> attribute on the class to `true`.</span></span> <span data-ttu-id="1fa49-200">В проекте создайте по одному <xref:System.ServiceProcess.ServiceProcessInstaller> экземпляру для каждого приложения службы и по одному <xref:System.ServiceProcess.ServiceInstaller> экземпляру для каждой службы в приложении.</span><span class="sxs-lookup"><span data-stu-id="1fa49-200">Within your project, create one <xref:System.ServiceProcess.ServiceProcessInstaller> instance per service application, and one <xref:System.ServiceProcess.ServiceInstaller> instance for each service in the application.</span></span> <span data-ttu-id="1fa49-201">В конструкторе класса установщика проекта задайте свойства установки для службы с помощью <xref:System.ServiceProcess.ServiceProcessInstaller> экземпляров и <xref:System.ServiceProcess.ServiceInstaller> и <xref:System.Configuration.Install.Installer.Installers%2A> добавьте экземпляры в коллекцию.</span><span class="sxs-lookup"><span data-stu-id="1fa49-201">Within your project installer class constructor, set the installation properties for the service using the <xref:System.ServiceProcess.ServiceProcessInstaller> and <xref:System.ServiceProcess.ServiceInstaller> instances, and add the instances to the <xref:System.Configuration.Install.Installer.Installers%2A> collection.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1fa49-202">Рекомендуется использовать конструктор для добавления экземпляров установщика; Однако если необходимо добавить <xref:System.Configuration.Install.Installer.Installers%2A> в коллекцию <xref:System.ServiceProcess.ServiceInstaller.Install%2A> в методе, необходимо выполнить те же действия в коллекции в <xref:System.ServiceProcess.ServiceInstaller.Uninstall%2A> методе.</span><span class="sxs-lookup"><span data-stu-id="1fa49-202">It is recommended that you use the constructor for adding installer instances; however, if you need to add to the <xref:System.Configuration.Install.Installer.Installers%2A> collection in the <xref:System.ServiceProcess.ServiceInstaller.Install%2A> method, be sure to perform the same additions to the collection in the <xref:System.ServiceProcess.ServiceInstaller.Uninstall%2A> method.</span></span>  
  
 <span data-ttu-id="1fa49-203">Для всех классов, производных от <xref:System.Configuration.Install.Installer> класса, состояние <xref:System.Configuration.Install.Installer.Installers%2A> коллекции должно <xref:System.ServiceProcess.ServiceInstaller.Install%2A> быть одинаковым в методах и <xref:System.ServiceProcess.ServiceInstaller.Uninstall%2A> .</span><span class="sxs-lookup"><span data-stu-id="1fa49-203">For all classes deriving from the <xref:System.Configuration.Install.Installer> class, the state of the <xref:System.Configuration.Install.Installer.Installers%2A> collection must be the same in the <xref:System.ServiceProcess.ServiceInstaller.Install%2A> and <xref:System.ServiceProcess.ServiceInstaller.Uninstall%2A> methods.</span></span> <span data-ttu-id="1fa49-204">Однако при <xref:System.ServiceProcess.ServiceInstaller.Install%2A> добавленииэкземпляров<xref:System.ServiceProcess.ServiceInstaller.Uninstall%2A> установщика в коллекциювконструктореклассапользовательскогоустановщикаможноизбежатьобслуживанияколлекциипометодами.<xref:System.Configuration.Install.Installer.Installers%2A></span><span class="sxs-lookup"><span data-stu-id="1fa49-204">However, you can avoid the maintenance of the collection across the <xref:System.ServiceProcess.ServiceInstaller.Install%2A> and <xref:System.ServiceProcess.ServiceInstaller.Uninstall%2A> methods if you add installer instances to the <xref:System.Configuration.Install.Installer.Installers%2A> collection in your custom installer class constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1fa49-205">Средства установки не содержат <see cref="T:System.ServiceProcess.ServiceProcessInstaller" /> для исполняемого файла.</span><span class="sxs-lookup"><span data-stu-id="1fa49-205">The installation does not contain a <see cref="T:System.ServiceProcess.ServiceProcessInstaller" /> for the executable.</span></span>  
  
<span data-ttu-id="1fa49-206">- или -</span><span class="sxs-lookup"><span data-stu-id="1fa49-206">-or-</span></span> 
<span data-ttu-id="1fa49-207">Имя файла сборки — <see langword="null" /> или пустая строка.</span><span class="sxs-lookup"><span data-stu-id="1fa49-207">The file name for the assembly is <see langword="null" /> or an empty string.</span></span>  
  
<span data-ttu-id="1fa49-208">- или -</span><span class="sxs-lookup"><span data-stu-id="1fa49-208">-or-</span></span> 
<span data-ttu-id="1fa49-209">Недопустимое имя службы.</span><span class="sxs-lookup"><span data-stu-id="1fa49-209">The service name is invalid.</span></span>  
  
<span data-ttu-id="1fa49-210">- или -</span><span class="sxs-lookup"><span data-stu-id="1fa49-210">-or-</span></span> 
<span data-ttu-id="1fa49-211">Не удалось открыть диспетчер служб.</span><span class="sxs-lookup"><span data-stu-id="1fa49-211">The Service Control Manager could not be opened.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1fa49-212">Отображаемое имя службы содержит более 255 символов.</span><span class="sxs-lookup"><span data-stu-id="1fa49-212">The display name for the service is more than 255 characters in length.</span></span></exception>
        <exception cref="T:System.ComponentModel.Win32Exception"><span data-ttu-id="1fa49-213">Системе не удалось создать дескриптор для службы.</span><span class="sxs-lookup"><span data-stu-id="1fa49-213">The system could not generate a handle to the service.</span></span>  
  
 <span data-ttu-id="1fa49-214">- или -</span><span class="sxs-lookup"><span data-stu-id="1fa49-214">-or-</span></span>  
  
 <span data-ttu-id="1fa49-215">Служба с этим именем уже установлена.</span><span class="sxs-lookup"><span data-stu-id="1fa49-215">A service with that name is already installed.</span></span></exception>
        <altmember cref="T:System.ServiceProcess.ServiceProcessInstaller" />
        <altmember cref="M:System.ServiceProcess.ServiceInstaller.Rollback(System.Collections.IDictionary)" />
        <altmember cref="M:System.Configuration.Install.Installer.Commit(System.Collections.IDictionary)" />
        <altmember cref="M:System.ServiceProcess.ServiceInstaller.Uninstall(System.Collections.IDictionary)" />
        <altmember cref="T:System.Diagnostics.EventLogInstaller" />
        <altmember cref="M:System.Diagnostics.EventLogInstaller.#ctor" />
      </Docs>
    </Member>
    <Member MemberName="IsEquivalentInstaller">
      <MemberSignature Language="C#" Value="public override bool IsEquivalentInstaller (System.Configuration.Install.ComponentInstaller otherInstaller);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsEquivalentInstaller(class System.Configuration.Install.ComponentInstaller otherInstaller) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceInstaller.IsEquivalentInstaller(System.Configuration.Install.ComponentInstaller)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsEquivalentInstaller (otherInstaller As ComponentInstaller) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsEquivalentInstaller(System::Configuration::Install::ComponentInstaller ^ otherInstaller);" />
      <MemberSignature Language="F#" Value="override this.IsEquivalentInstaller : System.Configuration.Install.ComponentInstaller -&gt; bool" Usage="serviceInstaller.IsEquivalentInstaller otherInstaller" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="otherInstaller" Type="System.Configuration.Install.ComponentInstaller" />
      </Parameters>
      <Docs>
        <param name="otherInstaller"><span data-ttu-id="1fa49-216">Объект <see cref="T:System.Configuration.Install.ComponentInstaller" />, с которым сравнивается текущий установщик.</span><span class="sxs-lookup"><span data-stu-id="1fa49-216">A <see cref="T:System.Configuration.Install.ComponentInstaller" /> to which you are comparing the current installer.</span></span></param>
        <summary><span data-ttu-id="1fa49-217">Определяет, будут ли два установщика устанавливать одну и ту же службу.</span><span class="sxs-lookup"><span data-stu-id="1fa49-217">Indicates whether two installers would install the same service.</span></span></summary>
        <returns><span data-ttu-id="1fa49-218"><see langword="true" />, если вызов метода <see cref="M:System.ServiceProcess.ServiceInstaller.Install(System.Collections.IDictionary)" /> для обоих установщиков будет приводить к установке одной и той же службы; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="1fa49-218"><see langword="true" /> if calling <see cref="M:System.ServiceProcess.ServiceInstaller.Install(System.Collections.IDictionary)" /> on both of these installers would result in installing the same service; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1fa49-219"><xref:System.ServiceProcess.ServiceInstaller.IsEquivalentInstaller%2A>Указывает, например, должны ли два установщика устанавливать одну и ту же службу с одной и той же учетной записью пользователя.</span><span class="sxs-lookup"><span data-stu-id="1fa49-219"><xref:System.ServiceProcess.ServiceInstaller.IsEquivalentInstaller%2A> indicates, for example, whether two installers would install the same service under the same user account.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ServiceProcess.ServiceInstaller.CopyFromComponent(System.ComponentModel.IComponent)" />
        <altmember cref="T:System.Configuration.Install.ComponentInstaller" />
      </Docs>
    </Member>
    <Member MemberName="Rollback">
      <MemberSignature Language="C#" Value="public override void Rollback (System.Collections.IDictionary savedState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Rollback(class System.Collections.IDictionary savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceInstaller.Rollback(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Rollback (savedState As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Rollback(System::Collections::IDictionary ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.Rollback : System.Collections.IDictionary -&gt; unit" Usage="serviceInstaller.Rollback savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="savedState"><span data-ttu-id="1fa49-220">Объект <see cref="T:System.Collections.IDictionary" />, содержащий контекстные данные, связанные с процессом установки.</span><span class="sxs-lookup"><span data-stu-id="1fa49-220">An <see cref="T:System.Collections.IDictionary" /> that contains the context information associated with the installation.</span></span></param>
        <summary><span data-ttu-id="1fa49-221">Отменяет сведения о служебном приложении, записанные в реестр процедурой установки.</span><span class="sxs-lookup"><span data-stu-id="1fa49-221">Rolls back service application information written to the registry by the installation procedure.</span></span> <span data-ttu-id="1fa49-222">Этот метод предназначен для использования инструментами установки, которые автоматически обрабатывают соответствующие методы.</span><span class="sxs-lookup"><span data-stu-id="1fa49-222">This method is meant to be used by installation tools, which process the appropriate methods automatically.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1fa49-223">Обычно методы <xref:System.ServiceProcess.ServiceInstaller> в коде не вызываются; они обычно вызываются только программой установки.</span><span class="sxs-lookup"><span data-stu-id="1fa49-223">Normally, you will not call the methods on <xref:System.ServiceProcess.ServiceInstaller> within your code; they are generally called only by the install utility.</span></span> <span data-ttu-id="1fa49-224">Программа установки автоматически вызывает метод в <xref:System.ServiceProcess.ServiceInstaller.Install%2A> процессе установки.</span><span class="sxs-lookup"><span data-stu-id="1fa49-224">The install utility automatically calls the <xref:System.ServiceProcess.ServiceInstaller.Install%2A> method during the installation process.</span></span> <span data-ttu-id="1fa49-225">При необходимости он создает ошибки, вызывая метод <xref:System.ServiceProcess.ServiceInstaller.Rollback%2A> для объекта, создавшего исключение.</span><span class="sxs-lookup"><span data-stu-id="1fa49-225">It backs out failures, if necessary, by calling <xref:System.ServiceProcess.ServiceInstaller.Rollback%2A> on the object that generated the exception.</span></span>  
  
 <span data-ttu-id="1fa49-226">Программа установки приложения автоматически сохраняет сведения об уже установленных компонентах с помощью установщика <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType>проекта.</span><span class="sxs-lookup"><span data-stu-id="1fa49-226">An application's install routine maintains information automatically about the components already installed, using the project installer's <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="1fa49-227">Эти сведения о состоянии <xref:System.ServiceProcess.ServiceInstaller.Rollback%2A> , переданные в `savedState` качестве параметра, постоянно обновляются как <xref:System.ServiceProcess.ServiceProcessInstaller> экземпляр и каждый <xref:System.ServiceProcess.ServiceInstaller> экземпляр устанавливается программой.</span><span class="sxs-lookup"><span data-stu-id="1fa49-227">This state information, passed into <xref:System.ServiceProcess.ServiceInstaller.Rollback%2A> as the `savedState` parameter, is continuously updated as the <xref:System.ServiceProcess.ServiceProcessInstaller> instance and each <xref:System.ServiceProcess.ServiceInstaller> instance is installed by the utility.</span></span> <span data-ttu-id="1fa49-228">Обычно нет необходимости явно изменять сведения о состоянии в коде.</span><span class="sxs-lookup"><span data-stu-id="1fa49-228">It is usually unnecessary for your code to modify this state information explicitly.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ServiceProcess.ServiceProcessInstaller.Rollback(System.Collections.IDictionary)" />
        <altmember cref="M:System.ServiceProcess.ServiceInstaller.Install(System.Collections.IDictionary)" />
        <altmember cref="M:System.Configuration.Install.Installer.Commit(System.Collections.IDictionary)" />
        <altmember cref="M:System.ServiceProcess.ServiceInstaller.Uninstall(System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="ServiceName">
      <MemberSignature Language="C#" Value="public string ServiceName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ServiceName" />
      <MemberSignature Language="DocId" Value="P:System.ServiceProcess.ServiceInstaller.ServiceName" />
      <MemberSignature Language="VB.NET" Value="Public Property ServiceName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ServiceName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ServiceName : string with get, set" Usage="System.ServiceProcess.ServiceInstaller.ServiceName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ServiceProcess.ServiceProcessDescription("ServiceInstallerServiceName")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1fa49-229">Указывает имя, использованное системой для идентификации этой службы.</span><span class="sxs-lookup"><span data-stu-id="1fa49-229">Indicates the name used by the system to identify this service.</span></span> <span data-ttu-id="1fa49-230">Это свойство должно совпадать со свойством <see cref="P:System.ServiceProcess.ServiceBase.ServiceName" /> устанавливаемой службы.</span><span class="sxs-lookup"><span data-stu-id="1fa49-230">This property must be identical to the <see cref="P:System.ServiceProcess.ServiceBase.ServiceName" /> of the service you want to install.</span></span></summary>
        <value><span data-ttu-id="1fa49-231">Имя устанавливаемой службы.</span><span class="sxs-lookup"><span data-stu-id="1fa49-231">The name of the service to be installed.</span></span> <span data-ttu-id="1fa49-232">Это значение должно быть задано до установки службы.</span><span class="sxs-lookup"><span data-stu-id="1fa49-232">This value must be set before the install utility attempts to install the service.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1fa49-233">Крайне важно, <xref:System.ServiceProcess.ServiceInstaller.ServiceName%2A> <xref:System.ServiceProcess.ServiceBase.ServiceName%2A?displayProperty=nameWithType> чтобы компонент был идентичен классу, производному от <xref:System.ServiceProcess.ServiceBase>.</span><span class="sxs-lookup"><span data-stu-id="1fa49-233">It is crucial that the <xref:System.ServiceProcess.ServiceInstaller.ServiceName%2A> be identical to the <xref:System.ServiceProcess.ServiceBase.ServiceName%2A?displayProperty=nameWithType> of the class you derived from <xref:System.ServiceProcess.ServiceBase>.</span></span> <span data-ttu-id="1fa49-234">Как правило, значение <xref:System.ServiceProcess.ServiceBase.ServiceName%2A?displayProperty=nameWithType> свойства для службы задается в функции Main () исполняемого файла приложения службы.</span><span class="sxs-lookup"><span data-stu-id="1fa49-234">Normally, the value of the <xref:System.ServiceProcess.ServiceBase.ServiceName%2A?displayProperty=nameWithType> property for the service is set within the Main() function of the service application's executable.</span></span> <span data-ttu-id="1fa49-235">Диспетчер управления службами использует <xref:System.ServiceProcess.ServiceInstaller.ServiceName%2A?displayProperty=nameWithType> свойство для нахождение службы в этом исполняемом файле.</span><span class="sxs-lookup"><span data-stu-id="1fa49-235">The Service Control Manager uses the <xref:System.ServiceProcess.ServiceInstaller.ServiceName%2A?displayProperty=nameWithType> property to locate the service within this executable.</span></span>  
  
 <span data-ttu-id="1fa49-236">При задании <xref:System.ServiceProcess.ServiceInstaller.ServiceName%2A> установщика <xref:System.Diagnostics.EventLog.Source%2A> службы для соответствующего журнала событий задается то же значение.</span><span class="sxs-lookup"><span data-stu-id="1fa49-236">When you set the <xref:System.ServiceProcess.ServiceInstaller.ServiceName%2A> of the service installer, the <xref:System.Diagnostics.EventLog.Source%2A> of the associated event log is set to the same value.</span></span> <span data-ttu-id="1fa49-237">Это позволяет службе автоматически регистрировать команды службы (например, запуск и завершение) в журнале приложений на компьютере.</span><span class="sxs-lookup"><span data-stu-id="1fa49-237">This allows the service to automatically log service commands (such as Start and Stop) calls to the Application log on the computer.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1fa49-238">Если источник с таким же именем уже существует на компьютере, но в журнале, отличном от журнала приложения, будет создано исключение.</span><span class="sxs-lookup"><span data-stu-id="1fa49-238">If a source by the same name already exists on the computer, but in a log other than the Application log, an exception will be thrown.</span></span> <span data-ttu-id="1fa49-239">Если источник существует и связан с журналом приложений, этот источник используется для передачи вызовов команды службе, и исключение не создается.</span><span class="sxs-lookup"><span data-stu-id="1fa49-239">If the source exists and is associated with the Application log, that source is used to report command calls to the service, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="1fa49-240">Значение <xref:System.ServiceProcess.ServiceInstaller.ServiceName%2A> не может `null` быть или иметь нулевую длину.</span><span class="sxs-lookup"><span data-stu-id="1fa49-240">The <xref:System.ServiceProcess.ServiceInstaller.ServiceName%2A> cannot be `null` or have zero length.</span></span> <span data-ttu-id="1fa49-241">Его максимальный размер — 256 символов.</span><span class="sxs-lookup"><span data-stu-id="1fa49-241">Its maximum size is 256 characters.</span></span> <span data-ttu-id="1fa49-242">Он также не может содержать символы прямой или обратной косой черты, знаки\\"/" и "", или символов из набора символов ASCII со значением меньше десятичного значения 32.</span><span class="sxs-lookup"><span data-stu-id="1fa49-242">It also cannot contain forward or backward slashes, '/' or '\\', or characters from the ASCII character set with value less than decimal value 32.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1fa49-243">Недопустимое свойство <see cref="P:System.ServiceProcess.ServiceInstaller.ServiceName" />.</span><span class="sxs-lookup"><span data-stu-id="1fa49-243">The <see cref="P:System.ServiceProcess.ServiceInstaller.ServiceName" /> property is invalid.</span></span></exception>
        <altmember cref="P:System.ServiceProcess.ServiceBase.ServiceName" />
        <altmember cref="P:System.ServiceProcess.ServiceInstaller.DisplayName" />
      </Docs>
    </Member>
    <Member MemberName="ServicesDependedOn">
      <MemberSignature Language="C#" Value="public string[] ServicesDependedOn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] ServicesDependedOn" />
      <MemberSignature Language="DocId" Value="P:System.ServiceProcess.ServiceInstaller.ServicesDependedOn" />
      <MemberSignature Language="VB.NET" Value="Public Property ServicesDependedOn As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ ServicesDependedOn { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ServicesDependedOn : string[] with get, set" Usage="System.ServiceProcess.ServiceInstaller.ServicesDependedOn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ServiceProcess.ServiceProcessDescription("ServiceInstallerServicesDependedOn")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1fa49-244">Определяет службы, необходимые для запуска данной службы.</span><span class="sxs-lookup"><span data-stu-id="1fa49-244">Indicates the services that must be running for this service to run.</span></span></summary>
        <value><span data-ttu-id="1fa49-245">Массив служб, которые должны быть запущены до запуска службы, связанной с данным установщиком.</span><span class="sxs-lookup"><span data-stu-id="1fa49-245">An array of services that must be running before the service associated with this installer can run.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1fa49-246">Перед запуском службы может потребоваться выполнение других служб.</span><span class="sxs-lookup"><span data-stu-id="1fa49-246">A service can require other services to be running before it can start.</span></span> <span data-ttu-id="1fa49-247">Сведения из этого свойства записываются в раздел реестра.</span><span class="sxs-lookup"><span data-stu-id="1fa49-247">The information from this property is written to a key in the registry.</span></span> <span data-ttu-id="1fa49-248">Когда пользователь (или система в случае автоматического запуска) пытается запустить службу, диспетчер управления службами (SCM) проверяет, что каждая из служб в массиве уже запущена.</span><span class="sxs-lookup"><span data-stu-id="1fa49-248">When the user (or the system, in the case of automatic startup) tries to run the service, the Service Control Manager (SCM) verifies that each of the services in the array has already been started.</span></span>  
  
 <span data-ttu-id="1fa49-249">Если какая-либо служба в массиве не запущена, SCM пытается запустить их.</span><span class="sxs-lookup"><span data-stu-id="1fa49-249">If any service in the array is not running then, the SCM tries to start them.</span></span> <span data-ttu-id="1fa49-250">Сюда входят службы с `Manual`. <xref:System.ServiceProcess.ServiceInstaller.StartType%2A></span><span class="sxs-lookup"><span data-stu-id="1fa49-250">This includes services with `Manual`<xref:System.ServiceProcess.ServiceInstaller.StartType%2A>.</span></span>  
  
 <span data-ttu-id="1fa49-251">Если любая служба, от которой зависит эта служба, не запускается, эта служба не запустится.</span><span class="sxs-lookup"><span data-stu-id="1fa49-251">If any service upon which this service depends fails to start, this service will not start.</span></span> <span data-ttu-id="1fa49-252">Исключение не возникает, если система не запущена, так как на системном уровне отсутствует обработка исключений для обнаружения этого.</span><span class="sxs-lookup"><span data-stu-id="1fa49-252">An exception is not thrown if the system is not started because there is no exception handling at the system level to detect this.</span></span> <span data-ttu-id="1fa49-253">Решите, как справиться со сбоями при запуске службы и реализовать это в коде.</span><span class="sxs-lookup"><span data-stu-id="1fa49-253">Decide how to handle service start failures and implement this in your code.</span></span> <span data-ttu-id="1fa49-254">Как правило, при запуске службы пользователю появляется диалоговое окно, если не удается запустить службу.</span><span class="sxs-lookup"><span data-stu-id="1fa49-254">Typically, a dialog appears to the user at startup if a service fails to start.</span></span>  
  
 <span data-ttu-id="1fa49-255">Если служба не запускается, в журнал событий приложения записывается запись.</span><span class="sxs-lookup"><span data-stu-id="1fa49-255">If the service does not start, an entry is written to the Application event log.</span></span>  
  
 <span data-ttu-id="1fa49-256">Службы, от которых зависит эта служба, не должны находиться в одном исполняемом файле.</span><span class="sxs-lookup"><span data-stu-id="1fa49-256">The services upon which this service depends do not need to be in the same executable.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ServiceProcess.ServiceInstaller.StartType" />
      </Docs>
    </Member>
    <Member MemberName="StartType">
      <MemberSignature Language="C#" Value="public System.ServiceProcess.ServiceStartMode StartType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceProcess.ServiceStartMode StartType" />
      <MemberSignature Language="DocId" Value="P:System.ServiceProcess.ServiceInstaller.StartType" />
      <MemberSignature Language="VB.NET" Value="Public Property StartType As ServiceStartMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceProcess::ServiceStartMode StartType { System::ServiceProcess::ServiceStartMode get(); void set(System::ServiceProcess::ServiceStartMode value); };" />
      <MemberSignature Language="F#" Value="member this.StartType : System.ServiceProcess.ServiceStartMode with get, set" Usage="System.ServiceProcess.ServiceInstaller.StartType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ServiceProcess.ServiceProcessDescription("ServiceInstallerStartType")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceProcess.ServiceStartMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1fa49-257">Указывает, как и когда запускается эта служба.</span><span class="sxs-lookup"><span data-stu-id="1fa49-257">Indicates how and when this service is started.</span></span></summary>
        <value><span data-ttu-id="1fa49-258">Объект <see cref="T:System.ServiceProcess.ServiceStartMode" />, представляющий способ запуска службы.</span><span class="sxs-lookup"><span data-stu-id="1fa49-258">A <see cref="T:System.ServiceProcess.ServiceStartMode" /> that represents the way the service is started.</span></span> <span data-ttu-id="1fa49-259">По умолчанию используется значение <see langword="Manual" />, указывающее, что служба не будет запускаться автоматически после перезагрузки.</span><span class="sxs-lookup"><span data-stu-id="1fa49-259">The default is <see langword="Manual" />, which specifies that the service will not automatically start after reboot.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1fa49-260">Задайте для <xref:System.ServiceProcess.ServiceInstaller.StartType%2A> параметра значение, чтобы указать, что служба должна запускаться автоматически после перезагрузки или что пользователь должен вручную запустить службу.</span><span class="sxs-lookup"><span data-stu-id="1fa49-260">Set the <xref:System.ServiceProcess.ServiceInstaller.StartType%2A> to specify either that the service be started automatically after reboot or that a user must manually start the service.</span></span> <span data-ttu-id="1fa49-261">Службу также можно отключить, указав, что она не может быть запущена вручную или программно, пока она не будет включена.</span><span class="sxs-lookup"><span data-stu-id="1fa49-261">A service can also be disabled, specifying that it cannot be started, either manually or programmatically, until it is enabled.</span></span>  
  
 <span data-ttu-id="1fa49-262">После установки изменить <xref:System.ServiceProcess.ServiceInstaller> значения свойств нельзя.</span><span class="sxs-lookup"><span data-stu-id="1fa49-262">You cannot change <xref:System.ServiceProcess.ServiceInstaller> property values after installation.</span></span> <span data-ttu-id="1fa49-263">Чтобы изменить <xref:System.ServiceProcess.ServiceInstaller.StartType%2A>, необходимо удалить и переустановить службу либо вручную изменить параметр с помощью диспетчера управления службами.</span><span class="sxs-lookup"><span data-stu-id="1fa49-263">To change the <xref:System.ServiceProcess.ServiceInstaller.StartType%2A>, you either have to uninstall and reinstall your service, or manually change the setting using the Service Control Manager.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="1fa49-264">Режим запуска не является значением перечисления <see cref="T:System.ServiceProcess.ServiceStartMode" />.</span><span class="sxs-lookup"><span data-stu-id="1fa49-264">The start mode is not a value of the <see cref="T:System.ServiceProcess.ServiceStartMode" /> enumeration.</span></span></exception>
        <altmember cref="P:System.ServiceProcess.ServiceProcessInstaller.Account" />
      </Docs>
    </Member>
    <Member MemberName="Uninstall">
      <MemberSignature Language="C#" Value="public override void Uninstall (System.Collections.IDictionary savedState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Uninstall(class System.Collections.IDictionary savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceInstaller.Uninstall(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Uninstall (savedState As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Uninstall(System::Collections::IDictionary ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.Uninstall : System.Collections.IDictionary -&gt; unit" Usage="serviceInstaller.Uninstall savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="savedState"><span data-ttu-id="1fa49-265">Объект <see cref="T:System.Collections.IDictionary" />, содержащий контекстные данные, связанные с процессом установки.</span><span class="sxs-lookup"><span data-stu-id="1fa49-265">An <see cref="T:System.Collections.IDictionary" /> that contains the context information associated with the installation.</span></span></param>
        <summary><span data-ttu-id="1fa49-266">Удаляет службу, удаляя сведения о ней из реестра.</span><span class="sxs-lookup"><span data-stu-id="1fa49-266">Uninstalls the service by removing information about it from the registry.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1fa49-267">Сначала удалите попытки службы, прежде чем удалять ее.</span><span class="sxs-lookup"><span data-stu-id="1fa49-267">Uninstall first attempts to stop the service before uninstalling it.</span></span> <span data-ttu-id="1fa49-268">Если служба не может быть остановлена, исключение не перехватывается и метод продолжит работу с удалением службы.</span><span class="sxs-lookup"><span data-stu-id="1fa49-268">If the service cannot be stopped, no exception is caught, and the method continues with the removal of the service.</span></span>  
  
 <span data-ttu-id="1fa49-269">Обычно методы <xref:System.ServiceProcess.ServiceInstaller> в коде не вызываются; они обычно вызываются только программой установки.</span><span class="sxs-lookup"><span data-stu-id="1fa49-269">Normally, you will not call the methods on <xref:System.ServiceProcess.ServiceInstaller> within your code; they are generally called only by the install utility.</span></span> <span data-ttu-id="1fa49-270">InstallUtil используется для удаления служб, а также для их установки; При удалении принимается параметр в вызове командной строки.</span><span class="sxs-lookup"><span data-stu-id="1fa49-270">InstallUtil is used to uninstall services as well as install them; uninstalling takes a switch in the command line call.</span></span>  
  
 <span data-ttu-id="1fa49-271">Программа удаления приложения автоматически сохраняет сведения об удаляемых компонентах с помощью установщика <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType>проекта.</span><span class="sxs-lookup"><span data-stu-id="1fa49-271">An application's uninstall routine maintains information automatically about the components being uninstalled, using the project installer's <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="1fa49-272">Эти сведения о состоянии <xref:System.ServiceProcess.ServiceInstaller.Uninstall%2A> , переданные в `savedState` качестве параметра, постоянно обновляются как <xref:System.ServiceProcess.ServiceProcessInstaller> экземпляр и каждый <xref:System.ServiceProcess.ServiceInstaller> экземпляр устанавливается программой.</span><span class="sxs-lookup"><span data-stu-id="1fa49-272">This state information, passed into <xref:System.ServiceProcess.ServiceInstaller.Uninstall%2A> as the `savedState` parameter, is continuously updated as the <xref:System.ServiceProcess.ServiceProcessInstaller> instance and each <xref:System.ServiceProcess.ServiceInstaller> instance is installed by the utility.</span></span> <span data-ttu-id="1fa49-273">Обычно нет необходимости явно изменять сведения о состоянии в коде.</span><span class="sxs-lookup"><span data-stu-id="1fa49-273">It is usually unnecessary for your code to modify this state information explicitly.</span></span>  
  
 <span data-ttu-id="1fa49-274">Для всех классов, производных от <xref:System.Configuration.Install.Installer> класса, состояние <xref:System.Configuration.Install.Installer.Installers%2A> коллекции должно <xref:System.ServiceProcess.ServiceInstaller.Install%2A> быть одинаковым в методах и <xref:System.ServiceProcess.ServiceInstaller.Uninstall%2A> .</span><span class="sxs-lookup"><span data-stu-id="1fa49-274">For all classes deriving from the <xref:System.Configuration.Install.Installer> class, the state of the <xref:System.Configuration.Install.Installer.Installers%2A> collection must be the same in the <xref:System.ServiceProcess.ServiceInstaller.Install%2A> and <xref:System.ServiceProcess.ServiceInstaller.Uninstall%2A> methods.</span></span> <span data-ttu-id="1fa49-275">Однако при <xref:System.ServiceProcess.ServiceInstaller.Install%2A> добавленииэкземпляров<xref:System.ServiceProcess.ServiceInstaller.Uninstall%2A> установщика в коллекциювконструктореклассапользовательскогоустановщикаможноизбежатьобслуживанияколлекциипометодами.<xref:System.Configuration.Install.Installer.Installers%2A></span><span class="sxs-lookup"><span data-stu-id="1fa49-275">However, you can avoid the maintenance of the collection across the <xref:System.ServiceProcess.ServiceInstaller.Install%2A> and <xref:System.ServiceProcess.ServiceInstaller.Uninstall%2A> methods if you add installer instances to the <xref:System.Configuration.Install.Installer.Installers%2A> collection in your custom installer class constructor.</span></span>  
  
 <span data-ttu-id="1fa49-276">Отсутствует механизм отката для удаления, поэтому, если одна из служб не может быть удалена, это не повлияет на другие службы (обычно в том же проекте установки), который удаляется.</span><span class="sxs-lookup"><span data-stu-id="1fa49-276">There is no rollback mechanism for uninstalling, so if one service fails to uninstall, this does not affect the other services (usually within the same installation project) being uninstalled.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.Win32Exception"><span data-ttu-id="1fa49-277">Не удалось открыть диспетчер служб.</span><span class="sxs-lookup"><span data-stu-id="1fa49-277">The Service Control Manager could not be opened.</span></span>  
  
 <span data-ttu-id="1fa49-278">-или-</span><span class="sxs-lookup"><span data-stu-id="1fa49-278">-or-</span></span>  
  
 <span data-ttu-id="1fa49-279">Системе не удалось получить дескриптор для службы.</span><span class="sxs-lookup"><span data-stu-id="1fa49-279">The system could not get a handle to the service.</span></span></exception>
        <altmember cref="M:System.ServiceProcess.ServiceInstaller.Install(System.Collections.IDictionary)" />
      </Docs>
    </Member>
  </Members>
</Type>
