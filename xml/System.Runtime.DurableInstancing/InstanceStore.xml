<Type Name="InstanceStore" FullName="System.Runtime.DurableInstancing.InstanceStore">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1d418b9eef9cddaced41cb2e90f46dff06435b26" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69272019" /></Metadata><TypeSignature Language="C#" Value="public abstract class InstanceStore" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit InstanceStore extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.DurableInstancing.InstanceStore" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class InstanceStore" />
  <TypeSignature Language="C++ CLI" Value="public ref class InstanceStore abstract" />
  <TypeSignature Language="F#" Value="type InstanceStore = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Представляет хранилище экземпляров.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Поставщик сохраняемости предоставляет доступ к хранилищу экземпляров через конкретный экземпляр класса <xref:System.Runtime.DurableInstancing.InstanceStore>.  
  
 Поставщики сохраняемости могут вызывать класс InstanceHandle.Free для дескрипторов, переданных TryCommand, даже после завершения выполнения команды. Однако поставщики сохраняемости не должны содержать жесткие ссылки на объекты InstanceHandle или InstanceOwner, поскольку это может помешать сборке мусора в InstanceStore.  
  
> [!WARNING]
>  Определения рабочих процессов для сохраненных рабочих процессов не могут быть изменены. Если определение рабочего процесса изменяется после его сохранения, среда выполнения рабочего процесса будет завершаться сбоем при повторной загрузке рабочего процесса.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected InstanceStore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; InstanceStore();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует экземпляр класса <see cref="T:System.Runtime.DurableInstancing.InstanceStore" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginExecute">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginExecute (System.Runtime.DurableInstancing.InstanceHandle handle, System.Runtime.DurableInstancing.InstancePersistenceCommand command, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginExecute(class System.Runtime.DurableInstancing.InstanceHandle handle, class System.Runtime.DurableInstancing.InstancePersistenceCommand command, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.BeginExecute(System.Runtime.DurableInstancing.InstanceHandle,System.Runtime.DurableInstancing.InstancePersistenceCommand,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginExecute (handle As InstanceHandle, command As InstancePersistenceCommand, timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginExecute(System::Runtime::DurableInstancing::InstanceHandle ^ handle, System::Runtime::DurableInstancing::InstancePersistenceCommand ^ command, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginExecute : System.Runtime.DurableInstancing.InstanceHandle * System.Runtime.DurableInstancing.InstancePersistenceCommand * TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="instanceStore.BeginExecute (handle, command, timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handle" Type="System.Runtime.DurableInstancing.InstanceHandle" />
        <Parameter Name="command" Type="System.Runtime.DurableInstancing.InstancePersistenceCommand" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="handle">Дескриптор экземпляра.</param>
        <param name="command">Команда для выполнения.</param>
        <param name="timeout">Время ожидания выполнения команды.</param>
        <param name="callback">Делегат асинхронного обратного вызова, принимающий уведомление о завершении асинхронной операции.</param>
        <param name="state">Сведения о состоянии.</param>
        <summary>Асинхронно выполняет команды сохраняемости, например, <see cref="T:System.Activities.DurableInstancing.LoadWorkflowCommand" /> и <see cref="T:System.Activities.DurableInstancing.SaveWorkflowCommand" />.</summary>
        <returns>Состояние асинхронной операции.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Узел вызывает метод <xref:System.Runtime.DurableInstancing.InstanceStore.BeginExecute%2A>, чтобы асинхронно выполнить команду сохраняемости по отношению к дескриптору экземпляра. Узел получает дескриптор экземпляра путем вызова метода <xref:System.Runtime.DurableInstancing.InstanceStore.CreateInstanceHandle%2A>. Дескриптор экземпляра может быть привязан к сущностям, которые представляют контекст и предмет команды, такой как экземпляр, владельца экземпляра или блокировку экземпляра.  Только одна команда может применяться к дескриптору экземпляра в данный момент времени.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginTryCommand">
      <MemberSignature Language="C#" Value="protected internal virtual IAsyncResult BeginTryCommand (System.Runtime.DurableInstancing.InstancePersistenceContext context, System.Runtime.DurableInstancing.InstancePersistenceCommand command, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.IAsyncResult BeginTryCommand(class System.Runtime.DurableInstancing.InstancePersistenceContext context, class System.Runtime.DurableInstancing.InstancePersistenceCommand command, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.BeginTryCommand(System.Runtime.DurableInstancing.InstancePersistenceContext,System.Runtime.DurableInstancing.InstancePersistenceCommand,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function BeginTryCommand (context As InstancePersistenceContext, command As InstancePersistenceCommand, timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual IAsyncResult ^ BeginTryCommand(System::Runtime::DurableInstancing::InstancePersistenceContext ^ context, System::Runtime::DurableInstancing::InstancePersistenceCommand ^ command, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginTryCommand : System.Runtime.DurableInstancing.InstancePersistenceContext * System.Runtime.DurableInstancing.InstancePersistenceCommand * TimeSpan * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginTryCommand : System.Runtime.DurableInstancing.InstancePersistenceContext * System.Runtime.DurableInstancing.InstancePersistenceCommand * TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="instanceStore.BeginTryCommand (context, command, timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Runtime.DurableInstancing.InstancePersistenceContext" />
        <Parameter Name="command" Type="System.Runtime.DurableInstancing.InstancePersistenceCommand" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">Контекст экземпляра.</param>
        <param name="command">Команда сохраняемости для выполнения.</param>
        <param name="timeout">Время ожидания выполнения команды.</param>
        <param name="callback">Делегат асинхронного обратного вызова, принимающий уведомление о завершении асинхронной операции.</param>
        <param name="state">Сведения о состоянии.</param>
        <summary>Поставщик сохраняемости применяет этот метод, в результате чего определяется, может ли быть выполнена конкретная команда сохраняемости. Если команда выполнима, происходит асинхронное выполнение.</summary>
        <returns>Состояние асинхронной операции.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если команда выполнима, то поставщик сохраняемости вызывает необходимые методы, чтобы предоставить результаты команды.  
  
> [!WARNING]
>  Несмотря на то `abstract`, что этот метод `virtual` объявлен как, а не, реализация отсутствует. Этот метод необходимо переопределить, чтобы обеспечить функциональные возможности.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginWaitForEvents">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginWaitForEvents (System.Runtime.DurableInstancing.InstanceHandle handle, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginWaitForEvents(class System.Runtime.DurableInstancing.InstanceHandle handle, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.BeginWaitForEvents(System.Runtime.DurableInstancing.InstanceHandle,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginWaitForEvents (handle As InstanceHandle, timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginWaitForEvents(System::Runtime::DurableInstancing::InstanceHandle ^ handle, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginWaitForEvents : System.Runtime.DurableInstancing.InstanceHandle * TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="instanceStore.BeginWaitForEvents (handle, timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handle" Type="System.Runtime.DurableInstancing.InstanceHandle" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="handle">Дескриптор экземпляра.</param>
        <param name="timeout">Период, после которого истекает время ожидания вызова.</param>
        <param name="callback">Метод, вызываемый после завершения асинхронной операции.</param>
        <param name="state">Задаваемый приложением объект, который содержит сведения о состоянии, связанные с асинхронной операцией.</param>
        <summary>Начинается как асинхронная операция прослушивания любых событий, вызванных хранилищем экземпляров для конкретного дескриптора экземпляра.</summary>
        <returns>Возвращает объект <see cref="T:System.IAsyncResult" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateInstanceHandle">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Создает дескриптор экземпляра. Если задано значение DefaultInstanceOwner, оно автоматически привязывается к новому владельцу экземпляра дескриптора.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateInstanceHandle">
      <MemberSignature Language="C#" Value="public System.Runtime.DurableInstancing.InstanceHandle CreateInstanceHandle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Runtime.DurableInstancing.InstanceHandle CreateInstanceHandle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.CreateInstanceHandle" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateInstanceHandle () As InstanceHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Runtime::DurableInstancing::InstanceHandle ^ CreateInstanceHandle();" />
      <MemberSignature Language="F#" Value="member this.CreateInstanceHandle : unit -&gt; System.Runtime.DurableInstancing.InstanceHandle" Usage="instanceStore.CreateInstanceHandle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.DurableInstancing.InstanceHandle</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Создает дескриптор экземпляра.</summary>
        <returns>Дескриптор экземпляра.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceHandle">
      <MemberSignature Language="C#" Value="public System.Runtime.DurableInstancing.InstanceHandle CreateInstanceHandle (Guid instanceId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Runtime.DurableInstancing.InstanceHandle CreateInstanceHandle(valuetype System.Guid instanceId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.CreateInstanceHandle(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateInstanceHandle (instanceId As Guid) As InstanceHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Runtime::DurableInstancing::InstanceHandle ^ CreateInstanceHandle(Guid instanceId);" />
      <MemberSignature Language="F#" Value="member this.CreateInstanceHandle : Guid -&gt; System.Runtime.DurableInstancing.InstanceHandle" Usage="instanceStore.CreateInstanceHandle instanceId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.DurableInstancing.InstanceHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="instanceId">Идентификатор экземпляра. Не должно иметь значение Guid.Empty.</param>
        <summary>Создает дескриптор экземпляра.  Если задано значение DefaultInstanceOwner, оно автоматически привязывается к новому владельцу экземпляра дескриптора.  Идентификатор экземпляра, переданный как параметр, автоматически привязывается к новому экземпляру дескриптора.</summary>
        <returns>Дескриптор экземпляра.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceHandle">
      <MemberSignature Language="C#" Value="public System.Runtime.DurableInstancing.InstanceHandle CreateInstanceHandle (System.Runtime.DurableInstancing.InstanceOwner owner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Runtime.DurableInstancing.InstanceHandle CreateInstanceHandle(class System.Runtime.DurableInstancing.InstanceOwner owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.CreateInstanceHandle(System.Runtime.DurableInstancing.InstanceOwner)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateInstanceHandle (owner As InstanceOwner) As InstanceHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Runtime::DurableInstancing::InstanceHandle ^ CreateInstanceHandle(System::Runtime::DurableInstancing::InstanceOwner ^ owner);" />
      <MemberSignature Language="F#" Value="member this.CreateInstanceHandle : System.Runtime.DurableInstancing.InstanceOwner -&gt; System.Runtime.DurableInstancing.InstanceHandle" Usage="instanceStore.CreateInstanceHandle owner" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.DurableInstancing.InstanceHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="owner" Type="System.Runtime.DurableInstancing.InstanceOwner" />
      </Parameters>
      <Docs>
        <param name="owner">Владелец экземпляра.</param>
        <summary>Создает дескриптор экземпляра. Если владелец экземпляра, переданный как параметр, отличается от NULL, значение автоматически привязывается к новому владельцу экземпляра дескриптора.  (В противном случае привязка владельца экземпляра отсутствует, даже если задано значение DefaultInstanceOwner.)</summary>
        <returns>Дескриптор экземпляра. Значение null указывает на то, что новый дескриптор не должен автоматически привязываться к владельцу экземпляра.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceHandle">
      <MemberSignature Language="C#" Value="public System.Runtime.DurableInstancing.InstanceHandle CreateInstanceHandle (System.Runtime.DurableInstancing.InstanceOwner owner, Guid instanceId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Runtime.DurableInstancing.InstanceHandle CreateInstanceHandle(class System.Runtime.DurableInstancing.InstanceOwner owner, valuetype System.Guid instanceId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.CreateInstanceHandle(System.Runtime.DurableInstancing.InstanceOwner,System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateInstanceHandle (owner As InstanceOwner, instanceId As Guid) As InstanceHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Runtime::DurableInstancing::InstanceHandle ^ CreateInstanceHandle(System::Runtime::DurableInstancing::InstanceOwner ^ owner, Guid instanceId);" />
      <MemberSignature Language="F#" Value="member this.CreateInstanceHandle : System.Runtime.DurableInstancing.InstanceOwner * Guid -&gt; System.Runtime.DurableInstancing.InstanceHandle" Usage="instanceStore.CreateInstanceHandle (owner, instanceId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.DurableInstancing.InstanceHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="owner" Type="System.Runtime.DurableInstancing.InstanceOwner" />
        <Parameter Name="instanceId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="owner">Объект владельца экземпляра, представляющий владельца экземпляра. Передает null в качестве значения для этого параметра, чтобы показать, что новый дескриптор не должен привязываться к владельцу экземпляра.</param>
        <param name="instanceId">Идентификатор экземпляра. Не должно иметь значение Guid.Empty.</param>
        <summary>Создает дескриптор экземпляра. Если владелец экземпляра, переданный как параметр, отличается от NULL, значение автоматически привязывается к новому владельцу экземпляра дескриптора.  (В противном случае привязка владельца экземпляра отсутствует, даже если задано значение DefaultInstanceOwner.) Идентификатор экземпляра, переданный как параметр, автоматически привязывается к новому экземпляру дескриптора.</summary>
        <returns>Дескриптор экземпляра.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultInstanceOwner">
      <MemberSignature Language="C#" Value="public System.Runtime.DurableInstancing.InstanceOwner DefaultInstanceOwner { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Runtime.DurableInstancing.InstanceOwner DefaultInstanceOwner" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.DurableInstancing.InstanceStore.DefaultInstanceOwner" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultInstanceOwner As InstanceOwner" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::DurableInstancing::InstanceOwner ^ DefaultInstanceOwner { System::Runtime::DurableInstancing::InstanceOwner ^ get(); void set(System::Runtime::DurableInstancing::InstanceOwner ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultInstanceOwner : System.Runtime.DurableInstancing.InstanceOwner with get, set" Usage="System.Runtime.DurableInstancing.InstanceStore.DefaultInstanceOwner" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.DurableInstancing.InstanceOwner</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает владельца экземпляра по умолчанию.</summary>
        <value>Владелец экземпляра по умолчанию.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Некоторые узлы определяют владельца экземпляра путем чтения этого свойства. Это свойство может использоваться объектом WorkflowApplication. Объект WorkflowServiceHost не использует это свойство.  
  
 Если больше не требуется, свойство задано DefaultInstanceOwner должно иметь значение null. Объекты InstanceStore могут не удаляться при сборке мусора, если значение DefaultInstanceOwner отлично от null.  
  
> [!WARNING]
>  Несмотря на то `abstract`, что этот метод `virtual` объявлен как, а не, реализация отсутствует. Этот метод необходимо переопределить, чтобы обеспечить функциональные возможности.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndExecute">
      <MemberSignature Language="C#" Value="public System.Runtime.DurableInstancing.InstanceView EndExecute (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Runtime.DurableInstancing.InstanceView EndExecute(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.EndExecute(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndExecute (result As IAsyncResult) As InstanceView" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Runtime::DurableInstancing::InstanceView ^ EndExecute(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="member this.EndExecute : IAsyncResult -&gt; System.Runtime.DurableInstancing.InstanceView" Usage="instanceStore.EndExecute result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.DurableInstancing.InstanceView</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">Результат операции.</param>
        <summary>Завершает асинхронную операцию.</summary>
        <returns>Объект InstanceView представляет известное состояние экземпляра после успешного завершения команды.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если метод BeginExecute вызывается при транзакции, это состояние может включать нефиксированные данные. После успешной фиксации транзакции, данные объекта InstanceView можно считать фиксированными.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndTryCommand">
      <MemberSignature Language="C#" Value="protected internal virtual bool EndTryCommand (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance bool EndTryCommand(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.EndTryCommand(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function EndTryCommand (result As IAsyncResult) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual bool EndTryCommand(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndTryCommand : IAsyncResult -&gt; bool&#xA;override this.EndTryCommand : IAsyncResult -&gt; bool" Usage="instanceStore.EndTryCommand result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">Результат операции.</param>
        <summary>Завершает асинхронную операцию.</summary>
        <returns>Реализация поставщика сохраняемости должна возвратить значение FALSE в том случае, если она не поддерживает команду, передаваемую методу BeginTryCommand. В противном случае она должна возвращать значение TRUE или выдавать исключение.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!WARNING]
>  Несмотря на то `abstract`, что этот метод `virtual` объявлен как, а не, реализация отсутствует. Этот метод необходимо переопределить, чтобы обеспечить функциональные возможности.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndWaitForEvents">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.List&lt;System.Runtime.DurableInstancing.InstancePersistenceEvent&gt; EndWaitForEvents (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.List`1&lt;class System.Runtime.DurableInstancing.InstancePersistenceEvent&gt; EndWaitForEvents(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.EndWaitForEvents(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndWaitForEvents (result As IAsyncResult) As List(Of InstancePersistenceEvent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::List&lt;System::Runtime::DurableInstancing::InstancePersistenceEvent ^&gt; ^ EndWaitForEvents(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="member this.EndWaitForEvents : IAsyncResult -&gt; System.Collections.Generic.List&lt;System.Runtime.DurableInstancing.InstancePersistenceEvent&gt;" Usage="instanceStore.EndWaitForEvents result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;System.Runtime.DurableInstancing.InstancePersistenceEvent&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">Объект IAsyncResult, переданный клиенту при помощи метода Begin.</param>
        <summary>Завершает асинхронную операцию, запущенную методом <see cref="M:System.Runtime.DurableInstancing.InstanceStore.BeginWaitForEvents(System.Runtime.DurableInstancing.InstanceHandle,System.TimeSpan,System.AsyncCallback,System.Object)" />.</summary>
        <returns>Возвращает список объектов <see cref="T:System.Runtime.DurableInstancing.InstancePersistenceEvent" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="public System.Runtime.DurableInstancing.InstanceView Execute (System.Runtime.DurableInstancing.InstanceHandle handle, System.Runtime.DurableInstancing.InstancePersistenceCommand command, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Runtime.DurableInstancing.InstanceView Execute(class System.Runtime.DurableInstancing.InstanceHandle handle, class System.Runtime.DurableInstancing.InstancePersistenceCommand command, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.Execute(System.Runtime.DurableInstancing.InstanceHandle,System.Runtime.DurableInstancing.InstancePersistenceCommand,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function Execute (handle As InstanceHandle, command As InstancePersistenceCommand, timeout As TimeSpan) As InstanceView" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Runtime::DurableInstancing::InstanceView ^ Execute(System::Runtime::DurableInstancing::InstanceHandle ^ handle, System::Runtime::DurableInstancing::InstancePersistenceCommand ^ command, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="member this.Execute : System.Runtime.DurableInstancing.InstanceHandle * System.Runtime.DurableInstancing.InstancePersistenceCommand * TimeSpan -&gt; System.Runtime.DurableInstancing.InstanceView" Usage="instanceStore.Execute (handle, command, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.DurableInstancing.InstanceView</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handle" Type="System.Runtime.DurableInstancing.InstanceHandle" />
        <Parameter Name="command" Type="System.Runtime.DurableInstancing.InstancePersistenceCommand" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="handle">Дескриптор экземпляра.</param>
        <param name="command">Команда для выполнения.</param>
        <param name="timeout">Значение времени ожидания для операции.</param>
        <summary>Синхронно выполняет команду сохраняемости. Примеры команд сохраняемости: <see cref="T:System.Activities.DurableInstancing.LoadWorkflowCommand" /> и <see cref="T:System.Activities.DurableInstancing.SaveWorkflowCommand" />.</summary>
        <returns>Объект InstanceView представляет известное состояние экземпляра после успешного завершения команды.  Если метод Execute вызывается при транзакции, это состояние может включать нефиксированные данные. После успешной фиксации транзакции, данные объекта InstanceView можно считать фиксированными.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Узел вызывает метод <xref:System.Runtime.DurableInstancing.InstanceStore.Execute%2A>, чтобы асинхронно выполнить команду сохраняемости по отношению к дескриптору экземпляра, полученного за счет вызова метода <xref:System.Runtime.DurableInstancing.InstanceStore.CreateInstanceHandle%2A>. Дескриптор экземпляра может быть привязан к сущностям, которые представляют контекст и предмет команды, такой как экземпляр, владельца экземпляра или блокировку экземпляра.  Только одна команда может применяться к дескриптору экземпляра в данный момент времени.  
  
> [!WARNING]
>  Если этот метод выполняется с <xref:System.Activities.DurableInstancing.CreateWorkflowOwnerCommand>помощью, он <xref:System.Runtime.DurableInstancing.InstanceOwner> создает и привязывает его к экземпляру. Это означает, что никакой другой процесс не сможет получить доступ к этому рабочему процессу. Если процесс завершается, Рабочий процесс не может быть восстановлен или выполнен. Если такой рабочий процесс выполняется снова, <xref:System.Runtime.DurableInstancing.InstanceLockedException> будет выдано исключение.  
>   
>  Если <xref:System.Activities.DurableInstancing.CreateWorkflowOwnerCommand> не используется, хранилище экземпляров создаст временную <xref:System.Runtime.DurableInstancing.InstanceOwner> копию, которая будет удалена в конце процесса. Однако если процесс завершается до окончательной точки сохранения рабочего процесса, это исключение будет создано, если не истечет период времени, указанный в параметре **хостлоккреневалпериод** .  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEvents">
      <MemberSignature Language="C#" Value="protected System.Runtime.DurableInstancing.InstancePersistenceEvent[] GetEvents (System.Runtime.DurableInstancing.InstanceOwner owner);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Runtime.DurableInstancing.InstancePersistenceEvent[] GetEvents(class System.Runtime.DurableInstancing.InstanceOwner owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.GetEvents(System.Runtime.DurableInstancing.InstanceOwner)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetEvents (owner As InstanceOwner) As InstancePersistenceEvent()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; cli::array &lt;System::Runtime::DurableInstancing::InstancePersistenceEvent ^&gt; ^ GetEvents(System::Runtime::DurableInstancing::InstanceOwner ^ owner);" />
      <MemberSignature Language="F#" Value="member this.GetEvents : System.Runtime.DurableInstancing.InstanceOwner -&gt; System.Runtime.DurableInstancing.InstancePersistenceEvent[]" Usage="instanceStore.GetEvents owner" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.DurableInstancing.InstancePersistenceEvent[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="owner" Type="System.Runtime.DurableInstancing.InstanceOwner" />
      </Parameters>
      <Docs>
        <param name="owner">Объект <see cref="T:System.Runtime.DurableInstancing.InstanceOwner" />, представляющий владельца экземпляра.</param>
        <summary>Извлекает все отслеживаемые события, привязанные к объекту <see cref="T:System.Runtime.DurableInstancing.InstanceOwner" />.</summary>
        <returns>Возвращает массив объектов <see cref="T:System.Runtime.DurableInstancing.InstancePersistenceEvent" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInstanceOwners">
      <MemberSignature Language="C#" Value="protected System.Runtime.DurableInstancing.InstanceOwner[] GetInstanceOwners ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Runtime.DurableInstancing.InstanceOwner[] GetInstanceOwners() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.GetInstanceOwners" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetInstanceOwners () As InstanceOwner()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; cli::array &lt;System::Runtime::DurableInstancing::InstanceOwner ^&gt; ^ GetInstanceOwners();" />
      <MemberSignature Language="F#" Value="member this.GetInstanceOwners : unit -&gt; System.Runtime.DurableInstancing.InstanceOwner[]" Usage="instanceStore.GetInstanceOwners " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.DurableInstancing.InstanceOwner[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Извлекает каждый объект InstanceOwner, привязанный к действительному дескриптору экземпляра или не удаленный при сборке мусора.</summary>
        <returns>Владелец экземпляра.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Возвращает массив объектов InstanceOwner.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnFreeInstanceHandle">
      <MemberSignature Language="C#" Value="protected virtual void OnFreeInstanceHandle (System.Runtime.DurableInstancing.InstanceHandle instanceHandle, object userContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnFreeInstanceHandle(class System.Runtime.DurableInstancing.InstanceHandle instanceHandle, object userContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.OnFreeInstanceHandle(System.Runtime.DurableInstancing.InstanceHandle,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnFreeInstanceHandle(System::Runtime::DurableInstancing::InstanceHandle ^ instanceHandle, System::Object ^ userContext);" />
      <MemberSignature Language="F#" Value="abstract member OnFreeInstanceHandle : System.Runtime.DurableInstancing.InstanceHandle * obj -&gt; unit&#xA;override this.OnFreeInstanceHandle : System.Runtime.DurableInstancing.InstanceHandle * obj -&gt; unit" Usage="instanceStore.OnFreeInstanceHandle (instanceHandle, userContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceHandle" Type="System.Runtime.DurableInstancing.InstanceHandle" />
        <Parameter Name="userContext" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instanceHandle">Дескриптор экземпляра, который был освобожден.</param>
        <param name="userContext">Контекстная информация о пользователе из поставщика сохраняемости, возвращенная от OnNewInstanceHandle, или значение NULL, если не произошло переопределение OnNewInstanceHandle.</param>
        <summary>Вызывается, когда дескриптор экземпляра освобождается.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnNewInstanceHandle">
      <MemberSignature Language="C#" Value="protected virtual object OnNewInstanceHandle (System.Runtime.DurableInstancing.InstanceHandle instanceHandle);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object OnNewInstanceHandle(class System.Runtime.DurableInstancing.InstanceHandle instanceHandle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.OnNewInstanceHandle(System.Runtime.DurableInstancing.InstanceHandle)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Object ^ OnNewInstanceHandle(System::Runtime::DurableInstancing::InstanceHandle ^ instanceHandle);" />
      <MemberSignature Language="F#" Value="abstract member OnNewInstanceHandle : System.Runtime.DurableInstancing.InstanceHandle -&gt; obj&#xA;override this.OnNewInstanceHandle : System.Runtime.DurableInstancing.InstanceHandle -&gt; obj" Usage="instanceStore.OnNewInstanceHandle instanceHandle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceHandle" Type="System.Runtime.DurableInstancing.InstanceHandle" />
      </Parameters>
      <Docs>
        <param name="instanceHandle">Дескриптор экземпляра.</param>
        <summary>Вызывается при создании нового дескриптора экземпляра.</summary>
        <returns>Объект.  Этот объект контекста пользователя будет доступен поставщику сохраняемости при выполнении команд с использованием дескриптора, и при освобождении дескриптора.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetEvent">
      <MemberSignature Language="C#" Value="protected void ResetEvent (System.Runtime.DurableInstancing.InstancePersistenceEvent persistenceEvent, System.Runtime.DurableInstancing.InstanceOwner owner);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void ResetEvent(class System.Runtime.DurableInstancing.InstancePersistenceEvent persistenceEvent, class System.Runtime.DurableInstancing.InstanceOwner owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.ResetEvent(System.Runtime.DurableInstancing.InstancePersistenceEvent,System.Runtime.DurableInstancing.InstanceOwner)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub ResetEvent (persistenceEvent As InstancePersistenceEvent, owner As InstanceOwner)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void ResetEvent(System::Runtime::DurableInstancing::InstancePersistenceEvent ^ persistenceEvent, System::Runtime::DurableInstancing::InstanceOwner ^ owner);" />
      <MemberSignature Language="F#" Value="member this.ResetEvent : System.Runtime.DurableInstancing.InstancePersistenceEvent * System.Runtime.DurableInstancing.InstanceOwner -&gt; unit" Usage="instanceStore.ResetEvent (persistenceEvent, owner)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="persistenceEvent" Type="System.Runtime.DurableInstancing.InstancePersistenceEvent" />
        <Parameter Name="owner" Type="System.Runtime.DurableInstancing.InstanceOwner" />
      </Parameters>
      <Docs>
        <param name="persistenceEvent">Событие сохраняемости, которое было указано ранее, и которое подлежит сбросу.</param>
        <param name="owner">Владелец экземпляра, связанный с событием сохраняемости.</param>
        <summary>Сброс отслеживаемого события и удаление события из списка указанных событий, который поддерживается владельцем экземпляра.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SignalEvent">
      <MemberSignature Language="C#" Value="protected void SignalEvent (System.Runtime.DurableInstancing.InstancePersistenceEvent persistenceEvent, System.Runtime.DurableInstancing.InstanceOwner owner);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SignalEvent(class System.Runtime.DurableInstancing.InstancePersistenceEvent persistenceEvent, class System.Runtime.DurableInstancing.InstanceOwner owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.SignalEvent(System.Runtime.DurableInstancing.InstancePersistenceEvent,System.Runtime.DurableInstancing.InstanceOwner)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SignalEvent (persistenceEvent As InstancePersistenceEvent, owner As InstanceOwner)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SignalEvent(System::Runtime::DurableInstancing::InstancePersistenceEvent ^ persistenceEvent, System::Runtime::DurableInstancing::InstanceOwner ^ owner);" />
      <MemberSignature Language="F#" Value="member this.SignalEvent : System.Runtime.DurableInstancing.InstancePersistenceEvent * System.Runtime.DurableInstancing.InstanceOwner -&gt; unit" Usage="instanceStore.SignalEvent (persistenceEvent, owner)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="persistenceEvent" Type="System.Runtime.DurableInstancing.InstancePersistenceEvent" />
        <Parameter Name="owner" Type="System.Runtime.DurableInstancing.InstanceOwner" />
      </Parameters>
      <Docs>
        <param name="persistenceEvent">Событие сохраняемости, подлежащее отслеживанию.</param>
        <param name="owner">Владелец экземпляра.</param>
        <summary>Экземпляр хранилища вызывает этот метод для указания события. Приложение рабочего процесса, которое подписывается на данное событие сохраняемости, получает событие и выполняет соответствующее действие.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryCommand">
      <MemberSignature Language="C#" Value="protected internal virtual bool TryCommand (System.Runtime.DurableInstancing.InstancePersistenceContext context, System.Runtime.DurableInstancing.InstancePersistenceCommand command, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance bool TryCommand(class System.Runtime.DurableInstancing.InstancePersistenceContext context, class System.Runtime.DurableInstancing.InstancePersistenceCommand command, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.TryCommand(System.Runtime.DurableInstancing.InstancePersistenceContext,System.Runtime.DurableInstancing.InstancePersistenceCommand,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function TryCommand (context As InstancePersistenceContext, command As InstancePersistenceCommand, timeout As TimeSpan) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual bool TryCommand(System::Runtime::DurableInstancing::InstancePersistenceContext ^ context, System::Runtime::DurableInstancing::InstancePersistenceCommand ^ command, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="abstract member TryCommand : System.Runtime.DurableInstancing.InstancePersistenceContext * System.Runtime.DurableInstancing.InstancePersistenceCommand * TimeSpan -&gt; bool&#xA;override this.TryCommand : System.Runtime.DurableInstancing.InstancePersistenceContext * System.Runtime.DurableInstancing.InstancePersistenceCommand * TimeSpan -&gt; bool" Usage="instanceStore.TryCommand (context, command, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Runtime.DurableInstancing.InstancePersistenceContext" />
        <Parameter Name="command" Type="System.Runtime.DurableInstancing.InstancePersistenceCommand" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="context">Контекст экземпляра.</param>
        <param name="command">Команда для выполнения.</param>
        <param name="timeout">Значение времени ожидания для операции.</param>
        <summary>Поставщик сохраняемости применяет этот метод, в результате чего определяется, может ли быть выполнена конкретная команда сохраняемости, и, если команда выполнима, происходит ее асинхронное выполнение.</summary>
        <returns>Реализация поставщика сохраняемости должна возвратить значение <see langword="false" /> в том случае, если она не поддерживает передачу команды в качестве параметра, в противном случае должно возвращаться значение <see langword="true" /> или исключение.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если команда выполнима, то, чтобы предоставить результаты команды, поставщик сохраняемости вызывает из сущности <xref:System.Runtime.DurableInstancing.InstancePersistenceContext> необходимые методы.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WaitForEvents">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.List&lt;System.Runtime.DurableInstancing.InstancePersistenceEvent&gt; WaitForEvents (System.Runtime.DurableInstancing.InstanceHandle handle, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.List`1&lt;class System.Runtime.DurableInstancing.InstancePersistenceEvent&gt; WaitForEvents(class System.Runtime.DurableInstancing.InstanceHandle handle, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.WaitForEvents(System.Runtime.DurableInstancing.InstanceHandle,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function WaitForEvents (handle As InstanceHandle, timeout As TimeSpan) As List(Of InstancePersistenceEvent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::List&lt;System::Runtime::DurableInstancing::InstancePersistenceEvent ^&gt; ^ WaitForEvents(System::Runtime::DurableInstancing::InstanceHandle ^ handle, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="member this.WaitForEvents : System.Runtime.DurableInstancing.InstanceHandle * TimeSpan -&gt; System.Collections.Generic.List&lt;System.Runtime.DurableInstancing.InstancePersistenceEvent&gt;" Usage="instanceStore.WaitForEvents (handle, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;System.Runtime.DurableInstancing.InstancePersistenceEvent&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handle" Type="System.Runtime.DurableInstancing.InstanceHandle" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="handle">Дескриптор экземпляра привязывается к этому событию.</param>
        <param name="timeout">Интервал времени, по истечении которого ожидающая операция прекращает ждать.</param>
        <summary>Узел рабочего процесса обычно вызывает этот метод для ожидания момента наступления отслеживаемого события.</summary>
        <returns>Список объектов <see cref="T:System.Runtime.DurableInstancing.InstancePersistenceEvent" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
