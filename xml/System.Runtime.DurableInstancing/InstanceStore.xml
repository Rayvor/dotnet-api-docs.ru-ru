<Type Name="InstanceStore" FullName="System.Runtime.DurableInstancing.InstanceStore">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1d418b9eef9cddaced41cb2e90f46dff06435b26" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69272019" /></Metadata><TypeSignature Language="C#" Value="public abstract class InstanceStore" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit InstanceStore extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.DurableInstancing.InstanceStore" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class InstanceStore" />
  <TypeSignature Language="C++ CLI" Value="public ref class InstanceStore abstract" />
  <TypeSignature Language="F#" Value="type InstanceStore = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="1ea54-101">Представляет хранилище экземпляров.</span><span class="sxs-lookup"><span data-stu-id="1ea54-101">Represents an instance store.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ea54-102">Поставщик сохраняемости предоставляет доступ к хранилищу экземпляров через конкретный экземпляр класса <xref:System.Runtime.DurableInstancing.InstanceStore>.</span><span class="sxs-lookup"><span data-stu-id="1ea54-102">A persistence provider provides access to an instance store through a concrete implementation of the <xref:System.Runtime.DurableInstancing.InstanceStore> class.</span></span>  
  
 <span data-ttu-id="1ea54-103">Поставщики сохраняемости могут вызывать класс InstanceHandle.Free для дескрипторов, переданных TryCommand, даже после завершения выполнения команды.</span><span class="sxs-lookup"><span data-stu-id="1ea54-103">Persistence providers may call InstanceHandle.Free on handles passed to TryCommand, even after the command has finished executing.</span></span> <span data-ttu-id="1ea54-104">Однако поставщики сохраняемости не должны содержать жесткие ссылки на объекты InstanceHandle или InstanceOwner, поскольку это может помешать сборке мусора в InstanceStore.</span><span class="sxs-lookup"><span data-stu-id="1ea54-104">But persistence providers must not hold strong references to InstanceHandle or InstanceOwner objects, as this can prevent InstanceStore from being garbage collected.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="1ea54-105">Определения рабочих процессов для сохраненных рабочих процессов не могут быть изменены.</span><span class="sxs-lookup"><span data-stu-id="1ea54-105">Workflow definitions for persisted workflows cannot be changed.</span></span> <span data-ttu-id="1ea54-106">Если определение рабочего процесса изменяется после его сохранения, среда выполнения рабочего процесса будет завершаться сбоем при повторной загрузке рабочего процесса.</span><span class="sxs-lookup"><span data-stu-id="1ea54-106">If a workflow definition is changed after it is persisted, the workflow runtime will crash when the workflow is reloaded.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected InstanceStore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; InstanceStore();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1ea54-107">Инициализирует экземпляр класса <see cref="T:System.Runtime.DurableInstancing.InstanceStore" />.</span><span class="sxs-lookup"><span data-stu-id="1ea54-107">Initializes an instance of the <see cref="T:System.Runtime.DurableInstancing.InstanceStore" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginExecute">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginExecute (System.Runtime.DurableInstancing.InstanceHandle handle, System.Runtime.DurableInstancing.InstancePersistenceCommand command, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginExecute(class System.Runtime.DurableInstancing.InstanceHandle handle, class System.Runtime.DurableInstancing.InstancePersistenceCommand command, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.BeginExecute(System.Runtime.DurableInstancing.InstanceHandle,System.Runtime.DurableInstancing.InstancePersistenceCommand,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginExecute (handle As InstanceHandle, command As InstancePersistenceCommand, timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginExecute(System::Runtime::DurableInstancing::InstanceHandle ^ handle, System::Runtime::DurableInstancing::InstancePersistenceCommand ^ command, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginExecute : System.Runtime.DurableInstancing.InstanceHandle * System.Runtime.DurableInstancing.InstancePersistenceCommand * TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="instanceStore.BeginExecute (handle, command, timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handle" Type="System.Runtime.DurableInstancing.InstanceHandle" />
        <Parameter Name="command" Type="System.Runtime.DurableInstancing.InstancePersistenceCommand" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="handle"><span data-ttu-id="1ea54-108">Дескриптор экземпляра.</span><span class="sxs-lookup"><span data-stu-id="1ea54-108">An instance handle.</span></span></param>
        <param name="command"><span data-ttu-id="1ea54-109">Команда для выполнения.</span><span class="sxs-lookup"><span data-stu-id="1ea54-109">The command to be executed.</span></span></param>
        <param name="timeout"><span data-ttu-id="1ea54-110">Время ожидания выполнения команды.</span><span class="sxs-lookup"><span data-stu-id="1ea54-110">The timeout value for the command execution.</span></span></param>
        <param name="callback"><span data-ttu-id="1ea54-111">Делегат асинхронного обратного вызова, принимающий уведомление о завершении асинхронной операции.</span><span class="sxs-lookup"><span data-stu-id="1ea54-111">The asynchronous callback delegate that receives notification of the completion of the asynchronous operation.</span></span></param>
        <param name="state"><span data-ttu-id="1ea54-112">Сведения о состоянии.</span><span class="sxs-lookup"><span data-stu-id="1ea54-112">The state information.</span></span></param>
        <summary><span data-ttu-id="1ea54-113">Асинхронно выполняет команды сохраняемости, например, <see cref="T:System.Activities.DurableInstancing.LoadWorkflowCommand" /> и <see cref="T:System.Activities.DurableInstancing.SaveWorkflowCommand" />.</span><span class="sxs-lookup"><span data-stu-id="1ea54-113">Asynchronously executes persistence commands such as <see cref="T:System.Activities.DurableInstancing.LoadWorkflowCommand" /> and <see cref="T:System.Activities.DurableInstancing.SaveWorkflowCommand" />.</span></span></summary>
        <returns><span data-ttu-id="1ea54-114">Состояние асинхронной операции.</span><span class="sxs-lookup"><span data-stu-id="1ea54-114">The state of the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ea54-115">Узел вызывает метод <xref:System.Runtime.DurableInstancing.InstanceStore.BeginExecute%2A>, чтобы асинхронно выполнить команду сохраняемости по отношению к дескриптору экземпляра.</span><span class="sxs-lookup"><span data-stu-id="1ea54-115">A host calls the <xref:System.Runtime.DurableInstancing.InstanceStore.BeginExecute%2A> method to execute a persistence command against an instance handle asynchronously.</span></span> <span data-ttu-id="1ea54-116">Узел получает дескриптор экземпляра путем вызова метода <xref:System.Runtime.DurableInstancing.InstanceStore.CreateInstanceHandle%2A>.</span><span class="sxs-lookup"><span data-stu-id="1ea54-116">The host obtains the instance handle by invoking the <xref:System.Runtime.DurableInstancing.InstanceStore.CreateInstanceHandle%2A> method.</span></span> <span data-ttu-id="1ea54-117">Дескриптор экземпляра может быть привязан к сущностям, которые представляют контекст и предмет команды, такой как экземпляр, владельца экземпляра или блокировку экземпляра.</span><span class="sxs-lookup"><span data-stu-id="1ea54-117">The instance handle may be bound to entities that represent the context and subject of the command, such as an instance, instance owner, or instance lock.</span></span>  <span data-ttu-id="1ea54-118">Только одна команда может применяться к дескриптору экземпляра в данный момент времени.</span><span class="sxs-lookup"><span data-stu-id="1ea54-118">Only one command may be issued against an instance handle at a time.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginTryCommand">
      <MemberSignature Language="C#" Value="protected internal virtual IAsyncResult BeginTryCommand (System.Runtime.DurableInstancing.InstancePersistenceContext context, System.Runtime.DurableInstancing.InstancePersistenceCommand command, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.IAsyncResult BeginTryCommand(class System.Runtime.DurableInstancing.InstancePersistenceContext context, class System.Runtime.DurableInstancing.InstancePersistenceCommand command, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.BeginTryCommand(System.Runtime.DurableInstancing.InstancePersistenceContext,System.Runtime.DurableInstancing.InstancePersistenceCommand,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function BeginTryCommand (context As InstancePersistenceContext, command As InstancePersistenceCommand, timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual IAsyncResult ^ BeginTryCommand(System::Runtime::DurableInstancing::InstancePersistenceContext ^ context, System::Runtime::DurableInstancing::InstancePersistenceCommand ^ command, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginTryCommand : System.Runtime.DurableInstancing.InstancePersistenceContext * System.Runtime.DurableInstancing.InstancePersistenceCommand * TimeSpan * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginTryCommand : System.Runtime.DurableInstancing.InstancePersistenceContext * System.Runtime.DurableInstancing.InstancePersistenceCommand * TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="instanceStore.BeginTryCommand (context, command, timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Runtime.DurableInstancing.InstancePersistenceContext" />
        <Parameter Name="command" Type="System.Runtime.DurableInstancing.InstancePersistenceCommand" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="1ea54-119">Контекст экземпляра.</span><span class="sxs-lookup"><span data-stu-id="1ea54-119">The instance context.</span></span></param>
        <param name="command"><span data-ttu-id="1ea54-120">Команда сохраняемости для выполнения.</span><span class="sxs-lookup"><span data-stu-id="1ea54-120">The persistence command to be executed.</span></span></param>
        <param name="timeout"><span data-ttu-id="1ea54-121">Время ожидания выполнения команды.</span><span class="sxs-lookup"><span data-stu-id="1ea54-121">The timeout value for the command execution.</span></span></param>
        <param name="callback"><span data-ttu-id="1ea54-122">Делегат асинхронного обратного вызова, принимающий уведомление о завершении асинхронной операции.</span><span class="sxs-lookup"><span data-stu-id="1ea54-122">The asynchronous callback delegate that receives notification of the completion of the asynchronous operation.</span></span></param>
        <param name="state"><span data-ttu-id="1ea54-123">Сведения о состоянии.</span><span class="sxs-lookup"><span data-stu-id="1ea54-123">The state information.</span></span></param>
        <summary><span data-ttu-id="1ea54-124">Поставщик сохраняемости применяет этот метод, в результате чего определяется, может ли быть выполнена конкретная команда сохраняемости.</span><span class="sxs-lookup"><span data-stu-id="1ea54-124">A persistence provider implements this method, which determines whether a particular persistence command can be executed.</span></span> <span data-ttu-id="1ea54-125">Если команда выполнима, происходит асинхронное выполнение.</span><span class="sxs-lookup"><span data-stu-id="1ea54-125">If the command can be executed, executes the command asynchronously.</span></span></summary>
        <returns><span data-ttu-id="1ea54-126">Состояние асинхронной операции.</span><span class="sxs-lookup"><span data-stu-id="1ea54-126">The state of the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ea54-127">Если команда выполнима, то поставщик сохраняемости вызывает необходимые методы, чтобы предоставить результаты команды.</span><span class="sxs-lookup"><span data-stu-id="1ea54-127">If the command can be executed, the persistence provider calls relevant methods on the InstancePersistenceContext to provide the results of the command.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="1ea54-128">Несмотря на то `abstract`, что этот метод `virtual` объявлен как, а не, реализация отсутствует.</span><span class="sxs-lookup"><span data-stu-id="1ea54-128">Even though this method is declared as `virtual` rather than `abstract`, there is no implementation.</span></span> <span data-ttu-id="1ea54-129">Этот метод необходимо переопределить, чтобы обеспечить функциональные возможности.</span><span class="sxs-lookup"><span data-stu-id="1ea54-129">This method must be overridden in order to provide functionality.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginWaitForEvents">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginWaitForEvents (System.Runtime.DurableInstancing.InstanceHandle handle, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginWaitForEvents(class System.Runtime.DurableInstancing.InstanceHandle handle, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.BeginWaitForEvents(System.Runtime.DurableInstancing.InstanceHandle,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginWaitForEvents (handle As InstanceHandle, timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginWaitForEvents(System::Runtime::DurableInstancing::InstanceHandle ^ handle, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginWaitForEvents : System.Runtime.DurableInstancing.InstanceHandle * TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="instanceStore.BeginWaitForEvents (handle, timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handle" Type="System.Runtime.DurableInstancing.InstanceHandle" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="handle"><span data-ttu-id="1ea54-130">Дескриптор экземпляра.</span><span class="sxs-lookup"><span data-stu-id="1ea54-130">An instance handle.</span></span></param>
        <param name="timeout"><span data-ttu-id="1ea54-131">Период, после которого истекает время ожидания вызова.</span><span class="sxs-lookup"><span data-stu-id="1ea54-131">The period after which the operation times out.</span></span></param>
        <param name="callback"><span data-ttu-id="1ea54-132">Метод, вызываемый после завершения асинхронной операции.</span><span class="sxs-lookup"><span data-stu-id="1ea54-132">The method to be called after the asynchronous operation is complete.</span></span></param>
        <param name="state"><span data-ttu-id="1ea54-133">Задаваемый приложением объект, который содержит сведения о состоянии, связанные с асинхронной операцией.</span><span class="sxs-lookup"><span data-stu-id="1ea54-133">An object containing the state information associated with the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="1ea54-134">Начинается как асинхронная операция прослушивания любых событий, вызванных хранилищем экземпляров для конкретного дескриптора экземпляра.</span><span class="sxs-lookup"><span data-stu-id="1ea54-134">Begins an asynchronous operation to listen for any events raised by the instance store for a specific instance handle.</span></span></summary>
        <returns><span data-ttu-id="1ea54-135">Возвращает объект <see cref="T:System.IAsyncResult" />.</span><span class="sxs-lookup"><span data-stu-id="1ea54-135">Returns an <see cref="T:System.IAsyncResult" /> object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateInstanceHandle">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1ea54-136">Создает дескриптор экземпляра.</span><span class="sxs-lookup"><span data-stu-id="1ea54-136">Creates an instance handle.</span></span> <span data-ttu-id="1ea54-137">Если задано значение DefaultInstanceOwner, оно автоматически привязывается к новому владельцу экземпляра дескриптора.</span><span class="sxs-lookup"><span data-stu-id="1ea54-137">If the DefaultInstanceOwner is set, the value is automatically bound as the new handle's instance owner.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateInstanceHandle">
      <MemberSignature Language="C#" Value="public System.Runtime.DurableInstancing.InstanceHandle CreateInstanceHandle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Runtime.DurableInstancing.InstanceHandle CreateInstanceHandle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.CreateInstanceHandle" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateInstanceHandle () As InstanceHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Runtime::DurableInstancing::InstanceHandle ^ CreateInstanceHandle();" />
      <MemberSignature Language="F#" Value="member this.CreateInstanceHandle : unit -&gt; System.Runtime.DurableInstancing.InstanceHandle" Usage="instanceStore.CreateInstanceHandle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.DurableInstancing.InstanceHandle</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1ea54-138">Создает дескриптор экземпляра.</span><span class="sxs-lookup"><span data-stu-id="1ea54-138">Creates an instance handle.</span></span></summary>
        <returns><span data-ttu-id="1ea54-139">Дескриптор экземпляра.</span><span class="sxs-lookup"><span data-stu-id="1ea54-139">The instance handle.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceHandle">
      <MemberSignature Language="C#" Value="public System.Runtime.DurableInstancing.InstanceHandle CreateInstanceHandle (Guid instanceId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Runtime.DurableInstancing.InstanceHandle CreateInstanceHandle(valuetype System.Guid instanceId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.CreateInstanceHandle(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateInstanceHandle (instanceId As Guid) As InstanceHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Runtime::DurableInstancing::InstanceHandle ^ CreateInstanceHandle(Guid instanceId);" />
      <MemberSignature Language="F#" Value="member this.CreateInstanceHandle : Guid -&gt; System.Runtime.DurableInstancing.InstanceHandle" Usage="instanceStore.CreateInstanceHandle instanceId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.DurableInstancing.InstanceHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="instanceId"><span data-ttu-id="1ea54-140">Идентификатор экземпляра.</span><span class="sxs-lookup"><span data-stu-id="1ea54-140">An instance identifier.</span></span> <span data-ttu-id="1ea54-141">Не должно иметь значение Guid.Empty.</span><span class="sxs-lookup"><span data-stu-id="1ea54-141">Must not be Guid.Empty.</span></span></param>
        <summary><span data-ttu-id="1ea54-142">Создает дескриптор экземпляра.</span><span class="sxs-lookup"><span data-stu-id="1ea54-142">Creates an instance handle.</span></span>  <span data-ttu-id="1ea54-143">Если задано значение DefaultInstanceOwner, оно автоматически привязывается к новому владельцу экземпляра дескриптора.</span><span class="sxs-lookup"><span data-stu-id="1ea54-143">If the DefaultInstanceOwner is set, the value is automatically bound as the new handle's instance owner.</span></span>  <span data-ttu-id="1ea54-144">Идентификатор экземпляра, переданный как параметр, автоматически привязывается к новому экземпляру дескриптора.</span><span class="sxs-lookup"><span data-stu-id="1ea54-144">The instance identifier passed as a parameter is automatically bound as the new handle's instance.</span></span></summary>
        <returns><span data-ttu-id="1ea54-145">Дескриптор экземпляра.</span><span class="sxs-lookup"><span data-stu-id="1ea54-145">The instance handle.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceHandle">
      <MemberSignature Language="C#" Value="public System.Runtime.DurableInstancing.InstanceHandle CreateInstanceHandle (System.Runtime.DurableInstancing.InstanceOwner owner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Runtime.DurableInstancing.InstanceHandle CreateInstanceHandle(class System.Runtime.DurableInstancing.InstanceOwner owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.CreateInstanceHandle(System.Runtime.DurableInstancing.InstanceOwner)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateInstanceHandle (owner As InstanceOwner) As InstanceHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Runtime::DurableInstancing::InstanceHandle ^ CreateInstanceHandle(System::Runtime::DurableInstancing::InstanceOwner ^ owner);" />
      <MemberSignature Language="F#" Value="member this.CreateInstanceHandle : System.Runtime.DurableInstancing.InstanceOwner -&gt; System.Runtime.DurableInstancing.InstanceHandle" Usage="instanceStore.CreateInstanceHandle owner" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.DurableInstancing.InstanceHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="owner" Type="System.Runtime.DurableInstancing.InstanceOwner" />
      </Parameters>
      <Docs>
        <param name="owner"><span data-ttu-id="1ea54-146">Владелец экземпляра.</span><span class="sxs-lookup"><span data-stu-id="1ea54-146">The owner of an instance.</span></span></param>
        <summary><span data-ttu-id="1ea54-147">Создает дескриптор экземпляра.</span><span class="sxs-lookup"><span data-stu-id="1ea54-147">Creates an instance handle.</span></span> <span data-ttu-id="1ea54-148">Если владелец экземпляра, переданный как параметр, отличается от NULL, значение автоматически привязывается к новому владельцу экземпляра дескриптора.</span><span class="sxs-lookup"><span data-stu-id="1ea54-148">If the instance owner passed as a parameter is not null, the value is automatically bound as the new handle's instance owner.</span></span>  <span data-ttu-id="1ea54-149">(В противном случае привязка владельца экземпляра отсутствует, даже если задано значение DefaultInstanceOwner.)</span><span class="sxs-lookup"><span data-stu-id="1ea54-149">(Otherwise, no instance owner is bound, even if DefaultInstanceOwner is set.)</span></span></summary>
        <returns><span data-ttu-id="1ea54-150">Дескриптор экземпляра.</span><span class="sxs-lookup"><span data-stu-id="1ea54-150">The instance handle.</span></span> <span data-ttu-id="1ea54-151">Значение null указывает на то, что новый дескриптор не должен автоматически привязываться к владельцу экземпляра.</span><span class="sxs-lookup"><span data-stu-id="1ea54-151">A null value indicates that the new handle should not be automatically bound to an instance owner.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceHandle">
      <MemberSignature Language="C#" Value="public System.Runtime.DurableInstancing.InstanceHandle CreateInstanceHandle (System.Runtime.DurableInstancing.InstanceOwner owner, Guid instanceId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Runtime.DurableInstancing.InstanceHandle CreateInstanceHandle(class System.Runtime.DurableInstancing.InstanceOwner owner, valuetype System.Guid instanceId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.CreateInstanceHandle(System.Runtime.DurableInstancing.InstanceOwner,System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateInstanceHandle (owner As InstanceOwner, instanceId As Guid) As InstanceHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Runtime::DurableInstancing::InstanceHandle ^ CreateInstanceHandle(System::Runtime::DurableInstancing::InstanceOwner ^ owner, Guid instanceId);" />
      <MemberSignature Language="F#" Value="member this.CreateInstanceHandle : System.Runtime.DurableInstancing.InstanceOwner * Guid -&gt; System.Runtime.DurableInstancing.InstanceHandle" Usage="instanceStore.CreateInstanceHandle (owner, instanceId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.DurableInstancing.InstanceHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="owner" Type="System.Runtime.DurableInstancing.InstanceOwner" />
        <Parameter Name="instanceId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="owner"><span data-ttu-id="1ea54-152">Объект владельца экземпляра, представляющий владельца экземпляра.</span><span class="sxs-lookup"><span data-stu-id="1ea54-152">An InstanceOwner object  that represents the owner of an instance.</span></span> <span data-ttu-id="1ea54-153">Передает null в качестве значения для этого параметра, чтобы показать, что новый дескриптор не должен привязываться к владельцу экземпляра.</span><span class="sxs-lookup"><span data-stu-id="1ea54-153">Pass null as the value for this parameter to indicate that the new handle should not be automatically bound to an instance owner.</span></span></param>
        <param name="instanceId"><span data-ttu-id="1ea54-154">Идентификатор экземпляра.</span><span class="sxs-lookup"><span data-stu-id="1ea54-154">An instance identifier.</span></span> <span data-ttu-id="1ea54-155">Не должно иметь значение Guid.Empty.</span><span class="sxs-lookup"><span data-stu-id="1ea54-155">Must not be Guid.Empty.</span></span></param>
        <summary><span data-ttu-id="1ea54-156">Создает дескриптор экземпляра.</span><span class="sxs-lookup"><span data-stu-id="1ea54-156">Creates an instance handle.</span></span> <span data-ttu-id="1ea54-157">Если владелец экземпляра, переданный как параметр, отличается от NULL, значение автоматически привязывается к новому владельцу экземпляра дескриптора.</span><span class="sxs-lookup"><span data-stu-id="1ea54-157">If the instance owner passed as a parameter is not null, the value is automatically bound as the new handle's instance owner.</span></span>  <span data-ttu-id="1ea54-158">(В противном случае привязка владельца экземпляра отсутствует, даже если задано значение DefaultInstanceOwner.) Идентификатор экземпляра, переданный как параметр, автоматически привязывается к новому экземпляру дескриптора.</span><span class="sxs-lookup"><span data-stu-id="1ea54-158">(Otherwise, no instance owner is bound, even if DefaultInstanceOwner is set.) The instance identifier passed as a parameter is automatically bound as the new handle's instance.</span></span></summary>
        <returns><span data-ttu-id="1ea54-159">Дескриптор экземпляра.</span><span class="sxs-lookup"><span data-stu-id="1ea54-159">The instance handle.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultInstanceOwner">
      <MemberSignature Language="C#" Value="public System.Runtime.DurableInstancing.InstanceOwner DefaultInstanceOwner { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Runtime.DurableInstancing.InstanceOwner DefaultInstanceOwner" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.DurableInstancing.InstanceStore.DefaultInstanceOwner" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultInstanceOwner As InstanceOwner" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::DurableInstancing::InstanceOwner ^ DefaultInstanceOwner { System::Runtime::DurableInstancing::InstanceOwner ^ get(); void set(System::Runtime::DurableInstancing::InstanceOwner ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultInstanceOwner : System.Runtime.DurableInstancing.InstanceOwner with get, set" Usage="System.Runtime.DurableInstancing.InstanceStore.DefaultInstanceOwner" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.DurableInstancing.InstanceOwner</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1ea54-160">Возвращает или задает владельца экземпляра по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="1ea54-160">Gets or sets the default instance owner.</span></span></summary>
        <value><span data-ttu-id="1ea54-161">Владелец экземпляра по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="1ea54-161">The default instance owner.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ea54-162">Некоторые узлы определяют владельца экземпляра путем чтения этого свойства.</span><span class="sxs-lookup"><span data-stu-id="1ea54-162">Some hosts infer the instance owner to use by reading this property.</span></span> <span data-ttu-id="1ea54-163">Это свойство может использоваться объектом WorkflowApplication.</span><span class="sxs-lookup"><span data-stu-id="1ea54-163">WorkflowApplication can use this property.</span></span> <span data-ttu-id="1ea54-164">Объект WorkflowServiceHost не использует это свойство.</span><span class="sxs-lookup"><span data-stu-id="1ea54-164">WorkflowServiceHost does not use this property.</span></span>  
  
 <span data-ttu-id="1ea54-165">Если больше не требуется, свойство задано DefaultInstanceOwner должно иметь значение null.</span><span class="sxs-lookup"><span data-stu-id="1ea54-165">The DefaultInstanceOwner property must be set to null when it is no longer necessary.</span></span> <span data-ttu-id="1ea54-166">Объекты InstanceStore могут не удаляться при сборке мусора, если значение DefaultInstanceOwner отлично от null.</span><span class="sxs-lookup"><span data-stu-id="1ea54-166">InstanceStore objects might not be garbage collected if DefaultInstanceOwner is not null.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="1ea54-167">Несмотря на то `abstract`, что этот метод `virtual` объявлен как, а не, реализация отсутствует.</span><span class="sxs-lookup"><span data-stu-id="1ea54-167">Even though this method is declared as `virtual` rather than `abstract`, there is no implementation.</span></span> <span data-ttu-id="1ea54-168">Этот метод необходимо переопределить, чтобы обеспечить функциональные возможности.</span><span class="sxs-lookup"><span data-stu-id="1ea54-168">This method must be overridden in order to provide functionality.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndExecute">
      <MemberSignature Language="C#" Value="public System.Runtime.DurableInstancing.InstanceView EndExecute (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Runtime.DurableInstancing.InstanceView EndExecute(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.EndExecute(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndExecute (result As IAsyncResult) As InstanceView" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Runtime::DurableInstancing::InstanceView ^ EndExecute(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="member this.EndExecute : IAsyncResult -&gt; System.Runtime.DurableInstancing.InstanceView" Usage="instanceStore.EndExecute result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.DurableInstancing.InstanceView</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="1ea54-169">Результат операции.</span><span class="sxs-lookup"><span data-stu-id="1ea54-169">The result of the operation.</span></span></param>
        <summary><span data-ttu-id="1ea54-170">Завершает асинхронную операцию.</span><span class="sxs-lookup"><span data-stu-id="1ea54-170">Ends the asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="1ea54-171">Объект InstanceView представляет известное состояние экземпляра после успешного завершения команды.</span><span class="sxs-lookup"><span data-stu-id="1ea54-171">An InstanceView object  representing the known state of the instance after the successful completion of the command.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ea54-172">Если метод BeginExecute вызывается при транзакции, это состояние может включать нефиксированные данные.</span><span class="sxs-lookup"><span data-stu-id="1ea54-172">If BeginExecute was called under a transaction, this state may include uncommitted data.</span></span> <span data-ttu-id="1ea54-173">После успешной фиксации транзакции, данные объекта InstanceView можно считать фиксированными.</span><span class="sxs-lookup"><span data-stu-id="1ea54-173">Once the transaction is committed successfully, the data in the InstanceView object can be considered committed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndTryCommand">
      <MemberSignature Language="C#" Value="protected internal virtual bool EndTryCommand (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance bool EndTryCommand(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.EndTryCommand(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function EndTryCommand (result As IAsyncResult) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual bool EndTryCommand(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndTryCommand : IAsyncResult -&gt; bool&#xA;override this.EndTryCommand : IAsyncResult -&gt; bool" Usage="instanceStore.EndTryCommand result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="1ea54-174">Результат операции.</span><span class="sxs-lookup"><span data-stu-id="1ea54-174">The result of the operation.</span></span></param>
        <summary><span data-ttu-id="1ea54-175">Завершает асинхронную операцию.</span><span class="sxs-lookup"><span data-stu-id="1ea54-175">Ends an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="1ea54-176">Реализация поставщика сохраняемости должна возвратить значение FALSE в том случае, если она не поддерживает команду, передаваемую методу BeginTryCommand.</span><span class="sxs-lookup"><span data-stu-id="1ea54-176">A persistence provider implementation should return false if it doesn't support the command passed to the BeginTryCommand method.</span></span> <span data-ttu-id="1ea54-177">В противном случае она должна возвращать значение TRUE или выдавать исключение.</span><span class="sxs-lookup"><span data-stu-id="1ea54-177">Otherwise it should return true or throw an exception.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!WARNING]
>  <span data-ttu-id="1ea54-178">Несмотря на то `abstract`, что этот метод `virtual` объявлен как, а не, реализация отсутствует.</span><span class="sxs-lookup"><span data-stu-id="1ea54-178">Even though this method is declared as `virtual` rather than `abstract`, there is no implementation.</span></span> <span data-ttu-id="1ea54-179">Этот метод необходимо переопределить, чтобы обеспечить функциональные возможности.</span><span class="sxs-lookup"><span data-stu-id="1ea54-179">This method must be overridden in order to provide functionality.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndWaitForEvents">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.List&lt;System.Runtime.DurableInstancing.InstancePersistenceEvent&gt; EndWaitForEvents (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.List`1&lt;class System.Runtime.DurableInstancing.InstancePersistenceEvent&gt; EndWaitForEvents(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.EndWaitForEvents(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndWaitForEvents (result As IAsyncResult) As List(Of InstancePersistenceEvent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::List&lt;System::Runtime::DurableInstancing::InstancePersistenceEvent ^&gt; ^ EndWaitForEvents(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="member this.EndWaitForEvents : IAsyncResult -&gt; System.Collections.Generic.List&lt;System.Runtime.DurableInstancing.InstancePersistenceEvent&gt;" Usage="instanceStore.EndWaitForEvents result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;System.Runtime.DurableInstancing.InstancePersistenceEvent&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="1ea54-180">Объект IAsyncResult, переданный клиенту при помощи метода Begin.</span><span class="sxs-lookup"><span data-stu-id="1ea54-180">An IAsyncResult object that was handed over to the client by the Begin method.</span></span></param>
        <summary><span data-ttu-id="1ea54-181">Завершает асинхронную операцию, запущенную методом <see cref="M:System.Runtime.DurableInstancing.InstanceStore.BeginWaitForEvents(System.Runtime.DurableInstancing.InstanceHandle,System.TimeSpan,System.AsyncCallback,System.Object)" />.</span><span class="sxs-lookup"><span data-stu-id="1ea54-181">Ends the asynchronous operation initiated by the <see cref="M:System.Runtime.DurableInstancing.InstanceStore.BeginWaitForEvents(System.Runtime.DurableInstancing.InstanceHandle,System.TimeSpan,System.AsyncCallback,System.Object)" /> method.</span></span></summary>
        <returns><span data-ttu-id="1ea54-182">Возвращает список объектов <see cref="T:System.Runtime.DurableInstancing.InstancePersistenceEvent" />.</span><span class="sxs-lookup"><span data-stu-id="1ea54-182">Returns a list of <see cref="T:System.Runtime.DurableInstancing.InstancePersistenceEvent" /> objects.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="public System.Runtime.DurableInstancing.InstanceView Execute (System.Runtime.DurableInstancing.InstanceHandle handle, System.Runtime.DurableInstancing.InstancePersistenceCommand command, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Runtime.DurableInstancing.InstanceView Execute(class System.Runtime.DurableInstancing.InstanceHandle handle, class System.Runtime.DurableInstancing.InstancePersistenceCommand command, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.Execute(System.Runtime.DurableInstancing.InstanceHandle,System.Runtime.DurableInstancing.InstancePersistenceCommand,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function Execute (handle As InstanceHandle, command As InstancePersistenceCommand, timeout As TimeSpan) As InstanceView" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Runtime::DurableInstancing::InstanceView ^ Execute(System::Runtime::DurableInstancing::InstanceHandle ^ handle, System::Runtime::DurableInstancing::InstancePersistenceCommand ^ command, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="member this.Execute : System.Runtime.DurableInstancing.InstanceHandle * System.Runtime.DurableInstancing.InstancePersistenceCommand * TimeSpan -&gt; System.Runtime.DurableInstancing.InstanceView" Usage="instanceStore.Execute (handle, command, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.DurableInstancing.InstanceView</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handle" Type="System.Runtime.DurableInstancing.InstanceHandle" />
        <Parameter Name="command" Type="System.Runtime.DurableInstancing.InstancePersistenceCommand" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="handle"><span data-ttu-id="1ea54-183">Дескриптор экземпляра.</span><span class="sxs-lookup"><span data-stu-id="1ea54-183">An instance handle.</span></span></param>
        <param name="command"><span data-ttu-id="1ea54-184">Команда для выполнения.</span><span class="sxs-lookup"><span data-stu-id="1ea54-184">The command to be executed.</span></span></param>
        <param name="timeout"><span data-ttu-id="1ea54-185">Значение времени ожидания для операции.</span><span class="sxs-lookup"><span data-stu-id="1ea54-185">The timeout value for the operation.</span></span></param>
        <summary><span data-ttu-id="1ea54-186">Синхронно выполняет команду сохраняемости.</span><span class="sxs-lookup"><span data-stu-id="1ea54-186">Executes a persistence command synchronously.</span></span> <span data-ttu-id="1ea54-187">Примеры команд сохраняемости: <see cref="T:System.Activities.DurableInstancing.LoadWorkflowCommand" /> и <see cref="T:System.Activities.DurableInstancing.SaveWorkflowCommand" />.</span><span class="sxs-lookup"><span data-stu-id="1ea54-187">Examples of persistence commands are: <see cref="T:System.Activities.DurableInstancing.LoadWorkflowCommand" /> and <see cref="T:System.Activities.DurableInstancing.SaveWorkflowCommand" />.</span></span></summary>
        <returns><span data-ttu-id="1ea54-188">Объект InstanceView представляет известное состояние экземпляра после успешного завершения команды.</span><span class="sxs-lookup"><span data-stu-id="1ea54-188">An InstanceView object representing the known state of the instance after the successful completion of the command.</span></span>  <span data-ttu-id="1ea54-189">Если метод Execute вызывается при транзакции, это состояние может включать нефиксированные данные.</span><span class="sxs-lookup"><span data-stu-id="1ea54-189">If Execute was called under a transaction, this state may include uncommitted data.</span></span> <span data-ttu-id="1ea54-190">После успешной фиксации транзакции, данные объекта InstanceView можно считать фиксированными.</span><span class="sxs-lookup"><span data-stu-id="1ea54-190">Once the transaction is committed successfully, the data in the InstanceView object can be considered committed</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ea54-191">Узел вызывает метод <xref:System.Runtime.DurableInstancing.InstanceStore.Execute%2A>, чтобы асинхронно выполнить команду сохраняемости по отношению к дескриптору экземпляра, полученного за счет вызова метода <xref:System.Runtime.DurableInstancing.InstanceStore.CreateInstanceHandle%2A>.</span><span class="sxs-lookup"><span data-stu-id="1ea54-191">A host calls the <xref:System.Runtime.DurableInstancing.InstanceStore.Execute%2A> method to execute a persistence command against an instance handle, which the host obtains by invoking the <xref:System.Runtime.DurableInstancing.InstanceStore.CreateInstanceHandle%2A> method.</span></span> <span data-ttu-id="1ea54-192">Дескриптор экземпляра может быть привязан к сущностям, которые представляют контекст и предмет команды, такой как экземпляр, владельца экземпляра или блокировку экземпляра.</span><span class="sxs-lookup"><span data-stu-id="1ea54-192">The instance handle may be bound to entities that represent the context and subject of the command, such as an instance, instance owner, or instance lock.</span></span>  <span data-ttu-id="1ea54-193">Только одна команда может применяться к дескриптору экземпляра в данный момент времени.</span><span class="sxs-lookup"><span data-stu-id="1ea54-193">Only one command may be issued against an instance handle at a time.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="1ea54-194">Если этот метод выполняется с <xref:System.Activities.DurableInstancing.CreateWorkflowOwnerCommand>помощью, он <xref:System.Runtime.DurableInstancing.InstanceOwner> создает и привязывает его к экземпляру.</span><span class="sxs-lookup"><span data-stu-id="1ea54-194">If this method is executed with a <xref:System.Activities.DurableInstancing.CreateWorkflowOwnerCommand>, it will create an <xref:System.Runtime.DurableInstancing.InstanceOwner> and bind it to the instance.</span></span> <span data-ttu-id="1ea54-195">Это означает, что никакой другой процесс не сможет получить доступ к этому рабочему процессу. Если процесс завершается, Рабочий процесс не может быть восстановлен или выполнен.</span><span class="sxs-lookup"><span data-stu-id="1ea54-195">This means that no other process will be able to access that workflow; if the process ends, the workflow cannot be recovered or executed.</span></span> <span data-ttu-id="1ea54-196">Если такой рабочий процесс выполняется снова, <xref:System.Runtime.DurableInstancing.InstanceLockedException> будет выдано исключение.</span><span class="sxs-lookup"><span data-stu-id="1ea54-196">If such a workflow is executed again, a <xref:System.Runtime.DurableInstancing.InstanceLockedException> will be thrown.</span></span>  
>   
>  <span data-ttu-id="1ea54-197">Если <xref:System.Activities.DurableInstancing.CreateWorkflowOwnerCommand> не используется, хранилище экземпляров создаст временную <xref:System.Runtime.DurableInstancing.InstanceOwner> копию, которая будет удалена в конце процесса.</span><span class="sxs-lookup"><span data-stu-id="1ea54-197">If <xref:System.Activities.DurableInstancing.CreateWorkflowOwnerCommand> is not used, the instance store will create a temporary <xref:System.Runtime.DurableInstancing.InstanceOwner> that will be deleted at the end of the process.</span></span> <span data-ttu-id="1ea54-198">Однако если процесс завершается до окончательной точки сохранения рабочего процесса, это исключение будет создано, если не истечет период времени, указанный в параметре **хостлоккреневалпериод** .</span><span class="sxs-lookup"><span data-stu-id="1ea54-198">However, if the process ends before the workflow's final persistence point, this exception will be thrown, unless the period of time specified in the **HostLockRenewalPeriod** parameter has expired.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEvents">
      <MemberSignature Language="C#" Value="protected System.Runtime.DurableInstancing.InstancePersistenceEvent[] GetEvents (System.Runtime.DurableInstancing.InstanceOwner owner);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Runtime.DurableInstancing.InstancePersistenceEvent[] GetEvents(class System.Runtime.DurableInstancing.InstanceOwner owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.GetEvents(System.Runtime.DurableInstancing.InstanceOwner)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetEvents (owner As InstanceOwner) As InstancePersistenceEvent()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; cli::array &lt;System::Runtime::DurableInstancing::InstancePersistenceEvent ^&gt; ^ GetEvents(System::Runtime::DurableInstancing::InstanceOwner ^ owner);" />
      <MemberSignature Language="F#" Value="member this.GetEvents : System.Runtime.DurableInstancing.InstanceOwner -&gt; System.Runtime.DurableInstancing.InstancePersistenceEvent[]" Usage="instanceStore.GetEvents owner" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.DurableInstancing.InstancePersistenceEvent[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="owner" Type="System.Runtime.DurableInstancing.InstanceOwner" />
      </Parameters>
      <Docs>
        <param name="owner"><span data-ttu-id="1ea54-199">Объект <see cref="T:System.Runtime.DurableInstancing.InstanceOwner" />, представляющий владельца экземпляра.</span><span class="sxs-lookup"><span data-stu-id="1ea54-199">An <see cref="T:System.Runtime.DurableInstancing.InstanceOwner" /> object representing the owner of an instance.</span></span></param>
        <summary><span data-ttu-id="1ea54-200">Извлекает все отслеживаемые события, привязанные к объекту <see cref="T:System.Runtime.DurableInstancing.InstanceOwner" />.</span><span class="sxs-lookup"><span data-stu-id="1ea54-200">Gets all the signaled events bound to an <see cref="T:System.Runtime.DurableInstancing.InstanceOwner" /> object.</span></span></summary>
        <returns><span data-ttu-id="1ea54-201">Возвращает массив объектов <see cref="T:System.Runtime.DurableInstancing.InstancePersistenceEvent" />.</span><span class="sxs-lookup"><span data-stu-id="1ea54-201">Returns an array of <see cref="T:System.Runtime.DurableInstancing.InstancePersistenceEvent" /> objects.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInstanceOwners">
      <MemberSignature Language="C#" Value="protected System.Runtime.DurableInstancing.InstanceOwner[] GetInstanceOwners ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Runtime.DurableInstancing.InstanceOwner[] GetInstanceOwners() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.GetInstanceOwners" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetInstanceOwners () As InstanceOwner()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; cli::array &lt;System::Runtime::DurableInstancing::InstanceOwner ^&gt; ^ GetInstanceOwners();" />
      <MemberSignature Language="F#" Value="member this.GetInstanceOwners : unit -&gt; System.Runtime.DurableInstancing.InstanceOwner[]" Usage="instanceStore.GetInstanceOwners " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.DurableInstancing.InstanceOwner[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1ea54-202">Извлекает каждый объект InstanceOwner, привязанный к действительному дескриптору экземпляра или не удаленный при сборке мусора.</span><span class="sxs-lookup"><span data-stu-id="1ea54-202">Gets each InstanceOwner object that is bound to a valid instance handle or has not been garbage collected.</span></span></summary>
        <returns><span data-ttu-id="1ea54-203">Владелец экземпляра.</span><span class="sxs-lookup"><span data-stu-id="1ea54-203">The owner of the instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ea54-204">Возвращает массив объектов InstanceOwner.</span><span class="sxs-lookup"><span data-stu-id="1ea54-204">Returns an array of InstanceOwner objects.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnFreeInstanceHandle">
      <MemberSignature Language="C#" Value="protected virtual void OnFreeInstanceHandle (System.Runtime.DurableInstancing.InstanceHandle instanceHandle, object userContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnFreeInstanceHandle(class System.Runtime.DurableInstancing.InstanceHandle instanceHandle, object userContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.OnFreeInstanceHandle(System.Runtime.DurableInstancing.InstanceHandle,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnFreeInstanceHandle(System::Runtime::DurableInstancing::InstanceHandle ^ instanceHandle, System::Object ^ userContext);" />
      <MemberSignature Language="F#" Value="abstract member OnFreeInstanceHandle : System.Runtime.DurableInstancing.InstanceHandle * obj -&gt; unit&#xA;override this.OnFreeInstanceHandle : System.Runtime.DurableInstancing.InstanceHandle * obj -&gt; unit" Usage="instanceStore.OnFreeInstanceHandle (instanceHandle, userContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceHandle" Type="System.Runtime.DurableInstancing.InstanceHandle" />
        <Parameter Name="userContext" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instanceHandle"><span data-ttu-id="1ea54-205">Дескриптор экземпляра, который был освобожден.</span><span class="sxs-lookup"><span data-stu-id="1ea54-205">The instance handle that was freed.</span></span></param>
        <param name="userContext"><span data-ttu-id="1ea54-206">Контекстная информация о пользователе из поставщика сохраняемости, возвращенная от OnNewInstanceHandle, или значение NULL, если не произошло переопределение OnNewInstanceHandle.</span><span class="sxs-lookup"><span data-stu-id="1ea54-206">The persistence provider's user context information that was returned from OnNewInstanceHandle, or null if OnNewInstanceHandle is not overridden.</span></span></param>
        <summary><span data-ttu-id="1ea54-207">Вызывается, когда дескриптор экземпляра освобождается.</span><span class="sxs-lookup"><span data-stu-id="1ea54-207">Invoked when an instance handle is freed.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnNewInstanceHandle">
      <MemberSignature Language="C#" Value="protected virtual object OnNewInstanceHandle (System.Runtime.DurableInstancing.InstanceHandle instanceHandle);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object OnNewInstanceHandle(class System.Runtime.DurableInstancing.InstanceHandle instanceHandle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.OnNewInstanceHandle(System.Runtime.DurableInstancing.InstanceHandle)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Object ^ OnNewInstanceHandle(System::Runtime::DurableInstancing::InstanceHandle ^ instanceHandle);" />
      <MemberSignature Language="F#" Value="abstract member OnNewInstanceHandle : System.Runtime.DurableInstancing.InstanceHandle -&gt; obj&#xA;override this.OnNewInstanceHandle : System.Runtime.DurableInstancing.InstanceHandle -&gt; obj" Usage="instanceStore.OnNewInstanceHandle instanceHandle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceHandle" Type="System.Runtime.DurableInstancing.InstanceHandle" />
      </Parameters>
      <Docs>
        <param name="instanceHandle"><span data-ttu-id="1ea54-208">Дескриптор экземпляра.</span><span class="sxs-lookup"><span data-stu-id="1ea54-208">An instance handle.</span></span></param>
        <summary><span data-ttu-id="1ea54-209">Вызывается при создании нового дескриптора экземпляра.</span><span class="sxs-lookup"><span data-stu-id="1ea54-209">Invoked when a new instance handle is created.</span></span></summary>
        <returns><span data-ttu-id="1ea54-210">Объект.</span><span class="sxs-lookup"><span data-stu-id="1ea54-210">An object.</span></span>  <span data-ttu-id="1ea54-211">Этот объект контекста пользователя будет доступен поставщику сохраняемости при выполнении команд с использованием дескриптора, и при освобождении дескриптора.</span><span class="sxs-lookup"><span data-stu-id="1ea54-211">This user context object will be available to the persistence provider when commands are executed using the handle, and when the handle is freed.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetEvent">
      <MemberSignature Language="C#" Value="protected void ResetEvent (System.Runtime.DurableInstancing.InstancePersistenceEvent persistenceEvent, System.Runtime.DurableInstancing.InstanceOwner owner);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void ResetEvent(class System.Runtime.DurableInstancing.InstancePersistenceEvent persistenceEvent, class System.Runtime.DurableInstancing.InstanceOwner owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.ResetEvent(System.Runtime.DurableInstancing.InstancePersistenceEvent,System.Runtime.DurableInstancing.InstanceOwner)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub ResetEvent (persistenceEvent As InstancePersistenceEvent, owner As InstanceOwner)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void ResetEvent(System::Runtime::DurableInstancing::InstancePersistenceEvent ^ persistenceEvent, System::Runtime::DurableInstancing::InstanceOwner ^ owner);" />
      <MemberSignature Language="F#" Value="member this.ResetEvent : System.Runtime.DurableInstancing.InstancePersistenceEvent * System.Runtime.DurableInstancing.InstanceOwner -&gt; unit" Usage="instanceStore.ResetEvent (persistenceEvent, owner)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="persistenceEvent" Type="System.Runtime.DurableInstancing.InstancePersistenceEvent" />
        <Parameter Name="owner" Type="System.Runtime.DurableInstancing.InstanceOwner" />
      </Parameters>
      <Docs>
        <param name="persistenceEvent"><span data-ttu-id="1ea54-212">Событие сохраняемости, которое было указано ранее, и которое подлежит сбросу.</span><span class="sxs-lookup"><span data-stu-id="1ea54-212">The persistence event that was signaled earlier and to be reset.</span></span></param>
        <param name="owner"><span data-ttu-id="1ea54-213">Владелец экземпляра, связанный с событием сохраняемости.</span><span class="sxs-lookup"><span data-stu-id="1ea54-213">The instance owner associated with the persistence event.</span></span></param>
        <summary><span data-ttu-id="1ea54-214">Сброс отслеживаемого события и удаление события из списка указанных событий, который поддерживается владельцем экземпляра.</span><span class="sxs-lookup"><span data-stu-id="1ea54-214">Resets the signaled event and removes the event from the signaled events list maintained by the instance owner.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SignalEvent">
      <MemberSignature Language="C#" Value="protected void SignalEvent (System.Runtime.DurableInstancing.InstancePersistenceEvent persistenceEvent, System.Runtime.DurableInstancing.InstanceOwner owner);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SignalEvent(class System.Runtime.DurableInstancing.InstancePersistenceEvent persistenceEvent, class System.Runtime.DurableInstancing.InstanceOwner owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.SignalEvent(System.Runtime.DurableInstancing.InstancePersistenceEvent,System.Runtime.DurableInstancing.InstanceOwner)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SignalEvent (persistenceEvent As InstancePersistenceEvent, owner As InstanceOwner)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SignalEvent(System::Runtime::DurableInstancing::InstancePersistenceEvent ^ persistenceEvent, System::Runtime::DurableInstancing::InstanceOwner ^ owner);" />
      <MemberSignature Language="F#" Value="member this.SignalEvent : System.Runtime.DurableInstancing.InstancePersistenceEvent * System.Runtime.DurableInstancing.InstanceOwner -&gt; unit" Usage="instanceStore.SignalEvent (persistenceEvent, owner)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="persistenceEvent" Type="System.Runtime.DurableInstancing.InstancePersistenceEvent" />
        <Parameter Name="owner" Type="System.Runtime.DurableInstancing.InstanceOwner" />
      </Parameters>
      <Docs>
        <param name="persistenceEvent"><span data-ttu-id="1ea54-215">Событие сохраняемости, подлежащее отслеживанию.</span><span class="sxs-lookup"><span data-stu-id="1ea54-215">The persistence event to be signaled.</span></span></param>
        <param name="owner"><span data-ttu-id="1ea54-216">Владелец экземпляра.</span><span class="sxs-lookup"><span data-stu-id="1ea54-216">The instance owner.</span></span></param>
        <summary><span data-ttu-id="1ea54-217">Экземпляр хранилища вызывает этот метод для указания события.</span><span class="sxs-lookup"><span data-stu-id="1ea54-217">An instance store invokes this method to signal an event.</span></span> <span data-ttu-id="1ea54-218">Приложение рабочего процесса, которое подписывается на данное событие сохраняемости, получает событие и выполняет соответствующее действие.</span><span class="sxs-lookup"><span data-stu-id="1ea54-218">A workflow host that subscribes for this persistence event receives it and takes an appropriate action.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryCommand">
      <MemberSignature Language="C#" Value="protected internal virtual bool TryCommand (System.Runtime.DurableInstancing.InstancePersistenceContext context, System.Runtime.DurableInstancing.InstancePersistenceCommand command, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance bool TryCommand(class System.Runtime.DurableInstancing.InstancePersistenceContext context, class System.Runtime.DurableInstancing.InstancePersistenceCommand command, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.TryCommand(System.Runtime.DurableInstancing.InstancePersistenceContext,System.Runtime.DurableInstancing.InstancePersistenceCommand,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function TryCommand (context As InstancePersistenceContext, command As InstancePersistenceCommand, timeout As TimeSpan) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual bool TryCommand(System::Runtime::DurableInstancing::InstancePersistenceContext ^ context, System::Runtime::DurableInstancing::InstancePersistenceCommand ^ command, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="abstract member TryCommand : System.Runtime.DurableInstancing.InstancePersistenceContext * System.Runtime.DurableInstancing.InstancePersistenceCommand * TimeSpan -&gt; bool&#xA;override this.TryCommand : System.Runtime.DurableInstancing.InstancePersistenceContext * System.Runtime.DurableInstancing.InstancePersistenceCommand * TimeSpan -&gt; bool" Usage="instanceStore.TryCommand (context, command, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Runtime.DurableInstancing.InstancePersistenceContext" />
        <Parameter Name="command" Type="System.Runtime.DurableInstancing.InstancePersistenceCommand" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="1ea54-219">Контекст экземпляра.</span><span class="sxs-lookup"><span data-stu-id="1ea54-219">The instance context.</span></span></param>
        <param name="command"><span data-ttu-id="1ea54-220">Команда для выполнения.</span><span class="sxs-lookup"><span data-stu-id="1ea54-220">The command to be executed.</span></span></param>
        <param name="timeout"><span data-ttu-id="1ea54-221">Значение времени ожидания для операции.</span><span class="sxs-lookup"><span data-stu-id="1ea54-221">Timeout value for the operation.</span></span></param>
        <summary><span data-ttu-id="1ea54-222">Поставщик сохраняемости применяет этот метод, в результате чего определяется, может ли быть выполнена конкретная команда сохраняемости, и, если команда выполнима, происходит ее асинхронное выполнение.</span><span class="sxs-lookup"><span data-stu-id="1ea54-222">A persistence provider implements this method, which determines whether a particular persistence command can be executed and if the command can be executed executes it asynchronously.</span></span></summary>
        <returns><span data-ttu-id="1ea54-223">Реализация поставщика сохраняемости должна возвратить значение <see langword="false" /> в том случае, если она не поддерживает передачу команды в качестве параметра, в противном случае должно возвращаться значение <see langword="true" /> или исключение.</span><span class="sxs-lookup"><span data-stu-id="1ea54-223">A persistence provider implementation should return <see langword="false" /> if it doesn't support the command passed as a parameter; otherwise it should return <see langword="true" /> or throw an exception.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ea54-224">Если команда выполнима, то, чтобы предоставить результаты команды, поставщик сохраняемости вызывает из сущности <xref:System.Runtime.DurableInstancing.InstancePersistenceContext> необходимые методы.</span><span class="sxs-lookup"><span data-stu-id="1ea54-224">If the command can be executed, the persistence provider calls relevant methods on the <xref:System.Runtime.DurableInstancing.InstancePersistenceContext> to provide the results of the command.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WaitForEvents">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.List&lt;System.Runtime.DurableInstancing.InstancePersistenceEvent&gt; WaitForEvents (System.Runtime.DurableInstancing.InstanceHandle handle, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.List`1&lt;class System.Runtime.DurableInstancing.InstancePersistenceEvent&gt; WaitForEvents(class System.Runtime.DurableInstancing.InstanceHandle handle, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.WaitForEvents(System.Runtime.DurableInstancing.InstanceHandle,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function WaitForEvents (handle As InstanceHandle, timeout As TimeSpan) As List(Of InstancePersistenceEvent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::List&lt;System::Runtime::DurableInstancing::InstancePersistenceEvent ^&gt; ^ WaitForEvents(System::Runtime::DurableInstancing::InstanceHandle ^ handle, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="member this.WaitForEvents : System.Runtime.DurableInstancing.InstanceHandle * TimeSpan -&gt; System.Collections.Generic.List&lt;System.Runtime.DurableInstancing.InstancePersistenceEvent&gt;" Usage="instanceStore.WaitForEvents (handle, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;System.Runtime.DurableInstancing.InstancePersistenceEvent&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handle" Type="System.Runtime.DurableInstancing.InstanceHandle" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="handle"><span data-ttu-id="1ea54-225">Дескриптор экземпляра привязывается к этому событию.</span><span class="sxs-lookup"><span data-stu-id="1ea54-225">The instance handle that is bound to the event.</span></span></param>
        <param name="timeout"><span data-ttu-id="1ea54-226">Интервал времени, по истечении которого ожидающая операция прекращает ждать.</span><span class="sxs-lookup"><span data-stu-id="1ea54-226">The time span after which the waiting operation times out.</span></span></param>
        <summary><span data-ttu-id="1ea54-227">Узел рабочего процесса обычно вызывает этот метод для ожидания момента наступления отслеживаемого события.</span><span class="sxs-lookup"><span data-stu-id="1ea54-227">A workflow host typically invokes this method to wait for an event to be signaled.</span></span></summary>
        <returns><span data-ttu-id="1ea54-228">Список объектов <see cref="T:System.Runtime.DurableInstancing.InstancePersistenceEvent" />.</span><span class="sxs-lookup"><span data-stu-id="1ea54-228">A list of <see cref="T:System.Runtime.DurableInstancing.InstancePersistenceEvent" /> objects.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
