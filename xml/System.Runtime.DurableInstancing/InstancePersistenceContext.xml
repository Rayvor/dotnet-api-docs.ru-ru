<Type Name="InstancePersistenceContext" FullName="System.Runtime.DurableInstancing.InstancePersistenceContext">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4db0164752fb56f2e4856943dd1c36ae0bfe97c9" /><Meta Name="ms.sourcegitcommit" Value="c573d537afba2d4c1463538f1095f2f155025464" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="10/16/2019" /><Meta Name="ms.locfileid" Value="72406039" /></Metadata><TypeSignature Language="C#" Value="public sealed class InstancePersistenceContext" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit InstancePersistenceContext extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.DurableInstancing.InstancePersistenceContext" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class InstancePersistenceContext" />
  <TypeSignature Language="C++ CLI" Value="public ref class InstancePersistenceContext sealed" />
  <TypeSignature Language="F#" Value="type InstancePersistenceContext = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="2cc21-101">Представляет сведения о состоянии выполнения в момент выполнения команды сохраняемости.</span><span class="sxs-lookup"><span data-stu-id="2cc21-101">Represents execution state information while a persistence command is being executed.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2cc21-102">Экземпляр этого класса передается в метод TryCommand в реализации поставщика сохраняемости.</span><span class="sxs-lookup"><span data-stu-id="2cc21-102">An instance of this class is passed to the TryCommand method of persistence provider implementations.</span></span> <span data-ttu-id="2cc21-103">Поставщики сохраняемости используют этот класс для проверки представления экземпляра в памяти, а также для указания результатов операций во внешнем хранилище, которые могут повлиять на представление или другой контекст в памяти.</span><span class="sxs-lookup"><span data-stu-id="2cc21-103">Persistence providers use this class to inspect the in-memory view of the instance as well as indicate the results of operations on the external store which may affect the view or other in-memory context.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AssociatedInstanceKey">
      <MemberSignature Language="C#" Value="public void AssociatedInstanceKey (Guid key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AssociatedInstanceKey(valuetype System.Guid key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstancePersistenceContext.AssociatedInstanceKey(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AssociatedInstanceKey (key As Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AssociatedInstanceKey(Guid key);" />
      <MemberSignature Language="F#" Value="member this.AssociatedInstanceKey : Guid -&gt; unit" Usage="instancePersistenceContext.AssociatedInstanceKey key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="2cc21-104">Идентификатор ключа экземпляра для связанного ключа.</span><span class="sxs-lookup"><span data-stu-id="2cc21-104">The instance key identifier  for the key that has been associated.</span></span> <span data-ttu-id="2cc21-105">Не должно иметь значение Guid.Empty.</span><span class="sxs-lookup"><span data-stu-id="2cc21-105">Must not be Guid.Empty.</span></span></param>
        <summary><span data-ttu-id="2cc21-106">Указывает, что поставщик сохраняемости успешно связал ключ с текущим экземпляром в хранилище экземпляров.</span><span class="sxs-lookup"><span data-stu-id="2cc21-106">Indicates that the persistence provider has successfully associated a key to the current instance in the instance store.</span></span> <span data-ttu-id="2cc21-107">Идентификатор ключа указывается в качестве параметра.</span><span class="sxs-lookup"><span data-stu-id="2cc21-107">The identifier of the key is specified as a parameter.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2cc21-108">Ключ экземпляра должен быть несвязан.</span><span class="sxs-lookup"><span data-stu-id="2cc21-108">The instance key must be unassociated.</span></span> <span data-ttu-id="2cc21-109">Текущий дескриптор экземпляра должен быть привязан к экземпляру, а также к блокировке для этого экземпляра.</span><span class="sxs-lookup"><span data-stu-id="2cc21-109">The current instance handle must be bound to an instance as well as a lock on that instance.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginBindReclaimedLock">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginBindReclaimedLock (long instanceVersion, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginBindReclaimedLock(int64 instanceVersion, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstancePersistenceContext.BeginBindReclaimedLock(System.Int64,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginBindReclaimedLock (instanceVersion As Long, timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginBindReclaimedLock(long instanceVersion, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginBindReclaimedLock : int64 * TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="instancePersistenceContext.BeginBindReclaimedLock (instanceVersion, timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceVersion" Type="System.Int64" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instanceVersion"><span data-ttu-id="2cc21-110">Версия блокировки, удерживаемой для экземпляра, или нулевое значение, если в поставщике сохраняемости не реализованы версии блокировки.</span><span class="sxs-lookup"><span data-stu-id="2cc21-110">The version of the lock held on the instance, or zero if the persistence provider does not implement lock versions.</span></span></param>
        <param name="timeout"><span data-ttu-id="2cc21-111">Время ожидания для асинхронной операции.</span><span class="sxs-lookup"><span data-stu-id="2cc21-111">The timeout period for the asynchronous operation.</span></span></param>
        <param name="callback"><span data-ttu-id="2cc21-112">Метод, вызываемый при завершении этой операции.</span><span class="sxs-lookup"><span data-stu-id="2cc21-112">The method to be called when the operation is completed.</span></span></param>
        <param name="state"><span data-ttu-id="2cc21-113">Сведения о состоянии, связанные с асинхронной операцией.</span><span class="sxs-lookup"><span data-stu-id="2cc21-113">The state information associated with the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="2cc21-114">Начинает асинхронную операцию привязки существующей блокировки для экземпляра к текущему дескриптору экземпляра.</span><span class="sxs-lookup"><span data-stu-id="2cc21-114">Begin an asynchronous operation to bind an existing lock on an instance to the current instance handle.</span></span> <span data-ttu-id="2cc21-115">Версия существующей блокировки передается в качестве параметра.</span><span class="sxs-lookup"><span data-stu-id="2cc21-115">The version of the existing lock is passed as a parameter.</span></span></summary>
        <returns><span data-ttu-id="2cc21-116">Состояние асинхронной операции.</span><span class="sxs-lookup"><span data-stu-id="2cc21-116">The status of an asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2cc21-117">При получении блокировки поставщик сохраняемости может определить, что текущий экземпляр уже заблокирован в текущем хранилище.</span><span class="sxs-lookup"><span data-stu-id="2cc21-117">When attempting to acquire a lock, the persistence provider may decide that the current instance is already locked in the current store.</span></span> <span data-ttu-id="2cc21-118">Если маркер блокировки соответствует маркеру блокировки текущего маркера, то поставщик сохраняемости может попытаться восстановить блокировку, проверив ее версию и передав ее в Бегинбиндреклаимедлокк.</span><span class="sxs-lookup"><span data-stu-id="2cc21-118">If the lock token matches the current handle's lock token, then the persistence provider can attempt to reclaim the lock by inspecting its version and passing it to BeginBindReclaimedLock.</span></span> <span data-ttu-id="2cc21-119">Поставщик сохраняемости не должен изменять экземпляр до успешного освобождения блокировки.</span><span class="sxs-lookup"><span data-stu-id="2cc21-119">The persistence provider must not make changes to the instance until the lock is successfully reclaimed.</span></span> <span data-ttu-id="2cc21-120">Если к блокировке не привязан ни один другой дескриптор, то операция BeginBindReclaimedLock завершается успешно и текущий дескриптор становится привязанным к блокировке.</span><span class="sxs-lookup"><span data-stu-id="2cc21-120">If no other handle is bound to the lock, then the BeginBindReclaimedLock operation succeeds and the current handle becomes bound to the lock.</span></span> <span data-ttu-id="2cc21-121">В противном случае BeginBindReclaimedLock или EndBindReclaimedLock вызывает исключение InstanceHandleConflictException.</span><span class="sxs-lookup"><span data-stu-id="2cc21-121">Otherwise, BeginBindReclaimedLock or EndBindReclaimedLock throws InstanceHandleConflictException.</span></span> <span data-ttu-id="2cc21-122">Если в других дескрипторах выполняются команда, то операция может ожидать завершения этих команд, чтобы определить возможность освобождения блокировки.</span><span class="sxs-lookup"><span data-stu-id="2cc21-122">If commands are in progress on other handles, the operation may not complete while waiting for the outcome of those commands to decide whether the lock can be reclaimed.</span></span>  
  
 <span data-ttu-id="2cc21-123">Текущий дескриптор экземпляра должен быть привязан к экземпляру и владельцу блокировки.</span><span class="sxs-lookup"><span data-stu-id="2cc21-123">The current instance handle must be bound to an instance and a lock owner.</span></span> <span data-ttu-id="2cc21-124">Экземпляр не должен быть завершен.</span><span class="sxs-lookup"><span data-stu-id="2cc21-124">The instance must not be completed.</span></span> <span data-ttu-id="2cc21-125">Маркер блокировки, связанный с владельцем блокировки, используется для определения владельца блокировки.</span><span class="sxs-lookup"><span data-stu-id="2cc21-125">The lock token associated with the lock owner is used to identify the owner of the lock.</span></span>  
  
 <span data-ttu-id="2cc21-126">После привязки блокировки к дескриптору она остается привязанной в течение всего времени существования дескриптора.</span><span class="sxs-lookup"><span data-stu-id="2cc21-126">Once a lock is bound to a handle, it remains bound for the lifetime of the handle.</span></span> <span data-ttu-id="2cc21-127">Маркер блокировки и версию экземпляра нельзя изменять.</span><span class="sxs-lookup"><span data-stu-id="2cc21-127">Neither the lock token nor the instance version can be changed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginExecute">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginExecute (System.Runtime.DurableInstancing.InstancePersistenceCommand command, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginExecute(class System.Runtime.DurableInstancing.InstancePersistenceCommand command, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstancePersistenceContext.BeginExecute(System.Runtime.DurableInstancing.InstancePersistenceCommand,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginExecute (command As InstancePersistenceCommand, timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginExecute(System::Runtime::DurableInstancing::InstancePersistenceCommand ^ command, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginExecute : System.Runtime.DurableInstancing.InstancePersistenceCommand * TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="instancePersistenceContext.BeginExecute (command, timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="System.Runtime.DurableInstancing.InstancePersistenceCommand" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="command"><span data-ttu-id="2cc21-128">Команда сохраняемости для выполнения.</span><span class="sxs-lookup"><span data-stu-id="2cc21-128">The persistence command to be executed.</span></span></param>
        <param name="timeout"><span data-ttu-id="2cc21-129">Значение времени ожидания для операции.</span><span class="sxs-lookup"><span data-stu-id="2cc21-129">The time-out value for the operation.</span></span></param>
        <param name="callback"><span data-ttu-id="2cc21-130">Делегат, принимающий уведомление об асинхронном получении, завершенном операцией запроса.</span><span class="sxs-lookup"><span data-stu-id="2cc21-130">The delegate that receives the notification of the asynchronous receive that a request operation completes.</span></span></param>
        <param name="state"><span data-ttu-id="2cc21-131">Сведения о состоянии.</span><span class="sxs-lookup"><span data-stu-id="2cc21-131">The state information.</span></span></param>
        <summary><span data-ttu-id="2cc21-132">Начинает асинхронное выполнение команды сохраняемости.</span><span class="sxs-lookup"><span data-stu-id="2cc21-132">Begins executing a persistence command asynchronously.</span></span></summary>
        <returns><span data-ttu-id="2cc21-133">Состояние асинхронной операции.</span><span class="sxs-lookup"><span data-stu-id="2cc21-133">The status of an asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2cc21-134">Поставщик сохраняемости может использовать этот метод, чтобы выполнять подкоманды в составе команды.</span><span class="sxs-lookup"><span data-stu-id="2cc21-134">A persistence provider can use this method to execute sub-commands as part of a command.</span></span> <span data-ttu-id="2cc21-135">Подкоманда будет выполняться с помощью BeginTryCommand аналогично командам, передаваемым в InstanceStore.BeginExecute.</span><span class="sxs-lookup"><span data-stu-id="2cc21-135">The sub-command will be executed using BeginTryCommand, similar to commands passed to InstanceStore.BeginExecute.</span></span> <span data-ttu-id="2cc21-136">Команды можно вкладывать, однако для команды в каждый момент времени не может выполняться больше одной подкоманды.</span><span class="sxs-lookup"><span data-stu-id="2cc21-136">Commands can be nested, but a command must not execute more than one sub-command at a time.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BindAcquiredLock">
      <MemberSignature Language="C#" Value="public void BindAcquiredLock (long instanceVersion);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BindAcquiredLock(int64 instanceVersion) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstancePersistenceContext.BindAcquiredLock(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub BindAcquiredLock (instanceVersion As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BindAcquiredLock(long instanceVersion);" />
      <MemberSignature Language="F#" Value="member this.BindAcquiredLock : int64 -&gt; unit" Usage="instancePersistenceContext.BindAcquiredLock instanceVersion" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceVersion" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="instanceVersion"><span data-ttu-id="2cc21-137">Версия блокировки, полученной для экземпляра, или нулевое значение, если в поставщике сохраняемости не реализованы версии блокировки.</span><span class="sxs-lookup"><span data-stu-id="2cc21-137">Version of the lock acquired on the instance, or zero if the persistence provider does not implement lock versions.</span></span></param>
        <summary><span data-ttu-id="2cc21-138">Привязывает полученную блокировку для экземпляра к текущему дескриптору экземпляра.</span><span class="sxs-lookup"><span data-stu-id="2cc21-138">Binds a newly acquired lock on an instance to the current instance handle.</span></span> <span data-ttu-id="2cc21-139">Версия полученной блокировки передается в качестве параметра.</span><span class="sxs-lookup"><span data-stu-id="2cc21-139">The version of the acquired lock is passed as a parameter.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2cc21-140">Если в поставщике сохраняемости реализованы версии блокировки, то при каждом получении блокировки для экземпляра версия во внешнем хранилище должна увеличиваться на единицу.</span><span class="sxs-lookup"><span data-stu-id="2cc21-140">If a persistence provider implements lock versioning, then each time a lock is acquired on the instance, the version must be incremented by one in the external store.</span></span> <span data-ttu-id="2cc21-141">При первой блокировке экземпляра версия должна иметь значение 1.</span><span class="sxs-lookup"><span data-stu-id="2cc21-141">The first time the instance is locked, the version should be 1.</span></span> <span data-ttu-id="2cc21-142">При каждом получении блокировки предыдущая блокировка отменяется.</span><span class="sxs-lookup"><span data-stu-id="2cc21-142">Each lock acquisition invalidates the previous lock.</span></span> <span data-ttu-id="2cc21-143">Текущий дескриптор экземпляра должен быть привязан к экземпляру и владельцу блокировки.</span><span class="sxs-lookup"><span data-stu-id="2cc21-143">The current instance handle must be bound to an instance and a lock owner.</span></span> <span data-ttu-id="2cc21-144">Экземпляр не должен быть завершен.</span><span class="sxs-lookup"><span data-stu-id="2cc21-144">The instance must not be completed.</span></span> <span data-ttu-id="2cc21-145">Маркер блокировки, связанный с владельцем блокировки, используется для определения владельца блокировки</span><span class="sxs-lookup"><span data-stu-id="2cc21-145">The lock token associated with the lock owner is used to identify the owner of the lock</span></span>  
  
 <span data-ttu-id="2cc21-146">После привязки блокировки к дескриптору она остается привязанной в течение всего времени существования дескриптора.</span><span class="sxs-lookup"><span data-stu-id="2cc21-146">Once a lock is bound to a handle, it remains bound for the lifetime of the handle.</span></span> <span data-ttu-id="2cc21-147">Маркер блокировки и версию экземпляра нельзя изменять.</span><span class="sxs-lookup"><span data-stu-id="2cc21-147">Neither the lock token nor the instance version can be changed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BindEvent">
      <MemberSignature Language="C#" Value="public void BindEvent (System.Runtime.DurableInstancing.InstancePersistenceEvent persistenceEvent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BindEvent(class System.Runtime.DurableInstancing.InstancePersistenceEvent persistenceEvent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstancePersistenceContext.BindEvent(System.Runtime.DurableInstancing.InstancePersistenceEvent)" />
      <MemberSignature Language="VB.NET" Value="Public Sub BindEvent (persistenceEvent As InstancePersistenceEvent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BindEvent(System::Runtime::DurableInstancing::InstancePersistenceEvent ^ persistenceEvent);" />
      <MemberSignature Language="F#" Value="member this.BindEvent : System.Runtime.DurableInstancing.InstancePersistenceEvent -&gt; unit" Usage="instancePersistenceContext.BindEvent persistenceEvent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="persistenceEvent" Type="System.Runtime.DurableInstancing.InstancePersistenceEvent" />
      </Parameters>
      <Docs>
        <param name="persistenceEvent"><span data-ttu-id="2cc21-148">Объект <see cref="T:System.Runtime.DurableInstancing.InstancePersistenceEvent" />, содержащий сведения о событии.</span><span class="sxs-lookup"><span data-stu-id="2cc21-148">An <see cref="T:System.Runtime.DurableInstancing.InstancePersistenceEvent" /> object containing information about the event.</span></span></param>
        <summary><span data-ttu-id="2cc21-149">Привязывает событие <see cref="T:System.Runtime.DurableInstancing.InstancePersistenceEvent" /> к дескриптору экземпляра.</span><span class="sxs-lookup"><span data-stu-id="2cc21-149">Binds an <see cref="T:System.Runtime.DurableInstancing.InstancePersistenceEvent" /> to an instance handle.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BindInstance">
      <MemberSignature Language="C#" Value="public void BindInstance (Guid instanceId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BindInstance(valuetype System.Guid instanceId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstancePersistenceContext.BindInstance(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Sub BindInstance (instanceId As Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BindInstance(Guid instanceId);" />
      <MemberSignature Language="F#" Value="member this.BindInstance : Guid -&gt; unit" Usage="instancePersistenceContext.BindInstance instanceId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="instanceId"><span data-ttu-id="2cc21-150">Идентификатор экземпляра.</span><span class="sxs-lookup"><span data-stu-id="2cc21-150">An instance identifier.</span></span> <span data-ttu-id="2cc21-151">Не должно иметь значение Guid.Empty.</span><span class="sxs-lookup"><span data-stu-id="2cc21-151">Must not be Guid.Empty.</span></span></param>
        <summary><span data-ttu-id="2cc21-152">Привязывает экземпляр, идентификатор которого указан в качестве параметра для текущего дескриптора экземпляра.</span><span class="sxs-lookup"><span data-stu-id="2cc21-152">Binds an instance whose identifier is specified as a parameter to the current instance handle.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2cc21-153">После привязки экземпляра к дескриптору он остается привязанным в течение всего времени существования дескриптора.</span><span class="sxs-lookup"><span data-stu-id="2cc21-153">Once an instance is bound to a handle, it remains bound for the lifetime of the handle.</span></span> <span data-ttu-id="2cc21-154">К этому дескриптору нельзя привязать никакой другой экземпляр.</span><span class="sxs-lookup"><span data-stu-id="2cc21-154">No other instance can ever be bound to the handle.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BindInstanceOwner">
      <MemberSignature Language="C#" Value="public void BindInstanceOwner (Guid instanceOwnerId, Guid lockToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BindInstanceOwner(valuetype System.Guid instanceOwnerId, valuetype System.Guid lockToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstancePersistenceContext.BindInstanceOwner(System.Guid,System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Sub BindInstanceOwner (instanceOwnerId As Guid, lockToken As Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BindInstanceOwner(Guid instanceOwnerId, Guid lockToken);" />
      <MemberSignature Language="F#" Value="member this.BindInstanceOwner : Guid * Guid -&gt; unit" Usage="instancePersistenceContext.BindInstanceOwner (instanceOwnerId, lockToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceOwnerId" Type="System.Guid" />
        <Parameter Name="lockToken" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="instanceOwnerId"><span data-ttu-id="2cc21-155">Идентификатор для владельца экземпляра.</span><span class="sxs-lookup"><span data-stu-id="2cc21-155">The identifier for the instance owner.</span></span></param>
        <param name="lockToken"><span data-ttu-id="2cc21-156">Маркер блокировки владельца экземпляра.</span><span class="sxs-lookup"><span data-stu-id="2cc21-156">The lock token of the instance owner.</span></span> <span data-ttu-id="2cc21-157">Поставщик сохраняемости может использовать одно значение для идентификатора владельца экземпляра и для маркера блокировки владельца.</span><span class="sxs-lookup"><span data-stu-id="2cc21-157">A persistence provider may choose to use the same value for the instance owner identifier and the owner's lock token.</span></span></param>
        <summary><span data-ttu-id="2cc21-158">Привязывает владельца экземпляра к текущему дескриптору экземпляра.</span><span class="sxs-lookup"><span data-stu-id="2cc21-158">Binds an instance owner to the current instance handle.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2cc21-159">После привязки владельца экземпляра к дескриптору он остается привязанным в течение всего времени существования дескриптора.</span><span class="sxs-lookup"><span data-stu-id="2cc21-159">Once an instance owner is bound to a handle, it remains bound for the lifetime of the handle.</span></span> <span data-ttu-id="2cc21-160">К этому дескриптору нельзя привязать никакого другого владельца экземпляра.</span><span class="sxs-lookup"><span data-stu-id="2cc21-160">No other instance owner can ever be bound to the handle.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BindReclaimedLock">
      <MemberSignature Language="C#" Value="public void BindReclaimedLock (long instanceVersion, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BindReclaimedLock(int64 instanceVersion, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstancePersistenceContext.BindReclaimedLock(System.Int64,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub BindReclaimedLock (instanceVersion As Long, timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BindReclaimedLock(long instanceVersion, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="member this.BindReclaimedLock : int64 * TimeSpan -&gt; unit" Usage="instancePersistenceContext.BindReclaimedLock (instanceVersion, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceVersion" Type="System.Int64" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="instanceVersion"><span data-ttu-id="2cc21-161">Версия блокировки, удерживаемой для экземпляра, или нулевое значение, если в поставщике сохраняемости не реализованы версии блокировки.</span><span class="sxs-lookup"><span data-stu-id="2cc21-161">Version of the lock held on the instance, or zero if the persistence provider does not implement lock versions.</span></span></param>
        <param name="timeout"><span data-ttu-id="2cc21-162">Значение времени ожидания для операции.</span><span class="sxs-lookup"><span data-stu-id="2cc21-162">The time-out value for the operation.</span></span></param>
        <summary><span data-ttu-id="2cc21-163">Привязывает существующую блокировку для экземпляра к текущему дескриптору экземпляра.</span><span class="sxs-lookup"><span data-stu-id="2cc21-163">Binds an existing lock on an instance to the current instance handle.</span></span> <span data-ttu-id="2cc21-164">Версия существующей блокировки передается в качестве параметра.</span><span class="sxs-lookup"><span data-stu-id="2cc21-164">The version of the existing lock is passed as a parameter.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2cc21-165">При получении блокировки поставщик сохраняемости может определить, что текущий экземпляр уже заблокирован в текущем хранилище.</span><span class="sxs-lookup"><span data-stu-id="2cc21-165">When attempting to acquire a lock, the persistence provider may decide that the current instance is already locked in the current store.</span></span> <span data-ttu-id="2cc21-166">Если маркер блокировки соответствует маркеру блокировки текущего маркера, то поставщик сохраняемости может попытаться восстановить блокировку, проверив ее версию и передав ее в BindReclaimedLock.</span><span class="sxs-lookup"><span data-stu-id="2cc21-166">If the lock token matches the current handle's lock token, then the persistence provider can attempt to reclaim the lock by inspecting its version and passing it to BindReclaimedLock.</span></span> <span data-ttu-id="2cc21-167">Поставщик сохраняемости не должен изменять экземпляр до успешного освобождения блокировки.</span><span class="sxs-lookup"><span data-stu-id="2cc21-167">The persistence provider must not make changes to the instance until the lock is successfully reclaimed.</span></span> <span data-ttu-id="2cc21-168">Если к блокировке не привязан ни один другой дескриптор, то BindReclaimedLock завершается успешно и текущий дескриптор становится привязанным к блокировке.</span><span class="sxs-lookup"><span data-stu-id="2cc21-168">If no other handle is bound to the lock, then BindReclaimedLock succeeds and the current handle becomes bound to the lock.</span></span> <span data-ttu-id="2cc21-169">В противном случае BindReclaimedLock вызывает исключение InstanceHandleConflictException.</span><span class="sxs-lookup"><span data-stu-id="2cc21-169">Otherwise, BindReclaimedLock throws InstanceHandleConflictException.</span></span> <span data-ttu-id="2cc21-170">Если в других дескрипторах выполняются команды, то BindReclaimedLock может ожидать завершения этих команд, чтобы определить возможность освобождения блокировки.</span><span class="sxs-lookup"><span data-stu-id="2cc21-170">If commands are in progress on other handles, BindReclaimedLock may block waiting for the outcome of those commands before deciding whether the lock can be reclaimed.</span></span>  
  
 <span data-ttu-id="2cc21-171">Текущий дескриптор экземпляра должен быть привязан к экземпляру и владельцу блокировки.</span><span class="sxs-lookup"><span data-stu-id="2cc21-171">The current instance handle must be bound to an instance and a lock owner.</span></span> <span data-ttu-id="2cc21-172">Экземпляр не должен быть завершен.</span><span class="sxs-lookup"><span data-stu-id="2cc21-172">The instance must not be completed.</span></span> <span data-ttu-id="2cc21-173">Маркер блокировки, связанный с владельцем блокировки, используется для определения владельца блокировки.</span><span class="sxs-lookup"><span data-stu-id="2cc21-173">The lock token associated with the lock owner is used to identify the owner of the lock.</span></span>  
  
 <span data-ttu-id="2cc21-174">После привязки блокировки к дескриптору она остается привязанной в течение всего времени существования дескриптора.</span><span class="sxs-lookup"><span data-stu-id="2cc21-174">Once a lock is bound to a handle, it remains bound for the lifetime of the handle.</span></span> <span data-ttu-id="2cc21-175">Маркер блокировки и версию экземпляра нельзя изменять.</span><span class="sxs-lookup"><span data-stu-id="2cc21-175">Neither the lock token nor the instance version can be changed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CompletedInstance">
      <MemberSignature Language="C#" Value="public void CompletedInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CompletedInstance() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstancePersistenceContext.CompletedInstance" />
      <MemberSignature Language="VB.NET" Value="Public Sub CompletedInstance ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CompletedInstance();" />
      <MemberSignature Language="F#" Value="member this.CompletedInstance : unit -&gt; unit" Usage="instancePersistenceContext.CompletedInstance " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2cc21-176">Указывает, что поставщик сохраняемости успешно пометил текущий экземпляр как завершенный в хранилище экземпляров.</span><span class="sxs-lookup"><span data-stu-id="2cc21-176">Indicates that the persistence provider has successfully marked the current instance as complete in the instance store.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2cc21-177">Текущий дескриптор экземпляра должен быть привязан к экземпляру, а также к блокировке для этого экземпляра.</span><span class="sxs-lookup"><span data-stu-id="2cc21-177">The current instance handle must be bound to an instance as well as a lock on that instance.</span></span> <span data-ttu-id="2cc21-178">Экземпляр должен быть инициализирован и не должен быть уже завершен.</span><span class="sxs-lookup"><span data-stu-id="2cc21-178">The instance must be initialized and not be already completed.</span></span> <span data-ttu-id="2cc21-179">(Экземпляр считается инициализированным, если в нем когда-либо сохранялся набор данных экземпляра.) Все ключи, связанные с экземпляром, должны быть завершены.</span><span class="sxs-lookup"><span data-stu-id="2cc21-179">(An instance is initialized if a set of instance data has ever been persisted to it.) All of the keys associated to the instance must be completed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CompletedInstanceKey">
      <MemberSignature Language="C#" Value="public void CompletedInstanceKey (Guid key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CompletedInstanceKey(valuetype System.Guid key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstancePersistenceContext.CompletedInstanceKey(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CompletedInstanceKey (key As Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CompletedInstanceKey(Guid key);" />
      <MemberSignature Language="F#" Value="member this.CompletedInstanceKey : Guid -&gt; unit" Usage="instancePersistenceContext.CompletedInstanceKey key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="2cc21-180">Идентификатор ключа экземпляра для завершенного ключа.</span><span class="sxs-lookup"><span data-stu-id="2cc21-180">The instance key identifier for the key that has been completed.</span></span> <span data-ttu-id="2cc21-181">Не должно иметь значение Guid.Empty.</span><span class="sxs-lookup"><span data-stu-id="2cc21-181">Must not be Guid.Empty.</span></span></param>
        <summary><span data-ttu-id="2cc21-182">Указывает, что поставщик сохраняемости успешно пометил ключ как завершенный в хранилище экземпляров.</span><span class="sxs-lookup"><span data-stu-id="2cc21-182">Indicates that the persistence provider has successfully marked a key as complete in the external store.</span></span> <span data-ttu-id="2cc21-183">Идентификатор ключа указывается в качестве параметра.</span><span class="sxs-lookup"><span data-stu-id="2cc21-183">The identifier of the key is specified as a parameter.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2cc21-184">Текущий дескриптор экземпляра должен быть привязан к экземпляру, а также к блокировке для этого экземпляра.</span><span class="sxs-lookup"><span data-stu-id="2cc21-184">The current instance handle must be bound to an instance as well as a lock on that instance.</span></span> <span data-ttu-id="2cc21-185">Ключ экземпляра должен быть связан с текущим экземпляром и не должен быть уже завершен.</span><span class="sxs-lookup"><span data-stu-id="2cc21-185">The instance key must be associated to the current instance and not be already completed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBindReclaimedLockException">
      <MemberSignature Language="C#" Value="public Exception CreateBindReclaimedLockException (long instanceVersion);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Exception CreateBindReclaimedLockException(int64 instanceVersion) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstancePersistenceContext.CreateBindReclaimedLockException(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateBindReclaimedLockException (instanceVersion As Long) As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Exception ^ CreateBindReclaimedLockException(long instanceVersion);" />
      <MemberSignature Language="F#" Value="member this.CreateBindReclaimedLockException : int64 -&gt; Exception" Usage="instancePersistenceContext.CreateBindReclaimedLockException instanceVersion" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceVersion" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="instanceVersion"><span data-ttu-id="2cc21-186">Версия блокировки, удерживаемой для экземпляра, или нулевое значение, если в поставщике сохраняемости не реализованы версии блокировки.</span><span class="sxs-lookup"><span data-stu-id="2cc21-186">The version of the lock held on the instance, or zero if the persistence provider does not implement lock versions.</span></span></param>
        <summary><span data-ttu-id="2cc21-187">Создает экземпляр исключения, которое вызывается в TryCommand, чтобы запустить поведение BindReclaimedLock.</span><span class="sxs-lookup"><span data-stu-id="2cc21-187">Creates an instance of an exception which can be thrown from TryCommand to trigger BindReclaimedLock behavior.</span></span></summary>
        <returns><span data-ttu-id="2cc21-188">Исключение.</span><span class="sxs-lookup"><span data-stu-id="2cc21-188">An exception.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2cc21-189">Пример кода:</span><span class="sxs-lookup"><span data-stu-id="2cc21-189">Sample code:</span></span>  
  
```  
  
protected override bool TryCommand(InstancePersistenceContext context, InstancePersistenceCommand command, TimeSpan timeout)  
{  
    throw context.CreateBindReclaimedLockException(5);  
}  
is equivalent to  
protected override bool TryCommand(InstancePersistenceContext context, InstancePersistenceCommand command, TimeSpan timeout)  
{  
    context.BindReclaimedLock(5, timeout);  
    throw new OperationCanceledException();  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndBindReclaimedLock">
      <MemberSignature Language="C#" Value="public void EndBindReclaimedLock (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndBindReclaimedLock(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstancePersistenceContext.EndBindReclaimedLock(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndBindReclaimedLock (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndBindReclaimedLock(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="member this.EndBindReclaimedLock : IAsyncResult -&gt; unit" Usage="instancePersistenceContext.EndBindReclaimedLock result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="2cc21-190">Результат асинхронной операции.</span><span class="sxs-lookup"><span data-stu-id="2cc21-190">The result of the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="2cc21-191">Завершает асинхронную операцию, запущенную методом <see cref="M:System.Runtime.DurableInstancing.InstancePersistenceContext.BeginBindReclaimedLock(System.Int64,System.TimeSpan,System.AsyncCallback,System.Object)" />.</span><span class="sxs-lookup"><span data-stu-id="2cc21-191">Ends the asynchronous operation started by the <see cref="M:System.Runtime.DurableInstancing.InstancePersistenceContext.BeginBindReclaimedLock(System.Int64,System.TimeSpan,System.AsyncCallback,System.Object)" /> method.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndExecute">
      <MemberSignature Language="C#" Value="public void EndExecute (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndExecute(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstancePersistenceContext.EndExecute(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndExecute (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndExecute(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="member this.EndExecute : IAsyncResult -&gt; unit" Usage="instancePersistenceContext.EndExecute result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="2cc21-192">Состояние асинхронной операции.</span><span class="sxs-lookup"><span data-stu-id="2cc21-192">The status of an asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="2cc21-193">Завершает асинхронную операцию.</span><span class="sxs-lookup"><span data-stu-id="2cc21-193">Ends the asynchronous operation.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="public void Execute (System.Runtime.DurableInstancing.InstancePersistenceCommand command, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Execute(class System.Runtime.DurableInstancing.InstancePersistenceCommand command, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstancePersistenceContext.Execute(System.Runtime.DurableInstancing.InstancePersistenceCommand,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Execute (command As InstancePersistenceCommand, timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Execute(System::Runtime::DurableInstancing::InstancePersistenceCommand ^ command, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="member this.Execute : System.Runtime.DurableInstancing.InstancePersistenceCommand * TimeSpan -&gt; unit" Usage="instancePersistenceContext.Execute (command, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="System.Runtime.DurableInstancing.InstancePersistenceCommand" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="command"><span data-ttu-id="2cc21-194">Команда сохраняемости для выполнения.</span><span class="sxs-lookup"><span data-stu-id="2cc21-194">The persistence command to be executed.</span></span></param>
        <param name="timeout"><span data-ttu-id="2cc21-195">Значение времени ожидания для операции.</span><span class="sxs-lookup"><span data-stu-id="2cc21-195">The time-out value for the operation.</span></span></param>
        <summary><span data-ttu-id="2cc21-196">Выполняет команду сохраняемости.</span><span class="sxs-lookup"><span data-stu-id="2cc21-196">Executes a persistence command.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2cc21-197">Поставщик сохраняемости может использовать этот метод, чтобы выполнять подкоманды в составе команды.</span><span class="sxs-lookup"><span data-stu-id="2cc21-197">A persistence provider can use this method to execute sub-commands as part of a command.</span></span> <span data-ttu-id="2cc21-198">Подкоманда будет выполняться с помощью TryCommand аналогично командам, передаваемым в InstanceStore.Execute.</span><span class="sxs-lookup"><span data-stu-id="2cc21-198">The sub-command will be executed using TryCommand, similar to commands passed to InstanceStore.Execute.</span></span> <span data-ttu-id="2cc21-199">Команды можно вкладывать, однако для команды в каждый момент времени не может выполняться больше одной подкоманды.</span><span class="sxs-lookup"><span data-stu-id="2cc21-199">Commands can be nested, but a command must not execute more than one sub-command at a time.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InstanceHandle">
      <MemberSignature Language="C#" Value="public System.Runtime.DurableInstancing.InstanceHandle InstanceHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Runtime.DurableInstancing.InstanceHandle InstanceHandle" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.DurableInstancing.InstancePersistenceContext.InstanceHandle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InstanceHandle As InstanceHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::DurableInstancing::InstanceHandle ^ InstanceHandle { System::Runtime::DurableInstancing::InstanceHandle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InstanceHandle : System.Runtime.DurableInstancing.InstanceHandle" Usage="System.Runtime.DurableInstancing.InstancePersistenceContext.InstanceHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.DurableInstancing.InstanceHandle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2cc21-200">Возвращает текущий дескриптор экземпляра.</span><span class="sxs-lookup"><span data-stu-id="2cc21-200">Gets the current instance handle.</span></span></summary>
        <value><span data-ttu-id="2cc21-201">Текущий дескриптор экземпляра.</span><span class="sxs-lookup"><span data-stu-id="2cc21-201">The current instance handle.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InstanceVersion">
      <MemberSignature Language="C#" Value="public long InstanceVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 InstanceVersion" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.DurableInstancing.InstancePersistenceContext.InstanceVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InstanceVersion As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long InstanceVersion { long get(); };" />
      <MemberSignature Language="F#" Value="member this.InstanceVersion : int64" Usage="System.Runtime.DurableInstancing.InstancePersistenceContext.InstanceVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2cc21-202">Возвращает версию блокировки, удерживаемой текущим дескриптором экземпляра для текущего экземпляра.</span><span class="sxs-lookup"><span data-stu-id="2cc21-202">Gets the version of the lock held on the current instance by the current instance handle.</span></span></summary>
        <value><span data-ttu-id="2cc21-203">Версия блокировки экземпляра, привязанная к текущему экземпляру экземпляра, или значение-1, если маркер не привязан к блокировке.</span><span class="sxs-lookup"><span data-stu-id="2cc21-203">The version of the instance lock bound to the current instance handle, or -1 if the handle isn't bound to a lock.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2cc21-204">Поставщик сохраняемости должен сверить это значение с версией блокировки, удерживаемой для экземпляра в хранилище экземпляров, когда выполняется операция, для которой требуется блокировка (например, сохранение данных экземпляра), используя дескриптор, привязанный к блокировке.</span><span class="sxs-lookup"><span data-stu-id="2cc21-204">The persistence provider should check this value against the lock version of the lock held on an instance in the instance store when performing an operation that requires a lock (such as persisting instance data) using a handle bound to the lock.</span></span> <span data-ttu-id="2cc21-205">Если версия блокировки не совпадает, команда должна завершиться с исключением InstanceLockLostException.</span><span class="sxs-lookup"><span data-stu-id="2cc21-205">If the lock version doesn't match, the command should fail with InstanceLockLostException.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InstanceView">
      <MemberSignature Language="C#" Value="public System.Runtime.DurableInstancing.InstanceView InstanceView { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Runtime.DurableInstancing.InstanceView InstanceView" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.DurableInstancing.InstancePersistenceContext.InstanceView" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InstanceView As InstanceView" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::DurableInstancing::InstanceView ^ InstanceView { System::Runtime::DurableInstancing::InstanceView ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InstanceView : System.Runtime.DurableInstancing.InstanceView" Usage="System.Runtime.DurableInstancing.InstancePersistenceContext.InstanceView" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.DurableInstancing.InstanceView</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2cc21-206">Возвращает объект представления экземпляра, который представляет состояние текущего экземпляра в памяти.</span><span class="sxs-lookup"><span data-stu-id="2cc21-206">Gets the instance view object that represents the in-memory state of the current instance.</span></span> <span data-ttu-id="2cc21-207">В этом представлении отражаются обновления по мере их выполнения текущей командой.</span><span class="sxs-lookup"><span data-stu-id="2cc21-207">This view reflects updates as they are made by the command in progress.</span></span></summary>
        <value><span data-ttu-id="2cc21-208">Объект представления экземпляра.</span><span class="sxs-lookup"><span data-stu-id="2cc21-208">The instance view object.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadedInstance">
      <MemberSignature Language="C#" Value="public void LoadedInstance (System.Runtime.DurableInstancing.InstanceState state, System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue&gt; instanceData, System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue&gt; instanceMetadata, System.Collections.Generic.IDictionary&lt;Guid,System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue&gt;&gt; associatedInstanceKeyMetadata, System.Collections.Generic.IDictionary&lt;Guid,System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue&gt;&gt; completedInstanceKeyMetadata);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LoadedInstance(valuetype System.Runtime.DurableInstancing.InstanceState state, class System.Collections.Generic.IDictionary`2&lt;class System.Xml.Linq.XName, class System.Runtime.DurableInstancing.InstanceValue&gt; instanceData, class System.Collections.Generic.IDictionary`2&lt;class System.Xml.Linq.XName, class System.Runtime.DurableInstancing.InstanceValue&gt; instanceMetadata, class System.Collections.Generic.IDictionary`2&lt;valuetype System.Guid, class System.Collections.Generic.IDictionary`2&lt;class System.Xml.Linq.XName, class System.Runtime.DurableInstancing.InstanceValue&gt;&gt; associatedInstanceKeyMetadata, class System.Collections.Generic.IDictionary`2&lt;valuetype System.Guid, class System.Collections.Generic.IDictionary`2&lt;class System.Xml.Linq.XName, class System.Runtime.DurableInstancing.InstanceValue&gt;&gt; completedInstanceKeyMetadata) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstancePersistenceContext.LoadedInstance(System.Runtime.DurableInstancing.InstanceState,System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue},System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue},System.Collections.Generic.IDictionary{System.Guid,System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue}},System.Collections.Generic.IDictionary{System.Guid,System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue}})" />
      <MemberSignature Language="VB.NET" Value="Public Sub LoadedInstance (state As InstanceState, instanceData As IDictionary(Of XName, InstanceValue), instanceMetadata As IDictionary(Of XName, InstanceValue), associatedInstanceKeyMetadata As IDictionary(Of Guid, IDictionary(Of XName, InstanceValue)), completedInstanceKeyMetadata As IDictionary(Of Guid, IDictionary(Of XName, InstanceValue)))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LoadedInstance(System::Runtime::DurableInstancing::InstanceState state, System::Collections::Generic::IDictionary&lt;System::Xml::Linq::XName ^, System::Runtime::DurableInstancing::InstanceValue ^&gt; ^ instanceData, System::Collections::Generic::IDictionary&lt;System::Xml::Linq::XName ^, System::Runtime::DurableInstancing::InstanceValue ^&gt; ^ instanceMetadata, System::Collections::Generic::IDictionary&lt;Guid, System::Collections::Generic::IDictionary&lt;System::Xml::Linq::XName ^, System::Runtime::DurableInstancing::InstanceValue ^&gt; ^&gt; ^ associatedInstanceKeyMetadata, System::Collections::Generic::IDictionary&lt;Guid, System::Collections::Generic::IDictionary&lt;System::Xml::Linq::XName ^, System::Runtime::DurableInstancing::InstanceValue ^&gt; ^&gt; ^ completedInstanceKeyMetadata);" />
      <MemberSignature Language="F#" Value="member this.LoadedInstance : System.Runtime.DurableInstancing.InstanceState * System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName, System.Runtime.DurableInstancing.InstanceValue&gt; * System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName, System.Runtime.DurableInstancing.InstanceValue&gt; * System.Collections.Generic.IDictionary&lt;Guid, System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName, System.Runtime.DurableInstancing.InstanceValue&gt;&gt; * System.Collections.Generic.IDictionary&lt;Guid, System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName, System.Runtime.DurableInstancing.InstanceValue&gt;&gt; -&gt; unit" Usage="instancePersistenceContext.LoadedInstance (state, instanceData, instanceMetadata, associatedInstanceKeyMetadata, completedInstanceKeyMetadata)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Runtime.DurableInstancing.InstanceState" />
        <Parameter Name="instanceData" Type="System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue&gt;" />
        <Parameter Name="instanceMetadata" Type="System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue&gt;" />
        <Parameter Name="associatedInstanceKeyMetadata" Type="System.Collections.Generic.IDictionary&lt;System.Guid,System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue&gt;&gt;" />
        <Parameter Name="completedInstanceKeyMetadata" Type="System.Collections.Generic.IDictionary&lt;System.Guid,System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="state"><span data-ttu-id="2cc21-209">Сведения о состоянии экземпляра.</span><span class="sxs-lookup"><span data-stu-id="2cc21-209">The instance state information.</span></span></param>
        <param name="instanceData"><span data-ttu-id="2cc21-210">Данные экземпляра как словарь объектов <see cref="T:System.Xml.Linq.XName" /> и <see cref="T:System.Runtime.DurableInstancing.InstanceValue" />.</span><span class="sxs-lookup"><span data-stu-id="2cc21-210">The instance data as a dictionary of <see cref="T:System.Xml.Linq.XName" /> and <see cref="T:System.Runtime.DurableInstancing.InstanceValue" /> objects.</span></span></param>
        <param name="instanceMetadata"><span data-ttu-id="2cc21-211">Метаданные экземпляра как коллекция объектов <see cref="T:System.Xml.Linq.XName" /> и <see cref="T:System.Runtime.DurableInstancing.InstanceValue" />.</span><span class="sxs-lookup"><span data-stu-id="2cc21-211">Instance metadata as a collection of <see cref="T:System.Xml.Linq.XName" /> and <see cref="T:System.Runtime.DurableInstancing.InstanceValue" /> objects.</span></span></param>
        <param name="associatedInstanceKeyMetadata"><span data-ttu-id="2cc21-212">Связанные метаданные ключа экземпляра как словарь идентификаторов экземпляров и метаданных ключей экземпляров в виде словаря объектов <see cref="T:System.Xml.Linq.XName" /> и <see cref="T:System.Runtime.DurableInstancing.InstanceValue" />.</span><span class="sxs-lookup"><span data-stu-id="2cc21-212">Associated instance key metadata as a dictionary of instance identifier and instance key metadata, which is a dictionary of <see cref="T:System.Xml.Linq.XName" /> and <see cref="T:System.Runtime.DurableInstancing.InstanceValue" /> objects.</span></span></param>
        <param name="completedInstanceKeyMetadata"><span data-ttu-id="2cc21-213">Метаданные завершенного экземпляра как словарь идентификаторов экземпляров и метаданных ключей экземпляров в виде словаря объектов <see cref="T:System.Xml.Linq.XName" /> и <see cref="T:System.Runtime.DurableInstancing.InstanceValue" />.</span><span class="sxs-lookup"><span data-stu-id="2cc21-213">Completed instance metadata as a dictionary of instance identifier and instance key metadata, which is a dictionary of <see cref="T:System.Xml.Linq.XName" /> and <see cref="T:System.Runtime.DurableInstancing.InstanceValue" /> objects.</span></span></param>
        <summary><span data-ttu-id="2cc21-214">Указывает, что поставщик сохраняемости успешно получил текущий экземпляр из хранилища экземпляров.</span><span class="sxs-lookup"><span data-stu-id="2cc21-214">Indicates that the persistence provider has successfully retrieved the current instance from the instance store.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2cc21-215">Текущий дескриптор экземпляра должен быть привязан к экземпляру.</span><span class="sxs-lookup"><span data-stu-id="2cc21-215">The current instance handle must be bound to an instance.</span></span> <span data-ttu-id="2cc21-216">Если дескриптор экземпляра привязан к блокировке либо загруженный экземпляр помечен как завершенный, то загруженные данные считаются согласованными. В противном случае данные считаются сомнительными.</span><span class="sxs-lookup"><span data-stu-id="2cc21-216">If the instance handle is bound to a lock or the loaded instance is marked as complete, the loaded data is considered to be consistent; otherwise, it is considered to be in doubt.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LockToken">
      <MemberSignature Language="C#" Value="public Guid LockToken { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid LockToken" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.DurableInstancing.InstancePersistenceContext.LockToken" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LockToken As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Guid LockToken { Guid get(); };" />
      <MemberSignature Language="F#" Value="member this.LockToken : Guid" Usage="System.Runtime.DurableInstancing.InstancePersistenceContext.LockToken" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2cc21-217">Возвращает маркер блокировки владельца экземпляра, привязанный к текущему дескриптору экземпляра.</span><span class="sxs-lookup"><span data-stu-id="2cc21-217">Gets the lock token of the instance owner bound to the current instance handle.</span></span></summary>
        <value><span data-ttu-id="2cc21-218">Маркер блокировки, привязанный к текущему обработчику экземпляра, или значение <see cref="F:System.Guid.Empty" />, если этот маркер не привязан к владельцу экземпляра.</span><span class="sxs-lookup"><span data-stu-id="2cc21-218">The lock token bound to the current instance handle, or <see cref="F:System.Guid.Empty" /> if the handle isn't bound to an instance owner.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2cc21-219">Поставщик сохраняемости должен сверить это значение с маркером блокировки, удерживаемой для экземпляра в хранилище экземпляров, когда выполняется операция, для которой требуется блокировка (например, сохранение данных экземпляра), используя дескриптор, привязанный к блокировке.</span><span class="sxs-lookup"><span data-stu-id="2cc21-219">The persistence provider should check this value against the lock token of the lock held on an instance in the instance store when performing an operation that requires a lock (such as persisting instance data) using a handle bound to the lock.</span></span> <span data-ttu-id="2cc21-220">Если маркер блокировки не совпадает, команда должна завершиться с исключением InstanceLockLostException.</span><span class="sxs-lookup"><span data-stu-id="2cc21-220">If the lock token doesn't match, the command should fail with InstanceLockLostException.</span></span>  
  
 <span data-ttu-id="2cc21-221">Поставщик сохраняемости должен использовать это значение в качестве маркера блокировки при получении новой блокировки для экземпляра (например, если данные экземпляра сохраняются с помощью дескриптора, который еще не привязан к блокировке).</span><span class="sxs-lookup"><span data-stu-id="2cc21-221">The persistence provider should use this value as the lock token when acquiring a new lock on an instance (such as persisting instance data using a handle not already bound to a lock).</span></span> <span data-ttu-id="2cc21-222">Если экземпляр уже заблокирован в хранилище экземпляров и маркеры блокировки совпадают, то поставщик сохраняемости может попытаться освободить экземпляр с помощью BindReclaimedLock.</span><span class="sxs-lookup"><span data-stu-id="2cc21-222">If the instance is already locked in the instance store and the lock token matches this lock token, the persistence provider can attempt to reclaim the instance using BindReclaimedLock.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PersistedInstance">
      <MemberSignature Language="C#" Value="public void PersistedInstance (System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PersistedInstance(class System.Collections.Generic.IDictionary`2&lt;class System.Xml.Linq.XName, class System.Runtime.DurableInstancing.InstanceValue&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstancePersistenceContext.PersistedInstance(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue})" />
      <MemberSignature Language="VB.NET" Value="Public Sub PersistedInstance (data As IDictionary(Of XName, InstanceValue))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PersistedInstance(System::Collections::Generic::IDictionary&lt;System::Xml::Linq::XName ^, System::Runtime::DurableInstancing::InstanceValue ^&gt; ^ data);" />
      <MemberSignature Language="F#" Value="member this.PersistedInstance : System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName, System.Runtime.DurableInstancing.InstanceValue&gt; -&gt; unit" Usage="instancePersistenceContext.PersistedInstance data" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue&gt;" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="2cc21-223">Данные экземпляра как словарь из объектов <see cref="T:System.Xml.Linq.XName" /> и <see cref="T:System.Runtime.DurableInstancing.InstanceValue" />.</span><span class="sxs-lookup"><span data-stu-id="2cc21-223">Instance data as a dictionary of <see cref="T:System.Xml.Linq.XName" /> and <see cref="T:System.Runtime.DurableInstancing.InstanceValue" /> objects.</span></span></param>
        <summary><span data-ttu-id="2cc21-224">Указывает, что поставщик сохраняемости успешно сохранил набор данных экземпляра в хранилище экземпляров.</span><span class="sxs-lookup"><span data-stu-id="2cc21-224">Indicates that the persistence provider has successfully persisted a set of instance data to the instance store.</span></span> <span data-ttu-id="2cc21-225">Это действие приводит к инициализации экземпляра, если он еще не инициализирован.</span><span class="sxs-lookup"><span data-stu-id="2cc21-225">This has the effect of initializing the instance if it wasn't already.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2cc21-226">Текущий дескриптор экземпляра должен быть привязан к экземпляру, а также к блокировке для этого экземпляра.</span><span class="sxs-lookup"><span data-stu-id="2cc21-226">The current instance handle must be bound to an instance as well as a lock on that instance.</span></span> <span data-ttu-id="2cc21-227">Каждый набор данных экземпляра полностью заменяет предыдущий набор.</span><span class="sxs-lookup"><span data-stu-id="2cc21-227">Each set of instance data completely replaces the previous set.</span></span> <span data-ttu-id="2cc21-228">Набор данных экземпляра может иметь значение null. это то же самое, что пусто.</span><span class="sxs-lookup"><span data-stu-id="2cc21-228">The set of instance data may be null - this is the same as empty.</span></span> <span data-ttu-id="2cc21-229">При сохранении набора данных экземпляра со значением null удаляется существующий набор данных экземпляра.</span><span class="sxs-lookup"><span data-stu-id="2cc21-229">Persisting a null set of instance data deletes the existing set of instance data.</span></span> <span data-ttu-id="2cc21-230">(Сохранение набора данных экземпляра не влияет на метаданные экземпляра.)</span><span class="sxs-lookup"><span data-stu-id="2cc21-230">(Persisting a set of instance data has no effect on instance metadata.)</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QueriedInstanceStore">
      <MemberSignature Language="C#" Value="public void QueriedInstanceStore (System.Runtime.DurableInstancing.InstanceStoreQueryResult queryResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void QueriedInstanceStore(class System.Runtime.DurableInstancing.InstanceStoreQueryResult queryResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstancePersistenceContext.QueriedInstanceStore(System.Runtime.DurableInstancing.InstanceStoreQueryResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub QueriedInstanceStore (queryResult As InstanceStoreQueryResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void QueriedInstanceStore(System::Runtime::DurableInstancing::InstanceStoreQueryResult ^ queryResult);" />
      <MemberSignature Language="F#" Value="member this.QueriedInstanceStore : System.Runtime.DurableInstancing.InstanceStoreQueryResult -&gt; unit" Usage="instancePersistenceContext.QueriedInstanceStore queryResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="queryResult" Type="System.Runtime.DurableInstancing.InstanceStoreQueryResult" />
      </Parameters>
      <Docs>
        <param name="queryResult"><span data-ttu-id="2cc21-231">Результаты запроса к хранилищу экземпляра.</span><span class="sxs-lookup"><span data-stu-id="2cc21-231">The results of a query against an instance store.</span></span></param>
        <summary><span data-ttu-id="2cc21-232">Добавляет объект <see cref="T:System.Runtime.DurableInstancing.InstanceStoreQueryResult" />, который передается как параметр списку объектов <see cref="T:System.Runtime.DurableInstancing.InstanceStoreQueryResult" /> внутри представления <see cref="T:System.Runtime.DurableInstancing.InstanceView" />.</span><span class="sxs-lookup"><span data-stu-id="2cc21-232">Adds the <see cref="T:System.Runtime.DurableInstancing.InstanceStoreQueryResult" /> passed as a parameter to a list of <see cref="T:System.Runtime.DurableInstancing.InstanceStoreQueryResult" /> objects in an <see cref="T:System.Runtime.DurableInstancing.InstanceView" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadInstanceKeyMetadata">
      <MemberSignature Language="C#" Value="public void ReadInstanceKeyMetadata (Guid key, System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue&gt; metadata, bool complete);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReadInstanceKeyMetadata(valuetype System.Guid key, class System.Collections.Generic.IDictionary`2&lt;class System.Xml.Linq.XName, class System.Runtime.DurableInstancing.InstanceValue&gt; metadata, bool complete) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstancePersistenceContext.ReadInstanceKeyMetadata(System.Guid,System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReadInstanceKeyMetadata (key As Guid, metadata As IDictionary(Of XName, InstanceValue), complete As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReadInstanceKeyMetadata(Guid key, System::Collections::Generic::IDictionary&lt;System::Xml::Linq::XName ^, System::Runtime::DurableInstancing::InstanceValue ^&gt; ^ metadata, bool complete);" />
      <MemberSignature Language="F#" Value="member this.ReadInstanceKeyMetadata : Guid * System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName, System.Runtime.DurableInstancing.InstanceValue&gt; * bool -&gt; unit" Usage="instancePersistenceContext.ReadInstanceKeyMetadata (key, metadata, complete)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Guid" />
        <Parameter Name="metadata" Type="System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue&gt;" />
        <Parameter Name="complete" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="2cc21-233">Идентификатор ключа экземпляра для ключа со считанными метаданными.</span><span class="sxs-lookup"><span data-stu-id="2cc21-233">The instance key identifier for the key whose metadata was read.</span></span> <span data-ttu-id="2cc21-234">Не должно иметь значение Guid.Empty.</span><span class="sxs-lookup"><span data-stu-id="2cc21-234">Must not be Guid.Empty.</span></span></param>
        <param name="metadata"><span data-ttu-id="2cc21-235">Метаданные как словарь объектов <see cref="T:System.Xml.Linq.XName" /> и <see cref="T:System.Runtime.DurableInstancing.InstanceValue" />.</span><span class="sxs-lookup"><span data-stu-id="2cc21-235">The metadata as a dictionary of <see cref="T:System.Xml.Linq.XName" /> and <see cref="T:System.Runtime.DurableInstancing.InstanceValue" /> objects.</span></span></param>
        <param name="complete"><span data-ttu-id="2cc21-236">Значение <see langword="true" />, если метаданные представляют все метаданные, связанные с ключом экземпляра; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2cc21-236"><see langword="true" /> if the metadata represents all of the metadata associated to the instance key; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="2cc21-237">Указывает, что поставщик сохраняемости успешно считал метаданные ключа экземпляра для ключа, связанного с текущим экземпляром из хранилища экземпляров.</span><span class="sxs-lookup"><span data-stu-id="2cc21-237">Indicates that the persistence provider has successfully read some instance key metadata for a key associated to the current instance from the instance store.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2cc21-238">Текущий дескриптор экземпляра должен быть привязан к экземпляру.</span><span class="sxs-lookup"><span data-stu-id="2cc21-238">The current instance handle must be bound to an instance.</span></span> <span data-ttu-id="2cc21-239">Если дескриптор экземпляра привязан к блокировке либо текущий экземпляр помечен как завершенный, то метаданные считаются согласованными. В противном случае метаданные считаются сомнительными.</span><span class="sxs-lookup"><span data-stu-id="2cc21-239">If the instance handle is bound to a lock or the current instance is marked as complete, the metadata is considered to be consistent; otherwise, it is considered to be in doubt.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadInstanceMetadata">
      <MemberSignature Language="C#" Value="public void ReadInstanceMetadata (System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue&gt; metadata, bool complete);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReadInstanceMetadata(class System.Collections.Generic.IDictionary`2&lt;class System.Xml.Linq.XName, class System.Runtime.DurableInstancing.InstanceValue&gt; metadata, bool complete) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstancePersistenceContext.ReadInstanceMetadata(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReadInstanceMetadata (metadata As IDictionary(Of XName, InstanceValue), complete As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReadInstanceMetadata(System::Collections::Generic::IDictionary&lt;System::Xml::Linq::XName ^, System::Runtime::DurableInstancing::InstanceValue ^&gt; ^ metadata, bool complete);" />
      <MemberSignature Language="F#" Value="member this.ReadInstanceMetadata : System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName, System.Runtime.DurableInstancing.InstanceValue&gt; * bool -&gt; unit" Usage="instancePersistenceContext.ReadInstanceMetadata (metadata, complete)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadata" Type="System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue&gt;" />
        <Parameter Name="complete" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="metadata"><span data-ttu-id="2cc21-240">Метаданные как словарь объектов <see cref="T:System.Xml.Linq.XName" /> и <see cref="T:System.Runtime.DurableInstancing.InstanceValue" />.</span><span class="sxs-lookup"><span data-stu-id="2cc21-240">The metadata as a dictionary of <see cref="T:System.Xml.Linq.XName" /> and <see cref="T:System.Runtime.DurableInstancing.InstanceValue" /> objects.</span></span></param>
        <param name="complete"><span data-ttu-id="2cc21-241">Значение <see langword="true" />, если метаданные представляют все метаданные, связанные с экземпляром; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2cc21-241"><see langword="true" /> if the metadata represents all of the metadata associated to the instance; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="2cc21-242">Указывает, что поставщик сохраняемости успешно считал метаданные для текущего экземпляра из хранилища экземпляров.</span><span class="sxs-lookup"><span data-stu-id="2cc21-242">Indicates that the persistence provider has successfully read some instance metadata for the current instance from the instance store.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadInstanceOwnerMetadata">
      <MemberSignature Language="C#" Value="public void ReadInstanceOwnerMetadata (System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue&gt; metadata, bool complete);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReadInstanceOwnerMetadata(class System.Collections.Generic.IDictionary`2&lt;class System.Xml.Linq.XName, class System.Runtime.DurableInstancing.InstanceValue&gt; metadata, bool complete) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstancePersistenceContext.ReadInstanceOwnerMetadata(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReadInstanceOwnerMetadata (metadata As IDictionary(Of XName, InstanceValue), complete As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReadInstanceOwnerMetadata(System::Collections::Generic::IDictionary&lt;System::Xml::Linq::XName ^, System::Runtime::DurableInstancing::InstanceValue ^&gt; ^ metadata, bool complete);" />
      <MemberSignature Language="F#" Value="member this.ReadInstanceOwnerMetadata : System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName, System.Runtime.DurableInstancing.InstanceValue&gt; * bool -&gt; unit" Usage="instancePersistenceContext.ReadInstanceOwnerMetadata (metadata, complete)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadata" Type="System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue&gt;" />
        <Parameter Name="complete" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="metadata"><span data-ttu-id="2cc21-243">Словарь из объектов <see cref="T:System.Xml.Linq.XName" /> и <see cref="T:System.Runtime.DurableInstancing.InstanceValue" />.</span><span class="sxs-lookup"><span data-stu-id="2cc21-243">The dictionary of <see cref="T:System.Xml.Linq.XName" /> and <see cref="T:System.Runtime.DurableInstancing.InstanceValue" /> objects.</span></span></param>
        <param name="complete"><span data-ttu-id="2cc21-244">Значение, определяющее значение для согласованности: <see cref="F:System.Runtime.DurableInstancing.InstanceValueConsistency.InDoubt" /> или <see cref="F:System.Runtime.DurableInstancing.InstanceValueConsistency.Partial" />.</span><span class="sxs-lookup"><span data-stu-id="2cc21-244">The value to specify whether the consistency to be set to <see cref="F:System.Runtime.DurableInstancing.InstanceValueConsistency.InDoubt" /> or <see cref="F:System.Runtime.DurableInstancing.InstanceValueConsistency.Partial" />.</span></span></param>
        <summary><span data-ttu-id="2cc21-245">Устанавливает метаданные владельца экземпляра, используя данные, передаваемые в качестве параметра.</span><span class="sxs-lookup"><span data-stu-id="2cc21-245">Sets the instance owner metadata using the data passed in the parameter.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2cc21-246">Текущий дескриптор экземпляра должен быть привязан к экземпляру.</span><span class="sxs-lookup"><span data-stu-id="2cc21-246">The current instance handle must be bound to an instance.</span></span> <span data-ttu-id="2cc21-247">Если дескриптор экземпляра привязан к блокировке либо текущий экземпляр помечен как завершенный, то метаданные считаются согласованными. В противном случае метаданные считаются сомнительными.</span><span class="sxs-lookup"><span data-stu-id="2cc21-247">If the instance handle is bound to a lock or the current instance is marked as complete, the metadata is considered to be consistent; otherwise, it is considered to be in doubt.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetCancellationHandler">
      <MemberSignature Language="C#" Value="public void SetCancellationHandler (Action&lt;System.Runtime.DurableInstancing.InstancePersistenceContext&gt; cancellationHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetCancellationHandler(class System.Action`1&lt;class System.Runtime.DurableInstancing.InstancePersistenceContext&gt; cancellationHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstancePersistenceContext.SetCancellationHandler(System.Action{System.Runtime.DurableInstancing.InstancePersistenceContext})" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetCancellationHandler (cancellationHandler As Action(Of InstancePersistenceContext))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetCancellationHandler(Action&lt;System::Runtime::DurableInstancing::InstancePersistenceContext ^&gt; ^ cancellationHandler);" />
      <MemberSignature Language="F#" Value="member this.SetCancellationHandler : Action&lt;System.Runtime.DurableInstancing.InstancePersistenceContext&gt; -&gt; unit" Usage="instancePersistenceContext.SetCancellationHandler cancellationHandler" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationHandler" Type="System.Action&lt;System.Runtime.DurableInstancing.InstancePersistenceContext&gt;" />
      </Parameters>
      <Docs>
        <param name="cancellationHandler"><span data-ttu-id="2cc21-248">Ссылка на вызываемую функцию.</span><span class="sxs-lookup"><span data-stu-id="2cc21-248">The reference to a function to be called.</span></span></param>
        <summary><span data-ttu-id="2cc21-249">Устанавливает обработчик отмены, который будет вызываться при запросе отмены операции.</span><span class="sxs-lookup"><span data-stu-id="2cc21-249">Sets the cancellation handler to be called when the cancel of an operation is requested.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2cc21-250">Если вызывается обработчик отмены, поставщик сохраняемости должен отменить все ожидающие операции и вызвать исключение OperationCanceledException из TryCommand, чтобы показать, что команда сохраняемости была прервана до завершения.</span><span class="sxs-lookup"><span data-stu-id="2cc21-250">If the cancellation handler is called, the persistence provider should cancel all pending operations and throw OperationCanceledException from TryCommand to indicate that the persistence command was interrupted before it could be completed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnassociatedInstanceKey">
      <MemberSignature Language="C#" Value="public void UnassociatedInstanceKey (Guid key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UnassociatedInstanceKey(valuetype System.Guid key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstancePersistenceContext.UnassociatedInstanceKey(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UnassociatedInstanceKey (key As Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UnassociatedInstanceKey(Guid key);" />
      <MemberSignature Language="F#" Value="member this.UnassociatedInstanceKey : Guid -&gt; unit" Usage="instancePersistenceContext.UnassociatedInstanceKey key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="2cc21-251">Идентификатор ключа экземпляра для ключа, связь с которым отменена.</span><span class="sxs-lookup"><span data-stu-id="2cc21-251">The instance key identifier for the key that has been unassociated.</span></span> <span data-ttu-id="2cc21-252">Не должно иметь значение Guid.Empty.</span><span class="sxs-lookup"><span data-stu-id="2cc21-252">Must not be Guid.Empty.</span></span></param>
        <summary><span data-ttu-id="2cc21-253">Указывает, что поставщик сохраняемости успешно отменил связь ключа с текущим экземпляром в хранилище экземпляров.</span><span class="sxs-lookup"><span data-stu-id="2cc21-253">Indicates that the persistence provider has successfully disassociated a key from the current instance in the instance store.</span></span> <span data-ttu-id="2cc21-254">Идентификатор ключа указывается в качестве параметра.</span><span class="sxs-lookup"><span data-stu-id="2cc21-254">The identifier of the key is specified as a parameter.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2cc21-255">Текущий дескриптор экземпляра должен быть привязан к экземпляру, а также к блокировке для этого экземпляра.</span><span class="sxs-lookup"><span data-stu-id="2cc21-255">The current instance handle must be bound to an instance as well as a lock on that instance.</span></span> <span data-ttu-id="2cc21-256">Ключ экземпляра должен быть связан с текущим экземпляром и помечен как завершенный.</span><span class="sxs-lookup"><span data-stu-id="2cc21-256">The instance key must be associated to the current instance and must be marked complete.</span></span> <span data-ttu-id="2cc21-257">Текущий экземпляр не должен быть помечен как завершенный.</span><span class="sxs-lookup"><span data-stu-id="2cc21-257">The current instance must not be marked complete.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UserContext">
      <MemberSignature Language="C#" Value="public object UserContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object UserContext" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.DurableInstancing.InstancePersistenceContext.UserContext" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UserContext As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ UserContext { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UserContext : obj" Usage="System.Runtime.DurableInstancing.InstancePersistenceContext.UserContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2cc21-258">Возвращает сведения о контексте пользователя, присоединенные к текущему дескриптору экземпляра.</span><span class="sxs-lookup"><span data-stu-id="2cc21-258">Gets the user context information attached to the current instance handle.</span></span></summary>
        <value><span data-ttu-id="2cc21-259">Контекстные сведения пользователя.</span><span class="sxs-lookup"><span data-stu-id="2cc21-259">The user context information.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2cc21-260">Этот объект возвращается из InstanceStore.OnNewInstanceHandle для текущего дескриптора экземпляра.</span><span class="sxs-lookup"><span data-stu-id="2cc21-260">The object is the one that is returned from InstanceStore.OnNewInstanceHandle for the current instance handle.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WroteInstanceKeyMetadataValue">
      <MemberSignature Language="C#" Value="public void WroteInstanceKeyMetadataValue (Guid key, System.Xml.Linq.XName name, System.Runtime.DurableInstancing.InstanceValue value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WroteInstanceKeyMetadataValue(valuetype System.Guid key, class System.Xml.Linq.XName name, class System.Runtime.DurableInstancing.InstanceValue value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstancePersistenceContext.WroteInstanceKeyMetadataValue(System.Guid,System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WroteInstanceKeyMetadataValue (key As Guid, name As XName, value As InstanceValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WroteInstanceKeyMetadataValue(Guid key, System::Xml::Linq::XName ^ name, System::Runtime::DurableInstancing::InstanceValue ^ value);" />
      <MemberSignature Language="F#" Value="member this.WroteInstanceKeyMetadataValue : Guid * System.Xml.Linq.XName * System.Runtime.DurableInstancing.InstanceValue -&gt; unit" Usage="instancePersistenceContext.WroteInstanceKeyMetadataValue (key, name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Guid" />
        <Parameter Name="name" Type="System.Xml.Linq.XName" />
        <Parameter Name="value" Type="System.Runtime.DurableInstancing.InstanceValue" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="2cc21-261">Идентификатор ключа экземпляра для ключа.</span><span class="sxs-lookup"><span data-stu-id="2cc21-261">The instance key identifier for the key.</span></span> <span data-ttu-id="2cc21-262">Не должно иметь значение Guid.Empty.</span><span class="sxs-lookup"><span data-stu-id="2cc21-262">Must not be Guid.Empty.</span></span></param>
        <param name="name"><span data-ttu-id="2cc21-263">Имя свойства метаданных.</span><span class="sxs-lookup"><span data-stu-id="2cc21-263">The name of the metadata property.</span></span></param>
        <param name="value"><span data-ttu-id="2cc21-264">Значение свойства метаданных.</span><span class="sxs-lookup"><span data-stu-id="2cc21-264">The value of the metadata property.</span></span></param>
        <summary><span data-ttu-id="2cc21-265">Указывает, что поставщик сохраняемости успешно записал значение метаданных для ключа экземпляра, связанного с текущим экземпляром, в хранилище экземпляров.</span><span class="sxs-lookup"><span data-stu-id="2cc21-265">Indicates that the persistence provider has successfully written a metadata value for an instance key that is associated with the current instance to the instance store.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2cc21-266">Текущий дескриптор экземпляра должен быть привязан к экземпляру, а также к блокировке для этого экземпляра.</span><span class="sxs-lookup"><span data-stu-id="2cc21-266">The current instance handle must be bound to an instance as well as a lock on that instance.</span></span> <span data-ttu-id="2cc21-267">Ключ экземпляра должен быть связан с текущим экземпляром и не должен быть завершен.</span><span class="sxs-lookup"><span data-stu-id="2cc21-267">The instance key must be associated with the current instance and must not be completed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WroteInstanceMetadataValue">
      <MemberSignature Language="C#" Value="public void WroteInstanceMetadataValue (System.Xml.Linq.XName name, System.Runtime.DurableInstancing.InstanceValue value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WroteInstanceMetadataValue(class System.Xml.Linq.XName name, class System.Runtime.DurableInstancing.InstanceValue value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstancePersistenceContext.WroteInstanceMetadataValue(System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WroteInstanceMetadataValue (name As XName, value As InstanceValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WroteInstanceMetadataValue(System::Xml::Linq::XName ^ name, System::Runtime::DurableInstancing::InstanceValue ^ value);" />
      <MemberSignature Language="F#" Value="member this.WroteInstanceMetadataValue : System.Xml.Linq.XName * System.Runtime.DurableInstancing.InstanceValue -&gt; unit" Usage="instancePersistenceContext.WroteInstanceMetadataValue (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.Xml.Linq.XName" />
        <Parameter Name="value" Type="System.Runtime.DurableInstancing.InstanceValue" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="2cc21-268">Имя свойства метаданных.</span><span class="sxs-lookup"><span data-stu-id="2cc21-268">The name of the metadata property.</span></span></param>
        <param name="value"><span data-ttu-id="2cc21-269">Значение свойства метаданных.</span><span class="sxs-lookup"><span data-stu-id="2cc21-269">The value of the metadata property.</span></span></param>
        <summary><span data-ttu-id="2cc21-270">Указывает, что поставщик сохраняемости успешно записал значение метаданных для текущего экземпляра во внешнее хранилище экземпляров.</span><span class="sxs-lookup"><span data-stu-id="2cc21-270">Indicates that the persistence provider has successfully written a metadata value for the current instance to the external instance store.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2cc21-271">Текущий дескриптор экземпляра должен быть привязан к экземпляру, а также иметь блокировку для этого экземпляра.</span><span class="sxs-lookup"><span data-stu-id="2cc21-271">The current instance handle must be bound to an instance as well as has a lock on that instance.</span></span> <span data-ttu-id="2cc21-272">Экземпляр не должен быть завершен.</span><span class="sxs-lookup"><span data-stu-id="2cc21-272">The instance must not be completed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WroteInstanceOwnerMetadataValue">
      <MemberSignature Language="C#" Value="public void WroteInstanceOwnerMetadataValue (System.Xml.Linq.XName name, System.Runtime.DurableInstancing.InstanceValue value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WroteInstanceOwnerMetadataValue(class System.Xml.Linq.XName name, class System.Runtime.DurableInstancing.InstanceValue value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstancePersistenceContext.WroteInstanceOwnerMetadataValue(System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WroteInstanceOwnerMetadataValue (name As XName, value As InstanceValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WroteInstanceOwnerMetadataValue(System::Xml::Linq::XName ^ name, System::Runtime::DurableInstancing::InstanceValue ^ value);" />
      <MemberSignature Language="F#" Value="member this.WroteInstanceOwnerMetadataValue : System.Xml.Linq.XName * System.Runtime.DurableInstancing.InstanceValue -&gt; unit" Usage="instancePersistenceContext.WroteInstanceOwnerMetadataValue (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.Xml.Linq.XName" />
        <Parameter Name="value" Type="System.Runtime.DurableInstancing.InstanceValue" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="2cc21-273">Имя свойства метаданных.</span><span class="sxs-lookup"><span data-stu-id="2cc21-273">The name of the metadata property.</span></span></param>
        <param name="value"><span data-ttu-id="2cc21-274">Значение свойства метаданных.</span><span class="sxs-lookup"><span data-stu-id="2cc21-274">The value of the metadata property.</span></span></param>
        <summary><span data-ttu-id="2cc21-275">Указывает, что поставщик сохраняемости успешно записал значение метаданных для владельца текущего экземпляра в хранилище экземпляров.</span><span class="sxs-lookup"><span data-stu-id="2cc21-275">Indicates that the persistence provider has successfully written a metadata value for the current instance owner to the instance store.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2cc21-276">Текущий дескриптор экземпляра должен быть привязан к владельцу экземпляра.</span><span class="sxs-lookup"><span data-stu-id="2cc21-276">The current instance handle must be bound to an instance owner.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
