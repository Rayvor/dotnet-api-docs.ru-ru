<Type Name="XamlTypeTypeConverter" FullName="System.Xaml.Schema.XamlTypeTypeConverter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="fa9e427e41257ef5ff4b68badf20ebc6c45741c9" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70417510" /></Metadata><TypeSignature Language="C#" Value="public class XamlTypeTypeConverter : System.ComponentModel.TypeConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XamlTypeTypeConverter extends System.ComponentModel.TypeConverter" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.Schema.XamlTypeTypeConverter" />
  <TypeSignature Language="VB.NET" Value="Public Class XamlTypeTypeConverter&#xA;Inherits TypeConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class XamlTypeTypeConverter : System::ComponentModel::TypeConverter" />
  <TypeSignature Language="F#" Value="type XamlTypeTypeConverter = class&#xA;    inherit TypeConverter" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.TypeConverter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="cf749-101">Преобразует объект <see cref="T:System.Xaml.XamlType" /> в строку, представляющую имя типа, и из нее.</span><span class="sxs-lookup"><span data-stu-id="cf749-101">Converts a <see cref="T:System.Xaml.XamlType" /> object to and from a string that represents the type name.</span></span> <span data-ttu-id="cf749-102">Эта функция используется для расширения XAML с помощью определений разметки через <see cref="T:System.Windows.Markup.PropertyDefinition" />.</span><span class="sxs-lookup"><span data-stu-id="cf749-102">This functionality is used for XAML extensibility by markup definitions, via <see cref="T:System.Windows.Markup.PropertyDefinition" />.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlTypeTypeConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlTypeTypeConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlTypeTypeConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cf749-103">Инициализирует новый экземпляр класса <see cref="T:System.Xaml.Schema.XamlTypeTypeConverter" />.</span><span class="sxs-lookup"><span data-stu-id="cf749-103">Initializes a new instance of the <see cref="T:System.Xaml.Schema.XamlTypeTypeConverter" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertFrom">
      <MemberSignature Language="C#" Value="public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Type sourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlTypeTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertFrom (context As ITypeDescriptorContext, sourceType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ sourceType);" />
      <MemberSignature Language="F#" Value="override this.CanConvertFrom : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool" Usage="xamlTypeTypeConverter.CanConvertFrom (context, sourceType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="sourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="cf749-104">Контекст форматирования, содержащий информацию о среде, из которой вызывается данный преобразователь.</span><span class="sxs-lookup"><span data-stu-id="cf749-104">A format context that provides information about the environment from which this converter is being invoked.</span></span></param>
        <param name="sourceType"><span data-ttu-id="cf749-105">Тип, для которого определяется возможность преобразования.</span><span class="sxs-lookup"><span data-stu-id="cf749-105">The type being evaluated for conversion.</span></span></param>
        <summary><span data-ttu-id="cf749-106">Определяет, может ли объект заданного типа быть преобразован в экземпляр типа <see cref="T:System.Xaml.XamlType" /> с использованием заданного контекста.</span><span class="sxs-lookup"><span data-stu-id="cf749-106">Determines whether an object of the specified type can be converted to an instance of <see cref="T:System.Xaml.XamlType" />, using the specified context.</span></span></summary>
        <returns><span data-ttu-id="cf749-107">Значение <see langword="true" />, если данный преобразователь может выполнить операцию, в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="cf749-107"><see langword="true" /> if this converter can perform the operation; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf749-108">Класс преобразует только <xref:System.Xaml.XamlType> экземпляр в и из <xref:System.String> (или <xref:System.Xaml.XamlType>). <xref:System.Xaml.Schema.XamlTypeTypeConverter></span><span class="sxs-lookup"><span data-stu-id="cf749-108">The <xref:System.Xaml.Schema.XamlTypeTypeConverter> class only converts an instance of <xref:System.Xaml.XamlType> to and from a <xref:System.String> (or <xref:System.Xaml.XamlType>).</span></span> <span data-ttu-id="cf749-109">Другие `sourceType` входы `false`возвращают.</span><span class="sxs-lookup"><span data-stu-id="cf749-109">Other `sourceType` inputs return `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertTo">
      <MemberSignature Language="C#" Value="public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlTypeTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertTo (context As ITypeDescriptorContext, destinationType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="override this.CanConvertTo : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool" Usage="xamlTypeTypeConverter.CanConvertTo (context, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="cf749-110">Контекст форматирования, содержащий информацию о среде, из которой вызывается данный преобразователь.</span><span class="sxs-lookup"><span data-stu-id="cf749-110">A format context that provides information about the environment from which this converter is being invoked.</span></span></param>
        <param name="destinationType"><span data-ttu-id="cf749-111">Тип, для которого определяется возможность преобразования.</span><span class="sxs-lookup"><span data-stu-id="cf749-111">The type being evaluated for conversion.</span></span></param>
        <summary><span data-ttu-id="cf749-112">Определяет, может ли экземпляр типа <see cref="T:System.Xaml.XamlType" /> быть преобразован к заданному типу с использованием заданного контекста.</span><span class="sxs-lookup"><span data-stu-id="cf749-112">Determines whether an instance of <see cref="T:System.Xaml.XamlType" /> can be converted to the specified type, using the specified context.</span></span></summary>
        <returns><span data-ttu-id="cf749-113">Значение <see langword="true" />, если данный преобразователь может выполнить операцию, в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="cf749-113"><see langword="true" /> if this converter can perform the operation; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf749-114">Класс преобразует только <xref:System.Xaml.XamlType> экземпляр в и из <xref:System.String> (или <xref:System.Xaml.XamlType>). <xref:System.Xaml.Schema.XamlTypeTypeConverter></span><span class="sxs-lookup"><span data-stu-id="cf749-114">The <xref:System.Xaml.Schema.XamlTypeTypeConverter> class only converts an instance of <xref:System.Xaml.XamlType> to and from a <xref:System.String> (or <xref:System.Xaml.XamlType>).</span></span> <span data-ttu-id="cf749-115">Другие `destinationType` входы `false`возвращают.</span><span class="sxs-lookup"><span data-stu-id="cf749-115">Other `destinationType` inputs return `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlTypeTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertFrom (context As ITypeDescriptorContext, culture As CultureInfo, value As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.ConvertFrom : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj -&gt; obj" Usage="xamlTypeTypeConverter.ConvertFrom (context, culture, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="cf749-116">Контекст форматирования, содержащий информацию о среде, из которой вызывается данный преобразователь.</span><span class="sxs-lookup"><span data-stu-id="cf749-116">A format context that provides information about the environment from which this converter is being invoked.</span></span></param>
        <param name="culture"><span data-ttu-id="cf749-117">Сведения, связанные с языком и региональными параметрами.</span><span class="sxs-lookup"><span data-stu-id="cf749-117">Culture specific information.</span></span></param>
        <param name="value"><span data-ttu-id="cf749-118">Преобразуемый объект.</span><span class="sxs-lookup"><span data-stu-id="cf749-118">The object to convert.</span></span></param>
        <summary><span data-ttu-id="cf749-119">Пытается преобразовать указанный объект в <see cref="T:System.Xaml.XamlType" />, используя заданный контекст.</span><span class="sxs-lookup"><span data-stu-id="cf749-119">Attempts to convert the specified object to a <see cref="T:System.Xaml.XamlType" />, using the specified context.</span></span></summary>
        <returns><span data-ttu-id="cf749-120">Преобразованный объект.</span><span class="sxs-lookup"><span data-stu-id="cf749-120">The converted object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf749-121">Класс преобразует только <xref:System.Xaml.XamlType> экземпляр в и из <xref:System.String> (или <xref:System.Xaml.XamlType>). <xref:System.Xaml.Schema.XamlTypeTypeConverter></span><span class="sxs-lookup"><span data-stu-id="cf749-121">The <xref:System.Xaml.Schema.XamlTypeTypeConverter> class only converts an instance of <xref:System.Xaml.XamlType> to and from a <xref:System.String> (or <xref:System.Xaml.XamlType>).</span></span> <span data-ttu-id="cf749-122">Другие `value` типы вызывают исключение.</span><span class="sxs-lookup"><span data-stu-id="cf749-122">Other `value` types throw an exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="cf749-123"><paramref name="value" /> невозможно преобразовать.</span><span class="sxs-lookup"><span data-stu-id="cf749-123"><paramref name="value" /> cannot be converted.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlTypeTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertTo (context As ITypeDescriptorContext, culture As CultureInfo, value As Object, destinationType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="override this.ConvertTo : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj * Type -&gt; obj" Usage="xamlTypeTypeConverter.ConvertTo (context, culture, value, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="cf749-124">Контекст форматирования, содержащий информацию о среде, из которой вызывается данный преобразователь.</span><span class="sxs-lookup"><span data-stu-id="cf749-124">A format context that provides information about the environment from which this converter is being invoked.</span></span></param>
        <param name="culture"><span data-ttu-id="cf749-125">Сведения, связанные с языком и региональными параметрами.</span><span class="sxs-lookup"><span data-stu-id="cf749-125">Culture specific information.</span></span></param>
        <param name="value"><span data-ttu-id="cf749-126">Преобразуемый объект.</span><span class="sxs-lookup"><span data-stu-id="cf749-126">The object to convert.</span></span></param>
        <param name="destinationType"><span data-ttu-id="cf749-127">Тип, в который требуется преобразовать объект.</span><span class="sxs-lookup"><span data-stu-id="cf749-127">The type to convert the object to.</span></span></param>
        <summary><span data-ttu-id="cf749-128">Пытается преобразовать объект <see cref="T:System.Xaml.XamlType" /> к заданному типу, используя заданный контекст.</span><span class="sxs-lookup"><span data-stu-id="cf749-128">Attempts to convert a <see cref="T:System.Xaml.XamlType" /> to the specified type, using the specified context.</span></span></summary>
        <returns><span data-ttu-id="cf749-129">Преобразованный объект.</span><span class="sxs-lookup"><span data-stu-id="cf749-129">The converted object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf749-130">Класс преобразует только <xref:System.Xaml.XamlType> экземпляр в и из <xref:System.String> (или <xref:System.Xaml.XamlType>). <xref:System.Xaml.Schema.XamlTypeTypeConverter></span><span class="sxs-lookup"><span data-stu-id="cf749-130">The <xref:System.Xaml.Schema.XamlTypeTypeConverter> class only converts an instance of <xref:System.Xaml.XamlType> to and from a <xref:System.String> (or <xref:System.Xaml.XamlType>).</span></span> <span data-ttu-id="cf749-131">Другие `value` типы или `destinationType` входные данные вызывают исключение.</span><span class="sxs-lookup"><span data-stu-id="cf749-131">Other `value` types or `destinationType` inputs throw an exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="cf749-132"><paramref name="value" /> невозможно преобразовать.</span><span class="sxs-lookup"><span data-stu-id="cf749-132"><paramref name="value" /> cannot be converted.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
