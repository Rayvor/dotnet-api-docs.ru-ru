<Type Name="XamlTypeName" FullName="System.Xaml.Schema.XamlTypeName">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a32f722fecb863f72ad12e23c5a07a116de4ff01" /><Meta Name="ms.sourcegitcommit" Value="2767b5903996fbd7e2b81eda1114dfc9d0d9db63" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="05/02/2019" /><Meta Name="ms.locfileid" Value="64996470" /></Metadata><TypeSignature Language="C#" Value="public class XamlTypeName" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XamlTypeName extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.Schema.XamlTypeName" />
  <TypeSignature Language="VB.NET" Value="Public Class XamlTypeName" />
  <TypeSignature Language="C++ CLI" Value="public ref class XamlTypeName" />
  <TypeSignature Language="F#" Value="type XamlTypeName = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Diagnostics.DebuggerDisplay("{{{Namespace}}}{Name}{TypeArgStringForDebugger}")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netcore-3.0">
      <AttributeName>System.Diagnostics.DebuggerDisplay("{ToString()}")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Предоставляет средства для указания типа XAML с точки зрения именем и пространством имен.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xaml.XamlType> является классом сведения типа в системе типов XAML, тогда как <xref:System.Xaml.Schema.XamlTypeName> представляет структуру данных, который предоставляет различные способы определения типа. <xref:System.Xaml.Schema.XamlTypeName> также предоставляет статические вспомогательные методы для создания <xref:System.Xaml.Schema.XamlTypeName> , разрешая идентификатор типа в пространстве имен XAML.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xaml.Schema.XamlTypeName" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlTypeName ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlTypeName.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlTypeName();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xaml.Schema.XamlTypeName" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlTypeName (System.Xaml.XamlType xamlType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xaml.XamlType xamlType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlTypeName.#ctor(System.Xaml.XamlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlTypeName(System::Xaml::XamlType ^ xamlType);" />
      <MemberSignature Language="F#" Value="new System.Xaml.Schema.XamlTypeName : System.Xaml.XamlType -&gt; System.Xaml.Schema.XamlTypeName" Usage="new System.Xaml.Schema.XamlTypeName xamlType" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xamlType" Type="System.Xaml.XamlType" />
      </Parameters>
      <Docs>
        <param name="xamlType">Существующий <see cref="T:System.Xaml.XamlType" />.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xaml.Schema.XamlTypeName" /> класс, на основе существующего <see cref="T:System.Xaml.XamlType" />.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="xamlType" /> имеет значение <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlTypeName (string xamlNamespace, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string xamlNamespace, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlTypeName.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (xamlNamespace As String, name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlTypeName(System::String ^ xamlNamespace, System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Xaml.Schema.XamlTypeName : string * string -&gt; System.Xaml.Schema.XamlTypeName" Usage="new System.Xaml.Schema.XamlTypeName (xamlNamespace, name)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="xamlNamespace" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xamlNamespace">Пространство имен XAML, содержащее имя.</param>
        <param name="name">Имя создаваемого типа <see cref="T:System.Xaml.Schema.XamlTypeName" /> для.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xaml.Schema.XamlTypeName" /> класс, на основе строк имени и пространства имен.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlTypeName (string xamlNamespace, string name, System.Collections.Generic.IEnumerable&lt;System.Xaml.Schema.XamlTypeName&gt; typeArguments);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string xamlNamespace, string name, class System.Collections.Generic.IEnumerable`1&lt;class System.Xaml.Schema.XamlTypeName&gt; typeArguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlTypeName.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{System.Xaml.Schema.XamlTypeName})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (xamlNamespace As String, name As String, typeArguments As IEnumerable(Of XamlTypeName))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlTypeName(System::String ^ xamlNamespace, System::String ^ name, System::Collections::Generic::IEnumerable&lt;System::Xaml::Schema::XamlTypeName ^&gt; ^ typeArguments);" />
      <MemberSignature Language="F#" Value="new System.Xaml.Schema.XamlTypeName : string * string * seq&lt;System.Xaml.Schema.XamlTypeName&gt; -&gt; System.Xaml.Schema.XamlTypeName" Usage="new System.Xaml.Schema.XamlTypeName (xamlNamespace, name, typeArguments)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xamlNamespace" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="typeArguments" Type="System.Collections.Generic.IEnumerable&lt;System.Xaml.Schema.XamlTypeName&gt;" />
      </Parameters>
      <Docs>
        <param name="xamlNamespace">Пространство имен XAML, содержащее <paramref name="name" />.</param>
        <param name="name">Имя создаваемого типа <see cref="T:System.Xaml.Schema.XamlTypeName" /> для.</param>
        <param name="typeArguments">Массив аргументов типа, каждый из которых должен быть <see cref="T:System.Xaml.Schema.XamlTypeName" />.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xaml.Schema.XamlTypeName" /> на основе имени и пространства имен, а также массив аргументов типа класса.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это подпись, которую использовать при указании универсального типа и аргументы типа для этого типа.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.Schema.XamlTypeName.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Xaml.Schema.XamlTypeName.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает имя, используемое для построения данного <see cref="T:System.Xaml.Schema.XamlTypeName" />.</summary>
        <value>Имя типа.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если <xref:System.Xaml.XamlType> был использован для построения данного <xref:System.Xaml.Schema.XamlTypeName>, значение <xref:System.Xaml.Schema.XamlTypeName.Name%2A> является <xref:System.Xaml.XamlType.Name%2A?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public string Namespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Namespace" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.Schema.XamlTypeName.Namespace" />
      <MemberSignature Language="VB.NET" Value="Public Property Namespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Namespace { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Namespace : string with get, set" Usage="System.Xaml.Schema.XamlTypeName.Namespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает идентификатор пространства имен XAML, использовавшейся для создания данного <see cref="T:System.Xaml.Schema.XamlTypeName" />.</summary>
        <value>Идентификатор пространства имен XAML.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если <xref:System.Xaml.XamlType> был использован для построения данного <xref:System.Xaml.Schema.XamlTypeName>, значение <xref:System.Xaml.Schema.XamlTypeName.Namespace%2A> является `xamlType.GetXamlNamespaces()[0]`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static System.Xaml.Schema.XamlTypeName Parse (string typeName, System.Xaml.IXamlNamespaceResolver namespaceResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xaml.Schema.XamlTypeName Parse(string typeName, class System.Xaml.IXamlNamespaceResolver namespaceResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlTypeName.Parse(System.String,System.Xaml.IXamlNamespaceResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (typeName As String, namespaceResolver As IXamlNamespaceResolver) As XamlTypeName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xaml::Schema::XamlTypeName ^ Parse(System::String ^ typeName, System::Xaml::IXamlNamespaceResolver ^ namespaceResolver);" />
      <MemberSignature Language="F#" Value="static member Parse : string * System.Xaml.IXamlNamespaceResolver -&gt; System.Xaml.Schema.XamlTypeName" Usage="System.Xaml.Schema.XamlTypeName.Parse (typeName, namespaceResolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlTypeName</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="namespaceResolver" Type="System.Xaml.IXamlNamespaceResolver" />
      </Parameters>
      <Docs>
        <param name="typeName">Имя типа создаваемого <see cref="T:System.Xaml.Schema.XamlTypeName" /> значение.</param>
        <param name="namespaceResolver">Объект или поставщик услуг, реализующий <see cref="T:System.Xaml.IXamlNamespaceResolver" />.</param>
        <summary>Предоставляет <see cref="T:System.Xaml.Schema.XamlTypeName" /> значение, основанное на имени типа и объекта, который может разрешить префикс разметки в пространство имен.</summary>
        <returns>Созданный <see cref="T:System.Xaml.Schema.XamlTypeName" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="typeName" /> или <paramref name="namespaceResolver" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.FormatException">Не удается проанализировать строку.</exception>
      </Docs>
    </Member>
    <Member MemberName="ParseList">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IList&lt;System.Xaml.Schema.XamlTypeName&gt; ParseList (string typeNameList, System.Xaml.IXamlNamespaceResolver namespaceResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IList`1&lt;class System.Xaml.Schema.XamlTypeName&gt; ParseList(string typeNameList, class System.Xaml.IXamlNamespaceResolver namespaceResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlTypeName.ParseList(System.String,System.Xaml.IXamlNamespaceResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ParseList (typeNameList As String, namespaceResolver As IXamlNamespaceResolver) As IList(Of XamlTypeName)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Generic::IList&lt;System::Xaml::Schema::XamlTypeName ^&gt; ^ ParseList(System::String ^ typeNameList, System::Xaml::IXamlNamespaceResolver ^ namespaceResolver);" />
      <MemberSignature Language="F#" Value="static member ParseList : string * System.Xaml.IXamlNamespaceResolver -&gt; System.Collections.Generic.IList&lt;System.Xaml.Schema.XamlTypeName&gt;" Usage="System.Xaml.Schema.XamlTypeName.ParseList (typeNameList, namespaceResolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Xaml.Schema.XamlTypeName&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeNameList" Type="System.String" />
        <Parameter Name="namespaceResolver" Type="System.Xaml.IXamlNamespaceResolver" />
      </Parameters>
      <Docs>
        <param name="typeNameList">Строка, содержащая несколько типов.</param>
        <param name="namespaceResolver">Объект или поставщик услуг, реализующий <see cref="T:System.Xaml.IXamlNamespaceResolver" />.</param>
        <summary>Предоставляет <see cref="T:System.Xaml.Schema.XamlTypeName" /> значение, основанное на строку, которая может указываться несколько имен типов и объект, который может разрешить префикс разметки в пространство имен.</summary>
        <returns>Созданный <see cref="T:System.Xaml.Schema.XamlTypeName" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ниже приведен квази BNF для имени вложенного типа или нескольких типов имя синтаксический анализ включен с помощью данного метода.  
  
```  
NestedTypeName = Name | Name '+' NestedTypeName  
TypeName = NestedTypeName | NestedTypeName ‘[]’  
XamlTypeName = Prefix ‘:’ TypeName TypeArgs  | TypeName TypeArgs  
TypeArgs = empty | ‘(‘ XamlTypeNameList ‘)’  
XamlTypeNameList = XamlTypeName XamlTypeNameList1  
XamlTypeNameList1 = empty | ‘,’ XamlTypeNameList  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="typeNameList" /> или <paramref name="namespaceResolver" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.FormatException">Не удается проанализировать строку.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToString">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Преобразует значение данного объекта <see cref="T:System.Xaml.Schema.XamlTypeName" /> в эквивалентное ему строковое представление.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlTypeName.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="xamlTypeName.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Преобразует значение данного объекта <see cref="T:System.Xaml.Schema.XamlTypeName" /> в эквивалентное ему строковое представление.</summary>
        <returns>Эквивалентное строковое представление этого объекта <see cref="T:System.Xaml.Schema.XamlTypeName" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Эта подпись эквивалентно вызову <xref:System.Xaml.Schema.XamlTypeName.ToString%28System.Xaml.INamespacePrefixLookup%29>, передав `null` для `prefixLookup`. s  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (System.Xaml.INamespacePrefixLookup prefixLookup);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(class System.Xaml.INamespacePrefixLookup prefixLookup) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlTypeName.ToString(System.Xaml.INamespacePrefixLookup)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (prefixLookup As INamespacePrefixLookup) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(System::Xaml::INamespacePrefixLookup ^ prefixLookup);" />
      <MemberSignature Language="F#" Value="override this.ToString : System.Xaml.INamespacePrefixLookup -&gt; string" Usage="xamlTypeName.ToString prefixLookup" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefixLookup" Type="System.Xaml.INamespacePrefixLookup" />
      </Parameters>
      <Docs>
        <param name="prefixLookup">Ссылки на службу для поиска префикса.</param>
        <summary>Преобразует значение данного объекта <see cref="T:System.Xaml.Schema.XamlTypeName" /> в эквивалентное строковое представление, которое может использоваться в синтаксисе разметки для использования элементов объектов типа.</summary>
        <returns>Строка с использованием префикса.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="P:System.Xaml.Schema.XamlTypeName.Namespace" /> для этого <see cref="T:System.Xaml.Schema.XamlTypeName" /> является <see langword="null" />.  
  
-или- 
 Недопустимый параметр <see cref="P:System.Xaml.Schema.XamlTypeName.Name" />.  
  
-или- 
Не удалось найти префикс.</exception>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (System.Collections.Generic.IList&lt;System.Xaml.Schema.XamlTypeName&gt; typeNameList, System.Xaml.INamespacePrefixLookup prefixLookup);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(class System.Collections.Generic.IList`1&lt;class System.Xaml.Schema.XamlTypeName&gt; typeNameList, class System.Xaml.INamespacePrefixLookup prefixLookup) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlTypeName.ToString(System.Collections.Generic.IList{System.Xaml.Schema.XamlTypeName},System.Xaml.INamespacePrefixLookup)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (typeNameList As IList(Of XamlTypeName), prefixLookup As INamespacePrefixLookup) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(System::Collections::Generic::IList&lt;System::Xaml::Schema::XamlTypeName ^&gt; ^ typeNameList, System::Xaml::INamespacePrefixLookup ^ prefixLookup);" />
      <MemberSignature Language="F#" Value="static member ToString : System.Collections.Generic.IList&lt;System.Xaml.Schema.XamlTypeName&gt; * System.Xaml.INamespacePrefixLookup -&gt; string" Usage="System.Xaml.Schema.XamlTypeName.ToString (typeNameList, prefixLookup)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeNameList" Type="System.Collections.Generic.IList&lt;System.Xaml.Schema.XamlTypeName&gt;" />
        <Parameter Name="prefixLookup" Type="System.Xaml.INamespacePrefixLookup" />
      </Parameters>
      <Docs>
        <param name="typeNameList">Список типов.</param>
        <param name="prefixLookup">Ссылки на службу для поиска префикса.</param>
        <summary>Преобразует значение данного объекта <see cref="T:System.Xaml.Schema.XamlTypeName" /> в эквивалентное строковое представление, которое может использоваться в синтаксисе разметки для использования элементов объектов нескольких типов.</summary>
        <returns>Объединенная строка, содержащая все результаты типа.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="prefixLookup" /> или <paramref name="typeNameList" /> имеет значение <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string typeName, System.Xaml.IXamlNamespaceResolver namespaceResolver, out System.Xaml.Schema.XamlTypeName result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string typeName, class System.Xaml.IXamlNamespaceResolver namespaceResolver, [out] class System.Xaml.Schema.XamlTypeName&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlTypeName.TryParse(System.String,System.Xaml.IXamlNamespaceResolver,System.Xaml.Schema.XamlTypeName@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (typeName As String, namespaceResolver As IXamlNamespaceResolver, ByRef result As XamlTypeName) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ typeName, System::Xaml::IXamlNamespaceResolver ^ namespaceResolver, [Runtime::InteropServices::Out] System::Xaml::Schema::XamlTypeName ^ % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : string * System.Xaml.IXamlNamespaceResolver *  -&gt; bool" Usage="System.Xaml.Schema.XamlTypeName.TryParse (typeName, namespaceResolver, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="namespaceResolver" Type="System.Xaml.IXamlNamespaceResolver" />
        <Parameter Name="result" Type="System.Xaml.Schema.XamlTypeName" RefType="out" />
      </Parameters>
      <Docs>
        <param name="typeName">Имя типа создаваемого <see cref="T:System.Xaml.Schema.XamlTypeName" /> значение.</param>
        <param name="namespaceResolver">Объект или поставщик услуг, реализующий <see cref="T:System.Xaml.IXamlNamespaceResolver" />.</param>
        <param name="result">Выходной параметр, содержащий созданное <see cref="T:System.Xaml.Schema.XamlTypeName" /> Если возвращается значение <see langword="true" />.</param>
        <summary>Предоставляет <see cref="T:System.Xaml.Schema.XamlTypeName" /> значение, основанное на имени типа и объекта, который может разрешить префикс разметки в пространство имен.</summary>
        <returns><see langword="true" /> Если анализ был выполнен успешно и <paramref name="result" /> содержит полезное значение; в противном случае <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="typeName" /> или <paramref name="namespaceResolver" /> имеет значение <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="TryParseList">
      <MemberSignature Language="C#" Value="public static bool TryParseList (string typeNameList, System.Xaml.IXamlNamespaceResolver namespaceResolver, out System.Collections.Generic.IList&lt;System.Xaml.Schema.XamlTypeName&gt; result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParseList(string typeNameList, class System.Xaml.IXamlNamespaceResolver namespaceResolver, [out] class System.Collections.Generic.IList`1&lt;class System.Xaml.Schema.XamlTypeName&gt;&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlTypeName.TryParseList(System.String,System.Xaml.IXamlNamespaceResolver,System.Collections.Generic.IList{System.Xaml.Schema.XamlTypeName}@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParseList (typeNameList As String, namespaceResolver As IXamlNamespaceResolver, ByRef result As IList(Of XamlTypeName)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParseList(System::String ^ typeNameList, System::Xaml::IXamlNamespaceResolver ^ namespaceResolver, [Runtime::InteropServices::Out] System::Collections::Generic::IList&lt;System::Xaml::Schema::XamlTypeName ^&gt; ^ % result);" />
      <MemberSignature Language="F#" Value="static member TryParseList : string * System.Xaml.IXamlNamespaceResolver *  -&gt; bool" Usage="System.Xaml.Schema.XamlTypeName.TryParseList (typeNameList, namespaceResolver, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeNameList" Type="System.String" />
        <Parameter Name="namespaceResolver" Type="System.Xaml.IXamlNamespaceResolver" />
        <Parameter Name="result" Type="System.Collections.Generic.IList&lt;System.Xaml.Schema.XamlTypeName&gt;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="typeNameList">Строка, содержащая несколько типов.</param>
        <param name="namespaceResolver">Объект или поставщик услуг, реализующий <see cref="T:System.Xaml.IXamlNamespaceResolver" />.</param>
        <param name="result">Выходной параметр, содержащий созданное <see cref="T:System.Xaml.Schema.XamlTypeName" /> Если возвращается значение <see langword="true" />.</param>
        <summary>Предоставляет <see cref="T:System.Xaml.Schema.XamlTypeName" /> значение, основанное на строку, которая может указываться несколько имен типов и объект, который может разрешить префикс разметки в пространство имен.</summary>
        <returns><see langword="true" /> Если анализ был выполнен успешно и <paramref name="result" /> содержит полезное значение; в противном случае <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="typeNameList" /> или <paramref name="namespaceResolver" /> имеет значение <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="TypeArguments">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;System.Xaml.Schema.XamlTypeName&gt; TypeArguments { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class System.Xaml.Schema.XamlTypeName&gt; TypeArguments" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.Schema.XamlTypeName.TypeArguments" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TypeArguments As IList(Of XamlTypeName)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;System::Xaml::Schema::XamlTypeName ^&gt; ^ TypeArguments { System::Collections::Generic::IList&lt;System::Xaml::Schema::XamlTypeName ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TypeArguments : System.Collections.Generic.IList&lt;System.Xaml.Schema.XamlTypeName&gt;" Usage="System.Xaml.Schema.XamlTypeName.TypeArguments" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Xaml.Schema.XamlTypeName&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает аргументы типов, используемые для построения данного <see cref="T:System.Xaml.Schema.XamlTypeName" />.</summary>
        <value>Аргументы типа, если таковые имеются. Может принимать значение NULL.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если <xref:System.Xaml.XamlType> был использован для построения данного <xref:System.Xaml.Schema.XamlTypeName>, значение <xref:System.Xaml.Schema.XamlTypeName.TypeArguments%2A> формируется из <xref:System.Xaml.XamlType.TypeArguments%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>