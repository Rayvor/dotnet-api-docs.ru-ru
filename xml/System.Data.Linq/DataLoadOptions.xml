<Type Name="DataLoadOptions" FullName="System.Data.Linq.DataLoadOptions">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c7aa513988ea0a5a91f9a421524e885230400520" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70658006" /></Metadata><TypeSignature Language="C#" Value="public sealed class DataLoadOptions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DataLoadOptions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.Linq.DataLoadOptions" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DataLoadOptions" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataLoadOptions sealed" />
  <TypeSignature Language="F#" Value="type DataLoadOptions = class" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Linq</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="5ccbf-101">Предоставляет немедленную загрузку и фильтрацию связанных данных.</span><span class="sxs-lookup"><span data-stu-id="5ccbf-101">Provides for immediate loading and filtering of related data.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="general"></a><span data-ttu-id="5ccbf-102">Общие</span><span class="sxs-lookup"><span data-stu-id="5ccbf-102">General</span></span>  
 <span data-ttu-id="5ccbf-103">При запросе объекта фактически извлекается только запрошенный объект.</span><span class="sxs-lookup"><span data-stu-id="5ccbf-103">When you query for an object, you actually retrieve only the object you requested.</span></span> <span data-ttu-id="5ccbf-104">*Связанные* объекты не извлекаются автоматически одновременно с основным объектом.</span><span class="sxs-lookup"><span data-stu-id="5ccbf-104">The *related* objects are not automatically fetched at the same time.</span></span> <span data-ttu-id="5ccbf-105">(Дополнительные сведения см. в разделе [запросы по связям](~/docs/framework/data/adonet/sql/linq/querying-across-relationships.md).)</span><span class="sxs-lookup"><span data-stu-id="5ccbf-105">(For more information, see [Querying Across Relationships](~/docs/framework/data/adonet/sql/linq/querying-across-relationships.md).)</span></span>  
  
 <span data-ttu-id="5ccbf-106"><xref:System.Data.Linq.DataLoadOptions> Класс предоставляет два метода для немедленной загрузки указанных связанных данных.</span><span class="sxs-lookup"><span data-stu-id="5ccbf-106">The <xref:System.Data.Linq.DataLoadOptions> class provides two methods to achieve immediate loading of specified related data.</span></span> <span data-ttu-id="5ccbf-107"><xref:System.Data.Linq.DataLoadOptions.LoadWith%2A> Метод позволяет немедленно загружать данные, связанные с основным целевым объектом.</span><span class="sxs-lookup"><span data-stu-id="5ccbf-107">The <xref:System.Data.Linq.DataLoadOptions.LoadWith%2A> method allows for immediate loading of data related to the main target.</span></span> <span data-ttu-id="5ccbf-108"><xref:System.Data.Linq.DataLoadOptions.AssociateWith%2A> Метод позволяет фильтровать связанные объекты.</span><span class="sxs-lookup"><span data-stu-id="5ccbf-108">The <xref:System.Data.Linq.DataLoadOptions.AssociateWith%2A> method allows for filtering related objects.</span></span>  
  
## <a name="rules"></a><span data-ttu-id="5ccbf-109">Правила</span><span class="sxs-lookup"><span data-stu-id="5ccbf-109">Rules</span></span>  
 <span data-ttu-id="5ccbf-110">Обратите внимание на следующие <xref:System.Data.Linq.DataLoadOptions> правила использования:</span><span class="sxs-lookup"><span data-stu-id="5ccbf-110">Note the following rules regarding <xref:System.Data.Linq.DataLoadOptions> usage:</span></span>  
  
-   <span data-ttu-id="5ccbf-111"><xref:System.Data.Linq.DataLoadOptions> При назначении в после выполнения первого <xref:System.Data.Linq.DataContext>  запроса создается исключение.</span><span class="sxs-lookup"><span data-stu-id="5ccbf-111">Assigning a <xref:System.Data.Linq.DataLoadOptions> to a <xref:System.Data.Linq.DataContext> after the first query has been executed generates an exception.</span></span>  
  
-   <span data-ttu-id="5ccbf-112">Изменение после того, как оно было назначено <xref:System.Data.Linq.DataContext> , создает исключение <xref:System.Data.Linq.DataLoadOptions></span><span class="sxs-lookup"><span data-stu-id="5ccbf-112">Modifying a <xref:System.Data.Linq.DataLoadOptions> after it has been assigned to a <xref:System.Data.Linq.DataContext> generates an exception</span></span>  
  
## <a name="cycle-handling"></a><span data-ttu-id="5ccbf-113">Обработка циклов</span><span class="sxs-lookup"><span data-stu-id="5ccbf-113">Cycle Handling</span></span>  
 <span data-ttu-id="5ccbf-114"><xref:System.Data.Linq.DataLoadOptions.LoadWith%2A>директивы и <xref:System.Data.Linq.DataLoadOptions.AssociateWith%2A> не должны создавать циклы.</span><span class="sxs-lookup"><span data-stu-id="5ccbf-114"><xref:System.Data.Linq.DataLoadOptions.LoadWith%2A> and <xref:System.Data.Linq.DataLoadOptions.AssociateWith%2A> directives must not create cycles.</span></span> <span data-ttu-id="5ccbf-115">Ниже представлены примеры таких диаграмм.</span><span class="sxs-lookup"><span data-stu-id="5ccbf-115">The following represent examples of such graphs:</span></span>  
  
-   <span data-ttu-id="5ccbf-116">Пример 1. рекурсивный</span><span class="sxs-lookup"><span data-stu-id="5ccbf-116">Example 1: Self recursive</span></span>  
  
    -   `dlo.LoadWith<Employee>(e => e.Reports);`  
  
-   <span data-ttu-id="5ccbf-117">Пример 2. обратные указатели</span><span class="sxs-lookup"><span data-stu-id="5ccbf-117">Example 2: Back-pointers</span></span>  
  
    -   `dlo.LoadWith <Customer>(c => C.Orders);`  
  
    -   `dlo.LoadWith <Order>(o => o.Customer);`  
  
-   <span data-ttu-id="5ccbf-118">Пример 3. более длительные циклы</span><span class="sxs-lookup"><span data-stu-id="5ccbf-118">Example 3: Longer cycles</span></span>  
  
     <span data-ttu-id="5ccbf-119">Хотя это не должно происходить в хорошо нормализованной модели, это возможно.</span><span class="sxs-lookup"><span data-stu-id="5ccbf-119">Although this should not occur in a well-normalized model, it is possible.</span></span>  
  
    -   `dlo.LoadWith <A>(a => a.Bs);`  
  
    -   `dlo.LoadWith <B>(b => b.Cs);`  
  
    -   `dlo.LoadWith <C>(c => c.As);`  
  
-   <span data-ttu-id="5ccbf-120">Пример 4. рекурсивные вложенные запросы</span><span class="sxs-lookup"><span data-stu-id="5ccbf-120">Example 4: Self recursive subQueries</span></span>  
  
    -   `dlo.AssociateWith<A>(a=>a.As.Where(a=>a.Id=33));`  
  
-   <span data-ttu-id="5ccbf-121">Пример 5. более длинные рекурсивные вложенные запросы</span><span class="sxs-lookup"><span data-stu-id="5ccbf-121">Example 5: Longer recursive subqueries</span></span>  
  
    -   `dlo.AssociateWith<A>(a=>a.Bs.Where(b=>b.Id==3));`  
  
    -   `dlo.AssociateWith<B>(b=>b.As.Where(a=>a.Id==3));`  
  
 <span data-ttu-id="5ccbf-122">Ниже приведены некоторые общие правила, которые помогут понять, что происходит в этих сценариях.</span><span class="sxs-lookup"><span data-stu-id="5ccbf-122">The following are some general rules that help you understand what occurs in these scenarios.</span></span>  
  
 <span data-ttu-id="5ccbf-123">**LoadWith** Каждый вызов <xref:System.Data.Linq.DataLoadOptions.LoadWith%2A> проверяет, появились ли в графе циклы.</span><span class="sxs-lookup"><span data-stu-id="5ccbf-123">**LoadWith** Each call to <xref:System.Data.Linq.DataLoadOptions.LoadWith%2A> checks whether cycles have been introduced into the graph.</span></span> <span data-ttu-id="5ccbf-124">Если есть, как в примерах 1, 2 и 3, возникает исключение.</span><span class="sxs-lookup"><span data-stu-id="5ccbf-124">If there are, as in Examples 1, 2, and 3, an exception is thrown.</span></span>  
  
 <span data-ttu-id="5ccbf-125">**AssociateWith** Обработчик во время выполнения не применяет существующие предложения вложенных запросов к связи внутри выражения.</span><span class="sxs-lookup"><span data-stu-id="5ccbf-125">**AssociateWith** The engine at run time does not apply the existing SubQuery clauses to the relationship inside the expression.</span></span>  
  
-   <span data-ttu-id="5ccbf-126">В примере 4 `Where` предложение выполняется для всех `A`, а не только для тех, которые подотфильтрованы по самому выражению вложенного запроса (так как это будет рекурсивно).</span><span class="sxs-lookup"><span data-stu-id="5ccbf-126">In Example 4, the `Where` clause is executed against all `A`, not just the ones sub-filtered by the SubQuery expression itself (because that would be recursive)</span></span>  
  
-   <span data-ttu-id="5ccbf-127">В примере 5 первое `Where` предложение применяется ко `B`всем, даже если имеются вложенные запросы `B`.</span><span class="sxs-lookup"><span data-stu-id="5ccbf-127">In Example 5, the first `Where` clause is applied to all the `B`s, even though there are subqueries on `B`.</span></span> <span data-ttu-id="5ccbf-128">Второе `Where` предложение применяется ко всем, `A`даже если имеются вложенные запросы `A`.</span><span class="sxs-lookup"><span data-stu-id="5ccbf-128">The second `Where` clause is applied to all the `A`s even though there are subqueries on `A`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5ccbf-129">При извлечении `Customers` из образца базы данных Northwind можно использовать <xref:System.Data.Linq.DataLoadOptions> , чтобы указать, что `Orders` также необходимо получить.</span><span class="sxs-lookup"><span data-stu-id="5ccbf-129">When you retrieve `Customers` from the Northwind sample database, you can use <xref:System.Data.Linq.DataLoadOptions> to specify that `Orders` is also to be retrieved.</span></span> <span data-ttu-id="5ccbf-130">Можно даже указать, какое подмножество `Orders` извлечь.</span><span class="sxs-lookup"><span data-stu-id="5ccbf-130">You can even specify which subset of `Orders` to retrieve.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataLoadOptions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataLoadOptions.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataLoadOptions();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5ccbf-131">Инициализирует новый экземпляр класса <see cref="T:System.Data.Linq.DataLoadOptions" />.</span><span class="sxs-lookup"><span data-stu-id="5ccbf-131">Initializes a new instance of the <see cref="T:System.Data.Linq.DataLoadOptions" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AssociateWith">
      <MemberSignature Language="C#" Value="public void AssociateWith (System.Linq.Expressions.LambdaExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AssociateWith(class System.Linq.Expressions.LambdaExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataLoadOptions.AssociateWith(System.Linq.Expressions.LambdaExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AssociateWith (expression As LambdaExpression)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AssociateWith(System::Linq::Expressions::LambdaExpression ^ expression);" />
      <MemberSignature Language="F#" Value="member this.AssociateWith : System.Linq.Expressions.LambdaExpression -&gt; unit" Usage="dataLoadOptions.AssociateWith expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.LambdaExpression" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="5ccbf-132">Определяет запрос, который следует использовать для свойства или поля связи "один ко многим".</span><span class="sxs-lookup"><span data-stu-id="5ccbf-132">Identifies the query to be used on a particular one-to-many field or property.</span></span> <span data-ttu-id="5ccbf-133">Обратите внимание на следующее условия:</span><span class="sxs-lookup"><span data-stu-id="5ccbf-133">Note the following:</span></span>  
  
 <span data-ttu-id="5ccbf-134">Если выражение не запускается с помощью поля или свойства, представляющих связь "один ко многим", создается исключение.</span><span class="sxs-lookup"><span data-stu-id="5ccbf-134">If the expression does not start with a field or property that represents a one-to-many relationship, an exception is thrown.</span></span>  
  
 <span data-ttu-id="5ccbf-135">Если в выражении отображается оператор, отличный от допустимого оператора, создается исключение.</span><span class="sxs-lookup"><span data-stu-id="5ccbf-135">If an operator other than a valid operator appears in the expression, an exception is thrown.</span></span> <span data-ttu-id="5ccbf-136">Допустимы следующие операторы:</span><span class="sxs-lookup"><span data-stu-id="5ccbf-136">Valid operators are as follows:</span></span>  
  
 <span data-ttu-id="5ccbf-137">Where</span><span class="sxs-lookup"><span data-stu-id="5ccbf-137">Where</span></span>  
  
 <span data-ttu-id="5ccbf-138">OrderBy</span><span class="sxs-lookup"><span data-stu-id="5ccbf-138">OrderBy</span></span>  
  
 <span data-ttu-id="5ccbf-139">ThenBy</span><span class="sxs-lookup"><span data-stu-id="5ccbf-139">ThenBy</span></span>  
  
 <span data-ttu-id="5ccbf-140">OrderByDescending</span><span class="sxs-lookup"><span data-stu-id="5ccbf-140">OrderByDescending</span></span>  
  
 <span data-ttu-id="5ccbf-141">ThenByDescending</span><span class="sxs-lookup"><span data-stu-id="5ccbf-141">ThenByDescending</span></span>  
  
 <span data-ttu-id="5ccbf-142">Take</span><span class="sxs-lookup"><span data-stu-id="5ccbf-142">Take</span></span></param>
        <summary><span data-ttu-id="5ccbf-143">Фильтрует объекты, полученные для определенной связи.</span><span class="sxs-lookup"><span data-stu-id="5ccbf-143">Filters the objects retrieved for a particular relationship.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ccbf-144">В следующем примере внутренний цикл выполняет итерацию только для тех `Orders` , которые не были доставлены сегодня.</span><span class="sxs-lookup"><span data-stu-id="5ccbf-144">In the following example, the inner loop iterates only over those `Orders` that have not been shipped today.</span></span>  
  
   
  
## Examples  
 [!code-csharp[System.Data.Linq.DataLoadOptions#1](~/samples/snippets/csharp/VS_Snippets_Data/system.data.linq.dataloadoptions/cs/program.cs#1)]
 [!code-vb[System.Data.Linq.DataLoadOptions#1](~/samples/snippets/visualbasic/VS_Snippets_Data/system.data.linq.dataloadoptions/vb/module1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AssociateWith&lt;T&gt;">
      <MemberSignature Language="C#" Value="public void AssociateWith&lt;T&gt; (System.Linq.Expressions.Expression&lt;Func&lt;T,object&gt;&gt; expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AssociateWith&lt;T&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!T, object&gt;&gt; expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataLoadOptions.AssociateWith``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}})" />
      <MemberSignature Language="VB.NET" Value="Public Sub AssociateWith(Of T) (expression As Expression(Of Func(Of T, Object)))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; void AssociateWith(System::Linq::Expressions::Expression&lt;Func&lt;T, System::Object ^&gt; ^&gt; ^ expression);" />
      <MemberSignature Language="F#" Value="member this.AssociateWith : System.Linq.Expressions.Expression&lt;Func&lt;'T, obj&gt;&gt; -&gt; unit" Usage="dataLoadOptions.AssociateWith expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;T,System.Object&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="5ccbf-145">Запрашиваемый тип.</span><span class="sxs-lookup"><span data-stu-id="5ccbf-145">The type that is queried against.</span></span>  
  
 <span data-ttu-id="5ccbf-146">Если тип не сопоставляется, создается исключение.</span><span class="sxs-lookup"><span data-stu-id="5ccbf-146">If the type is unmapped, an exception is thrown.</span></span></typeparam>
        <param name="expression"><span data-ttu-id="5ccbf-147">Определяет запрос, который следует использовать для свойства или поля связи "один ко многим".</span><span class="sxs-lookup"><span data-stu-id="5ccbf-147">Identifies the query to be used on a particular one-to-many field or property.</span></span> <span data-ttu-id="5ccbf-148">Обратите внимание на следующее условия:</span><span class="sxs-lookup"><span data-stu-id="5ccbf-148">Note the following:</span></span>  
  
 <span data-ttu-id="5ccbf-149">Если выражение не запускается с помощью поля или свойства, представляющих связь "один ко многим", создается исключение.</span><span class="sxs-lookup"><span data-stu-id="5ccbf-149">If the expression does not start with a field or property that represents a one-to-many relationship, an exception is thrown.</span></span>  
  
 <span data-ttu-id="5ccbf-150">Если в выражении отображается оператор, отличный от допустимого оператора, создается исключение.</span><span class="sxs-lookup"><span data-stu-id="5ccbf-150">If an operator other than a valid operator appears in the expression, an exception is thrown.</span></span> <span data-ttu-id="5ccbf-151">Допустимы следующие операторы:</span><span class="sxs-lookup"><span data-stu-id="5ccbf-151">Valid operators are as follows:</span></span>  
  
 <span data-ttu-id="5ccbf-152">Where</span><span class="sxs-lookup"><span data-stu-id="5ccbf-152">Where</span></span>  
  
 <span data-ttu-id="5ccbf-153">OrderBy</span><span class="sxs-lookup"><span data-stu-id="5ccbf-153">OrderBy</span></span>  
  
 <span data-ttu-id="5ccbf-154">ThenBy</span><span class="sxs-lookup"><span data-stu-id="5ccbf-154">ThenBy</span></span>  
  
 <span data-ttu-id="5ccbf-155">OrderByDescending</span><span class="sxs-lookup"><span data-stu-id="5ccbf-155">OrderByDescending</span></span>  
  
 <span data-ttu-id="5ccbf-156">ThenByDescending</span><span class="sxs-lookup"><span data-stu-id="5ccbf-156">ThenByDescending</span></span>  
  
 <span data-ttu-id="5ccbf-157">Take</span><span class="sxs-lookup"><span data-stu-id="5ccbf-157">Take</span></span></param>
        <summary><span data-ttu-id="5ccbf-158">Фильтрует объекты, полученные для определенной связи.</span><span class="sxs-lookup"><span data-stu-id="5ccbf-158">Filters objects retrieved for a particular relationship.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ccbf-159">Сведения о том, как избежать циклов, <xref:System.Data.Linq.DataLoadOptions>см. в разделе.</span><span class="sxs-lookup"><span data-stu-id="5ccbf-159">For information about how to avoid cycles, see <xref:System.Data.Linq.DataLoadOptions>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5ccbf-160">В следующем примере внутренний цикл выполняет итерацию только для тех `Orders` , которые не были доставлены сегодня.</span><span class="sxs-lookup"><span data-stu-id="5ccbf-160">In the following example, the inner loop iterates only over those `Orders` that have not been shipped today.</span></span>  
  
 [!code-csharp[System.Data.Linq.DataLoadOptions#1](~/samples/snippets/csharp/VS_Snippets_Data/system.data.linq.dataloadoptions/cs/program.cs#1)]
 [!code-vb[System.Data.Linq.DataLoadOptions#1](~/samples/snippets/visualbasic/VS_Snippets_Data/system.data.linq.dataloadoptions/vb/module1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAssociationCriteria">
      <MemberSignature Language="C#" Value="public bool GetAssociationCriteria (System.Reflection.MemberInfo memberInfo, out System.Linq.Expressions.LambdaExpression associationCriteria);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetAssociationCriteria(class System.Reflection.MemberInfo memberInfo, [out] class System.Linq.Expressions.LambdaExpression&amp; associationCriteria) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataLoadOptions.GetAssociationCriteria(System.Reflection.MemberInfo,System.Linq.Expressions.LambdaExpression@)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetAssociationCriteria(System::Reflection::MemberInfo ^ memberInfo, [Runtime::InteropServices::Out] System::Linq::Expressions::LambdaExpression ^ % associationCriteria);" />
      <MemberSignature Language="F#" Value="member this.GetAssociationCriteria : System.Reflection.MemberInfo *  -&gt; bool" Usage="dataLoadOptions.GetAssociationCriteria (memberInfo, associationCriteria)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="memberInfo" Type="System.Reflection.MemberInfo" Index="0" FrameworkAlternate="xamarinmac-3.0" />
        <Parameter Name="associationCriteria" Type="System.Linq.Expressions.LambdaExpression" RefType="out" Index="1" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="memberInfo">To be added.</param>
        <param name="associationCriteria">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsImmediate">
      <MemberSignature Language="C#" Value="public bool IsImmediate (System.Reflection.MemberInfo memberInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsImmediate(class System.Reflection.MemberInfo memberInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataLoadOptions.IsImmediate(System.Reflection.MemberInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsImmediate(System::Reflection::MemberInfo ^ memberInfo);" />
      <MemberSignature Language="F#" Value="member this.IsImmediate : System.Reflection.MemberInfo -&gt; bool" Usage="dataLoadOptions.IsImmediate memberInfo" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="memberInfo" Type="System.Reflection.MemberInfo" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="memberInfo">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadWith">
      <MemberSignature Language="C#" Value="public void LoadWith (System.Linq.Expressions.LambdaExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LoadWith(class System.Linq.Expressions.LambdaExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataLoadOptions.LoadWith(System.Linq.Expressions.LambdaExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Sub LoadWith (expression As LambdaExpression)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LoadWith(System::Linq::Expressions::LambdaExpression ^ expression);" />
      <MemberSignature Language="F#" Value="member this.LoadWith : System.Linq.Expressions.LambdaExpression -&gt; unit" Usage="dataLoadOptions.LoadWith expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.LambdaExpression" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="5ccbf-161">Лямбда-выражение, определяющее связанный материал.</span><span class="sxs-lookup"><span data-stu-id="5ccbf-161">A lambda expression that identifies the related material.</span></span></param>
        <summary><span data-ttu-id="5ccbf-162">Получает указанные данные, связанные с основным целевым объектом с помощью лямбда-выражения.</span><span class="sxs-lookup"><span data-stu-id="5ccbf-162">Retrieves specified data related to the main target by using a lambda expression.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ccbf-163">В следующем примере при выполнении запроса извлекаются все заказы (`Orders`) для всех клиентов (`Customers`), расположенных в Лондоне.</span><span class="sxs-lookup"><span data-stu-id="5ccbf-163">In the following example, all the `Orders` for all the `Customers` who are located in London are retrieved when the query is executed.</span></span> <span data-ttu-id="5ccbf-164">В результате, при последующем доступе к свойству `Orders` объекта `Customer` не инициируется новый запрос базы данных.</span><span class="sxs-lookup"><span data-stu-id="5ccbf-164">As a result, successive access to the `Orders` property on a `Customer` object does not trigger a new database query.</span></span>  
  
   
  
## Examples  
 [!code-csharp[System.Data.Linq.DataLoadOptions#2](~/samples/snippets/csharp/VS_Snippets_Data/system.data.linq.dataloadoptions/cs/program.cs#2)]
 [!code-vb[System.Data.Linq.DataLoadOptions#2](~/samples/snippets/visualbasic/VS_Snippets_Data/system.data.linq.dataloadoptions/vb/module1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadWith&lt;T&gt;">
      <MemberSignature Language="C#" Value="public void LoadWith&lt;T&gt; (System.Linq.Expressions.Expression&lt;Func&lt;T,object&gt;&gt; expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LoadWith&lt;T&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!T, object&gt;&gt; expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataLoadOptions.LoadWith``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}})" />
      <MemberSignature Language="VB.NET" Value="Public Sub LoadWith(Of T) (expression As Expression(Of Func(Of T, Object)))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; void LoadWith(System::Linq::Expressions::Expression&lt;Func&lt;T, System::Object ^&gt; ^&gt; ^ expression);" />
      <MemberSignature Language="F#" Value="member this.LoadWith : System.Linq.Expressions.Expression&lt;Func&lt;'T, obj&gt;&gt; -&gt; unit" Usage="dataLoadOptions.LoadWith expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;T,System.Object&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="5ccbf-165">Запрашиваемый тип.</span><span class="sxs-lookup"><span data-stu-id="5ccbf-165">Type that is queried against.</span></span>  
  
 <span data-ttu-id="5ccbf-166">Если этот тип не сопоставляется, создается исключение.</span><span class="sxs-lookup"><span data-stu-id="5ccbf-166">If this type is unmapped, an exception is thrown.</span></span></typeparam>
        <param name="expression"><span data-ttu-id="5ccbf-167">Определяет поле или свойство для извлечения.</span><span class="sxs-lookup"><span data-stu-id="5ccbf-167">Identifies the field or property to be retrieved.</span></span>  
  
 <span data-ttu-id="5ccbf-168">Если выражение не определяет поле или свойство, представляющие связь "один к одному" или "один ко многим", создается исключение.</span><span class="sxs-lookup"><span data-stu-id="5ccbf-168">If the expression does not identify a field or property that represents a one-to-one or one-to-many relationship, an exception is thrown.</span></span></param>
        <summary><span data-ttu-id="5ccbf-169">Указывает, какие вложенные объекты следует получить при отправке запроса для объекта типа Т.</span><span class="sxs-lookup"><span data-stu-id="5ccbf-169">Specifies which sub-objects to retrieve when a query is submitted for an object of type T.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ccbf-170">Нельзя указать загрузку двух уровней связей (например, `Orders.OrderDetails`).</span><span class="sxs-lookup"><span data-stu-id="5ccbf-170">You cannot specify the loading of two levels of relationships (for example, `Orders.OrderDetails`).</span></span> <span data-ttu-id="5ccbf-171">В этих сценариях необходимо указать два отдельных <xref:System.Data.Linq.DataLoadOptions.LoadWith%2A> метода.</span><span class="sxs-lookup"><span data-stu-id="5ccbf-171">In these scenarios you must specify two separate <xref:System.Data.Linq.DataLoadOptions.LoadWith%2A> methods.</span></span>  
  
 <span data-ttu-id="5ccbf-172">Чтобы избежать перецикла, см. раздел <xref:System.Data.Linq.DataLoadOptions>"Примечания" в разделе.</span><span class="sxs-lookup"><span data-stu-id="5ccbf-172">To avoid cycling, see Remarks section in <xref:System.Data.Linq.DataLoadOptions>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5ccbf-173">В следующем примере при выполнении запроса извлекаются все заказы (`Orders`) для всех клиентов (`Customers`), расположенных в Лондоне.</span><span class="sxs-lookup"><span data-stu-id="5ccbf-173">In the following example, all the `Orders` for all the `Customers` who are located in London are retrieved when the query is executed.</span></span> <span data-ttu-id="5ccbf-174">В результате, при последующем доступе к свойству `Orders` объекта `Customer` не инициируется новый запрос базы данных.</span><span class="sxs-lookup"><span data-stu-id="5ccbf-174">As a result, successive access to the `Orders` property on a `Customer` object does not trigger a new database query.</span></span>  
  
 [!code-csharp[System.Data.Linq.DataLoadOptions#2](~/samples/snippets/csharp/VS_Snippets_Data/system.data.linq.dataloadoptions/cs/program.cs#2)]
 [!code-vb[System.Data.Linq.DataLoadOptions#2](~/samples/snippets/visualbasic/VS_Snippets_Data/system.data.linq.dataloadoptions/vb/module1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
