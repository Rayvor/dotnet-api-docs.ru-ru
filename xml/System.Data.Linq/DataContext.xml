<Type Name="DataContext" FullName="System.Data.Linq.DataContext">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4dec371eab23b9b51981b3e008c438d68e467356" /><Meta Name="ms.sourcegitcommit" Value="a22d0855bbf24d893f43605f8b7e3a44bd9551a5" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70336013" /></Metadata><TypeSignature Language="C#" Value="public class DataContext : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataContext extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Data.Linq.DataContext" />
  <TypeSignature Language="VB.NET" Value="Public Class DataContext&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataContext : IDisposable" />
  <TypeSignature Language="F#" Value="type DataContext = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Linq</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="0c0b3-101">Представляет основную точку входа для платформы LINQ to SQL.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-101">Represents the main entry point for the LINQ to SQL framework.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c0b3-102"><xref:System.Data.Linq.DataContext> — Это источник всех сущностей, сопоставленных с подключением к базе данных.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-102">The <xref:System.Data.Linq.DataContext> is the source of all entities mapped over a database connection.</span></span> <span data-ttu-id="0c0b3-103">Он отслеживает изменения, внесенные во все извлеченные сущности, и поддерживает "кэш идентификаторов", гарантирующий, что сущности, полученные более одного раза, представляются с помощью одного и того же экземпляра объекта.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-103">It tracks changes that you made to all retrieved entities and maintains an "identity cache" that guarantees that entities retrieved more than one time are represented by using the same object instance.</span></span>  
  
 <span data-ttu-id="0c0b3-104">Как <xref:System.Data.Linq.DataContext> правило, экземпляр предназначен для последней "единицы работы", однако приложение определяет этот термин.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-104">In general, a <xref:System.Data.Linq.DataContext> instance is designed to last for one "unit of work" however your application defines that term.</span></span> <span data-ttu-id="0c0b3-105">Объект <xref:System.Data.Linq.DataContext> является простым и не может быть затратным для создания.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-105">A <xref:System.Data.Linq.DataContext> is lightweight and is not expensive to create.</span></span> <span data-ttu-id="0c0b3-106">Типичное [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] приложение создает <xref:System.Data.Linq.DataContext> экземпляры в области действия метода или в качестве члена кратковременных классов, представляющих логический набор связанных операций с базами данных.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-106">A typical [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] application creates <xref:System.Data.Linq.DataContext> instances at method scope or as a member of short-lived classes that represent a logical set of related database operations.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0c0b3-107">Инициализирует новый экземпляр класса <see cref="T:System.Data.Linq.DataContext" />.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-107">Initializes a new instance of the <see cref="T:System.Data.Linq.DataContext" /> class.</span></span> <span data-ttu-id="0c0b3-108">Используемая строка подключения может представлять собой строку подключения ADO.NET.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-108">The connection string you use can be an ADO.NET connection string.</span></span> <span data-ttu-id="0c0b3-109">Кроме того, можно задать имя файла в файле SQL Server Express или SQL Server Compact.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-109">You can also specify a filename to a SQL Server Express or SQL Server Compact file.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataContext (System.Data.IDbConnection connection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.IDbConnection connection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.#ctor(System.Data.IDbConnection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connection As IDbConnection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataContext(System::Data::IDbConnection ^ connection);" />
      <MemberSignature Language="F#" Value="new System.Data.Linq.DataContext : System.Data.IDbConnection -&gt; System.Data.Linq.DataContext" Usage="new System.Data.Linq.DataContext connection" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connection" Type="System.Data.IDbConnection" />
      </Parameters>
      <Docs>
        <param name="connection"><span data-ttu-id="0c0b3-110">Подключение, используемое [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span><span class="sxs-lookup"><span data-stu-id="0c0b3-110">The connection used by the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span></param>
        <summary><span data-ttu-id="0c0b3-111">Инициализирует новый экземпляр класса <see cref="T:System.Data.Linq.DataContext" />, ссылаясь на подключение, используемое [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span><span class="sxs-lookup"><span data-stu-id="0c0b3-111">Initializes a new instance of the <see cref="T:System.Data.Linq.DataContext" /> class by referencing the connection used by the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c0b3-112">При предоставлении закрытого соединения или строки подключения при необходимости открываетсяизакрываетсяподключениекбазеданных.<xref:System.Data.Linq.DataContext></span><span class="sxs-lookup"><span data-stu-id="0c0b3-112">A <xref:System.Data.Linq.DataContext> opens and closes a database connection as needed if you provide a closed connection or a connection string.</span></span> <span data-ttu-id="0c0b3-113">`Dispose` Как<xref:System.Data.Linq.DataContext>правило, никогда не следует вызывать для.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-113">In general, you should never have to call `Dispose` on a <xref:System.Data.Linq.DataContext>.</span></span> <span data-ttu-id="0c0b3-114">Если вы предложит открытое соединение <xref:System.Data.Linq.DataContext> , компонент не закроет его.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-114">If you provide an open connection, the <xref:System.Data.Linq.DataContext> will not close it.</span></span> <span data-ttu-id="0c0b3-115">Поэтому не создавайте экземпляр <xref:System.Data.Linq.DataContext> с открытым соединением, если у вас нет веских причин для этого.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-115">Therefore, do not instantiate a <xref:System.Data.Linq.DataContext> with an open connection unless you have a good reason to do this.</span></span> <span data-ttu-id="0c0b3-116"><xref:System.Transactions> В транзакции <xref:System.Data.Linq.DataContext> компонент не будет открывать или закрывать соединение во избежание продвижения.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-116">In a <xref:System.Transactions> transaction, a <xref:System.Data.Linq.DataContext> will not open or close a connection to avoid promotion.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataContext (System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mapping);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.IDbConnection connection, class System.Data.Linq.Mapping.MappingSource mapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.#ctor(System.Data.IDbConnection,System.Data.Linq.Mapping.MappingSource)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connection As IDbConnection, mapping As MappingSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataContext(System::Data::IDbConnection ^ connection, System::Data::Linq::Mapping::MappingSource ^ mapping);" />
      <MemberSignature Language="F#" Value="new System.Data.Linq.DataContext : System.Data.IDbConnection * System.Data.Linq.Mapping.MappingSource -&gt; System.Data.Linq.DataContext" Usage="new System.Data.Linq.DataContext (connection, mapping)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connection" Type="System.Data.IDbConnection" />
        <Parameter Name="mapping" Type="System.Data.Linq.Mapping.MappingSource" />
      </Parameters>
      <Docs>
        <param name="connection"><span data-ttu-id="0c0b3-117">Соединение, используемое платформой .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-117">The connection used by the .NET Framework.</span></span></param>
        <param name="mapping"><span data-ttu-id="0c0b3-118">Источник сопоставления.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-118">A source for mapping.</span></span></param>
        <summary><span data-ttu-id="0c0b3-119">Инициализирует новый экземпляр класса <see cref="T:System.Data.Linq.DataContext" />, ссылаясь на подключение и источник сопоставления.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-119">Initializes a new instance of the <see cref="T:System.Data.Linq.DataContext" /> class by referencing a connection and a mapping source.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataContext (string fileOrServerOrConnection, System.Data.Linq.Mapping.MappingSource mapping);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileOrServerOrConnection, class System.Data.Linq.Mapping.MappingSource mapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.#ctor(System.String,System.Data.Linq.Mapping.MappingSource)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileOrServerOrConnection As String, mapping As MappingSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataContext(System::String ^ fileOrServerOrConnection, System::Data::Linq::Mapping::MappingSource ^ mapping);" />
      <MemberSignature Language="F#" Value="new System.Data.Linq.DataContext : string * System.Data.Linq.Mapping.MappingSource -&gt; System.Data.Linq.DataContext" Usage="new System.Data.Linq.DataContext (fileOrServerOrConnection, mapping)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileOrServerOrConnection" Type="System.String" />
        <Parameter Name="mapping" Type="System.Data.Linq.Mapping.MappingSource" />
      </Parameters>
      <Docs>
        <param name="fileOrServerOrConnection"><span data-ttu-id="0c0b3-120">Этот аргумент может принимать любое из следующих значений:</span><span class="sxs-lookup"><span data-stu-id="0c0b3-120">This argument can be any one of the following:</span></span> 
<span data-ttu-id="0c0b3-121">Имя файла, где находится база данных SQL Server Express.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-121">The name of a file where a SQL Server Express database resides.</span></span>  
  
<span data-ttu-id="0c0b3-122">Имя сервера, где находится база данных.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-122">The name of a server where a database is present.</span></span> <span data-ttu-id="0c0b3-123">В этом случае поставщик использует для пользователя базу данных по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-123">In this case the provider uses the default database for a user.</span></span>  
  
<span data-ttu-id="0c0b3-124">Полная строка подключения.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-124">A complete connection string.</span></span> [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] <span data-ttu-id="0c0b3-125">просто передает строку поставщику без изменений.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-125">just passes the string to the provider without modification.</span></span></param>
        <param name="mapping"><span data-ttu-id="0c0b3-126">Источник сопоставления.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-126">A source for mapping.</span></span></param>
        <summary><span data-ttu-id="0c0b3-127">Инициализирует новый экземпляр класса <see cref="T:System.Data.Linq.DataContext" />, ссылаясь на источник файлов и источник сопоставления.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-127">Initializes a new instance of the <see cref="T:System.Data.Linq.DataContext" /> class by referencing a file source and a mapping source.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataContext (string fileOrServerOrConnection);" FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileOrServerOrConnection) cil managed" FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileOrServerOrConnection As String)" FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataContext(System::String ^ fileOrServerOrConnection);" FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="new System.Data.Linq.DataContext : string -&gt; System.Data.Linq.DataContext" Usage="new System.Data.Linq.DataContext fileOrServerOrConnection" FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C#" Value="public DataContext (string connectionString);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string connectionString) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connectionString As String)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataContext(System::String ^ connectionString);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="new System.Data.Linq.DataContext : string -&gt; System.Data.Linq.DataContext" Usage="new System.Data.Linq.DataContext connectionString" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileOrServerOrConnection" Type="System.String" Index="0" FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="connectionString" Type="System.String" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="fileOrServerOrConnection"><span data-ttu-id="0c0b3-128">Этот аргумент может принимать любое из следующих значений: Имя файла, где находится база данных SQL Server Express.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-128">This argument can be any one of the following: The name of a file where a SQL Server Express database resides.</span></span>

<span data-ttu-id="0c0b3-129">Имя сервера, где находится база данных.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-129">The name of a server where a database is present.</span></span> <span data-ttu-id="0c0b3-130">В этом случае поставщик использует для пользователя базу данных по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-130">In this case the provider uses the default database for a user.</span></span>  
  
<span data-ttu-id="0c0b3-131">Полная строка подключения.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-131">A complete connection string.</span></span> <span data-ttu-id="0c0b3-132">LINQ to SQL просто передает строку поставщику без изменений.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-132">LINQ to SQL just passes the string to the provider without modification.</span></span></param>
        <param name="connectionString"><span data-ttu-id="0c0b3-133">Этот аргумент может принимать любое из следующих значений: Имя файла, где находится база данных SQL Server Express.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-133">This argument can be any one of the following: The name of a file where a SQL Server Express database resides.</span></span>

<span data-ttu-id="0c0b3-134">Имя сервера, где находится база данных.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-134">The name of a server where a database is present.</span></span> <span data-ttu-id="0c0b3-135">В этом случае поставщик использует для пользователя базу данных по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-135">In this case the provider uses the default database for a user.</span></span>  
  
<span data-ttu-id="0c0b3-136">Полная строка подключения.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-136">A complete connection string.</span></span> <span data-ttu-id="0c0b3-137">LINQ to SQL просто передает строку поставщику без изменений.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-137">LINQ to SQL just passes the string to the provider without modification.</span></span></param>
        <summary><span data-ttu-id="0c0b3-138">Инициализирует новый экземпляр класса <see cref="T:System.Data.Linq.DataContext" />, ссылаясь на источник файла.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-138">Initializes a new instance of the <see cref="T:System.Data.Linq.DataContext" /> class by referencing a file source.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChangeConflicts">
      <MemberSignature Language="C#" Value="public System.Data.Linq.ChangeConflictCollection ChangeConflicts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Linq.ChangeConflictCollection ChangeConflicts" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.DataContext.ChangeConflicts" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ChangeConflicts As ChangeConflictCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Linq::ChangeConflictCollection ^ ChangeConflicts { System::Data::Linq::ChangeConflictCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ChangeConflicts : System.Data.Linq.ChangeConflictCollection" Usage="System.Data.Linq.DataContext.ChangeConflicts" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.ChangeConflictCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0c0b3-139">Возвращает коллекцию объектов, ставшую причиной конфликта параллелизма, когда был вызван метод <see cref="M:System.Data.Linq.DataContext.SubmitChanges" />.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-139">Gets a collection of objects that caused concurrency conflicts when <see cref="M:System.Data.Linq.DataContext.SubmitChanges" /> was called.</span></span></summary>
        <value><span data-ttu-id="0c0b3-140">Коллекция объектов, ставшая причиной конфликта параллелизма.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-140">A collection of objects that caused concurrency conflicts.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c0b3-141">В следующем примере показано, как можно выполнить итерацию коллекции для получения сведений о конфликтах.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-141">The following example shows how the collection can be iterated over to retrieve conflict information.</span></span>  
  
   
  
## Examples  
 [!code-csharp[System.Data.Linq.ObjectChangeConflict#1](~/samples/snippets/csharp/VS_Snippets_Data/system.data.linq.objectchangeconflict/cs/program.cs#1)]
 [!code-vb[System.Data.Linq.ObjectChangeConflict#1](~/samples/snippets/visualbasic/VS_Snippets_Data/system.data.linq.objectchangeconflict/vb/module1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandTimeout">
      <MemberSignature Language="C#" Value="public int CommandTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CommandTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.DataContext.CommandTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property CommandTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CommandTimeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.CommandTimeout : int with get, set" Usage="System.Data.Linq.DataContext.CommandTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0c0b3-142">Возвращает или задает значение, которое увеличивает время ожидания для запросов (в секундах), для которых в противном случае время ожидания истекло бы в течение времени ожидания по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-142">Gets or sets a value that increases the time-out period (in seconds) for queries that would otherwise time out during the default time-out period.</span></span></summary>
        <value><span data-ttu-id="0c0b3-143">Целочисленное значение, увеличивающее время ожидания (в секундах) для запросов, которые в противном случае истечения времени ожидания по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-143">An integer value that increases the time-out period (in seconds) for queries that would otherwise time out during the default time-out period.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c0b3-144">Это свойство возвращает или задает время ожидания команды (в секундах), используемое для выполнения созданных команд`IDbCommands`().</span><span class="sxs-lookup"><span data-stu-id="0c0b3-144">This property gets or sets the command time-out (in seconds) used to execute generated commands (`IDbCommands`).</span></span> <span data-ttu-id="0c0b3-145">Для получения дополнительной информации см. <xref:System.Data.IDbCommand.CommandTimeout%2A>.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-145">For more information, see <xref:System.Data.IDbCommand.CommandTimeout%2A>.</span></span>  
  
 <span data-ttu-id="0c0b3-146">Если это свойство не задано, для выполнения команды запроса <xref:System.Data.IDbCommand.CommandTimeout%2A> используется значение по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-146">When this property is not set, the default value of <xref:System.Data.IDbCommand.CommandTimeout%2A> is used for query command execution.</span></span> <span data-ttu-id="0c0b3-147">Это значение по умолчанию задается поставщиком хранилища.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-147">This default value is set by the storage provider.</span></span> <span data-ttu-id="0c0b3-148">Обратите внимание, что некоторые поставщики могут создавать исключения, если для этого значения задано ненулевое значение.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-148">Note that some providers may throw exceptions if this value is set to a non-zero value.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Connection">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbConnection Connection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbConnection Connection" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.DataContext.Connection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Connection As DbConnection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Common::DbConnection ^ Connection { System::Data::Common::DbConnection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Connection : System.Data.Common.DbConnection" Usage="System.Data.Linq.DataContext.Connection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbConnection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0c0b3-149">Возвращает подключение, используемое платформой.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-149">Gets the connection used by the framework.</span></span></summary>
        <value><span data-ttu-id="0c0b3-150">Подключение, используемое платформой.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-150">The connection used by the framework.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c0b3-151">Это свойство можно использовать для взаимодействия с реляционным кодом ADO.NET.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-151">You can use this property to interoperate with relational ADO.NET code.</span></span>  
  
 <span data-ttu-id="0c0b3-152">Возвращенное соединение будет закрыто, если пользователь явно не открыл его.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-152">The returned connection will be closed unless it has been explicitly opened by the user.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDatabase">
      <MemberSignature Language="C#" Value="public void CreateDatabase ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CreateDatabase() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.CreateDatabase" />
      <MemberSignature Language="VB.NET" Value="Public Sub CreateDatabase ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CreateDatabase();" />
      <MemberSignature Language="F#" Value="member this.CreateDatabase : unit -&gt; unit" Usage="dataContext.CreateDatabase " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0c0b3-153">Создает базу данных на сервере.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-153">Creates a database on the server.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c0b3-154">Имя базы данных формируется с помощью следующего алгоритма:</span><span class="sxs-lookup"><span data-stu-id="0c0b3-154">The name of the database is derived by using the following algorithm:</span></span>  
  
1. <span data-ttu-id="0c0b3-155">Если база данных определена в строке подключения, используется ее имя.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-155">If a database is identified in the connection string, its name is used.</span></span>  
1. <span data-ttu-id="0c0b3-156">Если атрибут имеется, его <xref:System.Data.Linq.Mapping.DatabaseAttribute.Name%2A> свойство используется в качестве имени базы данных. <xref:System.Data.Linq.Mapping.DatabaseAttribute></span><span class="sxs-lookup"><span data-stu-id="0c0b3-156">If a <xref:System.Data.Linq.Mapping.DatabaseAttribute> attribute is present, its <xref:System.Data.Linq.Mapping.DatabaseAttribute.Name%2A> property is used as the name of the database.</span></span>  
1. <span data-ttu-id="0c0b3-157">Если в строке соединения отсутствует тег базы данных и используется строго типизированный <xref:System.Data.Linq.DataContext> объект, то создается база данных, имя которой совпадает с именем <xref:System.Data.Linq.DataContext> наследуемого класса.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-157">If there is no database tag in the connection string and a strongly typed <xref:System.Data.Linq.DataContext> is used, a database that has the same name as the <xref:System.Data.Linq.DataContext> inheriting class is created.</span></span>  
1. <span data-ttu-id="0c0b3-158">Если используется слабо типизированный <xref:System.Data.Linq.DataContext> объект, возникает исключение.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-158">If a weakly typed <xref:System.Data.Linq.DataContext> is used, an exception is thrown.</span></span>  
1. <span data-ttu-id="0c0b3-159">Если объект <xref:System.Data.Linq.DataContext> создан с использованием имени файла, то создается база данных, соответствующая этому имени файла.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-159">If the <xref:System.Data.Linq.DataContext> has been created by using a file name, the database corresponding to that file name is created.</span></span>  
     
  
## Examples  
 <span data-ttu-id="0c0b3-160">В следующем коде показано, как настроить временную базу данных, а затем удалить ее.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-160">The following code shows how to set up a temporary database and then remove it.</span></span>  
  
 [!code-csharp[System.Data.Linq.DataContext#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Data.Linq.DataContext/cs/Program.cs#1)]
 [!code-vb[System.Data.Linq.DataContext#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Data.Linq.DataContext/vb/Module1.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/fb7f23c4-4572-4c38-9898-a287807d070c"><span data-ttu-id="0c0b3-161">Практическое руководство. динамически создать базу данных (LINQ to SQL)</span><span class="sxs-lookup"><span data-stu-id="0c0b3-161">How to: Dynamically Create a Database (LINQ to SQL)</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/4ed76327-54a7-414b-82a9-7579bfcec04b"><span data-ttu-id="0c0b3-162">Сопоставление типов SQL-CLR (LINQ to SQL)</span><span class="sxs-lookup"><span data-stu-id="0c0b3-162">SQL-CLR Type Mapping (LINQ to SQL)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CreateMethodCallQuery&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="protected internal System.Linq.IQueryable&lt;TResult&gt; CreateMethodCallQuery&lt;TResult&gt; (object instance, System.Reflection.MethodInfo methodInfo, params object[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance class System.Linq.IQueryable`1&lt;!!TResult&gt; CreateMethodCallQuery&lt;TResult&gt;(object instance, class System.Reflection.MethodInfo methodInfo, object[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.CreateMethodCallQuery``1(System.Object,System.Reflection.MethodInfo,System.Object[])" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA;generic &lt;typename TResult&gt;&#xA; System::Linq::IQueryable&lt;TResult&gt; ^ CreateMethodCallQuery(System::Object ^ instance, System::Reflection::MethodInfo ^ methodInfo, ... cli::array &lt;System::Object ^&gt; ^ parameters);" />
      <MemberSignature Language="F#" Value="member this.CreateMethodCallQuery : obj * System.Reflection.MethodInfo * obj[] -&gt; System.Linq.IQueryable&lt;'Result&gt;" Usage="dataContext.CreateMethodCallQuery (instance, methodInfo, parameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="methodInfo" Type="System.Reflection.MethodInfo" />
        <Parameter Name="parameters" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-3.5">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="TResult"><span data-ttu-id="0c0b3-163">Тип элементов в возвращаемой коллекции.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-163">The type of the elements in the returned collection.</span></span></typeparam>
        <param name="instance"><span data-ttu-id="0c0b3-164">Экземпляр вызова метода (текущий объект).</span><span class="sxs-lookup"><span data-stu-id="0c0b3-164">The instance of the method invocation (the current object).</span></span></param>
        <param name="methodInfo"><span data-ttu-id="0c0b3-165">Атрибут <see cref="T:System.Reflection.MethodInfo" /> который определяет метод .NET, соответствующий методу базы данных.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-165">The <see cref="T:System.Reflection.MethodInfo" /> that identifies the .NET method that corresponds to a database method.</span></span></param>
        <param name="parameters"><span data-ttu-id="0c0b3-166">Массив параметров для передачи команде.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-166">The array of parameters to be passed to the command.</span></span></param>
        <summary><span data-ttu-id="0c0b3-167">Выполняет табличную функцию базы данных, связанную с указанным методом .NET.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-167">Executes the table-valued database function associated with the specified .NET method.</span></span></summary>
        <returns><span data-ttu-id="0c0b3-168">Коллекция результирующих значений, возвращаемых запросом базы данных.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-168">A collection of resultant values returned by the database query.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c0b3-169"><xref:System.Data.Linq.DataContext.CreateMethodCallQuery%2A> Метод используется в автоматически создаваемом коде и действует как прокси-сервер для функций базы данных.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-169">The <xref:System.Data.Linq.DataContext.CreateMethodCallQuery%2A> method is used in automatically generated code and acts as a proxy to database functions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DatabaseExists">
      <MemberSignature Language="C#" Value="public bool DatabaseExists ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool DatabaseExists() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.DatabaseExists" />
      <MemberSignature Language="VB.NET" Value="Public Function DatabaseExists () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool DatabaseExists();" />
      <MemberSignature Language="F#" Value="member this.DatabaseExists : unit -&gt; bool" Usage="dataContext.DatabaseExists " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0c0b3-170">Определяет, можно ли открыть связанную базу данных.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-170">Determines whether the associated database can be opened.</span></span></summary>
        <returns><span data-ttu-id="0c0b3-171">Значение <see langword="true" />, если указанную базу данных можно открыть; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-171"><see langword="true" /> if the specified database can be opened; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c0b3-172">Этот метод использует соединение в <xref:System.Data.Linq.DataContext.Connection%2A> свойстве, чтобы попытаться открыть связанную базу данных.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-172">This method uses the connection in the <xref:System.Data.Linq.DataContext.Connection%2A> property to attempt to open the associated database.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0c0b3-173">В следующем примере этот метод используется для определения того, существует ли уже база данных.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-173">The following example uses this method to determine whether a database already exists.</span></span>  
  
 [!code-csharp[System.Data.Linq.DataContext#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Data.Linq.DataContext/cs/Program.cs#1)]
 [!code-vb[System.Data.Linq.DataContext#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Data.Linq.DataContext/vb/Module1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeferredLoadingEnabled">
      <MemberSignature Language="C#" Value="public bool DeferredLoadingEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DeferredLoadingEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.DataContext.DeferredLoadingEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property DeferredLoadingEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DeferredLoadingEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.DeferredLoadingEnabled : bool with get, set" Usage="System.Data.Linq.DataContext.DeferredLoadingEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0c0b3-174">Возвращает или задает значение, указывающее, следует ли загружать с задержкой связи "один к одному" или "один ко многим".</span><span class="sxs-lookup"><span data-stu-id="0c0b3-174">Gets or sets a value that indicates whether to delay-load one-to-many or one-to-one relationships.</span></span></summary>
        <value><span data-ttu-id="0c0b3-175"><see langword="true" />, если отложенная загрузка разрешена; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-175"><see langword="true" /> if deferred loading is enabled; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c0b3-176">Когда код обращается к одной из этих связей, возвращается значение null, если связь является "один к одному", и возвращается пустая коллекция, если она является "один ко многим".</span><span class="sxs-lookup"><span data-stu-id="0c0b3-176">When the code accesses one of these relationships, null is returned if the relationship is one-to-one, and an empty collection is returned if it is one-to-many.</span></span> <span data-ttu-id="0c0b3-177">Связи по-прежнему можно заполнить, задав <xref:System.Data.Linq.DataContext.LoadOptions%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-177">The relationships can still be filled by setting the <xref:System.Data.Linq.DataContext.LoadOptions%2A> property.</span></span>  
  
 <span data-ttu-id="0c0b3-178">Основным сценарием для этого свойства является возможность извлечения части объектной модели и ее отправки (например, веб-службе).</span><span class="sxs-lookup"><span data-stu-id="0c0b3-178">The main scenario for this property is to enable you to extract a piece of the object model and send it out (for example, to a Web service).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0c0b3-179">Если это свойство имеет значение `false` после выполнения запроса, создается исключение.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-179">If this property is set to `false` after a query has been executed, an exception is thrown.</span></span> <span data-ttu-id="0c0b3-180">Дополнительные сведения см. в разделе **Допустимые режимы** ниже.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-180">See the **Valid Modes** section below for more information.</span></span>  
  
## <a name="valid-modes"></a><span data-ttu-id="0c0b3-181">Допустимые режимы</span><span class="sxs-lookup"><span data-stu-id="0c0b3-181">Valid modes</span></span>  
 <span data-ttu-id="0c0b3-182">Для отложенной загрузки требуется отслеживание объектов.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-182">Deferred loading requires object tracking.</span></span> <span data-ttu-id="0c0b3-183">Допустимы только следующие три режима:</span><span class="sxs-lookup"><span data-stu-id="0c0b3-183">Only the following three modes are valid:</span></span>  
  
-   <span data-ttu-id="0c0b3-184"><xref:System.Data.Linq.DataContext.ObjectTrackingEnabled%2A> = `false`.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-184"><xref:System.Data.Linq.DataContext.ObjectTrackingEnabled%2A> = `false`.</span></span> <span data-ttu-id="0c0b3-185"><xref:System.Data.Linq.DataContext.DeferredLoadingEnabled%2A>игнорируется и выводится в `false`значение.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-185"><xref:System.Data.Linq.DataContext.DeferredLoadingEnabled%2A> is ignored and inferred to be `false`.</span></span> <span data-ttu-id="0c0b3-186">Это поведение соответствует доступному только <xref:System.Data.Linq.DataContext>для чтения.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-186">This behavior corresponds to a read-only <xref:System.Data.Linq.DataContext>.</span></span>  
  
-   <span data-ttu-id="0c0b3-187"><xref:System.Data.Linq.DataContext.ObjectTrackingEnabled%2A> = `true`.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-187"><xref:System.Data.Linq.DataContext.ObjectTrackingEnabled%2A> = `true`.</span></span> <span data-ttu-id="0c0b3-188"><xref:System.Data.Linq.DataContext.DeferredLoadingEnabled%2A> = `false`.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-188"><xref:System.Data.Linq.DataContext.DeferredLoadingEnabled%2A> = `false`.</span></span> <span data-ttu-id="0c0b3-189">Эта ситуация соответствует <xref:System.Data.Linq.DataContext> объекту, который позволяет пользователям загружать граф объектов с помощью <xref:System.Data.Linq.DataLoadOptions.LoadWith%2A> директив, но не включает отложенную загрузку.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-189">This situation corresponds to a <xref:System.Data.Linq.DataContext> that allows users to load an object graph by using <xref:System.Data.Linq.DataLoadOptions.LoadWith%2A> directives, but it does not enable deferred loading.</span></span>  
  
-   <span data-ttu-id="0c0b3-190">Оба параметра имеют значение `true`.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-190">Both are set to `true`.</span></span> <span data-ttu-id="0c0b3-191">Это значение по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-191">This is the default.</span></span>  
  
 <span data-ttu-id="0c0b3-192">Флаги не могут быть изменены после выполнения запроса.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-192">The flags may not be changed after a query has been executed.</span></span> <span data-ttu-id="0c0b3-193">Любое изменение после выполнения первого запроса, использующего, <xref:System.Data.Linq.DataContext> вызывает исключение.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-193">Any change after the execution of the first query that uses that <xref:System.Data.Linq.DataContext> throws an exception.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteDatabase">
      <MemberSignature Language="C#" Value="public void DeleteDatabase ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DeleteDatabase() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.DeleteDatabase" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeleteDatabase ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeleteDatabase();" />
      <MemberSignature Language="F#" Value="member this.DeleteDatabase : unit -&gt; unit" Usage="dataContext.DeleteDatabase " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0c0b3-194">Удаляет связанную базу данных.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-194">Deletes the associated database.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c0b3-195">Этот метод использует соединение в <xref:System.Data.Linq.DataContext.Connection%2A> свойстве для задания удаляемой базы данных.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-195">This method uses the connection in the <xref:System.Data.Linq.DataContext.Connection%2A> property to identify the database to be deleted.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0c0b3-196">В следующем примере показано, как удалить базу данных, которая была временно создана.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-196">The following example shows how to delete a database that has been temporarily created.</span></span>  
  
 [!code-csharp[System.Data.Linq.DataContext#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Data.Linq.DataContext/cs/Program.cs#1)]
 [!code-vb[System.Data.Linq.DataContext#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Data.Linq.DataContext/vb/Module1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Data.Linq.DataContext.Dispose" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0c0b3-197">Освобождение ресурсов, используемых классом <see cref="T:System.Data.Linq.DataContext" />.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-197">Releases the resources used by the <see cref="T:System.Data.Linq.DataContext" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="dataContext.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0c0b3-198">Освобождает все ресурсы, используемые текущим экземпляром класса <see cref="T:System.Data.Linq.DataContext" />.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-198">Releases all resources used by the current instance of the <see cref="T:System.Data.Linq.DataContext" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="dataContext.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="0c0b3-199">Значение <see langword="true" /> позволяет освободить управляемые и неуправляемые ресурсы; значение <see langword="false" /> позволяет освободить только неуправляемые ресурсы.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-199"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="0c0b3-200">Освобождает неуправляемые ресурсы, используемые классом <see cref="T:System.Data.Linq.DataContext" /> (при необходимости освобождает и управляемые ресурсы).</span><span class="sxs-lookup"><span data-stu-id="0c0b3-200">Releases the unmanaged resources used by the <see cref="T:System.Data.Linq.DataContext" /> class and optionally releases the managed resource.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteCommand">
      <MemberSignature Language="C#" Value="public int ExecuteCommand (string command, params object[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 ExecuteCommand(string command, object[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.ExecuteCommand(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteCommand (command As String, ParamArray parameters As Object()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int ExecuteCommand(System::String ^ command, ... cli::array &lt;System::Object ^&gt; ^ parameters);" />
      <MemberSignature Language="F#" Value="member this.ExecuteCommand : string * obj[] -&gt; int" Usage="dataContext.ExecuteCommand (command, parameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="System.String" />
        <Parameter Name="parameters" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-3.5">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="command"><span data-ttu-id="0c0b3-201">Выполняемая команда SQL.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-201">The SQL command to be executed.</span></span></param>
        <param name="parameters"><span data-ttu-id="0c0b3-202">Массив параметров для передачи команде.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-202">The array of parameters to be passed to the command.</span></span> <span data-ttu-id="0c0b3-203">Обратите внимание на следующее поведение.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-203">Note the following behavior:</span></span> 
<span data-ttu-id="0c0b3-204">Если количество объектов в массиве меньше, чем наибольшее число команд, определенных в командной строке, создается исключение.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-204">If the number of objects in the array is less than the highest number identified in the command string, an exception is thrown.</span></span>  
  
<span data-ttu-id="0c0b3-205">Если массив содержит объекты, на которые нет ссылок в командной строке, исключение не создается.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-205">If the array contains objects that are not referenced in the command string, no exception is thrown.</span></span>  
  
<span data-ttu-id="0c0b3-206">Если значение одного из параметров равно NULL, оно преобразуется в значение <see langword="DBNull.Value" />.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-206">If any one of the parameters is null, it is converted to <see langword="DBNull.Value" />.</span></span></param>
        <summary><span data-ttu-id="0c0b3-207">Выполняет команды SQL непосредственно в базе данных.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-207">Executes SQL commands directly on the database.</span></span></summary>
        <returns><span data-ttu-id="0c0b3-208">Количество строк, измененных выполненной командой.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-208">The number of rows modified by the executed command.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c0b3-209">Этот метод является сквозным механизмом для случаев, когда [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] не обеспечивает адекватное предоставление для конкретного сценария.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-209">This method is a pass-through mechanism for cases where [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] does not adequately provide for a particular scenario.</span></span>  
  
 <span data-ttu-id="0c0b3-210">Синтаксис команды практически совпадает с синтаксисом, используемым для создания ADO.NET `DataCommand`.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-210">The syntax for the command is almost the same as the syntax used to create an ADO.NET `DataCommand`.</span></span> <span data-ttu-id="0c0b3-211">Единственное отличие заключается в том, как задаются параметры.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-211">The only difference is in how the parameters are specified.</span></span> <span data-ttu-id="0c0b3-212">В частности, можно указать параметры, заключив их в фигурные скобки ({...}) и перечисляя их, начиная с 0.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-212">Specifically, you specify parameters by enclosing them in braces ({…}) and enumerate them starting from 0.</span></span> <span data-ttu-id="0c0b3-213">Параметр связан с одинаковым пронумерованным объектом в массиве параметров.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-213">The parameter is associated with the equally numbered object in the parameters array.</span></span>  
  
 <span data-ttu-id="0c0b3-214">`ExecuteQuery`и `ExecuteCommand` позволяют указать переменное число аргументов для подстановки параметров.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-214">`ExecuteQuery` and `ExecuteCommand` allow you to specify a variable number of arguments for parameter substitution.</span></span> <span data-ttu-id="0c0b3-215">Например, можно указать параметры при вызове ExecuteQuery\<TResult >:</span><span class="sxs-lookup"><span data-stu-id="0c0b3-215">For example, you can specify the parameters when invoking ExecuteQuery\<TResult>:</span></span>  
  
```  
db.ExecuteQuery<Customer>("select * from dbo.Customers where City = {0}", "London");  
```  
  
 <span data-ttu-id="0c0b3-216">Другой пример:</span><span class="sxs-lookup"><span data-stu-id="0c0b3-216">And, another example:</span></span>  
  
```  
db.ExecuteCommand("UPDATE Products SET QuantityPerUnit = {0} WHERE ProductID = {1}", "24 boxes", 5);  
```  
  
 <span data-ttu-id="0c0b3-217">В следующем примере показано, как открыть соединение и передать `UPDATE` команду SQL в ядро SQL.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-217">The following example opens a connection and passes a SQL `UPDATE` command to the SQL engine.</span></span>  
  
   
  
## Examples  
 [!code-csharp[DLinqCommunicatingWithDatabase#3](~/samples/snippets/csharp/VS_Snippets_Data/DLinqCommunicatingWithDatabase/cs/Program.cs#3)]
 [!code-vb[DLinqCommunicatingWithDatabase#3](~/samples/snippets/visualbasic/VS_Snippets_Data/DLinqCommunicatingWithDatabase/vb/Module1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteDynamicDelete">
      <MemberSignature Language="C#" Value="protected internal void ExecuteDynamicDelete (object entity);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void ExecuteDynamicDelete(object entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.ExecuteDynamicDelete(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub ExecuteDynamicDelete (entity As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; void ExecuteDynamicDelete(System::Object ^ entity);" />
      <MemberSignature Language="F#" Value="member this.ExecuteDynamicDelete : obj -&gt; unit" Usage="dataContext.ExecuteDynamicDelete entity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entity"><span data-ttu-id="0c0b3-218">Сущность, которая будет удалена.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-218">The entity to be deleted.</span></span></param>
        <summary><span data-ttu-id="0c0b3-219">Выполняет внутренние методы переопределения удаления для повторного делегирования в [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] задачи создания и выполнения динамического SQL для операций удаления.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-219">Executes, inside delete override methods, to redelegate to [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] the task of generating and executing dynamic SQL for delete operations.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c0b3-220">См. раздел <xref:System.Data.Linq.DataContext.ExecuteDynamicInsert%2A>.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-220">See <xref:System.Data.Linq.DataContext.ExecuteDynamicInsert%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteDynamicInsert">
      <MemberSignature Language="C#" Value="protected internal void ExecuteDynamicInsert (object entity);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void ExecuteDynamicInsert(object entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.ExecuteDynamicInsert(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub ExecuteDynamicInsert (entity As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; void ExecuteDynamicInsert(System::Object ^ entity);" />
      <MemberSignature Language="F#" Value="member this.ExecuteDynamicInsert : obj -&gt; unit" Usage="dataContext.ExecuteDynamicInsert entity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entity"><span data-ttu-id="0c0b3-221">Сущность, которая будет вставлена.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-221">The entity to be inserted.</span></span></param>
        <summary><span data-ttu-id="0c0b3-222">Выполняет внутренние методы переопределения вставки для повторного делегирования в [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] задачи создания и выполнения динамического SQL для операций вставки.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-222">Executes, inside insert override methods, to redelegate to [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] the task of generating and executing dynamic SQL for insert operations.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c0b3-223">Обратите внимание на следующие моменты.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-223">Note the following considerations:</span></span>  
  
-   <span data-ttu-id="0c0b3-224">Так как метод имеет защищенный модификатор, его использование требует подкласса <xref:System.Data.Linq.DataContext>.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-224">Because the method has a protected modifier, its use requires subclassing <xref:System.Data.Linq.DataContext>.</span></span>  
  
-   <span data-ttu-id="0c0b3-225">Если эта операция не вызывается внутри <xref:System.Data.Linq.DataContext.SubmitChanges%2A> операции, возникает исключение.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-225">An exception is thrown if this operation is not called inside a <xref:System.Data.Linq.DataContext.SubmitChanges%2A> operation.</span></span> <span data-ttu-id="0c0b3-226">Он не предназначен для вызова в качестве изолированной операции за пределами области действия <xref:System.Data.Linq.DataContext.SubmitChanges%2A> операции.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-226">It is not intended to be called as a stand-alone operation outside the scope of a <xref:System.Data.Linq.DataContext.SubmitChanges%2A> operation.</span></span> <span data-ttu-id="0c0b3-227"><xref:System.Data.Linq.DataContext.SubmitChanges%2A>сам по себе вызывает переопределения методов, если они реализованы, а предыдущие методы предназначены для вызова в методах переопределения.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-227"><xref:System.Data.Linq.DataContext.SubmitChanges%2A> itself calls override methods if they are implemented and the previous methods are intended to be called inside the override methods.</span></span>  
  
-   <span data-ttu-id="0c0b3-228">Разработчик обязан передавать правильную сущность.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-228">It is the responsibility of the developer to pass in the correct entity.</span></span> <span data-ttu-id="0c0b3-229">Реализация проверяет, что переданная сущность будет отслеживанием.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-229">The implementation verifies that the passed-in entity is tracked.</span></span> <span data-ttu-id="0c0b3-230">Однако разработчик обязан поддерживать заказ или передавать одну и ту же сущность два раза.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-230">However, it is the responsibility of the developer to maintain the order or pass in the same entity two times.</span></span>  
  
-   <span data-ttu-id="0c0b3-231">Разработчик обязан вызывать правильный динамический API.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-231">It is the responsibility of the developer to invoke the correct dynamic API.</span></span> <span data-ttu-id="0c0b3-232">Например, в `Update` методе override может быть вызван <xref:System.Data.Linq.DataContext.ExecuteDynamicUpdate%2A> только метод.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-232">For example, in the `Update` override method, only the <xref:System.Data.Linq.DataContext.ExecuteDynamicUpdate%2A> method can be called.</span></span> [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] <span data-ttu-id="0c0b3-233">не обнаруживает и не проверяет вызванный динамический метод на предмет соответствия применяемой операции.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-233">does not detect or verify whether the invoked dynamic method matches the applicable operation.</span></span> <span data-ttu-id="0c0b3-234">Результаты не определены, если вызывается неприменимый метод (например, вызывается <xref:System.Data.Linq.DataContext.ExecuteDynamicDelete%2A> для обновляемого объекта).</span><span class="sxs-lookup"><span data-stu-id="0c0b3-234">The results are undefined if an inapplicable method is called (for example, calling <xref:System.Data.Linq.DataContext.ExecuteDynamicDelete%2A> for an object to be updated).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteDynamicUpdate">
      <MemberSignature Language="C#" Value="protected internal void ExecuteDynamicUpdate (object entity);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void ExecuteDynamicUpdate(object entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.ExecuteDynamicUpdate(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub ExecuteDynamicUpdate (entity As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; void ExecuteDynamicUpdate(System::Object ^ entity);" />
      <MemberSignature Language="F#" Value="member this.ExecuteDynamicUpdate : obj -&gt; unit" Usage="dataContext.ExecuteDynamicUpdate entity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entity"><span data-ttu-id="0c0b3-235">Сущность, которая будет обновлена.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-235">The entity to be updated.</span></span></param>
        <summary><span data-ttu-id="0c0b3-236">Выполняет внутренние методы переопределения обновления для повторного делегирования в [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] задачи создания и выполнения динамического SQL для операций обновления.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-236">Executes, inside update override methods, to redelegate to [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] the task of generating and executing dynamic SQL for update operations.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c0b3-237">См. раздел <xref:System.Data.Linq.DataContext.ExecuteDynamicInsert%2A>.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-237">See <xref:System.Data.Linq.DataContext.ExecuteDynamicInsert%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteMethodCall">
      <MemberSignature Language="C#" Value="protected internal System.Data.Linq.IExecuteResult ExecuteMethodCall (object instance, System.Reflection.MethodInfo methodInfo, params object[] parameters);" FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance class System.Data.Linq.IExecuteResult ExecuteMethodCall(object instance, class System.Reflection.MethodInfo methodInfo, object[] parameters) cil managed" FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.ExecuteMethodCall(System.Object,System.Reflection.MethodInfo,System.Object[])" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; System::Data::Linq::IExecuteResult ^ ExecuteMethodCall(System::Object ^ instance, System::Reflection::MethodInfo ^ methodInfo, ... cli::array &lt;System::Object ^&gt; ^ parameters);" FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="member this.ExecuteMethodCall : obj * System.Reflection.MethodInfo * obj[] -&gt; System.Data.Linq.IExecuteResult" Usage="dataContext.ExecuteMethodCall (instance, methodInfo, parameters)" />
      <MemberSignature Language="C#" Value="protected System.Data.Linq.IExecuteResult ExecuteMethodCall (object instance, System.Reflection.MethodInfo methodInfo, params object[] parameters);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Data.Linq.IExecuteResult ExecuteMethodCall(object instance, class System.Reflection.MethodInfo methodInfo, object[] parameters) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Data::Linq::IExecuteResult ^ ExecuteMethodCall(System::Object ^ instance, System::Reflection::MethodInfo ^ methodInfo, ... cli::array &lt;System::Object ^&gt; ^ parameters);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.IExecuteResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="methodInfo" Type="System.Reflection.MethodInfo" />
        <Parameter Name="parameters" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-3.5">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="0c0b3-238">Экземпляр вызова метода (текущий объект).</span><span class="sxs-lookup"><span data-stu-id="0c0b3-238">The instance of the method invocation (the current object).</span></span></param>
        <param name="methodInfo"><span data-ttu-id="0c0b3-239">Определяет метод .NET, соответствующий методу базы данных.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-239">Identifies the .NET method that corresponds to a database method.</span></span></param>
        <param name="parameters"><span data-ttu-id="0c0b3-240">Массив параметров для передачи команде.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-240">The array of parameters to be passed to the command.</span></span></param>
        <summary><span data-ttu-id="0c0b3-241">Выполняет хранимую процедуру базы данных или скалярную функцию, связанную с указанным методом .NET.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-241">Executes the stored database procedure or scalar function associated with the specified .NET method.</span></span></summary>
        <returns><span data-ttu-id="0c0b3-242">Результат (возвращаемое значение и выходные параметры) выполнения указанного метода.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-242">The result (the return value and output parameters) of executing the specified method.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c0b3-243"><xref:System.Data.Linq.DataContext.ExecuteMethodCall%2A> Метод используется в автоматически создаваемом коде и действует как прокси-сервер для функций базы данных.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-243">The <xref:System.Data.Linq.DataContext.ExecuteMethodCall%2A> method is used in automatically generated code and acts as a proxy to database functions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteQuery">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerable ExecuteQuery (Type elementType, string query, params object[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.IEnumerable ExecuteQuery(class System.Type elementType, string query, object[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.ExecuteQuery(System.Type,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteQuery (elementType As Type, query As String, ParamArray parameters As Object()) As IEnumerable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IEnumerable ^ ExecuteQuery(Type ^ elementType, System::String ^ query, ... cli::array &lt;System::Object ^&gt; ^ parameters);" />
      <MemberSignature Language="F#" Value="member this.ExecuteQuery : Type * string * obj[] -&gt; System.Collections.IEnumerable" Usage="dataContext.ExecuteQuery (elementType, query, parameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elementType" Type="System.Type" />
        <Parameter Name="query" Type="System.String" />
        <Parameter Name="parameters" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-3.5">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="elementType"><span data-ttu-id="0c0b3-244">Тип <see cref="T:System.Collections.Generic.IEnumerable`1" />, который должен быть возвращен.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-244">The type of the <see cref="T:System.Collections.Generic.IEnumerable`1" /> to be returned.</span></span>  
  
<span data-ttu-id="0c0b3-245">Алгоритм сопоставления столбцов в результате запроса с полями или свойствами в объекте работает, как показано далее.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-245">The algorithm for matching columns in the result of the query to fields or properties in the object works as follows:</span></span> 
<span data-ttu-id="0c0b3-246">Если поле или свойство сопоставляется с определенным именем столбца, это имя столбца ожидается в наборе результатов.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-246">If a field or property is mapped to a particular column name, that column name is expected in the resultset.</span></span>  
  
<span data-ttu-id="0c0b3-247">Если поле или свойство не сопоставляется, столбец с тем же именем, что и поле или свойство, ожидается в наборе результатов.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-247">If a field or property is not mapped, a column with the same name as the field or property is expected in the resultset.</span></span>  
  
<span data-ttu-id="0c0b3-248">Сначала в сравнении выполняется поиск совпадения с учетом регистра.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-248">The comparison is performed by looking for a case-sensitive match first.</span></span> <span data-ttu-id="0c0b3-249">Если это совпадение не найдено, следующий поиск выполняется для совпадений без учета регистра.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-249">If this match is not found, a subsequent search occurs for a case-insensitive match.</span></span>  
  
<span data-ttu-id="0c0b3-250">Запрос должен возвращать все отслеженные поля и свойства объекта (кроме тех, загрузка которых отложена), если выполняются все следующие условия.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-250">The query must return all the tracked fields and properties of the object (except those that are loaded on a deferred basis) when all the following conditions are true:</span></span> 
 <span data-ttu-id="0c0b3-251"><c>T</c> является сущностью, явно отслеживаемой <see cref="T:System.Data.Linq.DataContext" />.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-251"><c>T</c> is an entity explicitly tracked by the <see cref="T:System.Data.Linq.DataContext" />.</span></span>  
  
 <span data-ttu-id="0c0b3-252">Свойство <see cref="P:System.Data.Linq.DataContext.ObjectTrackingEnabled" /> имеет значение <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-252"><see cref="P:System.Data.Linq.DataContext.ObjectTrackingEnabled" /> is <see langword="true" />.</span></span>  
  
<span data-ttu-id="0c0b3-253">Сущность имеет первичный ключ.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-253">The entity has a primary key.</span></span>  
  
<span data-ttu-id="0c0b3-254">В противном случае возникает исключение.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-254">Otherwise an exception is thrown.</span></span></param>
        <param name="query"><span data-ttu-id="0c0b3-255">Запрос SQL для выполнения.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-255">The SQL query to be executed.</span></span></param>
        <param name="parameters"><span data-ttu-id="0c0b3-256">Массив параметров для передачи команде.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-256">The array of parameters to be passed to the command.</span></span> <span data-ttu-id="0c0b3-257">Обратите внимание на следующее поведение.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-257">Note the following behavior:</span></span> 
<span data-ttu-id="0c0b3-258">Если количество объектов в массиве меньше, чем наибольшее число команд, определенных в командной строке, создается исключение.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-258">If the number of objects in the array is less than the highest number identified in the command string, an exception is thrown.</span></span>  
  
<span data-ttu-id="0c0b3-259">Если массив содержит объекты, на которые нет ссылок в командной строке, исключение не создается.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-259">If the array contains objects that are not referenced in the command string, no exception is thrown.</span></span>  
  
<span data-ttu-id="0c0b3-260">Если значение параметра равно <see langword="null" />, он преобразовывается в <see langword="DBNull.Value" />.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-260">If a parameter is <see langword="null" />, it is converted to <see langword="DBNull.Value" />.</span></span></param>
        <summary><span data-ttu-id="0c0b3-261">Выполняет SQL-запросы непосредственно в базе данных.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-261">Executes SQL queries directly on the database.</span></span></summary>
        <returns><span data-ttu-id="0c0b3-262">Коллекция объектов <see cref="T:System.Collections.Generic.IEnumerable`1" />, возвращаемых запросом.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-262">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> collection of objects returned by the query.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteQuery&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;TResult&gt; ExecuteQuery&lt;TResult&gt; (string query, params object[] parameters);" FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;!!TResult&gt; ExecuteQuery&lt;TResult&gt;(string query, object[] parameters) cil managed" FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.ExecuteQuery``1(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteQuery(Of TResult) (query As String, ParamArray parameters As Object()) As IEnumerable(Of TResult)" FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA; System::Collections::Generic::IEnumerable&lt;TResult&gt; ^ ExecuteQuery(System::String ^ query, ... cli::array &lt;System::Object ^&gt; ^ parameters);" FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="member this.ExecuteQuery : string * obj[] -&gt; seq&lt;'Result&gt;" Usage="dataContext.ExecuteQuery (query, parameters)" FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;TResult&gt; ExecuteQuery&lt;TResult&gt; (string query, params object[] parameters) where TResult : new();" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;!!TResult&gt; ExecuteQuery&lt;.ctor TResult&gt;(string query, object[] parameters) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteQuery(Of TResult As New) (query As String, ParamArray parameters As Object()) As IEnumerable(Of TResult)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA; where TResult : gcnew() System::Collections::Generic::IEnumerable&lt;TResult&gt; ^ ExecuteQuery(System::String ^ query, ... cli::array &lt;System::Object ^&gt; ^ parameters);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.ExecuteQuery : string * obj[] -&gt; seq&lt;'Result (requires 'Result : (new : unit -&gt; 'Result))&gt; (requires 'Result : (new : unit -&gt; 'Result))" Usage="dataContext.ExecuteQuery (query, parameters)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="query" Type="System.String" />
        <Parameter Name="parameters" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-3.5">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="TResult"><span data-ttu-id="0c0b3-263">Тип элементов в возвращаемой коллекции.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-263">The type of the elements in the returned collection.</span></span></typeparam>
        <param name="query"><span data-ttu-id="0c0b3-264">Запрос SQL для выполнения.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-264">The SQL query to be executed.</span></span></param>
        <param name="parameters"><span data-ttu-id="0c0b3-265">Массив параметров для передачи команде.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-265">The array of parameters to be passed to the command.</span></span> <span data-ttu-id="0c0b3-266">Обратите внимание на следующее поведение.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-266">Note the following behavior:</span></span> 
<span data-ttu-id="0c0b3-267">Если количество объектов в массиве меньше, чем наибольшее число команд, определенных в командной строке, создается исключение.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-267">If the number of objects in the array is less than the highest number identified in the command string, an exception is thrown.</span></span>  
  
<span data-ttu-id="0c0b3-268">Если массив содержит объекты, на которые нет ссылок в командной строке, исключение не создается.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-268">If the array contains objects that are not referenced in the command string, no exception is thrown.</span></span>  
  
<span data-ttu-id="0c0b3-269">Если значение параметра равно NULL, он преобразуется в <see langword="DBNull.Value" />.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-269">If a parameter is null, it is converted to <see langword="DBNull.Value" />.</span></span></param>
        <summary><span data-ttu-id="0c0b3-270">Выполняет запросы SQL непосредственно в базе данных и возвращает объекты.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-270">Executes SQL queries directly on the database and returns objects.</span></span></summary>
        <returns><span data-ttu-id="0c0b3-271">Коллекция объектов, возвращенных запросом.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-271">A collection of objects returned by the query.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c0b3-272">Этот метод является сквозным механизмом для случаев, когда [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] не предоставляется для конкретного сценария.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-272">This method is a pass-through mechanism for cases where [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] does not provide for a particular scenario.</span></span>  
  
 <span data-ttu-id="0c0b3-273">Алгоритм сопоставления столбцов в результате запроса с полями и свойствами в объекте работает следующим образом:</span><span class="sxs-lookup"><span data-stu-id="0c0b3-273">The algorithm for matching columns in the result of the query to fields and properties in the object works as follows:</span></span>  
  
-   <span data-ttu-id="0c0b3-274">Если поле или свойство сопоставляется с определенным именем столбца, это имя столбца ожидается в наборе результатов.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-274">If a field or property is mapped to a particular column name, that column name is expected in the resultset.</span></span>  
  
-   <span data-ttu-id="0c0b3-275">Если поле или свойство не сопоставляется, столбец с тем же именем, что и поле или свойство, ожидается в наборе результатов.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-275">If a field or property is not mapped, a column with the same name as the field or property is expected in the resultset.</span></span>  
  
-   <span data-ttu-id="0c0b3-276">Сравнение выполняется путем первого поиска совпадения с учетом регистра.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-276">The comparison is performed by first looking for a case-sensitive match.</span></span> <span data-ttu-id="0c0b3-277">Если такое соответствие не найдено, последующий поиск выполняется для совпадений без учета регистра.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-277">If such a match is not found, a subsequent search occurs for a case-insensitive match.</span></span>  
  
-   <span data-ttu-id="0c0b3-278">Запрос должен возвращать все отводимые поля и свойства объекта (за исключением отложенной загрузки), если выполняются все следующие условия.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-278">The query must return all the tracked fields and properties of the object (apart from those subject to deferred loading) when all the following are true:</span></span>  
  
    -   <span data-ttu-id="0c0b3-279">Если `<T>` — сущность, явно отслеживаниющая <xref:System.Data.Linq.DataContext>.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-279">If `<T>` is an entity explicitly tracked by the <xref:System.Data.Linq.DataContext>.</span></span>  
  
    -   <span data-ttu-id="0c0b3-280">Обжекттраккинженаблед имеет значение true.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-280">ObjectTrackingEnabled is true.</span></span>  
  
    -   <span data-ttu-id="0c0b3-281">Сущность имеет первичный ключ.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-281">The entity has a primary key.</span></span>  
  
     <span data-ttu-id="0c0b3-282">В противном случае возникает исключение.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-282">Otherwise an exception is thrown.</span></span>  
  
-   <span data-ttu-id="0c0b3-283">Во всех остальных случаях запрос может получить только подмножество отслеживаний полей и свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-283">In all other cases, the query can retrieve just a subset of the tracked fields and properties for the object.</span></span>  
  
 <span data-ttu-id="0c0b3-284">В следующем C# фрагменте кода показан один из способов использования этого метода:</span><span class="sxs-lookup"><span data-stu-id="0c0b3-284">The following C# snippet shows one use for this method:</span></span>  
  
```  
var customers = db.ExecuteQuery<Customer>(@"SELECT CustomerID, CompanyName, ContactName, ContactTitle,   
   Address, City, Region, PostalCode, Country, Phone, Fax  
   FROM   dbo.Customers  
   WHERE  City = {0}", "London");  
  
foreach (Customer c in customers)  
   Console.WriteLine(c.ContactName);  
```  
  
 <span data-ttu-id="0c0b3-285">В Visual Basic</span><span class="sxs-lookup"><span data-stu-id="0c0b3-285">In Visual Basic</span></span>  
  
```  
Dim customers = db.ExecuteQuery(Of Customer)("SELECT CustomerID, _    CompanyName, ContactName, ContactTitle, _  
   Address, City, Region, PostalCode, Country, Phone, Fax _  
   FROM dbo.Customers _  
WHERE City = {0}", "London")  
  
For Each c As Customer In customers  
    Console.WriteLine(c.ContactName)  
Next  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChangeSet">
      <MemberSignature Language="C#" Value="public System.Data.Linq.ChangeSet GetChangeSet ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Linq.ChangeSet GetChangeSet() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.GetChangeSet" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChangeSet () As ChangeSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Linq::ChangeSet ^ GetChangeSet();" />
      <MemberSignature Language="F#" Value="member this.GetChangeSet : unit -&gt; System.Data.Linq.ChangeSet" Usage="dataContext.GetChangeSet " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.ChangeSet</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0c0b3-286">Возвращает измененные объекты, отслеживаемые <see cref="T:System.Data.Linq.DataContext" />.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-286">Gets the modified objects tracked by <see cref="T:System.Data.Linq.DataContext" />.</span></span></summary>
        <returns><span data-ttu-id="0c0b3-287">Набор объектов возвращается как три коллекции, доступные только для чтения.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-287">The set of objects is returned as three read-only collections.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c0b3-288">Обратите внимание на следующие моменты.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-288">Note the following considerations:</span></span>  
  
-   <span data-ttu-id="0c0b3-289"><xref:System.Data.Linq.DataContext.GetChangeSet%2A>могут иметь побочные эффекты, такие как вывод операций вставки и удаления, которые обычно выполняются во время <xref:System.Data.Linq.DataContext.SubmitChanges%2A>.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-289"><xref:System.Data.Linq.DataContext.GetChangeSet%2A> might have side effects, such as inference of insert and delete operations that are usually performed at the time of <xref:System.Data.Linq.DataContext.SubmitChanges%2A>.</span></span> <span data-ttu-id="0c0b3-290">Например, объекты, используемые в следующих операциях, могут создавать соответствующие выводимые операции в следующем списке:</span><span class="sxs-lookup"><span data-stu-id="0c0b3-290">For example, objects that are used in the following operations can create corresponding inferred operations in the following list:</span></span>  
  
    -   <span data-ttu-id="0c0b3-291"><xref:System.Data.Linq.EntitySet%601.Add%2A>в <xref:System.Data.Linq.Table%601.InsertOnSubmit%2A>.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-291"><xref:System.Data.Linq.EntitySet%601.Add%2A> to <xref:System.Data.Linq.Table%601.InsertOnSubmit%2A>.</span></span>  
  
    -   <span data-ttu-id="0c0b3-292"><xref:System.Data.Linq.EntityRef%601>Присваивание значения NULL (возможно, <xref:System.Data.Linq.EntitySet%601.Remove%2A> из <xref:System.Data.Linq.Table%601.DeleteOnSubmit%2A>-за.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-292"><xref:System.Data.Linq.EntityRef%601> assignment to null (possibly because of <xref:System.Data.Linq.EntitySet%601.Remove%2A> to <xref:System.Data.Linq.Table%601.DeleteOnSubmit%2A>.</span></span>  
  
-   <span data-ttu-id="0c0b3-293">Набор не может быть упорядочен согласно ограничениям внешнего ключа.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-293">The set may not be ordered according to foreign key constraints.</span></span>  
  
-   <span data-ttu-id="0c0b3-294">Значения, сформированные базой данных (например, значения первичного и внешнего ключей, метки времени и т. д.), недоступны.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-294">Database-generated values (for example, primary and foreign key values, timestamps, and so forth) are not available.</span></span> <span data-ttu-id="0c0b3-295">Такие сведения требуют выполнения команды базы данных и, возможно, распространения извлеченных данных (например, внешнего ключа из первичного ключа).</span><span class="sxs-lookup"><span data-stu-id="0c0b3-295">Such information requires database command execution and perhaps the propagation of retrieved information (for example, foreign key from primary key).</span></span>  
  
-   <span data-ttu-id="0c0b3-296">Набор измененных объектов вычисляются во время вызова.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-296">The set of changed objects is computed at the time of the call.</span></span> <span data-ttu-id="0c0b3-297">Последующие вызовы метода <xref:System.Data.Linq.DataContext.SubmitChanges%2A> могут привести к созданию другого набора при внесении дополнительных изменений.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-297">Subsequent calls to <xref:System.Data.Linq.DataContext.SubmitChanges%2A> can produce a different set if additional changes are made.</span></span>  
  
 <span data-ttu-id="0c0b3-298">Выходные данные, если не были внесены изменения, выглядят следующим образом:</span><span class="sxs-lookup"><span data-stu-id="0c0b3-298">Output when no changes have been made appears as follows:</span></span>  
  
 `{Added: 0, Removed: 0, Modified: 0}`  
  
   
  
## Examples  
 [!code-csharp[DLinqDebuggingSupport#2](~/samples/snippets/csharp/VS_Snippets_Data/DLinqDebuggingSupport/cs/Program.cs#2)]
 [!code-vb[DLinqDebuggingSupport#2](~/samples/snippets/visualbasic/VS_Snippets_Data/DLinqDebuggingSupport/vb/Module1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCommand">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbCommand GetCommand (System.Linq.IQueryable query);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Common.DbCommand GetCommand(class System.Linq.IQueryable query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.GetCommand(System.Linq.IQueryable)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCommand (query As IQueryable) As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Common::DbCommand ^ GetCommand(System::Linq::IQueryable ^ query);" />
      <MemberSignature Language="F#" Value="member this.GetCommand : System.Linq.IQueryable -&gt; System.Data.Common.DbCommand" Usage="dataContext.GetCommand query" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="query" Type="System.Linq.IQueryable" />
      </Parameters>
      <Docs>
        <param name="query"><span data-ttu-id="0c0b3-299">Запрос, сведения о команде SQL которого должны быть извлечены.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-299">The query whose SQL command information is to be retrieved.</span></span></param>
        <summary><span data-ttu-id="0c0b3-300">Возвращает сведения о командах SQL, созданных [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)].</span><span class="sxs-lookup"><span data-stu-id="0c0b3-300">Gets the information about SQL commands generated by [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)].</span></span></summary>
        <returns><span data-ttu-id="0c0b3-301">Запрошенный объект данных команды.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-301">The requested command information object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c0b3-302">Этот метод является только методом считывания и не влияет <xref:System.Data.Linq.DataContext> на состояние.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-302">This method is only a getter and does not affect <xref:System.Data.Linq.DataContext> state.</span></span>  
  
 <span data-ttu-id="0c0b3-303">Обратите внимание на следующие моменты.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-303">Note the following considerations:</span></span>  
  
-   <span data-ttu-id="0c0b3-304">Аргумент должен иметь значение, отличное от NULL.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-304">The argument must be non-null.</span></span> <span data-ttu-id="0c0b3-305">В противном случае создается исключение аргумента со значением NULL.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-305">Otherwise, a null argument exception is thrown.</span></span>  
  
-   <span data-ttu-id="0c0b3-306">Обычные исключения преобразования запросов, возникающие во время [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] выполнения запроса, применяются для запроса, который не может быть преобразован.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-306">Normal query translation exceptions thrown during [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] query execution apply for a query that cannot be translated.</span></span>  
  
-   <span data-ttu-id="0c0b3-307">Возвращается только первая команда запроса.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-307">Only the first query command is returned.</span></span> <span data-ttu-id="0c0b3-308">В частности, не включены дополнительные команды, используемые для безотлагательной загрузки (<xref:System.Data.Linq.DataLoadOptions.LoadWith%2A>).</span><span class="sxs-lookup"><span data-stu-id="0c0b3-308">Specifically, additional commands that are used for eager loading (<xref:System.Data.Linq.DataLoadOptions.LoadWith%2A>) are not included.</span></span>  
  
-   <span data-ttu-id="0c0b3-309"><xref:System.Data.Linq.DataContext>не следит за действиями, выполняемыми пользователем с помощью команды.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-309"><xref:System.Data.Linq.DataContext> does not track what the user does with the command.</span></span> <span data-ttu-id="0c0b3-310">Например, результаты выполнения возвращаемой команды не записываются и не влияют на <xref:System.Data.Linq.DataContext> состояние.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-310">For example, results from the execution of the returned command are not tracked and do not affect <xref:System.Data.Linq.DataContext> state.</span></span>  
  
   
  
## Examples  
 [!code-csharp[DLinqDebuggingSupport#3](~/samples/snippets/csharp/VS_Snippets_Data/DLinqDebuggingSupport/cs/Program.cs#3)]
 [!code-vb[DLinqDebuggingSupport#3](~/samples/snippets/visualbasic/VS_Snippets_Data/DLinqDebuggingSupport/vb/Module1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIDbCommand">
      <MemberSignature Language="C#" Value="public System.Data.IDbCommand GetIDbCommand (System.Linq.IQueryable query);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.IDbCommand GetIDbCommand(class System.Linq.IQueryable query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.GetIDbCommand(System.Linq.IQueryable)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetIDbCommand (query As IQueryable) As IDbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::IDbCommand ^ GetIDbCommand(System::Linq::IQueryable ^ query);" />
      <MemberSignature Language="F#" Value="member this.GetIDbCommand : System.Linq.IQueryable -&gt; System.Data.IDbCommand" Usage="dataContext.GetIDbCommand query" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="query" Type="System.Linq.IQueryable" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="query">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTable">
      <MemberSignature Language="C#" Value="public System.Data.Linq.ITable GetTable (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Linq.ITable GetTable(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.GetTable(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Linq::ITable ^ GetTable(Type ^ type);" />
      <MemberSignature Language="F#" Value="member this.GetTable : Type -&gt; System.Data.Linq.ITable" Usage="dataContext.GetTable type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.ITable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="0c0b3-311">Тип возвращаемых объектов.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-311">The type of the objects to be returned.</span></span></param>
        <summary><span data-ttu-id="0c0b3-312">Возвращает коллекцию объектов определенного типа, где тип определяется параметром <paramref name="type" />.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-312">Returns a collection of objects of a particular type, where the type is defined by the <paramref name="type" /> parameter.</span></span></summary>
        <returns><span data-ttu-id="0c0b3-313">Коллекция объектов, определенных параметром <paramref name="type" />.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-313">A collection of objects defined by the <paramref name="type" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c0b3-314">Это слабо типизированная версия <xref:System.Data.Linq.DataContext.GetTable%2A>.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-314">This is a weakly typed version of <xref:System.Data.Linq.DataContext.GetTable%2A>.</span></span> <span data-ttu-id="0c0b3-315">Важно иметь слабо типизированную версию, так как это относительно распространенная практика динамического создания запросов.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-315">It is important to have a weakly typed version because it is a relatively common practice to construct queries dynamically.</span></span> <span data-ttu-id="0c0b3-316">Заставить приложение использовать отражение для вызова правильного универсального метода было бы неудобно.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-316">It would be inconvenient to force the application to use reflection to call the correct generic method.</span></span>  
  
 <span data-ttu-id="0c0b3-317">Если для определенного типа нет коллекции, создается исключение.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-317">If there is no collection for a particular type, an exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTable&lt;TEntity&gt;">
      <MemberSignature Language="C#" Value="public System.Data.Linq.Table&lt;TEntity&gt; GetTable&lt;TEntity&gt; () where TEntity : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Linq.Table`1&lt;!!TEntity&gt; GetTable&lt;class TEntity&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.GetTable``1" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTable(Of TEntity As Class) () As Table(Of TEntity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TEntity&gt;&#xA; where TEntity : class System::Data::Linq::Table&lt;TEntity&gt; ^ GetTable();" />
      <MemberSignature Language="F#" Value="member this.GetTable : unit -&gt; System.Data.Linq.Table&lt;'Entity (requires 'Entity : null)&gt; (requires 'Entity : null)" Usage="dataContext.GetTable " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.Table&lt;TEntity&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TEntity">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="TEntity"><span data-ttu-id="0c0b3-318">Тип возвращаемых объектов.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-318">The type of the objects to be returned.</span></span></typeparam>
        <summary><span data-ttu-id="0c0b3-319">Возвращает коллекцию объектов определенного типа, где тип определяется параметром <paramref name="TEntity" />.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-319">Returns a collection of objects of a particular type, where the type is defined by the <paramref name="TEntity" /> parameter.</span></span></summary>
        <returns><span data-ttu-id="0c0b3-320">Коллекция объектов, определенных параметром <paramref name="TEntity" />.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-320">A collection of objects defined by the <paramref name="TEntity" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c0b3-321">Этот метод является главной точкой входа для запросов.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-321">This method is the main entry point for querying.</span></span> <span data-ttu-id="0c0b3-322">Когда создается строго типизированный <xref:System.Data.Linq.DataContext> объект, новые созданные свойства инкапсулируют вызовы этого метода.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-322">When a strongly typed <xref:System.Data.Linq.DataContext> is created, new generated properties encapsulate calls to this method.</span></span> <span data-ttu-id="0c0b3-323">Например, `Customers` создается свойство, возвращающее `GetTable<Customer>`значение.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-323">For example, a `Customers` property is generated that returns `GetTable<Customer>`.</span></span>  
  
 <span data-ttu-id="0c0b3-324">Если для определенного типа нет коллекции, создается исключение.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-324">If there is no collection for a particular type, an exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadOptions">
      <MemberSignature Language="C#" Value="public System.Data.Linq.DataLoadOptions LoadOptions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Linq.DataLoadOptions LoadOptions" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.DataContext.LoadOptions" />
      <MemberSignature Language="VB.NET" Value="Public Property LoadOptions As DataLoadOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Linq::DataLoadOptions ^ LoadOptions { System::Data::Linq::DataLoadOptions ^ get(); void set(System::Data::Linq::DataLoadOptions ^ value); };" />
      <MemberSignature Language="F#" Value="member this.LoadOptions : System.Data.Linq.DataLoadOptions with get, set" Usage="System.Data.Linq.DataContext.LoadOptions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.DataLoadOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0c0b3-325">Возвращает или задает объект <see cref="T:System.Data.Linq.DataLoadOptions" />, связанный с данным объектом <see cref="T:System.Data.Linq.DataContext" />.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-325">Gets or sets the <see cref="T:System.Data.Linq.DataLoadOptions" /> associated with this <see cref="T:System.Data.Linq.DataContext" />.</span></span></summary>
        <value><span data-ttu-id="0c0b3-326">Предварительно выбранные параметры загрузки для связанных данных.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-326">The prefetch load options for related data.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c0b3-327">Это свойство получает или задает параметры, используемые для определения поведения предварительной выборки для членов с отложенной загрузкой и членства связанных коллекций.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-327">This property gets or sets the options that are used to define prefetch behavior for deferred-loaded members and membership of related collections.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Log">
      <MemberSignature Language="C#" Value="public System.IO.TextWriter Log { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.TextWriter Log" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.DataContext.Log" />
      <MemberSignature Language="VB.NET" Value="Public Property Log As TextWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::TextWriter ^ Log { System::IO::TextWriter ^ get(); void set(System::IO::TextWriter ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Log : System.IO.TextWriter with get, set" Usage="System.Data.Linq.DataContext.Log" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.TextWriter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0c0b3-328">Возвращает или задает назначение для записи команды или запроса SQL.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-328">Gets or sets the destination to write the SQL query or command.</span></span></summary>
        <value><span data-ttu-id="0c0b3-329">Объект <see cref="T:System.IO.TextReader" /> для записи команды.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-329">The <see cref="T:System.IO.TextReader" /> to use for writing the command.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c0b3-330">Задайте `null` для этого свойства значение, чтобы отключить ведение журнала команд.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-330">Set this property to `null` to disable command logging.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0c0b3-331">В следующем примере сформированный SQL отображается в окне консоли перед отображением результатов запроса.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-331">The following example displays generated SQL in the console window before it displays the results of the query.</span></span>  
  
 [!code-csharp[System.Data.Linq.DataContext#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Data.Linq.DataContext/cs/Program.cs#2)]
 [!code-vb[System.Data.Linq.DataContext#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Data.Linq.DataContext/vb/Module1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Mapping">
      <MemberSignature Language="C#" Value="public System.Data.Linq.Mapping.MetaModel Mapping { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Linq.Mapping.MetaModel Mapping" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.DataContext.Mapping" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Mapping As MetaModel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Linq::Mapping::MetaModel ^ Mapping { System::Data::Linq::Mapping::MetaModel ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Mapping : System.Data.Linq.Mapping.MetaModel" Usage="System.Data.Linq.DataContext.Mapping" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.Mapping.MetaModel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0c0b3-332">Возвращает <see cref="T:System.Data.Linq.Mapping.MetaModel" />, на котором основано сопоставление.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-332">Gets the <see cref="T:System.Data.Linq.Mapping.MetaModel" /> on which the mapping is based.</span></span></summary>
        <value><span data-ttu-id="0c0b3-333">Сопоставление между базой данных и объектами домена.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-333">The mapping between a database and domain objects.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ObjectTrackingEnabled">
      <MemberSignature Language="C#" Value="public bool ObjectTrackingEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ObjectTrackingEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.DataContext.ObjectTrackingEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property ObjectTrackingEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ObjectTrackingEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ObjectTrackingEnabled : bool with get, set" Usage="System.Data.Linq.DataContext.ObjectTrackingEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0c0b3-334">Возвращает или задает значение, указывающее, включено ли отслеживание объекта.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-334">Gets or sets a value that indicates whether object tracking is enabled.</span></span></summary>
        <value><span data-ttu-id="0c0b3-335">Значение <see langword="true" />, если отслеживание объекта включено; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-335"><see langword="true" /> if the object tracking is enabled; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="0c0b3-336">Значение по умолчанию — <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-336">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c0b3-337">Задание этого свойства для `false` повышения производительности во время получения, так как меньше элементов для трассировки.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-337">Setting this property to `false` improves performance at retrieval time, because there are fewer items to track.</span></span>  
  
 <span data-ttu-id="0c0b3-338">Создается исключение:</span><span class="sxs-lookup"><span data-stu-id="0c0b3-338">An exception is thrown:</span></span>  
  
-   <span data-ttu-id="0c0b3-339">Значение, если свойство установлено в `false` после выполнения запроса.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-339">If the property is set to `false` after a query has been executed.</span></span>  
  
     <span data-ttu-id="0c0b3-340">Дополнительные сведения см <xref:System.Data.Linq.DataContext>. в подразделе допустимые режимы раздела.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-340">For more information, see the Valid Modes section in <xref:System.Data.Linq.DataContext>.</span></span>  
  
-   <span data-ttu-id="0c0b3-341">Если свойство имеет значение `false` и <xref:System.Data.Linq.DataContext.SubmitChanges%2A> вызывается.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-341">If the property is set to `false` and <xref:System.Data.Linq.DataContext.SubmitChanges%2A> is called.</span></span>  
  
 <span data-ttu-id="0c0b3-342">Если <xref:System.Data.Linq.DataContext.ObjectTrackingEnabled%2A> имеет `false`значение ,<xref:System.Data.Linq.DataContext.DeferredLoadingEnabled%2A> то игнорируется и `false`обрабатывается как.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-342">If <xref:System.Data.Linq.DataContext.ObjectTrackingEnabled%2A> is `false`, <xref:System.Data.Linq.DataContext.DeferredLoadingEnabled%2A> is ignored and treated as `false`.</span></span> <span data-ttu-id="0c0b3-343">В этом случае объект доступен <xref:System.Data.Linq.DataContext> только для чтения.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-343">In this case, the <xref:System.Data.Linq.DataContext> is read-only.</span></span>  
  
 <span data-ttu-id="0c0b3-344">Если <xref:System.Data.Linq.DataContext.ObjectTrackingEnabled%2A> имеет `true`значение ,<xref:System.Data.Linq.DataContext.DeferredLoadingEnabled%2A> то имеет значение `false`.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-344">If <xref:System.Data.Linq.DataContext.ObjectTrackingEnabled%2A> is `true`, <xref:System.Data.Linq.DataContext.DeferredLoadingEnabled%2A> is `false`.</span></span> <span data-ttu-id="0c0b3-345">В этом случае <xref:System.Data.Linq.DataContext> позволяет загрузить граф объектов с помощью <xref:System.Data.Linq.DataLoadOptions.LoadWith%2A> директив, но не включает отложенную загрузку.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-345">In this case, <xref:System.Data.Linq.DataContext> allows you to load an object graph by using <xref:System.Data.Linq.DataLoadOptions.LoadWith%2A> directives, but does not enable deferred loading.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryCacheEnabled">
      <MemberSignature Language="C#" Value="public bool QueryCacheEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool QueryCacheEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.DataContext.QueryCacheEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property QueryCacheEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool QueryCacheEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.QueryCacheEnabled : bool with get, set" Usage="System.Data.Linq.DataContext.QueryCacheEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Refresh">
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0c0b3-346">Обновляет состояние объекта, используя данные в базе данных.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-346">Refreshes object state by using data in the database.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c0b3-347">Этот метод полезен после ошибки оптимистичного параллелизма, чтобы перевести элементы в состояние для другой попытки.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-347">This method is useful after an optimistic concurrency error to bring items into a state for another attempt.</span></span> <span data-ttu-id="0c0b3-348">Он обновляет состояние примитивных полей и свойств объектов.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-348">It updates the state of the primitive fields and properties on the objects.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0c0b3-349">Если объект находится на стороне « *многие* » связи «один ко многим», внешний ключ для объекта будет установлен, а указатель объекта для другой стороны связи будет установлен в новое значение.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-349">If an object is on the *many* side of a one-to-many relationship, the foreign key on the object will be set and the object pointer for the other side of the relationship will be set to the new value.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public void Refresh (System.Data.Linq.RefreshMode mode, System.Collections.IEnumerable entities);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Refresh(valuetype System.Data.Linq.RefreshMode mode, class System.Collections.IEnumerable entities) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.Refresh(System.Data.Linq.RefreshMode,System.Collections.IEnumerable)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Refresh (mode As RefreshMode, entities As IEnumerable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Refresh(System::Data::Linq::RefreshMode mode, System::Collections::IEnumerable ^ entities);" />
      <MemberSignature Language="F#" Value="member this.Refresh : System.Data.Linq.RefreshMode * System.Collections.IEnumerable -&gt; unit" Usage="dataContext.Refresh (mode, entities)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mode" Type="System.Data.Linq.RefreshMode" />
        <Parameter Name="entities" Type="System.Collections.IEnumerable" />
      </Parameters>
      <Docs>
        <param name="mode"><span data-ttu-id="0c0b3-350">Значение, указывающее, как обрабатываются конфликты оптимистичного параллелизма.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-350">A value that specifies how optimistic concurrency conflicts are handled.</span></span></param>
        <param name="entities"><span data-ttu-id="0c0b3-351">Коллекция сущностей, которые должны быть обновлены.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-351">The collection of entities to be refreshed.</span></span></param>
        <summary><span data-ttu-id="0c0b3-352">Обновляет коллекцию объектов сущности согласно указанному режиму.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-352">Refreshes a collection of entity objects according to the specified mode.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public void Refresh (System.Data.Linq.RefreshMode mode, object entity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Refresh(valuetype System.Data.Linq.RefreshMode mode, object entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.Refresh(System.Data.Linq.RefreshMode,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Refresh (mode As RefreshMode, entity As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Refresh(System::Data::Linq::RefreshMode mode, System::Object ^ entity);" />
      <MemberSignature Language="F#" Value="member this.Refresh : System.Data.Linq.RefreshMode * obj -&gt; unit" Usage="dataContext.Refresh (mode, entity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mode" Type="System.Data.Linq.RefreshMode" />
        <Parameter Name="entity" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="mode"><span data-ttu-id="0c0b3-353">Значение, указывающее, как обрабатываются конфликты оптимистичного параллелизма.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-353">A value that specifies how optimistic concurrency conflicts are handled.</span></span></param>
        <param name="entity"><span data-ttu-id="0c0b3-354">Обновляемый объект.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-354">The object to be refreshed.</span></span></param>
        <summary><span data-ttu-id="0c0b3-355">Обновляет объект сущности согласно указанному режиму.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-355">Refreshes an entity object according to the specified mode.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public void Refresh (System.Data.Linq.RefreshMode mode, params object[] entities);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Refresh(valuetype System.Data.Linq.RefreshMode mode, object[] entities) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.Refresh(System.Data.Linq.RefreshMode,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub Refresh (mode As RefreshMode, ParamArray entities As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Refresh(System::Data::Linq::RefreshMode mode, ... cli::array &lt;System::Object ^&gt; ^ entities);" />
      <MemberSignature Language="F#" Value="member this.Refresh : System.Data.Linq.RefreshMode * obj[] -&gt; unit" Usage="dataContext.Refresh (mode, entities)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mode" Type="System.Data.Linq.RefreshMode" />
        <Parameter Name="entities" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-3.5">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="mode"><span data-ttu-id="0c0b3-356">Значение, указывающее, как обрабатываются конфликты оптимистичного параллелизма.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-356">A value that specifies how optimistic concurrency conflicts are handled.</span></span></param>
        <param name="entities"><span data-ttu-id="0c0b3-357">Обновляемый массив объектов сущности.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-357">The array of entity objects to be refreshed.</span></span></param>
        <summary><span data-ttu-id="0c0b3-358">Обновляет массив объектов сущности согласно указанному режиму.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-358">Refreshes an array of entity objects according to the specified mode.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SubmitChanges">
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0c0b3-359">Вычисляет набор измененных объектов, которые следует вставить, обновить или удалить, и выполняет соответствующие команды для внесения изменений в базу данных.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-359">Computes the set of modified objects to be inserted, updated, or deleted, and executes the appropriate commands to implement the changes to the database.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c0b3-360">Если для операций вставки, обновления или удаления имеются методы переопределения, <xref:System.Data.Linq.DataContext.SubmitChanges%2A> выполняет эти методы вместо команд по умолчанию. [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]</span><span class="sxs-lookup"><span data-stu-id="0c0b3-360">If override methods are present for insert, update, or delete, <xref:System.Data.Linq.DataContext.SubmitChanges%2A> executes these methods instead of the default [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] commands.</span></span>  
  
 <span data-ttu-id="0c0b3-361"><xref:System.Data.Linq.DataContext.SubmitChanges%2A>запускает транзакцию и выполняет откат при возникновении исключения во время <xref:System.Data.Linq.DataContext.SubmitChanges%2A> выполнения.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-361"><xref:System.Data.Linq.DataContext.SubmitChanges%2A> starts a transaction and will roll back if an exception occurs while <xref:System.Data.Linq.DataContext.SubmitChanges%2A> is executing.</span></span> <span data-ttu-id="0c0b3-362">Однако это не приводит к откату изменений в памяти или их отслеживанию <xref:System.Data.Linq.DataContext>; эти изменения необходимо будет откатить вручную.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-362">However, this does not roll back the changes in memory or tracked by the <xref:System.Data.Linq.DataContext>; those changes will need to be rolled back manually.</span></span> <span data-ttu-id="0c0b3-363">Можно начать с нового экземпляра, <xref:System.Data.Linq.DataContext> если изменения в памяти должны быть отменены.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-363">You can start with a new instance of the <xref:System.Data.Linq.DataContext> if the changes in memory are to be discarded.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="SubmitChanges">
      <MemberSignature Language="C#" Value="public void SubmitChanges ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SubmitChanges() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.SubmitChanges" />
      <MemberSignature Language="VB.NET" Value="Public Sub SubmitChanges ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SubmitChanges();" />
      <MemberSignature Language="F#" Value="member this.SubmitChanges : unit -&gt; unit" Usage="dataContext.SubmitChanges " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0c0b3-364">Вычисляет набор измененных объектов, которые следует вставить, обновить или удалить, и выполняет соответствующие команды для внесения изменений в базу данных.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-364">Computes the set of modified objects to be inserted, updated, or deleted, and executes the appropriate commands to implement the changes to the database.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c0b3-365">Если для операций вставки, обновления или удаления имеются методы переопределения, <xref:System.Data.Linq.DataContext.SubmitChanges%2A> выполняет эти методы вместо команд по умолчанию. [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]</span><span class="sxs-lookup"><span data-stu-id="0c0b3-365">If override methods are present for insert, update, or delete, <xref:System.Data.Linq.DataContext.SubmitChanges%2A> executes these methods instead of the default [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] commands.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SubmitChanges">
      <MemberSignature Language="C#" Value="public virtual void SubmitChanges (System.Data.Linq.ConflictMode failureMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SubmitChanges(valuetype System.Data.Linq.ConflictMode failureMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.SubmitChanges(System.Data.Linq.ConflictMode)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SubmitChanges (failureMode As ConflictMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SubmitChanges(System::Data::Linq::ConflictMode failureMode);" />
      <MemberSignature Language="F#" Value="abstract member SubmitChanges : System.Data.Linq.ConflictMode -&gt; unit&#xA;override this.SubmitChanges : System.Data.Linq.ConflictMode -&gt; unit" Usage="dataContext.SubmitChanges failureMode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="failureMode" Type="System.Data.Linq.ConflictMode" />
      </Parameters>
      <Docs>
        <param name="failureMode"><span data-ttu-id="0c0b3-366">Действие, выполняемое в случае сбоя отправки.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-366">The action to be taken if the submission fails.</span></span> <span data-ttu-id="0c0b3-367">Ниже приведены допустимые аргументы.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-367">Valid arguments are as follows:</span></span> 
 <see cref="F:System.Data.Linq.ConflictMode.FailOnFirstConflict" /><see cref="F:System.Data.Linq.ConflictMode.ContinueOnConflict" /></param>
        <summary><span data-ttu-id="0c0b3-368">Отправляет изменения, которые были внесены в извлеченные объекты для основной базы данных, и указывает действие, которое следует выполнить, если не удастся осуществить передачу.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-368">Sends changes that were made to retrieved objects to the underlying database, and specifies the action to be taken if the submission fails.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c0b3-369">Режим сбоя по умолчанию — <xref:System.Data.Linq.ConflictMode.FailOnFirstConflict>.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-369">Default failure mode is <xref:System.Data.Linq.ConflictMode.FailOnFirstConflict>.</span></span>  
  
   
  
## Examples  
 [!code-csharp[System.Data.Linq.ConflictModeEnumeration#1](~/samples/snippets/csharp/VS_Snippets_Data/system.data.linq.conflictmodeenumeration/cs/program.cs#1)]
 [!code-vb[System.Data.Linq.ConflictModeEnumeration#1](~/samples/snippets/visualbasic/VS_Snippets_Data/system.data.linq.conflictmodeenumeration/vb/module1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Transaction">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbTransaction Transaction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbTransaction Transaction" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.DataContext.Transaction" />
      <MemberSignature Language="VB.NET" Value="Public Property Transaction As DbTransaction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Common::DbTransaction ^ Transaction { System::Data::Common::DbTransaction ^ get(); void set(System::Data::Common::DbTransaction ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Transaction : System.Data.Common.DbTransaction with get, set" Usage="System.Data.Linq.DataContext.Transaction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbTransaction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0c0b3-370">Возвращает или задает локальную транзакцию для использования [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] для доступа к базе данных.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-370">Gets or sets a local transaction for the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] to use to access the database.</span></span></summary>
        <value><span data-ttu-id="0c0b3-371">Объект транзакции, который используется объектом <see cref="T:System.Data.Linq.DataContext" /> при выполнении запросов и команд.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-371">The transaction object used by the <see cref="T:System.Data.Linq.DataContext" /> when executing queries and commands.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c0b3-372">Основной сценарий для этого свойства — это взаимодействие с реляционным [!INCLUDE[vstecado](~/includes/vstecado-md.md)] кодом.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-372">The primary scenario for this property is interoperability with relational [!INCLUDE[vstecado](~/includes/vstecado-md.md)] code.</span></span> <span data-ttu-id="0c0b3-373">Например, это свойство используется при написании собственных `Create` / `Update` `Delete` / методов для задания `Transaction` свойства объекта ADO `Command` .</span><span class="sxs-lookup"><span data-stu-id="0c0b3-373">For example, use this property when you write your own `Create`/`Update`/`Delete` methods to set the `Transaction` property on the ADO `Command` object.</span></span>  
  
 <span data-ttu-id="0c0b3-374">Обратите внимание на следующее условия:</span><span class="sxs-lookup"><span data-stu-id="0c0b3-374">Note the following:</span></span>  
  
-   <span data-ttu-id="0c0b3-375">Если это свойство не было задано явно, метод получения возвращает значение null.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-375">If this property has not been explicitly set, the getter returns null.</span></span>  
  
-   <span data-ttu-id="0c0b3-376">Если код выполняется в <xref:System.Transactions.Transaction> контексте, задание этого свойства приводит к возникновению исключения.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-376">If the code is executing in a <xref:System.Transactions.Transaction> context, setting this property throws an exception.</span></span>  
  
-   <span data-ttu-id="0c0b3-377">Если это свойство задано и открыто новое <xref:System.Transactions.Transaction> приложение, то при выполнении запроса или обновления выдается исключение.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-377">If this property is set and a new <xref:System.Transactions.Transaction> is opened, an exception is thrown when a query or update is executed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Translate">
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0c0b3-378">Преобразовывает существующий <see cref="T:System.Data.IDataReader" /> в объекты.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-378">Converts an existing <see cref="T:System.Data.IDataReader" /> to objects.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c0b3-379">Каждая строка в <xref:System.Data.IDataReader> преобразуется в объект <xref:System.Collections.Generic.IEnumerable%601>в.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-379">Each row in the <xref:System.Data.IDataReader> is converted to an object in the <xref:System.Collections.Generic.IEnumerable%601>.</span></span>  
  
```  
public IEnumerable<T> Translate<T>(IDataReader reader) {}  
```  
  
 <span data-ttu-id="0c0b3-380">Описание: Этот метод используется для преобразования существующих <xref:System.Data.Common.DbDataReader> объектов в.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-380">Description: This method is used to convert an existing <xref:System.Data.Common.DbDataReader> to objects.</span></span> <span data-ttu-id="0c0b3-381">Каждая строка в <xref:System.Data.Common.DbDataReader> преобразуется в объект <xref:System.Collections.Generic.IEnumerable%601>в.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-381">Each row in the <xref:System.Data.Common.DbDataReader> is converted to an object in the <xref:System.Collections.Generic.IEnumerable%601>.</span></span>  
  
 <span data-ttu-id="0c0b3-382">**Универсальные параметры:**</span><span class="sxs-lookup"><span data-stu-id="0c0b3-382">**Generic parameters:**</span></span>  
  
 <span data-ttu-id="0c0b3-383">`T`: См. раздел <xref:System.Data.Linq.DataContext.ExecuteQuery%2A>.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-383">`T`: See <xref:System.Data.Linq.DataContext.ExecuteQuery%2A>.</span></span>  
  
 <span data-ttu-id="0c0b3-384">**Вход**</span><span class="sxs-lookup"><span data-stu-id="0c0b3-384">**Parameters:**</span></span>  
  
 <span data-ttu-id="0c0b3-385">`Query`: См. описание команды в разделе <xref:System.Data.Linq.DataContext.ExecuteCommand%2A>.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-385">`Query`: See the description for command under <xref:System.Data.Linq.DataContext.ExecuteCommand%2A>.</span></span>  
  
 <span data-ttu-id="0c0b3-386">`Parameters`: Описание параметров см. в разделе <xref:System.Data.Linq.DataContext.ExecuteCommand%2A>.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-386">`Parameters`: See the description for parameters under <xref:System.Data.Linq.DataContext.ExecuteCommand%2A>.</span></span>  
  
 <span data-ttu-id="0c0b3-387">**Тип возвращаемого значения:**</span><span class="sxs-lookup"><span data-stu-id="0c0b3-387">**Return type:**</span></span>  
  
 <span data-ttu-id="0c0b3-388"><xref:System.Collections.Generic.IEnumerable%601>: Коллекция объектов, возвращаемых преобразованием.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-388"><xref:System.Collections.Generic.IEnumerable%601>: collection of objects returned by the conversion.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Translate">
      <MemberSignature Language="C#" Value="public System.Data.Linq.IMultipleResults Translate (System.Data.Common.DbDataReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Linq.IMultipleResults Translate(class System.Data.Common.DbDataReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.Translate(System.Data.Common.DbDataReader)" />
      <MemberSignature Language="VB.NET" Value="Public Function Translate (reader As DbDataReader) As IMultipleResults" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Linq::IMultipleResults ^ Translate(System::Data::Common::DbDataReader ^ reader);" />
      <MemberSignature Language="F#" Value="member this.Translate : System.Data.Common.DbDataReader -&gt; System.Data.Linq.IMultipleResults" Usage="dataContext.Translate reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.IMultipleResults</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Data.Common.DbDataReader" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="0c0b3-389">Преобразуемая структура <see cref="T:System.Data.IDataReader" />.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-389">The <see cref="T:System.Data.IDataReader" /> to be converted.</span></span></param>
        <summary><span data-ttu-id="0c0b3-390">Преобразовывает существующий <see cref="T:System.Data.Common.DbDataReader" /> в объекты.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-390">Converts an existing <see cref="T:System.Data.Common.DbDataReader" /> to objects.</span></span></summary>
        <returns><span data-ttu-id="0c0b3-391">Список объектов, возвращаемых преобразованием.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-391">A list of objects returned by the conversion.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Translate">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerable Translate (Type elementType, System.Data.Common.DbDataReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.IEnumerable Translate(class System.Type elementType, class System.Data.Common.DbDataReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.Translate(System.Type,System.Data.Common.DbDataReader)" />
      <MemberSignature Language="VB.NET" Value="Public Function Translate (elementType As Type, reader As DbDataReader) As IEnumerable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IEnumerable ^ Translate(Type ^ elementType, System::Data::Common::DbDataReader ^ reader);" />
      <MemberSignature Language="F#" Value="member this.Translate : Type * System.Data.Common.DbDataReader -&gt; System.Collections.IEnumerable" Usage="dataContext.Translate (elementType, reader)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elementType" Type="System.Type" />
        <Parameter Name="reader" Type="System.Data.Common.DbDataReader" />
      </Parameters>
      <Docs>
        <param name="elementType"><span data-ttu-id="0c0b3-392">Тип <see cref="T:System.Collections.Generic.IEnumerable`1" />, который должен быть возвращен.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-392">The type of the <see cref="T:System.Collections.Generic.IEnumerable`1" /> to be returned.</span></span>  
  
<span data-ttu-id="0c0b3-393">Алгоритм сопоставления столбцов в результате с полями и свойствами в объекте работает таким образом:</span><span class="sxs-lookup"><span data-stu-id="0c0b3-393">The algorithm for matching columns in the result to fields and properties in the object works as follows:</span></span> 
<span data-ttu-id="0c0b3-394">Если поле или свойство сопоставляется с определенным именем столбца, это имя столбца ожидается в наборе результатов.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-394">If a field or property is mapped to a particular column name, that column name is expected in the resultset.</span></span>  
  
<span data-ttu-id="0c0b3-395">Если поле или свойство не сопоставляется, столбец с тем же именем, что и поле или свойство, ожидается в наборе результатов.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-395">If a field or property is not mapped, a column with the same name as the field or property is expected in the resultset.</span></span>  
  
<span data-ttu-id="0c0b3-396">Сначала в сравнении выполняется поиск совпадения с учетом регистра.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-396">The comparison is performed by looking for a case-sensitive match first.</span></span> <span data-ttu-id="0c0b3-397">Если это совпадение не найдено, следующий поиск выполняется для совпадений без учета регистра.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-397">If this match is not found, a subsequent search is occurs for a case-insensitive match.</span></span>  
  
<span data-ttu-id="0c0b3-398">Запрос должен возвращать все отслеженные поля и свойства объекта (кроме тех, загрузка которых отложена), если выполняются все следующие условия.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-398">The query must return all the tracked fields and properties of the object (except those that are loaded on a deferred basis) when all the following conditions are true:</span></span> 
 <span data-ttu-id="0c0b3-399"><c>T</c> является сущностью, явно отслеживаемой <see cref="T:System.Data.Linq.DataContext" />.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-399"><c>T</c> is an entity explicitly tracked by the <see cref="T:System.Data.Linq.DataContext" />.</span></span>  
  
 <span data-ttu-id="0c0b3-400">Свойство <see cref="P:System.Data.Linq.DataContext.ObjectTrackingEnabled" /> имеет значение <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-400"><see cref="P:System.Data.Linq.DataContext.ObjectTrackingEnabled" /> is <see langword="true" />.</span></span>  
  
<span data-ttu-id="0c0b3-401">Сущность имеет первичный ключ.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-401">The entity has a primary key.</span></span>  
  
<span data-ttu-id="0c0b3-402">В противном случае возникает исключение.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-402">Otherwise an exception is thrown.</span></span></param>
        <param name="reader"><span data-ttu-id="0c0b3-403">Преобразуемая структура <see cref="T:System.Data.IDataReader" />.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-403">The <see cref="T:System.Data.IDataReader" /> to be converted.</span></span></param>
        <summary><span data-ttu-id="0c0b3-404">Преобразовывает существующий <see cref="T:System.Data.Common.DbDataReader" /> в объекты.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-404">Converts an existing <see cref="T:System.Data.Common.DbDataReader" /> to objects.</span></span></summary>
        <returns><span data-ttu-id="0c0b3-405">Список объектов, возвращаемых преобразованием.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-405">A list of objects returned by the conversion.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Translate&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;TResult&gt; Translate&lt;TResult&gt; (System.Data.Common.DbDataReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;!!TResult&gt; Translate&lt;TResult&gt;(class System.Data.Common.DbDataReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.DataContext.Translate``1(System.Data.Common.DbDataReader)" />
      <MemberSignature Language="VB.NET" Value="Public Function Translate(Of TResult) (reader As DbDataReader) As IEnumerable(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA; System::Collections::Generic::IEnumerable&lt;TResult&gt; ^ Translate(System::Data::Common::DbDataReader ^ reader);" />
      <MemberSignature Language="F#" Value="member this.Translate : System.Data.Common.DbDataReader -&gt; seq&lt;'Result&gt;" Usage="dataContext.Translate reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="reader" Type="System.Data.Common.DbDataReader" />
      </Parameters>
      <Docs>
        <typeparam name="TResult"><span data-ttu-id="0c0b3-406">Тип <see cref="T:System.Collections.Generic.IEnumerable`1" />, который должен быть возвращен.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-406">The type of the <see cref="T:System.Collections.Generic.IEnumerable`1" /> to be returned.</span></span></typeparam>
        <param name="reader"><span data-ttu-id="0c0b3-407">Преобразуемая структура <see cref="T:System.Data.IDataReader" />.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-407">The <see cref="T:System.Data.IDataReader" /> to be converted.</span></span></param>
        <summary><span data-ttu-id="0c0b3-408">Преобразовывает существующий <see cref="T:System.Data.Common.DbDataReader" /> в объекты.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-408">Converts an existing <see cref="T:System.Data.Common.DbDataReader" /> to objects.</span></span></summary>
        <returns><span data-ttu-id="0c0b3-409">Коллекция объектов, возвращаемых преобразованием.</span><span class="sxs-lookup"><span data-stu-id="0c0b3-409">A collection of objects returned by the conversion.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
