<Type Name="IDestinationTypeProvider" FullName="System.Xaml.IDestinationTypeProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7377e7d5e09e53d4e38f48ac87c8d7c850bb504a" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69416413" /></Metadata><TypeSignature Language="C#" Value="public interface IDestinationTypeProvider" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDestinationTypeProvider" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.IDestinationTypeProvider" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDestinationTypeProvider" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDestinationTypeProvider" />
  <TypeSignature Language="F#" Value="type IDestinationTypeProvider = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Представляет службу, которая возвращает идентификатор системы типов среды CLR для целевого типа. Целевой тип используется, если о целевом типе для операции задания свойства сообщается косвенно через отражение или другие механизмы.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Тип, возвращаемый функцией <xref:System.Xaml.IDestinationTypeProvider.GetDestinationType%2A> , разрешается из текущей позицией потока узлов XAML с использованием текущего контекста схемы XAML.  
  
 При использовании системы типов XAML, реализованной .NET Framework службах XAML, и доступе к контексту службы в этих <xref:System.Xaml.IDestinationTypeProvider.GetDestinationType%2A> условиях, <xref:System.Xaml.XamlType.UnderlyingType%2A> возвращает на основе доступных сведений о системе типов XAML и контекста схемы XAML на основе среды CLR.  
  
 Эта служба относится к ситуациям, когда чистое отражение CLR или другие механизмы могут не предоставлять достаточно сведений о типе назначения. Ниже приведен список некоторых соответствующих сценариев для <xref:System.Xaml.IDestinationTypeProvider>:  
  
-   Система типов CLR сообщает о косвенном типе, так как среда CLR определяет и использует типы, и требуется истинный целевой тип. Например, API-интерфейсы в .NET Framework службах XAML используют эту службу внутренне при обработке членов события. События выводятся чисто отражением CLR как <xref:System.Delegate>.  
  
-   Необходимо убедиться, что целевой тип использования преобразователя типов соответствует ожидаемому типу, который может создаваться преобразователем типов. Этот сценарий полезен, если целевой тип является параметризованным или универсальным.  
  
-   Преобразователь значений вызывается из использования, вложенного в другой преобразователь значений. В этом случае <xref:System.Xaml.IDestinationTypeProvider.GetDestinationType%2A> очищает вложение и возвращает целевой тип фактического свойства, вместо того чтобы возвращать тип выходных данных любого промежуточного преобразователя значений.  
  
 Преобразователи типов и расширения разметки могут запрашивать <xref:System.Xaml.IDestinationTypeProvider> как службу в контексте службы, предоставляемом средством записи объектов XAML, когда средство записи объектов XAML вызывает поведение преобразования значения. Дополнительные сведения см. в разделе [преобразователи типов и расширения разметки для XAML](~/docs/framework/xaml-services/type-converters-and-markup-extensions-for-xaml.md) и [контекстов служб, доступных для преобразователей типов и расширений разметки](~/docs/framework/xaml-services/service-contexts-available-to-type-converters-and-markup-extensions.md).  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xaml.XamlObjectWriter" />
    <related type="Article" href="https://msdn.microsoft.com/library/db07a952-05ce-4aa4-b6f9-aac7397d0326">Преобразователи типов или расширения разметки для XAML</related>
  </Docs>
  <Members>
    <Member MemberName="GetDestinationType">
      <MemberSignature Language="C#" Value="public Type GetDestinationType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetDestinationType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.IDestinationTypeProvider.GetDestinationType" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDestinationType () As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Type ^ GetDestinationType();" />
      <MemberSignature Language="F#" Value="abstract member GetDestinationType : unit -&gt; Type" Usage="iDestinationTypeProvider.GetDestinationType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает тип <see cref="T:System.Type" /> среды CLR, который определяет целевой тип для соответствующего преобразователя типов или расширения разметки.</summary>
        <returns>Значение <see cref="T:System.Type" /> среды CLR для целевого типа.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод не имеет входного параметра. Возвращаемые данные (и возвращаемое `null`значение, кроме) определяются текущим положением узла в потоке узлов XAML.  
  
## <a name="service-implementers"></a>Исполнители услуг  
 При повторном реализации этой службы <xref:System.Xaml.IDestinationTypeProvider.GetDestinationType%2A> метод должен возвращать тип, который будет проверяться с помощью расширения разметки или преобразователя типов на соответствие наиболее конкретному типу преобразования или выходного типа.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
