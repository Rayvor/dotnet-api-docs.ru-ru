<Type Name="IAmbientProvider" FullName="System.Xaml.IAmbientProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="676cec76c5e65ccbe563061adfe0bf5b84afefce" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69416452" /></Metadata><TypeSignature Language="C#" Value="public interface IAmbientProvider" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IAmbientProvider" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.IAmbientProvider" />
  <TypeSignature Language="VB.NET" Value="Public Interface IAmbientProvider" />
  <TypeSignature Language="C++ CLI" Value="public interface class IAmbientProvider" />
  <TypeSignature Language="F#" Value="type IAmbientProvider = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="81f1a-101">Представляет службу, которая может возвращать элементы сведений о внешних свойствах или внешних типах преобразователям типов и расширениям разметки.</span><span class="sxs-lookup"><span data-stu-id="81f1a-101">Represents a service that can return information items about ambient properties or ambient types to type converters and markup extensions.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81f1a-102">Этот интерфейс представляет службу, которая может помочь преобразователям типов и расширениям разметки получать идентификаторы внешних свойств для системы типов XAML (<xref:System.Xaml.XamlMember> объектов).</span><span class="sxs-lookup"><span data-stu-id="81f1a-102">This interface represents the service that can help type converters and markup extensions to get the ambient property identifiers for the XAML type system (<xref:System.Xaml.XamlMember> objects).</span></span> <span data-ttu-id="81f1a-103">Служба также может получать значения свойств окружения из классов.</span><span class="sxs-lookup"><span data-stu-id="81f1a-103">The service can also get the ambient property values from classes.</span></span> <span data-ttu-id="81f1a-104">Типы также могут быть внешними; любой член, который использует этот тип в качестве значения, должен считаться внешним.</span><span class="sxs-lookup"><span data-stu-id="81f1a-104">Types can also be ambient; any member that uses that type as its value should be considered ambient.</span></span>  
  
 <span data-ttu-id="81f1a-105">Обычно эта служба возвращается посредством вызова метода <xref:System.IServiceProvider.GetService%2A>, который выполняется для конкретного поставщика служб.</span><span class="sxs-lookup"><span data-stu-id="81f1a-105">This service is typically returned through a call to <xref:System.IServiceProvider.GetService%2A>, which is made against a context-specific service provider.</span></span> <span data-ttu-id="81f1a-106">Поставщик услуг обычно доступен для контекстов, которым он необходим, например кода выполнения преобразователя значений.</span><span class="sxs-lookup"><span data-stu-id="81f1a-106">The service provider is generally available to contexts that need it, such as the execution code of a value converter.</span></span> <span data-ttu-id="81f1a-107">Дополнительные сведения см. в разделе [преобразователи типов и расширения разметки для XAML](~/docs/framework/xaml-services/type-converters-and-markup-extensions-for-xaml.md) и [контекстов служб, доступных для преобразователей типов и расширений разметки](~/docs/framework/xaml-services/service-contexts-available-to-type-converters-and-markup-extensions.md).</span><span class="sxs-lookup"><span data-stu-id="81f1a-107">For more information, see [Type Converters and Markup Extensions for XAML](~/docs/framework/xaml-services/type-converters-and-markup-extensions-for-xaml.md) and [Service Contexts Available to Type Converters and Markup Extensions](~/docs/framework/xaml-services/service-contexts-available-to-type-converters-and-markup-extensions.md).</span></span>  
  
## <a name="about-ambient-properties"></a><span data-ttu-id="81f1a-108">Сведения о внешних свойствах</span><span class="sxs-lookup"><span data-stu-id="81f1a-108">About Ambient Properties</span></span>  
 <span data-ttu-id="81f1a-109">Внешнее свойство — это свойство, значение свойства которого должно быть доступно для преобразователей типа и использования расширения разметки, которые существуют в структуре узлов XAML и в графе объектов, созданном на основе этого объекта.</span><span class="sxs-lookup"><span data-stu-id="81f1a-109">An ambient property is a property whose property value should be available to type converter and markup extension usages that exist in the XAML node structure and in the object graph created from it.</span></span> <span data-ttu-id="81f1a-110">Это относится к обработчику XAML на этапе создания объекта пути загрузки или фазы сериализации пути сохранения.</span><span class="sxs-lookup"><span data-stu-id="81f1a-110">This is relevant for a XAML processor during the object-writing phase of the load path or the serialization phase of a save path.</span></span>  
  
 <span data-ttu-id="81f1a-111">В случае пути загрузки значение свойства окружения может повлиять на значение в графе объекта других свойств, которые существуют под ним в структуре узлов XAML.</span><span class="sxs-lookup"><span data-stu-id="81f1a-111">In the load path case, the ambient property value might influence the value in the object graph of other properties that exist underneath it in a XAML node structure.</span></span> <span data-ttu-id="81f1a-112">При обработке в виде потока узлов XAML понятие окружения означает, что значение свойства окружения должно быть доступно для преобразователей типов и расширений `StartObject` разметки от до `EndObject`.</span><span class="sxs-lookup"><span data-stu-id="81f1a-112">When processed as a XAML node stream, the ambient concept means the ambient property value must be available to type converters and markup extensions from `StartObject` to `EndObject`.</span></span> <span data-ttu-id="81f1a-113">Аналогичным образом, преобразователь типов, используемый для пути сохранения, может использовать сведения о внешнем свойстве и его значении.</span><span class="sxs-lookup"><span data-stu-id="81f1a-113">Similarly, a type converter that is used for the save path can use knowledge of the ambient property and its value.</span></span> <span data-ttu-id="81f1a-114">Таким образом, создаваемый XAML является лучшим представлением циклического приема.</span><span class="sxs-lookup"><span data-stu-id="81f1a-114">Therefore, the XAML that is produced is a better round-trip representation.</span></span>  
  
 <span data-ttu-id="81f1a-115">Для членов в целом XAML не указывает порядок, в котором должны обрабатываться элементы объекта.</span><span class="sxs-lookup"><span data-stu-id="81f1a-115">For members in general, XAML does not specify the order in which members of an object must be processed.</span></span> <span data-ttu-id="81f1a-116">Однако любое значение свойства окружения должно сначала обрабатываться средством чтения XAML, чтобы использование преобразователей типов и расширений разметки, которые содержатся в других свойствах, могли получить к нему <xref:System.Xaml.IAmbientProvider> доступ через службу.</span><span class="sxs-lookup"><span data-stu-id="81f1a-116">However, any ambient property value must be processed first by the XAML reader so that the type converter and markup extension usages that are contained in other properties can access it through the <xref:System.Xaml.IAmbientProvider> service.</span></span>  
  
 <span data-ttu-id="81f1a-117"><xref:System.Xaml.XamlMember.DependsOn%2A>— Это аналогичная концепция, которая также влияет на порядок обработки узлов XAML.</span><span class="sxs-lookup"><span data-stu-id="81f1a-117"><xref:System.Xaml.XamlMember.DependsOn%2A> is a similar concept that also influences XAML node-processing order.</span></span> <span data-ttu-id="81f1a-118"><xref:System.Xaml.XamlMember.DependsOn%2A> Однако может использоваться только для отношений одноранговых членов и узлов. он не влияет на все потомки.</span><span class="sxs-lookup"><span data-stu-id="81f1a-118">However, <xref:System.Xaml.XamlMember.DependsOn%2A> can only be used for peer member and node relationships; it cannot influence all descendants.</span></span> <span data-ttu-id="81f1a-119">Кроме того <xref:System.Xaml.XamlMember.DependsOn%2A> , непосредственно влияет на параметр свойства графа объекта; в то время как внешний метод полагается на преобразователи типов или расширения разметки.</span><span class="sxs-lookup"><span data-stu-id="81f1a-119">Also, <xref:System.Xaml.XamlMember.DependsOn%2A> directly influences object graph property setting; whereas the ambient technique relies on type converters or markup extensions.</span></span> <span data-ttu-id="81f1a-120">Во внешней методике также должен быть определен преобразователь типов или определение расширения разметки, которое указывает, как значение свойства окружения должно интерпретироваться и применяться к объекту.</span><span class="sxs-lookup"><span data-stu-id="81f1a-120">In the ambient technique, there must also be a specific type converter or markup extension definition that specifies how the ambient property value should be interpreted and applied to the object.</span></span>  
  
## <a name="wpf-usage-notes"></a><span data-ttu-id="81f1a-121">Примечания об использовании WPF</span><span class="sxs-lookup"><span data-stu-id="81f1a-121">WPF Usage Notes</span></span>  
 <span data-ttu-id="81f1a-122">Сценарий внешнего свойства, проиллюстрированного в [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <xref:System.Windows.Style.TargetType%2A?displayProperty=nameWithType>наборе функций, позволяет определить необходимые имена для поиска других значений свойств.</span><span class="sxs-lookup"><span data-stu-id="81f1a-122">An ambient property scenario that is illustrated in the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] feature set is <xref:System.Windows.Style.TargetType%2A?displayProperty=nameWithType>, which can qualify the necessary property name lookups for other values.</span></span> <span data-ttu-id="81f1a-123">В этом случае <xref:System.Windows.Style.TargetType%2A?displayProperty=nameWithType> значение определяет <xref:System.Windows.Setter.Property%2A?displayProperty=nameWithType> значения, которые находятся в узлах XAML под ним.</span><span class="sxs-lookup"><span data-stu-id="81f1a-123">In this case, the <xref:System.Windows.Style.TargetType%2A?displayProperty=nameWithType> value qualifies the <xref:System.Windows.Setter.Property%2A?displayProperty=nameWithType> values that are located in the XAML nodes underneath it.</span></span> <span data-ttu-id="81f1a-124"><xref:System.Windows.Setter.Property%2A?displayProperty=nameWithType>использует поведение преобразователя типов для <xref:System.Windows.DependencyProperty>.</span><span class="sxs-lookup"><span data-stu-id="81f1a-124"><xref:System.Windows.Setter.Property%2A?displayProperty=nameWithType> uses the type converter behavior for a <xref:System.Windows.DependencyProperty>.</span></span> <span data-ttu-id="81f1a-125">Это поведение обращается к внешнему <xref:System.Windows.Style.TargetType%2A?displayProperty=nameWithType> значению путем <xref:System.Xaml.IAmbientProvider.GetFirstAmbientValue%2A> запроса из контекста службы, доступного для преобразователей типов и расширений разметки.</span><span class="sxs-lookup"><span data-stu-id="81f1a-125">This behavior accesses the ambient <xref:System.Windows.Style.TargetType%2A?displayProperty=nameWithType> value by querying <xref:System.Xaml.IAmbientProvider.GetFirstAmbientValue%2A> from a service context that is available to type converters and markup extensions.</span></span>  
  
 <span data-ttu-id="81f1a-126">Сценарий внешнего типа, который проиллюстрирован в наборе функций WPF, — <xref:System.Windows.ResourceDictionary>это.</span><span class="sxs-lookup"><span data-stu-id="81f1a-126">An ambient type scenario that is illustrated in the WPF feature set is <xref:System.Windows.ResourceDictionary>.</span></span> <span data-ttu-id="81f1a-127"><xref:System.Windows.ResourceDictionary>имеет свойство, которое может содержать другие <xref:System.Windows.ResourceDictionary> объекты для слияния, и предполагаемый порядок разрешения ресурсов для Объединенного сценария конфликтует с порядком загрузки типов. <xref:System.Windows.ResourceDictionary.MergedDictionaries%2A></span><span class="sxs-lookup"><span data-stu-id="81f1a-127"><xref:System.Windows.ResourceDictionary> has a <xref:System.Windows.ResourceDictionary.MergedDictionaries%2A> property that can contain other <xref:System.Windows.ResourceDictionary> objects to merge, and the intended order of resource resolution for the merged scenario clashes with the order that types are loaded.</span></span> <span data-ttu-id="81f1a-128"><xref:System.Windows.ResourceDictionary>применяется <xref:System.Windows.Markup.AmbientAttribute> , чтобы обработчик XAML мог правильно обрабатывать ссылки в объединенном словаре с `StaticResource` использованием.</span><span class="sxs-lookup"><span data-stu-id="81f1a-128"><xref:System.Windows.ResourceDictionary> applies <xref:System.Windows.Markup.AmbientAttribute> so that a XAML processor can correctly process the references in a merged dictionary with `StaticResource` usages.</span></span> <span data-ttu-id="81f1a-129">В частности `StaticResource` , является расширением разметки, которое <xref:System.Xaml.IAmbientProvider.GetAllAmbientValues%2A>вызывает.</span><span class="sxs-lookup"><span data-stu-id="81f1a-129">Specifically, `StaticResource` is a markup extension, which calls <xref:System.Xaml.IAmbientProvider.GetAllAmbientValues%2A>.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xaml.AmbientPropertyValue" />
  </Docs>
  <Members>
    <MemberGroup MemberName="GetAllAmbientValues">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="81f1a-130">Возвращает перечислимый набор информационных элементов внешнего типа или свойства для запрошенной области.</span><span class="sxs-lookup"><span data-stu-id="81f1a-130">Returns an enumerable set of ambient type or property information items for the requested scope.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetAllAmbientValues">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;object&gt; GetAllAmbientValues (params System.Xaml.XamlType[] types);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;object&gt; GetAllAmbientValues(class System.Xaml.XamlType[] types) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.IAmbientProvider.GetAllAmbientValues(System.Xaml.XamlType[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAllAmbientValues (ParamArray types As XamlType()) As IEnumerable(Of Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::Object ^&gt; ^ GetAllAmbientValues(... cli::array &lt;System::Xaml::XamlType ^&gt; ^ types);" />
      <MemberSignature Language="F#" Value="abstract member GetAllAmbientValues : System.Xaml.XamlType[] -&gt; seq&lt;obj&gt;" Usage="iAmbientProvider.GetAllAmbientValues types" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="types" Type="System.Xaml.XamlType[]">
          <Attributes>
            <Attribute FrameworkAlternate="netcore-3.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="types"><span data-ttu-id="81f1a-131">Набор типов, из которого извлекаются сведения о внешних типах.</span><span class="sxs-lookup"><span data-stu-id="81f1a-131">The set of types from which to retrieve ambient type information.</span></span></param>
        <summary><span data-ttu-id="81f1a-132">Возвращает перечислимый набор экземпляров объектов возможных внешних типов для запрошенных типов.</span><span class="sxs-lookup"><span data-stu-id="81f1a-132">Returns an enumerable set of object instances of possible ambient types for the requested types.</span></span></summary>
        <returns><span data-ttu-id="81f1a-133">Перечисляемый набор объектов, представляющих значения для запрошенного набора идентификаторов <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="81f1a-133">An enumerable set of objects that represent the values for the requested set of <see cref="T:System.Xaml.XamlType" /> identifiers.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllAmbientValues">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Xaml.AmbientPropertyValue&gt; GetAllAmbientValues (System.Collections.Generic.IEnumerable&lt;System.Xaml.XamlType&gt; ceilingTypes, params System.Xaml.XamlMember[] properties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Xaml.AmbientPropertyValue&gt; GetAllAmbientValues(class System.Collections.Generic.IEnumerable`1&lt;class System.Xaml.XamlType&gt; ceilingTypes, class System.Xaml.XamlMember[] properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.IAmbientProvider.GetAllAmbientValues(System.Collections.Generic.IEnumerable{System.Xaml.XamlType},System.Xaml.XamlMember[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAllAmbientValues (ceilingTypes As IEnumerable(Of XamlType), ParamArray properties As XamlMember()) As IEnumerable(Of AmbientPropertyValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::Xaml::AmbientPropertyValue ^&gt; ^ GetAllAmbientValues(System::Collections::Generic::IEnumerable&lt;System::Xaml::XamlType ^&gt; ^ ceilingTypes, ... cli::array &lt;System::Xaml::XamlMember ^&gt; ^ properties);" />
      <MemberSignature Language="F#" Value="abstract member GetAllAmbientValues : seq&lt;System.Xaml.XamlType&gt; * System.Xaml.XamlMember[] -&gt; seq&lt;System.Xaml.AmbientPropertyValue&gt;" Usage="iAmbientProvider.GetAllAmbientValues (ceilingTypes, properties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Xaml.AmbientPropertyValue&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ceilingTypes" Type="System.Collections.Generic.IEnumerable&lt;System.Xaml.XamlType&gt;" />
        <Parameter Name="properties" Type="System.Xaml.XamlMember[]">
          <Attributes>
            <Attribute FrameworkAlternate="netcore-3.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="ceilingTypes"><span data-ttu-id="81f1a-134">Задает один или несколько типов, на которых должна останавливаться обработка, когда эти типы встречаются при перемещении вверх по графу объектов.</span><span class="sxs-lookup"><span data-stu-id="81f1a-134">Specifies one or more types that should stop the evaluation when they are encountered traversing upward in the object graph.</span></span> <span data-ttu-id="81f1a-135">Эти типы содержат требуемое внешнее свойство.</span><span class="sxs-lookup"><span data-stu-id="81f1a-135">This type holds the desired ambient property.</span></span> <span data-ttu-id="81f1a-136">Может иметь значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="81f1a-136">May be <see langword="null" />.</span></span></param>
        <param name="properties"><span data-ttu-id="81f1a-137">Задает один или несколько объектов идентификатора свойств, которые определяют свойства как внешние.</span><span class="sxs-lookup"><span data-stu-id="81f1a-137">Specifies one or more property identifier objects that identify the properties to be considered ambient.</span></span></param>
        <summary><span data-ttu-id="81f1a-138">Возвращает перечислимый набор информационных элементов внешнего свойства для запрошенного набора свойств.</span><span class="sxs-lookup"><span data-stu-id="81f1a-138">Returns an enumerable set of ambient property information items for the requested set of properties.</span></span></summary>
        <returns><span data-ttu-id="81f1a-139">Перечисляемый набор элементов сведений о внешних свойствах для запрошенного набора свойств.</span><span class="sxs-lookup"><span data-stu-id="81f1a-139">An enumerable set of ambient property information items for the requested set of properties.</span></span> <span data-ttu-id="81f1a-140">Сведения о свойстве для каждого возвращенного объекта <see cref="T:System.Xaml.AmbientPropertyValue" /> будут соответствовать одному из входных свойств <paramref name="properties" />.</span><span class="sxs-lookup"><span data-stu-id="81f1a-140">The property information for each <see cref="T:System.Xaml.AmbientPropertyValue" /> that is returned will match one of the input <paramref name="properties" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81f1a-141">Каждый <xref:System.Xaml.AmbientPropertyValue> возвращаемый объект <xref:System.Xaml.XamlMember> содержит идентификатор и значение свойства.</span><span class="sxs-lookup"><span data-stu-id="81f1a-141">Each <xref:System.Xaml.AmbientPropertyValue> that is returned contains the <xref:System.Xaml.XamlMember> identifier and a property value.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllAmbientValues">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Xaml.AmbientPropertyValue&gt; GetAllAmbientValues (System.Collections.Generic.IEnumerable&lt;System.Xaml.XamlType&gt; ceilingTypes, bool searchLiveStackOnly, System.Collections.Generic.IEnumerable&lt;System.Xaml.XamlType&gt; types, params System.Xaml.XamlMember[] properties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Xaml.AmbientPropertyValue&gt; GetAllAmbientValues(class System.Collections.Generic.IEnumerable`1&lt;class System.Xaml.XamlType&gt; ceilingTypes, bool searchLiveStackOnly, class System.Collections.Generic.IEnumerable`1&lt;class System.Xaml.XamlType&gt; types, class System.Xaml.XamlMember[] properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.IAmbientProvider.GetAllAmbientValues(System.Collections.Generic.IEnumerable{System.Xaml.XamlType},System.Boolean,System.Collections.Generic.IEnumerable{System.Xaml.XamlType},System.Xaml.XamlMember[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAllAmbientValues (ceilingTypes As IEnumerable(Of XamlType), searchLiveStackOnly As Boolean, types As IEnumerable(Of XamlType), ParamArray properties As XamlMember()) As IEnumerable(Of AmbientPropertyValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::Xaml::AmbientPropertyValue ^&gt; ^ GetAllAmbientValues(System::Collections::Generic::IEnumerable&lt;System::Xaml::XamlType ^&gt; ^ ceilingTypes, bool searchLiveStackOnly, System::Collections::Generic::IEnumerable&lt;System::Xaml::XamlType ^&gt; ^ types, ... cli::array &lt;System::Xaml::XamlMember ^&gt; ^ properties);" />
      <MemberSignature Language="F#" Value="abstract member GetAllAmbientValues : seq&lt;System.Xaml.XamlType&gt; * bool * seq&lt;System.Xaml.XamlType&gt; * System.Xaml.XamlMember[] -&gt; seq&lt;System.Xaml.AmbientPropertyValue&gt;" Usage="iAmbientProvider.GetAllAmbientValues (ceilingTypes, searchLiveStackOnly, types, properties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Xaml.AmbientPropertyValue&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ceilingTypes" Type="System.Collections.Generic.IEnumerable&lt;System.Xaml.XamlType&gt;" />
        <Parameter Name="searchLiveStackOnly" Type="System.Boolean" />
        <Parameter Name="types" Type="System.Collections.Generic.IEnumerable&lt;System.Xaml.XamlType&gt;" />
        <Parameter Name="properties" Type="System.Xaml.XamlMember[]">
          <Attributes>
            <Attribute FrameworkAlternate="netcore-3.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="ceilingTypes"><span data-ttu-id="81f1a-142">Задает один или несколько типов, на которых должна останавливаться обработка, когда эти типы встречаются при перемещении вверх по графу объектов.</span><span class="sxs-lookup"><span data-stu-id="81f1a-142">Specifies one or more types that should stop the evaluation when they are encountered traversing upward in the object graph.</span></span> <span data-ttu-id="81f1a-143">Эти типы содержат требуемое внешнее свойство.</span><span class="sxs-lookup"><span data-stu-id="81f1a-143">This type holds the desired ambient property.</span></span> <span data-ttu-id="81f1a-144">Может иметь значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="81f1a-144">May be <see langword="null" />.</span></span></param>
        <param name="searchLiveStackOnly"><span data-ttu-id="81f1a-145">Значение <see langword="true" />, чтобы не использовать сохраненный контекст; значение <see langword="false" />, чтобы использовать сохраненный контекст.</span><span class="sxs-lookup"><span data-stu-id="81f1a-145"><see langword="true" /> to not use a saved context; <see langword="false" /> to use a saved context.</span></span> <span data-ttu-id="81f1a-146">Значение по умолчанию — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="81f1a-146">The default is <see langword="false" />.</span></span></param>
        <param name="types"><span data-ttu-id="81f1a-147">Указывает один или несколько объектов идентификатора типа, которые определяют типы как внешние.</span><span class="sxs-lookup"><span data-stu-id="81f1a-147">Specifies one or more type identifier objects that identify the types to be considered ambient.</span></span></param>
        <param name="properties"><span data-ttu-id="81f1a-148">Задает один или несколько объектов идентификатора свойств, которые определяют свойства как внешние.</span><span class="sxs-lookup"><span data-stu-id="81f1a-148">Specifies one or more property identifier objects that identify the properties to be considered ambient.</span></span></param>
        <summary><span data-ttu-id="81f1a-149">Возвращает перечислимый набор информационных элементов внешнего свойства для запрошенного набора типов и свойств.</span><span class="sxs-lookup"><span data-stu-id="81f1a-149">Returns an enumerable set of ambient property information items for the requested set of types and properties.</span></span></summary>
        <returns><span data-ttu-id="81f1a-150">Перечислимый набор информационных элементов внешнего свойства для запрошенного набора типов и свойств.</span><span class="sxs-lookup"><span data-stu-id="81f1a-150">An enumerable set of ambient property information items for the requested set of types and properties.</span></span> <span data-ttu-id="81f1a-151">Сведения о свойстве для каждого возвращенного объекта <see cref="T:System.Xaml.AmbientPropertyValue" /> будут соответствовать одному из типов (<paramref name="types" />) или свойств (<paramref name="properties" />).</span><span class="sxs-lookup"><span data-stu-id="81f1a-151">The property information for each <see cref="T:System.Xaml.AmbientPropertyValue" /> that is returned will match one of the input <paramref name="types" /> or <paramref name="properties" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81f1a-152">Каждый <xref:System.Xaml.AmbientPropertyValue> возвращаемый объект <xref:System.Xaml.XamlMember> содержит идентификатор и значение свойства.</span><span class="sxs-lookup"><span data-stu-id="81f1a-152">Each <xref:System.Xaml.AmbientPropertyValue> that is returned contains the <xref:System.Xaml.XamlMember> identifier and a property value.</span></span>  
  
 <span data-ttu-id="81f1a-153">Эта конкретная <xref:System.Xaml.IAmbientProvider.GetAllAmbientValues%2A> перегрузка может искать внешние типы и внешние свойства в том же проходе через дерево.</span><span class="sxs-lookup"><span data-stu-id="81f1a-153">This particular <xref:System.Xaml.IAmbientProvider.GetAllAmbientValues%2A> overload can search for ambient types and ambient properties in the same pass through a tree.</span></span> <span data-ttu-id="81f1a-154">Использование этой перегрузки приводит к упорядочению элементов в возвращаемом значении, которые <xref:System.Xaml.IAmbientProvider.GetAllAmbientValues%28System.Collections.Generic.IEnumerable%7BSystem.Xaml.XamlType%7D%2CSystem.Xaml.XamlMember%5B%5D%29> отличаются <xref:System.Xaml.IAmbientProvider.GetAllAmbientValues%28System.Xaml.XamlType%5B%5D%29>от или.</span><span class="sxs-lookup"><span data-stu-id="81f1a-154">Using this overload results in an ordering of items in the return value that is different from <xref:System.Xaml.IAmbientProvider.GetAllAmbientValues%28System.Collections.Generic.IEnumerable%7BSystem.Xaml.XamlType%7D%2CSystem.Xaml.XamlMember%5B%5D%29> or <xref:System.Xaml.IAmbientProvider.GetAllAmbientValues%28System.Xaml.XamlType%5B%5D%29>.</span></span>  
  
 <span data-ttu-id="81f1a-155">Эта перегрузка также позволяет поиску не использовать сохраненный контекст.</span><span class="sxs-lookup"><span data-stu-id="81f1a-155">This overload also permits the search to not use any saved context.</span></span> <span data-ttu-id="81f1a-156">Перегрузки <xref:System.Xaml.IAmbientProvider.GetAllAmbientValues%28System.Xaml.XamlType%5B%5D%29> `searchLiveStackOnly` или неявно используют сохраненный контекст, если он доступен (они всегда действуют как неявный параметр `false`). <xref:System.Xaml.IAmbientProvider.GetAllAmbientValues%28System.Collections.Generic.IEnumerable%7BSystem.Xaml.XamlType%7D%2CSystem.Xaml.XamlMember%5B%5D%29></span><span class="sxs-lookup"><span data-stu-id="81f1a-156">The <xref:System.Xaml.IAmbientProvider.GetAllAmbientValues%28System.Collections.Generic.IEnumerable%7BSystem.Xaml.XamlType%7D%2CSystem.Xaml.XamlMember%5B%5D%29> or <xref:System.Xaml.IAmbientProvider.GetAllAmbientValues%28System.Xaml.XamlType%5B%5D%29> overloads implicitly use a saved context if it is available (they always act as if an implicit `searchLiveStackOnly` parameter is `false`).</span></span> <span data-ttu-id="81f1a-157">Понятие сохраненного контекста может обрабатываться по-разному с помощью определенных контекстов схемы XAML или платформ, включающих XAML.</span><span class="sxs-lookup"><span data-stu-id="81f1a-157">The concept of a saved context is potentially handled differently by particular XAML schema contexts, or by frameworks that incorporate XAML.</span></span> <span data-ttu-id="81f1a-158">В реализации XAML в WPF сохраненные контексты используются для расширения шаблона, а также для других функциональных областей.</span><span class="sxs-lookup"><span data-stu-id="81f1a-158">In the WPF XAML implementation, saved contexts are used for template expansion, as well as other feature areas.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetFirstAmbientValue">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="81f1a-159">Возвращает один информационный элемент внешнего типа или свойства из запрошенного набора на основе того, какое из таких свойств встретилось первым.</span><span class="sxs-lookup"><span data-stu-id="81f1a-159">Returns a single ambient type or property information item from the requested set, based on which property is first encountered.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetFirstAmbientValue">
      <MemberSignature Language="C#" Value="public object GetFirstAmbientValue (params System.Xaml.XamlType[] types);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetFirstAmbientValue(class System.Xaml.XamlType[] types) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.IAmbientProvider.GetFirstAmbientValue(System.Xaml.XamlType[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFirstAmbientValue (ParamArray types As XamlType()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetFirstAmbientValue(... cli::array &lt;System::Xaml::XamlType ^&gt; ^ types);" />
      <MemberSignature Language="F#" Value="abstract member GetFirstAmbientValue : System.Xaml.XamlType[] -&gt; obj" Usage="iAmbientProvider.GetFirstAmbientValue types" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="types" Type="System.Xaml.XamlType[]">
          <Attributes>
            <Attribute FrameworkAlternate="netcore-3.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="types"><span data-ttu-id="81f1a-160">Набор типов, из которого извлекаются сведения о внешних типах.</span><span class="sxs-lookup"><span data-stu-id="81f1a-160">The set of types from which to retrieve ambient type information.</span></span></param>
        <summary><span data-ttu-id="81f1a-161">Возвращает первый соответствующий объект, являющийся возможным внешним типом для запрошенных типов.</span><span class="sxs-lookup"><span data-stu-id="81f1a-161">Returns the first matching object that is a possible ambient type for the requested types.</span></span></summary>
        <returns><span data-ttu-id="81f1a-162">Первый результирующий объект для запрошенного набора.</span><span class="sxs-lookup"><span data-stu-id="81f1a-162">The first result object for the requested set.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFirstAmbientValue">
      <MemberSignature Language="C#" Value="public System.Xaml.AmbientPropertyValue GetFirstAmbientValue (System.Collections.Generic.IEnumerable&lt;System.Xaml.XamlType&gt; ceilingTypes, params System.Xaml.XamlMember[] properties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xaml.AmbientPropertyValue GetFirstAmbientValue(class System.Collections.Generic.IEnumerable`1&lt;class System.Xaml.XamlType&gt; ceilingTypes, class System.Xaml.XamlMember[] properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.IAmbientProvider.GetFirstAmbientValue(System.Collections.Generic.IEnumerable{System.Xaml.XamlType},System.Xaml.XamlMember[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFirstAmbientValue (ceilingTypes As IEnumerable(Of XamlType), ParamArray properties As XamlMember()) As AmbientPropertyValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xaml::AmbientPropertyValue ^ GetFirstAmbientValue(System::Collections::Generic::IEnumerable&lt;System::Xaml::XamlType ^&gt; ^ ceilingTypes, ... cli::array &lt;System::Xaml::XamlMember ^&gt; ^ properties);" />
      <MemberSignature Language="F#" Value="abstract member GetFirstAmbientValue : seq&lt;System.Xaml.XamlType&gt; * System.Xaml.XamlMember[] -&gt; System.Xaml.AmbientPropertyValue" Usage="iAmbientProvider.GetFirstAmbientValue (ceilingTypes, properties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.AmbientPropertyValue</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ceilingTypes" Type="System.Collections.Generic.IEnumerable&lt;System.Xaml.XamlType&gt;" />
        <Parameter Name="properties" Type="System.Xaml.XamlMember[]">
          <Attributes>
            <Attribute FrameworkAlternate="netcore-3.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="ceilingTypes"><span data-ttu-id="81f1a-163">Задает один или несколько типов, на которых должна останавливаться обработка, когда эти типы встречаются при перемещении вверх по графу объектов.</span><span class="sxs-lookup"><span data-stu-id="81f1a-163">Specifies one or more types that should stop the evaluation when they are encountered traversing upward in the object graph.</span></span> <span data-ttu-id="81f1a-164">Эти типы содержат требуемое внешнее свойство.</span><span class="sxs-lookup"><span data-stu-id="81f1a-164">This type holds the desired ambient property.</span></span></param>
        <param name="properties"><span data-ttu-id="81f1a-165">Задает один или несколько объектов, идентифицирующих свойства, которые должны рассматриваться как внешние.</span><span class="sxs-lookup"><span data-stu-id="81f1a-165">Specifies one or more objects that identify the properties to be considered ambient.</span></span></param>
        <summary><span data-ttu-id="81f1a-166">Возвращает один информационный элемент внешнего типа или свойства из запрошенного набора свойств на основе того, какое из свойств встретилось первым.</span><span class="sxs-lookup"><span data-stu-id="81f1a-166">Returns a single ambient property information item from the requested set of properties, based on which property is first encountered.</span></span></summary>
        <returns><span data-ttu-id="81f1a-167">Один элемент сведений о внешних свойствах для первого значения внешнего свойства, найденного в списке <paramref name="properties" />.</span><span class="sxs-lookup"><span data-stu-id="81f1a-167">A single ambient property information item for the first ambient property value from the <paramref name="properties" /> list that is found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81f1a-168">Каждый <xref:System.Xaml.AmbientPropertyValue> возвращаемый объект <xref:System.Xaml.XamlMember> содержит идентификатор и значение свойства.</span><span class="sxs-lookup"><span data-stu-id="81f1a-168">Each <xref:System.Xaml.AmbientPropertyValue> that is returned contains the <xref:System.Xaml.XamlMember> identifier and a property value.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
