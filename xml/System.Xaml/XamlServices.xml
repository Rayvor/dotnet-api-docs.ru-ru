<Type Name="XamlServices" FullName="System.Xaml.XamlServices">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e824de90c70a2b73633faa66d220aee6ddc6969e" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70536805" /></Metadata><TypeSignature Language="C#" Value="public static class XamlServices" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit XamlServices extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.XamlServices" />
  <TypeSignature Language="VB.NET" Value="Public Class XamlServices" />
  <TypeSignature Language="C++ CLI" Value="public ref class XamlServices abstract sealed" />
  <TypeSignature Language="F#" Value="type XamlServices = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Предоставляет службы высокого уровня (статические методы) для распространенных при работе с XAML задач чтения XAML и записи графа объектов или чтения графа объектов и записи выходного файла XAML для целей сериализации.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Режимы <xref:System.Xaml.XamlServices> класса, используемые в наиболее распространенных сценариях чтения и записи XAML, полагаются на создание экземпляров средств чтения и записи XAML. Эти средства чтения и записи являются специализированными, но внутренними реализациями открытых классов <xref:System.Xml.XmlReader>, <xref:System.Xaml.XamlXmlReader>таких как <xref:System.Xaml.XamlObjectWriter>, и. Для использования <xref:System.Xaml.XamlServices> в большинстве сценариев можно использовать внутренние реализации по умолчанию для получения нужных результатов. Для более специализированных сценариев вы можете самостоятельно определять читатели и модули записи, а затем передавать их в качестве аргументов перегрузок <xref:System.Xaml.XamlServices> методов.  
  
> [!IMPORTANT]
>  <xref:System.Xaml.XamlServices>не является рекомендуемым набором API для чтения или записи XAML при обработке типов, определенных WPF, или типов, основанных на WPF. Для [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] использования используйте <xref:System.Windows.Markup.XamlReader?displayProperty=nameWithType> для чтения или загрузки XAML (или BAML), а <xref:System.Windows.Markup.XamlWriter?displayProperty=nameWithType> также для записи обратного XAML. Эти классы используют .NET Framework API-интерфейсы служб XAML, а также средства чтения и записи XAML для внутренних целей в их реализации. Однако они также предоставляют поддержку и специализированный контекст схемы XAML для конкретных концепций WPF, таких как оптимизация для свойств зависимостей и известных типов WPF.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="Load">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Загружает источник для средства чтения XAML и записывает его вывод в виде графа объекта.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public static object Load (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object Load(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlServices.Load(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ Load(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="static member Load : System.IO.Stream -&gt; obj" Usage="System.Xaml.XamlServices.Load stream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">Поток, загружаемый как входные данные.</param>
        <summary>Загружает источник <see cref="T:System.IO.Stream" /> для средства чтения XAML и записывает его вывод в виде графа объекта.</summary>
        <returns>Граф объекта, который записывается как вывод.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Разные сигнатуры для <xref:System.Xaml.XamlServices.Load%28System.IO.Stream%29> метода указывают различные типы входных данных для исходного XAML. Внутренняя реализация сначала <xref:System.Xml.XmlReader> создает с помощью вызова, <xref:System.Xml.XmlReader.Create%28System.IO.Stream%29> а затем создает новый экземпляр специализированной <xref:System.Xaml.XamlReader> функции, обрабатывающей входные данные. <xref:System.Xaml.XamlServices.Load%28System.IO.Stream%29>  
  
 <xref:System.Xaml.XamlServices.Load%28System.IO.Stream%29> Чтобы вызов успешно создал граф объекта, должны выполняться следующие условия:  
  
-   Источник имеет правильный формат и является допустимым XML.  
  
-   Источник является допустимым XAML на уровне языка.  
  
-   Типы XAML, указанные в исходном коде XAML, должны разрешаться в резервные типы в соответствующих пространствах имен XAML. Например, типы XAML для пространств имен WPF могут разрешаться в пространство имен XAML WPF, как указано в XAML. сборки для WPF должны быть добавлены в проект или доступны во время выполнения. и т. д.  
  
> [!IMPORTANT]
>  <xref:System.Xaml.XamlServices>не является рекомендуемым набором API для чтения или записи XAML при обработке [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] типов или типов, основанных на. [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] Для [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] использования используйте <xref:System.Windows.Markup.XamlReader?displayProperty=nameWithType> для чтения или загрузки XAML, а также <xref:System.Windows.Markup.XamlWriter?displayProperty=nameWithType> для записи обратного XAML. Эти классы используют <xref:System.Xaml> API внутри своей реализации, однако они также предоставляют поддержку для специфических концепций WPF, которые влияют на характер чтения и записи XAML, например оптимизацию для свойств зависимостей.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="stream" /> — <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public static object Load (System.IO.TextReader textReader);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object Load(class System.IO.TextReader textReader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlServices.Load(System.IO.TextReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ Load(System::IO::TextReader ^ textReader);" />
      <MemberSignature Language="F#" Value="static member Load : System.IO.TextReader -&gt; obj" Usage="System.Xaml.XamlServices.Load textReader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textReader" Type="System.IO.TextReader" />
      </Parameters>
      <Docs>
        <param name="textReader">Объект <see cref="T:System.IO.TextReader" /> для использования в качестве основы для созданного <see cref="T:System.Xml.XmlReader" />.</param>
        <summary>Создает средство чтения XAML на основе <see cref="T:System.IO.TextReader" /> и возвращает граф объекта.</summary>
        <returns>Возвращаемый граф объекта.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Чтобы вернуть граф объекта, `textReader` входные данные должны быть созданы с использованием соответствующих входных данных. Например, он должен передавать объект <xref:System.IO.StringReader> , созданный с помощью допустимого типа данных XAML в виде строки <xref:System.IO.StringReader.%23ctor%28System.String%29> для конструктора.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="textReader" /> имеет значение <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public static object Load (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object Load(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlServices.Load(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Load (fileName As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ Load(System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="static member Load : string -&gt; obj" Usage="System.Xaml.XamlServices.Load fileName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName">Имя файла для загрузки и использования в качестве источника.</param>
        <summary>Загружает источник <see cref="T:System.IO.Stream" /> для средства чтения XAML и возвращает граф объекта.</summary>
        <returns>Возвращаемый граф объекта.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Разные сигнатуры для <xref:System.Xaml.XamlServices.Load%2A> метода указывают различные типы входных данных для исходного XAML. Внутренняя реализация сначала <xref:System.Xml.XmlReader> создает с помощью вызова, <xref:System.Xml.XmlReader.Create%28System.String%29> а затем создает новый экземпляр специализированной <xref:System.Xaml.XamlReader> функции, обрабатывающей входные данные. <xref:System.Xaml.XamlServices.Load%2A>  
  
 <xref:System.Xaml.XamlServices.Load%28System.String%29> Чтобы вызов успешно создал граф объекта, должны выполняться следующие условия:  
  
-   Источник имеет правильный формат и является допустимым XML.  
  
-   Источник является допустимым XAML на уровне языка.  
  
-   Типы XAML, указанные в исходном коде XAML, должны разрешаться в резервные типы в соответствующих пространствах имен XAML. Например, типы XAML для пространств имен WPF могут разрешаться в пространство имен XAML WPF, как указано в XAML. сборки для WPF должны включаться в проект или быть доступны во время выполнения; и т. д.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Входное значение <paramref name="fileName" /> равно <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public static object Load (System.Xaml.XamlReader xamlReader);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object Load(class System.Xaml.XamlReader xamlReader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlServices.Load(System.Xaml.XamlReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ Load(System::Xaml::XamlReader ^ xamlReader);" />
      <MemberSignature Language="F#" Value="static member Load : System.Xaml.XamlReader -&gt; obj" Usage="System.Xaml.XamlServices.Load xamlReader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xamlReader" Type="System.Xaml.XamlReader" />
      </Parameters>
      <Docs>
        <param name="xamlReader">Реализация средства чтения XAML, которую следует использовать в качестве средства чтения для этой операции <see langword="Load" />.</param>
        <summary>Загружает конкретную реализацию средства чтения XAML и возвращает граф объектов.</summary>
        <returns>Возвращаемый граф объекта.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Эту сигнатуру обычно следует использовать только в следующих случаях:  
  
-   Вы определили собственную реализацию <xref:System.Xaml.XamlReader>.  
  
-   Указанные параметры для <xref:System.Xaml.XamlReader> отличаются от параметров по умолчанию.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Входное значение <paramref name="xamlReader" /> равно <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public static object Load (System.Xml.XmlReader xmlReader);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object Load(class System.Xml.XmlReader xmlReader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlServices.Load(System.Xml.XmlReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ Load(System::Xml::XmlReader ^ xmlReader);" />
      <MemberSignature Language="F#" Value="static member Load : System.Xml.XmlReader -&gt; obj" Usage="System.Xaml.XamlServices.Load xmlReader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xmlReader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="xmlReader">Реализация объекта <see cref="T:System.Xml.XmlReader" />, которую следует использовать в качестве средства чтения для этой операции <see langword="Load" />.</param>
        <summary>Загружает конкретную реализацию средства чтения XML и возвращает граф объектов.</summary>
        <returns>Выходной граф объектов.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Эту сигнатуру обычно следует использовать, только если определена собственная реализация <xref:System.Xml.XmlReader>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Входное значение <paramref name="xamlReader" /> равно <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static object Parse (string xaml);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object Parse(string xaml) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlServices.Parse(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (xaml As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ Parse(System::String ^ xaml);" />
      <MemberSignature Language="F#" Value="static member Parse : string -&gt; obj" Usage="System.Xaml.XamlServices.Parse xaml" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xaml" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xaml">Строка XAML, вводимая для синтаксического анализа.</param>
        <summary>Считывает XAML в виде строковых выходных данных и возвращает граф объектов.</summary>
        <returns>Возвращаемый граф объекта.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xaml.XamlServices.Parse%2A> Чтобы вызов успешно создал дерево объектов, должны выполняться следующие условия.  
  
-   `xaml` Входные данные имеют правильный формат и допустимый XML.  
  
-   `xaml` Входные данные являются допустимым XAML на уровне языка.  
  
-   Типы XAML, указанные во `xaml` входных данных, должны разрешаться в резервные типы в соответствующих пространствах имен XAML. Например, типы XAML для пространства имен WPF могут разрешаться в пространство имен XAML WPF, как указано в XAML. сборки для WPF должны включаться в проект или быть доступны во время выполнения; и т. д.  
  
> [!IMPORTANT]
>  <xref:System.Xaml.XamlServices>не является рекомендуемым набором API для чтения или записи XAML при обработке [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] типов или типов, основанных на. [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] Для [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] использования используйте <xref:System.Windows.Markup.XamlReader?displayProperty=nameWithType> для чтения или загрузки XAML, а также <xref:System.Windows.Markup.XamlWriter?displayProperty=nameWithType> для записи обратного XAML. Эти классы используют <xref:System.Xaml> API внутри своей реализации, однако они также предоставляют поддержку для специфических концепций WPF, которые влияют на характер чтения и записи XAML, например оптимизацию для свойств зависимостей.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Входное значение <paramref name="xaml" /> равно <see langword="null" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Save">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Преобразует предоставленный граф объектов в представление узлов XAML, а затем в выходной формат для сериализации.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public static string Save (object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Save(object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlServices.Save(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Save (instance As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Save(System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="static member Save : obj -&gt; string" Usage="System.Xaml.XamlServices.Save instance" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance">Корень обрабатываемого графа объектов.</param>
        <summary>Преобразует предоставленное дерево объектов в представление узлов XAML и возвращает строковое представление выходного кода XAML.</summary>
        <returns>Разметка XAML, выводимая в виде строки.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Выходные данные этого метода являются `ToString` результатом <xref:System.Xml.XmlWriter> , который создается вызовом метода. `true` <xref:System.Xml.XmlWriterSettings.OmitXmlDeclaration%2A?displayProperty=nameWithType> `true`Создается с использованием следующих параметров: <xref:System.Xml.XmlWriterSettings.Indent%2A?displayProperty=nameWithType> имеет значение; и имеет значение. <xref:System.Xml.XmlWriter>  
  
 Возвращаемая строка может быть загружена в виде допустимого <xref:System.Xml.XmlReader.Create%2A> XML-кода с помощью метода, если строка была обработана в потоке или в модуле чтения, специально выделенном для XAML.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public static void Save (System.IO.Stream stream, object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Save(class System.IO.Stream stream, object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlServices.Save(System.IO.Stream,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Save(System::IO::Stream ^ stream, System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="static member Save : System.IO.Stream * obj -&gt; unit" Usage="System.Xaml.XamlServices.Save (stream, instance)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="stream">Конечный поток.</param>
        <param name="instance">Корень обрабатываемого графа объектов.</param>
        <summary>Преобразует предоставленный граф объектов в представление узлов XAML, а затем в выходной поток для сериализации.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <xref:System.Xaml.XamlServices>не является рекомендуемым набором API для чтения или записи XAML при обработке [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] типов или типов, основанных на. [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] Для [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] использования используйте <xref:System.Windows.Markup.XamlReader?displayProperty=nameWithType> для чтения или загрузки XAML, а также <xref:System.Windows.Markup.XamlWriter?displayProperty=nameWithType> для записи обратного XAML. Эти классы используют <xref:System.Xaml> API внутри своей реализации, однако они также предоставляют поддержку для специфических концепций WPF, которые влияют на характер чтения и записи XAML, например оптимизацию для свойств зависимостей.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Входное значение <paramref name="stream" /> равно <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public static void Save (System.IO.TextWriter writer, object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Save(class System.IO.TextWriter writer, object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlServices.Save(System.IO.TextWriter,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Save (writer As TextWriter, instance As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Save(System::IO::TextWriter ^ writer, System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="static member Save : System.IO.TextWriter * obj -&gt; unit" Usage="System.Xaml.XamlServices.Save (writer, instance)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="writer">Объект <see cref="T:System.IO.TextWriter" />, записывающий выходные данные.</param>
        <param name="instance">Корень обрабатываемого графа объектов.</param>
        <summary>Преобразует предоставленный граф объектов в представление узлов XAML, а затем в выходные данные, передаваемые предоставленному объекту <see cref="T:System.IO.TextWriter" />.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Входное значение <paramref name="writer" /> равно <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public static void Save (string fileName, object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Save(string fileName, object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlServices.Save(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Save (fileName As String, instance As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Save(System::String ^ fileName, System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="static member Save : string * obj -&gt; unit" Usage="System.Xaml.XamlServices.Save (fileName, instance)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="fileName">Имя и расположение файла, в который записываются выходные данные.</param>
        <param name="instance">Корень обрабатываемого графа объектов.</param>
        <summary>Преобразует предоставленный граф объектов в представление узлов XAML, а затем записывает его в выходной файл в указанном расположении.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Значение параметра используется в `outputFileName` качестве <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType>входных данных для вызова, который создает <xref:System.Xml.XmlWriter> как часть вызова метода. `fileName`  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Параметр <paramref name="fileName" /> равен пустой строке.</exception>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="fileName" /> имеет значение <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public static void Save (System.Xaml.XamlWriter writer, object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Save(class System.Xaml.XamlWriter writer, object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlServices.Save(System.Xaml.XamlWriter,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Save (writer As XamlWriter, instance As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Save(System::Xaml::XamlWriter ^ writer, System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="static member Save : System.Xaml.XamlWriter * obj -&gt; unit" Usage="System.Xaml.XamlServices.Save (writer, instance)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xaml.XamlWriter" />
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="writer">Используемая реализация объекта <see cref="T:System.Xaml.XamlWriter" />.</param>
        <param name="instance">Корень обрабатываемого графа объектов.</param>
        <summary>Преобразует предоставленный граф объектов в представление узлов XAML, а затем записывает его в предоставленное средство записи XAML.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Эту сигнатуру обычно следует использовать только в следующих случаях:  
  
-   Вы определили собственную реализацию <xref:System.Xaml.XamlWriter>.  
  
-   Указанные параметры для <xref:System.Xaml.XamlWriter> отличаются от параметров по умолчанию.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Входное значение <paramref name="writer" /> равно <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public static void Save (System.Xml.XmlWriter writer, object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Save(class System.Xml.XmlWriter writer, object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlServices.Save(System.Xml.XmlWriter,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Save (writer As XmlWriter, instance As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Save(System::Xml::XmlWriter ^ writer, System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="static member Save : System.Xml.XmlWriter * obj -&gt; unit" Usage="System.Xaml.XamlServices.Save (writer, instance)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="writer">Используемая реализация объекта <see cref="T:System.Xml.XmlWriter" />.</param>
        <param name="instance">Корень обрабатываемого графа объектов.</param>
        <summary>Преобразует предоставленный граф объектов в представление узлов XAML, а затем записывает его в предоставленный объект <see cref="T:System.Xml.XmlWriter" />.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Входное значение <paramref name="writer" /> равно <see langword="null" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Transform">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Связывает объект <see cref="T:System.Xaml.XamlReader" /> с объектом <see cref="T:System.Xaml.XamlWriter" /> для использования общего промежуточного узла XAML. Может преобразовывать содержимое в зависимости от типов предоставленных средств чтения и средств записи.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public static void Transform (System.Xaml.XamlReader xamlReader, System.Xaml.XamlWriter xamlWriter);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Transform(class System.Xaml.XamlReader xamlReader, class System.Xaml.XamlWriter xamlWriter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlServices.Transform(System.Xaml.XamlReader,System.Xaml.XamlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Transform(System::Xaml::XamlReader ^ xamlReader, System::Xaml::XamlWriter ^ xamlWriter);" />
      <MemberSignature Language="F#" Value="static member Transform : System.Xaml.XamlReader * System.Xaml.XamlWriter -&gt; unit" Usage="System.Xaml.XamlServices.Transform (xamlReader, xamlWriter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xamlReader" Type="System.Xaml.XamlReader" />
        <Parameter Name="xamlWriter" Type="System.Xaml.XamlWriter" />
      </Parameters>
      <Docs>
        <param name="xamlReader">Используемая реализация объекта <see cref="T:System.Xaml.XamlReader" />.</param>
        <param name="xamlWriter">Используемый <see cref="T:System.Xaml.XamlWriter" />.</param>
        <summary>Связывает объект <see cref="T:System.Xaml.XamlReader" /> с объектом <see cref="T:System.Xaml.XamlWriter" /> для использования общего промежуточного узла XAML. Может преобразовывать содержимое в зависимости от типов предоставленных средств чтения и средств записи.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод является оберткой <xref:System.Xaml.XamlServices.Transform%28System.Xaml.XamlReader%2CSystem.Xaml.XamlWriter%2CSystem.Boolean%29>, где `closeWriter` указывается как `true`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Входные данные параметра <paramref name="xamlReader" /> или <paramref name="xamlWriter" /> представляют собой значение <see langword="null" />.</exception>
        <exception cref="T:System.Xaml.XamlException">Контекст схемы XAML не находится между предоставленными <paramref name="xamlReader" /> и <paramref name="xamlWriter" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public static void Transform (System.Xaml.XamlReader xamlReader, System.Xaml.XamlWriter xamlWriter, bool closeWriter);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Transform(class System.Xaml.XamlReader xamlReader, class System.Xaml.XamlWriter xamlWriter, bool closeWriter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlServices.Transform(System.Xaml.XamlReader,System.Xaml.XamlWriter,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Transform(System::Xaml::XamlReader ^ xamlReader, System::Xaml::XamlWriter ^ xamlWriter, bool closeWriter);" />
      <MemberSignature Language="F#" Value="static member Transform : System.Xaml.XamlReader * System.Xaml.XamlWriter * bool -&gt; unit" Usage="System.Xaml.XamlServices.Transform (xamlReader, xamlWriter, closeWriter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xamlReader" Type="System.Xaml.XamlReader" />
        <Parameter Name="xamlWriter" Type="System.Xaml.XamlWriter" />
        <Parameter Name="closeWriter" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="xamlReader">Используемая реализация объекта <see cref="T:System.Xaml.XamlReader" />.</param>
        <param name="xamlWriter">Используемый <see cref="T:System.Xaml.XamlWriter" />.</param>
        <param name="closeWriter">Значение <see langword="true" />, чтобы закрыть средство записи после завершения вызова; значение <see langword="false" />, чтобы после записи последней позиции оставить средство записи открытым.</param>
        <summary>Связывает объект <see cref="T:System.Xaml.XamlReader" /> с объектом <see cref="T:System.Xaml.XamlWriter" /> для использования общего промежуточного узла XAML. Может преобразовывать содержимое в зависимости от типов предоставленных средств чтения и средств записи. Предоставляет параметр для указания, требуется ли после завершения вызова закрывать средство записи.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Входные данные параметра <paramref name="xamlReader" /> или <paramref name="xamlWriter" /> представляют собой значение <see langword="null" />.</exception>
        <exception cref="T:System.Xaml.XamlException">Контекст схемы XAML не находится между предоставленными <paramref name="xamlReader" /> и <paramref name="xamlWriter" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
