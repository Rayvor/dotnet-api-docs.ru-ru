<Type Name="XamlServices" FullName="System.Xaml.XamlServices">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ba985e9e3e80a226d3cb5609368aeaae7bd715d8" /><Meta Name="ms.sourcegitcommit" Value="0528148687f8b0e0a3d0f550431a777fbe5346bc" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="04/25/2019" /><Meta Name="ms.locfileid" Value="64440825" /></Metadata><TypeSignature Language="C#" Value="public static class XamlServices" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit XamlServices extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.XamlServices" />
  <TypeSignature Language="VB.NET" Value="Public Class XamlServices" />
  <TypeSignature Language="C++ CLI" Value="public ref class XamlServices abstract sealed" />
  <TypeSignature Language="F#" Value="type XamlServices = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Предоставляет службы высокого уровня (статические методы) для распространенных при работе с XAML задач чтения XAML и записи графа объектов или чтения графа объектов и записи выходного файла XAML для целей сериализации.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Режимы <xref:System.Xaml.XamlServices> класса, которые используются в наиболее распространенных XAML, чтение и запись сценарии основываются на создание экземпляров средства чтения XAML и записи XAML. Эти средства чтения и записи являются реализациями специализированный, но внутренняя открытых классов, таких как <xref:System.Xml.XmlReader>, <xref:System.Xaml.XamlXmlReader>, и <xref:System.Xaml.XamlObjectWriter>. Чтобы использовать <xref:System.Xaml.XamlServices> для большинства сценариев можно полагаться на внутренние реализации по умолчанию для получения ожидаемого результата. Для более специализированных сценариев может определить модулей чтения и записи самостоятельно и передать их в качестве аргументов для перегрузки <xref:System.Xaml.XamlServices> методы.  
  
> [!IMPORTANT]
>  <xref:System.Xaml.XamlServices> не рекомендуемые чтения XAML или XAML записывает набор при обработке типов WPF API или типы, основанные на WPF. Для [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] использования, используйте <xref:System.Windows.Markup.XamlReader?displayProperty=nameWithType> для чтения или загрузки XAML (или BAML); и <xref:System.Windows.Markup.XamlWriter?displayProperty=nameWithType> для обратной записи XAML. Эти классы используют API-интерфейсы служб XAML .NET Framework и средства чтения XAML и записи XAML внутренне в их реализации; Тем не менее они также предоставляют поддержку и специализированные контекст схемы XAML для понятия, связанные с WPF, например оптимизации для свойств зависимостей и известных типов WPF.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="Load">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Загружает источник для средства чтения XAML и записывает его вывод в виде графа объекта.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public static object Load (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object Load(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlServices.Load(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ Load(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="static member Load : System.IO.Stream -&gt; obj" Usage="System.Xaml.XamlServices.Load stream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">Поток, загружаемый как входные данные.</param>
        <summary>Загружает источник <see cref="T:System.IO.Stream" /> для средства чтения XAML и записывает его вывод в виде графа объекта.</summary>
        <returns>Граф объекта, который записывается как вывод.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Различными сигнатурами для <xref:System.Xaml.XamlServices.Load%28System.IO.Stream%29> указать метод различных типов входных данных для источника XAML. <xref:System.Xaml.XamlServices.Load%28System.IO.Stream%29> Внутренней реализации сначала создает <xref:System.Xml.XmlReader> путем вызова <xref:System.Xml.XmlReader.Create%28System.IO.Stream%29> , а затем создает новый экземпляр специального <xref:System.Xaml.XamlReader> , обрабатывает входные данные.  
  
 Чтобы <xref:System.Xaml.XamlServices.Load%28System.IO.Stream%29> вызова для успешного создания графа объектов, должны выполняться следующие условия:  
  
-   Источник имеет правильный формат и допустимый XML-код.  
  
-   Источником является допустимым XAML на уровне языка.  
  
-   Типы XAML, заданные в источнике XAML должны разрешать типы резервного копирования в соответствующее пространство имен XAML. Например можно разрешить типов XAML для WPF пространств имен с пространством имен XAML в WPF, как указано в XAML; сборки для WPF должны быть включены в проект или доступны во время выполнения; и т. д.  
  
> [!IMPORTANT]
>  <xref:System.Xaml.XamlServices> не Рекомендуемая литература XAML или XAML, написание API набор, если вы обрабатываете [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] типами или типами, на основе [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]. Для [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] использования, используйте <xref:System.Windows.Markup.XamlReader?displayProperty=nameWithType> для чтения или Загрузка XAML; и <xref:System.Windows.Markup.XamlWriter?displayProperty=nameWithType> для обратной записи XAML. Эти классы используют <xref:System.Xaml> API внутренне в их реализации; тем не менее, они также предоставляют поддержку для понятия, связанные с WPF, которые влияют на природу XAML, чтение и запись, например оптимизации для свойств зависимостей.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="stream" /> — <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public static object Load (System.IO.TextReader textReader);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object Load(class System.IO.TextReader textReader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlServices.Load(System.IO.TextReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ Load(System::IO::TextReader ^ textReader);" />
      <MemberSignature Language="F#" Value="static member Load : System.IO.TextReader -&gt; obj" Usage="System.Xaml.XamlServices.Load textReader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textReader" Type="System.IO.TextReader" />
      </Parameters>
      <Docs>
        <param name="textReader">Объект <see cref="T:System.IO.TextReader" /> для использования в качестве основы для созданного <see cref="T:System.Xml.XmlReader" />.</param>
        <summary>Создает средство чтения XAML на основе <see cref="T:System.IO.TextReader" /> и возвращает граф объекта.</summary>
        <returns>Возвращаемый граф объекта.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Для возврата в графе объекта; `textReader` входных данных должно быть создано с помощью его соответствующих входных данных. Например, оно должно передать <xref:System.IO.StringReader> , созданный с помощью допустимых входных данных XAML as string для <xref:System.IO.StringReader.%23ctor%28System.String%29> конструктор.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="textReader" /> — <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public static object Load (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object Load(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlServices.Load(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Load (fileName As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ Load(System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="static member Load : string -&gt; obj" Usage="System.Xaml.XamlServices.Load fileName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName">Имя файла для загрузки и использования в качестве источника.</param>
        <summary>Загружает источник <see cref="T:System.IO.Stream" /> для средства чтения XAML и возвращает граф объекта.</summary>
        <returns>Возвращаемый граф объекта.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Различными сигнатурами для <xref:System.Xaml.XamlServices.Load%2A> указать метод различных типов входных данных для источника XAML. <xref:System.Xaml.XamlServices.Load%2A> Внутренней реализации сначала создает <xref:System.Xml.XmlReader> путем вызова <xref:System.Xml.XmlReader.Create%28System.String%29> , а затем создает новый экземпляр специального <xref:System.Xaml.XamlReader> , обрабатывает входные данные.  
  
 Чтобы <xref:System.Xaml.XamlServices.Load%28System.String%29> вызова для успешного создания графа объектов, должны выполняться следующие условия:  
  
-   Источник имеет правильный формат и допустимый XML-код.  
  
-   Источником является допустимым XAML на уровне языка.  
  
-   Типы XAML, заданные в источнике XAML должны разрешать типы резервного копирования в соответствующее пространство имен XAML. Например можно разрешить типов XAML для WPF пространств имен с пространством имен XAML в WPF, как указано в XAML; сборки для WPF должны быть включены в проект или быть доступны во время выполнения; и т. д.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Входное значение <paramref name="fileName" /> равно <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public static object Load (System.Xaml.XamlReader xamlReader);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object Load(class System.Xaml.XamlReader xamlReader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlServices.Load(System.Xaml.XamlReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ Load(System::Xaml::XamlReader ^ xamlReader);" />
      <MemberSignature Language="F#" Value="static member Load : System.Xaml.XamlReader -&gt; obj" Usage="System.Xaml.XamlServices.Load xamlReader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xamlReader" Type="System.Xaml.XamlReader" />
      </Parameters>
      <Docs>
        <param name="xamlReader">Реализация средства чтения XAML, которую следует использовать в качестве средства чтения для этой операции <see langword="Load" />.</param>
        <summary>Загружает конкретную реализацию средства чтения XAML и возвращает граф объектов.</summary>
        <returns>Возвращаемый граф объекта.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Эта подпись рекомендуется использовать только в следующих случаях:  
  
-   Вы определили собственную реализацию <xref:System.Xaml.XamlReader>.  
  
-   Указанные параметры для <xref:System.Xaml.XamlReader> , отличающиеся от значений по умолчанию.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Входное значение <paramref name="xamlReader" /> равно <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public static object Load (System.Xml.XmlReader xmlReader);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object Load(class System.Xml.XmlReader xmlReader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlServices.Load(System.Xml.XmlReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ Load(System::Xml::XmlReader ^ xmlReader);" />
      <MemberSignature Language="F#" Value="static member Load : System.Xml.XmlReader -&gt; obj" Usage="System.Xaml.XamlServices.Load xmlReader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xmlReader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="xmlReader">Реализация объекта <see cref="T:System.Xml.XmlReader" />, которую следует использовать в качестве средства чтения для этой операции <see langword="Load" />.</param>
        <summary>Загружает конкретную реализацию средства чтения XML и возвращает граф объектов.</summary>
        <returns>Выходной граф объектов.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Эта подпись обычно следует использовать только в том случае, если вы определили собственную реализацию <xref:System.Xml.XmlReader>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Входное значение <paramref name="xamlReader" /> равно <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static object Parse (string xaml);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object Parse(string xaml) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlServices.Parse(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (xaml As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ Parse(System::String ^ xaml);" />
      <MemberSignature Language="F#" Value="static member Parse : string -&gt; obj" Usage="System.Xaml.XamlServices.Parse xaml" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xaml" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xaml">Строка XAML, вводимая для синтаксического анализа.</param>
        <summary>Считывает XAML в виде строковых выходных данных и возвращает граф объектов.</summary>
        <returns>Возвращаемый граф объекта.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Чтобы <xref:System.Xaml.XamlServices.Parse%2A> вызова для успешного создания дерева объектов, должны выполняться следующие условия:  
  
-   `xaml` Имеет правильный формат входных данных и допустимый XML-код.  
  
-   `xaml` Входные данные являются допустимым XAML на уровне языка.  
  
-   Типы XAML, которые указаны в `xaml` входных данных должно разрешаться как резервных типов в соответствующее пространство имен XAML. Например можно разрешить типов XAML для WPF пространства имен с пространством имен XAML в WPF, как указано в XAML; сборки для WPF должны быть включены в проект или быть доступны во время выполнения; и т. д.  
  
> [!IMPORTANT]
>  <xref:System.Xaml.XamlServices> не Рекомендуемая литература XAML или XAML, написание API набор, если вы обрабатываете [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] типами или типами, на основе [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]. Для [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] использования, используйте <xref:System.Windows.Markup.XamlReader?displayProperty=nameWithType> для чтения или загрузки XAML, и <xref:System.Windows.Markup.XamlWriter?displayProperty=nameWithType> для обратной записи XAML. Эти классы используют <xref:System.Xaml> API внутренне в их реализации; тем не менее, они также предоставляют поддержку для понятия, связанные с WPF, которые влияют на природу XAML, чтение и запись, например оптимизации для свойств зависимостей.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Входное значение <paramref name="xaml" /> равно <see langword="null" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Save">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Преобразует предоставленный граф объектов в представление узлов XAML, а затем в выходной формат для сериализации.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public static string Save (object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Save(object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlServices.Save(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Save (instance As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Save(System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="static member Save : obj -&gt; string" Usage="System.Xaml.XamlServices.Save instance" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance">Корень обрабатываемого графа объектов.</param>
        <summary>Преобразует предоставленное дерево объектов в представление узлов XAML и возвращает строковое представление выходного кода XAML.</summary>
        <returns>Разметка XAML, выводимая в виде строки.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Выходные данные из этого метода `ToString` результат <xref:System.Xml.XmlWriter> , созданный путем вызова метода. Что <xref:System.Xml.XmlWriter> создается с помощью следующих параметров: <xref:System.Xml.XmlWriterSettings.Indent%2A?displayProperty=nameWithType> — `true`; и <xref:System.Xml.XmlWriterSettings.OmitXmlDeclaration%2A?displayProperty=nameWithType> является `true`.  
  
 Возвращаемая строка может загружаться как допустимого XML через <xref:System.Xml.XmlReader.Create%2A> метод, если можно обработать строки в поток или в средство чтения более специально выделенные для XAML.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public static void Save (System.IO.Stream stream, object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Save(class System.IO.Stream stream, object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlServices.Save(System.IO.Stream,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Save(System::IO::Stream ^ stream, System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="static member Save : System.IO.Stream * obj -&gt; unit" Usage="System.Xaml.XamlServices.Save (stream, instance)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="stream">Конечный поток.</param>
        <param name="instance">Корень обрабатываемого графа объектов.</param>
        <summary>Преобразует предоставленный граф объектов в представление узлов XAML, а затем в выходной поток для сериализации.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <xref:System.Xaml.XamlServices> не Рекомендуемая литература XAML или XAML, написание API набор, если вы обрабатываете [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] типами или типами, на основе [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]. Для [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] использования, используйте <xref:System.Windows.Markup.XamlReader?displayProperty=nameWithType> для чтения или Загрузка XAML; и <xref:System.Windows.Markup.XamlWriter?displayProperty=nameWithType> для обратной записи XAML. Эти классы используют <xref:System.Xaml> API внутренне в их реализации; тем не менее, они также предоставляют поддержку для понятия, связанные с WPF, которые влияют на природу XAML, чтение и запись, например оптимизации для свойств зависимостей.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Входное значение <paramref name="stream" /> равно <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public static void Save (System.IO.TextWriter writer, object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Save(class System.IO.TextWriter writer, object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlServices.Save(System.IO.TextWriter,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Save (writer As TextWriter, instance As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Save(System::IO::TextWriter ^ writer, System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="static member Save : System.IO.TextWriter * obj -&gt; unit" Usage="System.Xaml.XamlServices.Save (writer, instance)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="writer">Объект <see cref="T:System.IO.TextWriter" />, записывающий выходные данные.</param>
        <param name="instance">Корень обрабатываемого графа объектов.</param>
        <summary>Преобразует предоставленный граф объектов в представление узлов XAML, а затем в выходные данные, передаваемые предоставленному объекту <see cref="T:System.IO.TextWriter" />.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Входное значение <paramref name="writer" /> равно <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public static void Save (string fileName, object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Save(string fileName, object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlServices.Save(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Save (fileName As String, instance As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Save(System::String ^ fileName, System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="static member Save : string * obj -&gt; unit" Usage="System.Xaml.XamlServices.Save (fileName, instance)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="fileName">Имя и расположение файла, в который записываются выходные данные.</param>
        <param name="instance">Корень обрабатываемого графа объектов.</param>
        <summary>Преобразует предоставленный граф объектов в представление узлов XAML, а затем записывает его в выходной файл в указанном расположении.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `fileName` Значение параметра используется в качестве `outputFileName` входных данных для вызова <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType>, который создает <xref:System.Xml.XmlWriter> как часть вызова метода.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Параметр <paramref name="fileName" /> равен пустой строке.</exception>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="fileName" /> имеет значение <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public static void Save (System.Xaml.XamlWriter writer, object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Save(class System.Xaml.XamlWriter writer, object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlServices.Save(System.Xaml.XamlWriter,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Save (writer As XamlWriter, instance As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Save(System::Xaml::XamlWriter ^ writer, System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="static member Save : System.Xaml.XamlWriter * obj -&gt; unit" Usage="System.Xaml.XamlServices.Save (writer, instance)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xaml.XamlWriter" />
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="writer">Используемая реализация объекта <see cref="T:System.Xaml.XamlWriter" />.</param>
        <param name="instance">Корень обрабатываемого графа объектов.</param>
        <summary>Преобразует предоставленный граф объектов в представление узлов XAML, а затем записывает его в предоставленное средство записи XAML.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Эта подпись рекомендуется использовать только в следующих случаях:  
  
-   Вы определили собственную реализацию <xref:System.Xaml.XamlWriter>.  
  
-   Указанные параметры для <xref:System.Xaml.XamlWriter> , отличающиеся от значений по умолчанию.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Входное значение <paramref name="writer" /> равно <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public static void Save (System.Xml.XmlWriter writer, object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Save(class System.Xml.XmlWriter writer, object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlServices.Save(System.Xml.XmlWriter,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Save (writer As XmlWriter, instance As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Save(System::Xml::XmlWriter ^ writer, System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="static member Save : System.Xml.XmlWriter * obj -&gt; unit" Usage="System.Xaml.XamlServices.Save (writer, instance)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="writer">Используемая реализация объекта <see cref="T:System.Xml.XmlWriter" />.</param>
        <param name="instance">Корень обрабатываемого графа объектов.</param>
        <summary>Преобразует предоставленный граф объектов в представление узлов XAML, а затем записывает его в предоставленный объект <see cref="T:System.Xml.XmlWriter" />.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Входное значение <paramref name="writer" /> равно <see langword="null" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Transform">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Связывает объект <see cref="T:System.Xaml.XamlReader" /> с объектом <see cref="T:System.Xaml.XamlWriter" /> для использования общего промежуточного узла XAML. Может преобразовывать содержимое в зависимости от типов предоставленных средств чтения и средств записи.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public static void Transform (System.Xaml.XamlReader xamlReader, System.Xaml.XamlWriter xamlWriter);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Transform(class System.Xaml.XamlReader xamlReader, class System.Xaml.XamlWriter xamlWriter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlServices.Transform(System.Xaml.XamlReader,System.Xaml.XamlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Transform(System::Xaml::XamlReader ^ xamlReader, System::Xaml::XamlWriter ^ xamlWriter);" />
      <MemberSignature Language="F#" Value="static member Transform : System.Xaml.XamlReader * System.Xaml.XamlWriter -&gt; unit" Usage="System.Xaml.XamlServices.Transform (xamlReader, xamlWriter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xamlReader" Type="System.Xaml.XamlReader" />
        <Parameter Name="xamlWriter" Type="System.Xaml.XamlWriter" />
      </Parameters>
      <Docs>
        <param name="xamlReader">Используемая реализация объекта <see cref="T:System.Xaml.XamlReader" />.</param>
        <param name="xamlWriter">Используемый <see cref="T:System.Xaml.XamlWriter" />.</param>
        <summary>Связывает объект <see cref="T:System.Xaml.XamlReader" /> с объектом <see cref="T:System.Xaml.XamlWriter" /> для использования общего промежуточного узла XAML. Может преобразовывать содержимое в зависимости от типов предоставленных средств чтения и средств записи.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод является оболочкой вокруг <xref:System.Xaml.XamlServices.Transform%28System.Xaml.XamlReader%2CSystem.Xaml.XamlWriter%2CSystem.Boolean%29>, где `closeWriter` указывается как `true`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Входные данные параметра <paramref name="xamlReader" /> или <paramref name="xamlWriter" /> представляют собой значение <see langword="null" />.</exception>
        <exception cref="T:System.Xaml.XamlException">Контекст схемы XAML не находится между предоставленными <paramref name="xamlReader" /> и <paramref name="xamlWriter" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public static void Transform (System.Xaml.XamlReader xamlReader, System.Xaml.XamlWriter xamlWriter, bool closeWriter);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Transform(class System.Xaml.XamlReader xamlReader, class System.Xaml.XamlWriter xamlWriter, bool closeWriter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlServices.Transform(System.Xaml.XamlReader,System.Xaml.XamlWriter,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Transform(System::Xaml::XamlReader ^ xamlReader, System::Xaml::XamlWriter ^ xamlWriter, bool closeWriter);" />
      <MemberSignature Language="F#" Value="static member Transform : System.Xaml.XamlReader * System.Xaml.XamlWriter * bool -&gt; unit" Usage="System.Xaml.XamlServices.Transform (xamlReader, xamlWriter, closeWriter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xamlReader" Type="System.Xaml.XamlReader" />
        <Parameter Name="xamlWriter" Type="System.Xaml.XamlWriter" />
        <Parameter Name="closeWriter" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="xamlReader">Используемая реализация объекта <see cref="T:System.Xaml.XamlReader" />.</param>
        <param name="xamlWriter">Используемый <see cref="T:System.Xaml.XamlWriter" />.</param>
        <param name="closeWriter">Значение <see langword="true" />, чтобы закрыть средство записи после завершения вызова; значение <see langword="false" />, чтобы после записи последней позиции оставить средство записи открытым.</param>
        <summary>Связывает объект <see cref="T:System.Xaml.XamlReader" /> с объектом <see cref="T:System.Xaml.XamlWriter" /> для использования общего промежуточного узла XAML. Может преобразовывать содержимое в зависимости от типов предоставленных средств чтения и средств записи. Предоставляет параметр для указания, требуется ли после завершения вызова закрывать средство записи.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Входные данные параметра <paramref name="xamlReader" /> или <paramref name="xamlWriter" /> представляют собой значение <see langword="null" />.</exception>
        <exception cref="T:System.Xaml.XamlException">Контекст схемы XAML не находится между предоставленными <paramref name="xamlReader" /> и <paramref name="xamlWriter" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>