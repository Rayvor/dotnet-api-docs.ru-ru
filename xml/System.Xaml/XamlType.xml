<Type Name="XamlType" FullName="System.Xaml.XamlType">
  <Metadata><Meta Name="ms.openlocfilehash" Value="cfd91f69d569a06e754734f5e72c44b4d3283e86" /><Meta Name="ms.sourcegitcommit" Value="0084afad1b3b1cb2c8ad2c142ae3597d08bad4a7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="10/31/2019" /><Meta Name="ms.locfileid" Value="73400581" /></Metadata><TypeSignature Language="C#" Value="public class XamlType : IEquatable&lt;System.Xaml.XamlType&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XamlType extends System.Object implements class System.IEquatable`1&lt;class System.Xaml.XamlType&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.XamlType" />
  <TypeSignature Language="VB.NET" Value="Public Class XamlType&#xA;Implements IEquatable(Of XamlType)" />
  <TypeSignature Language="C++ CLI" Value="public ref class XamlType : IEquatable&lt;System::Xaml::XamlType ^&gt;" />
  <TypeSignature Language="F#" Value="type XamlType = class&#xA;    interface IEquatable&lt;XamlType&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Xaml.XamlType&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="6e268-101">Сообщает сведения о типах языка XAML в составе общей системы языка XAML, реализованной в службах XAML платформы .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="6e268-101">Reports information about XAML types as part of the overall XAML system that is implemented in .NET Framework XAML Services.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e268-102">Многие API-интерфейсы в классе <xref:System.Xaml.XamlType> предоставляют сведения о типах XAML, где концепция, в которой они сообщают, аналогична определенным разделам спецификации XAML [MS-XAML].</span><span class="sxs-lookup"><span data-stu-id="6e268-102">Many APIs in the <xref:System.Xaml.XamlType> class provide information about XAML types, where the concept they report on is similar to particular sections of the XAML specification [MS-XAML].</span></span>  
  
 <span data-ttu-id="6e268-103"><xref:System.Xaml.XamlType> широко используется в API-интерфейсе .NET Framework служб XAML для отправки сведений о типе XAML.</span><span class="sxs-lookup"><span data-stu-id="6e268-103"><xref:System.Xaml.XamlType> is used extensively in the .NET Framework XAML Services API for reporting information about a XAML type.</span></span> <span data-ttu-id="6e268-104"><xref:System.Xaml.XamlType> сообщает сведения, которые могут потребоваться знать о типе XAML, чтобы работать с экземпляром или получить доступ к его членам из потока узлов XAML или аналогичного представления XAML.</span><span class="sxs-lookup"><span data-stu-id="6e268-104"><xref:System.Xaml.XamlType> reports the information that you might need to know about a XAML type in order to work with an instance or to access its members from a XAML node stream, or a similar XAML representation.</span></span> <span data-ttu-id="6e268-105">Его отчеты похожи на то, как <xref:System.Type> в системе типов CLR, а также классы отражения, такие как <xref:System.Reflection.MemberInfo>, предоставляют сведения о типе CLR и его использовании.</span><span class="sxs-lookup"><span data-stu-id="6e268-105">Its reporting is similar to how the <xref:System.Type> in the CLR type system, together with reflection classes such as <xref:System.Reflection.MemberInfo>, provide information about a CLR type and its usage.</span></span>  
  
 <span data-ttu-id="6e268-106">Чтобы расширить систему типов XAML, можно наследовать от <xref:System.Xaml.XamlType>.</span><span class="sxs-lookup"><span data-stu-id="6e268-106">To extend the XAML type system, you can derive from <xref:System.Xaml.XamlType>.</span></span> <span data-ttu-id="6e268-107">Чтобы сделать это эффективно, также может потребоваться реализовать <xref:System.Xaml.Schema.XamlTypeInvoker>.</span><span class="sxs-lookup"><span data-stu-id="6e268-107">To do so effectively, you might also need to implement a <xref:System.Xaml.Schema.XamlTypeInvoker>.</span></span> <span data-ttu-id="6e268-108"><xref:System.Xaml.Schema.XamlTypeInvoker> позволяет системе обобщенного типа XAML работать с резервной системой типов, которая указывается в качестве части поведения вызова.</span><span class="sxs-lookup"><span data-stu-id="6e268-108">The <xref:System.Xaml.Schema.XamlTypeInvoker> enables the generalized XAML type system to work with the type system backing that you specify as part of the invocation behavior.</span></span> <span data-ttu-id="6e268-109">Конкретный пользовательский <xref:System.Xaml.Schema.XamlTypeInvoker> позволяет уменьшить зависимости от системы типов CLR, которые используются поведением по умолчанию <xref:System.Xaml.XamlType>.</span><span class="sxs-lookup"><span data-stu-id="6e268-109">The specific custom <xref:System.Xaml.Schema.XamlTypeInvoker> provides a way to reduce the dependencies on the CLR type system, which are used by the default <xref:System.Xaml.XamlType> behavior.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="6e268-110">Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="6e268-110">Initializes a new instance of the <see cref="T:System.Xaml.XamlType" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlType (Type underlyingType, System.Xaml.XamlSchemaContext schemaContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type underlyingType, class System.Xaml.XamlSchemaContext schemaContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.#ctor(System.Type,System.Xaml.XamlSchemaContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (underlyingType As Type, schemaContext As XamlSchemaContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlType(Type ^ underlyingType, System::Xaml::XamlSchemaContext ^ schemaContext);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlType : Type * System.Xaml.XamlSchemaContext -&gt; System.Xaml.XamlType" Usage="new System.Xaml.XamlType (underlyingType, schemaContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="underlyingType" Type="System.Type" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
      </Parameters>
      <Docs>
        <param name="underlyingType"><span data-ttu-id="6e268-111">Базовый тип среды CLR <see cref="T:System.Type" /> для создаваемого типа XAML.</span><span class="sxs-lookup"><span data-stu-id="6e268-111">The underlying CLR <see cref="T:System.Type" /> for the XAML type to construct.</span></span></param>
        <param name="schemaContext"><span data-ttu-id="6e268-112">Контекст схемы XAML для средств чтения и записи XAML.</span><span class="sxs-lookup"><span data-stu-id="6e268-112">XAML schema context for XAML readers or XAML writers.</span></span></param>
        <summary><span data-ttu-id="6e268-113">Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlType" /> на основе сведений о базовом типе среды CLR.</span><span class="sxs-lookup"><span data-stu-id="6e268-113">Initializes a new instance of the <see cref="T:System.Xaml.XamlType" /> class based on the underlying CLR type information.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6e268-114">Одно или несколько значений <paramref name="underlyingType" /> или <paramref name="schemaContext" /> равны <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6e268-114">One or more of <paramref name="underlyingType" /> or <paramref name="schemaContext" /> are <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected XamlType (string typeName, System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt; typeArguments, System.Xaml.XamlSchemaContext schemaContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(string typeName, class System.Collections.Generic.IList`1&lt;class System.Xaml.XamlType&gt; typeArguments, class System.Xaml.XamlSchemaContext schemaContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.#ctor(System.String,System.Collections.Generic.IList{System.Xaml.XamlType},System.Xaml.XamlSchemaContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (typeName As String, typeArguments As IList(Of XamlType), schemaContext As XamlSchemaContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; XamlType(System::String ^ typeName, System::Collections::Generic::IList&lt;System::Xaml::XamlType ^&gt; ^ typeArguments, System::Xaml::XamlSchemaContext ^ schemaContext);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlType : string * System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt; * System.Xaml.XamlSchemaContext -&gt; System.Xaml.XamlType" Usage="new System.Xaml.XamlType (typeName, typeArguments, schemaContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="typeArguments" Type="System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
      </Parameters>
      <Docs>
        <param name="typeName"><span data-ttu-id="6e268-115">Имя создаваемого типа.</span><span class="sxs-lookup"><span data-stu-id="6e268-115">The name of the type to create.</span></span></param>
        <param name="typeArguments"><span data-ttu-id="6e268-116">Аргументы типа для объекта <see cref="T:System.Xaml.XamlType" />, представляющего универсальный тип.</span><span class="sxs-lookup"><span data-stu-id="6e268-116">The type arguments for a <see cref="T:System.Xaml.XamlType" /> that represents a generic type.</span></span> <span data-ttu-id="6e268-117">Может (нередко) иметь значение <see langword="null" />, указывающее, что представленный тип не является универсальным.</span><span class="sxs-lookup"><span data-stu-id="6e268-117">Can be (and often is) <see langword="null" />, which indicates that the represented type is not a generic type.</span></span></param>
        <param name="schemaContext"><span data-ttu-id="6e268-118">Контекст схемы XAML для средств чтения и записи XAML.</span><span class="sxs-lookup"><span data-stu-id="6e268-118">XAML schema context for XAML readers and XAML writers.</span></span></param>
        <summary><span data-ttu-id="6e268-119">Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlType" /> на основе строки имени для типа.</span><span class="sxs-lookup"><span data-stu-id="6e268-119">Initializes a new instance of the <see cref="T:System.Xaml.XamlType" /> class based on a string name for the type.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e268-120">Этот конструктор является защищенным.</span><span class="sxs-lookup"><span data-stu-id="6e268-120">This is a protected constructor.</span></span> <span data-ttu-id="6e268-121">Не существует текущих открытых производных классов, которые используют этот конкретный путь для создания.</span><span class="sxs-lookup"><span data-stu-id="6e268-121">No current public derived classes exist that use this particular path for construction.</span></span> <span data-ttu-id="6e268-122">В качестве потребителя существующего <xref:System.Xaml.XamlType> необходимо использовать другие сигнатуры конструктора (<xref:System.Xaml.XamlType.%23ctor%28System.Type%2CSystem.Xaml.XamlSchemaContext%2CSystem.Xaml.Schema.XamlTypeInvoker%29>, <xref:System.Xaml.XamlType.%23ctor%28System.Type%2CSystem.Xaml.XamlSchemaContext%29> или <xref:System.Xaml.XamlType.%23ctor%28System.String%2CSystem.String%2CSystem.Collections.Generic.IList%7BSystem.Xaml.XamlType%7D%2CSystem.Xaml.XamlSchemaContext%29>) для инициализации объекта <xref:System.Xaml.XamlType>.</span><span class="sxs-lookup"><span data-stu-id="6e268-122">As a consumer of the existing <xref:System.Xaml.XamlType>, you must use the other constructor signatures (<xref:System.Xaml.XamlType.%23ctor%28System.Type%2CSystem.Xaml.XamlSchemaContext%2CSystem.Xaml.Schema.XamlTypeInvoker%29>, <xref:System.Xaml.XamlType.%23ctor%28System.Type%2CSystem.Xaml.XamlSchemaContext%29>, or <xref:System.Xaml.XamlType.%23ctor%28System.String%2CSystem.String%2CSystem.Collections.Generic.IList%7BSystem.Xaml.XamlType%7D%2CSystem.Xaml.XamlSchemaContext%29>) to initialize a <xref:System.Xaml.XamlType> object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6e268-123">Одно или несколько значений <paramref name="typeName" /> или <paramref name="schemaContext" /> равны <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6e268-123">One or more of <paramref name="typeName" /> or <paramref name="schemaContext" /> are <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlType (Type underlyingType, System.Xaml.XamlSchemaContext schemaContext, System.Xaml.Schema.XamlTypeInvoker invoker);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type underlyingType, class System.Xaml.XamlSchemaContext schemaContext, class System.Xaml.Schema.XamlTypeInvoker invoker) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.#ctor(System.Type,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlTypeInvoker)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (underlyingType As Type, schemaContext As XamlSchemaContext, invoker As XamlTypeInvoker)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlType(Type ^ underlyingType, System::Xaml::XamlSchemaContext ^ schemaContext, System::Xaml::Schema::XamlTypeInvoker ^ invoker);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlType : Type * System.Xaml.XamlSchemaContext * System.Xaml.Schema.XamlTypeInvoker -&gt; System.Xaml.XamlType" Usage="new System.Xaml.XamlType (underlyingType, schemaContext, invoker)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="underlyingType" Type="System.Type" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
        <Parameter Name="invoker" Type="System.Xaml.Schema.XamlTypeInvoker" />
      </Parameters>
      <Docs>
        <param name="underlyingType"><span data-ttu-id="6e268-124">Базовый тип для создаваемого типа языка XAML.</span><span class="sxs-lookup"><span data-stu-id="6e268-124">The underlying type for the XAML type to construct.</span></span></param>
        <param name="schemaContext"><span data-ttu-id="6e268-125">Контекст схемы XAML для средства чтения XAML.</span><span class="sxs-lookup"><span data-stu-id="6e268-125">XAML schema context for the XAML reader.</span></span></param>
        <param name="invoker"><span data-ttu-id="6e268-126">Реализация <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />, которая обрабатывает вызовы отражения во время выполнения, адресованные объекту <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="6e268-126">The <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> implementation that handles run-time reflection calls against the <see cref="T:System.Xaml.XamlType" />.</span></span></param>
        <summary><span data-ttu-id="6e268-127">Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlType" /> на основе сведений о базовом типе и реализации <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span><span class="sxs-lookup"><span data-stu-id="6e268-127">Initializes a new instance of the <see cref="T:System.Xaml.XamlType" /> class based on underlying type information and a <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> implementation.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6e268-128">Одно или несколько значений <paramref name="underlyingType" /> или <paramref name="schemaContext" /> равны <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6e268-128">One or more of <paramref name="underlyingType" /> or <paramref name="schemaContext" /> are <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlType (string unknownTypeNamespace, string unknownTypeName, System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt; typeArguments, System.Xaml.XamlSchemaContext schemaContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string unknownTypeNamespace, string unknownTypeName, class System.Collections.Generic.IList`1&lt;class System.Xaml.XamlType&gt; typeArguments, class System.Xaml.XamlSchemaContext schemaContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.#ctor(System.String,System.String,System.Collections.Generic.IList{System.Xaml.XamlType},System.Xaml.XamlSchemaContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (unknownTypeNamespace As String, unknownTypeName As String, typeArguments As IList(Of XamlType), schemaContext As XamlSchemaContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlType(System::String ^ unknownTypeNamespace, System::String ^ unknownTypeName, System::Collections::Generic::IList&lt;System::Xaml::XamlType ^&gt; ^ typeArguments, System::Xaml::XamlSchemaContext ^ schemaContext);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlType : string * string * System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt; * System.Xaml.XamlSchemaContext -&gt; System.Xaml.XamlType" Usage="new System.Xaml.XamlType (unknownTypeNamespace, unknownTypeName, typeArguments, schemaContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="unknownTypeNamespace" Type="System.String" />
        <Parameter Name="unknownTypeName" Type="System.String" />
        <Parameter Name="typeArguments" Type="System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
      </Parameters>
      <Docs>
        <param name="unknownTypeNamespace"><span data-ttu-id="6e268-129">Пространство имен XAML для типа в виде строки.</span><span class="sxs-lookup"><span data-stu-id="6e268-129">The XAML namespace for the type, as a string.</span></span></param>
        <param name="unknownTypeName"><span data-ttu-id="6e268-130">Имя типа в предоставленном пространстве имен XAML <paramref name="unknownTypeNamespace" />.</span><span class="sxs-lookup"><span data-stu-id="6e268-130">The name of the type in the provided <paramref name="unknownTypeNamespace" /> XAML namespace.</span></span></param>
        <param name="typeArguments"><span data-ttu-id="6e268-131">Аргументы типа для объекта <see cref="T:System.Xaml.XamlType" />, представляющего универсальный тип.</span><span class="sxs-lookup"><span data-stu-id="6e268-131">The type arguments for a <see cref="T:System.Xaml.XamlType" /> that represents a generic type.</span></span> <span data-ttu-id="6e268-132">Может (нередко) иметь значение <see langword="null" />, указывающее, что представленный тип не является универсальным.</span><span class="sxs-lookup"><span data-stu-id="6e268-132">Can be (and often is) <see langword="null" />, which indicates that the represented type is not a generic type.</span></span></param>
        <param name="schemaContext"><span data-ttu-id="6e268-133">Контекст схемы XAML для средств чтения и записи XAML.</span><span class="sxs-lookup"><span data-stu-id="6e268-133">XAML schema context for XAML readers or XAML writers.</span></span></param>
        <summary><span data-ttu-id="6e268-134">Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlType" /> на основе пространства имен XAML и строки имени для типа.</span><span class="sxs-lookup"><span data-stu-id="6e268-134">Initializes a new instance of the <see cref="T:System.Xaml.XamlType" /> class based on the XAML namespace and a string name for the type.</span></span> <span data-ttu-id="6e268-135">Этот конструктор предназначен исключительно для анализа и записи в узлы XAML использований типов, о которых известно, что они не зарезервированы в базовой системе типов и контексте схемы XAML.</span><span class="sxs-lookup"><span data-stu-id="6e268-135">This constructor is exclusively for analysis and XAML-node recording of type usages that are known to not have backing in the supporting type system and XAML schema context.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e268-136">Используйте этот конструктор только для типов "Unknown", в которых тип XAML, сопоставляемый с базовой системой типов, недоступен.</span><span class="sxs-lookup"><span data-stu-id="6e268-136">Use this constructor only for "unknown" types where a XAML type that maps to an underlying type system is unavailable.</span></span> <span data-ttu-id="6e268-137">Этот конструктор может не дать результата, где <xref:System.Xaml.XamlType.IsUnknown%2A?displayProperty=nameWithType> равно `true`.</span><span class="sxs-lookup"><span data-stu-id="6e268-137">This constructor might not produce a result where <xref:System.Xaml.XamlType.IsUnknown%2A?displayProperty=nameWithType> is `true`.</span></span> <span data-ttu-id="6e268-138">Вместо этого логика отражения по умолчанию сообщает базовый тип как <xref:System.Xaml.XamlLanguage.Object%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="6e268-138">Instead, the default reflector logic reports the underlying type as <xref:System.Xaml.XamlLanguage.Object%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="6e268-139">Однако это поведение может измениться из-за переопределения <xref:System.Xaml.XamlType.LookupIsUnknown%2A>.</span><span class="sxs-lookup"><span data-stu-id="6e268-139">However, this behavior can change because of the <xref:System.Xaml.XamlType.LookupIsUnknown%2A> override.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6e268-140">Одно или несколько значений <paramref name="unknownTypeNamespace" />, <paramref name="unknownTypeName" /> или <paramref name="schemaContext" /> равны <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6e268-140">One or more of <paramref name="unknownTypeNamespace" />, <paramref name="unknownTypeName" />, or <paramref name="schemaContext" /> are <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AllowedContentTypes">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt; AllowedContentTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class System.Xaml.XamlType&gt; AllowedContentTypes" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.AllowedContentTypes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllowedContentTypes As IList(Of XamlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;System::Xaml::XamlType ^&gt; ^ AllowedContentTypes { System::Collections::Generic::IList&lt;System::Xaml::XamlType ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AllowedContentTypes : System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;" Usage="System.Xaml.XamlType.AllowedContentTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6e268-141">Получает коллекцию только для чтения, содержащую типы, которые могут использоваться в качестве значения свойства <see cref="P:System.Xaml.XamlType.ContentProperty" /> для этого класса <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="6e268-141">Gets a read-only collection of the types that are usable as the <see cref="P:System.Xaml.XamlType.ContentProperty" /> value for this <see cref="T:System.Xaml.XamlType" />.</span></span></summary>
        <value><span data-ttu-id="6e268-142">Доступная только для чтения коллекция возможных типов содержимого.</span><span class="sxs-lookup"><span data-stu-id="6e268-142">A read-only collection of possible content types.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e268-143">Типы, которые могут быть назначены определенному типу содержимого (например, могут быть назначены базовому типу, который является допустимым типом содержимого), не считаются несколькими типами в целях <xref:System.Xaml.XamlType.AllowedContentTypes%2A>.</span><span class="sxs-lookup"><span data-stu-id="6e268-143">Types that are assignable a specific content type (for example, assignable to a base type that is an allowed content type) are not considered multiple types for purposes of <xref:System.Xaml.XamlType.AllowedContentTypes%2A>.</span></span>  
  
 <span data-ttu-id="6e268-144">Если вы не используете метод внутренней среды CLR по умолчанию для <xref:System.Xaml.XamlType>, вызовы этого свойства могут вызвать переопределение <xref:System.Xaml.XamlType.LookupAllowedContentTypes%2A> для классов, производных от <xref:System.Xaml.XamlType>.</span><span class="sxs-lookup"><span data-stu-id="6e268-144">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupAllowedContentTypes%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseType">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlType BaseType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlType BaseType" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.BaseType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BaseType As XamlType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::XamlType ^ BaseType { System::Xaml::XamlType ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BaseType : System.Xaml.XamlType" Usage="System.Xaml.XamlType.BaseType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6e268-145">Получает тип <see cref="T:System.Xaml.XamlType" /> для непосредственного базового типа данного типа XAML.</span><span class="sxs-lookup"><span data-stu-id="6e268-145">Gets the <see cref="T:System.Xaml.XamlType" /> for the immediate base type of this XAML type.</span></span> <span data-ttu-id="6e268-146">Определение этого значения основано на базовом типе данного типа <see cref="T:System.Xaml.XamlType" /> и контексте схемы.</span><span class="sxs-lookup"><span data-stu-id="6e268-146">Determination of this value is based on the underlying type of this <see cref="T:System.Xaml.XamlType" /> and schema context.</span></span></summary>
        <value><span data-ttu-id="6e268-147">Тип <see cref="T:System.Xaml.XamlType" /> для непосредственного базового типа данного типа XAML.</span><span class="sxs-lookup"><span data-stu-id="6e268-147">The <see cref="T:System.Xaml.XamlType" /> for the immediate base type of this XAML type.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e268-148">Если вы не используете метод внутренней среды CLR по умолчанию для <xref:System.Xaml.XamlType>, вызовы этого свойства могут вызвать переопределение <xref:System.Xaml.XamlType.LookupBaseType%2A> для классов, производных от <xref:System.Xaml.XamlType>.</span><span class="sxs-lookup"><span data-stu-id="6e268-148">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupBaseType%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="6e268-149">Дополнительные сведения о возвращаемых значениях и других поведении см. в документации по <xref:System.Xaml.XamlType.LookupBaseType%2A> для этого типа.</span><span class="sxs-lookup"><span data-stu-id="6e268-149">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupBaseType%2A> on this type.</span></span> <span data-ttu-id="6e268-150">По умолчанию <xref:System.Xaml.XamlType.BaseType%2A> возвращает внутреннюю константу, которая представляет <xref:System.Object>, если <xref:System.Xaml.XamlType.UnderlyingType%2A> — `null`.</span><span class="sxs-lookup"><span data-stu-id="6e268-150">By default, <xref:System.Xaml.XamlType.BaseType%2A> returns an internal constant that represents an <xref:System.Object> if <xref:System.Xaml.XamlType.UnderlyingType%2A> is `null`.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="6e268-151"><xref:System.Xaml.XamlType.LookupBaseType%2A> является виртуальным и, следовательно, может быть переопределен.</span><span class="sxs-lookup"><span data-stu-id="6e268-151"><xref:System.Xaml.XamlType.LookupBaseType%2A> is virtual, and therefore, can be overridden.</span></span> <span data-ttu-id="6e268-152">Переопределение имеет потенциал (как для вредоносных целей, так и других) для изменения сообщаемых типов данных о типе XAML, чтобы он больше не совпадал с данными системы типов базового типа CLR.</span><span class="sxs-lookup"><span data-stu-id="6e268-152">The override has the potential (whether for malicious purposes or otherwise) to change the reported type information about a XAML type so that it no longer aligns in an expected way with the type system information of its underlying CLR type.</span></span> <span data-ttu-id="6e268-153">Для всех проверок, критических для системы безопасности операций присваивания и доступа, следует использовать базовый тип CLR.</span><span class="sxs-lookup"><span data-stu-id="6e268-153">For any security-critical checks of assignment operations and access, use the underlying CLR type instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanAssignTo">
      <MemberSignature Language="C#" Value="public virtual bool CanAssignTo (System.Xaml.XamlType xamlType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanAssignTo(class System.Xaml.XamlType xamlType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.CanAssignTo(System.Xaml.XamlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanAssignTo(System::Xaml::XamlType ^ xamlType);" />
      <MemberSignature Language="F#" Value="abstract member CanAssignTo : System.Xaml.XamlType -&gt; bool&#xA;override this.CanAssignTo : System.Xaml.XamlType -&gt; bool" Usage="xamlType.CanAssignTo xamlType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xamlType" Type="System.Xaml.XamlType" />
      </Parameters>
      <Docs>
        <param name="xamlType"><span data-ttu-id="6e268-154">Тип, который надо сравнить с текущим типом <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="6e268-154">The type to check against the current <see cref="T:System.Xaml.XamlType" /> .</span></span></param>
        <summary><span data-ttu-id="6e268-155">Возвращает значение, указывающее, содержит ли экземпляр данного типа <see cref="T:System.Xaml.XamlType" /> заданный тип <see cref="T:System.Xaml.XamlType" /> в своем списке присваиваемых типов.</span><span class="sxs-lookup"><span data-stu-id="6e268-155">Returns a value that indicates whether an instance of this <see cref="T:System.Xaml.XamlType" /> has the specified <see cref="T:System.Xaml.XamlType" /> in its list of assignable types.</span></span></summary>
        <returns><span data-ttu-id="6e268-156">Значение <see langword="true" />, если тип <paramref name="xamlType" /> содержится в списке присваиваемых типов; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6e268-156"><see langword="true" /> if <paramref name="xamlType" /> is in the assignable types list; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e268-157">Хотя назначаемый тип не имеет всех возможностей ссылочного типа, его можно использовать для назначения.</span><span class="sxs-lookup"><span data-stu-id="6e268-157">Although the assignable type does not have all the capabilities of the reference type, you can use it for assignment.</span></span> <span data-ttu-id="6e268-158">Например, можно использовать назначение, чтобы сделать тип равным для значений свойства.</span><span class="sxs-lookup"><span data-stu-id="6e268-158">For example, you can use assignment to make type matches for the values of a property.</span></span> <span data-ttu-id="6e268-159">Концепция назначаемых типов в XAML аналогична концепции приведения вверх в системе типов CLR.</span><span class="sxs-lookup"><span data-stu-id="6e268-159">The concept of assignable types in XAML is similar to the concept of casting up in the CLR type system.</span></span> <span data-ttu-id="6e268-160">Например, в системе типов CLR каждый тип имеет <xref:System.Object> в списке присваиваемых типов.</span><span class="sxs-lookup"><span data-stu-id="6e268-160">For example, under a CLR type system, every type has an <xref:System.Object> in its assignable type list.</span></span>  
  
 <span data-ttu-id="6e268-161">Если одно из двух экземпляров <xref:System.Xaml.XamlType>, используемых для сравнения, <xref:System.Xaml.XamlType.IsUnknown%2A> равно `true`, этот метод имеет специальный Неизвестный режим, который возвращает значение `true`, если два экземпляра <xref:System.Xaml.XamlType> эквивалентны.</span><span class="sxs-lookup"><span data-stu-id="6e268-161">If one of the two <xref:System.Xaml.XamlType> instances that are used for comparison has <xref:System.Xaml.XamlType.IsUnknown%2A> equal to `true`, this method has a special Unknown mode that returns `true` if the two <xref:System.Xaml.XamlType> instances are equivalent.</span></span>  
  
 <span data-ttu-id="6e268-162">Реализация по умолчанию использует CLR <xref:System.Type> из <xref:System.Xaml.XamlType.UnderlyingType%2A> для этого <xref:System.Xaml.XamlType> и входных данных <xref:System.Xaml.XamlType>, а также вызывает <xref:System.Type.IsAssignableFrom%2A>.</span><span class="sxs-lookup"><span data-stu-id="6e268-162">The default implementation uses the CLR <xref:System.Type> from <xref:System.Xaml.XamlType.UnderlyingType%2A> for this <xref:System.Xaml.XamlType> and the input <xref:System.Xaml.XamlType>, and calls <xref:System.Type.IsAssignableFrom%2A>.</span></span> <span data-ttu-id="6e268-163">Переопределите этот метод, если требуется другое определение назначаемых типов.</span><span class="sxs-lookup"><span data-stu-id="6e268-163">Override this method if you want a different determination of assignable types.</span></span>  
  
 <span data-ttu-id="6e268-164">Передача значения NULL `xamlType` не приводит к созданию исключения и всегда возвращает `false`.</span><span class="sxs-lookup"><span data-stu-id="6e268-164">Passing a null `xamlType` does not throw an exception and always returns `false`.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="6e268-165"><xref:System.Xaml.XamlType.CanAssignTo%2A> является виртуальным и, следовательно, может быть переопределен.</span><span class="sxs-lookup"><span data-stu-id="6e268-165"><xref:System.Xaml.XamlType.CanAssignTo%2A> is virtual, and therefore, can be overridden.</span></span> <span data-ttu-id="6e268-166">Переопределение имеет потенциал (как для вредоносных целей, так и в других случаях) для изменения способа присваивания типа XAML, чтобы он больше не совпадал в ожидаемом виде с поведением приведения типа к базовому типу CLR.</span><span class="sxs-lookup"><span data-stu-id="6e268-166">The override has the potential (whether for malicious purposes or otherwise) to change the assignability of a XAML type so that it no longer aligns in an expected way with the type-casting behavior of its underlying CLR type.</span></span> <span data-ttu-id="6e268-167">Для всех проверок, критических для системы безопасности операций присваивания и доступа, следует использовать базовый тип CLR.</span><span class="sxs-lookup"><span data-stu-id="6e268-167">For any security-critical checks of assignment operations and access, use the underlying CLR type instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConstructionRequiresArguments">
      <MemberSignature Language="C#" Value="public bool ConstructionRequiresArguments { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ConstructionRequiresArguments" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.ConstructionRequiresArguments" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConstructionRequiresArguments As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ConstructionRequiresArguments { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.ConstructionRequiresArguments : bool" Usage="System.Xaml.XamlType.ConstructionRequiresArguments" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6e268-168">Получает значение, указывающее, должен ли данный тип <see cref="T:System.Xaml.XamlType" /> иметь аргументы (универсальные ограничения с использованием <see langword="x:TypeArguments" />, текста инициализации или других технологии языка XAML) для создания допустимого экземпляра этого типа.</span><span class="sxs-lookup"><span data-stu-id="6e268-168">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> must have arguments (generic constraints through <see langword="x:TypeArguments" />, initialization text, or other XAML techniques) to construct a valid instance of the type.</span></span></summary>
        <value><span data-ttu-id="6e268-169">Значение <see langword="true" />, если для создания экземпляра требуется некоторое значение аргумента; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6e268-169"><see langword="true" /> if construction of an instance requires some argument value; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e268-170">Если вы не используете метод внутренней среды CLR по умолчанию для <xref:System.Xaml.XamlType>, вызовы этого свойства могут вызвать переопределение <xref:System.Xaml.XamlType.LookupConstructionRequiresArguments%2A> для классов, производных от <xref:System.Xaml.XamlType>.</span><span class="sxs-lookup"><span data-stu-id="6e268-170">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupConstructionRequiresArguments%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="6e268-171">Дополнительные сведения о возвращаемых значениях и других поведении см. в документации по <xref:System.Xaml.XamlType.LookupConstructionRequiresArguments%2A> для этого типа.</span><span class="sxs-lookup"><span data-stu-id="6e268-171">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupConstructionRequiresArguments%2A> on this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentProperty">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlMember ContentProperty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlMember ContentProperty" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.ContentProperty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContentProperty As XamlMember" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::XamlMember ^ ContentProperty { System::Xaml::XamlMember ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ContentProperty : System.Xaml.XamlMember" Usage="System.Xaml.XamlType.ContentProperty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlMember</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6e268-172">Получает сведения <see cref="T:System.Xaml.XamlMember" /> для свойства содержимого данного типа <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="6e268-172">Gets the <see cref="T:System.Xaml.XamlMember" /> information for the content property of this <see cref="T:System.Xaml.XamlType" />.</span></span></summary>
        <value><span data-ttu-id="6e268-173">Сведения <see cref="T:System.Xaml.XamlMember" /> для свойства содержимого данного типа <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="6e268-173"><see cref="T:System.Xaml.XamlMember" /> information for the content property of this <see cref="T:System.Xaml.XamlType" />.</span></span> <span data-ttu-id="6e268-174">Может принимать значение <see langword="null" />, если свойство содержимого отсутствует.</span><span class="sxs-lookup"><span data-stu-id="6e268-174">May be <see langword="null" /> if no content property exists.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e268-175">При использовании привязки или резервного копирования системы типов CLR свойство содержимого XAML может быть задано для типа путем применения <xref:System.Windows.Markup.ContentPropertyAttribute> к определению типа.</span><span class="sxs-lookup"><span data-stu-id="6e268-175">When using the binding or backing of the CLR type system, the XAML content property can be specified on a type by applying <xref:System.Windows.Markup.ContentPropertyAttribute> to the type definition.</span></span>  
  
 <span data-ttu-id="6e268-176">Это свойство соответствует информационному элементу `[content property]` в спецификации [MS-XAML].</span><span class="sxs-lookup"><span data-stu-id="6e268-176">This property aligns to the `[content property]` information item in the [MS-XAML] specification.</span></span>  
  
 <span data-ttu-id="6e268-177">Если вы не используете метод внутренней среды CLR по умолчанию для <xref:System.Xaml.XamlType>, вызовы этого свойства могут вызвать переопределение <xref:System.Xaml.XamlType.LookupContentProperty%2A> для классов, производных от <xref:System.Xaml.XamlType>.</span><span class="sxs-lookup"><span data-stu-id="6e268-177">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupContentProperty%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="6e268-178">Дополнительные сведения о возвращаемых значениях и других поведении см. в документации по <xref:System.Xaml.XamlType.LookupContentProperty%2A> для этого типа.</span><span class="sxs-lookup"><span data-stu-id="6e268-178">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupContentProperty%2A> on this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentWrappers">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt; ContentWrappers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class System.Xaml.XamlType&gt; ContentWrappers" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.ContentWrappers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContentWrappers As IList(Of XamlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;System::Xaml::XamlType ^&gt; ^ ContentWrappers { System::Collections::Generic::IList&lt;System::Xaml::XamlType ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ContentWrappers : System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;" Usage="System.Xaml.XamlType.ContentWrappers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6e268-179">Получает типы, используемые для создания оболочки свойства содержимого, если оно не удовлетворяет требованию строгого соответствия типов, например строки в строго типизированной коллекции <see langword="Collection&lt;T&gt;" />.</span><span class="sxs-lookup"><span data-stu-id="6e268-179">Gets the types that are used to wrap content for a content property when it is not a strict type match, such as strings in a strongly typed <see langword="Collection&lt;T&gt;" />.</span></span></summary>
        <value><span data-ttu-id="6e268-180">Доступная только для чтения коллекция возможных типов оболочки содержимого или значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6e268-180">A read-only collection of possible content wrapper types; otherwise, <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e268-181">Если нет оболочек для защиты от ослабления соответствия типов, это свойство имеет значение `null`.</span><span class="sxs-lookup"><span data-stu-id="6e268-181">If there are no wrappers to account for type match loosening, this property is `null`.</span></span>  
  
 <span data-ttu-id="6e268-182">Типы, которые оцениваются как <xref:System.Xaml.XamlType.CanAssignTo%2A> для определенного типа содержимого, не считаются несколькими типами в целях <xref:System.Xaml.XamlType.ContentWrappers%2A>.</span><span class="sxs-lookup"><span data-stu-id="6e268-182">Types that evaluate as <xref:System.Xaml.XamlType.CanAssignTo%2A> for a specific content type are not considered multiple types for purposes of <xref:System.Xaml.XamlType.ContentWrappers%2A>.</span></span>  
  
 <span data-ttu-id="6e268-183">В привязке CLR для <xref:System.Xaml> и <xref:System.Xaml.XamlType> тип оболочки содержимого XAML можно указать в типе как <xref:System.Windows.Markup.ContentWrapperAttribute>.</span><span class="sxs-lookup"><span data-stu-id="6e268-183">In the CLR binding for <xref:System.Xaml> and <xref:System.Xaml.XamlType>, the XAML content wrapper type can be specified on a type as a <xref:System.Windows.Markup.ContentWrapperAttribute>.</span></span>  
  
 <span data-ttu-id="6e268-184">Если вы не используете метод внутренней среды CLR по умолчанию для <xref:System.Xaml.XamlType>, вызовы этого свойства могут вызвать переопределение <xref:System.Xaml.XamlType.LookupContentWrappers%2A> для классов, производных от <xref:System.Xaml.XamlType>.</span><span class="sxs-lookup"><span data-stu-id="6e268-184">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupContentWrappers%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="6e268-185">Дополнительные сведения о возвращаемых значениях и других поведении см. в документации по <xref:System.Xaml.XamlType.LookupContentWrappers%2A> для этого типа.</span><span class="sxs-lookup"><span data-stu-id="6e268-185">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupContentWrappers%2A> on this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeferringLoader">
      <MemberSignature Language="C#" Value="public System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt; DeferringLoader { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.Xaml.XamlDeferringLoader&gt; DeferringLoader" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.DeferringLoader" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DeferringLoader As XamlValueConverter(Of XamlDeferringLoader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::Schema::XamlValueConverter&lt;System::Xaml::XamlDeferringLoader ^&gt; ^ DeferringLoader { System::Xaml::Schema::XamlValueConverter&lt;System::Xaml::XamlDeferringLoader ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DeferringLoader : System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt;" Usage="System.Xaml.XamlType.DeferringLoader" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6e268-186">Получает объект <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />, представляющий поведение преобразования отложенной загрузки для этого типа.</span><span class="sxs-lookup"><span data-stu-id="6e268-186">Gets the <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> that represents the deferred loading conversion behavior for this type.</span></span></summary>
        <value><span data-ttu-id="6e268-187">Объект <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> с ограничением <see cref="T:System.Xaml.XamlDeferringLoader" />, представляющим поведение отложенной загрузки для данного типа.</span><span class="sxs-lookup"><span data-stu-id="6e268-187">The <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> with <see cref="T:System.Xaml.XamlDeferringLoader" /> constraint that represents the deferred loading behavior for this type.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e268-188">Поведение шаблона XAML в WPF является примером поведения отложенной загрузки.</span><span class="sxs-lookup"><span data-stu-id="6e268-188">XAML template behavior in WPF is an example of deferred loading behavior.</span></span>  
  
 <span data-ttu-id="6e268-189">Если вы не используете метод внутренней среды CLR по умолчанию для <xref:System.Xaml.XamlType>, вызовы этого свойства могут вызвать переопределение <xref:System.Xaml.XamlType.LookupDeferringLoader%2A> для классов, производных от <xref:System.Xaml.XamlType>.</span><span class="sxs-lookup"><span data-stu-id="6e268-189">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupDeferringLoader%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="6e268-190">Дополнительные сведения о возвращаемых значениях и других поведении см. в документации по <xref:System.Xaml.XamlType.LookupDeferringLoader%2A> для этого типа.</span><span class="sxs-lookup"><span data-stu-id="6e268-190">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupDeferringLoader%2A> on this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="6e268-191">Позволяет определить, равен ли текущий объект другому объекту.</span><span class="sxs-lookup"><span data-stu-id="6e268-191">Indicates whether the current object is equal to another object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="xamlType.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="6e268-192">Объект, который требуется сравнить с данным объектом.</span><span class="sxs-lookup"><span data-stu-id="6e268-192">The object to compare with this object.</span></span></param>
        <summary><span data-ttu-id="6e268-193">Позволяет определить, равен ли текущий объект другому объекту.</span><span class="sxs-lookup"><span data-stu-id="6e268-193">Indicates whether the current object is equal to another object.</span></span></summary>
        <returns><span data-ttu-id="6e268-194"><see langword="true" />, если текущий объект равен параметру <paramref name="obj" />, в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6e268-194"><see langword="true" /> if the current object is equal to the <paramref name="obj" /> parameter; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Xaml.XamlType other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(class System.Xaml.XamlType other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.Equals(System.Xaml.XamlType)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As XamlType) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Xaml::XamlType ^ other);" />
      <MemberSignature Language="F#" Value="override this.Equals : System.Xaml.XamlType -&gt; bool" Usage="xamlType.Equals other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Xaml.XamlType" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="6e268-195">Объект, который требуется сравнить с данным объектом.</span><span class="sxs-lookup"><span data-stu-id="6e268-195">An object to compare with this object.</span></span></param>
        <summary><span data-ttu-id="6e268-196">Указывает, равен ли текущий объект другому объекту того же типа.</span><span class="sxs-lookup"><span data-stu-id="6e268-196">Indicates whether the current object is equal to another object of the same type.</span></span></summary>
        <returns><span data-ttu-id="6e268-197"><see langword="true" />, если текущий объект эквивалентен параметру <paramref name="other" />, в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6e268-197"><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAliasedProperty">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlMember GetAliasedProperty (System.Xaml.XamlDirective directive);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xaml.XamlMember GetAliasedProperty(class System.Xaml.XamlDirective directive) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.GetAliasedProperty(System.Xaml.XamlDirective)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAliasedProperty (directive As XamlDirective) As XamlMember" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xaml::XamlMember ^ GetAliasedProperty(System::Xaml::XamlDirective ^ directive);" />
      <MemberSignature Language="F#" Value="member this.GetAliasedProperty : System.Xaml.XamlDirective -&gt; System.Xaml.XamlMember" Usage="xamlType.GetAliasedProperty directive" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlMember</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="directive" Type="System.Xaml.XamlDirective" />
      </Parameters>
      <Docs>
        <param name="directive"><span data-ttu-id="6e268-198">Директива, для которой требуется найти член с псевдонимом.</span><span class="sxs-lookup"><span data-stu-id="6e268-198">The directive for which to find the aliased member.</span></span></param>
        <summary><span data-ttu-id="6e268-199">Возвращает элемент XAML, который связан псевдонимом с директивой XAML посредством данного типа <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="6e268-199">Returns the XAML member that is aliased to a XAML directive by this <see cref="T:System.Xaml.XamlType" />.</span></span></summary>
        <returns><span data-ttu-id="6e268-200">Член с псевдонимом, если он найден; в противном случае — значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6e268-200">The aliased member, if found; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e268-201">Если не использовать метод внутренней среды CLR по умолчанию для <xref:System.Xaml.XamlType>, вызовы этого метода могут вызвать переопределение <xref:System.Xaml.XamlType.LookupAliasedProperty%2A> для производных классов <xref:System.Xaml.XamlType>.</span><span class="sxs-lookup"><span data-stu-id="6e268-201">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this method can invoke <xref:System.Xaml.XamlType.LookupAliasedProperty%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="6e268-202">Дополнительные сведения о возвращаемых значениях и других поведении см. в документации по <xref:System.Xaml.XamlType.LookupAliasedProperty%2A> для этого типа.</span><span class="sxs-lookup"><span data-stu-id="6e268-202">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupAliasedProperty%2A> on this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllAttachableMembers">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;System.Xaml.XamlMember&gt; GetAllAttachableMembers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.ICollection`1&lt;class System.Xaml.XamlMember&gt; GetAllAttachableMembers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.GetAllAttachableMembers" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAllAttachableMembers () As ICollection(Of XamlMember)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::ICollection&lt;System::Xaml::XamlMember ^&gt; ^ GetAllAttachableMembers();" />
      <MemberSignature Language="F#" Value="member this.GetAllAttachableMembers : unit -&gt; System.Collections.Generic.ICollection&lt;System.Xaml.XamlMember&gt;" Usage="xamlType.GetAllAttachableMembers " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;System.Xaml.XamlMember&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6e268-203">Возвращает коллекцию, содержащую все присоединяемые свойства, предоставляемые этим классом <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="6e268-203">Returns a collection that contains all the attachable properties that are exposed by this <see cref="T:System.Xaml.XamlType" />.</span></span></summary>
        <returns><span data-ttu-id="6e268-204">Коллекция, содержащая ноль или более значений <see cref="T:System.Xaml.XamlMember" />.</span><span class="sxs-lookup"><span data-stu-id="6e268-204">A collection that contains zero or more <see cref="T:System.Xaml.XamlMember" /> values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e268-205">Каждый <xref:System.Xaml.XamlMember> в возвращаемой коллекции должен содержать значения, которые поддерживают концепцию, которую <xref:System.Xaml.XamlMember> является присоединяемым элементом.</span><span class="sxs-lookup"><span data-stu-id="6e268-205">Each <xref:System.Xaml.XamlMember> in the returned collection should contain values that support the concept that the <xref:System.Xaml.XamlMember> is an attachable member.</span></span> <span data-ttu-id="6e268-206">Например, члены должны возвращать `true` для <xref:System.Xaml.XamlMember.IsAttachable%2A>, тип для <xref:System.Xaml.XamlMember.TargetType%2A> и т. д.</span><span class="sxs-lookup"><span data-stu-id="6e268-206">For example, members should return `true` for <xref:System.Xaml.XamlMember.IsAttachable%2A>, a type for <xref:System.Xaml.XamlMember.TargetType%2A>, and so on.</span></span>  
  
 <span data-ttu-id="6e268-207">Если не использовать метод внутренней среды CLR по умолчанию для <xref:System.Xaml.XamlType>, вызовы этого метода могут вызвать переопределение <xref:System.Xaml.XamlType.LookupAllAttachableMembers%2A> для производных классов <xref:System.Xaml.XamlType>.</span><span class="sxs-lookup"><span data-stu-id="6e268-207">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this method can invoke <xref:System.Xaml.XamlType.LookupAllAttachableMembers%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="6e268-208">Дополнительные сведения о возвращаемых значениях и других поведении см. в документации по <xref:System.Xaml.XamlType.LookupAllAttachableMembers%2A> для этого типа.</span><span class="sxs-lookup"><span data-stu-id="6e268-208">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupAllAttachableMembers%2A> on this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllMembers">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;System.Xaml.XamlMember&gt; GetAllMembers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.ICollection`1&lt;class System.Xaml.XamlMember&gt; GetAllMembers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.GetAllMembers" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAllMembers () As ICollection(Of XamlMember)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::ICollection&lt;System::Xaml::XamlMember ^&gt; ^ GetAllMembers();" />
      <MemberSignature Language="F#" Value="member this.GetAllMembers : unit -&gt; System.Collections.Generic.ICollection&lt;System.Xaml.XamlMember&gt;" Usage="xamlType.GetAllMembers " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;System.Xaml.XamlMember&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6e268-209">Возвращает коллекцию, содержащую все члены, предоставляемые данным объектом <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="6e268-209">Returns a collection that contains all the members that are exposed by this <see cref="T:System.Xaml.XamlType" />.</span></span></summary>
        <returns><span data-ttu-id="6e268-210">Коллекция, содержащая ноль или более значений <see cref="T:System.Xaml.XamlMember" />.</span><span class="sxs-lookup"><span data-stu-id="6e268-210">A collection that contains zero or more <see cref="T:System.Xaml.XamlMember" /> values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e268-211">Вызовы этого метода могут вызвать переопределения <xref:System.Xaml.XamlType.LookupAllMembers%2A> для классов, производных от <xref:System.Xaml.XamlType>.</span><span class="sxs-lookup"><span data-stu-id="6e268-211">Calls to this method can invoke <xref:System.Xaml.XamlType.LookupAllMembers%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAttachableMember">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlMember GetAttachableMember (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xaml.XamlMember GetAttachableMember(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.GetAttachableMember(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAttachableMember (name As String) As XamlMember" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xaml::XamlMember ^ GetAttachableMember(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.GetAttachableMember : string -&gt; System.Xaml.XamlMember" Usage="xamlType.GetAttachableMember name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlMember</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="6e268-212">Имя присоединяемого элемента в следующем формате: <c>ownerTypeName.MemberName</c>.</span><span class="sxs-lookup"><span data-stu-id="6e268-212">The name of the attachable member to get, in <c>ownerTypeName.MemberName</c> form.</span></span></param>
        <summary><span data-ttu-id="6e268-213">Возвращает элемент <see cref="T:System.Xaml.XamlMember" />, который представляет определенный именованный присоединяемый элемент <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="6e268-213">Returns a <see cref="T:System.Xaml.XamlMember" /> representing a specific named attachable member of this <see cref="T:System.Xaml.XamlType" />.</span></span></summary>
        <returns><span data-ttu-id="6e268-214">Объект <see cref="T:System.Xaml.XamlMember" /> для запрошенного присоединяемого элемента или значение <see langword="null" />, если присоединяемого элемента с таким именем не существует.</span><span class="sxs-lookup"><span data-stu-id="6e268-214">A <see cref="T:System.Xaml.XamlMember" /> object for the requested attachable member; otherwise, <see langword="null" />, if no attachable member by that name exists.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e268-215">Вызовы этого метода могут вызвать переопределения <xref:System.Xaml.XamlType.LookupAttachableMember%2A> для классов, производных от <xref:System.Xaml.XamlType>.</span><span class="sxs-lookup"><span data-stu-id="6e268-215">Calls to this method can invoke <xref:System.Xaml.XamlType.LookupAttachableMember%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="6e268-216"><xref:System.Xaml.XamlType.LookupAttachableMember%2A> является виртуальным и, следовательно, может быть переопределен.</span><span class="sxs-lookup"><span data-stu-id="6e268-216"><xref:System.Xaml.XamlType.LookupAttachableMember%2A> is virtual, and therefore, can be overridden.</span></span> <span data-ttu-id="6e268-217">Переопределение имеет потенциал (как для вредоносных целей, так и других) для изменения сообщаемых элементов типа XAML, чтобы они больше не выдавались ожидаемым образом с <xref:System.ComponentModel.TypeDescriptor> `Get*` сведениями о базовом типе CLR.</span><span class="sxs-lookup"><span data-stu-id="6e268-217">The override has the potential (whether for malicious purposes or otherwise) to change the reported members of a XAML type so that they no longer align in an expected way with the <xref:System.ComponentModel.TypeDescriptor> `Get*` information about the underlying CLR type.</span></span> <span data-ttu-id="6e268-218">Для всех проверок, критических с точки зрения безопасности, для отчетов о членах следует использовать базовый тип CLR.</span><span class="sxs-lookup"><span data-stu-id="6e268-218">For any security-critical checks of member reporting, use the underlying CLR type instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="xamlType.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6e268-219">Возвращает хэш-код для этого объекта.</span><span class="sxs-lookup"><span data-stu-id="6e268-219">Returns the hash code for this object.</span></span></summary>
        <returns><span data-ttu-id="6e268-220">Целочисленный хэш-код.</span><span class="sxs-lookup"><span data-stu-id="6e268-220">An integer hash code.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMember">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlMember GetMember (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xaml.XamlMember GetMember(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.GetMember(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMember (name As String) As XamlMember" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xaml::XamlMember ^ GetMember(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.GetMember : string -&gt; System.Xaml.XamlMember" Usage="xamlType.GetMember name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlMember</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="6e268-221">Имя (в виде строки) члена, который требуется получить.</span><span class="sxs-lookup"><span data-stu-id="6e268-221">The name of the member to get (as a string).</span></span></param>
        <summary><span data-ttu-id="6e268-222">Возвращает член <see cref="T:System.Xaml.XamlMember" /> для определенного именованного члена из данного типа <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="6e268-222">Returns a <see cref="T:System.Xaml.XamlMember" /> for a specific named member from this <see cref="T:System.Xaml.XamlType" />.</span></span></summary>
        <returns><span data-ttu-id="6e268-223">Сведения <see cref="T:System.Xaml.XamlMember" /> для члена, если он найден; в противном случае — значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6e268-223">The <see cref="T:System.Xaml.XamlMember" /> information for the member, if such a member was found; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e268-224">Значение `name` должно быть неполным.</span><span class="sxs-lookup"><span data-stu-id="6e268-224">The value for `name` is expected to be unqualified.</span></span> <span data-ttu-id="6e268-225">Имена с квалификаторами типа, которые указывают, что присоединенный член должен отправляться <xref:System.Xaml.XamlType.GetAttachableMember%2A>.</span><span class="sxs-lookup"><span data-stu-id="6e268-225">Type-qualified names that indicate an attached member should be submitted to <xref:System.Xaml.XamlType.GetAttachableMember%2A> instead.</span></span> <span data-ttu-id="6e268-226">Имена элементов с префиксом не должны использоваться; Префикс является ситуацией использования, и система типов XAML не может понять контекст такого использования и способ сопоставления префикса.</span><span class="sxs-lookup"><span data-stu-id="6e268-226">Prefixed member names should not be used; a prefix is situational to a usage and the XAML type system cannot know the context of such a usage and how the prefix is mapped.</span></span>  
  
 <span data-ttu-id="6e268-227">Вызовы этого метода могут вызвать переопределения <xref:System.Xaml.XamlType.LookupMember%2A> для классов, производных от <xref:System.Xaml.XamlType>.</span><span class="sxs-lookup"><span data-stu-id="6e268-227">Calls to this method can invoke <xref:System.Xaml.XamlType.LookupMember%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="6e268-228"><xref:System.Xaml.XamlType.LookupMember%2A> является виртуальным и, следовательно, может быть переопределен.</span><span class="sxs-lookup"><span data-stu-id="6e268-228"><xref:System.Xaml.XamlType.LookupMember%2A> is virtual, and therefore, can be overridden.</span></span> <span data-ttu-id="6e268-229">Переопределение имеет потенциал (как для вредоносных целей, так и других) для изменения сообщаемых элементов типа XAML, чтобы они больше не выдавались ожидаемым образом с <xref:System.ComponentModel.TypeDescriptor> `Get*` сведениями о базовом типе CLR.</span><span class="sxs-lookup"><span data-stu-id="6e268-229">The override has the potential (whether for malicious purposes or otherwise) to change the reported members of a XAML type so that they no longer align in an expected way with the <xref:System.ComponentModel.TypeDescriptor> `Get*` information about the underlying CLR type.</span></span> <span data-ttu-id="6e268-230">Для всех проверок, критических с точки зрения безопасности, для отчетов о членах следует использовать базовый тип CLR.</span><span class="sxs-lookup"><span data-stu-id="6e268-230">For any security-critical checks of member reporting, use the underlying CLR type instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPositionalParameters">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt; GetPositionalParameters (int parameterCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IList`1&lt;class System.Xaml.XamlType&gt; GetPositionalParameters(int32 parameterCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.GetPositionalParameters(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPositionalParameters (parameterCount As Integer) As IList(Of XamlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IList&lt;System::Xaml::XamlType ^&gt; ^ GetPositionalParameters(int parameterCount);" />
      <MemberSignature Language="F#" Value="member this.GetPositionalParameters : int -&gt; System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;" Usage="xamlType.GetPositionalParameters parameterCount" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameterCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="parameterCount"><span data-ttu-id="6e268-231">Количество (арность) определенного режима синтаксиса или конструктора, о котором требуется получить сведения.</span><span class="sxs-lookup"><span data-stu-id="6e268-231">The count (arity) of the particular syntax or constructor mode that you want information about.</span></span></param>
        <summary><span data-ttu-id="6e268-232">Для типов расширения разметки возвращает типы позиционных параметров, поддерживаемых в конкретном употреблении расширения разметки для данного типа <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="6e268-232">For markup extension types, returns the types of the positional parameters that are supported in a specific markup extension usage for this <see cref="T:System.Xaml.XamlType" />.</span></span></summary>
        <returns><span data-ttu-id="6e268-233">Список значений <see cref="T:System.Xaml.XamlType" />, где каждый объект <see cref="T:System.Xaml.XamlType" /> является типом для этой позиции в синтаксисе.</span><span class="sxs-lookup"><span data-stu-id="6e268-233">A list of <see cref="T:System.Xaml.XamlType" /> values, where each <see cref="T:System.Xaml.XamlType" /> is the type for that position in the syntax.</span></span> <span data-ttu-id="6e268-234">При передаче входных данных разметки в расширение разметки необходимо задавать типы в том же порядке.</span><span class="sxs-lookup"><span data-stu-id="6e268-234">You must specify the types in the same order when you supply markup input for the markup extension.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e268-235">Этот API важен только в том случае, если этот <xref:System.Xaml.XamlType> представляет расширение разметки (<xref:System.Xaml.XamlType.IsMarkupExtension%2A> — `true`).</span><span class="sxs-lookup"><span data-stu-id="6e268-235">This API is only relevant if this <xref:System.Xaml.XamlType> represents a markup extension (<xref:System.Xaml.XamlType.IsMarkupExtension%2A> is `true`).</span></span>  
  
 <span data-ttu-id="6e268-236">Входные `parameterCount` не запрашивают тип конкретного позиционированного параметра.</span><span class="sxs-lookup"><span data-stu-id="6e268-236">The input `parameterCount` is not for requesting the type of a specific positional parameter.</span></span> <span data-ttu-id="6e268-237">Он предназначен для указания арности использования расширения разметки.</span><span class="sxs-lookup"><span data-stu-id="6e268-237">It is for specifying the arity of a markup extension usage.</span></span> <span data-ttu-id="6e268-238">Использование расширения разметки часто имеет несколько "сигнатур" и использует разные значения арности параметров (количество) для различения параметров.</span><span class="sxs-lookup"><span data-stu-id="6e268-238">Markup extension usage often has multiple "signatures" and uses different parameter arity (count) of positional parameters to differentiate.</span></span> <span data-ttu-id="6e268-239">Однако можно настроить контекст схемы, чтобы разрешить дублирование аритиес и использовать типы позиционированных параметров для различения.</span><span class="sxs-lookup"><span data-stu-id="6e268-239">However, you can configure a schema context to allow duplicate arities and use types of the positional parameters for differentiation.</span></span> <span data-ttu-id="6e268-240">Для получения дополнительной информации см. <xref:System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity%2A>.</span><span class="sxs-lookup"><span data-stu-id="6e268-240">For more information, see <xref:System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity%2A>.</span></span> <span data-ttu-id="6e268-241">Для определенной арности (Count) позиции и типы параметров могут различаться.</span><span class="sxs-lookup"><span data-stu-id="6e268-241">For a specific arity (count), the parameter positions and types can vary.</span></span> <span data-ttu-id="6e268-242">Чтобы получить определяющий тип использования расширения разметки определенной арности, сначала необходимо вызвать <xref:System.Xaml.XamlType.GetPositionalParameters%2A>, указав число арностей.</span><span class="sxs-lookup"><span data-stu-id="6e268-242">To get the positional type of a specific arity's markup extension usage, you first call <xref:System.Xaml.XamlType.GetPositionalParameters%2A> specifying the arity count.</span></span> <span data-ttu-id="6e268-243">Затем получите элемент в этой позиции из возвращенной коллекции.</span><span class="sxs-lookup"><span data-stu-id="6e268-243">Then get the item at that position from the returned collection.</span></span>  
  
 <span data-ttu-id="6e268-244">Вызовы этого метода могут вызвать переопределения <xref:System.Xaml.XamlType.LookupPositionalParameters%2A> для классов, производных от <xref:System.Xaml.XamlType>.</span><span class="sxs-lookup"><span data-stu-id="6e268-244">Calls to this method can invoke <xref:System.Xaml.XamlType.LookupPositionalParameters%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetXamlNamespaces">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;string&gt; GetXamlNamespaces ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;string&gt; GetXamlNamespaces() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.GetXamlNamespaces" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetXamlNamespaces () As IList(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IList&lt;System::String ^&gt; ^ GetXamlNamespaces();" />
      <MemberSignature Language="F#" Value="abstract member GetXamlNamespaces : unit -&gt; System.Collections.Generic.IList&lt;string&gt;&#xA;override this.GetXamlNamespaces : unit -&gt; System.Collections.Generic.IList&lt;string&gt;" Usage="xamlType.GetXamlNamespaces " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6e268-245">Возвращает список строковых идентификаторов для пространств имен языка XAML, в которые входит этот тип.</span><span class="sxs-lookup"><span data-stu-id="6e268-245">Returns a list of string identifiers for XAML namespaces that the type is included in.</span></span></summary>
        <returns><span data-ttu-id="6e268-246">Список строковых значений, в котором каждая строка является URI-идентификатором для пространства имен языка XAML.</span><span class="sxs-lookup"><span data-stu-id="6e268-246">A list of string values, where each string is the URI identifier for a XAML namespace.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e268-247">Типичные идентификаторы пространства имен XAML — это строки в форме URI.</span><span class="sxs-lookup"><span data-stu-id="6e268-247">Typical XAML namespace identifiers are strings in URI form.</span></span>  
  
 <span data-ttu-id="6e268-248">Реализация по умолчанию проверяет следующее по порядку: пространство имен XAML, которое предоставляется в конструкции (только для сигнатуры <xref:System.Xaml.XamlType.%23ctor%28System.String%2CSystem.String%2CSystem.Collections.Generic.IList%7BSystem.Xaml.XamlType%7D%2CSystem.Xaml.XamlSchemaContext%29>); и пространства имен, доступные из контекста схемы.</span><span class="sxs-lookup"><span data-stu-id="6e268-248">The default implementation checks the following, in order: the XAML namespace that is supplied in construction (<xref:System.Xaml.XamlType.%23ctor%28System.String%2CSystem.String%2CSystem.Collections.Generic.IList%7BSystem.Xaml.XamlType%7D%2CSystem.Xaml.XamlSchemaContext%29> signature only); and the namespaces that are available from the schema context.</span></span> <span data-ttu-id="6e268-249">Если это все `null`, создается новый список, содержащий одну пустую строку.</span><span class="sxs-lookup"><span data-stu-id="6e268-249">If these are each `null`, a new list is generated that contains a single empty string.</span></span> <span data-ttu-id="6e268-250">Этот метод можно переопределить, чтобы изменить методологию поиска.</span><span class="sxs-lookup"><span data-stu-id="6e268-250">You can override this method to change the lookup methodology.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Invoker">
      <MemberSignature Language="C#" Value="public System.Xaml.Schema.XamlTypeInvoker Invoker { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.Schema.XamlTypeInvoker Invoker" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.Invoker" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Invoker As XamlTypeInvoker" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::Schema::XamlTypeInvoker ^ Invoker { System::Xaml::Schema::XamlTypeInvoker ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Invoker : System.Xaml.Schema.XamlTypeInvoker" Usage="System.Xaml.XamlType.Invoker" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlTypeInvoker</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6e268-251">Получает реализацию объекта <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />, связанную с данным типом <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="6e268-251">Gets the <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> implementation that is associated with this <see cref="T:System.Xaml.XamlType" />.</span></span></summary>
        <value><span data-ttu-id="6e268-252">Реализация объекта <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />, связанная с данным типом <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="6e268-252">The <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> implementation that is associated with this <see cref="T:System.Xaml.XamlType" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e268-253">Если для <xref:System.Xaml.XamlType> не используется метод внутренней среды CLR по умолчанию, вызов <xref:System.Xaml.XamlType.Invoker%2A> может вызвать либо <xref:System.Xaml.XamlType.LookupInvoker%2A>, либо конкретное переопределение этого метода.</span><span class="sxs-lookup"><span data-stu-id="6e268-253">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calling <xref:System.Xaml.XamlType.Invoker%2A> can invoke either <xref:System.Xaml.XamlType.LookupInvoker%2A> or a specific override of that method.</span></span> <span data-ttu-id="6e268-254">Дополнительные сведения о возвращаемых значениях и других поведении см. в документации по <xref:System.Xaml.XamlType.LookupInvoker%2A> для этого типа.</span><span class="sxs-lookup"><span data-stu-id="6e268-254">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupInvoker%2A> on this type.</span></span>  
  
 <span data-ttu-id="6e268-255">Если переопределение <xref:System.Xaml.XamlType.LookupInvoker%2A> возвращает `null` или реализация по умолчанию возвращает `null` по причине отсутствия <xref:System.Xaml.XamlType.UnderlyingType%2A> для этого <xref:System.Xaml.XamlType>, то <xref:System.Xaml.XamlType.Invoker%2A> возвращает <xref:System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="6e268-255">If a <xref:System.Xaml.XamlType.LookupInvoker%2A> override returns `null`, or if the default implementation returns `null` because of lack of <xref:System.Xaml.XamlType.UnderlyingType%2A> for this <xref:System.Xaml.XamlType>, then <xref:System.Xaml.XamlType.Invoker%2A> returns <xref:System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAmbient">
      <MemberSignature Language="C#" Value="public bool IsAmbient { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAmbient" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsAmbient" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAmbient As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAmbient { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAmbient : bool" Usage="System.Xaml.XamlType.IsAmbient" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6e268-256">Получает значение, указывающее, представляет ли данный тип <see cref="T:System.Xaml.XamlType" /> внешний тип в соответствии с определением языка XAML.</span><span class="sxs-lookup"><span data-stu-id="6e268-256">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents an ambient type, as per the XAML definition.</span></span></summary>
        <value><span data-ttu-id="6e268-257">Значение <see langword="true" />, если данный тип <see cref="T:System.Xaml.XamlType" /> представляет внешний тип; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6e268-257"><see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents an ambient type; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e268-258">Если вы не используете метод внутренней среды CLR по умолчанию для <xref:System.Xaml.XamlType>, вызовы этого свойства могут вызвать переопределение <xref:System.Xaml.XamlType.LookupIsAmbient%2A> для классов, производных от <xref:System.Xaml.XamlType>.</span><span class="sxs-lookup"><span data-stu-id="6e268-258">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupIsAmbient%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="6e268-259">Дополнительные сведения о возвращаемых значениях и других поведении см. в документации по <xref:System.Xaml.XamlType.LookupIsAmbient%2A> для этого типа.</span><span class="sxs-lookup"><span data-stu-id="6e268-259">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupIsAmbient%2A> on this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsArray">
      <MemberSignature Language="C#" Value="public bool IsArray { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsArray" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsArray" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsArray As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsArray { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsArray : bool" Usage="System.Xaml.XamlType.IsArray" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6e268-260">Получает значение, указывающее, представляет ли данный тип <see cref="T:System.Xaml.XamlType" /> массив.</span><span class="sxs-lookup"><span data-stu-id="6e268-260">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents an array.</span></span></summary>
        <value><span data-ttu-id="6e268-261">Значение <see langword="true" />, если данный тип <see cref="T:System.Xaml.XamlType" /> представляет массив; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6e268-261"><see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents an array; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e268-262">Если вы не используете метод внутренней среды CLR по умолчанию для <xref:System.Xaml.XamlType>, вызовы этого свойства могут вызвать переопределение <xref:System.Xaml.XamlType.LookupCollectionKind%2A> для классов, производных от <xref:System.Xaml.XamlType>.</span><span class="sxs-lookup"><span data-stu-id="6e268-262">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupCollectionKind%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="6e268-263">Дополнительные сведения о возвращаемых значениях и других поведении см. в документации по <xref:System.Xaml.XamlType.LookupCollectionKind%2A> для этого типа.</span><span class="sxs-lookup"><span data-stu-id="6e268-263">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupCollectionKind%2A> on this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCollection">
      <MemberSignature Language="C#" Value="public bool IsCollection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCollection" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsCollection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsCollection As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsCollection { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsCollection : bool" Usage="System.Xaml.XamlType.IsCollection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6e268-264">Получает значение, указывающее, представляет ли данный тип <see cref="T:System.Xaml.XamlType" /> коллекцию.</span><span class="sxs-lookup"><span data-stu-id="6e268-264">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents a collection.</span></span></summary>
        <value><span data-ttu-id="6e268-265">Значение <see langword="true" />, если данный тип <see cref="T:System.Xaml.XamlType" /> представляет коллекцию; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6e268-265"><see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents a collection; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e268-266">Если вы не используете метод внутренней среды CLR по умолчанию для <xref:System.Xaml.XamlType>, вызовы этого свойства могут вызвать переопределение <xref:System.Xaml.XamlType.LookupCollectionKind%2A> для классов, производных от <xref:System.Xaml.XamlType>.</span><span class="sxs-lookup"><span data-stu-id="6e268-266">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupCollectionKind%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="6e268-267">Дополнительные сведения о возвращаемых значениях и других поведении см. в документации по <xref:System.Xaml.XamlType.LookupCollectionKind%2A> для этого типа.</span><span class="sxs-lookup"><span data-stu-id="6e268-267">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupCollectionKind%2A> on this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsConstructible">
      <MemberSignature Language="C#" Value="public bool IsConstructible { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsConstructible" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsConstructible" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsConstructible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsConstructible { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsConstructible : bool" Usage="System.Xaml.XamlType.IsConstructible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6e268-268">Получает значение, указывающее, представляет ли данный тип <see cref="T:System.Xaml.XamlType" /> конструируемый тип в соответствии с определением языка XAML.</span><span class="sxs-lookup"><span data-stu-id="6e268-268">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents a constructible type, as per the XAML definition.</span></span></summary>
        <value><span data-ttu-id="6e268-269">Значение <see langword="true" />, если данный тип <see cref="T:System.Xaml.XamlType" /> представляет конструируемый тип; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6e268-269"><see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents a constructible type; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e268-270">Это свойство соответствует информационному элементу `[is default constructible]` в спецификации [MS-XAML].</span><span class="sxs-lookup"><span data-stu-id="6e268-270">This property aligns to the `[is default constructible]` information item in the [MS-XAML] specification.</span></span>  
  
 <span data-ttu-id="6e268-271">Если вы не используете метод внутренней среды CLR по умолчанию для <xref:System.Xaml.XamlType>, вызовы этого свойства могут вызвать переопределение <xref:System.Xaml.XamlType.LookupIsConstructible%2A> для классов, производных от <xref:System.Xaml.XamlType>.</span><span class="sxs-lookup"><span data-stu-id="6e268-271">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupIsConstructible%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="6e268-272">Дополнительные сведения о возвращаемых значениях и других поведении см. в документации по <xref:System.Xaml.XamlType.LookupIsConstructible%2A> для этого типа.</span><span class="sxs-lookup"><span data-stu-id="6e268-272">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupIsConstructible%2A> on this type.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlType.ConstructionRequiresArguments" />
      </Docs>
    </Member>
    <Member MemberName="IsDictionary">
      <MemberSignature Language="C#" Value="public bool IsDictionary { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDictionary" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsDictionary" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDictionary As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDictionary { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDictionary : bool" Usage="System.Xaml.XamlType.IsDictionary" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6e268-273">Получает значение, указывающее, представляет ли данный тип <see cref="T:System.Xaml.XamlType" /> словарь в соответствии с определением языка XAML.</span><span class="sxs-lookup"><span data-stu-id="6e268-273">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents a dictionary, as per the XAML definition.</span></span></summary>
        <value><span data-ttu-id="6e268-274">Значение <see langword="true" />, если данный тип <see cref="T:System.Xaml.XamlType" /> представляет словарь; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6e268-274"><see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents a dictionary; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e268-275">Это свойство соответствует информационному элементу `[is dictionary]` в спецификации [MS-XAML].</span><span class="sxs-lookup"><span data-stu-id="6e268-275">This property aligns to the `[is dictionary]` information item in the [MS-XAML] specification.</span></span>  
  
 <span data-ttu-id="6e268-276">Если вы не используете метод внутренней среды CLR по умолчанию для <xref:System.Xaml.XamlType>, вызовы этого свойства могут вызвать переопределение <xref:System.Xaml.XamlType.LookupCollectionKind%2A> для классов, производных от <xref:System.Xaml.XamlType>.</span><span class="sxs-lookup"><span data-stu-id="6e268-276">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupCollectionKind%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="6e268-277">Дополнительные сведения о возвращаемых значениях и других поведении см. в документации по <xref:System.Xaml.XamlType.LookupCollectionKind%2A> для этого типа.</span><span class="sxs-lookup"><span data-stu-id="6e268-277">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupCollectionKind%2A> on this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsGeneric">
      <MemberSignature Language="C#" Value="public bool IsGeneric { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsGeneric" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsGeneric" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsGeneric As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsGeneric { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsGeneric : bool" Usage="System.Xaml.XamlType.IsGeneric" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6e268-278">Получает значение, указывающее, представляет ли этот данный тип <see cref="T:System.Xaml.XamlType" /> универсальный тип.</span><span class="sxs-lookup"><span data-stu-id="6e268-278">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents a generic type.</span></span></summary>
        <value><span data-ttu-id="6e268-279">Значение <see langword="true" />, если данный тип <see cref="T:System.Xaml.XamlType" /> представляет универсальный тип; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6e268-279"><see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents a generic type; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e268-280">Это свойство является вспомогательным, которое проверяет значение null, равное <xref:System.Xaml.XamlType.TypeArguments%2A>.</span><span class="sxs-lookup"><span data-stu-id="6e268-280">This property is a helper property that checks for a null value of <xref:System.Xaml.XamlType.TypeArguments%2A>.</span></span> <span data-ttu-id="6e268-281">Нет конкретного метода `Lookup`, связанного с <xref:System.Xaml.XamlType.IsGeneric%2A>.</span><span class="sxs-lookup"><span data-stu-id="6e268-281">There is no specific `Lookup` method related to <xref:System.Xaml.XamlType.IsGeneric%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMarkupExtension">
      <MemberSignature Language="C#" Value="public bool IsMarkupExtension { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMarkupExtension" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsMarkupExtension" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsMarkupExtension As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsMarkupExtension { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsMarkupExtension : bool" Usage="System.Xaml.XamlType.IsMarkupExtension" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6e268-282">Получает значение, указывающее, представляет ли данный тип <see cref="T:System.Xaml.XamlType" /> расширение разметки.</span><span class="sxs-lookup"><span data-stu-id="6e268-282">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents a markup extension.</span></span></summary>
        <value><span data-ttu-id="6e268-283">Значение <see langword="true" />, если этот класс <see cref="T:System.Xaml.XamlType" /> представляет расширение разметки; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6e268-283"><see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents a markup extension; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e268-284">В терминах спецификации XAML этот тип должен быть назначен для `x:MarkupExtension`, чтобы возвратить `true` для <xref:System.Xaml.XamlType.IsMarkupExtension%2A>.</span><span class="sxs-lookup"><span data-stu-id="6e268-284">In XAML specification terms, this type must be assignable to `x:MarkupExtension` in order to return `true` for <xref:System.Xaml.XamlType.IsMarkupExtension%2A>.</span></span>  
  
 <span data-ttu-id="6e268-285">Если вы не используете метод внутренней среды CLR по умолчанию для <xref:System.Xaml.XamlType>, вызовы этого свойства могут вызвать переопределение <xref:System.Xaml.XamlType.LookupIsMarkupExtension%2A> для классов, производных от <xref:System.Xaml.XamlType>.</span><span class="sxs-lookup"><span data-stu-id="6e268-285">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupIsMarkupExtension%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="6e268-286">Дополнительные сведения о возвращаемых значениях и других поведении см. в документации по <xref:System.Xaml.XamlType.LookupIsMarkupExtension%2A> для этого типа.</span><span class="sxs-lookup"><span data-stu-id="6e268-286">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupIsMarkupExtension%2A> on this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNameScope">
      <MemberSignature Language="C#" Value="public bool IsNameScope { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNameScope" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsNameScope" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsNameScope As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNameScope { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsNameScope : bool" Usage="System.Xaml.XamlType.IsNameScope" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6e268-287">Получает значение, указывающее, представляет ли данный тип <see cref="T:System.Xaml.XamlType" /> область имен XAML в соответствии с определением языка XAML.</span><span class="sxs-lookup"><span data-stu-id="6e268-287">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents a XAML namescope, as per the XAML definition.</span></span></summary>
        <value><span data-ttu-id="6e268-288">Значение <see langword="true" />, если данный тип <see cref="T:System.Xaml.XamlType" /> представляет область имен XAML; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6e268-288"><see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents a XAML namescope; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e268-289">Область имен XAML обеспечивает уникальность имени свойства или свойств, используемых для `x:Name` / `[name property]`.</span><span class="sxs-lookup"><span data-stu-id="6e268-289">A XAML namescope enforces the name uniqueness of the property or properties used for `x:Name` / `[name property]`.</span></span> <span data-ttu-id="6e268-290">Если <xref:System.Xaml.XamlType.IsNameScope%2A> равно `true`, должен существовать механизм обеспечения уникальности, который должен оцениваться от перспективы этого типа, владеющего областью имен XAML.</span><span class="sxs-lookup"><span data-stu-id="6e268-290">If <xref:System.Xaml.XamlType.IsNameScope%2A> is `true`, some mechanism for enforcing uniqueness should exist and should evaluate from the perspective of this type owning a XAML namescope.</span></span> <span data-ttu-id="6e268-291">Область имен XAML затем расширяется до содержимого типа до тех пор, пока не встретится другой тип области видимости имен XAML.</span><span class="sxs-lookup"><span data-stu-id="6e268-291">The XAML namescope then extends to the content of the type until another XAML namescope-owning type is encountered.</span></span>  
  
 <span data-ttu-id="6e268-292">Это свойство соответствует информационному элементу `[is name scope]` в спецификации [MS-XAML].</span><span class="sxs-lookup"><span data-stu-id="6e268-292">This property aligns to the `[is name scope]` information item in the [MS-XAML] specification.</span></span>  
  
 <span data-ttu-id="6e268-293">Если вы не используете метод внутренней среды CLR по умолчанию для <xref:System.Xaml.XamlType>, вызовы этого свойства могут вызвать переопределение <xref:System.Xaml.XamlType.LookupIsNameScope%2A> для классов, производных от <xref:System.Xaml.XamlType>.</span><span class="sxs-lookup"><span data-stu-id="6e268-293">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupIsNameScope%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNameValid">
      <MemberSignature Language="C#" Value="public bool IsNameValid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNameValid" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsNameValid" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsNameValid As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNameValid { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsNameValid : bool" Usage="System.Xaml.XamlType.IsNameValid" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6e268-294">Получает значение, указывающее, инициализирован ли данный тип <see cref="T:System.Xaml.XamlType" /> с использованием допустимой строки <see langword="xamlName" /> в качестве его свойства <see cref="P:System.Xaml.XamlType.Name" />.</span><span class="sxs-lookup"><span data-stu-id="6e268-294">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> is initialized by using a valid <see langword="xamlName" /> string as its <see cref="P:System.Xaml.XamlType.Name" />.</span></span></summary>
        <value><span data-ttu-id="6e268-295">Значение <see langword="true" />, если данный тип <see cref="T:System.Xaml.XamlType" /> инициализирован с использованием допустимой строки <see langword="xamlName" />; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6e268-295"><see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> is initialized by using a valid <see langword="xamlName" /> string; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNullable">
      <MemberSignature Language="C#" Value="public bool IsNullable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNullable" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsNullable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsNullable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNullable { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsNullable : bool" Usage="System.Xaml.XamlType.IsNullable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6e268-296">Получает значение, указывающее, представляет ли данный тип <see cref="T:System.Xaml.XamlType" /> тип, допускающий значение null, в соответствии с определением языка XAML.</span><span class="sxs-lookup"><span data-stu-id="6e268-296">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents a nullable type, as per the XAML definition.</span></span></summary>
        <value><span data-ttu-id="6e268-297">Значение <see langword="true" />, если данный тип <see cref="T:System.Xaml.XamlType" /> представляет тип, допускающий значение null; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6e268-297"><see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents a nullable type; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e268-298">Это свойство соответствует информационному элементу `[is nullable]` в спецификации [MS-XAML].</span><span class="sxs-lookup"><span data-stu-id="6e268-298">This property aligns to the `[is nullable]` information item in the [MS-XAML] specification.</span></span>  
  
 <span data-ttu-id="6e268-299">Если вы не используете метод внутренней среды CLR по умолчанию для <xref:System.Xaml.XamlType>, вызовы этого свойства могут вызвать переопределение <xref:System.Xaml.XamlType.LookupIsNullable%2A> для классов, производных от <xref:System.Xaml.XamlType>.</span><span class="sxs-lookup"><span data-stu-id="6e268-299">If you are not using the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupIsNullable%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPublic">
      <MemberSignature Language="C#" Value="public bool IsPublic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPublic" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsPublic" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsPublic As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPublic { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsPublic : bool" Usage="System.Xaml.XamlType.IsPublic" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6e268-300">Получает значение, указывающее, представляет ли данный тип <see cref="T:System.Xaml.XamlType" /> открытый тип в соответствующей системе типов.</span><span class="sxs-lookup"><span data-stu-id="6e268-300">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents a public type in the relevant type system.</span></span></summary>
        <value><span data-ttu-id="6e268-301">Значение <see langword="true" />, если данный тип <see cref="T:System.Xaml.XamlType" /> представляет открытый тип; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6e268-301"><see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents a public type; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e268-302">Если вы не используете метод внутренней среды CLR по умолчанию для <xref:System.Xaml.XamlType>, вызовы этого свойства могут вызвать переопределение <xref:System.Xaml.XamlType.LookupIsPublic%2A> для классов, производных от <xref:System.Xaml.XamlType>.</span><span class="sxs-lookup"><span data-stu-id="6e268-302">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupIsPublic%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="6e268-303"><xref:System.Xaml.XamlType.LookupIsPublic%2A> является виртуальным и, следовательно, может быть переопределен.</span><span class="sxs-lookup"><span data-stu-id="6e268-303"><xref:System.Xaml.XamlType.LookupIsPublic%2A> is virtual, and therefore, can be overridden.</span></span> <span data-ttu-id="6e268-304">Переопределение имеет потенциал (как для вредоносных целей, так и в других случаях) для изменения сведений о доступе к типу XAML, чтобы он больше не совпадал с системой типов и сведениями о доступе к базовому типу CLR.</span><span class="sxs-lookup"><span data-stu-id="6e268-304">The override has the potential (whether for malicious purposes or otherwise) to change the reported access information about a XAML type so that it no longer aligns in an expected way with the type system and access information of its underlying CLR type.</span></span> <span data-ttu-id="6e268-305">Для всех проверок, критических для системы безопасности операций присваивания и доступа, следует использовать базовый тип CLR.</span><span class="sxs-lookup"><span data-stu-id="6e268-305">For any security-critical checks of assignment operations and access, use the underlying CLR type instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUnknown">
      <MemberSignature Language="C#" Value="public bool IsUnknown { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsUnknown" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsUnknown" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsUnknown As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsUnknown { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsUnknown : bool" Usage="System.Xaml.XamlType.IsUnknown" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6e268-306">Получает значение, указывающее, представляет ли данный тип <see cref="T:System.Xaml.XamlType" /> тип, который не может быть разрешен в базовой системе типов.</span><span class="sxs-lookup"><span data-stu-id="6e268-306">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents a type that cannot be resolved in the underlying type system.</span></span></summary>
        <value><span data-ttu-id="6e268-307">Значение <see langword="true" />, если данный тип <see cref="T:System.Xaml.XamlType" /> представляет неразрешимый тип; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6e268-307"><see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents an unresolvable type; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e268-308">Если вы не используете метод внутренней среды CLR по умолчанию для <xref:System.Xaml.XamlType>, вызовы этого свойства могут вызвать переопределение <xref:System.Xaml.XamlType.LookupIsUnknown%2A> для классов, производных от <xref:System.Xaml.XamlType>.</span><span class="sxs-lookup"><span data-stu-id="6e268-308">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupIsUnknown%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span>  
  
 <span data-ttu-id="6e268-309">Для пути загрузки, включающего <xref:System.Xaml.XamlObjectWriter>, <xref:System.Xaml.XamlType> с `true` для <xref:System.Xaml.XamlType.IsUnknown%2A> не может быть записан в граф объектов.</span><span class="sxs-lookup"><span data-stu-id="6e268-309">For a load path that involves <xref:System.Xaml.XamlObjectWriter>, a <xref:System.Xaml.XamlType> that has `true` for <xref:System.Xaml.XamlType.IsUnknown%2A> cannot be written into an object graph.</span></span> <span data-ttu-id="6e268-310">В реализациях по умолчанию в <xref:System.Xaml> вызов <xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A?displayProperty=nameWithType> создает исключение <xref:System.Xaml.XamlObjectWriterException>, если соответствующие отчеты <xref:System.Xaml.XamlType> `true` для <xref:System.Xaml.XamlType.IsUnknown%2A>.</span><span class="sxs-lookup"><span data-stu-id="6e268-310">Under the default implementations in <xref:System.Xaml> , the <xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A?displayProperty=nameWithType> call throws a <xref:System.Xaml.XamlObjectWriterException> when the relevant <xref:System.Xaml.XamlType> reports `true` for <xref:System.Xaml.XamlType.IsUnknown%2A>.</span></span> <span data-ttu-id="6e268-311">Не следует передавать <xref:System.Xaml.XamlType> с <xref:System.Xaml.XamlType.IsUnknown%2A> как `true`, если вы не готовы обрабатывать исключения из <xref:System.Xaml.XamlObjectWriter> или у вас есть другие способы настройки поведения <xref:System.Xaml.XamlObjectWriter> или потока узлов XAML перед записью графа объекта.</span><span class="sxs-lookup"><span data-stu-id="6e268-311">You should not pass a <xref:System.Xaml.XamlType> that has <xref:System.Xaml.XamlType.IsUnknown%2A> as `true` unless you are prepared to handle the exceptions from <xref:System.Xaml.XamlObjectWriter>, or you have other ways to adjust the <xref:System.Xaml.XamlObjectWriter> behavior or the XAML node stream prior to writing the object graph.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUsableDuringInitialization">
      <MemberSignature Language="C#" Value="public bool IsUsableDuringInitialization { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsUsableDuringInitialization" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsUsableDuringInitialization" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsUsableDuringInitialization As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsUsableDuringInitialization { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsUsableDuringInitialization : bool" Usage="System.Xaml.XamlType.IsUsableDuringInitialization" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6e268-312">Получает значение, которое показывает, выполняется ли построение данного типа <see cref="T:System.Xaml.XamlType" /> сверху вниз во время инициализации XAML.</span><span class="sxs-lookup"><span data-stu-id="6e268-312">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> is built top-down during XAML initialization.</span></span></summary>
        <value><span data-ttu-id="6e268-313">Значение <see langword="true" />, если этот класс <see cref="T:System.Xaml.XamlType" /> строится сверху вниз в ходе инициализации XAML; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6e268-313"><see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> is built top-down during XAML initialization; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="6e268-314">Значение по умолчанию — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6e268-314">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e268-315">"Сверху вниз" — это метафора, которая приблизительно соответствует поведению процессора XAML при создании графа объектов.</span><span class="sxs-lookup"><span data-stu-id="6e268-315">Top-down is a metaphor that approximates XAML processor behavior when creating the object graph.</span></span> <span data-ttu-id="6e268-316">При построении сверху вниз создается экземпляр типа, прикрепляется к родительскому элементу, а затем задаются его свойства.</span><span class="sxs-lookup"><span data-stu-id="6e268-316">When built top-down, a type is instantiated, attached to the parent, and then has its properties set.</span></span> <span data-ttu-id="6e268-317">Построение сверху вниз позволяет избежать многократного вызова обработчиков, изменяющих свойства.</span><span class="sxs-lookup"><span data-stu-id="6e268-317">Top-down construction avoids invoking property-changed handlers multiple times.</span></span> <span data-ttu-id="6e268-318">Такая обработка настраивает граф объектов и, следовательно, устраняет несколько вызовов обработчика и обеспечивает оптимизацию производительности для запуска графа объекта.</span><span class="sxs-lookup"><span data-stu-id="6e268-318">Such handling ripples up the object graph and therefore, eliminates the multiple handler calls and provides a performance optimization for startup of the object graph.</span></span>  
  
 <span data-ttu-id="6e268-319">Если вы не используете метод внутренней среды CLR по умолчанию для <xref:System.Xaml.XamlType>, вызовы этого свойства могут вызвать переопределение <xref:System.Xaml.XamlType.LookupUsableDuringInitialization%2A> для классов, производных от <xref:System.Xaml.XamlType>.</span><span class="sxs-lookup"><span data-stu-id="6e268-319">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupUsableDuringInitialization%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="6e268-320">Дополнительные сведения о возвращаемых значениях и других поведении см. в документации по <xref:System.Xaml.XamlType.LookupUsableDuringInitialization%2A> для этого типа.</span><span class="sxs-lookup"><span data-stu-id="6e268-320">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupUsableDuringInitialization%2A> on this type.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Markup.XamlReader.LoadAsync(System.IO.Stream)" />
        <altmember cref="P:System.Windows.FrameworkElement.IsInitialized" />
      </Docs>
    </Member>
    <Member MemberName="IsWhitespaceSignificantCollection">
      <MemberSignature Language="C#" Value="public bool IsWhitespaceSignificantCollection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsWhitespaceSignificantCollection" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsWhitespaceSignificantCollection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsWhitespaceSignificantCollection As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsWhitespaceSignificantCollection { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsWhitespaceSignificantCollection : bool" Usage="System.Xaml.XamlType.IsWhitespaceSignificantCollection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6e268-321">Получает значение, указывающее, представляет ли данный тип <see cref="T:System.Xaml.XamlType" /> коллекцию значащих символов пробелов в соответствии с определением XML.</span><span class="sxs-lookup"><span data-stu-id="6e268-321">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents a whitespace significant collection, as per the XML definition.</span></span></summary>
        <value><span data-ttu-id="6e268-322">Значение <see langword="true" />, если этот тип <see cref="T:System.Xaml.XamlType" /> представляет коллекцию значащих символов пробелов; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6e268-322"><see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents a whitespace significant collection; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e268-323">Если вы не используете метод внутренней среды CLR по умолчанию для <xref:System.Xaml.XamlType>, вызовы этого свойства могут вызвать переопределение <xref:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection%2A> для классов, производных от <xref:System.Xaml.XamlType>.</span><span class="sxs-lookup"><span data-stu-id="6e268-323">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="6e268-324">Дополнительные сведения о возвращаемых значениях и других поведении см. в документации по <xref:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection%2A> для этого типа.</span><span class="sxs-lookup"><span data-stu-id="6e268-324">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection%2A> on this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsXData">
      <MemberSignature Language="C#" Value="public bool IsXData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsXData" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsXData" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsXData As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsXData { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsXData : bool" Usage="System.Xaml.XamlType.IsXData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6e268-325">Получает значение, указывающее, представляет ли данный тип <see cref="T:System.Xaml.XamlType" /> XML-<see langword="XDATA" /> в соответствии с определением XAML.</span><span class="sxs-lookup"><span data-stu-id="6e268-325">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents XML <see langword="XDATA" />, as per the XAML definition.</span></span></summary>
        <value><span data-ttu-id="6e268-326">Значение <see langword="true" />, если данный тип <see cref="T:System.Xaml.XamlType" /> представляет <see langword="XDATA" />; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6e268-326"><see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents <see langword="XDATA" />; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e268-327">Это свойство соответствует информационному элементу `[is xdata]` в спецификации [MS-XAML].</span><span class="sxs-lookup"><span data-stu-id="6e268-327">This property aligns to the `[is xdata]` information item in the [MS-XAML] specification.</span></span>  
  
 <span data-ttu-id="6e268-328">Если вы не используете метод внутренней среды CLR по умолчанию для <xref:System.Xaml.XamlType>, вызовы этого свойства могут вызвать переопределение <xref:System.Xaml.XamlType.LookupIsXData%2A> для классов, производных от <xref:System.Xaml.XamlType>.</span><span class="sxs-lookup"><span data-stu-id="6e268-328">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupIsXData%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="6e268-329">Дополнительные сведения о возвращаемых значениях и других поведении см. в документации по <xref:System.Xaml.XamlType.LookupIsXData%2A> для этого типа.</span><span class="sxs-lookup"><span data-stu-id="6e268-329">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupIsXData%2A> on this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemType">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlType ItemType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlType ItemType" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.ItemType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ItemType As XamlType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::XamlType ^ ItemType { System::Xaml::XamlType ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ItemType : System.Xaml.XamlType" Usage="System.Xaml.XamlType.ItemType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6e268-330">Получает значение, предоставляющее сведения о типе для свойства <see langword="Items" /> данного типа <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="6e268-330">Gets a value that provides the type information for the <see langword="Items" /> property of this <see cref="T:System.Xaml.XamlType" />.</span></span></summary>
        <value><span data-ttu-id="6e268-331">Объект <see cref="T:System.Xaml.XamlType" /> для типа элементов в коллекции или значение <see langword="null" />, если данный тип <see cref="T:System.Xaml.XamlType" /> не представляет коллекцию.</span><span class="sxs-lookup"><span data-stu-id="6e268-331">A <see cref="T:System.Xaml.XamlType" /> object for the type of the items in the collection; otherwise, <see langword="null" />, if this <see cref="T:System.Xaml.XamlType" /> does not represent a collection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e268-332">Это свойство имеет значение, только если этот <xref:System.Xaml.XamlType> представляет коллекцию (<xref:System.Xaml.XamlType.IsCollection%2A> — `true`).</span><span class="sxs-lookup"><span data-stu-id="6e268-332">This property is only relevant if this <xref:System.Xaml.XamlType> represents a collection (<xref:System.Xaml.XamlType.IsCollection%2A> is `true`).</span></span> <span data-ttu-id="6e268-333">Свойство `Items` — это любое свойство, содержащее элементы в этом типе коллекции или массива.</span><span class="sxs-lookup"><span data-stu-id="6e268-333">The `Items` property is whatever property holds items in that type of collection or array.</span></span>  
  
 <span data-ttu-id="6e268-334">Если вы не используете метод внутренней среды CLR по умолчанию для <xref:System.Xaml.XamlType>, вызовы этого свойства могут вызвать переопределение <xref:System.Xaml.XamlType.LookupItemType%2A> для классов, производных от <xref:System.Xaml.XamlType>.</span><span class="sxs-lookup"><span data-stu-id="6e268-334">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupItemType%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="6e268-335">Дополнительные сведения о возвращаемых значениях и других поведении см. в документации по <xref:System.Xaml.XamlType.LookupItemType%2A> для этого типа.</span><span class="sxs-lookup"><span data-stu-id="6e268-335">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupItemType%2A> on this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyType">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlType KeyType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlType KeyType" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.KeyType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property KeyType As XamlType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::XamlType ^ KeyType { System::Xaml::XamlType ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.KeyType : System.Xaml.XamlType" Usage="System.Xaml.XamlType.KeyType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6e268-336">Получает значение, предоставляющее сведения о типе для свойства ключа данного типа <see cref="T:System.Xaml.XamlType" />, если данный тип <see cref="T:System.Xaml.XamlType" /> представляет словарь.</span><span class="sxs-lookup"><span data-stu-id="6e268-336">Gets a value that provides the type information for the key property of this <see cref="T:System.Xaml.XamlType" />, if the <see cref="T:System.Xaml.XamlType" /> represents a dictionary.</span></span></summary>
        <value><span data-ttu-id="6e268-337">Объект <see cref="T:System.Xaml.XamlType" /> для типа ключа для использования словаря или значение <see langword="null" />, если данный тип <see cref="T:System.Xaml.XamlType" /> не представляет словарь.</span><span class="sxs-lookup"><span data-stu-id="6e268-337">A <see cref="T:System.Xaml.XamlType" /> object for the type of the key for dictionary usage, otherwise, <see langword="null" />, if this <see cref="T:System.Xaml.XamlType" /> does not represent a dictionary.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e268-338">Это свойство уместно, только если этот <xref:System.Xaml.XamlType> представляет словарь (<xref:System.Xaml.XamlType.IsDictionary%2A> — `true`).</span><span class="sxs-lookup"><span data-stu-id="6e268-338">This property is only relevant if this <xref:System.Xaml.XamlType> represents a dictionary (<xref:System.Xaml.XamlType.IsDictionary%2A> is `true`).</span></span>  
  
 <span data-ttu-id="6e268-339">Если вы не используете метод внутренней среды CLR по умолчанию для <xref:System.Xaml.XamlType>, вызовы этого свойства могут вызвать переопределение <xref:System.Xaml.XamlType.LookupKeyType%2A> для классов, производных от <xref:System.Xaml.XamlType>.</span><span class="sxs-lookup"><span data-stu-id="6e268-339">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupKeyType%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="6e268-340">Дополнительные сведения о возвращаемых значениях и других поведении см. в документации по <xref:System.Xaml.XamlType.LookupKeyType%2A> для этого типа.</span><span class="sxs-lookup"><span data-stu-id="6e268-340">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupKeyType%2A> on this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupAliasedProperty">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.XamlMember LookupAliasedProperty (System.Xaml.XamlDirective directive);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.XamlMember LookupAliasedProperty(class System.Xaml.XamlDirective directive) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupAliasedProperty(System.Xaml.XamlDirective)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupAliasedProperty (directive As XamlDirective) As XamlMember" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::XamlMember ^ LookupAliasedProperty(System::Xaml::XamlDirective ^ directive);" />
      <MemberSignature Language="F#" Value="abstract member LookupAliasedProperty : System.Xaml.XamlDirective -&gt; System.Xaml.XamlMember&#xA;override this.LookupAliasedProperty : System.Xaml.XamlDirective -&gt; System.Xaml.XamlMember" Usage="xamlType.LookupAliasedProperty directive" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlMember</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="directive" Type="System.Xaml.XamlDirective" />
      </Parameters>
      <Docs>
        <param name="directive"><span data-ttu-id="6e268-341">Директива, для которой требуется найти член с псевдонимом.</span><span class="sxs-lookup"><span data-stu-id="6e268-341">The directive for which to find the aliased member.</span></span></param>
        <summary><span data-ttu-id="6e268-342">Возвращает элемент XAML, который связан псевдонимом с директивой XAML посредством данного типа <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="6e268-342">Returns the XAML member that is aliased to a XAML directive by this <see cref="T:System.Xaml.XamlType" />.</span></span></summary>
        <returns><span data-ttu-id="6e268-343">Член с псевдонимом, если он найден; в противном случае — значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6e268-343">The aliased member, if found; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e268-344">Этот метод может быть вызван, когда вызывающий объект получает значение из <xref:System.Xaml.XamlType.GetAliasedProperty%2A>.</span><span class="sxs-lookup"><span data-stu-id="6e268-344">This method can be invoked when a caller gets a value from <xref:System.Xaml.XamlType.GetAliasedProperty%2A>.</span></span>  
  
 <span data-ttu-id="6e268-345">Реализация по умолчанию может возвращать результаты для следующих директив XAML: `Key`; `Name`; `Uid`; и `xml:lang`.</span><span class="sxs-lookup"><span data-stu-id="6e268-345">The default implementation can return results for the following XAML directives: `Key`; `Name`; `Uid`; and `xml:lang`.</span></span> <span data-ttu-id="6e268-346">Значения для этих параметров зависят от базового отражения и по-прежнему могут возвращать `null`, если не найдено свойство Alias.</span><span class="sxs-lookup"><span data-stu-id="6e268-346">Values for these depend on underlying reflection and might still return `null` if no aliased property is found.</span></span>  
  
 <span data-ttu-id="6e268-347">Переопределите этот метод, если вы не полагаетесь на внутреннее отражение CLR по умолчанию и используете метаданные или другие методы для создания отчетов о системе типов XAML или сведения о схеме типа.</span><span class="sxs-lookup"><span data-stu-id="6e268-347">Override this method if you are not relying on default internal CLR reflection and are using metadata or other techniques for reporting the XAML type system information or the schema information of a type.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xaml.XamlDirective" />
        <altmember cref="T:System.Xaml.XamlLanguage" />
      </Docs>
    </Member>
    <Member MemberName="LookupAllAttachableMembers">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IEnumerable&lt;System.Xaml.XamlMember&gt; LookupAllAttachableMembers ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Xaml.XamlMember&gt; LookupAllAttachableMembers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupAllAttachableMembers" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupAllAttachableMembers () As IEnumerable(Of XamlMember)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::Generic::IEnumerable&lt;System::Xaml::XamlMember ^&gt; ^ LookupAllAttachableMembers();" />
      <MemberSignature Language="F#" Value="abstract member LookupAllAttachableMembers : unit -&gt; seq&lt;System.Xaml.XamlMember&gt;&#xA;override this.LookupAllAttachableMembers : unit -&gt; seq&lt;System.Xaml.XamlMember&gt;" Usage="xamlType.LookupAllAttachableMembers " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Xaml.XamlMember&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6e268-348">Возвращает перечисляемый набор, содержащий все присоединяемые свойства, которые предоставляются данным классом <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="6e268-348">Returns an enumerable set that contains all attachable properties that are exposed by this <see cref="T:System.Xaml.XamlType" />.</span></span></summary>
        <returns><span data-ttu-id="6e268-349">Перечисляемый набор, содержащий ноль или более значений <see cref="T:System.Xaml.XamlMember" />, или значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6e268-349">An enumerable set that contains zero or more <see cref="T:System.Xaml.XamlMember" /> values; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e268-350">Этот метод может быть вызван, когда вызывающий объект получает значение из <xref:System.Xaml.XamlType.GetAllAttachableMembers%2A>.</span><span class="sxs-lookup"><span data-stu-id="6e268-350">This method can be invoked when a caller gets a value from <xref:System.Xaml.XamlType.GetAllAttachableMembers%2A>.</span></span>  
  
 <span data-ttu-id="6e268-351">Хотя <xref:System.Xaml.XamlType.GetAllAttachableMembers%2A> возвращает универсальную коллекцию, этот метод `Lookup` возвращает универсальный перечислимый набор.</span><span class="sxs-lookup"><span data-stu-id="6e268-351">Although <xref:System.Xaml.XamlType.GetAllAttachableMembers%2A> returns a generic collection, this `Lookup` method returns a generic enumerable set.</span></span>  
  
 <span data-ttu-id="6e268-352">Реализация по умолчанию использует внутреннее отражение CLR.</span><span class="sxs-lookup"><span data-stu-id="6e268-352">The default implementation uses the internal CLR reflection.</span></span> <span data-ttu-id="6e268-353">Если <xref:System.Xaml.XamlType.UnderlyingType%2A> равно `null`, реализация по умолчанию может использовать <xref:System.Xaml.XamlType.BaseType%2A>, если она доступна.</span><span class="sxs-lookup"><span data-stu-id="6e268-353">When <xref:System.Xaml.XamlType.UnderlyingType%2A> is `null`, the default implementation can use <xref:System.Xaml.XamlType.BaseType%2A>, if it is available.</span></span> <span data-ttu-id="6e268-354">Это поведение вызывает <xref:System.Xaml.XamlType.LookupAllAttachableMembers%2A> рекурсивно, чтобы попытаться найти допустимый базовый тип, и возвращает значение `null`, если допустимый базовый тип не существует.</span><span class="sxs-lookup"><span data-stu-id="6e268-354">This behavior calls <xref:System.Xaml.XamlType.LookupAllAttachableMembers%2A> recursively to attempt to find a valid base type and returns `null` if no valid base type exists.</span></span>  
  
 <span data-ttu-id="6e268-355">Переопределите этот метод, если вы не полагаетесь на внутреннее отражение CLR по умолчанию и используете метаданные или другие методы для создания отчетов о системе типов XAML или сведениях о схеме типа.</span><span class="sxs-lookup"><span data-stu-id="6e268-355">Override this method if you are not relying on default internal CLR reflection and are using metadata or other techniques for reporting the XAML type system information or schema information of a type.</span></span> <span data-ttu-id="6e268-356">Возвращаемое значение null должно быть зарезервировано для случаев, когда сведения не могут быть определены из-за отсутствия поддержки системы типов или отражения.</span><span class="sxs-lookup"><span data-stu-id="6e268-356">A null return should be reserved for cases where information cannot be determined because of lack of type system or reflection support.</span></span> <span data-ttu-id="6e268-357">Если тип является допустимым, а отражение или другие методы доступны, но тип не имеет присоединяемых членов, вместо этого следует возвращать пустой набор <xref:System.Collections.Generic.IEnumerable%601>.</span><span class="sxs-lookup"><span data-stu-id="6e268-357">If a type is valid and reflection or other techniques are available, but a type does not have attachable members, you should instead return an empty <xref:System.Collections.Generic.IEnumerable%601> set.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupAllMembers">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IEnumerable&lt;System.Xaml.XamlMember&gt; LookupAllMembers ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Xaml.XamlMember&gt; LookupAllMembers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupAllMembers" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupAllMembers () As IEnumerable(Of XamlMember)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::Generic::IEnumerable&lt;System::Xaml::XamlMember ^&gt; ^ LookupAllMembers();" />
      <MemberSignature Language="F#" Value="abstract member LookupAllMembers : unit -&gt; seq&lt;System.Xaml.XamlMember&gt;&#xA;override this.LookupAllMembers : unit -&gt; seq&lt;System.Xaml.XamlMember&gt;" Usage="xamlType.LookupAllMembers " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Xaml.XamlMember&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6e268-358">Возвращает перечисляемый набор, содержащий все члены, предоставляемые данным классом <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="6e268-358">Returns an enumerable set that contains all the members that are exposed by this <see cref="T:System.Xaml.XamlType" />.</span></span></summary>
        <returns><span data-ttu-id="6e268-359">Перечисляемый набор, содержащий ноль или более значений <see cref="T:System.Xaml.XamlMember" />.</span><span class="sxs-lookup"><span data-stu-id="6e268-359">An enumerable set that contains zero or more <see cref="T:System.Xaml.XamlMember" /> values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e268-360">Этот метод может быть вызван, когда вызывающий объект получает значение из <xref:System.Xaml.XamlType.GetAllMembers%2A>.</span><span class="sxs-lookup"><span data-stu-id="6e268-360">This method can be invoked when a caller gets a value from <xref:System.Xaml.XamlType.GetAllMembers%2A>.</span></span>  
  
 <span data-ttu-id="6e268-361">Хотя <xref:System.Xaml.XamlType.GetAllMembers%2A> возвращает универсальную коллекцию, этот метод `Lookup` возвращает универсальный перечислимый набор.</span><span class="sxs-lookup"><span data-stu-id="6e268-361">Although <xref:System.Xaml.XamlType.GetAllMembers%2A> returns a generic collection, this `Lookup` method returns a generic enumerable set.</span></span>  
  
 <span data-ttu-id="6e268-362">Реализация по умолчанию использует внутреннее отражение CLR.</span><span class="sxs-lookup"><span data-stu-id="6e268-362">The default implementation uses the internal CLR reflection.</span></span> <span data-ttu-id="6e268-363">В случаях, когда <xref:System.Xaml.XamlType.UnderlyingType%2A> имеет значение `null`, реализация по умолчанию может использовать <xref:System.Xaml.XamlType.BaseType%2A>, если она доступна.</span><span class="sxs-lookup"><span data-stu-id="6e268-363">For cases where <xref:System.Xaml.XamlType.UnderlyingType%2A> is `null`, the default implementation can use <xref:System.Xaml.XamlType.BaseType%2A>, if it is available.</span></span> <span data-ttu-id="6e268-364">Это поведение вызывает <xref:System.Xaml.XamlType.LookupAllMembers%2A> рекурсивно, чтобы попытаться найти допустимый базовый тип, и возвращает значение `null`, если допустимый базовый тип не существует.</span><span class="sxs-lookup"><span data-stu-id="6e268-364">This behavior calls <xref:System.Xaml.XamlType.LookupAllMembers%2A> recursively to attempt to find a valid base type, and returns `null` if no valid base type exists.</span></span>  
  
 <span data-ttu-id="6e268-365">Переопределите этот метод, если вы не полагаетесь на внутреннее отражение CLR по умолчанию и используете метаданные или другие методы для создания отчетов о системе типов XAML или сведениях о схеме типа.</span><span class="sxs-lookup"><span data-stu-id="6e268-365">Override this method if you are not relying on default internal CLR reflection and are using metadata or other techniques for reporting the XAML type system information or schema information of a type.</span></span> <span data-ttu-id="6e268-366">Возвращаемое значение null должно быть зарезервировано для случаев, когда сведения не могут быть определены из-за отсутствия поддержки системы типов или отражения.</span><span class="sxs-lookup"><span data-stu-id="6e268-366">A null return should be reserved for cases where information cannot be determined because of lack of type system or reflection support.</span></span> <span data-ttu-id="6e268-367">Если тип является допустимым, становятся доступны отражение или другие методы. Если у типа нет членов, вместо него следует возвращать пустой набор <xref:System.Collections.Generic.IEnumerable%601>.</span><span class="sxs-lookup"><span data-stu-id="6e268-367">If a type is valid, reflection or other techniques are available; if a type does not have members, you should instead return an empty <xref:System.Collections.Generic.IEnumerable%601> set.</span></span>  
  
 <span data-ttu-id="6e268-368">Возвращаемые значения для <xref:System.Xaml.XamlType.LookupAllMembers%2A> и <xref:System.Xaml.XamlType.LookupAllAttachableMembers%2A> должны быть взаимоисключающими.</span><span class="sxs-lookup"><span data-stu-id="6e268-368">Return values for <xref:System.Xaml.XamlType.LookupAllMembers%2A> and <xref:System.Xaml.XamlType.LookupAllAttachableMembers%2A> should be mutually exclusive.</span></span> <span data-ttu-id="6e268-369">Если у вас есть ситуация, когда свойство системы резервного типа может поддерживать стандартное использование экземпляра, а также присоединяемое использование, этот элемент должен быть передан как два разных значения <xref:System.Xaml.XamlMember>, причем одно значение появляется в присоединяемом списке, а другое — в элементе список стандартных членов.</span><span class="sxs-lookup"><span data-stu-id="6e268-369">If you have a situation where a backing type system property can support a standard instance usage as well as an attachable usage, that member should be reported as two different <xref:System.Xaml.XamlMember> values, with one value appearing in the attachable list and another in the standard members list.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupAllowedContentTypes">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt; LookupAllowedContentTypes ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class System.Xaml.XamlType&gt; LookupAllowedContentTypes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupAllowedContentTypes" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupAllowedContentTypes () As IList(Of XamlType)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::Generic::IList&lt;System::Xaml::XamlType ^&gt; ^ LookupAllowedContentTypes();" />
      <MemberSignature Language="F#" Value="abstract member LookupAllowedContentTypes : unit -&gt; System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;&#xA;override this.LookupAllowedContentTypes : unit -&gt; System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;" Usage="xamlType.LookupAllowedContentTypes " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6e268-370">Возвращает список типов, которые могут использоваться в качестве значения <see cref="P:System.Xaml.XamlType.ContentProperty" /> для данного типа <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="6e268-370">Returns a list of the types that are usable as the <see cref="P:System.Xaml.XamlType.ContentProperty" /> value for this <see cref="T:System.Xaml.XamlType" />.</span></span></summary>
        <returns><span data-ttu-id="6e268-371">Список возможных типов содержимого.</span><span class="sxs-lookup"><span data-stu-id="6e268-371">A list of possible content types.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e268-372">Этот метод может быть вызван, когда вызывающий объект получает значение из <xref:System.Xaml.XamlType.AllowedContentTypes%2A>.</span><span class="sxs-lookup"><span data-stu-id="6e268-372">This method can be invoked when a caller gets a value from <xref:System.Xaml.XamlType.AllowedContentTypes%2A>.</span></span>  
  
 <span data-ttu-id="6e268-373">Типы, которые оцениваются как <xref:System.Xaml.XamlType.CanAssignTo%2A> для определенного типа содержимого, не считаются несколькими типами в целях <xref:System.Xaml.XamlType.AllowedContentTypes%2A>.</span><span class="sxs-lookup"><span data-stu-id="6e268-373">Types that evaluate as <xref:System.Xaml.XamlType.CanAssignTo%2A> for a specific content type are not considered multiple types for purposes of <xref:System.Xaml.XamlType.AllowedContentTypes%2A>.</span></span>  
  
 <span data-ttu-id="6e268-374">Реализация по умолчанию может использовать другие свойства <xref:System.Xaml.XamlType> (<xref:System.Xaml.XamlType.ContentWrappers%2A>, <xref:System.Xaml.XamlType.ContentProperty%2A> или <xref:System.Xaml.XamlType.ItemType%2A>) для получения результата.</span><span class="sxs-lookup"><span data-stu-id="6e268-374">The default implementation can use other properties of <xref:System.Xaml.XamlType> (<xref:System.Xaml.XamlType.ContentWrappers%2A>, <xref:System.Xaml.XamlType.ContentProperty%2A>, or <xref:System.Xaml.XamlType.ItemType%2A>) to obtain a result.</span></span> <span data-ttu-id="6e268-375">В этом определении также можно вызвать переопределения `Lookup` для предыдущего списка свойств.</span><span class="sxs-lookup"><span data-stu-id="6e268-375">The `Lookup` overrides for the preceding property list can also be invoked in this determination.</span></span>  
  
 <span data-ttu-id="6e268-376">Переопределите этот метод, если вы не полагаетесь на внутреннее отражение CLR по умолчанию и используете метаданные или другие методы для создания отчетов о системе типов XAML или сведениях о схеме типа.</span><span class="sxs-lookup"><span data-stu-id="6e268-376">Override this method if you are not relying on default internal CLR reflection and are using metadata or other techniques for reporting the XAML type system information or schema information of a type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupAttachableMember">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.XamlMember LookupAttachableMember (string name);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.XamlMember LookupAttachableMember(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupAttachableMember(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupAttachableMember (name As String) As XamlMember" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::XamlMember ^ LookupAttachableMember(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member LookupAttachableMember : string -&gt; System.Xaml.XamlMember&#xA;override this.LookupAttachableMember : string -&gt; System.Xaml.XamlMember" Usage="xamlType.LookupAttachableMember name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlMember</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="6e268-377">Имя присоединяемого элемента в следующем формате: <c>ownerTypeName.MemberName</c>.</span><span class="sxs-lookup"><span data-stu-id="6e268-377">The name of the attachable member to get, in <c>ownerTypeName.MemberName</c> form.</span></span></param>
        <summary><span data-ttu-id="6e268-378">Возвращает <see cref="T:System.Xaml.XamlMember" /> для конкретного именованного присоединяемого элемента из этого <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="6e268-378">Returns a <see cref="T:System.Xaml.XamlMember" /> for a specific named attachable from this <see cref="T:System.Xaml.XamlType" />.</span></span></summary>
        <returns><span data-ttu-id="6e268-379">Объект <see cref="T:System.Xaml.XamlMember" /> для запрошенного присоединяемого элемента или значение <see langword="null" />, если присоединяемого элемента с таким именем не существует.</span><span class="sxs-lookup"><span data-stu-id="6e268-379">A <see cref="T:System.Xaml.XamlMember" /> object for the requested attachable member; otherwise, <see langword="null" />, if no attachable member by that name exists.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e268-380">Этот метод может быть вызван, когда вызывающий объект получает значение из <xref:System.Xaml.XamlType.GetAttachableMember%2A>.</span><span class="sxs-lookup"><span data-stu-id="6e268-380">This method can be invoked when a caller gets a value from <xref:System.Xaml.XamlType.GetAttachableMember%2A>.</span></span>  
  
 <span data-ttu-id="6e268-381">Реализация по умолчанию использует внутреннее отражение CLR.</span><span class="sxs-lookup"><span data-stu-id="6e268-381">The default implementation uses the internal CLR reflection.</span></span> <span data-ttu-id="6e268-382">Если <xref:System.Xaml.XamlType.UnderlyingType%2A> равно `null`, реализация по умолчанию может использовать <xref:System.Xaml.XamlType.BaseType%2A>, если она доступна.</span><span class="sxs-lookup"><span data-stu-id="6e268-382">When <xref:System.Xaml.XamlType.UnderlyingType%2A> is `null`, the default implementation can use <xref:System.Xaml.XamlType.BaseType%2A>, if it is available.</span></span> <span data-ttu-id="6e268-383">Это поведение вызывает <xref:System.Xaml.XamlType.LookupAttachableMember%2A> рекурсивно, чтобы попытаться найти допустимый базовый тип, и возвращает значение `null`, если допустимый базовый тип не существует.</span><span class="sxs-lookup"><span data-stu-id="6e268-383">This behavior calls <xref:System.Xaml.XamlType.LookupAttachableMember%2A> recursively to attempt to find a valid base type and returns `null` if no valid base type exists.</span></span>  
  
 <span data-ttu-id="6e268-384">Переопределите этот метод, если вы не полагаетесь на внутреннее отражение CLR по умолчанию и используете метаданные или другие методы для создания отчетов о системе типов XAML или сведениях о схеме типа.</span><span class="sxs-lookup"><span data-stu-id="6e268-384">Override this method if you are not relying on default internal CLR reflection and are using metadata or other techniques for reporting the XAML type system information or schema information of a type.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="6e268-385"><xref:System.Xaml.XamlType.LookupAttachableMember%2A> является виртуальным и, следовательно, может быть переопределен.</span><span class="sxs-lookup"><span data-stu-id="6e268-385"><xref:System.Xaml.XamlType.LookupAttachableMember%2A> is virtual, and therefore, can be overridden.</span></span> <span data-ttu-id="6e268-386">Переопределение имеет потенциал (как для вредоносных целей, так и других) для изменения сообщаемых элементов типа XAML, чтобы они больше не выдавались ожидаемым образом с <xref:System.ComponentModel.TypeDescriptor> `Get*` сведениями о базовом типе CLR.</span><span class="sxs-lookup"><span data-stu-id="6e268-386">The override has the potential (whether for malicious purposes or otherwise) to change the reported members of a XAML type so that they no longer align in an expected way with the <xref:System.ComponentModel.TypeDescriptor> `Get*` information about the underlying CLR type.</span></span> <span data-ttu-id="6e268-387">Для всех проверок, критических с точки зрения безопасности, для отчетов о членах следует использовать базовый тип CLR.</span><span class="sxs-lookup"><span data-stu-id="6e268-387">For any security-critical checks of member reporting, use the underlying CLR type instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupBaseType">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.XamlType LookupBaseType ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.XamlType LookupBaseType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupBaseType" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupBaseType () As XamlType" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::XamlType ^ LookupBaseType();" />
      <MemberSignature Language="F#" Value="abstract member LookupBaseType : unit -&gt; System.Xaml.XamlType&#xA;override this.LookupBaseType : unit -&gt; System.Xaml.XamlType" Usage="xamlType.LookupBaseType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6e268-388">Возвращает объект <see cref="T:System.Xaml.XamlType" /> для непосредственного базового типа данного типа XAML.</span><span class="sxs-lookup"><span data-stu-id="6e268-388">Returns the <see cref="T:System.Xaml.XamlType" /> for the immediate base type of this XAML type.</span></span> <span data-ttu-id="6e268-389">Определение этого значения основано на базовом типе данного типа <see cref="T:System.Xaml.XamlType" /> и контексте схемы.</span><span class="sxs-lookup"><span data-stu-id="6e268-389">Determination of this value is based on the underlying type of this <see cref="T:System.Xaml.XamlType" /> and schema context.</span></span></summary>
        <returns><span data-ttu-id="6e268-390">Тип <see cref="T:System.Xaml.XamlType" /> для непосредственного базового типа данного типа XAML.</span><span class="sxs-lookup"><span data-stu-id="6e268-390">The <see cref="T:System.Xaml.XamlType" /> for the immediate base type of this XAML type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e268-391">Этот метод может быть вызван, когда вызывающий объект получает значение из <xref:System.Xaml.XamlType.BaseType%2A>.</span><span class="sxs-lookup"><span data-stu-id="6e268-391">This method can be invoked when a caller gets a value from <xref:System.Xaml.XamlType.BaseType%2A>.</span></span>  
  
 <span data-ttu-id="6e268-392">Реализация по умолчанию может возвращать внутреннюю константу, представляющую <xref:System.Object>, если <xref:System.Xaml.XamlType.UnderlyingType%2A> — `null`.</span><span class="sxs-lookup"><span data-stu-id="6e268-392">The default implementation might return an internal constant that represents the <xref:System.Object> if <xref:System.Xaml.XamlType.UnderlyingType%2A> is `null`.</span></span>  
  
 <span data-ttu-id="6e268-393">Переопределите этот метод, если вы не полагаетесь на внутреннее отражение CLR по умолчанию и используете метаданные или другие методы для создания отчетов о системе типов XAML или сведениях о схеме типа.</span><span class="sxs-lookup"><span data-stu-id="6e268-393">Override this method if you are not relying on default internal CLR reflection and are using metadata or other techniques for reporting the XAML type system information or schema information of a type.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="6e268-394"><xref:System.Xaml.XamlType.LookupBaseType%2A> является виртуальным и, следовательно, может быть переопределен.</span><span class="sxs-lookup"><span data-stu-id="6e268-394"><xref:System.Xaml.XamlType.LookupBaseType%2A> is virtual, and therefore, can be overridden.</span></span> <span data-ttu-id="6e268-395">Переопределение имеет потенциал (как для вредоносных целей, так и других) для изменения сообщаемых типов данных о типе XAML, чтобы он больше не совпадал с данными системы типов базового типа CLR.</span><span class="sxs-lookup"><span data-stu-id="6e268-395">The override has the potential (whether for malicious purposes or otherwise) to change the reported type information about a XAML type so that it no longer aligns in an expected way with the type system information of its underlying CLR type.</span></span> <span data-ttu-id="6e268-396">Для всех проверок, критических для системы безопасности операций присваивания и доступа, следует использовать базовый тип CLR.</span><span class="sxs-lookup"><span data-stu-id="6e268-396">For any security-critical checks of assignment operations and access, use the underlying CLR type instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupCollectionKind">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.Schema.XamlCollectionKind LookupCollectionKind ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance valuetype System.Xaml.Schema.XamlCollectionKind LookupCollectionKind() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupCollectionKind" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupCollectionKind () As XamlCollectionKind" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::Schema::XamlCollectionKind LookupCollectionKind();" />
      <MemberSignature Language="F#" Value="abstract member LookupCollectionKind : unit -&gt; System.Xaml.Schema.XamlCollectionKind&#xA;override this.LookupCollectionKind : unit -&gt; System.Xaml.Schema.XamlCollectionKind" Usage="xamlType.LookupCollectionKind " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlCollectionKind</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6e268-397">Возвращает значение перечисления <see cref="T:System.Xaml.Schema.XamlCollectionKind" />, объявляющее, какой конкретный тип коллекции используется этим типом <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="6e268-397">Returns a value of the <see cref="T:System.Xaml.Schema.XamlCollectionKind" /> enumeration that declares which specific collection type this <see cref="T:System.Xaml.XamlType" /> uses.</span></span></summary>
        <returns><span data-ttu-id="6e268-398">Значение перечисления <see cref="T:System.Xaml.Schema.XamlCollectionKind" />.</span><span class="sxs-lookup"><span data-stu-id="6e268-398">A value of the <see cref="T:System.Xaml.Schema.XamlCollectionKind" /> enumeration.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e268-399">Этот метод вызывается внутренним закрытым методом (в <xref:System.Xaml.XamlType> не существует общедоступного `CollectionKind` или `GetCollectionKind` API).</span><span class="sxs-lookup"><span data-stu-id="6e268-399">This method is invoked by an internal private method (no public `CollectionKind` or `GetCollectionKind` API exists on <xref:System.Xaml.XamlType>).</span></span>  
  
 <span data-ttu-id="6e268-400">Реализация по умолчанию использует внутреннее отражение CLR.</span><span class="sxs-lookup"><span data-stu-id="6e268-400">The default implementation uses the internal CLR reflection.</span></span> <span data-ttu-id="6e268-401">В случаях, когда <xref:System.Xaml.XamlType.UnderlyingType%2A> имеет значение `null`, реализация по умолчанию может использовать <xref:System.Xaml.XamlType.BaseType%2A>, если она доступна.</span><span class="sxs-lookup"><span data-stu-id="6e268-401">For cases where <xref:System.Xaml.XamlType.UnderlyingType%2A> is `null`, the default implementation can use <xref:System.Xaml.XamlType.BaseType%2A>, if it is available.</span></span> <span data-ttu-id="6e268-402">Это поведение косвенно вызывает <xref:System.Xaml.XamlType.LookupCollectionKind%2A> рекурсивно, чтобы попытаться найти допустимый базовый тип. Он возвращает <xref:System.Xaml.Schema.XamlCollectionKind.None?displayProperty=nameWithType>, если допустимый базовый тип не существует.</span><span class="sxs-lookup"><span data-stu-id="6e268-402">This behavior indirectly calls <xref:System.Xaml.XamlType.LookupCollectionKind%2A> recursively to attempt to find a valid base type; it returns <xref:System.Xaml.Schema.XamlCollectionKind.None?displayProperty=nameWithType> if no valid base type exists.</span></span> <span data-ttu-id="6e268-403">Как правило, реализация по умолчанию пытается найти метод `Add` базового типа путем отражения.</span><span class="sxs-lookup"><span data-stu-id="6e268-403">In general, the default implementation attempts to find the `Add` method of the underlying type by reflection.</span></span> <span data-ttu-id="6e268-404">Если объект найден, <xref:System.Reflection.MethodInfo> метода `Add` представляет собой достаточно информации, чтобы определить, какое значение <xref:System.Xaml.Schema.XamlCollectionKind> должно возвращаться.</span><span class="sxs-lookup"><span data-stu-id="6e268-404">If found, the <xref:System.Reflection.MethodInfo> of the `Add` method is enough information to determine which <xref:System.Xaml.Schema.XamlCollectionKind> value should be returned.</span></span> <span data-ttu-id="6e268-405">В противном случае она возвращает <xref:System.Xaml.Schema.XamlCollectionKind.None?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="6e268-405">Otherwise, it returns <xref:System.Xaml.Schema.XamlCollectionKind.None?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="6e268-406">Переопределите этот метод, если вы не полагаетесь на внутреннее отражение CLR по умолчанию и используете метаданные или другие методы для создания отчетов о системе типов XAML или сведениях о схеме типа.</span><span class="sxs-lookup"><span data-stu-id="6e268-406">Override this method if you are not relying on default internal CLR reflection and are using metadata or other techniques for reporting the XAML type system information or schema information of a type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupConstructionRequiresArguments">
      <MemberSignature Language="C#" Value="protected virtual bool LookupConstructionRequiresArguments ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupConstructionRequiresArguments() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupConstructionRequiresArguments" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupConstructionRequiresArguments () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupConstructionRequiresArguments();" />
      <MemberSignature Language="F#" Value="abstract member LookupConstructionRequiresArguments : unit -&gt; bool&#xA;override this.LookupConstructionRequiresArguments : unit -&gt; bool" Usage="xamlType.LookupConstructionRequiresArguments " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6e268-407">Возвращает значение, указывающее, должен ли этот класс <see cref="T:System.Xaml.XamlType" /> иметь аргументы (универсальные ограничения с помощью <see langword="x:TypeArguments" />, текст инициализации или другие технологии языка XAML) для создания допустимого экземпляра этого типа.</span><span class="sxs-lookup"><span data-stu-id="6e268-407">Returns a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> must have arguments (generic constraints through <see langword="x:TypeArguments" />, initialization text, or other XAML techniques) to construct a valid instance of the type.</span></span></summary>
        <returns><span data-ttu-id="6e268-408">Значение <see langword="true" />, если для создания экземпляра требуется некоторое значение аргумента; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6e268-408"><see langword="true" /> if construction of an instance requires some argument value; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e268-409">Этот метод может быть вызван, когда вызывающий объект получает значение из <xref:System.Xaml.XamlType.ConstructionRequiresArguments%2A>.</span><span class="sxs-lookup"><span data-stu-id="6e268-409">This method can be invoked when a caller gets a value from <xref:System.Xaml.XamlType.ConstructionRequiresArguments%2A>.</span></span>  
  
 <span data-ttu-id="6e268-410">Реализация по умолчанию возвращает `false` для типов, которые считаются типами значений в системе типов CLR.</span><span class="sxs-lookup"><span data-stu-id="6e268-410">The default implementation returns `false` for types considered value types in the CLR type system.</span></span> <span data-ttu-id="6e268-411">Для других типов значений используется отражение CLR <xref:System.Reflection.ConstructorInfo>, чтобы определить, существует ли конструктор без параметров.</span><span class="sxs-lookup"><span data-stu-id="6e268-411">For other than value types, CLR reflection <xref:System.Reflection.ConstructorInfo> is used to determine whether a parameterless constructor exists.</span></span>  
  
 <span data-ttu-id="6e268-412">Переопределите этот метод, если вы не полагаетесь на внутреннее отражение CLR по умолчанию и используете метаданные или другие методы для создания отчетов о системе типов XAML или сведениях о схеме типа.</span><span class="sxs-lookup"><span data-stu-id="6e268-412">Override this method if you are not relying on default internal CLR reflection and are using metadata or other techniques for reporting the XAML type system information or schema information of a type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupContentProperty">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.XamlMember LookupContentProperty ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.XamlMember LookupContentProperty() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupContentProperty" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupContentProperty () As XamlMember" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::XamlMember ^ LookupContentProperty();" />
      <MemberSignature Language="F#" Value="abstract member LookupContentProperty : unit -&gt; System.Xaml.XamlMember&#xA;override this.LookupContentProperty : unit -&gt; System.Xaml.XamlMember" Usage="xamlType.LookupContentProperty " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlMember</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6e268-413">Возвращает сведения <see cref="T:System.Xaml.XamlMember" /> для свойства содержимого этого класса <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="6e268-413">Returns <see cref="T:System.Xaml.XamlMember" /> information for the content property of this <see cref="T:System.Xaml.XamlType" />.</span></span></summary>
        <returns><span data-ttu-id="6e268-414">Сведения <see cref="T:System.Xaml.XamlMember" /> для свойства содержимого данного типа <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="6e268-414"><see cref="T:System.Xaml.XamlMember" /> information for the content property of this <see cref="T:System.Xaml.XamlType" />.</span></span> <span data-ttu-id="6e268-415">Может иметь значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6e268-415">May be <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e268-416">Этот метод может быть вызван, когда вызывающий объект получает значение из <xref:System.Xaml.XamlType.ContentProperty%2A>.</span><span class="sxs-lookup"><span data-stu-id="6e268-416">This method can be invoked when a caller gets a value from <xref:System.Xaml.XamlType.ContentProperty%2A>.</span></span>  
  
 <span data-ttu-id="6e268-417">Реализация по умолчанию проверяет наличие <xref:System.Windows.Markup.ContentPropertyAttribute> в определении типа.</span><span class="sxs-lookup"><span data-stu-id="6e268-417">The default implementation checks for <xref:System.Windows.Markup.ContentPropertyAttribute> on the type definition.</span></span> <span data-ttu-id="6e268-418">Он также может проверить <xref:System.Xaml.XamlType.BaseType%2A> для атрибута, если в непосредственный базовый тип не найден ни один атрибут.</span><span class="sxs-lookup"><span data-stu-id="6e268-418">It can also check <xref:System.Xaml.XamlType.BaseType%2A> for the attribute if no attribute is found on the immediate underlying type.</span></span> <span data-ttu-id="6e268-419">Если эти проверки не обнаруживают тип содержимого, реализация по умолчанию возвращает `null`.</span><span class="sxs-lookup"><span data-stu-id="6e268-419">If these checks do not discover a content type, the default implementation returns `null`.</span></span>  
  
 <span data-ttu-id="6e268-420">Переопределите этот метод, если вы не полагаетесь на внутреннее отражение CLR по умолчанию и используете метаданные или другие методы для создания отчетов о системе типов XAML или сведениях о схеме типа.</span><span class="sxs-lookup"><span data-stu-id="6e268-420">Override this method if you are not relying on default internal CLR reflection and are using metadata or other techniques for reporting the XAML type system information or schema information of a type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupContentWrappers">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt; LookupContentWrappers ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class System.Xaml.XamlType&gt; LookupContentWrappers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupContentWrappers" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupContentWrappers () As IList(Of XamlType)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::Generic::IList&lt;System::Xaml::XamlType ^&gt; ^ LookupContentWrappers();" />
      <MemberSignature Language="F#" Value="abstract member LookupContentWrappers : unit -&gt; System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;&#xA;override this.LookupContentWrappers : unit -&gt; System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;" Usage="xamlType.LookupContentWrappers " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6e268-421">Получает список значений <see cref="T:System.Xaml.XamlType" />, представляющих оболочки содержимого для этого класса <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="6e268-421">Gets a list of <see cref="T:System.Xaml.XamlType" /> values that represent the content wrappers for this <see cref="T:System.Xaml.XamlType" />.</span></span></summary>
        <returns><span data-ttu-id="6e268-422">Список значений <see cref="T:System.Xaml.XamlType" />, представляющих оболочки содержимого для этого класса <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="6e268-422">A list of <see cref="T:System.Xaml.XamlType" /> values that represent the content wrappers for this <see cref="T:System.Xaml.XamlType" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e268-423">Оболочка содержимого — это класс, представляющий тип коллекции содержимого, если типы, используемые в этой коллекции, не являются непрерывными для системы типов.</span><span class="sxs-lookup"><span data-stu-id="6e268-423">A content wrapper is a class that represents the content collection type when the types that are used in that collection are not contiguous to the type system.</span></span> <span data-ttu-id="6e268-424">Типы элементов сбора для оболочки содержимого должны быть ограничены по сравнению с <xref:System.Object> или эквивалентом нейтрального объекта.</span><span class="sxs-lookup"><span data-stu-id="6e268-424">The types of collection items for the content wrapper are expected to be limited in some manner beyond <xref:System.Object> or a neutral object equivalent.</span></span> <span data-ttu-id="6e268-425">Однако это ограничение применяется только при проектировании или назначении свойств, использующих этот тип, а не системы типов.</span><span class="sxs-lookup"><span data-stu-id="6e268-425">However, this limitation is only enforced by the design or purpose of the properties that use that type, and not by the type system.</span></span> <span data-ttu-id="6e268-426">Для типа может существовать более одной оболочки содержимого.</span><span class="sxs-lookup"><span data-stu-id="6e268-426">More than one content wrapper can exist on a type.</span></span>  
  
 <span data-ttu-id="6e268-427">Пример класса и сценарий из реализации XAML в WPF см. в разделе <xref:System.Windows.Documents.InlineCollection>.</span><span class="sxs-lookup"><span data-stu-id="6e268-427">For an example class and scenario from the WPF XAML implementation, see <xref:System.Windows.Documents.InlineCollection>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupCustomAttributeProvider">
      <MemberSignature Language="C#" Value="protected virtual System.Reflection.ICustomAttributeProvider LookupCustomAttributeProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Reflection.ICustomAttributeProvider LookupCustomAttributeProvider() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupCustomAttributeProvider" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupCustomAttributeProvider () As ICustomAttributeProvider" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Reflection::ICustomAttributeProvider ^ LookupCustomAttributeProvider();" />
      <MemberSignature Language="F#" Value="abstract member LookupCustomAttributeProvider : unit -&gt; System.Reflection.ICustomAttributeProvider&#xA;override this.LookupCustomAttributeProvider : unit -&gt; System.Reflection.ICustomAttributeProvider" Usage="xamlType.LookupCustomAttributeProvider " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.ICustomAttributeProvider</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6e268-428">При реализации в производном классе возвращает реализацию класса <see cref="T:System.Reflection.ICustomAttributeProvider" />.</span><span class="sxs-lookup"><span data-stu-id="6e268-428">When implemented in a derived class, returns an <see cref="T:System.Reflection.ICustomAttributeProvider" /> implementation.</span></span></summary>
        <returns><span data-ttu-id="6e268-429">Реализация <see cref="T:System.Reflection.ICustomAttributeProvider" />.</span><span class="sxs-lookup"><span data-stu-id="6e268-429">An <see cref="T:System.Reflection.ICustomAttributeProvider" /> implementation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e268-430">Переопределите этот метод, чтобы обеспечить внутреннее отражение альтернативным способом получения значений атрибута CLR.</span><span class="sxs-lookup"><span data-stu-id="6e268-430">Override this method to provide the internal reflection with an alternative way to obtain CLR attribute values.</span></span> <span data-ttu-id="6e268-431">При отсутствии переопределения внутренний отражатель использует обычную логику отражения CLR.</span><span class="sxs-lookup"><span data-stu-id="6e268-431">In absence of an override, the internal reflector uses typical CLR reflection logic.</span></span>  
  
 <span data-ttu-id="6e268-432">Реализация по умолчанию возвращает значение `null`.</span><span class="sxs-lookup"><span data-stu-id="6e268-432">The default implementation returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupDeferringLoader">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt; LookupDeferringLoader ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.Xaml.XamlDeferringLoader&gt; LookupDeferringLoader() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupDeferringLoader" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupDeferringLoader () As XamlValueConverter(Of XamlDeferringLoader)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::Schema::XamlValueConverter&lt;System::Xaml::XamlDeferringLoader ^&gt; ^ LookupDeferringLoader();" />
      <MemberSignature Language="F#" Value="abstract member LookupDeferringLoader : unit -&gt; System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt;&#xA;override this.LookupDeferringLoader : unit -&gt; System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt;" Usage="xamlType.LookupDeferringLoader " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6e268-433">Возвращает объект <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />, используемый для отложенной загрузки объектов, объявленных в языке XAML.</span><span class="sxs-lookup"><span data-stu-id="6e268-433">Returns a <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> object, which is used for deferred loading of XAML-declared objects.</span></span></summary>
        <returns><span data-ttu-id="6e268-434">Объект <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> с ограничением <see cref="T:System.Xaml.XamlDeferringLoader" /> на универсальный класс.</span><span class="sxs-lookup"><span data-stu-id="6e268-434">A <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> that has a <see cref="T:System.Xaml.XamlDeferringLoader" /> constraint on the generic.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e268-435">Этот метод может быть вызван, когда вызывающий объект получает значение из <xref:System.Xaml.XamlType.DeferringLoader%2A>.</span><span class="sxs-lookup"><span data-stu-id="6e268-435">This method can be invoked when a caller gets a value from <xref:System.Xaml.XamlType.DeferringLoader%2A>.</span></span> <span data-ttu-id="6e268-436">Переопределите этот метод, если требуется, чтобы <xref:System.Xaml.XamlType.DeferringLoader%2A> возвращал другое значение, чем включено внутренним отражением по умолчанию, а также предоставляет пользовательские данные <xref:System.Xaml.Schema.XamlTypeInvoker>.</span><span class="sxs-lookup"><span data-stu-id="6e268-436">Override this method if you want <xref:System.Xaml.XamlType.DeferringLoader%2A> to return a different value than is enabled by default internal reflection and are also providing custom <xref:System.Xaml.Schema.XamlTypeInvoker> information.</span></span>  
  
 <span data-ttu-id="6e268-437">Реализация по умолчанию возвращает объект на основе чтения <xref:System.Windows.Markup.XamlDeferLoadAttribute>.</span><span class="sxs-lookup"><span data-stu-id="6e268-437">The default implementation returns an object on the basis of reading <xref:System.Windows.Markup.XamlDeferLoadAttribute>.</span></span> <span data-ttu-id="6e268-438">Он также может проверить <xref:System.Xaml.XamlType.BaseType%2A> для атрибута, если в непосредственный базовый тип не найден ни один атрибут.</span><span class="sxs-lookup"><span data-stu-id="6e268-438">It can also  check <xref:System.Xaml.XamlType.BaseType%2A> for the attribute if no attribute is found on the immediate underlying type.</span></span> <span data-ttu-id="6e268-439">Если значение недоступно, этот метод возвращает `null`.</span><span class="sxs-lookup"><span data-stu-id="6e268-439">If a value is unavailable, this method returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupInvoker">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.Schema.XamlTypeInvoker LookupInvoker ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.Schema.XamlTypeInvoker LookupInvoker() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupInvoker" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupInvoker () As XamlTypeInvoker" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::Schema::XamlTypeInvoker ^ LookupInvoker();" />
      <MemberSignature Language="F#" Value="abstract member LookupInvoker : unit -&gt; System.Xaml.Schema.XamlTypeInvoker&#xA;override this.LookupInvoker : unit -&gt; System.Xaml.Schema.XamlTypeInvoker" Usage="xamlType.LookupInvoker " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlTypeInvoker</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6e268-440">Возвращает объект <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />, связанный с данным типом <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="6e268-440">Returns a <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> that is associated with this <see cref="T:System.Xaml.XamlType" />.</span></span></summary>
        <returns><span data-ttu-id="6e268-441">Сведения <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> для данного типа <see cref="T:System.Xaml.XamlType" />; в противном случае — значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6e268-441">The <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> information for this <see cref="T:System.Xaml.XamlType" />; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e268-442">Этот метод можно вызвать с помощью вызовов <xref:System.Xaml.XamlType.Invoker%2A>.</span><span class="sxs-lookup"><span data-stu-id="6e268-442">This method can be invoked by calls to <xref:System.Xaml.XamlType.Invoker%2A>.</span></span>  
  
 <span data-ttu-id="6e268-443">Реализация по умолчанию не требует, чтобы <xref:System.Xaml.XamlType> создавался с помощью одного из конструкторов, которые передают начальный <xref:System.Xaml.Schema.XamlTypeInvoker>.</span><span class="sxs-lookup"><span data-stu-id="6e268-443">The default implementation does not require that a <xref:System.Xaml.XamlType> be constructed by using one of the constructors that pass an initial <xref:System.Xaml.Schema.XamlTypeInvoker>.</span></span> <span data-ttu-id="6e268-444">Однако для <xref:System.Xaml.XamlType> должно присутствовать значение <xref:System.Xaml.XamlType.UnderlyingType%2A>; в противном случае реализация по умолчанию возвращает `null`.</span><span class="sxs-lookup"><span data-stu-id="6e268-444">However, an <xref:System.Xaml.XamlType.UnderlyingType%2A> value must exist for the <xref:System.Xaml.XamlType>; otherwise, the default implementation returns `null`.</span></span>  
  
 <span data-ttu-id="6e268-445">Переопределите этот метод, если вы также создаете производный класс из <xref:System.Xaml.Schema.XamlTypeInvoker> и планируете возвращать производный класс.</span><span class="sxs-lookup"><span data-stu-id="6e268-445">Override this method if you also create a derived class from <xref:System.Xaml.Schema.XamlTypeInvoker> and intend to return the derived class.</span></span> <span data-ttu-id="6e268-446">Если возвращается `null`, <xref:System.Xaml.XamlType.Invoker%2A> возвращает <xref:System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker%2A?displayProperty=nameWithType> в вызывающие объекты.</span><span class="sxs-lookup"><span data-stu-id="6e268-446">If you return `null`, <xref:System.Xaml.XamlType.Invoker%2A> returns <xref:System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker%2A?displayProperty=nameWithType> to callers.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupIsAmbient">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsAmbient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsAmbient() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupIsAmbient" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsAmbient () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsAmbient();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsAmbient : unit -&gt; bool&#xA;override this.LookupIsAmbient : unit -&gt; bool" Usage="xamlType.LookupIsAmbient " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6e268-447">Возвращает значение, указывающее, представляет ли данный тип <see cref="T:System.Xaml.XamlType" /> внешний тип в соответствии с определением языка XAML.</span><span class="sxs-lookup"><span data-stu-id="6e268-447">Returns a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents an ambient type, as per the XAML definition.</span></span></summary>
        <returns><span data-ttu-id="6e268-448">Значение <see langword="true" />, если данный тип <see cref="T:System.Xaml.XamlType" /> представляет внешний тип; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6e268-448"><see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents an ambient type; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e268-449">Этот метод можно вызвать с помощью вызовов <xref:System.Xaml.XamlType.IsAmbient%2A>.</span><span class="sxs-lookup"><span data-stu-id="6e268-449">This method can be invoked by calls to <xref:System.Xaml.XamlType.IsAmbient%2A>.</span></span>  
  
 <span data-ttu-id="6e268-450">Реализация по умолчанию использует отражение CLR для <xref:System.Xaml.XamlType.UnderlyingType%2A> и может проверять базовые типы.</span><span class="sxs-lookup"><span data-stu-id="6e268-450">The default implementation uses CLR reflection on the <xref:System.Xaml.XamlType.UnderlyingType%2A> and can check the base types.</span></span> <span data-ttu-id="6e268-451">Эта реализация проверяет наличие <xref:System.Windows.Markup.AmbientAttribute>, которая применяется к определению соответствующего типа на уровне класса и возвращает `true` в этом случае.</span><span class="sxs-lookup"><span data-stu-id="6e268-451">This implementation checks for the <xref:System.Windows.Markup.AmbientAttribute> that is applied to the relevant type's definition at the class level and returns `true` in this case.</span></span> <span data-ttu-id="6e268-452">Все остальные варианты возвращают `false`.</span><span class="sxs-lookup"><span data-stu-id="6e268-452">All other cases return `false`.</span></span>  
  
 <span data-ttu-id="6e268-453">Переопределите этот метод, если требуется, чтобы <xref:System.Xaml.XamlType.IsAmbient%2A> возвращал другое значение, чем включено внутренним отражением по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="6e268-453">Override this method if you want <xref:System.Xaml.XamlType.IsAmbient%2A> to return a different value than is enabled by default internal reflection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupIsConstructible">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsConstructible ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsConstructible() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupIsConstructible" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsConstructible () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsConstructible();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsConstructible : unit -&gt; bool&#xA;override this.LookupIsConstructible : unit -&gt; bool" Usage="xamlType.LookupIsConstructible " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6e268-454">Возвращает значение, указывающее, представляет ли данный тип <see cref="T:System.Xaml.XamlType" /> конструируемый тип в соответствии с определением языка XAML.</span><span class="sxs-lookup"><span data-stu-id="6e268-454">Returns a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents a constructible type, as per the XAML definition.</span></span></summary>
        <returns><span data-ttu-id="6e268-455">Значение <see langword="true" />, если данный тип <see cref="T:System.Xaml.XamlType" /> представляет конструируемый тип; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6e268-455"><see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents a constructible type; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e268-456">Этот метод можно вызвать с помощью вызовов <xref:System.Xaml.XamlType.IsConstructible%2A>.</span><span class="sxs-lookup"><span data-stu-id="6e268-456">This method can be invoked by calls to <xref:System.Xaml.XamlType.IsConstructible%2A>.</span></span>  
  
 <span data-ttu-id="6e268-457">Реализация по умолчанию использует отражение CLR для <xref:System.Xaml.XamlType.UnderlyingType%2A>.</span><span class="sxs-lookup"><span data-stu-id="6e268-457">The default implementation uses CLR reflection on the <xref:System.Xaml.XamlType.UnderlyingType%2A>.</span></span> <span data-ttu-id="6e268-458">Тип должен быть конкретным, не вложенным и закрытым.</span><span class="sxs-lookup"><span data-stu-id="6e268-458">The type must be concrete, non-nested, and closed.</span></span> <span data-ttu-id="6e268-459">Реализация по умолчанию проверяет, является ли тип типом значения, и возвращается <xref:System.Xaml.XamlType.ConstructionRequiresArguments%2A>.</span><span class="sxs-lookup"><span data-stu-id="6e268-459">The default implementation checks whether the type is a value type and the return of <xref:System.Xaml.XamlType.ConstructionRequiresArguments%2A>.</span></span> <span data-ttu-id="6e268-460">Для значения NULL <xref:System.Xaml.XamlType.UnderlyingType%2A> этот метод возвращает `true`.</span><span class="sxs-lookup"><span data-stu-id="6e268-460">For a null <xref:System.Xaml.XamlType.UnderlyingType%2A>, this method returns `true`.</span></span>  
  
 <span data-ttu-id="6e268-461">Переопределите этот метод, если требуется, чтобы <xref:System.Xaml.XamlType.IsConstructible%2A> возвращал другое значение, чем включено внутренним отражением по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="6e268-461">Override this method if you want <xref:System.Xaml.XamlType.IsConstructible%2A> to return a different value than is enabled by default internal reflection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupIsMarkupExtension">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsMarkupExtension ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsMarkupExtension() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupIsMarkupExtension" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsMarkupExtension () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsMarkupExtension();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsMarkupExtension : unit -&gt; bool&#xA;override this.LookupIsMarkupExtension : unit -&gt; bool" Usage="xamlType.LookupIsMarkupExtension " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6e268-462">Возвращает значение, указывающее, представляет ли этот класс <see cref="T:System.Xaml.XamlType" /> расширение разметки.</span><span class="sxs-lookup"><span data-stu-id="6e268-462">Returns a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents a markup extension.</span></span></summary>
        <returns><span data-ttu-id="6e268-463">Значение <see langword="true" />, если этот класс <see cref="T:System.Xaml.XamlType" /> представляет расширение разметки; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6e268-463"><see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents a markup extension; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e268-464">Этот метод можно вызвать с помощью вызовов <xref:System.Xaml.XamlType.IsMarkupExtension%2A>.</span><span class="sxs-lookup"><span data-stu-id="6e268-464">This method can be invoked by calls to <xref:System.Xaml.XamlType.IsMarkupExtension%2A>.</span></span>  
  
 <span data-ttu-id="6e268-465">Реализация по умолчанию состоит только из этого вызова:</span><span class="sxs-lookup"><span data-stu-id="6e268-465">The default implementation consists only of this call:</span></span>  
  
 `return CanAssignTo(XamlLanguage.MarkupExtension);`  
  
 <span data-ttu-id="6e268-466">Переопределите этот метод, если требуется, чтобы <xref:System.Xaml.XamlType.IsMarkupExtension%2A> использовала другую логику.</span><span class="sxs-lookup"><span data-stu-id="6e268-466">Override this method if you want <xref:System.Xaml.XamlType.IsMarkupExtension%2A> to use different logic.</span></span>  
  
 <span data-ttu-id="6e268-467">В терминах спецификации XAML этот тип должен быть назначен для `x:MarkupExtension`, чтобы возвратить `true` для <xref:System.Xaml.XamlType.IsMarkupExtension%2A>.</span><span class="sxs-lookup"><span data-stu-id="6e268-467">In XAML specification terms, this type must be assignable to `x:MarkupExtension` in order to return `true` for <xref:System.Xaml.XamlType.IsMarkupExtension%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupIsNameScope">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsNameScope ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsNameScope() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupIsNameScope" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsNameScope () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsNameScope();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsNameScope : unit -&gt; bool&#xA;override this.LookupIsNameScope : unit -&gt; bool" Usage="xamlType.LookupIsNameScope " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6e268-468">Возвращает значение, указывающее, представляет ли данный тип <see cref="T:System.Xaml.XamlType" /> область имен XAML в соответствии с определением языка XAML.</span><span class="sxs-lookup"><span data-stu-id="6e268-468">Returns a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents a XAML namescope, as per the XAML definition.</span></span></summary>
        <returns><span data-ttu-id="6e268-469">Значение <see langword="true" />, если данный тип <see cref="T:System.Xaml.XamlType" /> представляет область имен XAML; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6e268-469"><see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents a XAML namescope; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e268-470">Этот метод можно вызвать с помощью вызовов <xref:System.Xaml.XamlType.IsNameScope%2A>.</span><span class="sxs-lookup"><span data-stu-id="6e268-470">This method can be invoked by calls to <xref:System.Xaml.XamlType.IsNameScope%2A>.</span></span>  
  
 <span data-ttu-id="6e268-471">Реализация по умолчанию делает вызов <xref:System.Xaml.XamlType.CanAssignTo%2A> косвенно на тип <xref:System.Windows.Markup.INameScope>.</span><span class="sxs-lookup"><span data-stu-id="6e268-471">The default implementation makes a <xref:System.Xaml.XamlType.CanAssignTo%2A> call indirectly against the type <xref:System.Windows.Markup.INameScope>.</span></span> <span data-ttu-id="6e268-472"><xref:System.Windows.Markup.INameScope> — это интерфейс, определенный в сборке WindowsBase. dll.</span><span class="sxs-lookup"><span data-stu-id="6e268-472"><xref:System.Windows.Markup.INameScope> is an interface that is defined in the assembly WindowsBase.dll.</span></span> <span data-ttu-id="6e268-473">Этот метод для идентификации области имен XAML используется в реализациях WPF и Windows Workflow Foundation XAML.</span><span class="sxs-lookup"><span data-stu-id="6e268-473">This technique for XAML namescope identification is used both by WPF and Windows Workflow Foundation implementations of XAML.</span></span>  
  
 <span data-ttu-id="6e268-474">Переопределите этот метод, если требуется, чтобы <xref:System.Xaml.XamlType.IsNameScope%2A> использовала другую логику.</span><span class="sxs-lookup"><span data-stu-id="6e268-474">Override this method if you want <xref:System.Xaml.XamlType.IsNameScope%2A> to use different logic.</span></span>  
  
 <span data-ttu-id="6e268-475">Область имен XAML обеспечивает уникальность имени свойства или свойств, используемых для `x:Name` / `[name property]`.</span><span class="sxs-lookup"><span data-stu-id="6e268-475">A XAML namescope enforces the name uniqueness of the property or properties that are used for `x:Name` / `[name property]`.</span></span> <span data-ttu-id="6e268-476">Если <xref:System.Xaml.XamlType.IsNameScope%2A> равно `true`, то должен существовать механизм обеспечения уникальности, который должен оцениваться от перспективы этого типа, владеющего областью имен XAML.</span><span class="sxs-lookup"><span data-stu-id="6e268-476">If <xref:System.Xaml.XamlType.IsNameScope%2A> is `true`, then some mechanism for enforcing uniqueness should exist and should evaluate from the perspective of this type owning a XAML namescope.</span></span> <span data-ttu-id="6e268-477">Затем область имен XAML расширяется до содержимого типа до тех пор, пока не встретится другой тип владельца области видимости имен XAML.</span><span class="sxs-lookup"><span data-stu-id="6e268-477">The XAML namescope then extends to the content of the type until another XAML namescope owning type is encountered.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlObjectWriter.RootNameScope" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsNullable">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsNullable ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsNullable() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupIsNullable" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsNullable () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsNullable();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsNullable : unit -&gt; bool&#xA;override this.LookupIsNullable : unit -&gt; bool" Usage="xamlType.LookupIsNullable " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6e268-478">Возвращает значение, указывающее, представляет ли данный тип <see cref="T:System.Xaml.XamlType" /> тип, допускающий значение null, в соответствии с определением языка XAML.</span><span class="sxs-lookup"><span data-stu-id="6e268-478">Returns a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents a nullable type, as per the XAML definition.</span></span></summary>
        <returns><span data-ttu-id="6e268-479">Значение <see langword="true" />, если данный тип <see cref="T:System.Xaml.XamlType" /> представляет тип, допускающий значение null; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6e268-479"><see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents a nullable type; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e268-480">Этот метод можно вызвать с помощью вызовов <xref:System.Xaml.XamlType.IsNullable%2A>.</span><span class="sxs-lookup"><span data-stu-id="6e268-480">This method can be invoked by calls to <xref:System.Xaml.XamlType.IsNullable%2A>.</span></span>  
  
 <span data-ttu-id="6e268-481">Реализация по умолчанию выполняет определение на основе концепции CLR базовой библиотеки, которая проверяется на соответствие <xref:System.Xaml.XamlType.UnderlyingType%2A>.</span><span class="sxs-lookup"><span data-stu-id="6e268-481">The default implementation makes a determination based on the CLR core library nullable concept, checked against <xref:System.Xaml.XamlType.UnderlyingType%2A>.</span></span> <span data-ttu-id="6e268-482">Для значения NULL <xref:System.Xaml.XamlType.UnderlyingType%2A> возвращается значение `true`.</span><span class="sxs-lookup"><span data-stu-id="6e268-482">For a null <xref:System.Xaml.XamlType.UnderlyingType%2A>, it returns `true`.</span></span>  
  
 <span data-ttu-id="6e268-483">Переопределите этот метод, если требуется, чтобы <xref:System.Xaml.XamlType.IsNullable%2A> использовала другую логику.</span><span class="sxs-lookup"><span data-stu-id="6e268-483">Override this method if you want <xref:System.Xaml.XamlType.IsNullable%2A> to use different logic.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupIsPublic">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsPublic ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsPublic() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupIsPublic" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsPublic () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsPublic();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsPublic : unit -&gt; bool&#xA;override this.LookupIsPublic : unit -&gt; bool" Usage="xamlType.LookupIsPublic " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6e268-484">Возвращает значение, указывающее, представляет ли данный тип <see cref="T:System.Xaml.XamlType" /> открытый тип в соответствующей системе типов.</span><span class="sxs-lookup"><span data-stu-id="6e268-484">Returns a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents a public type in the relevant type system.</span></span></summary>
        <returns><span data-ttu-id="6e268-485">Значение <see langword="true" />, если данный тип <see cref="T:System.Xaml.XamlType" /> представляет открытый тип; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6e268-485"><see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents a public type; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e268-486">Этот метод можно вызвать с помощью вызовов <xref:System.Xaml.XamlType.IsPublic%2A>.</span><span class="sxs-lookup"><span data-stu-id="6e268-486">This method can be invoked by calls to <xref:System.Xaml.XamlType.IsPublic%2A>.</span></span>  
  
 <span data-ttu-id="6e268-487">Реализация по умолчанию использует отражение CLR для <xref:System.Xaml.XamlType.UnderlyingType%2A>, отличного от NULL.</span><span class="sxs-lookup"><span data-stu-id="6e268-487">The default implementation uses CLR reflection against a non-null <xref:System.Xaml.XamlType.UnderlyingType%2A>.</span></span> <span data-ttu-id="6e268-488">Для значения NULL <xref:System.Xaml.XamlType.UnderlyingType%2A> возвращается значение `true`.</span><span class="sxs-lookup"><span data-stu-id="6e268-488">For a null <xref:System.Xaml.XamlType.UnderlyingType%2A>, it returns `true`.</span></span>  
  
 <span data-ttu-id="6e268-489">Переопределите этот метод, если требуется, чтобы <xref:System.Xaml.XamlType.IsPublic%2A> использовала другую логику.</span><span class="sxs-lookup"><span data-stu-id="6e268-489">Override this method if you want <xref:System.Xaml.XamlType.IsPublic%2A> to use different logic.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="6e268-490"><xref:System.Xaml.XamlType.LookupIsPublic%2A> является виртуальным и, следовательно, может быть переопределен.</span><span class="sxs-lookup"><span data-stu-id="6e268-490"><xref:System.Xaml.XamlType.LookupIsPublic%2A> is virtual, and therefore, can be overridden.</span></span> <span data-ttu-id="6e268-491">Переопределение имеет потенциал (как для вредоносных целей, так и в других случаях) для изменения сведений о доступе к типу XAML, чтобы он больше не был правильно согласован с системой типов или сведениями о доступе к базовому типу CLR.</span><span class="sxs-lookup"><span data-stu-id="6e268-491">The override has the potential (whether for malicious purposes or otherwise) to change the reported access information about a XAML type so that it no longer aligns in an expected way with the type system or access information of its underlying CLR type.</span></span> <span data-ttu-id="6e268-492">Для всех проверок, критических для системы безопасности операций присваивания и доступа, следует использовать базовый тип CLR.</span><span class="sxs-lookup"><span data-stu-id="6e268-492">For any security-critical checks of assignment operations and access, use the underlying CLR type instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupIsUnknown">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsUnknown ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsUnknown() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupIsUnknown" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsUnknown () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsUnknown();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsUnknown : unit -&gt; bool&#xA;override this.LookupIsUnknown : unit -&gt; bool" Usage="xamlType.LookupIsUnknown " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6e268-493">Возвращает значение, указывающее, представляет ли данный тип <see cref="T:System.Xaml.XamlType" /> тип, который не может быть разрешен в базовой системе типов.</span><span class="sxs-lookup"><span data-stu-id="6e268-493">Returns a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents a type that cannot be resolved in the underlying type system.</span></span></summary>
        <returns><span data-ttu-id="6e268-494">Значение <see langword="true" />, если этот тип <see cref="T:System.Xaml.XamlType" /> представляет неразрешимый тип; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6e268-494"><see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents a nonresolvable type; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e268-495">Этот метод можно вызвать с помощью вызовов <xref:System.Xaml.XamlType.IsUnknown%2A>.</span><span class="sxs-lookup"><span data-stu-id="6e268-495">This method can be invoked by calls to <xref:System.Xaml.XamlType.IsUnknown%2A>.</span></span>  
  
 <span data-ttu-id="6e268-496">Реализация по умолчанию может использовать отражение CLR.</span><span class="sxs-lookup"><span data-stu-id="6e268-496">The default implementation can use CLR reflection.</span></span> <span data-ttu-id="6e268-497">Для значения NULL <xref:System.Xaml.XamlType.UnderlyingType%2A> возвращается значение `true`.</span><span class="sxs-lookup"><span data-stu-id="6e268-497">For a null <xref:System.Xaml.XamlType.UnderlyingType%2A>, it returns `true`.</span></span>  
  
 <span data-ttu-id="6e268-498">Переопределите этот метод, если требуется, чтобы <xref:System.Xaml.XamlType.IsUnknown%2A> использовала другую логику.</span><span class="sxs-lookup"><span data-stu-id="6e268-498">Override this method if you want <xref:System.Xaml.XamlType.IsUnknown%2A> to use different logic.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupIsWhitespaceSignificantCollection">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsWhitespaceSignificantCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsWhitespaceSignificantCollection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsWhitespaceSignificantCollection () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsWhitespaceSignificantCollection();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsWhitespaceSignificantCollection : unit -&gt; bool&#xA;override this.LookupIsWhitespaceSignificantCollection : unit -&gt; bool" Usage="xamlType.LookupIsWhitespaceSignificantCollection " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6e268-499">Возвращает значение, указывающее, представляет ли этот тип <see cref="T:System.Xaml.XamlType" /> коллекцию, в которой учитываются символы пробелов, в соответствии с определением XML.</span><span class="sxs-lookup"><span data-stu-id="6e268-499">Returns a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents a whitespace significant collection, as per the XML definition.</span></span></summary>
        <returns><span data-ttu-id="6e268-500">Значение <see langword="true" />, если данный тип <see cref="T:System.Xaml.XamlType" /> представляет коллекцию, в которой учитываются символы пробелов; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6e268-500"><see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents a white-space significant collection; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e268-501">Этот метод можно вызвать с помощью вызовов <xref:System.Xaml.XamlType.IsWhitespaceSignificantCollection%2A>.</span><span class="sxs-lookup"><span data-stu-id="6e268-501">This method can be invoked by calls to <xref:System.Xaml.XamlType.IsWhitespaceSignificantCollection%2A>.</span></span>  
  
 <span data-ttu-id="6e268-502">Реализация по умолчанию возвращает значение, основанное на чтении <xref:System.Windows.Markup.WhitespaceSignificantCollectionAttribute>.</span><span class="sxs-lookup"><span data-stu-id="6e268-502">The default implementation returns a value based on reading <xref:System.Windows.Markup.WhitespaceSignificantCollectionAttribute>.</span></span> <span data-ttu-id="6e268-503">Он также может проверить значение <xref:System.Xaml.XamlType.BaseType%2A> для атрибута, если в непосредственный базовый тип не найден ни один атрибут.</span><span class="sxs-lookup"><span data-stu-id="6e268-503">It can also check the <xref:System.Xaml.XamlType.BaseType%2A> for the attribute if no attribute is found on the immediate underlying type.</span></span> <span data-ttu-id="6e268-504">Если значение недоступно, оно возвращает `false`.</span><span class="sxs-lookup"><span data-stu-id="6e268-504">If a value is not available, it returns `false`.</span></span>  
  
 <span data-ttu-id="6e268-505">Переопределите этот метод, если требуется, чтобы <xref:System.Xaml.XamlType.IsWhitespaceSignificantCollection%2A> использовала другую логику.</span><span class="sxs-lookup"><span data-stu-id="6e268-505">Override this method if you want <xref:System.Xaml.XamlType.IsWhitespaceSignificantCollection%2A> to use different logic.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupIsXData">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsXData ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsXData() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupIsXData" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsXData () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsXData();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsXData : unit -&gt; bool&#xA;override this.LookupIsXData : unit -&gt; bool" Usage="xamlType.LookupIsXData " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6e268-506">Возвращает значение, указывающее, представляет ли данный тип <see cref="T:System.Xaml.XamlType" /> XML-<see langword="XDATA" /> в соответствии с определением языка XAML.</span><span class="sxs-lookup"><span data-stu-id="6e268-506">Returns a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> represents XML <see langword="XDATA" />, as per the XAML definition.</span></span></summary>
        <returns><span data-ttu-id="6e268-507">Значение <see langword="true" />, если данный тип <see cref="T:System.Xaml.XamlType" /> представляет <see langword="XDATA" />; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6e268-507"><see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents <see langword="XDATA" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e268-508">Этот метод можно вызвать с помощью вызовов <xref:System.Xaml.XamlType.IsXData%2A>.</span><span class="sxs-lookup"><span data-stu-id="6e268-508">This method can be invoked by calls to <xref:System.Xaml.XamlType.IsXData%2A>.</span></span>  
  
 <span data-ttu-id="6e268-509">Реализация по умолчанию делает вызов <xref:System.Xaml.XamlType.CanAssignTo%2A> косвенно на тип <xref:System.Xml.Serialization.IXmlSerializable>.</span><span class="sxs-lookup"><span data-stu-id="6e268-509">The default implementation makes a <xref:System.Xaml.XamlType.CanAssignTo%2A> call indirectly against the type <xref:System.Xml.Serialization.IXmlSerializable>.</span></span>  
  
 <span data-ttu-id="6e268-510">Переопределите этот метод, если требуется, чтобы <xref:System.Xaml.XamlType.IsXData%2A> использовала другую логику.</span><span class="sxs-lookup"><span data-stu-id="6e268-510">Override this method if you want <xref:System.Xaml.XamlType.IsXData%2A> to use different logic.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupItemType">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.XamlType LookupItemType ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.XamlType LookupItemType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupItemType" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupItemType () As XamlType" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::XamlType ^ LookupItemType();" />
      <MemberSignature Language="F#" Value="abstract member LookupItemType : unit -&gt; System.Xaml.XamlType&#xA;override this.LookupItemType : unit -&gt; System.Xaml.XamlType" Usage="xamlType.LookupItemType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6e268-511">Возвращает значение, предоставляющее сведения о типе для свойства <see langword="Items" /> данного типа <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="6e268-511">Returns a value that provides the type information for the <see langword="Items" /> property of this <see cref="T:System.Xaml.XamlType" />.</span></span></summary>
        <returns><span data-ttu-id="6e268-512">Объект <see cref="T:System.Xaml.XamlType" /> для типа членов в коллекции или значение <see langword="null" />, если данный тип <see cref="T:System.Xaml.XamlType" /> не представляет коллекцию.</span><span class="sxs-lookup"><span data-stu-id="6e268-512">A <see cref="T:System.Xaml.XamlType" /> object for the type of the items in the collection; otherwise, <see langword="null" /> if this <see cref="T:System.Xaml.XamlType" /> does not represent a collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e268-513">Этот метод можно вызвать с помощью вызовов <xref:System.Xaml.XamlType.ItemType%2A>.</span><span class="sxs-lookup"><span data-stu-id="6e268-513">This method can be invoked by calls to <xref:System.Xaml.XamlType.ItemType%2A>.</span></span>  
  
 <span data-ttu-id="6e268-514">Реализация по умолчанию может использовать концепции отражения CLR, например проверку метода `Add` с помощью <xref:System.Reflection.MethodInfo> и <xref:System.Reflection.ParameterInfo>; Проверка <xref:System.Xaml.XamlType.IsArray%2A>; и проверка <xref:System.Xaml.XamlType.BaseType%2A> и попытайтесь выполнить ту же логику там.</span><span class="sxs-lookup"><span data-stu-id="6e268-514">The default implementation can use CLR reflection concepts, such as checking for an `Add` method by <xref:System.Reflection.MethodInfo> and using the <xref:System.Reflection.ParameterInfo>; checking <xref:System.Xaml.XamlType.IsArray%2A>; and checking <xref:System.Xaml.XamlType.BaseType%2A> and trying the same logic there.</span></span>  
  
 <span data-ttu-id="6e268-515">Переопределите этот метод, если требуется, чтобы <xref:System.Xaml.XamlType.ItemType%2A> использовала другую логику.</span><span class="sxs-lookup"><span data-stu-id="6e268-515">Override this method if you want <xref:System.Xaml.XamlType.ItemType%2A> to use different logic.</span></span> <span data-ttu-id="6e268-516">Случаи, когда <xref:System.Xaml.XamlType.LookupCollectionKind%2A> возвращает значение <xref:System.Xaml.Schema.XamlCollectionKind.None?displayProperty=nameWithType>, должно возвращать `null`.</span><span class="sxs-lookup"><span data-stu-id="6e268-516">Cases where <xref:System.Xaml.XamlType.LookupCollectionKind%2A> returns <xref:System.Xaml.Schema.XamlCollectionKind.None?displayProperty=nameWithType> should return `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupKeyType">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.XamlType LookupKeyType ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.XamlType LookupKeyType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupKeyType" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupKeyType () As XamlType" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::XamlType ^ LookupKeyType();" />
      <MemberSignature Language="F#" Value="abstract member LookupKeyType : unit -&gt; System.Xaml.XamlType&#xA;override this.LookupKeyType : unit -&gt; System.Xaml.XamlType" Usage="xamlType.LookupKeyType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6e268-517">Возвращает значение, предоставляющее сведения о типе для свойства ключа этого класса <see cref="T:System.Xaml.XamlType" />, если этот класс <see cref="T:System.Xaml.XamlType" /> представляет словарь.</span><span class="sxs-lookup"><span data-stu-id="6e268-517">Returns a value that provides the type information for the key property of this <see cref="T:System.Xaml.XamlType" />, if the <see cref="T:System.Xaml.XamlType" /> represents a dictionary.</span></span></summary>
        <returns><span data-ttu-id="6e268-518">Объект <see cref="T:System.Xaml.XamlType" /> для типа ключа для использования словаря или значение <see langword="null" />, если данный тип <see cref="T:System.Xaml.XamlType" /> не представляет словарь.</span><span class="sxs-lookup"><span data-stu-id="6e268-518">A <see cref="T:System.Xaml.XamlType" /> object for the type of the key for dictionary usage, or <see langword="null" /> if this <see cref="T:System.Xaml.XamlType" /> does not represent a dictionary,</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e268-519">Этот метод можно вызвать с помощью вызовов <xref:System.Xaml.XamlType.KeyType%2A>.</span><span class="sxs-lookup"><span data-stu-id="6e268-519">This method can be invoked by calls to <xref:System.Xaml.XamlType.KeyType%2A>.</span></span>  
  
 <span data-ttu-id="6e268-520">Реализация по умолчанию может использовать концепции отражения CLR, например проверку метода `Add` с помощью <xref:System.Reflection.MethodInfo> и <xref:System.Reflection.ParameterInfo>; и проверка <xref:System.Xaml.XamlType.BaseType%2A> и попытайтесь выполнить ту же логику там.</span><span class="sxs-lookup"><span data-stu-id="6e268-520">The default implementation can use CLR reflection concepts, such as checking for an `Add` method by <xref:System.Reflection.MethodInfo> and using the <xref:System.Reflection.ParameterInfo>; and checking <xref:System.Xaml.XamlType.BaseType%2A> and trying the same logic there.</span></span>  
  
 <span data-ttu-id="6e268-521">Переопределите этот метод, если требуется, чтобы <xref:System.Xaml.XamlType.KeyType%2A> использовала другую логику.</span><span class="sxs-lookup"><span data-stu-id="6e268-521">Override this method if you want <xref:System.Xaml.XamlType.KeyType%2A> to use different logic.</span></span> <span data-ttu-id="6e268-522">Случаи, когда <xref:System.Xaml.XamlType.LookupCollectionKind%2A> не возвращаются <xref:System.Xaml.Schema.XamlCollectionKind.Dictionary?displayProperty=nameWithType>, должны возвращать `null`.</span><span class="sxs-lookup"><span data-stu-id="6e268-522">Cases where <xref:System.Xaml.XamlType.LookupCollectionKind%2A> does not return <xref:System.Xaml.Schema.XamlCollectionKind.Dictionary?displayProperty=nameWithType> should return `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupMarkupExtensionReturnType">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.XamlType LookupMarkupExtensionReturnType ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.XamlType LookupMarkupExtensionReturnType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupMarkupExtensionReturnType" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupMarkupExtensionReturnType () As XamlType" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::XamlType ^ LookupMarkupExtensionReturnType();" />
      <MemberSignature Language="F#" Value="abstract member LookupMarkupExtensionReturnType : unit -&gt; System.Xaml.XamlType&#xA;override this.LookupMarkupExtensionReturnType : unit -&gt; System.Xaml.XamlType" Usage="xamlType.LookupMarkupExtensionReturnType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6e268-523">Возвращает значение, предоставляющее сведения о типе для возвращенного <see langword="ProvideValue" /> данного типа <see cref="T:System.Xaml.XamlType" />, если он представляет расширение разметки.</span><span class="sxs-lookup"><span data-stu-id="6e268-523">Returns a value that provides the type information for the returned <see langword="ProvideValue" /> of this <see cref="T:System.Xaml.XamlType" />, if it represents a markup extension.</span></span></summary>
        <returns><span data-ttu-id="6e268-524">Объект <see cref="T:System.Xaml.XamlType" /> для возвращаемого типа для использования расширения разметки или значение <see langword="null" />, если данный тип <see cref="T:System.Xaml.XamlType" /> не представляет расширение разметки.</span><span class="sxs-lookup"><span data-stu-id="6e268-524">A <see cref="T:System.Xaml.XamlType" /> object for the return type for markup extension usage; otherwise, <see langword="null" />, if this <see cref="T:System.Xaml.XamlType" /> does not represent a markup extension.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e268-525">Этот метод можно вызвать с помощью вызовов <xref:System.Xaml.XamlType.MarkupExtensionReturnType%2A>.</span><span class="sxs-lookup"><span data-stu-id="6e268-525">This method can be invoked by calls to <xref:System.Xaml.XamlType.MarkupExtensionReturnType%2A>.</span></span>  
  
 <span data-ttu-id="6e268-526">Реализация по умолчанию возвращает <xref:System.Xaml.XamlType> на основе чтения <xref:System.Windows.Markup.MarkupExtensionReturnTypeAttribute>.</span><span class="sxs-lookup"><span data-stu-id="6e268-526">The default implementation returns a <xref:System.Xaml.XamlType> on the basis of reading <xref:System.Windows.Markup.MarkupExtensionReturnTypeAttribute>.</span></span> <span data-ttu-id="6e268-527">Он также может проверить <xref:System.Xaml.XamlType.BaseType%2A> для атрибута, если в непосредственный базовый тип не найден ни один атрибут.</span><span class="sxs-lookup"><span data-stu-id="6e268-527">It can also check <xref:System.Xaml.XamlType.BaseType%2A> for the attribute if no attribute is found on the immediate underlying type.</span></span> <span data-ttu-id="6e268-528">Если значение недоступно, оно возвращает `null`.</span><span class="sxs-lookup"><span data-stu-id="6e268-528">If a value is not available, it returns `null`.</span></span>  
  
 <span data-ttu-id="6e268-529">Переопределите этот метод, если требуется, чтобы <xref:System.Xaml.XamlType.MarkupExtensionReturnType%2A> использовала другую логику.</span><span class="sxs-lookup"><span data-stu-id="6e268-529">Override this method if you want <xref:System.Xaml.XamlType.MarkupExtensionReturnType%2A> to use different logic.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupMember">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.XamlMember LookupMember (string name, bool skipReadOnlyCheck);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.XamlMember LookupMember(string name, bool skipReadOnlyCheck) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupMember(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupMember (name As String, skipReadOnlyCheck As Boolean) As XamlMember" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::XamlMember ^ LookupMember(System::String ^ name, bool skipReadOnlyCheck);" />
      <MemberSignature Language="F#" Value="abstract member LookupMember : string * bool -&gt; System.Xaml.XamlMember&#xA;override this.LookupMember : string * bool -&gt; System.Xaml.XamlMember" Usage="xamlType.LookupMember (name, skipReadOnlyCheck)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlMember</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="skipReadOnlyCheck" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="6e268-530">Имя (в виде строки) члена, который требуется получить.</span><span class="sxs-lookup"><span data-stu-id="6e268-530">The name of the member to get (as a string).</span></span></param>
        <param name="skipReadOnlyCheck"><span data-ttu-id="6e268-531">Значение <see langword="true" />, если необходимо возвратить член, даже если в этом члене задано значение <see langword="true" /> для свойства <see cref="P:System.Xaml.XamlMember.IsReadOnly" />. Значение <see langword="false" />, чтобы не возвращать член <see cref="P:System.Xaml.XamlMember.IsReadOnly" />.</span><span class="sxs-lookup"><span data-stu-id="6e268-531"><see langword="true" /> to return a member even if that member has a <see langword="true" /> value for <see cref="P:System.Xaml.XamlMember.IsReadOnly" />; <see langword="false" /> to not return a <see cref="P:System.Xaml.XamlMember.IsReadOnly" /> member.</span></span> <span data-ttu-id="6e268-532">Значение по умолчанию — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6e268-532">The default is <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="6e268-533">Возвращает член <see cref="T:System.Xaml.XamlMember" /> для определенного именованного члена из данного типа <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="6e268-533">Returns the <see cref="T:System.Xaml.XamlMember" /> for a specific named member from this <see cref="T:System.Xaml.XamlType" />.</span></span></summary>
        <returns><span data-ttu-id="6e268-534">Сведения <see cref="T:System.Xaml.XamlMember" /> для члена, если он найден; в противном случае — значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6e268-534">The <see cref="T:System.Xaml.XamlMember" /> information for the member, if a member was found; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e268-535">Этот метод можно вызвать с помощью вызовов <xref:System.Xaml.XamlType.GetMember%2A>.</span><span class="sxs-lookup"><span data-stu-id="6e268-535">This method can be invoked by calls to <xref:System.Xaml.XamlType.GetMember%2A>.</span></span>  
  
 <span data-ttu-id="6e268-536">Реализация по умолчанию возвращает <xref:System.Xaml.XamlType> на основе внутреннего отражения CLR и вычисления с контекстом схемы.</span><span class="sxs-lookup"><span data-stu-id="6e268-536">The default implementation returns a <xref:System.Xaml.XamlType> based on internal CLR reflection and evaluation against the schema context.</span></span>  
  
 <span data-ttu-id="6e268-537">Переопределите этот метод, если требуется, чтобы <xref:System.Xaml.XamlType.GetMember%2A> использовала другую логику.</span><span class="sxs-lookup"><span data-stu-id="6e268-537">Override this method if you want <xref:System.Xaml.XamlType.GetMember%2A> to use different logic.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="6e268-538"><xref:System.Xaml.XamlType.LookupMember%2A> является виртуальным и, следовательно, может быть переопределен.</span><span class="sxs-lookup"><span data-stu-id="6e268-538"><xref:System.Xaml.XamlType.LookupMember%2A> is virtual, and therefore, can be overridden.</span></span> <span data-ttu-id="6e268-539">Переопределение имеет потенциал (как для вредоносных целей, так и других) для изменения сообщаемых элементов типа XAML, чтобы они больше не выдавались ожидаемым образом с <xref:System.ComponentModel.TypeDescriptor> `Get*` сведениями о базовом типе CLR.</span><span class="sxs-lookup"><span data-stu-id="6e268-539">The override has the potential (whether for malicious purposes or otherwise) to change the reported members of a XAML type so that they no longer align in an expected way with the <xref:System.ComponentModel.TypeDescriptor> `Get*` information about the underlying CLR type.</span></span> <span data-ttu-id="6e268-540">Для всех проверок, критических с точки зрения безопасности, для отчетов о членах следует использовать базовый тип CLR.</span><span class="sxs-lookup"><span data-stu-id="6e268-540">For any security-critical checks of member reporting, use the underlying CLR type instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupPositionalParameters">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt; LookupPositionalParameters (int parameterCount);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class System.Xaml.XamlType&gt; LookupPositionalParameters(int32 parameterCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupPositionalParameters(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupPositionalParameters (parameterCount As Integer) As IList(Of XamlType)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::Generic::IList&lt;System::Xaml::XamlType ^&gt; ^ LookupPositionalParameters(int parameterCount);" />
      <MemberSignature Language="F#" Value="abstract member LookupPositionalParameters : int -&gt; System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;&#xA;override this.LookupPositionalParameters : int -&gt; System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;" Usage="xamlType.LookupPositionalParameters parameterCount" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameterCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="parameterCount"><span data-ttu-id="6e268-541">Количество (арность) определенного режима синтаксиса или конструктора, о котором требуется получить сведения.</span><span class="sxs-lookup"><span data-stu-id="6e268-541">The count (arity) of the particular syntax or constructor mode that you want information about.</span></span></param>
        <summary><span data-ttu-id="6e268-542">Для типов расширения разметки возвращает типы позиционных параметров, поддерживаемых в конкретном употреблении расширения разметки для данного типа <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="6e268-542">For markup extension types, returns the types of the positional parameters that are supported in a specific markup extension usage for this <see cref="T:System.Xaml.XamlType" />.</span></span></summary>
        <returns><span data-ttu-id="6e268-543">Список значений <see cref="T:System.Xaml.XamlType" />, где каждый такой тип <see cref="T:System.Xaml.XamlType" /> является типом для этой позиции в синтаксисе.</span><span class="sxs-lookup"><span data-stu-id="6e268-543">A list of <see cref="T:System.Xaml.XamlType" /> values where each such <see cref="T:System.Xaml.XamlType" /> is the type for that position in the syntax.</span></span> <span data-ttu-id="6e268-544">При передаче входных данных разметки в расширение разметки необходимо задавать эти типы в том же порядке.</span><span class="sxs-lookup"><span data-stu-id="6e268-544">You must specify those types in the same order when supplying markup input for the markup extension.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e268-545">Этот метод можно вызвать с помощью вызовов <xref:System.Xaml.XamlType.GetPositionalParameters%2A>.</span><span class="sxs-lookup"><span data-stu-id="6e268-545">This method can be invoked by calls to <xref:System.Xaml.XamlType.GetPositionalParameters%2A>.</span></span>  
  
 <span data-ttu-id="6e268-546">Реализация по умолчанию использует сведения о внутреннем отражении на основе поиска конструкторов и проверки арности.</span><span class="sxs-lookup"><span data-stu-id="6e268-546">The default implementation uses internal reflection information based on finding constructors and checking the arity.</span></span> <span data-ttu-id="6e268-547">Переопределите этот метод, если требуется, чтобы <xref:System.Xaml.XamlType.GetPositionalParameters%2A> использовала другую логику.</span><span class="sxs-lookup"><span data-stu-id="6e268-547">Override this method if you want <xref:System.Xaml.XamlType.GetPositionalParameters%2A> to use different logic.</span></span>  
  
 <span data-ttu-id="6e268-548">Этот API важен только в том случае, если этот <xref:System.Xaml.XamlType> представляет расширение разметки (<xref:System.Xaml.XamlType.IsMarkupExtension%2A> — `true`).</span><span class="sxs-lookup"><span data-stu-id="6e268-548">This API is only relevant if this <xref:System.Xaml.XamlType> represents a markup extension (<xref:System.Xaml.XamlType.IsMarkupExtension%2A> is `true`).</span></span>  
  
 <span data-ttu-id="6e268-549">Входные `parameterCount` не запрашивают тип конкретного позиционированного параметра.</span><span class="sxs-lookup"><span data-stu-id="6e268-549">The input `parameterCount` is not for requesting the type of a specific positional parameter.</span></span> <span data-ttu-id="6e268-550">Он предназначен для указания арности использования расширения разметки.</span><span class="sxs-lookup"><span data-stu-id="6e268-550">It is for specifying the arity of a markup extension usage.</span></span> <span data-ttu-id="6e268-551">Использование расширения разметки часто имеет несколько сигнатур и использует разную арность параметров (число) для различения параметров.</span><span class="sxs-lookup"><span data-stu-id="6e268-551">Markup extension usage often has multiple signatures and uses different parameter arity (count) of positional parameters to differentiate.</span></span> <span data-ttu-id="6e268-552">Однако можно настроить контекст схемы, чтобы разрешить дублирование аритиес и использовать типы позиционированных параметров для различения.</span><span class="sxs-lookup"><span data-stu-id="6e268-552">However, you can configure a schema context to allow duplicate arities and use types of the positional parameters for differentiation.</span></span> <span data-ttu-id="6e268-553">Для получения дополнительной информации см. <xref:System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity%2A>.</span><span class="sxs-lookup"><span data-stu-id="6e268-553">For more information, see <xref:System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity%2A>.</span></span> <span data-ttu-id="6e268-554">Для конкретного счетчика арности позиции и типы параметров могут различаться.</span><span class="sxs-lookup"><span data-stu-id="6e268-554">For a specific arity count, the parameter positions and types can vary.</span></span> <span data-ttu-id="6e268-555">Чтобы получить требуемый тип использования расширения разметки определенной арности, сначала необходимо вызвать <xref:System.Xaml.XamlType.GetPositionalParameters%2A> с числом арности.</span><span class="sxs-lookup"><span data-stu-id="6e268-555">To get the positional type of a specific arity's markup extension usage, you first call <xref:System.Xaml.XamlType.GetPositionalParameters%2A> with the arity count.</span></span> <span data-ttu-id="6e268-556">Затем получите элемент в этой позиции из возвращенной коллекции.</span><span class="sxs-lookup"><span data-stu-id="6e268-556">Then get the item at that position from the returned collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupSetMarkupExtensionHandler">
      <MemberSignature Language="C#" Value="protected virtual EventHandler&lt;System.Windows.Markup.XamlSetMarkupExtensionEventArgs&gt; LookupSetMarkupExtensionHandler ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.EventHandler`1&lt;class System.Windows.Markup.XamlSetMarkupExtensionEventArgs&gt; LookupSetMarkupExtensionHandler() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupSetMarkupExtensionHandler" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupSetMarkupExtensionHandler () As EventHandler(Of XamlSetMarkupExtensionEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual EventHandler&lt;System::Windows::Markup::XamlSetMarkupExtensionEventArgs ^&gt; ^ LookupSetMarkupExtensionHandler();" />
      <MemberSignature Language="F#" Value="abstract member LookupSetMarkupExtensionHandler : unit -&gt; EventHandler&lt;System.Windows.Markup.XamlSetMarkupExtensionEventArgs&gt;&#xA;override this.LookupSetMarkupExtensionHandler : unit -&gt; EventHandler&lt;System.Windows.Markup.XamlSetMarkupExtensionEventArgs&gt;" Usage="xamlType.LookupSetMarkupExtensionHandler " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Markup.XamlSetMarkupExtensionEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6e268-557">Возвращает обратный вызов обработчика, который нужно использовать для операций установки расширений разметки.</span><span class="sxs-lookup"><span data-stu-id="6e268-557">Returns a handler callback to use for the set operations of markup extensions.</span></span></summary>
        <returns><span data-ttu-id="6e268-558">Обратный вызов обработчика, который нужно использовать для операций установки расширения разметки.</span><span class="sxs-lookup"><span data-stu-id="6e268-558">A handler callback to use for the set operations of markup extensions.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e268-559">Реализация по умолчанию возвращает значение, основанное на чтении <xref:System.Windows.Markup.XamlSetMarkupExtensionAttribute>.</span><span class="sxs-lookup"><span data-stu-id="6e268-559">The default implementation returns a value based on reading <xref:System.Windows.Markup.XamlSetMarkupExtensionAttribute>.</span></span> <span data-ttu-id="6e268-560">Он также может проверить <xref:System.Xaml.XamlType.BaseType%2A> для атрибута, если в непосредственный базовый тип не найден ни один атрибут.</span><span class="sxs-lookup"><span data-stu-id="6e268-560">It can also check <xref:System.Xaml.XamlType.BaseType%2A> for the attribute if no attribute is found on the immediate underlying type.</span></span> <span data-ttu-id="6e268-561">Если значение недоступно, оно возвращает `null`.</span><span class="sxs-lookup"><span data-stu-id="6e268-561">If a value is unavailable, it returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupSetTypeConverterHandler">
      <MemberSignature Language="C#" Value="protected virtual EventHandler&lt;System.Windows.Markup.XamlSetTypeConverterEventArgs&gt; LookupSetTypeConverterHandler ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.EventHandler`1&lt;class System.Windows.Markup.XamlSetTypeConverterEventArgs&gt; LookupSetTypeConverterHandler() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupSetTypeConverterHandler" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupSetTypeConverterHandler () As EventHandler(Of XamlSetTypeConverterEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual EventHandler&lt;System::Windows::Markup::XamlSetTypeConverterEventArgs ^&gt; ^ LookupSetTypeConverterHandler();" />
      <MemberSignature Language="F#" Value="abstract member LookupSetTypeConverterHandler : unit -&gt; EventHandler&lt;System.Windows.Markup.XamlSetTypeConverterEventArgs&gt;&#xA;override this.LookupSetTypeConverterHandler : unit -&gt; EventHandler&lt;System.Windows.Markup.XamlSetTypeConverterEventArgs&gt;" Usage="xamlType.LookupSetTypeConverterHandler " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Markup.XamlSetTypeConverterEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6e268-562">Возвращает обработчик, используемый для вариантов установки преобразователя типов.</span><span class="sxs-lookup"><span data-stu-id="6e268-562">Returns a handler to use for type converter setting cases.</span></span></summary>
        <returns><span data-ttu-id="6e268-563">Обработчик, используемый для вариантов установки преобразователя типов.</span><span class="sxs-lookup"><span data-stu-id="6e268-563">A handler to use for type converter setting cases.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e268-564">Реализация по умолчанию возвращает значение, основанное на чтении <xref:System.Windows.Markup.XamlSetTypeConverterAttribute>.</span><span class="sxs-lookup"><span data-stu-id="6e268-564">The default implementation returns a value based on reading <xref:System.Windows.Markup.XamlSetTypeConverterAttribute>.</span></span> <span data-ttu-id="6e268-565">Он также может проверить <xref:System.Xaml.XamlType.BaseType%2A> для атрибута, если в непосредственный базовый тип не найден ни один атрибут.</span><span class="sxs-lookup"><span data-stu-id="6e268-565">It can also check <xref:System.Xaml.XamlType.BaseType%2A> for the attribute if no attribute is found on the immediate underlying type.</span></span> <span data-ttu-id="6e268-566">Если значение недоступно, оно возвращает `null`.</span><span class="sxs-lookup"><span data-stu-id="6e268-566">If a value is unavailable, it returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupTrimSurroundingWhitespace">
      <MemberSignature Language="C#" Value="protected virtual bool LookupTrimSurroundingWhitespace ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupTrimSurroundingWhitespace() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupTrimSurroundingWhitespace" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupTrimSurroundingWhitespace () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupTrimSurroundingWhitespace();" />
      <MemberSignature Language="F#" Value="abstract member LookupTrimSurroundingWhitespace : unit -&gt; bool&#xA;override this.LookupTrimSurroundingWhitespace : unit -&gt; bool" Usage="xamlType.LookupTrimSurroundingWhitespace " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6e268-567">Возвращает значение, указывающее, следует ли сериализовать данный <see cref="T:System.Xaml.XamlType" /> с использованием режима, удаляющего окружающие пробелы.</span><span class="sxs-lookup"><span data-stu-id="6e268-567">Returns a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> should be serialized using a mode that  trims surrounding whitespace.</span></span></summary>
        <returns><span data-ttu-id="6e268-568">Значение <see langword="true" />, если данный тип <see cref="T:System.Xaml.XamlType" /> следует сериализовать в режиме, удаляющем окружающие пробелы; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6e268-568"><see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> should be serialized in a mode that trims surrounding whitespace; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e268-569">Этот метод можно вызвать с помощью вызовов <xref:System.Xaml.XamlType.TrimSurroundingWhitespace%2A>.</span><span class="sxs-lookup"><span data-stu-id="6e268-569">This method can be invoked by calls to <xref:System.Xaml.XamlType.TrimSurroundingWhitespace%2A>.</span></span>  
  
 <span data-ttu-id="6e268-570">Реализация по умолчанию возвращает значение, основанное на чтении <xref:System.Windows.Markup.TrimSurroundingWhitespaceAttribute>.</span><span class="sxs-lookup"><span data-stu-id="6e268-570">The default implementation returns a value based on reading <xref:System.Windows.Markup.TrimSurroundingWhitespaceAttribute>.</span></span> <span data-ttu-id="6e268-571">Он также может проверить <xref:System.Xaml.XamlType.BaseType%2A> для атрибута, если в непосредственный базовый тип не найден ни один атрибут.</span><span class="sxs-lookup"><span data-stu-id="6e268-571">It can also check <xref:System.Xaml.XamlType.BaseType%2A> for the attribute if no attribute is found on the immediate underlying type.</span></span> <span data-ttu-id="6e268-572">Если значение недоступно, оно возвращает `false`.</span><span class="sxs-lookup"><span data-stu-id="6e268-572">If a value is unavailable, it returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupTypeConverter">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt; LookupTypeConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.ComponentModel.TypeConverter&gt; LookupTypeConverter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupTypeConverter" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupTypeConverter () As XamlValueConverter(Of TypeConverter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::Schema::XamlValueConverter&lt;System::ComponentModel::TypeConverter ^&gt; ^ LookupTypeConverter();" />
      <MemberSignature Language="F#" Value="abstract member LookupTypeConverter : unit -&gt; System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt;&#xA;override this.LookupTypeConverter : unit -&gt; System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt;" Usage="xamlType.LookupTypeConverter " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6e268-573">Возвращает объект <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> с ограничением <see cref="T:System.ComponentModel.TypeConverter" />, представляющим поведение преобразования типов для значений данного типа <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="6e268-573">Returns a <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> that has a <see cref="T:System.ComponentModel.TypeConverter" /> constraint, which represents type-conversion behavior for values of this <see cref="T:System.Xaml.XamlType" />.</span></span></summary>
        <returns><span data-ttu-id="6e268-574">Объект <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> с ограничением <see cref="T:System.ComponentModel.TypeConverter" />, представляющий поведение преобразования типов для значений данного типа <see cref="T:System.Xaml.XamlType" />, или значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6e268-574">A <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> with <see cref="T:System.ComponentModel.TypeConverter" /> constraint that represents type-conversion behavior for values of this <see cref="T:System.Xaml.XamlType" />; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e268-575">Этот метод можно вызвать с помощью вызовов <xref:System.Xaml.XamlType.TypeConverter%2A>.</span><span class="sxs-lookup"><span data-stu-id="6e268-575">This method can be invoked by calls to <xref:System.Xaml.XamlType.TypeConverter%2A>.</span></span>  
  
 <span data-ttu-id="6e268-576">Реализация по умолчанию возвращает значение, основанное на чтении <xref:System.ComponentModel.TypeConverterAttribute>.</span><span class="sxs-lookup"><span data-stu-id="6e268-576">The default implementation returns a value based on reading <xref:System.ComponentModel.TypeConverterAttribute>.</span></span> <span data-ttu-id="6e268-577">Реализация по умолчанию также может проверять <xref:System.Xaml.XamlType.BaseType%2A> для атрибута, если в непосредственный базовый тип не найден ни один атрибут.</span><span class="sxs-lookup"><span data-stu-id="6e268-577">The default implementation can also check <xref:System.Xaml.XamlType.BaseType%2A> for the attribute if no attribute is found on the immediate underlying type.</span></span> <span data-ttu-id="6e268-578">Он также включает специальную логику для преобразования по умолчанию перечислений, общих типов значений и универсальных шаблонов.</span><span class="sxs-lookup"><span data-stu-id="6e268-578">It also includes special logic for default conversion of enumerations, common value types, and generics.</span></span> <span data-ttu-id="6e268-579">Если значение недоступно, оно возвращает `null`.</span><span class="sxs-lookup"><span data-stu-id="6e268-579">If a value is unavailable, it returns `null`.</span></span>  
  
 <span data-ttu-id="6e268-580">Переопределите этот метод, если требуется, чтобы <xref:System.Xaml.XamlType.TypeConverter%2A> использовала другую логику.</span><span class="sxs-lookup"><span data-stu-id="6e268-580">Override this method if you want <xref:System.Xaml.XamlType.TypeConverter%2A> to use different logic.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupUnderlyingType">
      <MemberSignature Language="C#" Value="protected virtual Type LookupUnderlyingType ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Type LookupUnderlyingType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupUnderlyingType" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupUnderlyingType () As Type" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual Type ^ LookupUnderlyingType();" />
      <MemberSignature Language="F#" Value="abstract member LookupUnderlyingType : unit -&gt; Type&#xA;override this.LookupUnderlyingType : unit -&gt; Type" Usage="xamlType.LookupUnderlyingType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6e268-581">Возвращает среду CLR <see cref="T:System.Type" />, которая является базовой для типа <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="6e268-581">Returns the CLR <see cref="T:System.Type" /> that underlies this <see cref="T:System.Xaml.XamlType" />.</span></span></summary>
        <returns><span data-ttu-id="6e268-582">Среда CLR <see cref="T:System.Type" />, которая является базовой для типа <see cref="T:System.Xaml.XamlType" />, или значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6e268-582">The CLR <see cref="T:System.Type" /> that underlies this <see cref="T:System.Xaml.XamlType" />; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e268-583">Этот метод можно вызвать с помощью вызовов <xref:System.Xaml.XamlType.UnderlyingType%2A>.</span><span class="sxs-lookup"><span data-stu-id="6e268-583">This method can be invoked by calls to <xref:System.Xaml.XamlType.UnderlyingType%2A>.</span></span>  
  
 <span data-ttu-id="6e268-584">Реализация по умолчанию возвращает внутреннее поле.</span><span class="sxs-lookup"><span data-stu-id="6e268-584">The default implementation returns an internal field.</span></span> <span data-ttu-id="6e268-585">Это поле обычно инициализируется во время создания, и его значение основано на том, какой конструктор был вызван, и предоставленной информации.</span><span class="sxs-lookup"><span data-stu-id="6e268-585">That field is generally initialized during construction and its value is based on which constructor was called and the information that you provided.</span></span>  
  
 <span data-ttu-id="6e268-586">Переопределите этот метод, если требуется, чтобы <xref:System.Xaml.XamlType.UnderlyingType%2A> использовала другую логику.</span><span class="sxs-lookup"><span data-stu-id="6e268-586">Override this method if you want <xref:System.Xaml.XamlType.UnderlyingType%2A> to use different logic.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupUsableDuringInitialization">
      <MemberSignature Language="C#" Value="protected virtual bool LookupUsableDuringInitialization ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupUsableDuringInitialization() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupUsableDuringInitialization" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupUsableDuringInitialization () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupUsableDuringInitialization();" />
      <MemberSignature Language="F#" Value="abstract member LookupUsableDuringInitialization : unit -&gt; bool&#xA;override this.LookupUsableDuringInitialization : unit -&gt; bool" Usage="xamlType.LookupUsableDuringInitialization " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6e268-587">Возвращает значение, которое показывает, выполняется ли построение этого класса <see cref="T:System.Xaml.XamlType" /> сверху вниз при инициализации языка XAML.</span><span class="sxs-lookup"><span data-stu-id="6e268-587">Returns a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> is built top-down during XAML initialization.</span></span></summary>
        <returns><span data-ttu-id="6e268-588">Значение <see langword="true" />, если этот класс <see cref="T:System.Xaml.XamlType" /> строится сверху вниз в ходе инициализации XAML; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6e268-588"><see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> is built top-down during XAML initialization; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e268-589">"Сверху вниз" — это метафора, которая приблизительно соответствует поведению процессора XAML при создании графа объекта.</span><span class="sxs-lookup"><span data-stu-id="6e268-589">Top-down is a metaphor that approximates XAML processor behavior when it creates the object graph.</span></span> <span data-ttu-id="6e268-590">При построении сверху вниз создается экземпляр типа, который прикрепляется к родительскому элементу и задается его свойства.</span><span class="sxs-lookup"><span data-stu-id="6e268-590">When built top-down, a type is instantiated, attached to the parent, and has its properties set.</span></span> <span data-ttu-id="6e268-591">Построение сверху вниз позволяет избежать многократного вызова обработчиков, изменяющих свойства.</span><span class="sxs-lookup"><span data-stu-id="6e268-591">Top-down construction avoids invoking property-changed handlers multiple times.</span></span> <span data-ttu-id="6e268-592">Такая обработка настраивает граф объектов и, следовательно, устраняет несколько вызовов обработчика и обеспечивает оптимизацию производительности для запуска графа объекта.</span><span class="sxs-lookup"><span data-stu-id="6e268-592">Such handling ripples up the object graph and therefore, eliminates the multiple handler calls and provides a performance optimization for startup of the object graph.</span></span>  
  
 <span data-ttu-id="6e268-593">Этот метод можно вызвать с помощью вызовов <xref:System.Xaml.XamlType.IsUsableDuringInitialization%2A>.</span><span class="sxs-lookup"><span data-stu-id="6e268-593">This method can be invoked by calls to <xref:System.Xaml.XamlType.IsUsableDuringInitialization%2A>.</span></span>  
  
 <span data-ttu-id="6e268-594">Реализация по умолчанию возвращает значение, основанное на чтении <xref:System.Windows.Markup.UsableDuringInitializationAttribute>.</span><span class="sxs-lookup"><span data-stu-id="6e268-594">The default implementation returns a value based on reading <xref:System.Windows.Markup.UsableDuringInitializationAttribute>.</span></span> <span data-ttu-id="6e268-595">Он также может проверить <xref:System.Xaml.XamlType.BaseType%2A> для атрибута, если в непосредственный базовый тип не найден ни один атрибут.</span><span class="sxs-lookup"><span data-stu-id="6e268-595">It can also check <xref:System.Xaml.XamlType.BaseType%2A> for the attribute if no attribute is found on the immediate underlying type.</span></span> <span data-ttu-id="6e268-596">Если значение недоступно, оно возвращает `false`.</span><span class="sxs-lookup"><span data-stu-id="6e268-596">If a value is unavailable, it returns `false`.</span></span>  
  
 <span data-ttu-id="6e268-597">Переопределите этот метод, если требуется, чтобы <xref:System.Xaml.XamlType.IsUsableDuringInitialization%2A> использовала другую логику.</span><span class="sxs-lookup"><span data-stu-id="6e268-597">Override this method if you want <xref:System.Xaml.XamlType.IsUsableDuringInitialization%2A> to use different logic.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupValueSerializer">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt; LookupValueSerializer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.Windows.Markup.ValueSerializer&gt; LookupValueSerializer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupValueSerializer" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupValueSerializer () As XamlValueConverter(Of ValueSerializer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::Schema::XamlValueConverter&lt;System::Windows::Markup::ValueSerializer ^&gt; ^ LookupValueSerializer();" />
      <MemberSignature Language="F#" Value="abstract member LookupValueSerializer : unit -&gt; System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt;&#xA;override this.LookupValueSerializer : unit -&gt; System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt;" Usage="xamlType.LookupValueSerializer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6e268-598">Возвращает <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> с ограничением <see cref="T:System.Windows.Markup.ValueSerializer" />, представляющим поведение сериализации значений для значений данного типа <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="6e268-598">Returns a <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> that has a <see cref="T:System.Windows.Markup.ValueSerializer" /> constraint, which represents value serialization behavior for values of this <see cref="T:System.Xaml.XamlType" />.</span></span></summary>
        <returns><span data-ttu-id="6e268-599">Объект <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> с ограничением <see cref="T:System.Windows.Markup.ValueSerializer" />, представляющий поведение сериализации значений для значений данного типа <see cref="T:System.Xaml.XamlType" />, или значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6e268-599">A <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> with <see cref="T:System.Windows.Markup.ValueSerializer" /> constraint that represents value serialization behavior for values of this <see cref="T:System.Xaml.XamlType" />; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e268-600">Этот метод можно вызвать с помощью вызовов <xref:System.Xaml.XamlType.ValueSerializer%2A>.</span><span class="sxs-lookup"><span data-stu-id="6e268-600">This method can be invoked by calls to <xref:System.Xaml.XamlType.ValueSerializer%2A>.</span></span>  
  
 <span data-ttu-id="6e268-601">Реализация по умолчанию возвращает значение, основанное на чтении <xref:System.Windows.Markup.ValueSerializerAttribute>.</span><span class="sxs-lookup"><span data-stu-id="6e268-601">The default implementation returns a value based on reading <xref:System.Windows.Markup.ValueSerializerAttribute>.</span></span> <span data-ttu-id="6e268-602">Он также может проверить <xref:System.Xaml.XamlType.BaseType%2A> для атрибута, если в непосредственный базовый тип не найден ни один атрибут.</span><span class="sxs-lookup"><span data-stu-id="6e268-602">It can also check <xref:System.Xaml.XamlType.BaseType%2A> for the attribute if no attribute is found on the immediate underlying type.</span></span> <span data-ttu-id="6e268-603">Он также включает специальную логику сериализации по умолчанию для перечислений, общих типов значений или универсальных шаблонов.</span><span class="sxs-lookup"><span data-stu-id="6e268-603">It also includes special logic for default serialization of enumerations, common value types, or generics.</span></span> <span data-ttu-id="6e268-604">Если значение недоступно, оно возвращает `null`.</span><span class="sxs-lookup"><span data-stu-id="6e268-604">If a value is unavailable, it returns `null`.</span></span>  
  
 <span data-ttu-id="6e268-605">Переопределите этот метод, если требуется, чтобы <xref:System.Xaml.XamlType.ValueSerializer%2A> использовала другую логику.</span><span class="sxs-lookup"><span data-stu-id="6e268-605">Override this method if you want <xref:System.Xaml.XamlType.ValueSerializer%2A> to use different logic.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MarkupExtensionReturnType">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlType MarkupExtensionReturnType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlType MarkupExtensionReturnType" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.MarkupExtensionReturnType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MarkupExtensionReturnType As XamlType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::XamlType ^ MarkupExtensionReturnType { System::Xaml::XamlType ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MarkupExtensionReturnType : System.Xaml.XamlType" Usage="System.Xaml.XamlType.MarkupExtensionReturnType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6e268-606">Получает значение, предоставляющее сведения о типе для возвращенного значения <see langword="ProvideValue" /> данного типа <see cref="T:System.Xaml.XamlType" />, если он представляет расширение разметки.</span><span class="sxs-lookup"><span data-stu-id="6e268-606">Gets a value that provides the type information for the returned <see langword="ProvideValue" /> of this <see cref="T:System.Xaml.XamlType" />, if it represents a markup extension.</span></span></summary>
        <value><span data-ttu-id="6e268-607">Объект <see cref="T:System.Xaml.XamlType" /> для возвращаемого типа для использования расширения разметки или значение <see langword="null" />, если данный тип <see cref="T:System.Xaml.XamlType" /> не представляет расширение разметки.</span><span class="sxs-lookup"><span data-stu-id="6e268-607">A <see cref="T:System.Xaml.XamlType" /> object for the return type for markup extension usage; otherwise, <see langword="null" />, if this <see cref="T:System.Xaml.XamlType" /> does not represent a markup extension.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e268-608">Это свойство имеет значение, только если этот <xref:System.Xaml.XamlType> представляет расширение разметки (`x:MarkupExtension` находится в списке назначаемых типов).</span><span class="sxs-lookup"><span data-stu-id="6e268-608">This property is only relevant if this <xref:System.Xaml.XamlType> represents a markup extension (`x:MarkupExtension` is in the assignable types list).</span></span>  
  
 <span data-ttu-id="6e268-609">Если вы не используете метод внутренней среды CLR по умолчанию для <xref:System.Xaml.XamlType>, вызовы этого свойства могут вызвать переопределение <xref:System.Xaml.XamlType.LookupMarkupExtensionReturnType%2A> для классов, производных от <xref:System.Xaml.XamlType>.</span><span class="sxs-lookup"><span data-stu-id="6e268-609">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupMarkupExtensionReturnType%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="6e268-610">Дополнительные сведения о возвращаемых значениях и других поведении см. в документации по <xref:System.Xaml.XamlType.LookupMarkupExtensionReturnType%2A> для этого типа.</span><span class="sxs-lookup"><span data-stu-id="6e268-610">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupMarkupExtensionReturnType%2A> on this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Xaml.XamlType.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6e268-611">Получает строковое имя типа, представляемого данным типом <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="6e268-611">Gets the string name of the type that this <see cref="T:System.Xaml.XamlType" /> represents.</span></span></summary>
        <value><span data-ttu-id="6e268-612">Строковое представление имени этого типа XAML.</span><span class="sxs-lookup"><span data-stu-id="6e268-612">The string name of this XAML type.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e268-613">Это свойство обычно получает имя, сформированное схемой (для подписи <xref:System.Xaml.XamlType.%23ctor%2A>), или имя <xref:System.Type>, если оно создается с помощью подданного конструктора системы типов CLR.</span><span class="sxs-lookup"><span data-stu-id="6e268-613">This property typically gets the schema-constructed name (per the <xref:System.Xaml.XamlType.%23ctor%2A> signature), or the name of the <xref:System.Type>, if it is constructed by using the pertinent constructor of the CLR type system.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Xaml.XamlType xamlType1, System.Xaml.XamlType xamlType2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(class System.Xaml.XamlType xamlType1, class System.Xaml.XamlType xamlType2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.op_Equality(System.Xaml.XamlType,System.Xaml.XamlType)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (xamlType1 As XamlType, xamlType2 As XamlType) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Xaml::XamlType ^ xamlType1, System::Xaml::XamlType ^ xamlType2);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Xaml.XamlType * System.Xaml.XamlType -&gt; bool" Usage="xamlType1 = xamlType2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xamlType1" Type="System.Xaml.XamlType" />
        <Parameter Name="xamlType2" Type="System.Xaml.XamlType" />
      </Parameters>
      <Docs>
        <param name="xamlType1"><span data-ttu-id="6e268-614"><see cref="T:System.Xaml.XamlType" /> или <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6e268-614">A <see cref="T:System.Xaml.XamlType" /> or <see langword="null" />.</span></span></param>
        <param name="xamlType2"><span data-ttu-id="6e268-615"><see cref="T:System.Xaml.XamlType" /> или <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6e268-615">A <see cref="T:System.Xaml.XamlType" /> or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="6e268-616">Определяет, совпадают ли значения двух указанных объектов <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="6e268-616">Determines whether two specified <see cref="T:System.Xaml.XamlType" /> objects have the same value.</span></span></summary>
        <returns><span data-ttu-id="6e268-617">Значение <see langword="true" />, если значение параметра <paramref name="xamlType1" /> совпадает со значением <paramref name="xamlType2" />; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6e268-617"><see langword="true" /> if the value of <paramref name="xamlType1" /> is the same as the value of <paramref name="xamlType2" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Xaml.XamlType xamlType1, System.Xaml.XamlType xamlType2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(class System.Xaml.XamlType xamlType1, class System.Xaml.XamlType xamlType2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.op_Inequality(System.Xaml.XamlType,System.Xaml.XamlType)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (xamlType1 As XamlType, xamlType2 As XamlType) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Xaml::XamlType ^ xamlType1, System::Xaml::XamlType ^ xamlType2);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Xaml.XamlType * System.Xaml.XamlType -&gt; bool" Usage="System.Xaml.XamlType.op_Inequality (xamlType1, xamlType2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xamlType1" Type="System.Xaml.XamlType" />
        <Parameter Name="xamlType2" Type="System.Xaml.XamlType" />
      </Parameters>
      <Docs>
        <param name="xamlType1"><span data-ttu-id="6e268-618"><see cref="T:System.Xaml.XamlType" /> или <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6e268-618">A <see cref="T:System.Xaml.XamlType" /> or <see langword="null" />.</span></span></param>
        <param name="xamlType2"><span data-ttu-id="6e268-619"><see cref="T:System.Xaml.XamlType" /> или <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6e268-619">A <see cref="T:System.Xaml.XamlType" /> or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="6e268-620">Определяет, различаются ли значения двух указанных объектов <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="6e268-620">Determines whether two specified <see cref="T:System.Xaml.XamlType" /> objects have different values.</span></span></summary>
        <returns><span data-ttu-id="6e268-621">Значение <see langword="true" />, если значение <paramref name="xamlType1" /> отличается от значения <paramref name="xamlType2" />; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6e268-621"><see langword="true" /> if the value of <paramref name="xamlType1" /> is different from the value of <paramref name="xamlType2" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreferredXamlNamespace">
      <MemberSignature Language="C#" Value="public string PreferredXamlNamespace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PreferredXamlNamespace" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.PreferredXamlNamespace" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PreferredXamlNamespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PreferredXamlNamespace { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PreferredXamlNamespace : string" Usage="System.Xaml.XamlType.PreferredXamlNamespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6e268-622">Получает одно пространство имен XAML, являющееся первичным пространством имен XAML для данного типа <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="6e268-622">Gets the single XAML namespace that is the primary XAML namespace for this <see cref="T:System.Xaml.XamlType" />.</span></span></summary>
        <value><span data-ttu-id="6e268-623">Идентификатор первичного пространства имен XAML для данного типа XAML в виде строки.</span><span class="sxs-lookup"><span data-stu-id="6e268-623">The identifier, as a string, of the primary XAML namespace for this XAML type.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e268-624">Эта реализация предоставляет то же значение, что и вызов <xref:System.Xaml.XamlType.GetXamlNamespaces%2A>, а затем получение первой строки значения из возвращенного перечислимого набора.</span><span class="sxs-lookup"><span data-stu-id="6e268-624">This implementation provides the same value as calling <xref:System.Xaml.XamlType.GetXamlNamespaces%2A> and then getting the first value string from the returned enumerable set.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SchemaContext">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlSchemaContext SchemaContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlSchemaContext SchemaContext" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.SchemaContext" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SchemaContext As XamlSchemaContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::XamlSchemaContext ^ SchemaContext { System::Xaml::XamlSchemaContext ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SchemaContext : System.Xaml.XamlSchemaContext" Usage="System.Xaml.XamlType.SchemaContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlSchemaContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6e268-625">Получает активный контекст <see cref="T:System.Xaml.XamlSchemaContext" /> для обработки этого класса <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="6e268-625">Gets the active <see cref="T:System.Xaml.XamlSchemaContext" /> for processing this <see cref="T:System.Xaml.XamlType" />.</span></span></summary>
        <value><span data-ttu-id="6e268-626">Активный контекст <see cref="T:System.Xaml.XamlSchemaContext" /> для обработки этого класса <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="6e268-626">The active <see cref="T:System.Xaml.XamlSchemaContext" /> for processing this <see cref="T:System.Xaml.XamlType" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e268-627"><xref:System.Xaml.XamlSchemaContext> является обязательной записью параметра при создании <xref:System.Xaml.XamlType>.</span><span class="sxs-lookup"><span data-stu-id="6e268-627"><xref:System.Xaml.XamlSchemaContext> is a required parameter entry when constructing a <xref:System.Xaml.XamlType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="xamlType.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6e268-628">Возвращает строковое представление данного объекта <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="6e268-628">Returns a string representation of this <see cref="T:System.Xaml.XamlType" />.</span></span></summary>
        <returns><span data-ttu-id="6e268-629">Строковое представление данного объекта <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="6e268-629">A string representation of this <see cref="T:System.Xaml.XamlType" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e268-630">Реализация <xref:System.Xaml.XamlType> <xref:System.Object.ToString%2A> возвращает свойство <xref:System.Xaml.XamlType.Name%2A> объекта <xref:System.Xaml.XamlType>.</span><span class="sxs-lookup"><span data-stu-id="6e268-630">The <xref:System.Xaml.XamlType> implementation of <xref:System.Object.ToString%2A> returns the <xref:System.Xaml.XamlType.Name%2A> property of the <xref:System.Xaml.XamlType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TrimSurroundingWhitespace">
      <MemberSignature Language="C#" Value="public bool TrimSurroundingWhitespace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TrimSurroundingWhitespace" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.TrimSurroundingWhitespace" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TrimSurroundingWhitespace As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TrimSurroundingWhitespace { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.TrimSurroundingWhitespace : bool" Usage="System.Xaml.XamlType.TrimSurroundingWhitespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6e268-631">Получает значение, указывающее, имеет ли данный тип <see cref="T:System.Xaml.XamlType" /> поведение обработки пробелов для сериализации, выполняющее удаление окружающих пробелов из его содержимого.</span><span class="sxs-lookup"><span data-stu-id="6e268-631">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlType" /> has whitespace handling behavior for serialization that trims the surrounding whitespace in its content.</span></span></summary>
        <value><span data-ttu-id="6e268-632">Значение <see langword="true" />, если этот класс <see cref="T:System.Xaml.XamlType" /> представляет тип, в котором используется удаление пробелов; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6e268-632"><see langword="true" /> if this <see cref="T:System.Xaml.XamlType" /> represents a type that uses whitespace trimming; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e268-633">Если вы не используете метод внутренней среды CLR по умолчанию для <xref:System.Xaml.XamlType>, вызовы этого свойства могут вызвать переопределение <xref:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection%2A> для классов, производных от <xref:System.Xaml.XamlType>.</span><span class="sxs-lookup"><span data-stu-id="6e268-633">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="6e268-634">Дополнительные сведения о возвращаемых значениях и других поведении см. в документации по <xref:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection%2A> для этого типа.</span><span class="sxs-lookup"><span data-stu-id="6e268-634">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection%2A> on this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeArguments">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt; TypeArguments { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class System.Xaml.XamlType&gt; TypeArguments" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.TypeArguments" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TypeArguments As IList(Of XamlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;System::Xaml::XamlType ^&gt; ^ TypeArguments { System::Collections::Generic::IList&lt;System::Xaml::XamlType ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TypeArguments : System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;" Usage="System.Xaml.XamlType.TypeArguments" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6e268-635">Получает список типов аргументов для случаев, в которых данный тип <see cref="T:System.Xaml.XamlType" /> представляет универсальный тип.</span><span class="sxs-lookup"><span data-stu-id="6e268-635">Gets a list of type arguments for cases where this <see cref="T:System.Xaml.XamlType" /> represents a generic.</span></span></summary>
        <value><span data-ttu-id="6e268-636">Список типов аргументов или значение <see langword="null" />, если данный тип <see cref="T:System.Xaml.XamlType" /> не представляет универсальный тип.</span><span class="sxs-lookup"><span data-stu-id="6e268-636">A list of type argument types; otherwise, <see langword="null" />, if this <see cref="T:System.Xaml.XamlType" /> does not represent a generic.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e268-637">Существуют определенные сценарии для <xref:System.Xaml.XamlType>, где вызов параметра <xref:System.Xaml.XamlType.TypeArguments%2A> возвращает список, в котором типы по-прежнему открыты.</span><span class="sxs-lookup"><span data-stu-id="6e268-637">There are certain scenarios for a <xref:System.Xaml.XamlType> where calling the <xref:System.Xaml.XamlType.TypeArguments%2A> parameter returns a list where the types are still open.</span></span> <span data-ttu-id="6e268-638">В этом случае одно или несколько возвращенных значений <xref:System.Xaml.XamlType> будут иметь значения заполнителей для <xref:System.Xaml.XamlType.Name%2A?displayProperty=nameWithType>, например `T`, чтобы представить, что универсальный объект все еще открыт.</span><span class="sxs-lookup"><span data-stu-id="6e268-638">In this case, one or more of the returned <xref:System.Xaml.XamlType> values will have placeholder values for <xref:System.Xaml.XamlType.Name%2A?displayProperty=nameWithType>, such as `T`, to represent that the generic is still open.</span></span> <span data-ttu-id="6e268-639">Этот сценарий может возникать, если вы получаете <xref:System.Xaml.XamlType> из вызова <xref:System.Xaml.XamlSchemaContext.GetXamlType%2A>, а не из реализации средства чтения XAML.</span><span class="sxs-lookup"><span data-stu-id="6e268-639">This scenario can occur if you get a <xref:System.Xaml.XamlType> from a call to <xref:System.Xaml.XamlSchemaContext.GetXamlType%2A>, instead of from a XAML reader implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeConverter">
      <MemberSignature Language="C#" Value="public System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt; TypeConverter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.ComponentModel.TypeConverter&gt; TypeConverter" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.TypeConverter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TypeConverter As XamlValueConverter(Of TypeConverter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::Schema::XamlValueConverter&lt;System::ComponentModel::TypeConverter ^&gt; ^ TypeConverter { System::Xaml::Schema::XamlValueConverter&lt;System::ComponentModel::TypeConverter ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TypeConverter : System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt;" Usage="System.Xaml.XamlType.TypeConverter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6e268-640">Получает объект <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> с ограничением <see cref="T:System.ComponentModel.TypeConverter" />, представляющий поведение преобразования типов для значений данного типа <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="6e268-640">Gets a <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> with <see cref="T:System.ComponentModel.TypeConverter" /> constraint that represents type conversion behavior for values of this <see cref="T:System.Xaml.XamlType" />.</span></span></summary>
        <value><span data-ttu-id="6e268-641">Объект <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> с ограничением <see cref="T:System.ComponentModel.TypeConverter" />, представляющий поведение преобразования типов для значений данного типа <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="6e268-641">A <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> with <see cref="T:System.ComponentModel.TypeConverter" /> constraint that represents type conversion behavior for values of this <see cref="T:System.Xaml.XamlType" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e268-642">Если вы не используете метод внутренней среды CLR по умолчанию для <xref:System.Xaml.XamlType>, вызовы этого свойства могут вызвать переопределение <xref:System.Xaml.XamlType.LookupTypeConverter%2A> для классов, производных от <xref:System.Xaml.XamlType>.</span><span class="sxs-lookup"><span data-stu-id="6e268-642">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupTypeConverter%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="6e268-643">Дополнительные сведения о возвращаемых значениях и других поведении см. в документации по <xref:System.Xaml.XamlType.LookupTypeConverter%2A> для этого типа.</span><span class="sxs-lookup"><span data-stu-id="6e268-643">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupTypeConverter%2A> on this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnderlyingType">
      <MemberSignature Language="C#" Value="public Type UnderlyingType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type UnderlyingType" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.UnderlyingType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UnderlyingType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ UnderlyingType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UnderlyingType : Type" Usage="System.Xaml.XamlType.UnderlyingType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6e268-644">Получает среду CLR <see cref="T:System.Type" />, которая является базовой для типа <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="6e268-644">Gets the CLR <see cref="T:System.Type" /> that underlies this <see cref="T:System.Xaml.XamlType" />.</span></span></summary>
        <value><span data-ttu-id="6e268-645">Среда CLR <see cref="T:System.Type" />, являющаяся базовой для данного типа <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="6e268-645">The CLR <see cref="T:System.Type" /> that underlies this <see cref="T:System.Xaml.XamlType" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValueSerializer">
      <MemberSignature Language="C#" Value="public System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt; ValueSerializer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.Windows.Markup.ValueSerializer&gt; ValueSerializer" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.ValueSerializer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ValueSerializer As XamlValueConverter(Of ValueSerializer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::Schema::XamlValueConverter&lt;System::Windows::Markup::ValueSerializer ^&gt; ^ ValueSerializer { System::Xaml::Schema::XamlValueConverter&lt;System::Windows::Markup::ValueSerializer ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ValueSerializer : System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt;" Usage="System.Xaml.XamlType.ValueSerializer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6e268-646">Получает объект <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> с ограничением <see cref="T:System.Windows.Markup.ValueSerializer" />, представляющий поведение сериализации значений для значений данного типа <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="6e268-646">Gets a <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> with <see cref="T:System.Windows.Markup.ValueSerializer" /> constraint that represents value serialization behavior for values of this <see cref="T:System.Xaml.XamlType" />.</span></span></summary>
        <value><span data-ttu-id="6e268-647">Объект <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> с ограничением <see cref="T:System.Windows.Markup.ValueSerializer" />, представляющий поведение сериализации значений для значений данного типа <see cref="T:System.Xaml.XamlType" />, или значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6e268-647">A <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> with <see cref="T:System.Windows.Markup.ValueSerializer" /> constraint that represents value serialization behavior for values of this <see cref="T:System.Xaml.XamlType" />; otherwise, <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e268-648">Если вы не используете метод внутренней среды CLR по умолчанию для <xref:System.Xaml.XamlType>, вызовы этого свойства могут вызвать переопределение <xref:System.Xaml.XamlType.LookupValueSerializer%2A> для классов, производных от <xref:System.Xaml.XamlType>.</span><span class="sxs-lookup"><span data-stu-id="6e268-648">If you do not use the default internal CLR reflection technique for a <xref:System.Xaml.XamlType>, calls to this property can invoke <xref:System.Xaml.XamlType.LookupValueSerializer%2A> overrides on <xref:System.Xaml.XamlType> derived classes.</span></span> <span data-ttu-id="6e268-649">Дополнительные сведения о возвращаемых значениях и других поведении см. в документации по <xref:System.Xaml.XamlType.LookupValueSerializer%2A> для этого типа.</span><span class="sxs-lookup"><span data-stu-id="6e268-649">For more information about return values and other behavior, see the documentation for <xref:System.Xaml.XamlType.LookupValueSerializer%2A> on this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
