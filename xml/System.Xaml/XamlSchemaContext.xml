<Type Name="XamlSchemaContext" FullName="System.Xaml.XamlSchemaContext">
  <Metadata><Meta Name="ms.openlocfilehash" Value="efd865db192851c2d0fc38d5e634296126fa55f0" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69427124" /></Metadata><TypeSignature Language="C#" Value="public class XamlSchemaContext" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XamlSchemaContext extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.XamlSchemaContext" />
  <TypeSignature Language="VB.NET" Value="Public Class XamlSchemaContext" />
  <TypeSignature Language="C++ CLI" Value="public ref class XamlSchemaContext" />
  <TypeSignature Language="F#" Value="type XamlSchemaContext = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="f8200-101">Определяет контекст с возможностью многократного использования для интерпретации или сопоставления типов XAML и типов в базовых сборках.</span><span class="sxs-lookup"><span data-stu-id="f8200-101">Defines a reusable context for interpreting or mapping XAML types, and the types in the assemblies that underlie them.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8200-102">Контекст схемы XAML предоставляет уровень абстракции между схемой или словарем для XAML и определенной реализацией средства синтаксического анализа.</span><span class="sxs-lookup"><span data-stu-id="f8200-102">A XAML schema context provides a layer of abstraction between a schema or vocabulary for XAML, and a specific parser implementation.</span></span> <span data-ttu-id="f8200-103">Вставив концепцию контекста схемы, схему можно использовать с различными средствами синтаксического анализа XAML, и контекст схемы заполнит сведения, необходимые для взаимодействия с конкретным синтаксическим анализатором XAML.</span><span class="sxs-lookup"><span data-stu-id="f8200-103">By inserting the concept of a schema context, the schema can be used with different XAML parsers, and the schema context fills in the details that are needed to interact with a specific XAML parser.</span></span> <span data-ttu-id="f8200-104">Например, контекст схемы XAML предоставляет API-интерфейсы запросов, которые относятся к концепциям XAML или к привязке CLR к системе типов XAML.</span><span class="sxs-lookup"><span data-stu-id="f8200-104">For example, the XAML schema context provides query APIs that relate to XAML concepts or to the CLR binding to the XAML type system.</span></span> <span data-ttu-id="f8200-105">Контекст схемы XAML также отвечает за поддержание списка сборок загруженных сборок, который определяет, где средство синтаксического анализа XAML ищет резервные типы.</span><span class="sxs-lookup"><span data-stu-id="f8200-105">The XAML schema context is also responsible for maintaining the assembly list of loaded assemblies, which defines where a XAML parser looks for backing types.</span></span>  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para><span data-ttu-id="f8200-106">В объект <see cref="T:System.AppDomain" /> <see cref="T:System.Xaml.XamlSchemaContext" /> может совместно использоваться несколькими вызывающими объектами, которые включают в себя как полные, так и частично доверенные вызывающие объекты.</span><span class="sxs-lookup"><span data-stu-id="f8200-106">In an <see cref="T:System.AppDomain" />, a <see cref="T:System.Xaml.XamlSchemaContext" /> can be shared between multiple callers, which include both full and partial trust callers.</span></span> <span data-ttu-id="f8200-107">Такая ситуация возникает в таких платформах, как WPF, которые предоставляют доступ с частичным доверием к загрузке XAML для частей модели приложения WPF.</span><span class="sxs-lookup"><span data-stu-id="f8200-107">This situation exists in frameworks such as WPF, which provide partial-trust access to XAML loading for portions of the WPF application model.</span></span> <span data-ttu-id="f8200-108">Реализация по <see cref="T:System.Xaml.XamlSchemaContext" /> умолчанию обеспечивает защиту в этом сценарии, сохраняя неизменяемые свойства и параметры.</span><span class="sxs-lookup"><span data-stu-id="f8200-108">The default <see cref="T:System.Xaml.XamlSchemaContext" /> implementation provides safeguards in this scenario by keeping all its properties and settings immutable.</span></span> <span data-ttu-id="f8200-109">В производных реализациях следует также рассмотреть возможность использования этой модели неизменности для свойств и параметров контекста схемы XAML.</span><span class="sxs-lookup"><span data-stu-id="f8200-109">Derived implementations should also consider following this model of immutability for properties and settings of a XAML schema context.</span></span>  
  
<span data-ttu-id="f8200-110"><see cref="T:System.Xaml.XamlSchemaContext" /> Базовый класс разработан таким образом, что уточняющие запросы не имеют внешних наблюдаемых побочных эффектов.</span><span class="sxs-lookup"><span data-stu-id="f8200-110">The <see cref="T:System.Xaml.XamlSchemaContext" /> base class is designed so that lookups have no externally observable side effects.</span></span> <span data-ttu-id="f8200-111">Типы, на которые ссылаются <see cref="T:System.Xaml.XamlSchemaContext" /> интерфейсы API в базовом классе, такие как <see cref="T:System.Xaml.XamlType" /> или <see cref="T:System.Xaml.XamlMember" />, также не создают побочных эффектов из уточняющих запросов.</span><span class="sxs-lookup"><span data-stu-id="f8200-111">The types that are referenced by <see cref="T:System.Xaml.XamlSchemaContext" /> APIs in the base class, such as <see cref="T:System.Xaml.XamlType" /> or <see cref="T:System.Xaml.XamlMember" />, also produce no side effects from lookups.</span></span> <span data-ttu-id="f8200-112">Все данные, необходимые для определения схемы, должны быть доступны в построении и параметрах <see cref="T:System.AppDomain" />.</span><span class="sxs-lookup"><span data-stu-id="f8200-112">All data that is needed to make a schema determination should be available from the construction and settings of the <see cref="T:System.AppDomain" />.</span></span> <span data-ttu-id="f8200-113">Обратите внимание, что интерфейсы API поиска не зависят от явно переданных служб. их входные данные основываются только на входных строках.</span><span class="sxs-lookup"><span data-stu-id="f8200-113">Notice that no lookup APIs rely on explicitly passed-in services; their input relies on string input only.</span></span>  
  
<span data-ttu-id="f8200-114">Базовый класс, и <see cref="T:System.Xaml.XamlMember" />ивсе являются потокобезопасными в своих базовых реализациях. <see cref="T:System.Xaml.XamlType" /> <see cref="T:System.Xaml.XamlSchemaContext" /></span><span class="sxs-lookup"><span data-stu-id="f8200-114">The <see cref="T:System.Xaml.XamlSchemaContext" /> base class, and <see cref="T:System.Xaml.XamlType" /> and <see cref="T:System.Xaml.XamlMember" /> are all thread safe in their base implementations.</span></span> <span data-ttu-id="f8200-115">При наследовании от <see cref="T:System.Xaml.XamlSchemaContext" /> или наследования классов системы типов XAML, таких как <see cref="T:System.Xaml.XamlType" /> и <see cref="T:System.Xaml.XamlMember" /> , можно выбрать, будут ли классы работать как потокобезопасные.</span><span class="sxs-lookup"><span data-stu-id="f8200-115">If you derive from <see cref="T:System.Xaml.XamlSchemaContext" /> or derive XAML type system classes such as <see cref="T:System.Xaml.XamlType" /> and <see cref="T:System.Xaml.XamlMember" /> , you can choose whether your classes will behave as thread safe.</span></span></para></block>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f8200-116">Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlSchemaContext" />.</span><span class="sxs-lookup"><span data-stu-id="f8200-116">Initializes a new instance of the <see cref="T:System.Xaml.XamlSchemaContext" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlSchemaContext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlSchemaContext.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlSchemaContext();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f8200-117">Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlSchemaContext" />.</span><span class="sxs-lookup"><span data-stu-id="f8200-117">Initializes a new instance of the <see cref="T:System.Xaml.XamlSchemaContext" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlSchemaContext (System.Collections.Generic.IEnumerable&lt;System.Reflection.Assembly&gt; referenceAssemblies);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;class System.Reflection.Assembly&gt; referenceAssemblies) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlSchemaContext.#ctor(System.Collections.Generic.IEnumerable{System.Reflection.Assembly})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (referenceAssemblies As IEnumerable(Of Assembly))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlSchemaContext(System::Collections::Generic::IEnumerable&lt;System::Reflection::Assembly ^&gt; ^ referenceAssemblies);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlSchemaContext : seq&lt;System.Reflection.Assembly&gt; -&gt; System.Xaml.XamlSchemaContext" Usage="new System.Xaml.XamlSchemaContext referenceAssemblies" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="referenceAssemblies" Type="System.Collections.Generic.IEnumerable&lt;System.Reflection.Assembly&gt;" />
      </Parameters>
      <Docs>
        <param name="referenceAssemblies"><span data-ttu-id="f8200-118">Перечисляемый набор элементов сведений о сборках.</span><span class="sxs-lookup"><span data-stu-id="f8200-118">An enumerable set of assembly information items.</span></span> <span data-ttu-id="f8200-119">Каждый элемент сведений о сборках определяется значением <see cref="T:System.Reflection.Assembly" />.</span><span class="sxs-lookup"><span data-stu-id="f8200-119">Each assembly information item is specified by an <see cref="T:System.Reflection.Assembly" /> value.</span></span></param>
        <summary><span data-ttu-id="f8200-120">Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlSchemaContext" /> на основе набора базовых сборок.</span><span class="sxs-lookup"><span data-stu-id="f8200-120">Initializes a new instance of the <see cref="T:System.Xaml.XamlSchemaContext" /> class, based on a set of reference assemblies.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlSchemaContext (System.Xaml.XamlSchemaContextSettings settings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xaml.XamlSchemaContextSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlSchemaContext.#ctor(System.Xaml.XamlSchemaContextSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (settings As XamlSchemaContextSettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlSchemaContext(System::Xaml::XamlSchemaContextSettings ^ settings);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlSchemaContext : System.Xaml.XamlSchemaContextSettings -&gt; System.Xaml.XamlSchemaContext" Usage="new System.Xaml.XamlSchemaContext settings" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="settings" Type="System.Xaml.XamlSchemaContextSettings" />
      </Parameters>
      <Docs>
        <param name="settings"><span data-ttu-id="f8200-121">Объект параметров, используемый для создания объекта <see cref="T:System.Xaml.XamlSchemaContext" />.</span><span class="sxs-lookup"><span data-stu-id="f8200-121">The settings object to use to construct the <see cref="T:System.Xaml.XamlSchemaContext" />.</span></span></param>
        <summary><span data-ttu-id="f8200-122">Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlSchemaContext" /> на основе объекта параметров.</span><span class="sxs-lookup"><span data-stu-id="f8200-122">Initializes a new instance of the <see cref="T:System.Xaml.XamlSchemaContext" /> class, based on a settings object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8200-123">Объект параметров сохраняет сведения о конвертере текста и расширении разметки для контекста схемы.</span><span class="sxs-lookup"><span data-stu-id="f8200-123">The settings object stores information about text converter and markup extension specifics for the schema context.</span></span> <span data-ttu-id="f8200-124">Для получения дополнительной информации см. <xref:System.Xaml.XamlSchemaContextSettings>.</span><span class="sxs-lookup"><span data-stu-id="f8200-124">For more information, see <xref:System.Xaml.XamlSchemaContextSettings>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlSchemaContext (System.Collections.Generic.IEnumerable&lt;System.Reflection.Assembly&gt; referenceAssemblies, System.Xaml.XamlSchemaContextSettings settings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;class System.Reflection.Assembly&gt; referenceAssemblies, class System.Xaml.XamlSchemaContextSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlSchemaContext.#ctor(System.Collections.Generic.IEnumerable{System.Reflection.Assembly},System.Xaml.XamlSchemaContextSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (referenceAssemblies As IEnumerable(Of Assembly), settings As XamlSchemaContextSettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlSchemaContext(System::Collections::Generic::IEnumerable&lt;System::Reflection::Assembly ^&gt; ^ referenceAssemblies, System::Xaml::XamlSchemaContextSettings ^ settings);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlSchemaContext : seq&lt;System.Reflection.Assembly&gt; * System.Xaml.XamlSchemaContextSettings -&gt; System.Xaml.XamlSchemaContext" Usage="new System.Xaml.XamlSchemaContext (referenceAssemblies, settings)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="referenceAssemblies" Type="System.Collections.Generic.IEnumerable&lt;System.Reflection.Assembly&gt;" />
        <Parameter Name="settings" Type="System.Xaml.XamlSchemaContextSettings" />
      </Parameters>
      <Docs>
        <param name="referenceAssemblies"><span data-ttu-id="f8200-125">Перечисляемый набор сведений о сборках.</span><span class="sxs-lookup"><span data-stu-id="f8200-125">An enumerable set of assembly information.</span></span> <span data-ttu-id="f8200-126">Каждый элемент сведений о сборках определяется значением <see cref="T:System.Reflection.Assembly" />.</span><span class="sxs-lookup"><span data-stu-id="f8200-126">Each assembly information item is specified by an <see cref="T:System.Reflection.Assembly" /> value.</span></span></param>
        <param name="settings"><span data-ttu-id="f8200-127">Объект параметров, используемый для создания объекта <see cref="T:System.Xaml.XamlSchemaContext" />.</span><span class="sxs-lookup"><span data-stu-id="f8200-127">The settings object to use to construct the <see cref="T:System.Xaml.XamlSchemaContext" />.</span></span></param>
        <summary><span data-ttu-id="f8200-128">Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlSchemaContext" /> на основе набора базовых сборок и объекта параметров.</span><span class="sxs-lookup"><span data-stu-id="f8200-128">Initializes a new instance of the <see cref="T:System.Xaml.XamlSchemaContext" /> class, based on a set of reference assemblies and a settings object.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~XamlSchemaContext ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlSchemaContext.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!XamlSchemaContext ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="xamlSchemaContext.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f8200-129">Предоставляет нестандартную реализацию метода <see langword="Finalize" />, которая не вызывает метод <see langword="Dispose" />.</span><span class="sxs-lookup"><span data-stu-id="f8200-129">Provides a nonstandard <see langword="Finalize" /> implementation that does not invoke <see langword="Dispose" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8200-130">Контексты схемы XAML не должны удаляться автоматически с помощью автоматической сборки мусора или ручных операций.</span><span class="sxs-lookup"><span data-stu-id="f8200-130">XAML schema contexts should not be disposed by automatic garbage collection or by manual operations.</span></span> <span data-ttu-id="f8200-131">Хотя контексты схемы XAML не имеют неуправляемых ресурсов, <xref:System.Windows.Markup.XamlDeferLoadAttribute> свойства могут оставаться активными, а удаление контекста схемы XAML может помешать связанной операции отложенной загрузки.</span><span class="sxs-lookup"><span data-stu-id="f8200-131">Although XAML schema contexts  have no unmanaged resources, <xref:System.Windows.Markup.XamlDeferLoadAttribute> properties might still be active, and disposing a XAML schema context can interfere with the related defer-load operation.</span></span>  
  
 <span data-ttu-id="f8200-132"><xref:System.AppDomain.AssemblyLoad>обработчики событий, которые подключены внутренне как слабые ссылки, очищаются этой реализацией.</span><span class="sxs-lookup"><span data-stu-id="f8200-132"><xref:System.AppDomain.AssemblyLoad> event handlers, which are hooked internally as weak references, are cleaned up by this implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FullyQualifyAssemblyNamesInClrNamespaces">
      <MemberSignature Language="C#" Value="public bool FullyQualifyAssemblyNamesInClrNamespaces { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FullyQualifyAssemblyNamesInClrNamespaces" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlSchemaContext.FullyQualifyAssemblyNamesInClrNamespaces" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FullyQualifyAssemblyNamesInClrNamespaces As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool FullyQualifyAssemblyNamesInClrNamespaces { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.FullyQualifyAssemblyNamesInClrNamespaces : bool" Usage="System.Xaml.XamlSchemaContext.FullyQualifyAssemblyNamesInClrNamespaces" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f8200-133">Получает значение, указывающее, использует ли схема XAML и ее контекст полные имена сборок в значениях, возвращаемых API поиска.</span><span class="sxs-lookup"><span data-stu-id="f8200-133">Gets a value that specifies whether a XAML schema and its context use fully qualified assembly names in the values that are returned by the lookup API.</span></span></summary>
        <value><span data-ttu-id="f8200-134">Значение <see langword="true" />, если схема XAML и ее контекст используют полные имена сборок в значениях, возвращаемых API поиска; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f8200-134"><see langword="true" /> if a XAML schema and its context use fully qualified assembly names in the values that are returned by the lookup APIs; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8200-135">Это свойство возвращает <xref:System.Xaml.XamlSchemaContextSettings.FullyQualifyAssemblyNamesInClrNamespaces%2A?displayProperty=nameWithType> значение, установленное в параметрах <xref:System.Xaml.XamlSchemaContext.%23ctor%28System.Xaml.XamlSchemaContextSettings%29> для сигнатуры конструктора.</span><span class="sxs-lookup"><span data-stu-id="f8200-135">This property returns the <xref:System.Xaml.XamlSchemaContextSettings.FullyQualifyAssemblyNamesInClrNamespaces%2A?displayProperty=nameWithType> value that is established in the settings for the <xref:System.Xaml.XamlSchemaContext.%23ctor%28System.Xaml.XamlSchemaContextSettings%29> constructor signature.</span></span> <span data-ttu-id="f8200-136">Если для построения использовались другие подписи или если <xref:System.Xaml.XamlSchemaContextSettings.FullyQualifyAssemblyNamesInClrNamespaces%2A?displayProperty=nameWithType> не `true`задано значение, то значением этого свойства будет `false`.</span><span class="sxs-lookup"><span data-stu-id="f8200-136">If other signatures were used for construction or if <xref:System.Xaml.XamlSchemaContextSettings.FullyQualifyAssemblyNamesInClrNamespaces%2A?displayProperty=nameWithType> is not specifically set to `true`, the value of this property is `false`.</span></span>  
  
 <span data-ttu-id="f8200-137">Значение этого свойства влияет на строки, возвращаемые методом <xref:System.Xaml.XamlSchemaContext.GetAllXamlNamespaces%2A>.</span><span class="sxs-lookup"><span data-stu-id="f8200-137">The value of this property influences the strings that are returned by <xref:System.Xaml.XamlSchemaContext.GetAllXamlNamespaces%2A>.</span></span> <span data-ttu-id="f8200-138">Если <xref:System.Xaml.XamlSchemaContext.FullyQualifyAssemblyNamesInClrNamespaces%2A> имеет `true`значение, часть <xref:System.Reflection.Assembly.FullName%2A?displayProperty=nameWithType>строки сборки сообщает о эквиваленте.</span><span class="sxs-lookup"><span data-stu-id="f8200-138">If <xref:System.Xaml.XamlSchemaContext.FullyQualifyAssemblyNamesInClrNamespaces%2A> is `true`, the assembly portion of the string reports the equivalent of <xref:System.Reflection.Assembly.FullName%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllXamlNamespaces">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;string&gt; GetAllXamlNamespaces ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;string&gt; GetAllXamlNamespaces() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlSchemaContext.GetAllXamlNamespaces" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAllXamlNamespaces () As IEnumerable(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerable&lt;System::String ^&gt; ^ GetAllXamlNamespaces();" />
      <MemberSignature Language="F#" Value="abstract member GetAllXamlNamespaces : unit -&gt; seq&lt;string&gt;&#xA;override this.GetAllXamlNamespaces : unit -&gt; seq&lt;string&gt;" Usage="xamlSchemaContext.GetAllXamlNamespaces " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f8200-139">Производит поиск в сборках, содержащихся в этом объекте <see cref="T:System.Xaml.XamlSchemaContext" />, и возвращает набор пространств имен.</span><span class="sxs-lookup"><span data-stu-id="f8200-139">Searches the assemblies that are held by this <see cref="T:System.Xaml.XamlSchemaContext" /> and returns a set of namespaces.</span></span></summary>
        <returns><span data-ttu-id="f8200-140">Перечислимый набор идентификаторов пространств имен.</span><span class="sxs-lookup"><span data-stu-id="f8200-140">An enumerable set of namespace identifiers.</span></span> <span data-ttu-id="f8200-141">Эти идентификаторы предоставляются в виде строк.</span><span class="sxs-lookup"><span data-stu-id="f8200-141">These identifiers are provided as strings.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8200-142">Этот метод выполняет поиск только ссылочных сборок, если они передаются через построение или настройку свойства.</span><span class="sxs-lookup"><span data-stu-id="f8200-142">This method only searches the reference assemblies if they are passed in through construction or property setting.</span></span> <span data-ttu-id="f8200-143">Если сборки не установлены как ссылочные сборки, логика этого метода проверяет все загруженные сборки, в которых <xref:System.Xaml.XamlSchemaContext> это активно.</span><span class="sxs-lookup"><span data-stu-id="f8200-143">If no assemblies are established as reference assemblies, the logic of this method examines all loaded assemblies where this <xref:System.Xaml.XamlSchemaContext> is active.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllXamlTypes">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.ICollection&lt;System.Xaml.XamlType&gt; GetAllXamlTypes (string xamlNamespace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.ICollection`1&lt;class System.Xaml.XamlType&gt; GetAllXamlTypes(string xamlNamespace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlSchemaContext.GetAllXamlTypes(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAllXamlTypes (xamlNamespace As String) As ICollection(Of XamlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::ICollection&lt;System::Xaml::XamlType ^&gt; ^ GetAllXamlTypes(System::String ^ xamlNamespace);" />
      <MemberSignature Language="F#" Value="abstract member GetAllXamlTypes : string -&gt; System.Collections.Generic.ICollection&lt;System.Xaml.XamlType&gt;&#xA;override this.GetAllXamlTypes : string -&gt; System.Collections.Generic.ICollection&lt;System.Xaml.XamlType&gt;" Usage="xamlSchemaContext.GetAllXamlTypes xamlNamespace" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;System.Xaml.XamlType&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xamlNamespace" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xamlNamespace"><span data-ttu-id="f8200-144">Пространство имен XAML, для которого требуется вернуть типы.</span><span class="sxs-lookup"><span data-stu-id="f8200-144">The XAML namespace to return types for.</span></span></param>
        <summary><span data-ttu-id="f8200-145">Производит поиск в сборках, содержащихся в этом объекте <see cref="T:System.Xaml.XamlSchemaContext" />, и возвращает набор типов из указанного пространства имен XAML.</span><span class="sxs-lookup"><span data-stu-id="f8200-145">Searches the assemblies that are held by this <see cref="T:System.Xaml.XamlSchemaContext" /> and returns a set of types from the specified XAML namespace.</span></span></summary>
        <returns><span data-ttu-id="f8200-146">Перечисляемый набор типов XAML.</span><span class="sxs-lookup"><span data-stu-id="f8200-146">An enumerable set of XAML types.</span></span> <span data-ttu-id="f8200-147">Каждый тип XAML в наборе представляется объектом <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="f8200-147">Each XAML type in the set is represented by a <see cref="T:System.Xaml.XamlType" /> object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPreferredPrefix">
      <MemberSignature Language="C#" Value="public virtual string GetPreferredPrefix (string xmlns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetPreferredPrefix(string xmlns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlSchemaContext.GetPreferredPrefix(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPreferredPrefix (xmlns As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetPreferredPrefix(System::String ^ xmlns);" />
      <MemberSignature Language="F#" Value="abstract member GetPreferredPrefix : string -&gt; string&#xA;override this.GetPreferredPrefix : string -&gt; string" Usage="xamlSchemaContext.GetPreferredPrefix xmlns" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xmlns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xmlns"><span data-ttu-id="f8200-148">Пространство имен XAML, для которого требуется получить предпочтительный префикс.</span><span class="sxs-lookup"><span data-stu-id="f8200-148">The XAML namespace to get the preferred prefix for.</span></span></param>
        <summary><span data-ttu-id="f8200-149">Получает строку, которая предоставляется как предпочтительный префикс для использования потребителями при сопоставлении указанного пространства имен XAML.</span><span class="sxs-lookup"><span data-stu-id="f8200-149">Gets a string that is reported as the preferred prefix for consumers to use when they map the specified XAML namespace.</span></span></summary>
        <returns><span data-ttu-id="f8200-150">Строка, которую потребители должны использовать при сопоставлении указанного пространства имен XAML для целей разметки.</span><span class="sxs-lookup"><span data-stu-id="f8200-150">A string that consumers should use when they map the specified XAML namespace for markup use.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8200-151">Наиболее непосредственным потребителем информации обычно является модуль записи XAML.</span><span class="sxs-lookup"><span data-stu-id="f8200-151">The most immediate consumer of the information is typically a XAML writer.</span></span> <span data-ttu-id="f8200-152">Другие косвенные потребители включают в себя средства проектирования.</span><span class="sxs-lookup"><span data-stu-id="f8200-152">Other indirect consumers include design tools.</span></span>  
  
 <span data-ttu-id="f8200-153">В рамках привязки XAML для среды CLR можно указать эти сведения, применяя <xref:System.Windows.Markup.XmlnsPrefixAttribute> на уровне сборки.</span><span class="sxs-lookup"><span data-stu-id="f8200-153">As part of the XAML binding for the common language runtime (CLR), you can specify this information by applying <xref:System.Windows.Markup.XmlnsPrefixAttribute> at the assembly level.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f8200-154">Параметр <paramref name="xmlns" /> имеет значение null.</span><span class="sxs-lookup"><span data-stu-id="f8200-154"><paramref name="xmlns" /> is null.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetValueConverter&lt;TConverterBase&gt;">
      <MemberSignature Language="C#" Value="protected internal System.Xaml.Schema.XamlValueConverter&lt;TConverterBase&gt; GetValueConverter&lt;TConverterBase&gt; (Type converterType, System.Xaml.XamlType targetType) where TConverterBase : class;" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance class System.Xaml.Schema.XamlValueConverter`1&lt;!!TConverterBase&gt; GetValueConverter&lt;class TConverterBase&gt;(class System.Type converterType, class System.Xaml.XamlType targetType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlSchemaContext.GetValueConverter``1(System.Type,System.Xaml.XamlType)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Function GetValueConverter(Of TConverterBase As Class) (converterType As Type, targetType As XamlType) As XamlValueConverter(Of TConverterBase)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA;generic &lt;typename TConverterBase&gt;&#xA; where TConverterBase : class System::Xaml::Schema::XamlValueConverter&lt;TConverterBase&gt; ^ GetValueConverter(Type ^ converterType, System::Xaml::XamlType ^ targetType);" />
      <MemberSignature Language="F#" Value="member this.GetValueConverter : Type * System.Xaml.XamlType -&gt; System.Xaml.Schema.XamlValueConverter&lt;'ConverterBase (requires 'ConverterBase : null)&gt; (requires 'ConverterBase : null)" Usage="xamlSchemaContext.GetValueConverter (converterType, targetType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;TConverterBase&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TConverterBase">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="converterType" Type="System.Type" />
        <Parameter Name="targetType" Type="System.Xaml.XamlType" />
      </Parameters>
      <Docs>
        <typeparam name="TConverterBase"><span data-ttu-id="f8200-155">Базовый класс конкретного преобразователя.</span><span class="sxs-lookup"><span data-stu-id="f8200-155">The specific converter base class.</span></span></typeparam>
        <param name="converterType"><span data-ttu-id="f8200-156">Реализация преобразователя.</span><span class="sxs-lookup"><span data-stu-id="f8200-156">The converter implementation.</span></span></param>
        <param name="targetType"><span data-ttu-id="f8200-157">Требуемый тип назначения для преобразователя.</span><span class="sxs-lookup"><span data-stu-id="f8200-157">The desired destination type for the converter.</span></span></param>
        <summary><span data-ttu-id="f8200-158">Возвращает преобразователь значений, который может производить преобразование в запрошенный тип <paramref name="targetType" />.</span><span class="sxs-lookup"><span data-stu-id="f8200-158">Returns a value converter that can convert to the requested <paramref name="targetType" />.</span></span></summary>
        <returns><span data-ttu-id="f8200-159">Объект <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> с ограничением, соответствующим ограничению, наложенному при вызове метода.</span><span class="sxs-lookup"><span data-stu-id="f8200-159">A <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> with a constraint that matches the constraint that is put on the method call.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetXamlDirective">
      <MemberSignature Language="C#" Value="public virtual System.Xaml.XamlDirective GetXamlDirective (string xamlNamespace, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xaml.XamlDirective GetXamlDirective(string xamlNamespace, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlSchemaContext.GetXamlDirective(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetXamlDirective (xamlNamespace As String, name As String) As XamlDirective" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xaml::XamlDirective ^ GetXamlDirective(System::String ^ xamlNamespace, System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member GetXamlDirective : string * string -&gt; System.Xaml.XamlDirective&#xA;override this.GetXamlDirective : string * string -&gt; System.Xaml.XamlDirective" Usage="xamlSchemaContext.GetXamlDirective (xamlNamespace, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlDirective</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xamlNamespace" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xamlNamespace"><span data-ttu-id="f8200-160">Пространство имен XAML, содержащее именованную директиву.</span><span class="sxs-lookup"><span data-stu-id="f8200-160">The XAML namespace that contains the named directive.</span></span></param>
        <param name="name"><span data-ttu-id="f8200-161">Имя получаемой директивы.</span><span class="sxs-lookup"><span data-stu-id="f8200-161">The name of the directive to obtain.</span></span></param>
        <summary><span data-ttu-id="f8200-162">Возвращает значение <see cref="T:System.Xaml.XamlDirective" />, представляющее директиву для языка XAML или для конкретной реализации.</span><span class="sxs-lookup"><span data-stu-id="f8200-162">Returns a <see cref="T:System.Xaml.XamlDirective" /> value that represents a directive, either for the XAML language or for a particular implementation.</span></span></summary>
        <returns><span data-ttu-id="f8200-163">Объект <see cref="T:System.Xaml.XamlDirective" />, представляющий запрашиваемую директиву.</span><span class="sxs-lookup"><span data-stu-id="f8200-163">A <see cref="T:System.Xaml.XamlDirective" /> object that represents the requested directive.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8200-164">Переопределите этот метод при создании производного класса из <xref:System.Xaml.XamlDirective> как части сценария расширения системы типов XAML.</span><span class="sxs-lookup"><span data-stu-id="f8200-164">Override this method if you create a derived class from <xref:System.Xaml.XamlDirective> as part of a XAML type system extension scenario.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f8200-165">Параметр <paramref name="xamlNamespace" /> или <paramref name="name" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f8200-165"><paramref name="xamlNamespace" /> or <paramref name="name" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetXamlType">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f8200-166">Возвращает тип <see cref="T:System.Xaml.XamlType" />, основанный на идентификаторе типа среды CLR или языка XAML.</span><span class="sxs-lookup"><span data-stu-id="f8200-166">Returns a <see cref="T:System.Xaml.XamlType" /> that is based on either a CLR or XAML type identifier.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetXamlType">
      <MemberSignature Language="C#" Value="public virtual System.Xaml.XamlType GetXamlType (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xaml.XamlType GetXamlType(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlSchemaContext.GetXamlType(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xaml::XamlType ^ GetXamlType(Type ^ type);" />
      <MemberSignature Language="F#" Value="abstract member GetXamlType : Type -&gt; System.Xaml.XamlType&#xA;override this.GetXamlType : Type -&gt; System.Xaml.XamlType" Usage="xamlSchemaContext.GetXamlType type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="f8200-167">Тип, для которого требуется получить объект <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="f8200-167">The type to get a <see cref="T:System.Xaml.XamlType" /> for.</span></span></param>
        <summary><span data-ttu-id="f8200-168">Возвращает тип <see cref="T:System.Xaml.XamlType" />, основанный на идентификаторе типа среды CLR.</span><span class="sxs-lookup"><span data-stu-id="f8200-168">Returns a <see cref="T:System.Xaml.XamlType" /> that is based on a CLR type identifier.</span></span></summary>
        <returns><span data-ttu-id="f8200-169">Тип <see cref="T:System.Xaml.XamlType" />, соответствующий входному параметру <paramref name="type" />.</span><span class="sxs-lookup"><span data-stu-id="f8200-169">The <see cref="T:System.Xaml.XamlType" /> that matches the input <paramref name="type" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8200-170">Эта перегрузка предполагает, что вы используете среду CLR для системы резервных типов.</span><span class="sxs-lookup"><span data-stu-id="f8200-170">This overload assumes that you are using the CLR for the backing type system.</span></span> <span data-ttu-id="f8200-171">Если система типов CLR не используется, используйте <xref:System.Xaml.XamlSchemaContext.GetXamlType%28System.Xaml.Schema.XamlTypeName%29>.</span><span class="sxs-lookup"><span data-stu-id="f8200-171">If you are not using the CLR type system, use <xref:System.Xaml.XamlSchemaContext.GetXamlType%28System.Xaml.Schema.XamlTypeName%29>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f8200-172">Свойство <paramref name="type" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f8200-172"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetXamlType">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlType GetXamlType (System.Xaml.Schema.XamlTypeName xamlTypeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xaml.XamlType GetXamlType(class System.Xaml.Schema.XamlTypeName xamlTypeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlSchemaContext.GetXamlType(System.Xaml.Schema.XamlTypeName)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xaml::XamlType ^ GetXamlType(System::Xaml::Schema::XamlTypeName ^ xamlTypeName);" />
      <MemberSignature Language="F#" Value="member this.GetXamlType : System.Xaml.Schema.XamlTypeName -&gt; System.Xaml.XamlType" Usage="xamlSchemaContext.GetXamlType xamlTypeName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xamlTypeName" Type="System.Xaml.Schema.XamlTypeName" />
      </Parameters>
      <Docs>
        <param name="xamlTypeName"><span data-ttu-id="f8200-173">Имя типа XAML, для которого требуется получить объект <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="f8200-173">The XAML type name to get a <see cref="T:System.Xaml.XamlType" /> for.</span></span></param>
        <summary><span data-ttu-id="f8200-174">Возвращает объект <see cref="T:System.Xaml.XamlType" />, основанный на имени системного типа XAML.</span><span class="sxs-lookup"><span data-stu-id="f8200-174">Returns a <see cref="T:System.Xaml.XamlType" /> that is based on a XAML system type name.</span></span></summary>
        <returns><span data-ttu-id="f8200-175">Тип <see cref="T:System.Xaml.XamlType" />, соответствующий входному параметру <paramref name="xamlTypeName" />.</span><span class="sxs-lookup"><span data-stu-id="f8200-175">The <see cref="T:System.Xaml.XamlType" /> that matches the input <paramref name="xamlTypeName" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f8200-176">Компонент <paramref name="xamlTypeName" /> (<see cref="P:System.Xaml.Schema.XamlTypeName.Name" /> или <see cref="P:System.Xaml.Schema.XamlTypeName.Namespace" />) имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f8200-176">A component of <paramref name="xamlTypeName" /> (<see cref="P:System.Xaml.Schema.XamlTypeName.Name" /> or <see cref="P:System.Xaml.Schema.XamlTypeName.Namespace" />) is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f8200-177"><paramref name="xamlTypeName" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f8200-177"><paramref name="xamlTypeName" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Xaml.Schema.XamlTypeName" />
      </Docs>
    </Member>
    <Member MemberName="GetXamlType">
      <MemberSignature Language="C#" Value="protected internal virtual System.Xaml.XamlType GetXamlType (string xamlNamespace, string name, params System.Xaml.XamlType[] typeArguments);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Xaml.XamlType GetXamlType(string xamlNamespace, string name, class System.Xaml.XamlType[] typeArguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlSchemaContext.GetXamlType(System.String,System.String,System.Xaml.XamlType[])" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function GetXamlType (xamlNamespace As String, name As String, ParamArray typeArguments As XamlType()) As XamlType" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::Xaml::XamlType ^ GetXamlType(System::String ^ xamlNamespace, System::String ^ name, ... cli::array &lt;System::Xaml::XamlType ^&gt; ^ typeArguments);" />
      <MemberSignature Language="F#" Value="abstract member GetXamlType : string * string * System.Xaml.XamlType[] -&gt; System.Xaml.XamlType&#xA;override this.GetXamlType : string * string * System.Xaml.XamlType[] -&gt; System.Xaml.XamlType" Usage="xamlSchemaContext.GetXamlType (xamlNamespace, name, typeArguments)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xamlNamespace" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="typeArguments" Type="System.Xaml.XamlType[]">
          <Attributes>
            <Attribute FrameworkAlternate="netcore-3.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="xamlNamespace"><span data-ttu-id="f8200-178">Пространство имен XAML, содержащее необходимый тип.</span><span class="sxs-lookup"><span data-stu-id="f8200-178">The XAML namespace that contains the desired type.</span></span></param>
        <param name="name"><span data-ttu-id="f8200-179">Строковое представление имени требуемого типа.</span><span class="sxs-lookup"><span data-stu-id="f8200-179">The string name of the desired type.</span></span></param>
        <param name="typeArguments"><span data-ttu-id="f8200-180">Аргументы типа инициализации для универсального типа.</span><span class="sxs-lookup"><span data-stu-id="f8200-180">The initialization type arguments for a generic type.</span></span></param>
        <summary><span data-ttu-id="f8200-181">Возвращает тип <see cref="T:System.Xaml.XamlType" /> на основе пространства имен XAML и строки имени типа.</span><span class="sxs-lookup"><span data-stu-id="f8200-181">Returns a <see cref="T:System.Xaml.XamlType" /> that is based on a XAML namespace and a string for the type name.</span></span> <span data-ttu-id="f8200-182">Данная сигнатура может указывать аргументы типа в случаях, когда целевой тип является универсальным.</span><span class="sxs-lookup"><span data-stu-id="f8200-182">This signature can specify the type arguments for cases where the desired type is a generic type.</span></span></summary>
        <returns><span data-ttu-id="f8200-183">Объект <see cref="T:System.Xaml.XamlType" />, соответствующий входным критериям.</span><span class="sxs-lookup"><span data-stu-id="f8200-183">The <see cref="T:System.Xaml.XamlType" /> that matches the input criteria.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAssemblyResolve">
      <MemberSignature Language="C#" Value="protected internal virtual System.Reflection.Assembly OnAssemblyResolve (string assemblyName);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Reflection.Assembly OnAssemblyResolve(string assemblyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlSchemaContext.OnAssemblyResolve(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function OnAssemblyResolve (assemblyName As String) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::Reflection::Assembly ^ OnAssemblyResolve(System::String ^ assemblyName);" />
      <MemberSignature Language="F#" Value="abstract member OnAssemblyResolve : string -&gt; System.Reflection.Assembly&#xA;override this.OnAssemblyResolve : string -&gt; System.Reflection.Assembly" Usage="xamlSchemaContext.OnAssemblyResolve assemblyName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="assemblyName"><span data-ttu-id="f8200-184">Имя загружаемой сборки.</span><span class="sxs-lookup"><span data-stu-id="f8200-184">The name of the assembly to load.</span></span></param>
        <summary><span data-ttu-id="f8200-185">Вызывается, когда операции используют этот контекст схемы для разрешения сборки, необходимой для разрешения содержащихся в ней пространств имен XAML.</span><span class="sxs-lookup"><span data-stu-id="f8200-185">Called when operations use this schema context to resolve an assembly that is required in order to resolve the XAML namespaces that it contains.</span></span></summary>
        <returns><span data-ttu-id="f8200-186">Разрешаемая сборка.</span><span class="sxs-lookup"><span data-stu-id="f8200-186">The resolved assembly.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8200-187">Базовый метод разрешения сборки, который является внутренним API, имеет встроенные отклонения для различных строковых форм имени сборки в зависимости <xref:System.Reflection.AssemblyName> от поведения конструирования.</span><span class="sxs-lookup"><span data-stu-id="f8200-187">The underlying assembly resolution technique, which is an internal API, has built-in tolerances for different string forms of an assembly name as based on the <xref:System.Reflection.AssemblyName> construction behavior.</span></span>  
  
 <span data-ttu-id="f8200-188">Этот API предназначен для включения разрешения первой возможности для известных наборов сборок, например для ссылочных сборок, а не для глобального кэша сборок.</span><span class="sxs-lookup"><span data-stu-id="f8200-188">The purpose of this API is to enable first-opportunity resolution against known sets of assemblies, such as against reference assemblies instead of against a global assembly cache.</span></span> <span data-ttu-id="f8200-189">Если список ссылочных сборок заполнен, реализация по умолчанию может получить доступ к известным ссылочным сборкам.</span><span class="sxs-lookup"><span data-stu-id="f8200-189">If the list of reference assemblies is populated, the default implementation can access the known reference assemblies.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReferenceAssemblies">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;System.Reflection.Assembly&gt; ReferenceAssemblies { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class System.Reflection.Assembly&gt; ReferenceAssemblies" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlSchemaContext.ReferenceAssemblies" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReferenceAssemblies As IList(Of Assembly)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;System::Reflection::Assembly ^&gt; ^ ReferenceAssemblies { System::Collections::Generic::IList&lt;System::Reflection::Assembly ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ReferenceAssemblies : System.Collections.Generic.IList&lt;System.Reflection.Assembly&gt;" Usage="System.Xaml.XamlSchemaContext.ReferenceAssemblies" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Reflection.Assembly&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f8200-190">Возвращает перечисляемый набор базовых сборок для контекста схемы XAML.</span><span class="sxs-lookup"><span data-stu-id="f8200-190">Gets an enumerable set of reference assemblies for the XAML schema context.</span></span></summary>
        <value><span data-ttu-id="f8200-191">Перечислимый набор базовых сборок для контекста схемы.</span><span class="sxs-lookup"><span data-stu-id="f8200-191">An enumerable set of reference assemblies for the schema context.</span></span> <span data-ttu-id="f8200-192">Каждый элемент сведений о сборках определяется значением <see cref="T:System.Reflection.Assembly" />.</span><span class="sxs-lookup"><span data-stu-id="f8200-192">Each assembly information item is specified by an <see cref="T:System.Reflection.Assembly" /> value.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportMarkupExtensionsWithDuplicateArity">
      <MemberSignature Language="C#" Value="public bool SupportMarkupExtensionsWithDuplicateArity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportMarkupExtensionsWithDuplicateArity" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SupportMarkupExtensionsWithDuplicateArity As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SupportMarkupExtensionsWithDuplicateArity { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportMarkupExtensionsWithDuplicateArity : bool" Usage="System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f8200-193">Получает значение, указывающее, поддерживают ли схема XAML и ее контекст расширения разметки, имеющие два конструктора с одинаковой арностью (количеством входных параметров).</span><span class="sxs-lookup"><span data-stu-id="f8200-193">Gets a value that specifies whether a XAML schema and its context support markup extensions that have two constructors with the same arity (number of input parameters).</span></span></summary>
        <value><span data-ttu-id="f8200-194">Значение <see langword="true" />, если контекст схемы допускает расширения разметки с дублирующей арностью; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f8200-194"><see langword="true" /> if the schema context permits markup extensions that have duplicate arity; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="f8200-195">Значение по умолчанию — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f8200-195">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8200-196">Это свойство возвращает <xref:System.Xaml.XamlSchemaContextSettings.SupportMarkupExtensionsWithDuplicateArity%2A?displayProperty=nameWithType> значение, установленное в параметрах <xref:System.Xaml.XamlSchemaContext.%23ctor%28System.Xaml.XamlSchemaContextSettings%29> для сигнатуры конструктора.</span><span class="sxs-lookup"><span data-stu-id="f8200-196">This property returns the <xref:System.Xaml.XamlSchemaContextSettings.SupportMarkupExtensionsWithDuplicateArity%2A?displayProperty=nameWithType> value that is established in the settings for the <xref:System.Xaml.XamlSchemaContext.%23ctor%28System.Xaml.XamlSchemaContextSettings%29> constructor signature.</span></span> <span data-ttu-id="f8200-197">Если для построения используются другие подписи или если <xref:System.Xaml.XamlSchemaContextSettings.SupportMarkupExtensionsWithDuplicateArity%2A?displayProperty=nameWithType> не `true`задано значение, то значением этого свойства будет `false`.</span><span class="sxs-lookup"><span data-stu-id="f8200-197">If other signatures are used for construction or if <xref:System.Xaml.XamlSchemaContextSettings.SupportMarkupExtensionsWithDuplicateArity%2A?displayProperty=nameWithType> is not specifically set to `true`, the value of this property is `false`.</span></span>  
  
 <span data-ttu-id="f8200-198">Повторяющаяся арность расширений разметки не адресована специально спецификации XAML [MS-XAML], раздел 6.6.7.2.</span><span class="sxs-lookup"><span data-stu-id="f8200-198">Duplicate arity of markup extensions is not specifically addressed by the XAML specification [MS-XAML], section 6.6.7.2.</span></span> <span data-ttu-id="f8200-199">Это связано с тем, что образование информационного элемента XAML для расширения разметки идентично, независимо от дублирования арности, которая может существовать в реализации расширения разметки.</span><span class="sxs-lookup"><span data-stu-id="f8200-199">This is because formation of the XAML information item for a markup extension is identical regardless of duplicate arity that might exist in the markup extension implementation.</span></span> <span data-ttu-id="f8200-200">Только фактический вызов расширения разметки и его `ProvideValue` предоставляет все проблемы, связанные с повторяющейся арностью.</span><span class="sxs-lookup"><span data-stu-id="f8200-200">Only the actual invocation of the markup extension and its `ProvideValue` exposes any issues associated with duplicate arity.</span></span> <span data-ttu-id="f8200-201">Поведение обработки повторяющейся арности, таким образом, не определено и осталось до каждого реализующего контекста схемы XAML и интеграции средства записи XAML.</span><span class="sxs-lookup"><span data-stu-id="f8200-201">Behavior for handling duplicate arity is thus undefined and is left up to each implementing XAML schema context and its XAML writer integration.</span></span> <span data-ttu-id="f8200-202">Контекст схемы XAML по умолчанию, реализованный для .NET Framework операций служб XAML, не поддерживает повторяющуюся арность. различные .NET Framework API-интерфейсы служб XAML вызовут исключения при обработке использования расширения разметки с базовой дублирующей арностью.</span><span class="sxs-lookup"><span data-stu-id="f8200-202">The default XAML schema context as implemented for .NET Framework XAML Services operations does not support duplicate arity; various .NET Framework XAML Services APIs will throw exceptions when processing markup extension usage with underlying duplicate arity.</span></span>  
  
 <span data-ttu-id="f8200-203">Дополнительные сведения об определении расширений разметки см. в разделе [Общие сведения о расширениях разметки для XAML](~/docs/framework/xaml-services/markup-extensions-for-xaml-overview.md).</span><span class="sxs-lookup"><span data-stu-id="f8200-203">For more information about defining markup extensions, see [Markup Extensions for XAML Overview](~/docs/framework/xaml-services/markup-extensions-for-xaml-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetCompatibleXamlNamespace">
      <MemberSignature Language="C#" Value="public virtual bool TryGetCompatibleXamlNamespace (string xamlNamespace, out string compatibleNamespace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryGetCompatibleXamlNamespace(string xamlNamespace, [out] string&amp; compatibleNamespace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlSchemaContext.TryGetCompatibleXamlNamespace(System.String,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function TryGetCompatibleXamlNamespace (xamlNamespace As String, ByRef compatibleNamespace As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool TryGetCompatibleXamlNamespace(System::String ^ xamlNamespace, [Runtime::InteropServices::Out] System::String ^ % compatibleNamespace);" />
      <MemberSignature Language="F#" Value="abstract member TryGetCompatibleXamlNamespace : string *  -&gt; bool&#xA;override this.TryGetCompatibleXamlNamespace : string *  -&gt; bool" Usage="xamlSchemaContext.TryGetCompatibleXamlNamespace (xamlNamespace, compatibleNamespace)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xamlNamespace" Type="System.String" />
        <Parameter Name="compatibleNamespace" Type="System.String" RefType="out" />
      </Parameters>
      <Docs>
        <param name="xamlNamespace"><span data-ttu-id="f8200-204">Строка <see langword="xmlns" /> для пространства имен XAML, которое требуется проверить на совместимый результат.</span><span class="sxs-lookup"><span data-stu-id="f8200-204">The <see langword="xmlns" /> string for the XAML namespace to be checked for a compatible result.</span></span></param>
        <param name="compatibleNamespace"><span data-ttu-id="f8200-205">При возвращении данного метода содержит строку <see langword="xmlns" /> для запроса совместимого пространства имен XAML.</span><span class="sxs-lookup"><span data-stu-id="f8200-205">When this method returns, the <see langword="xmlns" /> string for a compatible XAML namespace request.</span></span> <span data-ttu-id="f8200-206">Если метод возвращает значение <see langword="false" />, эта строка может быть идентична строке <paramref name="xamlNamespace" />.</span><span class="sxs-lookup"><span data-stu-id="f8200-206">This might be identical to <paramref name="xamlNamespace" /> if the method returns <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="f8200-207">Возвращает данные об успехе или неудаче запроса для совместимого пространства имен XAML.</span><span class="sxs-lookup"><span data-stu-id="f8200-207">Returns the success or failure of a request for a compatible XAML namespace.</span></span> <span data-ttu-id="f8200-208">Успешный запрос сообщает пространство имен XAML в виде параметра вывода.</span><span class="sxs-lookup"><span data-stu-id="f8200-208">A successful request reports that XAML namespace as an out parameter.</span></span></summary>
        <returns><span data-ttu-id="f8200-209">Значение <see langword="true" />, если параметр <paramref name="compatibleNamespace" /> содержит пригодный к использованию результат; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f8200-209"><see langword="true" /> if <paramref name="compatibleNamespace" /> contains a usable result; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8200-210">На внутреннем уровне этот метод использует следующий порядок поиска:</span><span class="sxs-lookup"><span data-stu-id="f8200-210">Internally, this method uses the following lookup order:</span></span>  
  
1.  <span data-ttu-id="f8200-211">Внутренний внедренный словарь совместимости, который может быть заполнен более ранней функцией поиска.</span><span class="sxs-lookup"><span data-stu-id="f8200-211">An internally implemented compatibility dictionary, which may have been populated by an earlier lookup.</span></span>  
  
2.  <span data-ttu-id="f8200-212">Вычисление <xref:System.Windows.Markup.XmlnsCompatibleWithAttribute> параметров.</span><span class="sxs-lookup"><span data-stu-id="f8200-212">The <xref:System.Windows.Markup.XmlnsCompatibleWithAttribute> parameter evaluation.</span></span>  
  
 <span data-ttu-id="f8200-213">Если не обнаружено других совместимых пространств имен и этот `false`метод возвращает `compatibleNamespace` , выходные данные параметра могут иметь то же значение `xamlNamespace` , что и входные данные.</span><span class="sxs-lookup"><span data-stu-id="f8200-213">If no other compatible namespace is discovered and this method returns `false`, the `compatibleNamespace` parameter output might have the same value as the `xamlNamespace` input.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f8200-214">Свойство <paramref name="xamlNamespace" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f8200-214"><paramref name="xamlNamespace" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
