<Type Name="XamlObjectWriter" FullName="System.Xaml.XamlObjectWriter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="31f36e0757a0ec127b5ff19e37dca6c8a490d0de" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69427201" /></Metadata><TypeSignature Language="C#" Value="public class XamlObjectWriter : System.Xaml.XamlWriter, System.Xaml.IXamlLineInfoConsumer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XamlObjectWriter extends System.Xaml.XamlWriter implements class System.Xaml.IXamlLineInfoConsumer" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.XamlObjectWriter" />
  <TypeSignature Language="VB.NET" Value="Public Class XamlObjectWriter&#xA;Inherits XamlWriter&#xA;Implements IXamlLineInfoConsumer" />
  <TypeSignature Language="C++ CLI" Value="public ref class XamlObjectWriter : System::Xaml::XamlWriter, System::Xaml::IXamlLineInfoConsumer" />
  <TypeSignature Language="F#" Value="type XamlObjectWriter = class&#xA;    inherit XamlWriter&#xA;    interface IXamlLineInfoConsumer" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Xaml.XamlWriter</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Xaml.IXamlLineInfoConsumer</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Создает граф объектов из исходного потока узлов XAML.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `Write` <xref:System.Xaml.XamlWriter.WriteNode%2A> Методы реализуют шаблон, который <xref:System.Xaml.XamlObjectWriter> использует объект <xref:System.Xaml.XamlWriter> , определенный методом. <xref:System.Xaml.XamlObjectWriter> <xref:System.Xaml.XamlWriter.WriteNode%2A>логические переключения между `Write` методами в зависимости от того, какой тип узла находится в текущей позиции в модуле чтения.  
  
## <a name="scope"></a>Область  
 Объект <xref:System.Xaml.XamlObjectWriter> имеет концепцию области, то есть <xref:System.Xaml.XamlObjectWriter> поддерживает концептуальную точку ссылки в графе объекта вывода. Для определенной области некоторые операции могут быть допустимыми или недопустимыми или выдавать результат без операции. Например, при вызове <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A> для записи директив для инициализации объекта, который уже существует как экземпляр, реализация по умолчанию создает исключение.  
  
 Возможной методикой для отслеживания области в <xref:System.Xaml.XamlObjectWriter> пользовательском методе является согласование действий узла с классом стека или фрейма. Стек или кадр может отследить отправку и POP для каждого уровня глубины объектной модели, который был указан или закрыт во время <xref:System.Xaml.XamlObjectWriter> записи графа объекта.  
  
## <a name="callbacks"></a>Обратные вызовы  
 Для поддержки промежуточных и <xref:System.Xaml.XamlObjectWriter> расширенных сценариев механизм записи графа объектов предоставляет точки входа обратного вызова, происходящие <xref:System.Xaml.XamlObjectWriter> при фиксации или фиксации определенных действий. Некоторые обратные вызовы включены в параметрах и не зависят от типа объекта или записываемого члена; Однако сведения о обратном вызове часто доступны в контексте или в данных события, которые отправляются через обратный вызов. Ниже приведен список соответствующих обратных вызовов.  
  
-   Обратный вызов, объявленный <xref:System.Xaml.XamlObjectWriterSettings.AfterBeginInitHandler%2A> , вызывается при переходе области к новому объекту и <xref:System.ComponentModel.ISupportInitialize.BeginInit%2A> на фазе времени существования объекта для каждого созданного объекта.  
  
-   Обратный вызов, объявленный <xref:System.Xaml.XamlObjectWriterSettings.AfterEndInitHandler%2A> , вызывается при переходе области к новому объекту и <xref:System.ComponentModel.ISupportInitialize.EndInit%2A> на фазе времени существования объекта для каждого созданного объекта.  
  
-   Обратный вызов, объявленный, <xref:System.Xaml.XamlObjectWriterSettings.BeforePropertiesHandler%2A> вызывается, когда область начинается в объекте и возникает, когда первый <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A> вызов этой области объекта сделан, но еще не зафиксирован.  
  
-   Обратный вызов, объявленный, <xref:System.Xaml.XamlObjectWriterSettings.AfterPropertiesHandler%2A> вызывается, когда область начинается в объекте и происходит, <xref:System.Xaml.XamlObjectWriter.WriteEndObject%2A> когда вызов этой области объекта сделан, но еще не зафиксирован.  
  
-   Обратный вызов, объявленный <xref:System.Xaml.XamlObjectWriterSettings.XamlSetValueHandler%2A> , вызывается при <xref:System.Xaml.XamlObjectWriter.OnSetValue%2A> вызове метода.  
  
## <a name="writing-dictionary-keys"></a>Запись ключей словаря  
 Реализация <xref:System.Xaml.XamlObjectWriter> по умолчанию поддерживает преобразование типов для ограничений <xref:System.Collections.Generic.Dictionary%602> перед добавлением содержимого словаря в граф объектов. Таким образом, универсальный словарь можно поключить во время выполнения с помощью объектов и сопоставить с соответствующим поведением `Add` универсального и индексатора. Однако, как реализовано для базовой <xref:System.Xaml.XamlObjectWriter>версии, эта возможность существует только для создания графа объекта из <xref:System.Collections.Generic.Dictionary%602> базового класса, а <xref:System.Collections.Generic.Dictionary%602>не для производных классов.  
  
## <a name="checks-for-disposed"></a>Проверки для ликвидированных  
 Средства записи XAML потенциально используются для отложенных операций или в том случае, если выполняется вызов для экземпляра модуля записи XAML, который был удален в промежуточной области. В таких случаях <xref:System.Xaml.XamlObjectWriter> могут создаваться <xref:System.ObjectDisposedException> различные API-интерфейсы.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xaml.XamlWriter" />
    <altmember cref="T:System.Xaml.XamlObjectReader" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlObjectWriter" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlObjectWriter (System.Xaml.XamlSchemaContext schemaContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xaml.XamlSchemaContext schemaContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.#ctor(System.Xaml.XamlSchemaContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (schemaContext As XamlSchemaContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlObjectWriter(System::Xaml::XamlSchemaContext ^ schemaContext);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlObjectWriter : System.Xaml.XamlSchemaContext -&gt; System.Xaml.XamlObjectWriter" Usage="new System.Xaml.XamlObjectWriter schemaContext" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
      </Parameters>
      <Docs>
        <param name="schemaContext">Контекст схемы XAML, общий со средством чтения XAML. Этот контекст предоставляет узлы для записи.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlObjectWriter" />, используя контекст схемы XAML, применяемый объектом <see cref="T:System.Xaml.XamlReader" />.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="schemaContext" /> — <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlObjectWriter (System.Xaml.XamlSchemaContext schemaContext, System.Xaml.XamlObjectWriterSettings settings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xaml.XamlSchemaContext schemaContext, class System.Xaml.XamlObjectWriterSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.#ctor(System.Xaml.XamlSchemaContext,System.Xaml.XamlObjectWriterSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (schemaContext As XamlSchemaContext, settings As XamlObjectWriterSettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlObjectWriter(System::Xaml::XamlSchemaContext ^ schemaContext, System::Xaml::XamlObjectWriterSettings ^ settings);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlObjectWriter : System.Xaml.XamlSchemaContext * System.Xaml.XamlObjectWriterSettings -&gt; System.Xaml.XamlObjectWriter" Usage="new System.Xaml.XamlObjectWriter (schemaContext, settings)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
        <Parameter Name="settings" Type="System.Xaml.XamlObjectWriterSettings" />
      </Parameters>
      <Docs>
        <param name="schemaContext">Контекст схемы XAML, общий со средством чтения XAML. Этот контекст предоставляет узлы для записи.</param>
        <param name="settings">Объект параметров, задающий определенные параметры для поведения и вывода объекта <see cref="T:System.Xaml.XamlObjectWriter" />.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlObjectWriter" /> контекстом, используемым объектом <see cref="T:System.Xaml.XamlReader" /> и его параметрами.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="schemaContext" /> имеет значение <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; unit" Usage="xamlObjectWriter.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Сбрасывает все возможные кадры и очищает граф объектов.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="xamlObjectWriter.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">Значение <see langword="true" />, если необходимо освободить управляемые ресурсы; в противном случае — значение <see langword="false" />.</param>
        <summary>Освобождает неуправляемые ресурсы, используемые объектом <see cref="T:System.Xaml.XamlObjectWriter" />, а при необходимости освобождает также управляемые ресурсы.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAfterBeginInit">
      <MemberSignature Language="C#" Value="protected virtual void OnAfterBeginInit (object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAfterBeginInit(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.OnAfterBeginInit(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAfterBeginInit (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAfterBeginInit(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member OnAfterBeginInit : obj -&gt; unit&#xA;override this.OnAfterBeginInit : obj -&gt; unit" Usage="xamlObjectWriter.OnAfterBeginInit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Объект, о котором требуется отчет. При вызове обработчика объект упакован в <see cref="T:System.Xaml.XamlObjectEventArgs" />.</param>
        <summary>Вызывает любой метод <see cref="P:System.Xaml.XamlObjectWriterSettings.AfterBeginInitHandler" />, связанный с объектом <see cref="T:System.Xaml.XamlObjectWriterSettings" />, для данного объекта <see cref="T:System.Xaml.XamlObjectWriter" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAfterEndInit">
      <MemberSignature Language="C#" Value="protected virtual void OnAfterEndInit (object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAfterEndInit(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.OnAfterEndInit(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAfterEndInit (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAfterEndInit(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member OnAfterEndInit : obj -&gt; unit&#xA;override this.OnAfterEndInit : obj -&gt; unit" Usage="xamlObjectWriter.OnAfterEndInit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Объект, о котором требуется отчет. При вызове обработчика значение упаковывается в объект <see cref="T:System.Xaml.XamlObjectEventArgs" />.</param>
        <summary>Вызывает любой метод <see cref="P:System.Xaml.XamlObjectWriterSettings.AfterEndInitHandler" />, связанный с объектом <see cref="T:System.Xaml.XamlObjectWriterSettings" />, для данного объекта <see cref="T:System.Xaml.XamlObjectWriter" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAfterProperties">
      <MemberSignature Language="C#" Value="protected virtual void OnAfterProperties (object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAfterProperties(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.OnAfterProperties(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAfterProperties (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAfterProperties(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member OnAfterProperties : obj -&gt; unit&#xA;override this.OnAfterProperties : obj -&gt; unit" Usage="xamlObjectWriter.OnAfterProperties value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Объект, о котором требуется отчет. При вызове обработчика он упакован в объект <see cref="T:System.Xaml.XamlObjectEventArgs" />.</param>
        <summary>Вызывает любой метод <see cref="P:System.Xaml.XamlObjectWriterSettings.AfterPropertiesHandler" />, на который имеется ссылка и который связан с <see cref="T:System.Xaml.XamlObjectWriterSettings" />, для данного объекта <see cref="T:System.Xaml.XamlObjectWriter" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBeforeProperties">
      <MemberSignature Language="C#" Value="protected virtual void OnBeforeProperties (object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnBeforeProperties(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.OnBeforeProperties(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnBeforeProperties (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnBeforeProperties(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member OnBeforeProperties : obj -&gt; unit&#xA;override this.OnBeforeProperties : obj -&gt; unit" Usage="xamlObjectWriter.OnBeforeProperties value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Значение, передаваемое при вызове обработчика через объект <see cref="T:System.Xaml.XamlObjectEventArgs" />.</param>
        <summary>Вызывает любой метод <see cref="P:System.Xaml.XamlObjectWriterSettings.BeforePropertiesHandler" />, на который имеется ссылка и который связан с <see cref="T:System.Xaml.XamlObjectWriterSettings" />, для данного объекта <see cref="T:System.Xaml.XamlObjectWriter" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSetValue">
      <MemberSignature Language="C#" Value="protected virtual bool OnSetValue (object eventSender, System.Xaml.XamlMember member, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool OnSetValue(object eventSender, class System.Xaml.XamlMember member, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.OnSetValue(System.Object,System.Xaml.XamlMember,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnSetValue (eventSender As Object, member As XamlMember, value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool OnSetValue(System::Object ^ eventSender, System::Xaml::XamlMember ^ member, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member OnSetValue : obj * System.Xaml.XamlMember * obj -&gt; bool&#xA;override this.OnSetValue : obj * System.Xaml.XamlMember * obj -&gt; bool" Usage="xamlObjectWriter.OnSetValue (eventSender, member, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventSender" Type="System.Object" />
        <Parameter Name="member" Type="System.Xaml.XamlMember" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="eventSender">Объект, передаваемый в обработчик в качестве источника.</param>
        <param name="member">Имя задаваемого свойства, передаваемое обработчику в составе объекта <see cref="T:System.Windows.Markup.XamlSetValueEventArgs" />.</param>
        <param name="value">Значение, которое нужно предоставить свойству, определенному параметром <paramref name="property" />. Значение передается обработчику в составе объекта <see cref="T:System.Windows.Markup.XamlSetValueEventArgs" />.</param>
        <summary>Вызывает любой метод <see cref="P:System.Xaml.XamlObjectWriterSettings.XamlSetValueHandler" />, на который имеется ссылка и который связан с <see cref="T:System.Xaml.XamlObjectWriterSettings" />, для этого средства записи при условии, что параметр <paramref name="handled" /> в данных события <see cref="T:System.Windows.Markup.XamlSetValueEventArgs" /> имеет значение, отличное от <see langword="true" />.</summary>
        <returns>Логическое значение, заданное любым связанным обработчиком; в противном случае — значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если операция для этого модуля записи XAML имеет связанный обработчик <xref:System.Xaml.XamlObjectWriterSettings.XamlSetValueHandler%2A> (объявлен в <xref:System.Xaml.XamlObjectWriterSettings>), этот метод создает новый <xref:System.Windows.Markup.XamlSetValueEventArgs> и передает его в обработчик. `SetValue` Возвращаемое значение задается путем считывания <xref:System.Windows.Markup.XamlSetValueEventArgs.Handled%2A> значения, передаваемого через данные события. Если обработчик не существует и вызывается этот метод, вызов возвращает `false`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Result">
      <MemberSignature Language="C#" Value="public virtual object Result { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Result" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlObjectWriter.Result" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Result As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ Result { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Result : obj" Usage="System.Xaml.XamlObjectWriter.Result" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает последний записанный объект. Вызывается, только когда поток узла достиг конца и граф объекта завершен.</summary>
        <value>Последний записанный объект или <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Наиболее типичное использование <xref:System.Xaml.XamlObjectWriter.Result%2A> метода — вызов его только в том случае, если известно, что поток узла находится в конце, и граф объекта завершен. В противном случае граф объектов, скорее всего, будет неполным и не будет полезен для большинства сценариев платформы.  
  
 <xref:System.Xaml.XamlObjectWriter.Result%2A>обычно содержит значение <xref:System.Xaml.XamlObjectWriter.WriteEndObject%2A>, отличное от NULL, если оно вызывается сразу после вызова, и если текущая область находится в элементе, где объект предоставляет значение.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RootNameScope">
      <MemberSignature Language="C#" Value="public System.Windows.Markup.INameScope RootNameScope { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Markup.INameScope RootNameScope" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlObjectWriter.RootNameScope" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RootNameScope As INameScope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Markup::INameScope ^ RootNameScope { System::Windows::Markup::INameScope ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RootNameScope : System.Windows.Markup.INameScope" Usage="System.Xaml.XamlObjectWriter.RootNameScope" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Markup.INameScope</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает службу <see cref="T:System.Windows.Markup.INameScope" />, которая поддерживает область имен XAML для абсолютного корня узла средства записи объекта XAML.</summary>
        <value>Служба <see cref="T:System.Windows.Markup.INameScope" />, которая поддерживает область имен XAML для текущего корня средства записи объекта.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Значение этого свойства может поступать из контекста модуля записи объекта.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SchemaContext">
      <MemberSignature Language="C#" Value="public override System.Xaml.XamlSchemaContext SchemaContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlSchemaContext SchemaContext" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlObjectWriter.SchemaContext" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property SchemaContext As XamlSchemaContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xaml::XamlSchemaContext ^ SchemaContext { System::Xaml::XamlSchemaContext ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SchemaContext : System.Xaml.XamlSchemaContext" Usage="System.Xaml.XamlObjectWriter.SchemaContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlSchemaContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает активный контекст схемы XAML.</summary>
        <value>Контекст схемы XAML.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Контекст схемы XAML — это необходимый источник информации для наиболее практичных сценариев написания объектов. Контекст схемы XAML влияет на поиск по типам резервных типов и содержит сведения о сборках, в которых существуют резервные типы. Контекст схемы XAML по умолчанию основан на правилах сопоставления типов CLR. Как правило, платформы предоставляют собственный контекст схемы XAML, чтобы гарантировать, что механизмы загрузки сборок соответствуют моделям приложений AMD платформы.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetLineInfo">
      <MemberSignature Language="C#" Value="public void SetLineInfo (int lineNumber, int linePosition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetLineInfo(int32 lineNumber, int32 linePosition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.SetLineInfo(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetLineInfo (lineNumber As Integer, linePosition As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetLineInfo(int lineNumber, int linePosition);" />
      <MemberSignature Language="F#" Value="abstract member SetLineInfo : int * int -&gt; unit&#xA;override this.SetLineInfo : int * int -&gt; unit" Usage="xamlObjectWriter.SetLineInfo (lineNumber, linePosition)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Xaml.IXamlLineInfoConsumer.SetLineInfo(System.Int32,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lineNumber" Type="System.Int32" />
        <Parameter Name="linePosition" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="lineNumber">Номер строки от средства чтения.</param>
        <param name="linePosition">Положение в строке от средства чтения.</param>
        <summary>Реализует метод <see cref="M:System.Xaml.IXamlLineInfoConsumer.SetLineInfo(System.Int32,System.Int32)" /> и предоставляет сведения о строке для исключений.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод службы не предназначен для непосредственного вызова из кода. Однако, если создается производный класс от <xref:System.Xaml.XamlObjectWriter> и предполагается, что для отчета о контексте, в котором номера строк недоступны или не используются, этот метод может быть вызван.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldProvideLineInfo">
      <MemberSignature Language="C#" Value="public bool ShouldProvideLineInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShouldProvideLineInfo" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlObjectWriter.ShouldProvideLineInfo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ShouldProvideLineInfo As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShouldProvideLineInfo { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.ShouldProvideLineInfo : bool" Usage="System.Xaml.XamlObjectWriter.ShouldProvideLineInfo" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Xaml.IXamlLineInfoConsumer.ShouldProvideLineInfo</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает значение, которое сообщает, должна ли служба сведений о строке предоставлять значения и, следовательно, вызывать метод <see cref="M:System.Xaml.IXamlLineInfoConsumer.SetLineInfo(System.Int32,System.Int32)" />, когда это требуется.</summary>
        <value>Значение <see langword="true" />, если сведения о строке используются средством записи; в противном случае — значение <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Данная реализация всегда возвращает значение `true`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEndMember">
      <MemberSignature Language="C#" Value="public override void WriteEndMember ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteEndMember() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.WriteEndMember" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteEndMember ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteEndMember();" />
      <MemberSignature Language="F#" Value="override this.WriteEndMember : unit -&gt; unit" Usage="xamlObjectWriter.WriteEndMember " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Закрывает область текущего члена и может при закрытии записать значение области члена. Новая область становится областью родительского объекта этого члена.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Xaml.XamlObjectWriterException">Не удалось создать значение элемента из узла значения, который встречается между этим вызовом и предыдущим <see langword="StartMember" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteEndObject">
      <MemberSignature Language="C#" Value="public override void WriteEndObject ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteEndObject() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.WriteEndObject" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteEndObject ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteEndObject();" />
      <MemberSignature Language="F#" Value="override this.WriteEndObject : unit -&gt; unit" Usage="xamlObjectWriter.WriteEndObject " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Закрывает текущую область объекта в средстве записи. Новой областью объекта становится область родительского члена.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если область `EndObject` должности закрывает корневой объект, Новая область объекта становится корневой областью.  
  
 Вызов <xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A> , возможно, еще не создал объект, так как элемент объекта может быть необходимым путем инициализации, например текстом инициализации или параметрами инициализации. В таких случаях вызов для <xref:System.Xaml.XamlObjectWriter.WriteEndObject%2A> фактической записи объекта.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteGetObject">
      <MemberSignature Language="C#" Value="public override void WriteGetObject ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteGetObject() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.WriteGetObject" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteGetObject ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteGetObject();" />
      <MemberSignature Language="F#" Value="override this.WriteGetObject : unit -&gt; unit" Usage="xamlObjectWriter.WriteGetObject " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Записывает концептуальный <see langword="StartObject" /> в граф объекта, если заданный объект является значением по умолчанию или неявным значением родительского свойства. Неявное значение получается из сведений, полученных из контекста схемы XAML и информации базовых типов, а не задается в виде значения объекта во входном наборе узлов XAML.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Разница между написанием <xref:System.Xaml.XamlObjectWriter.WriteGetObject%2A> и записью с <xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A> помощью может быть показана в результирующем графе объекта. <xref:System.Xaml.XamlObjectWriter.WriteGetObject%2A>не формирует экземпляр типа, так как <xref:System.Xaml.XamlObjectWriter.WriteGetObject%2A> API не содержит сведений для информирования графа объектов о том, что нужно создать. Вместо этого объект был создан при инициализации свойства Parent; <xref:System.Xaml.XamlObjectWriter> поэтому не нужно создавать его. В отличие от <xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A> этого, указывает, что экземпляр этого типа должен быть создан и вставлен в граф объекта.  
  
 Если вы считаете, что поток узлов XAML представляет собой последовательность кадров, то объект <xref:System.Xaml.XamlObjectWriter.WriteGetObject%2A> распределяется <xref:System.Xaml.XamlObjectWriter.WriteEndObject%2A> по вызову. Таким образом, число <xref:System.Xaml.XamlObjectWriter.WriteGetObject%2A> вызовов Plus <xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A> <xref:System.Xaml.XamlObjectWriter.WriteEndObject%2A> должно равняться числу вызовов в рамках полной оценки потока узлов XAML.  
  
 Концептуальное `StartObject` расположение неявного объекта в графе объекта является обязательным, так как хотя значение объекта является неявным по умолчанию, у этого объекта по-прежнему могут быть элементы, которые должны быть написаны на основе потока узлов XAML. Типичным сценарием, в котором происходит <xref:System.Xaml.XamlObjectWriter> это, является запись узлов членов для свойства коллекции, а инициализация коллекции является неявной для создания объекта, владеющего свойством коллекции.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteNamespace">
      <MemberSignature Language="C#" Value="public override void WriteNamespace (System.Xaml.NamespaceDeclaration namespaceDeclaration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteNamespace(class System.Xaml.NamespaceDeclaration namespaceDeclaration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.WriteNamespace(System.Xaml.NamespaceDeclaration)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteNamespace(System::Xaml::NamespaceDeclaration ^ namespaceDeclaration);" />
      <MemberSignature Language="F#" Value="override this.WriteNamespace : System.Xaml.NamespaceDeclaration -&gt; unit" Usage="xamlObjectWriter.WriteNamespace namespaceDeclaration" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="namespaceDeclaration" Type="System.Xaml.NamespaceDeclaration" />
      </Parameters>
      <Docs>
        <param name="namespaceDeclaration">Объявление пространства имен для записи.</param>
        <summary>Определяет объявление пространства имен, которое применяется к следующей области объекта или члена.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Объявление пространства имен может быть записано, если текущая область является корневой областью, областью объекта или областью элемента. Однако метод <xref:System.Xaml.XamlObjectWriter.WriteNamespace%2A> <xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A> <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A>можно вызвать только непосредственно перед вызовом одного из следующих методов:, или. <xref:System.Xaml.XamlObjectWriter.WriteNamespace%2A> Последовательный <xref:System.Xaml.XamlObjectWriter.WriteNamespace%2A> случай — запись нескольких объявлений пространств имен в один и тот же узел. В конечном итоге <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A> должен <xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A> быть вызван либо метод, либо.  
  
 <xref:System.Xaml.XamlObjectWriter.WriteNamespace%2A>не использует `Start` / метафору.`End` Хотя пространство имен XAML имеет члены в смысле представления CLR, эти элементы известны и их не нужно представлять как особый тип <xref:System.Xaml.XamlMember> для расширяемости. Для доступа к значениям <xref:System.Xaml.NamespaceDeclaration>можно <xref:System.Xaml.NamespaceDeclaration.Namespace%2A> использовать свойства и <xref:System.Xaml.NamespaceDeclaration.Prefix%2A> .  
  
 Объявление пространства имен может иметь <xref:System.String.Empty?displayProperty=nameWithType> значение для префикса. <xref:System.String.Empty?displayProperty=nameWithType> Префикс представляет объявление пространства имен XAML по умолчанию. Не пытайтесь использовать NULL для представления префикса по умолчанию;  Он создает исключение в этом API. Для получения дополнительной информации см. <xref:System.Xaml.NamespaceDeclaration>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="namespaceDeclaration" /> — <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Компонент <paramref name="namespaceDeclaration" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.Xaml.XamlObjectReaderException">Попытка записи узла пространства имен XAML в недопустимую область.</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartMember">
      <MemberSignature Language="C#" Value="public override void WriteStartMember (System.Xaml.XamlMember property);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteStartMember(class System.Xaml.XamlMember property) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.WriteStartMember(System.Xaml.XamlMember)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteStartMember (property As XamlMember)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteStartMember(System::Xaml::XamlMember ^ property);" />
      <MemberSignature Language="F#" Value="override this.WriteStartMember : System.Xaml.XamlMember -&gt; unit" Usage="xamlObjectWriter.WriteStartMember property" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Xaml.XamlMember" />
      </Parameters>
      <Docs>
        <param name="property">Записываемое свойство XAML. Это значение, как правило, получается из средства чтения XAML посредством промежуточного потока узлов XAML.</param>
        <summary>Записывает новый узел члена в текущую область объекта, и эта область становится новой областью члена.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!TIP]
>  Следите за <xref:System.Xaml.XamlDuplicateMemberException>тем, что происходит, когда одно и то же свойство XAML устанавливается в входных данных XAML дважды. В простых случаях, например, если одно и то же свойство задано в синтаксисе атрибута и синтаксисе элемента свойства, это исключение можно легко увидеть во входной разметке. Однако могут возникнуть более тонкие случаи, которые сложнее выявить. Например, это исключение может возникнуть, если задать свойство содержимого XAML, если вы включаете свойства внешней среды XAML, и если свойство включает как присоединяемое использование, так и использование экземпляра. На стадиях отладки разработки можно часто наладить это исключение, просмотрев промежуточное представление XAML, которое подключает чтение разметки и объектный граф записи.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xaml.XamlObjectWriterException">Для свойства <paramref name="property" /> значение <see cref="P:System.Xaml.XamlMember.IsUnknown" /> установлено равным <see langword="true" />.  
  
- или - 
 Свойство переданное <see cref="P:System.Xaml.XamlLanguage.UnknownContent" />, которое указывает, что поток узлов XAML, содержащий содержимое для объекта, который не поддерживает содержимое.  
  
-или- 
Попытка записи начального члена в недопустимой области действия.</exception>
        <exception cref="T:System.Xaml.XamlDuplicateMemberException"><paramref name="property" /> задает свойство, которое уже явно задано в области родительского объекта.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="property" /> — <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartObject">
      <MemberSignature Language="C#" Value="public override void WriteStartObject (System.Xaml.XamlType xamlType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteStartObject(class System.Xaml.XamlType xamlType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.WriteStartObject(System.Xaml.XamlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteStartObject(System::Xaml::XamlType ^ xamlType);" />
      <MemberSignature Language="F#" Value="override this.WriteStartObject : System.Xaml.XamlType -&gt; unit" Usage="xamlObjectWriter.WriteStartObject xamlType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xamlType" Type="System.Xaml.XamlType" />
      </Parameters>
      <Docs>
        <param name="xamlType">Записываемый тип. Обычно это значение получается из средства чтения XAML.</param>
        <summary>Записывает узел объекта в текущую область, и задает эту область для области нового объекта.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Xaml.XamlObjectWriterException">Обработка типа <see cref="P:System.Xaml.XamlType.IsUnknown" />, не удается создать объект.  
  
- или - 
Попытка записи начального объекта в недопустимой области действия.</exception>
        <exception cref="T:System.Xaml.XamlParseException">Попытка записи корневого объекта, когда корневой объект уже был предоставлен в настройках.</exception>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="xamlType" /> имеет значение <see langword="null" />.</exception>
        <block subset="none" type="overrides"><para>Если текущая область находится внутри коллекции, словаря или массива, новый экземпляр следует добавить в коллекцию, словарь или массив с помощью <see langword="Add" /> метода соответствующего типа. В противном случае элемент должен быть назначен новому экземпляру.</para></block>
      </Docs>
    </Member>
    <Member MemberName="WriteValue">
      <MemberSignature Language="C#" Value="public override void WriteValue (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteValue(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.WriteValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteValue (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteValue(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.WriteValue : obj -&gt; unit" Usage="xamlObjectWriter.WriteValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Значение для записи.</param>
        <summary>Выполняет запись значения в область текущего члена. Если текущая область находится в объекте коллекции, словаря или массива, это значение необходимо добавить в коллекцию, словарь или массив.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Xaml.XamlObjectWriterException">Попытка записи значения в недопустимой области действия.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
