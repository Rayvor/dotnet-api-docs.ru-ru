<Type Name="XamlObjectWriter" FullName="System.Xaml.XamlObjectWriter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="31f36e0757a0ec127b5ff19e37dca6c8a490d0de" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69427201" /></Metadata><TypeSignature Language="C#" Value="public class XamlObjectWriter : System.Xaml.XamlWriter, System.Xaml.IXamlLineInfoConsumer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XamlObjectWriter extends System.Xaml.XamlWriter implements class System.Xaml.IXamlLineInfoConsumer" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.XamlObjectWriter" />
  <TypeSignature Language="VB.NET" Value="Public Class XamlObjectWriter&#xA;Inherits XamlWriter&#xA;Implements IXamlLineInfoConsumer" />
  <TypeSignature Language="C++ CLI" Value="public ref class XamlObjectWriter : System::Xaml::XamlWriter, System::Xaml::IXamlLineInfoConsumer" />
  <TypeSignature Language="F#" Value="type XamlObjectWriter = class&#xA;    inherit XamlWriter&#xA;    interface IXamlLineInfoConsumer" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Xaml.XamlWriter</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Xaml.IXamlLineInfoConsumer</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="33bf7-101">Создает граф объектов из исходного потока узлов XAML.</span><span class="sxs-lookup"><span data-stu-id="33bf7-101">Creates an object graph from a source XAML node stream.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33bf7-102">`Write` <xref:System.Xaml.XamlWriter.WriteNode%2A> Методы реализуют шаблон, который <xref:System.Xaml.XamlObjectWriter> использует объект <xref:System.Xaml.XamlWriter> , определенный методом. <xref:System.Xaml.XamlObjectWriter></span><span class="sxs-lookup"><span data-stu-id="33bf7-102">The `Write` methods of <xref:System.Xaml.XamlObjectWriter> implement a pattern so that the <xref:System.Xaml.XamlObjectWriter> uses the <xref:System.Xaml.XamlWriter> that is defined by the <xref:System.Xaml.XamlWriter.WriteNode%2A> method.</span></span> <span data-ttu-id="33bf7-103"><xref:System.Xaml.XamlWriter.WriteNode%2A>логические переключения между `Write` методами в зависимости от того, какой тип узла находится в текущей позиции в модуле чтения.</span><span class="sxs-lookup"><span data-stu-id="33bf7-103"><xref:System.Xaml.XamlWriter.WriteNode%2A> logic switches between the `Write` methods, depending on which node type is at the current position in the reader.</span></span>  
  
## <a name="scope"></a><span data-ttu-id="33bf7-104">Область</span><span class="sxs-lookup"><span data-stu-id="33bf7-104">Scope</span></span>  
 <span data-ttu-id="33bf7-105">Объект <xref:System.Xaml.XamlObjectWriter> имеет концепцию области, то есть <xref:System.Xaml.XamlObjectWriter> поддерживает концептуальную точку ссылки в графе объекта вывода.</span><span class="sxs-lookup"><span data-stu-id="33bf7-105">A <xref:System.Xaml.XamlObjectWriter> has a concept of scope; that is, the <xref:System.Xaml.XamlObjectWriter> maintains a conceptual point of reference in its output object graph.</span></span> <span data-ttu-id="33bf7-106">Для определенной области некоторые операции могут быть допустимыми или недопустимыми или выдавать результат без операции.</span><span class="sxs-lookup"><span data-stu-id="33bf7-106">For a particular scope, certain operations might be valid or invalid, or produce a no-operation result.</span></span> <span data-ttu-id="33bf7-107">Например, при вызове <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A> для записи директив для инициализации объекта, который уже существует как экземпляр, реализация по умолчанию создает исключение.</span><span class="sxs-lookup"><span data-stu-id="33bf7-107">For example, if you call <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A> to write directives for initialization on an object that already exists as an instance, the default implementation throws an exception.</span></span>  
  
 <span data-ttu-id="33bf7-108">Возможной методикой для отслеживания области в <xref:System.Xaml.XamlObjectWriter> пользовательском методе является согласование действий узла с классом стека или фрейма.</span><span class="sxs-lookup"><span data-stu-id="33bf7-108">A possible technique for tracking scope in a custom <xref:System.Xaml.XamlObjectWriter> is to align the node actions with a stack or frame class.</span></span> <span data-ttu-id="33bf7-109">Стек или кадр может отследить отправку и POP для каждого уровня глубины объектной модели, который был указан или закрыт во время <xref:System.Xaml.XamlObjectWriter> записи графа объекта.</span><span class="sxs-lookup"><span data-stu-id="33bf7-109">The stack or frame can keep track of push and pop for each level of object-model depth that is entered or exited while the <xref:System.Xaml.XamlObjectWriter> writes the object graph.</span></span>  
  
## <a name="callbacks"></a><span data-ttu-id="33bf7-110">Обратные вызовы</span><span class="sxs-lookup"><span data-stu-id="33bf7-110">Callbacks</span></span>  
 <span data-ttu-id="33bf7-111">Для поддержки промежуточных и <xref:System.Xaml.XamlObjectWriter> расширенных сценариев механизм записи графа объектов предоставляет точки входа обратного вызова, происходящие <xref:System.Xaml.XamlObjectWriter> при фиксации или фиксации определенных действий.</span><span class="sxs-lookup"><span data-stu-id="33bf7-111">To support intermediate and advanced <xref:System.Xaml.XamlObjectWriter> scenarios, the mechanism of writing an object graph provides callback entry points that occur when a <xref:System.Xaml.XamlObjectWriter> commits or is about to commit certain actions.</span></span> <span data-ttu-id="33bf7-112">Некоторые обратные вызовы включены в параметрах и не зависят от типа объекта или записываемого члена; Однако сведения о обратном вызове часто доступны в контексте или в данных события, которые отправляются через обратный вызов.</span><span class="sxs-lookup"><span data-stu-id="33bf7-112">Some callbacks are enabled in the settings and are not specific to the object type or the member being written; however, callback information is often available in context or is in the event data that is sent through the callback.</span></span> <span data-ttu-id="33bf7-113">Ниже приведен список соответствующих обратных вызовов.</span><span class="sxs-lookup"><span data-stu-id="33bf7-113">The following is a list of relevant callbacks:</span></span>  
  
-   <span data-ttu-id="33bf7-114">Обратный вызов, объявленный <xref:System.Xaml.XamlObjectWriterSettings.AfterBeginInitHandler%2A> , вызывается при переходе области к новому объекту и <xref:System.ComponentModel.ISupportInitialize.BeginInit%2A> на фазе времени существования объекта для каждого созданного объекта.</span><span class="sxs-lookup"><span data-stu-id="33bf7-114">The callback that is declared by <xref:System.Xaml.XamlObjectWriterSettings.AfterBeginInitHandler%2A> is invoked when the scope goes to a new object and at the <xref:System.ComponentModel.ISupportInitialize.BeginInit%2A> phase of object lifetime for each created object.</span></span>  
  
-   <span data-ttu-id="33bf7-115">Обратный вызов, объявленный <xref:System.Xaml.XamlObjectWriterSettings.AfterEndInitHandler%2A> , вызывается при переходе области к новому объекту и <xref:System.ComponentModel.ISupportInitialize.EndInit%2A> на фазе времени существования объекта для каждого созданного объекта.</span><span class="sxs-lookup"><span data-stu-id="33bf7-115">The callback that is declared by <xref:System.Xaml.XamlObjectWriterSettings.AfterEndInitHandler%2A> is invoked when the scope goes to a new object and at the <xref:System.ComponentModel.ISupportInitialize.EndInit%2A> phase of object lifetime for each created object.</span></span>  
  
-   <span data-ttu-id="33bf7-116">Обратный вызов, объявленный, <xref:System.Xaml.XamlObjectWriterSettings.BeforePropertiesHandler%2A> вызывается, когда область начинается в объекте и возникает, когда первый <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A> вызов этой области объекта сделан, но еще не зафиксирован.</span><span class="sxs-lookup"><span data-stu-id="33bf7-116">The callback that is declared by <xref:System.Xaml.XamlObjectWriterSettings.BeforePropertiesHandler%2A> is invoked when the scope starts in an object, and occurs when the first <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A> call to that object scope is made but not yet committed.</span></span>  
  
-   <span data-ttu-id="33bf7-117">Обратный вызов, объявленный, <xref:System.Xaml.XamlObjectWriterSettings.AfterPropertiesHandler%2A> вызывается, когда область начинается в объекте и происходит, <xref:System.Xaml.XamlObjectWriter.WriteEndObject%2A> когда вызов этой области объекта сделан, но еще не зафиксирован.</span><span class="sxs-lookup"><span data-stu-id="33bf7-117">The callback that is declared by <xref:System.Xaml.XamlObjectWriterSettings.AfterPropertiesHandler%2A> is invoked when the scope starts in an object, and happens when the <xref:System.Xaml.XamlObjectWriter.WriteEndObject%2A> call to that object scope is made but not yet committed.</span></span>  
  
-   <span data-ttu-id="33bf7-118">Обратный вызов, объявленный <xref:System.Xaml.XamlObjectWriterSettings.XamlSetValueHandler%2A> , вызывается при <xref:System.Xaml.XamlObjectWriter.OnSetValue%2A> вызове метода.</span><span class="sxs-lookup"><span data-stu-id="33bf7-118">The callback that is declared by <xref:System.Xaml.XamlObjectWriterSettings.XamlSetValueHandler%2A> is invoked when <xref:System.Xaml.XamlObjectWriter.OnSetValue%2A> is called.</span></span>  
  
## <a name="writing-dictionary-keys"></a><span data-ttu-id="33bf7-119">Запись ключей словаря</span><span class="sxs-lookup"><span data-stu-id="33bf7-119">Writing Dictionary Keys</span></span>  
 <span data-ttu-id="33bf7-120">Реализация <xref:System.Xaml.XamlObjectWriter> по умолчанию поддерживает преобразование типов для ограничений <xref:System.Collections.Generic.Dictionary%602> перед добавлением содержимого словаря в граф объектов.</span><span class="sxs-lookup"><span data-stu-id="33bf7-120">The default implementation of <xref:System.Xaml.XamlObjectWriter> supports type conversion on the constraints of a <xref:System.Collections.Generic.Dictionary%602> before the dictionary contents are added to the object graph.</span></span> <span data-ttu-id="33bf7-121">Таким образом, универсальный словарь можно поключить во время выполнения с помощью объектов и сопоставить с соответствующим поведением `Add` универсального и индексатора.</span><span class="sxs-lookup"><span data-stu-id="33bf7-121">In this manner, a generic dictionary can be keyed at run time by objects and can match the relevant generic `Add` and indexer behavior.</span></span> <span data-ttu-id="33bf7-122">Однако, как реализовано для базовой <xref:System.Xaml.XamlObjectWriter>версии, эта возможность существует только для создания графа объекта из <xref:System.Collections.Generic.Dictionary%602> базового класса, а <xref:System.Collections.Generic.Dictionary%602>не для производных классов.</span><span class="sxs-lookup"><span data-stu-id="33bf7-122">However, as implemented for the base <xref:System.Xaml.XamlObjectWriter>, this capability exists only for object graph creation from the base <xref:System.Collections.Generic.Dictionary%602> class and not for derived classes of <xref:System.Collections.Generic.Dictionary%602>.</span></span>  
  
## <a name="checks-for-disposed"></a><span data-ttu-id="33bf7-123">Проверки для ликвидированных</span><span class="sxs-lookup"><span data-stu-id="33bf7-123">Checks for Disposed</span></span>  
 <span data-ttu-id="33bf7-124">Средства записи XAML потенциально используются для отложенных операций или в том случае, если выполняется вызов для экземпляра модуля записи XAML, который был удален в промежуточной области.</span><span class="sxs-lookup"><span data-stu-id="33bf7-124">XAML writers are potentially used for deferred operations or where a call is made against a XAML writer instance that has been disposed in the interim.</span></span> <span data-ttu-id="33bf7-125">В таких случаях <xref:System.Xaml.XamlObjectWriter> могут создаваться <xref:System.ObjectDisposedException> различные API-интерфейсы.</span><span class="sxs-lookup"><span data-stu-id="33bf7-125">Various APIs of <xref:System.Xaml.XamlObjectWriter> might throw <xref:System.ObjectDisposedException> in these cases.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xaml.XamlWriter" />
    <altmember cref="T:System.Xaml.XamlObjectReader" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="33bf7-126">Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlObjectWriter" />.</span><span class="sxs-lookup"><span data-stu-id="33bf7-126">Initializes a new instance of the <see cref="T:System.Xaml.XamlObjectWriter" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlObjectWriter (System.Xaml.XamlSchemaContext schemaContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xaml.XamlSchemaContext schemaContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.#ctor(System.Xaml.XamlSchemaContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (schemaContext As XamlSchemaContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlObjectWriter(System::Xaml::XamlSchemaContext ^ schemaContext);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlObjectWriter : System.Xaml.XamlSchemaContext -&gt; System.Xaml.XamlObjectWriter" Usage="new System.Xaml.XamlObjectWriter schemaContext" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
      </Parameters>
      <Docs>
        <param name="schemaContext"><span data-ttu-id="33bf7-127">Контекст схемы XAML, общий со средством чтения XAML. Этот контекст предоставляет узлы для записи.</span><span class="sxs-lookup"><span data-stu-id="33bf7-127">A XAML schema context that is shared with the XAML reader that provides nodes for writing.</span></span></param>
        <summary><span data-ttu-id="33bf7-128">Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlObjectWriter" />, используя контекст схемы XAML, применяемый объектом <see cref="T:System.Xaml.XamlReader" />.</span><span class="sxs-lookup"><span data-stu-id="33bf7-128">Initializes a new instance of the <see cref="T:System.Xaml.XamlObjectWriter" /> class using  the XAML schema context that is used by a <see cref="T:System.Xaml.XamlReader" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="33bf7-129"><paramref name="schemaContext" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="33bf7-129"><paramref name="schemaContext" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlObjectWriter (System.Xaml.XamlSchemaContext schemaContext, System.Xaml.XamlObjectWriterSettings settings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xaml.XamlSchemaContext schemaContext, class System.Xaml.XamlObjectWriterSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.#ctor(System.Xaml.XamlSchemaContext,System.Xaml.XamlObjectWriterSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (schemaContext As XamlSchemaContext, settings As XamlObjectWriterSettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlObjectWriter(System::Xaml::XamlSchemaContext ^ schemaContext, System::Xaml::XamlObjectWriterSettings ^ settings);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlObjectWriter : System.Xaml.XamlSchemaContext * System.Xaml.XamlObjectWriterSettings -&gt; System.Xaml.XamlObjectWriter" Usage="new System.Xaml.XamlObjectWriter (schemaContext, settings)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
        <Parameter Name="settings" Type="System.Xaml.XamlObjectWriterSettings" />
      </Parameters>
      <Docs>
        <param name="schemaContext"><span data-ttu-id="33bf7-130">Контекст схемы XAML, общий со средством чтения XAML. Этот контекст предоставляет узлы для записи.</span><span class="sxs-lookup"><span data-stu-id="33bf7-130">A XAML schema context that is shared with the XAML reader that provides nodes for writing.</span></span></param>
        <param name="settings"><span data-ttu-id="33bf7-131">Объект параметров, задающий определенные параметры для поведения и вывода объекта <see cref="T:System.Xaml.XamlObjectWriter" />.</span><span class="sxs-lookup"><span data-stu-id="33bf7-131">A settings object that specifies certain options for <see cref="T:System.Xaml.XamlObjectWriter" /> behavior and output.</span></span></param>
        <summary><span data-ttu-id="33bf7-132">Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlObjectWriter" /> контекстом, используемым объектом <see cref="T:System.Xaml.XamlReader" /> и его параметрами.</span><span class="sxs-lookup"><span data-stu-id="33bf7-132">Initializes a new instance of the <see cref="T:System.Xaml.XamlObjectWriter" /> class using the context that is used by a <see cref="T:System.Xaml.XamlReader" /> and its settings.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="33bf7-133">Свойство <paramref name="schemaContext" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="33bf7-133"><paramref name="schemaContext" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; unit" Usage="xamlObjectWriter.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="33bf7-134">Сбрасывает все возможные кадры и очищает граф объектов.</span><span class="sxs-lookup"><span data-stu-id="33bf7-134">Resets all possible frames and clears the object graph.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="xamlObjectWriter.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="33bf7-135">Значение <see langword="true" />, если необходимо освободить управляемые ресурсы; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="33bf7-135"><see langword="true" /> to release the managed resources; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="33bf7-136">Освобождает неуправляемые ресурсы, используемые объектом <see cref="T:System.Xaml.XamlObjectWriter" />, а при необходимости освобождает также управляемые ресурсы.</span><span class="sxs-lookup"><span data-stu-id="33bf7-136">Releases the unmanaged resources used by the <see cref="T:System.Xaml.XamlObjectWriter" />, and optionally, releases the managed resources.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAfterBeginInit">
      <MemberSignature Language="C#" Value="protected virtual void OnAfterBeginInit (object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAfterBeginInit(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.OnAfterBeginInit(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAfterBeginInit (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAfterBeginInit(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member OnAfterBeginInit : obj -&gt; unit&#xA;override this.OnAfterBeginInit : obj -&gt; unit" Usage="xamlObjectWriter.OnAfterBeginInit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="33bf7-137">Объект, о котором требуется отчет.</span><span class="sxs-lookup"><span data-stu-id="33bf7-137">The object to report on.</span></span> <span data-ttu-id="33bf7-138">При вызове обработчика объект упакован в <see cref="T:System.Xaml.XamlObjectEventArgs" />.</span><span class="sxs-lookup"><span data-stu-id="33bf7-138">The object is packaged into <see cref="T:System.Xaml.XamlObjectEventArgs" /> when the handler is invoked.</span></span></param>
        <summary><span data-ttu-id="33bf7-139">Вызывает любой метод <see cref="P:System.Xaml.XamlObjectWriterSettings.AfterBeginInitHandler" />, связанный с объектом <see cref="T:System.Xaml.XamlObjectWriterSettings" />, для данного объекта <see cref="T:System.Xaml.XamlObjectWriter" />.</span><span class="sxs-lookup"><span data-stu-id="33bf7-139">Invokes any <see cref="P:System.Xaml.XamlObjectWriterSettings.AfterBeginInitHandler" /> method that is associated with <see cref="T:System.Xaml.XamlObjectWriterSettings" /> for this <see cref="T:System.Xaml.XamlObjectWriter" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAfterEndInit">
      <MemberSignature Language="C#" Value="protected virtual void OnAfterEndInit (object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAfterEndInit(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.OnAfterEndInit(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAfterEndInit (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAfterEndInit(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member OnAfterEndInit : obj -&gt; unit&#xA;override this.OnAfterEndInit : obj -&gt; unit" Usage="xamlObjectWriter.OnAfterEndInit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="33bf7-140">Объект, о котором требуется отчет.</span><span class="sxs-lookup"><span data-stu-id="33bf7-140">The object to report on.</span></span> <span data-ttu-id="33bf7-141">При вызове обработчика значение упаковывается в объект <see cref="T:System.Xaml.XamlObjectEventArgs" />.</span><span class="sxs-lookup"><span data-stu-id="33bf7-141">The value  is packaged into <see cref="T:System.Xaml.XamlObjectEventArgs" /> when the handler is invoked.</span></span></param>
        <summary><span data-ttu-id="33bf7-142">Вызывает любой метод <see cref="P:System.Xaml.XamlObjectWriterSettings.AfterEndInitHandler" />, связанный с объектом <see cref="T:System.Xaml.XamlObjectWriterSettings" />, для данного объекта <see cref="T:System.Xaml.XamlObjectWriter" />.</span><span class="sxs-lookup"><span data-stu-id="33bf7-142">Invokes any <see cref="P:System.Xaml.XamlObjectWriterSettings.AfterEndInitHandler" /> method that is associated with <see cref="T:System.Xaml.XamlObjectWriterSettings" /> for this <see cref="T:System.Xaml.XamlObjectWriter" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAfterProperties">
      <MemberSignature Language="C#" Value="protected virtual void OnAfterProperties (object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAfterProperties(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.OnAfterProperties(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAfterProperties (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAfterProperties(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member OnAfterProperties : obj -&gt; unit&#xA;override this.OnAfterProperties : obj -&gt; unit" Usage="xamlObjectWriter.OnAfterProperties value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="33bf7-143">Объект, о котором требуется отчет.</span><span class="sxs-lookup"><span data-stu-id="33bf7-143">The object to report on.</span></span> <span data-ttu-id="33bf7-144">При вызове обработчика он упакован в объект <see cref="T:System.Xaml.XamlObjectEventArgs" />.</span><span class="sxs-lookup"><span data-stu-id="33bf7-144">This is packaged into <see cref="T:System.Xaml.XamlObjectEventArgs" /> when the handler is invoked.</span></span></param>
        <summary><span data-ttu-id="33bf7-145">Вызывает любой метод <see cref="P:System.Xaml.XamlObjectWriterSettings.AfterPropertiesHandler" />, на который имеется ссылка и который связан с <see cref="T:System.Xaml.XamlObjectWriterSettings" />, для данного объекта <see cref="T:System.Xaml.XamlObjectWriter" />.</span><span class="sxs-lookup"><span data-stu-id="33bf7-145">Invokes any <see cref="P:System.Xaml.XamlObjectWriterSettings.AfterPropertiesHandler" /> referenced method that is associated with <see cref="T:System.Xaml.XamlObjectWriterSettings" /> for this <see cref="T:System.Xaml.XamlObjectWriter" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBeforeProperties">
      <MemberSignature Language="C#" Value="protected virtual void OnBeforeProperties (object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnBeforeProperties(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.OnBeforeProperties(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnBeforeProperties (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnBeforeProperties(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member OnBeforeProperties : obj -&gt; unit&#xA;override this.OnBeforeProperties : obj -&gt; unit" Usage="xamlObjectWriter.OnBeforeProperties value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="33bf7-146">Значение, передаваемое при вызове обработчика через объект <see cref="T:System.Xaml.XamlObjectEventArgs" />.</span><span class="sxs-lookup"><span data-stu-id="33bf7-146">The value to pass through <see cref="T:System.Xaml.XamlObjectEventArgs" /> when the handler is invoked.</span></span></param>
        <summary><span data-ttu-id="33bf7-147">Вызывает любой метод <see cref="P:System.Xaml.XamlObjectWriterSettings.BeforePropertiesHandler" />, на который имеется ссылка и который связан с <see cref="T:System.Xaml.XamlObjectWriterSettings" />, для данного объекта <see cref="T:System.Xaml.XamlObjectWriter" />.</span><span class="sxs-lookup"><span data-stu-id="33bf7-147">Invokes any <see cref="P:System.Xaml.XamlObjectWriterSettings.BeforePropertiesHandler" /> referenced method that is associated with <see cref="T:System.Xaml.XamlObjectWriterSettings" /> for this <see cref="T:System.Xaml.XamlObjectWriter" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSetValue">
      <MemberSignature Language="C#" Value="protected virtual bool OnSetValue (object eventSender, System.Xaml.XamlMember member, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool OnSetValue(object eventSender, class System.Xaml.XamlMember member, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.OnSetValue(System.Object,System.Xaml.XamlMember,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnSetValue (eventSender As Object, member As XamlMember, value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool OnSetValue(System::Object ^ eventSender, System::Xaml::XamlMember ^ member, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member OnSetValue : obj * System.Xaml.XamlMember * obj -&gt; bool&#xA;override this.OnSetValue : obj * System.Xaml.XamlMember * obj -&gt; bool" Usage="xamlObjectWriter.OnSetValue (eventSender, member, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventSender" Type="System.Object" />
        <Parameter Name="member" Type="System.Xaml.XamlMember" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="eventSender"><span data-ttu-id="33bf7-148">Объект, передаваемый в обработчик в качестве источника.</span><span class="sxs-lookup"><span data-stu-id="33bf7-148">The object to report as the source to the handler.</span></span></param>
        <param name="member"><span data-ttu-id="33bf7-149">Имя задаваемого свойства, передаваемое обработчику в составе объекта <see cref="T:System.Windows.Markup.XamlSetValueEventArgs" />.</span><span class="sxs-lookup"><span data-stu-id="33bf7-149">The name of the property to set, which is passed to the handler as part of <see cref="T:System.Windows.Markup.XamlSetValueEventArgs" />.</span></span></param>
        <param name="value"><span data-ttu-id="33bf7-150">Значение, которое нужно предоставить свойству, определенному параметром <paramref name="property" />.</span><span class="sxs-lookup"><span data-stu-id="33bf7-150">The value to provide for the property that is named by <paramref name="property" />.</span></span> <span data-ttu-id="33bf7-151">Значение передается обработчику в составе объекта <see cref="T:System.Windows.Markup.XamlSetValueEventArgs" />.</span><span class="sxs-lookup"><span data-stu-id="33bf7-151">The value is passed to the handler as part of <see cref="T:System.Windows.Markup.XamlSetValueEventArgs" />.</span></span></param>
        <summary><span data-ttu-id="33bf7-152">Вызывает любой метод <see cref="P:System.Xaml.XamlObjectWriterSettings.XamlSetValueHandler" />, на который имеется ссылка и который связан с <see cref="T:System.Xaml.XamlObjectWriterSettings" />, для этого средства записи при условии, что параметр <paramref name="handled" /> в данных события <see cref="T:System.Windows.Markup.XamlSetValueEventArgs" /> имеет значение, отличное от <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="33bf7-152">Invokes any <see cref="P:System.Xaml.XamlObjectWriterSettings.XamlSetValueHandler" /> referenced method that is associated with <see cref="T:System.Xaml.XamlObjectWriterSettings" /> for this writer, as long as <paramref name="handled" /> in <see cref="T:System.Windows.Markup.XamlSetValueEventArgs" /> event data is not <see langword="true" />.</span></span></summary>
        <returns><span data-ttu-id="33bf7-153">Логическое значение, заданное любым связанным обработчиком; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="33bf7-153">A Boolean value that is set by any associated handler; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33bf7-154">Если операция для этого модуля записи XAML имеет связанный обработчик <xref:System.Xaml.XamlObjectWriterSettings.XamlSetValueHandler%2A> (объявлен в <xref:System.Xaml.XamlObjectWriterSettings>), этот метод создает новый <xref:System.Windows.Markup.XamlSetValueEventArgs> и передает его в обработчик. `SetValue`</span><span class="sxs-lookup"><span data-stu-id="33bf7-154">If the `SetValue` operation for this XAML writer has an associated handler (a <xref:System.Xaml.XamlObjectWriterSettings.XamlSetValueHandler%2A> is declared in <xref:System.Xaml.XamlObjectWriterSettings>), this method creates new <xref:System.Windows.Markup.XamlSetValueEventArgs> and passes them to the handler.</span></span> <span data-ttu-id="33bf7-155">Возвращаемое значение задается путем считывания <xref:System.Windows.Markup.XamlSetValueEventArgs.Handled%2A> значения, передаваемого через данные события.</span><span class="sxs-lookup"><span data-stu-id="33bf7-155">The return value is set by reading the <xref:System.Windows.Markup.XamlSetValueEventArgs.Handled%2A> value that is passed through the event data.</span></span> <span data-ttu-id="33bf7-156">Если обработчик не существует и вызывается этот метод, вызов возвращает `false`.</span><span class="sxs-lookup"><span data-stu-id="33bf7-156">If no handler exists and this method is invoked, the call returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Result">
      <MemberSignature Language="C#" Value="public virtual object Result { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Result" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlObjectWriter.Result" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Result As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ Result { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Result : obj" Usage="System.Xaml.XamlObjectWriter.Result" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33bf7-157">Получает последний записанный объект.</span><span class="sxs-lookup"><span data-stu-id="33bf7-157">Gets the last object that was written.</span></span> <span data-ttu-id="33bf7-158">Вызывается, только когда поток узла достиг конца и граф объекта завершен.</span><span class="sxs-lookup"><span data-stu-id="33bf7-158">Typically only called when the node stream is at its end and the object graph is complete.</span></span></summary>
        <value><span data-ttu-id="33bf7-159">Последний записанный объект или <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="33bf7-159">The last object written, or <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33bf7-160">Наиболее типичное использование <xref:System.Xaml.XamlObjectWriter.Result%2A> метода — вызов его только в том случае, если известно, что поток узла находится в конце, и граф объекта завершен.</span><span class="sxs-lookup"><span data-stu-id="33bf7-160">The most typical usage of <xref:System.Xaml.XamlObjectWriter.Result%2A> is to call it only when the node stream is known to be at its end, and the object graph is complete.</span></span> <span data-ttu-id="33bf7-161">В противном случае граф объектов, скорее всего, будет неполным и не будет полезен для большинства сценариев платформы.</span><span class="sxs-lookup"><span data-stu-id="33bf7-161">Otherwise, the object graph is likely to be incomplete, and is not useful for most platform scenarios.</span></span>  
  
 <span data-ttu-id="33bf7-162"><xref:System.Xaml.XamlObjectWriter.Result%2A>обычно содержит значение <xref:System.Xaml.XamlObjectWriter.WriteEndObject%2A>, отличное от NULL, если оно вызывается сразу после вызова, и если текущая область находится в элементе, где объект предоставляет значение.</span><span class="sxs-lookup"><span data-stu-id="33bf7-162"><xref:System.Xaml.XamlObjectWriter.Result%2A> typically only contains a non-null value if it is called immediately after a call to <xref:System.Xaml.XamlObjectWriter.WriteEndObject%2A>, and if the current scope is in the member where the object provides a value.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RootNameScope">
      <MemberSignature Language="C#" Value="public System.Windows.Markup.INameScope RootNameScope { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Markup.INameScope RootNameScope" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlObjectWriter.RootNameScope" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RootNameScope As INameScope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Markup::INameScope ^ RootNameScope { System::Windows::Markup::INameScope ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RootNameScope : System.Windows.Markup.INameScope" Usage="System.Xaml.XamlObjectWriter.RootNameScope" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Markup.INameScope</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33bf7-163">Получает службу <see cref="T:System.Windows.Markup.INameScope" />, которая поддерживает область имен XAML для абсолютного корня узла средства записи объекта XAML.</span><span class="sxs-lookup"><span data-stu-id="33bf7-163">Gets the <see cref="T:System.Windows.Markup.INameScope" /> service that maintains the XAML namescope for the absolute node root of the XAML object writer.</span></span></summary>
        <value><span data-ttu-id="33bf7-164">Служба <see cref="T:System.Windows.Markup.INameScope" />, которая поддерживает область имен XAML для текущего корня средства записи объекта.</span><span class="sxs-lookup"><span data-stu-id="33bf7-164">The <see cref="T:System.Windows.Markup.INameScope" /> service that maintains the XAML namescope for the current root of the object writer.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33bf7-165">Значение этого свойства может поступать из контекста модуля записи объекта.</span><span class="sxs-lookup"><span data-stu-id="33bf7-165">The value of this property may come from the object writer context.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SchemaContext">
      <MemberSignature Language="C#" Value="public override System.Xaml.XamlSchemaContext SchemaContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlSchemaContext SchemaContext" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlObjectWriter.SchemaContext" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property SchemaContext As XamlSchemaContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xaml::XamlSchemaContext ^ SchemaContext { System::Xaml::XamlSchemaContext ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SchemaContext : System.Xaml.XamlSchemaContext" Usage="System.Xaml.XamlObjectWriter.SchemaContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlSchemaContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33bf7-166">Получает активный контекст схемы XAML.</span><span class="sxs-lookup"><span data-stu-id="33bf7-166">Gets the active XAML schema context.</span></span></summary>
        <value><span data-ttu-id="33bf7-167">Контекст схемы XAML.</span><span class="sxs-lookup"><span data-stu-id="33bf7-167">The XAML schema context.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33bf7-168">Контекст схемы XAML — это необходимый источник информации для наиболее практичных сценариев написания объектов.</span><span class="sxs-lookup"><span data-stu-id="33bf7-168">XAML schema context is a necessary information source for most practical object-writing scenarios.</span></span> <span data-ttu-id="33bf7-169">Контекст схемы XAML влияет на поиск по типам резервных типов и содержит сведения о сборках, в которых существуют резервные типы.</span><span class="sxs-lookup"><span data-stu-id="33bf7-169">The XAML schema context influences the type lookup for backing types and holds information about the assemblies where backing types exist.</span></span> <span data-ttu-id="33bf7-170">Контекст схемы XAML по умолчанию основан на правилах сопоставления типов CLR.</span><span class="sxs-lookup"><span data-stu-id="33bf7-170">The default XAML schema context is based on CLR type-mapping rules.</span></span> <span data-ttu-id="33bf7-171">Как правило, платформы предоставляют собственный контекст схемы XAML, чтобы гарантировать, что механизмы загрузки сборок соответствуют моделям приложений AMD платформы.</span><span class="sxs-lookup"><span data-stu-id="33bf7-171">Frameworks typically provide their own XAML schema context in order to assure that the assembly-loading mechanisms match the framework's programming amd application models.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetLineInfo">
      <MemberSignature Language="C#" Value="public void SetLineInfo (int lineNumber, int linePosition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetLineInfo(int32 lineNumber, int32 linePosition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.SetLineInfo(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetLineInfo (lineNumber As Integer, linePosition As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetLineInfo(int lineNumber, int linePosition);" />
      <MemberSignature Language="F#" Value="abstract member SetLineInfo : int * int -&gt; unit&#xA;override this.SetLineInfo : int * int -&gt; unit" Usage="xamlObjectWriter.SetLineInfo (lineNumber, linePosition)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Xaml.IXamlLineInfoConsumer.SetLineInfo(System.Int32,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lineNumber" Type="System.Int32" />
        <Parameter Name="linePosition" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="lineNumber"><span data-ttu-id="33bf7-172">Номер строки от средства чтения.</span><span class="sxs-lookup"><span data-stu-id="33bf7-172">The line number from the reader.</span></span></param>
        <param name="linePosition"><span data-ttu-id="33bf7-173">Положение в строке от средства чтения.</span><span class="sxs-lookup"><span data-stu-id="33bf7-173">The line position from the reader.</span></span></param>
        <summary><span data-ttu-id="33bf7-174">Реализует метод <see cref="M:System.Xaml.IXamlLineInfoConsumer.SetLineInfo(System.Int32,System.Int32)" /> и предоставляет сведения о строке для исключений.</span><span class="sxs-lookup"><span data-stu-id="33bf7-174">Implements <see cref="M:System.Xaml.IXamlLineInfoConsumer.SetLineInfo(System.Int32,System.Int32)" /> and provides line information for exceptions.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33bf7-175">Этот метод службы не предназначен для непосредственного вызова из кода.</span><span class="sxs-lookup"><span data-stu-id="33bf7-175">This service method is not intended to be called directly from your code.</span></span> <span data-ttu-id="33bf7-176">Однако, если создается производный класс от <xref:System.Xaml.XamlObjectWriter> и предполагается, что для отчета о контексте, в котором номера строк недоступны или не используются, этот метод может быть вызван.</span><span class="sxs-lookup"><span data-stu-id="33bf7-176">However, if you are creating a derived class from <xref:System.Xaml.XamlObjectWriter> and expect to report a context where line numbers are unavailable or not useful, this method may be called.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldProvideLineInfo">
      <MemberSignature Language="C#" Value="public bool ShouldProvideLineInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShouldProvideLineInfo" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlObjectWriter.ShouldProvideLineInfo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ShouldProvideLineInfo As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShouldProvideLineInfo { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.ShouldProvideLineInfo : bool" Usage="System.Xaml.XamlObjectWriter.ShouldProvideLineInfo" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Xaml.IXamlLineInfoConsumer.ShouldProvideLineInfo</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33bf7-177">Получает значение, которое сообщает, должна ли служба сведений о строке предоставлять значения и, следовательно, вызывать метод <see cref="M:System.Xaml.IXamlLineInfoConsumer.SetLineInfo(System.Int32,System.Int32)" />, когда это требуется.</span><span class="sxs-lookup"><span data-stu-id="33bf7-177">Gets a value that reports whether a line information service should provide values and therefore, should also call the <see cref="M:System.Xaml.IXamlLineInfoConsumer.SetLineInfo(System.Int32,System.Int32)" /> method when it is relevant.</span></span></summary>
        <value><span data-ttu-id="33bf7-178">Значение <see langword="true" />, если сведения о строке используются средством записи; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="33bf7-178"><see langword="true" /> if line information is used by the writer; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33bf7-179">Данная реализация всегда возвращает значение `true`.</span><span class="sxs-lookup"><span data-stu-id="33bf7-179">This implementation always returns `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEndMember">
      <MemberSignature Language="C#" Value="public override void WriteEndMember ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteEndMember() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.WriteEndMember" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteEndMember ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteEndMember();" />
      <MemberSignature Language="F#" Value="override this.WriteEndMember : unit -&gt; unit" Usage="xamlObjectWriter.WriteEndMember " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="33bf7-180">Закрывает область текущего члена и может при закрытии записать значение области члена.</span><span class="sxs-lookup"><span data-stu-id="33bf7-180">Closes the current member scope, and may write the value of the member scope while it closes.</span></span> <span data-ttu-id="33bf7-181">Новая область становится областью родительского объекта этого члена.</span><span class="sxs-lookup"><span data-stu-id="33bf7-181">The new scope becomes the parent object scope of the member.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Xaml.XamlObjectWriterException"><span data-ttu-id="33bf7-182">Не удалось создать значение элемента из узла значения, который встречается между этим вызовом и предыдущим <see langword="StartMember" />.</span><span class="sxs-lookup"><span data-stu-id="33bf7-182">Failed to create member value from a value node that is encountered between this call and a previous <see langword="StartMember" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteEndObject">
      <MemberSignature Language="C#" Value="public override void WriteEndObject ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteEndObject() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.WriteEndObject" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteEndObject ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteEndObject();" />
      <MemberSignature Language="F#" Value="override this.WriteEndObject : unit -&gt; unit" Usage="xamlObjectWriter.WriteEndObject " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="33bf7-183">Закрывает текущую область объекта в средстве записи.</span><span class="sxs-lookup"><span data-stu-id="33bf7-183">Closes the current object scope in the writer.</span></span> <span data-ttu-id="33bf7-184">Новой областью объекта становится область родительского члена.</span><span class="sxs-lookup"><span data-stu-id="33bf7-184">The new object scope becomes the parent member scope.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33bf7-185">Если область `EndObject` должности закрывает корневой объект, Новая область объекта становится корневой областью.</span><span class="sxs-lookup"><span data-stu-id="33bf7-185">If this `EndObject` position scope is closing the root object, the new object scope becomes the root scope.</span></span>  
  
 <span data-ttu-id="33bf7-186">Вызов <xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A> , возможно, еще не создал объект, так как элемент объекта может быть необходимым путем инициализации, например текстом инициализации или параметрами инициализации.</span><span class="sxs-lookup"><span data-stu-id="33bf7-186">The call to <xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A> might not yet have created the object because an object member might be a necessary initialization pathway, such as initialization text or initialization parameters.</span></span> <span data-ttu-id="33bf7-187">В таких случаях вызов для <xref:System.Xaml.XamlObjectWriter.WriteEndObject%2A> фактической записи объекта.</span><span class="sxs-lookup"><span data-stu-id="33bf7-187">For these cases, the call to <xref:System.Xaml.XamlObjectWriter.WriteEndObject%2A> actually writes the object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteGetObject">
      <MemberSignature Language="C#" Value="public override void WriteGetObject ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteGetObject() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.WriteGetObject" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteGetObject ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteGetObject();" />
      <MemberSignature Language="F#" Value="override this.WriteGetObject : unit -&gt; unit" Usage="xamlObjectWriter.WriteGetObject " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="33bf7-188">Записывает концептуальный <see langword="StartObject" /> в граф объекта, если заданный объект является значением по умолчанию или неявным значением родительского свойства.</span><span class="sxs-lookup"><span data-stu-id="33bf7-188">Writes the conceptual <see langword="StartObject" /> into the object graph when the specified object is a default or implicit value of the parent property.</span></span> <span data-ttu-id="33bf7-189">Неявное значение получается из сведений, полученных из контекста схемы XAML и информации базовых типов, а не задается в виде значения объекта во входном наборе узлов XAML.</span><span class="sxs-lookup"><span data-stu-id="33bf7-189">The implicit value comes from information that is obtained from the XAML schema context and backing type information, instead of being specified as an object value in the input XAML node set.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33bf7-190">Разница между написанием <xref:System.Xaml.XamlObjectWriter.WriteGetObject%2A> и записью с <xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A> помощью может быть показана в результирующем графе объекта.</span><span class="sxs-lookup"><span data-stu-id="33bf7-190">The difference between writing with <xref:System.Xaml.XamlObjectWriter.WriteGetObject%2A> and writing with <xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A> can be seen in the resulting object graph.</span></span> <span data-ttu-id="33bf7-191"><xref:System.Xaml.XamlObjectWriter.WriteGetObject%2A>не формирует экземпляр типа, так как <xref:System.Xaml.XamlObjectWriter.WriteGetObject%2A> API не содержит сведений для информирования графа объектов о том, что нужно создать.</span><span class="sxs-lookup"><span data-stu-id="33bf7-191"><xref:System.Xaml.XamlObjectWriter.WriteGetObject%2A> does not construct an instance of a type because the <xref:System.Xaml.XamlObjectWriter.WriteGetObject%2A> API has no information to inform the object graph of what to construct.</span></span> <span data-ttu-id="33bf7-192">Вместо этого объект был создан при инициализации свойства Parent; <xref:System.Xaml.XamlObjectWriter> поэтому не нужно создавать его.</span><span class="sxs-lookup"><span data-stu-id="33bf7-192">Instead, the object was created when the parent property was initialized; so a <xref:System.Xaml.XamlObjectWriter> does not need to construct it.</span></span> <span data-ttu-id="33bf7-193">В отличие от <xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A> этого, указывает, что экземпляр этого типа должен быть создан и вставлен в граф объекта.</span><span class="sxs-lookup"><span data-stu-id="33bf7-193">In contrast, <xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A> specifies that an instance of that type should be constructed and inserted into the object graph.</span></span>  
  
 <span data-ttu-id="33bf7-194">Если вы считаете, что поток узлов XAML представляет собой последовательность кадров, то объект <xref:System.Xaml.XamlObjectWriter.WriteGetObject%2A> распределяется <xref:System.Xaml.XamlObjectWriter.WriteEndObject%2A> по вызову.</span><span class="sxs-lookup"><span data-stu-id="33bf7-194">If you think of the XAML node stream as a series of frames, a <xref:System.Xaml.XamlObjectWriter.WriteGetObject%2A> is balanced to a <xref:System.Xaml.XamlObjectWriter.WriteEndObject%2A> call.</span></span> <span data-ttu-id="33bf7-195">Таким образом, число <xref:System.Xaml.XamlObjectWriter.WriteGetObject%2A> вызовов Plus <xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A> <xref:System.Xaml.XamlObjectWriter.WriteEndObject%2A> должно равняться числу вызовов в рамках полной оценки потока узлов XAML.</span><span class="sxs-lookup"><span data-stu-id="33bf7-195">Therefore, the number of <xref:System.Xaml.XamlObjectWriter.WriteGetObject%2A> plus <xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A> calls should equal the number of <xref:System.Xaml.XamlObjectWriter.WriteEndObject%2A> calls as part of a complete object-writing evaluation of the XAML node stream.</span></span>  
  
 <span data-ttu-id="33bf7-196">Концептуальное `StartObject` расположение неявного объекта в графе объекта является обязательным, так как хотя значение объекта является неявным по умолчанию, у этого объекта по-прежнему могут быть элементы, которые должны быть написаны на основе потока узлов XAML.</span><span class="sxs-lookup"><span data-stu-id="33bf7-196">The conceptual `StartObject` position for an implicit object in the object graph is necessary because although the object value itself is an implicit default, that object might still have members that need to be written based on the XAML node stream.</span></span> <span data-ttu-id="33bf7-197">Типичным сценарием, в котором происходит <xref:System.Xaml.XamlObjectWriter> это, является запись узлов членов для свойства коллекции, а инициализация коллекции является неявной для создания объекта, владеющего свойством коллекции.</span><span class="sxs-lookup"><span data-stu-id="33bf7-197">A typical scenario where this occurs is when <xref:System.Xaml.XamlObjectWriter> writes member nodes for a collection property, and the collection initialization is implicit to creating the object that owns the collection property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteNamespace">
      <MemberSignature Language="C#" Value="public override void WriteNamespace (System.Xaml.NamespaceDeclaration namespaceDeclaration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteNamespace(class System.Xaml.NamespaceDeclaration namespaceDeclaration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.WriteNamespace(System.Xaml.NamespaceDeclaration)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteNamespace(System::Xaml::NamespaceDeclaration ^ namespaceDeclaration);" />
      <MemberSignature Language="F#" Value="override this.WriteNamespace : System.Xaml.NamespaceDeclaration -&gt; unit" Usage="xamlObjectWriter.WriteNamespace namespaceDeclaration" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="namespaceDeclaration" Type="System.Xaml.NamespaceDeclaration" />
      </Parameters>
      <Docs>
        <param name="namespaceDeclaration"><span data-ttu-id="33bf7-198">Объявление пространства имен для записи.</span><span class="sxs-lookup"><span data-stu-id="33bf7-198">The namespace declaration to write.</span></span></param>
        <summary><span data-ttu-id="33bf7-199">Определяет объявление пространства имен, которое применяется к следующей области объекта или члена.</span><span class="sxs-lookup"><span data-stu-id="33bf7-199">Defines a namespace declaration that applies to the next object scope or member scope.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33bf7-200">Объявление пространства имен может быть записано, если текущая область является корневой областью, областью объекта или областью элемента.</span><span class="sxs-lookup"><span data-stu-id="33bf7-200">A namespace declaration can be written if the current scope is a root scope, object scope, or member scope.</span></span> <span data-ttu-id="33bf7-201">Однако метод <xref:System.Xaml.XamlObjectWriter.WriteNamespace%2A> <xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A> <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A>можно вызвать только непосредственно перед вызовом одного из следующих методов:, или. <xref:System.Xaml.XamlObjectWriter.WriteNamespace%2A></span><span class="sxs-lookup"><span data-stu-id="33bf7-201">However, <xref:System.Xaml.XamlObjectWriter.WriteNamespace%2A> can only be called immediately before a call to one of the following: <xref:System.Xaml.XamlObjectWriter.WriteNamespace%2A>, <xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A>, or <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A>.</span></span> <span data-ttu-id="33bf7-202">Последовательный <xref:System.Xaml.XamlObjectWriter.WriteNamespace%2A> случай — запись нескольких объявлений пространств имен в один и тот же узел.</span><span class="sxs-lookup"><span data-stu-id="33bf7-202">The consecutive <xref:System.Xaml.XamlObjectWriter.WriteNamespace%2A> case is for writing multiple namespace declarations to the same node.</span></span> <span data-ttu-id="33bf7-203">В конечном итоге <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A> должен <xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A> быть вызван либо метод, либо.</span><span class="sxs-lookup"><span data-stu-id="33bf7-203">Eventually, either <xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A> or <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A> must be called.</span></span>  
  
 <span data-ttu-id="33bf7-204"><xref:System.Xaml.XamlObjectWriter.WriteNamespace%2A>не использует `Start` / метафору.`End`</span><span class="sxs-lookup"><span data-stu-id="33bf7-204"><xref:System.Xaml.XamlObjectWriter.WriteNamespace%2A> does not use a `Start`/`End` metaphor.</span></span> <span data-ttu-id="33bf7-205">Хотя пространство имен XAML имеет члены в смысле представления CLR, эти элементы известны и их не нужно представлять как особый тип <xref:System.Xaml.XamlMember> для расширяемости.</span><span class="sxs-lookup"><span data-stu-id="33bf7-205">Although a XAML namespace has members in the CLR representation sense, the members are known and do not need to be represented as a special type of <xref:System.Xaml.XamlMember> for extensibility.</span></span> <span data-ttu-id="33bf7-206">Для доступа к значениям <xref:System.Xaml.NamespaceDeclaration>можно <xref:System.Xaml.NamespaceDeclaration.Namespace%2A> использовать свойства и <xref:System.Xaml.NamespaceDeclaration.Prefix%2A> .</span><span class="sxs-lookup"><span data-stu-id="33bf7-206">To access the values of a <xref:System.Xaml.NamespaceDeclaration>, you access its <xref:System.Xaml.NamespaceDeclaration.Namespace%2A> and <xref:System.Xaml.NamespaceDeclaration.Prefix%2A> properties.</span></span>  
  
 <span data-ttu-id="33bf7-207">Объявление пространства имен может иметь <xref:System.String.Empty?displayProperty=nameWithType> значение для префикса.</span><span class="sxs-lookup"><span data-stu-id="33bf7-207">A namespace declaration may have a <xref:System.String.Empty?displayProperty=nameWithType> value for the prefix.</span></span> <span data-ttu-id="33bf7-208"><xref:System.String.Empty?displayProperty=nameWithType> Префикс представляет объявление пространства имен XAML по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="33bf7-208">A <xref:System.String.Empty?displayProperty=nameWithType> prefix represents a declaration of the default XAML namespace.</span></span> <span data-ttu-id="33bf7-209">Не пытайтесь использовать NULL для представления префикса по умолчанию;  Он создает исключение в этом API.</span><span class="sxs-lookup"><span data-stu-id="33bf7-209">Do not attempt to use null to represent the default prefix;  it throws an exception in this API.</span></span> <span data-ttu-id="33bf7-210">Для получения дополнительной информации см. <xref:System.Xaml.NamespaceDeclaration>.</span><span class="sxs-lookup"><span data-stu-id="33bf7-210">For more information, see <xref:System.Xaml.NamespaceDeclaration>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="33bf7-211">Значение параметра <paramref name="namespaceDeclaration" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="33bf7-211">The <paramref name="namespaceDeclaration" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="33bf7-212">Компонент <paramref name="namespaceDeclaration" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="33bf7-212">A component of <paramref name="namespaceDeclaration" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Xaml.XamlObjectReaderException"><span data-ttu-id="33bf7-213">Попытка записи узла пространства имен XAML в недопустимую область.</span><span class="sxs-lookup"><span data-stu-id="33bf7-213">Tried to write a XAML namespace node in an invalid scope.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartMember">
      <MemberSignature Language="C#" Value="public override void WriteStartMember (System.Xaml.XamlMember property);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteStartMember(class System.Xaml.XamlMember property) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.WriteStartMember(System.Xaml.XamlMember)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteStartMember (property As XamlMember)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteStartMember(System::Xaml::XamlMember ^ property);" />
      <MemberSignature Language="F#" Value="override this.WriteStartMember : System.Xaml.XamlMember -&gt; unit" Usage="xamlObjectWriter.WriteStartMember property" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Xaml.XamlMember" />
      </Parameters>
      <Docs>
        <param name="property"><span data-ttu-id="33bf7-214">Записываемое свойство XAML.</span><span class="sxs-lookup"><span data-stu-id="33bf7-214">The XAML property to write.</span></span> <span data-ttu-id="33bf7-215">Это значение, как правило, получается из средства чтения XAML посредством промежуточного потока узлов XAML.</span><span class="sxs-lookup"><span data-stu-id="33bf7-215">Typically you obtain this value from a XAML reader through the XAML node stream intermediate.</span></span></param>
        <summary><span data-ttu-id="33bf7-216">Записывает новый узел члена в текущую область объекта, и эта область становится новой областью члена.</span><span class="sxs-lookup"><span data-stu-id="33bf7-216">Writes a new member node into the current object scope, and the scope becomes a new member scope.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!TIP]
>  <span data-ttu-id="33bf7-217">Следите за <xref:System.Xaml.XamlDuplicateMemberException>тем, что происходит, когда одно и то же свойство XAML устанавливается в входных данных XAML дважды.</span><span class="sxs-lookup"><span data-stu-id="33bf7-217">Watch for a <xref:System.Xaml.XamlDuplicateMemberException>, which occurs when the same XAML property is set twice in the XAML input.</span></span> <span data-ttu-id="33bf7-218">В простых случаях, например, если одно и то же свойство задано в синтаксисе атрибута и синтаксисе элемента свойства, это исключение можно легко увидеть во входной разметке.</span><span class="sxs-lookup"><span data-stu-id="33bf7-218">In simple cases, such as when the same property is set in both attribute syntax and property element syntax, you can easily see this exception in the input markup.</span></span> <span data-ttu-id="33bf7-219">Однако могут возникнуть более тонкие случаи, которые сложнее выявить.</span><span class="sxs-lookup"><span data-stu-id="33bf7-219">However, more subtle cases can occur that are more difficult to spot.</span></span> <span data-ttu-id="33bf7-220">Например, это исключение может возникнуть, если задать свойство содержимого XAML, если вы включаете свойства внешней среды XAML, и если свойство включает как присоединяемое использование, так и использование экземпляра.</span><span class="sxs-lookup"><span data-stu-id="33bf7-220">For example, this exception might occur if you set a XAML content property, if you involve XAML ambient properties, and if a property enables both an attachable usage and an instance usage.</span></span> <span data-ttu-id="33bf7-221">На стадиях отладки разработки можно часто наладить это исключение, просмотрев промежуточное представление XAML, которое подключает чтение разметки и объектный граф записи.</span><span class="sxs-lookup"><span data-stu-id="33bf7-221">In the debugging phases of development, you can often locate this exception by viewing the intermediate XAML node representation that connects the markup read and the object graph write.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xaml.XamlObjectWriterException"><span data-ttu-id="33bf7-222">Для свойства <paramref name="property" /> значение <see cref="P:System.Xaml.XamlMember.IsUnknown" /> установлено равным <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="33bf7-222"><paramref name="property" /> has <see cref="P:System.Xaml.XamlMember.IsUnknown" /> set to <see langword="true" />.</span></span>  
  
<span data-ttu-id="33bf7-223">- или -</span><span class="sxs-lookup"><span data-stu-id="33bf7-223">-or-</span></span> 
 <span data-ttu-id="33bf7-224">Свойство переданное <see cref="P:System.Xaml.XamlLanguage.UnknownContent" />, которое указывает, что поток узлов XAML, содержащий содержимое для объекта, который не поддерживает содержимое.</span><span class="sxs-lookup"><span data-stu-id="33bf7-224"><see cref="P:System.Xaml.XamlLanguage.UnknownContent" /> passed, which indicates that the XAML node stream contained content for an object that does not support content.</span></span>  
  
<span data-ttu-id="33bf7-225">-или-</span><span class="sxs-lookup"><span data-stu-id="33bf7-225">-or-</span></span> 
<span data-ttu-id="33bf7-226">Попытка записи начального члена в недопустимой области действия.</span><span class="sxs-lookup"><span data-stu-id="33bf7-226">Attempted to write a start member in an invalid scope.</span></span></exception>
        <exception cref="T:System.Xaml.XamlDuplicateMemberException"><span data-ttu-id="33bf7-227"><paramref name="property" /> задает свойство, которое уже явно задано в области родительского объекта.</span><span class="sxs-lookup"><span data-stu-id="33bf7-227"><paramref name="property" /> specifies a property that is already explicitly set in the parent object scope.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="33bf7-228"><paramref name="property" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="33bf7-228"><paramref name="property" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartObject">
      <MemberSignature Language="C#" Value="public override void WriteStartObject (System.Xaml.XamlType xamlType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteStartObject(class System.Xaml.XamlType xamlType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.WriteStartObject(System.Xaml.XamlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteStartObject(System::Xaml::XamlType ^ xamlType);" />
      <MemberSignature Language="F#" Value="override this.WriteStartObject : System.Xaml.XamlType -&gt; unit" Usage="xamlObjectWriter.WriteStartObject xamlType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xamlType" Type="System.Xaml.XamlType" />
      </Parameters>
      <Docs>
        <param name="xamlType"><span data-ttu-id="33bf7-229">Записываемый тип.</span><span class="sxs-lookup"><span data-stu-id="33bf7-229">The type to write.</span></span> <span data-ttu-id="33bf7-230">Обычно это значение получается из средства чтения XAML.</span><span class="sxs-lookup"><span data-stu-id="33bf7-230">Typically you obtain this value from a XAML reader.</span></span></param>
        <summary><span data-ttu-id="33bf7-231">Записывает узел объекта в текущую область, и задает эту область для области нового объекта.</span><span class="sxs-lookup"><span data-stu-id="33bf7-231">Writes an object node into the current scope, and sets the scope to a new object scope.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Xaml.XamlObjectWriterException"><span data-ttu-id="33bf7-232">Обработка типа <see cref="P:System.Xaml.XamlType.IsUnknown" />, не удается создать объект.</span><span class="sxs-lookup"><span data-stu-id="33bf7-232">Processing an <see cref="P:System.Xaml.XamlType.IsUnknown" /> type and cannot create an object.</span></span>  
  
<span data-ttu-id="33bf7-233">- или -</span><span class="sxs-lookup"><span data-stu-id="33bf7-233">-or-</span></span> 
<span data-ttu-id="33bf7-234">Попытка записи начального объекта в недопустимой области действия.</span><span class="sxs-lookup"><span data-stu-id="33bf7-234">Attempted to write a start object in an invalid scope.</span></span></exception>
        <exception cref="T:System.Xaml.XamlParseException"><span data-ttu-id="33bf7-235">Попытка записи корневого объекта, когда корневой объект уже был предоставлен в настройках.</span><span class="sxs-lookup"><span data-stu-id="33bf7-235">Attempted to write a root object when the root object was already provided in the settings.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="33bf7-236">Свойство <paramref name="xamlType" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="33bf7-236"><paramref name="xamlType" /> is <see langword="null" />.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="33bf7-237">Если текущая область находится внутри коллекции, словаря или массива, новый экземпляр следует добавить в коллекцию, словарь или массив с помощью <see langword="Add" /> метода соответствующего типа.</span><span class="sxs-lookup"><span data-stu-id="33bf7-237">If the current scope is inside a collection, dictionary, or array, the new instance should be added to the collection, dictionary, or array by using the <see langword="Add" /> method of the relevant type.</span></span> <span data-ttu-id="33bf7-238">В противном случае элемент должен быть назначен новому экземпляру.</span><span class="sxs-lookup"><span data-stu-id="33bf7-238">Otherwise, the member should be assigned to the new instance.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="WriteValue">
      <MemberSignature Language="C#" Value="public override void WriteValue (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteValue(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriter.WriteValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteValue (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteValue(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.WriteValue : obj -&gt; unit" Usage="xamlObjectWriter.WriteValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="33bf7-239">Значение для записи.</span><span class="sxs-lookup"><span data-stu-id="33bf7-239">The value to write.</span></span></param>
        <summary><span data-ttu-id="33bf7-240">Выполняет запись значения в область текущего члена.</span><span class="sxs-lookup"><span data-stu-id="33bf7-240">Writes a value to the current member scope.</span></span> <span data-ttu-id="33bf7-241">Если текущая область находится в объекте коллекции, словаря или массива, это значение необходимо добавить в коллекцию, словарь или массив.</span><span class="sxs-lookup"><span data-stu-id="33bf7-241">If the current scope is inside a collection, dictionary, or array object, the value should be added to the collection, dictionary, or array.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Xaml.XamlObjectWriterException"><span data-ttu-id="33bf7-242">Попытка записи значения в недопустимой области действия.</span><span class="sxs-lookup"><span data-stu-id="33bf7-242">Attempted to write a value in an invalid scope.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
