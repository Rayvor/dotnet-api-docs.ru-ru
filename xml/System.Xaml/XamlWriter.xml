<Type Name="XamlWriter" FullName="System.Xaml.XamlWriter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="30b848fe260ec042b21c2f8ca13c8b7634ee2520" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69441257" /></Metadata><TypeSignature Language="C#" Value="public abstract class XamlWriter : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit XamlWriter extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.XamlWriter" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class XamlWriter&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class XamlWriter abstract : IDisposable" />
  <TypeSignature Language="F#" Value="type XamlWriter = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Предоставляет определения реализации по умолчанию и базового класса для средства записи XAML. Это средство записи не является рабочим средством записи XAML по умолчанию; необходимо наследовать классу <see cref="T:System.Xaml.XamlWriter" /> и реализовать все его абстрактные члены или использовать существующий производный класс <see cref="T:System.Xaml.XamlWriter" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Двумя наиболее важными производными классами <xref:System.Xaml.XamlWriter> <xref:System.Xaml.XamlXmlWriter> являются классы и <xref:System.Xaml.XamlObjectWriter> , как описано ниже.  
  
-   <xref:System.Xaml.XamlXmlWriter>обрабатывает набор узлов XAML и создает текстовый XML-файл. Этот класс может использоваться для сериализации или как часть функции инструмента, который работает с представлением XAML в памяти и создает выходные данные XAML-файла.  
  
-   <xref:System.Xaml.XamlObjectWriter>обрабатывает набор узлов XAML и создает граф объектов. Этот класс может использоваться как часть полной или частичной настройки средства синтаксического анализа XAML для технологии.  
  
 <xref:System.Xaml.XamlWriterSettings>класс для параметров, используемых <xref:System.Xaml.XamlWriter>, однако по умолчанию <xref:System.Xaml.XamlWriterSettings> класс не содержит каких-либо конкретных параметров. Базовый конструктор не использует этот класс параметров в качестве аргумента и не выполняет никаких других <xref:System.Xaml.XamlWriter> членов. <xref:System.Xaml.XamlWriter> Вместо этого классы <xref:System.Xaml.XamlObjectWriter>ивключают собственные классы параметров в качестве аргументов конструирования. <xref:System.Xaml.XamlXmlWriter> Эти классы параметров имеют <xref:System.Xaml.XamlXmlWriterSettings> значения <xref:System.Xaml.XamlObjectWriterSettings>и. Классы параметров определяют фактические значения параметров и основываются на <xref:System.Xaml.XamlWriterSettings>, чтобы они могли <xref:System.Xaml.XamlWriterSettings> использовать функцию слияния.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected XamlWriter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlWriter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; XamlWriter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlWriter" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlWriter.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberSignature Language="F#" Value="member this.Close : unit -&gt; unit" Usage="xamlWriter.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Закрывает объект средства записи XAML.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xaml.XamlWriter.Close%2A> В базовой реализации вызов <xref:System.Xaml.XamlWriter.Dispose%2A> вызывает метод с `isDisposing` параметром, как `true`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlWriter.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="xamlWriter.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">Значение <see langword="true" />, если необходимо освободить управляемые ресурсы; в противном случае — значение <see langword="false" />.</param>
        <summary>Освобождает неуправляемые ресурсы, используемые объектом <see cref="T:System.Xaml.XamlWriter" />, а при необходимости освобождает также управляемые ресурсы.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Для получения <xref:System.Xaml.XamlWriter.IsDisposed%2A>  = необходимо вызватьбазовыйкласс.`true`  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDisposed">
      <MemberSignature Language="C#" Value="protected bool IsDisposed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDisposed" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlWriter.IsDisposed" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property IsDisposed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool IsDisposed { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDisposed : bool" Usage="System.Xaml.XamlWriter.IsDisposed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает сведения о том, вызывался ли метод <see cref="M:System.Xaml.XamlWriter.Dispose(System.Boolean)" />.</summary>
        <value>Значение <see langword="true" />, если метод <see cref="M:System.Xaml.XamlWriter.Dispose(System.Boolean)" /> вызван; в противном случае — значение <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SchemaContext">
      <MemberSignature Language="C#" Value="public abstract System.Xaml.XamlSchemaContext SchemaContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlSchemaContext SchemaContext" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlWriter.SchemaContext" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property SchemaContext As XamlSchemaContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Xaml::XamlSchemaContext ^ SchemaContext { System::Xaml::XamlSchemaContext ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SchemaContext : System.Xaml.XamlSchemaContext" Usage="System.Xaml.XamlWriter.SchemaContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlSchemaContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>При реализации в производном классе получает активный контекст схемы XAML.</summary>
        <value>Активный контекст схемы XAML.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlWriter.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>См. раздел <see cref="M:System.IDisposable.Dispose" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEndMember">
      <MemberSignature Language="C#" Value="public abstract void WriteEndMember ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteEndMember() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlWriter.WriteEndMember" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteEndMember ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteEndMember();" />
      <MemberSignature Language="F#" Value="abstract member WriteEndMember : unit -&gt; unit" Usage="xamlWriter.WriteEndMember " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>При реализации в производном классе создает представление узла конечного члена.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEndObject">
      <MemberSignature Language="C#" Value="public abstract void WriteEndObject ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteEndObject() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlWriter.WriteEndObject" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteEndObject ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteEndObject();" />
      <MemberSignature Language="F#" Value="abstract member WriteEndObject : unit -&gt; unit" Usage="xamlWriter.WriteEndObject " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>При реализации в производном классе создает представление узла конечного объекта.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteGetObject">
      <MemberSignature Language="C#" Value="public abstract void WriteGetObject ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteGetObject() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlWriter.WriteGetObject" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteGetObject ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteGetObject();" />
      <MemberSignature Language="F#" Value="abstract member WriteGetObject : unit -&gt; unit" Usage="xamlWriter.WriteGetObject " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>При реализации в производном классе создает объект для случаев, когда этот объект является значением по умолчанию или неявным значением устанавливаемого свойства, а не задается в виде определенного значения объекта во входном наборе узлов XAML.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteNamespace">
      <MemberSignature Language="C#" Value="public abstract void WriteNamespace (System.Xaml.NamespaceDeclaration namespaceDeclaration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteNamespace(class System.Xaml.NamespaceDeclaration namespaceDeclaration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlWriter.WriteNamespace(System.Xaml.NamespaceDeclaration)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteNamespace(System::Xaml::NamespaceDeclaration ^ namespaceDeclaration);" />
      <MemberSignature Language="F#" Value="abstract member WriteNamespace : System.Xaml.NamespaceDeclaration -&gt; unit" Usage="xamlWriter.WriteNamespace namespaceDeclaration" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="namespaceDeclaration" Type="System.Xaml.NamespaceDeclaration" />
      </Parameters>
      <Docs>
        <param name="namespaceDeclaration">Объявление пространства имен для записи.</param>
        <summary>При реализации в производном классе записывает узел объявления пространства имен XAML.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteNode">
      <MemberSignature Language="C#" Value="public void WriteNode (System.Xaml.XamlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteNode(class System.Xaml.XamlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlWriter.WriteNode(System.Xaml.XamlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteNode (reader As XamlReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteNode(System::Xaml::XamlReader ^ reader);" />
      <MemberSignature Language="F#" Value="member this.WriteNode : System.Xaml.XamlReader -&gt; unit" Usage="xamlWriter.WriteNode reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xaml.XamlReader" />
      </Parameters>
      <Docs>
        <param name="reader">Средство чтения, используемое для определения узла.</param>
        <summary>Производит переключение на основе типа узла от средства чтения XAML (<see cref="P:System.Xaml.XamlReader.NodeType" />) и вызывает соответствующий метод <see langword="Write" /> для реализации средства записи.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="notes-for-inheritors"></a>Примечания для наследников  
 Метод не является виртуальным методом, так как он имеет практическую реализацию для <xref:System.Xaml.XamlNodeType> всех существующих значений. <xref:System.Xaml.XamlWriter.WriteNode%2A> На основе вызывает`Write`Виртуальные члены, выделенные для конкретных типов узлов. <xref:System.Xaml.XamlWriter.WriteNode%2A> <xref:System.Xaml.XamlNodeType>  
  
 При наличии расширенного сценария написания XAML, который расширяет концепцию системы типов XAML и потока узлов XAML, чтобы определить новые типы узлов, не используйте <xref:System.Xaml.XamlWriter.WriteNode%2A> в логике вызовы. Вместо этого необходимо предоставить собственную альтернативу логике переключения типов узлов в классе или в виртуальных переопределениях.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="reader" /> — <see langword="null" />.</exception>
        <exception cref="T:System.NotImplementedException">Реализация по умолчанию обнаружила <see cref="T:System.Xaml.XamlNodeType" />, который не входит в перечисление по умолчанию.</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartMember">
      <MemberSignature Language="C#" Value="public abstract void WriteStartMember (System.Xaml.XamlMember xamlMember);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteStartMember(class System.Xaml.XamlMember xamlMember) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlWriter.WriteStartMember(System.Xaml.XamlMember)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteStartMember(System::Xaml::XamlMember ^ xamlMember);" />
      <MemberSignature Language="F#" Value="abstract member WriteStartMember : System.Xaml.XamlMember -&gt; unit" Usage="xamlWriter.WriteStartMember xamlMember" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xamlMember" Type="System.Xaml.XamlMember" />
      </Parameters>
      <Docs>
        <param name="xamlMember">Узел члена для записи.</param>
        <summary>При реализации в производном классе записывает представление узла начального члена.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteStartObject">
      <MemberSignature Language="C#" Value="public abstract void WriteStartObject (System.Xaml.XamlType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteStartObject(class System.Xaml.XamlType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlWriter.WriteStartObject(System.Xaml.XamlType)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteStartObject (type As XamlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteStartObject(System::Xaml::XamlType ^ type);" />
      <MemberSignature Language="F#" Value="abstract member WriteStartObject : System.Xaml.XamlType -&gt; unit" Usage="xamlWriter.WriteStartObject type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Xaml.XamlType" />
      </Parameters>
      <Docs>
        <param name="type">Тип XAML записываемого объекта.</param>
        <summary>При реализации в производном классе записывает представление узла начального объекта.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteValue">
      <MemberSignature Language="C#" Value="public abstract void WriteValue (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteValue(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlWriter.WriteValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteValue (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteValue(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member WriteValue : obj -&gt; unit" Usage="xamlWriter.WriteValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Значение для записи.</param>
        <summary>При реализации в производном классе записывает узел значения.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
