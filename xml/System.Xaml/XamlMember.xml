<Type Name="XamlMember" FullName="System.Xaml.XamlMember">
  <Metadata><Meta Name="ms.openlocfilehash" Value="eca9de4ba3e7db5769488f672b1fa19608582f9b" /><Meta Name="ms.sourcegitcommit" Value="2767b5903996fbd7e2b81eda1114dfc9d0d9db63" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="05/02/2019" /><Meta Name="ms.locfileid" Value="65014795" /></Metadata><TypeSignature Language="C#" Value="public class XamlMember : IEquatable&lt;System.Xaml.XamlMember&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XamlMember extends System.Object implements class System.IEquatable`1&lt;class System.Xaml.XamlMember&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.XamlMember" />
  <TypeSignature Language="VB.NET" Value="Public Class XamlMember&#xA;Implements IEquatable(Of XamlMember)" />
  <TypeSignature Language="C++ CLI" Value="public ref class XamlMember : IEquatable&lt;System::Xaml::XamlMember ^&gt;" />
  <TypeSignature Language="F#" Value="type XamlMember = class&#xA;    interface IEquatable&lt;XamlMember&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Xaml.XamlMember&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="07a40-101">Предоставляет системный идентификатор типа XAML для членов типов XAML.</span><span class="sxs-lookup"><span data-stu-id="07a40-101">Provides the XAML type system identifier for members of XAML types.</span></span> <span data-ttu-id="07a40-102">Идентификатор используется средствами чтения XAML и записи XAML во время обработки узлов членов (когда средство чтения XAML находится на <see cref="F:System.Xaml.XamlNodeType.StartMember" />) а также для общей логики системы типов XAML.</span><span class="sxs-lookup"><span data-stu-id="07a40-102">The identifier is used by XAML readers and XAML writers during processing of member nodes (when the XAML reader is positioned on a <see cref="F:System.Xaml.XamlNodeType.StartMember" />) and also for general XAML type system logic.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07a40-103"><xref:System.Xaml.XamlMember> можно использовать три методологии для возврата сведений о члене XAML: стандартные общие отражения среды CLR (CLR); флаги для API-интерфейсы, использовать оптимизированные для бита ссылки — только для отражения способ вызова внутреннего; или переопределениям виртуального вызова `Lookup*` API, предоставляемые возможности <xref:System.Xaml.XamlMember> подклассы.</span><span class="sxs-lookup"><span data-stu-id="07a40-103"><xref:System.Xaml.XamlMember> can use three methodologies for returning information about a XAML member: standard common language runtime (CLR) reflection; a reference-only reflection technique calling internal APIs that use optimized bit flags; or calling into virtual overrides of the `Lookup*` API that is provided by possible <xref:System.Xaml.XamlMember> subclasses.</span></span> <span data-ttu-id="07a40-104">Для большинства задач API-интерфейсов служб XAML .NET Framework и <xref:System.Xaml.XamlMember> API, используйте контекст схемы XAML по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="07a40-104">For most uses of .NET Framework XAML Services APIs and the <xref:System.Xaml.XamlMember> API, you use the default XAML schema context.</span></span> <span data-ttu-id="07a40-105">Контекст схемы XAML по умолчанию для служб XAML .NET Framework использует для системы типов среды CLR.</span><span class="sxs-lookup"><span data-stu-id="07a40-105">The default XAML schema context for .NET Framework XAML Services uses CLR backing for the type system.</span></span> <span data-ttu-id="07a40-106">Это позволяет XAML модули чтения и записи XAML для работы с любой тип или член, который определен в, или в противном случае для, среда CLR и его методами отражения.</span><span class="sxs-lookup"><span data-stu-id="07a40-106">This enables the XAML readers and XAML writers to work with any type or member that is defined in, or otherwise available to, the CLR and its reflection techniques.</span></span>  
  
## <a name="lookup-apis-and-xamlmember-derived-classes"></a><span data-ttu-id="07a40-107">API-интерфейсы поиска \* и XamlMember производные классы</span><span class="sxs-lookup"><span data-stu-id="07a40-107">Lookup\* APIs and XamlMember Derived Classes</span></span>  
 <span data-ttu-id="07a40-108"><xref:System.Xaml.XamlMember> определяет несколько виртуальных членов, которые производные классы могут переопределить.</span><span class="sxs-lookup"><span data-stu-id="07a40-108"><xref:System.Xaml.XamlMember> defines several virtual members that derived classes might override.</span></span> <span data-ttu-id="07a40-109">Эти члены имеют имена, которые всегда начинаются со строки `Lookup`.</span><span class="sxs-lookup"><span data-stu-id="07a40-109">These members have names that always start with the string `Lookup`.</span></span> <span data-ttu-id="07a40-110">В оставшейся части API имя затем ссылки на свойство, которое влияет виртуальный метод.</span><span class="sxs-lookup"><span data-stu-id="07a40-110">The remainder of the API name then references the property that the virtual method influences.</span></span> <span data-ttu-id="07a40-111">Например <xref:System.Xaml.XamlMember> производный класс может переопределить <xref:System.Xaml.XamlMember.LookupTargetType%2A> влияет на какие свойства определяемых базы <xref:System.Xaml.XamlMember.TargetType%2A> возвращает в производном классе.</span><span class="sxs-lookup"><span data-stu-id="07a40-111">For example, a <xref:System.Xaml.XamlMember> derived class might override <xref:System.Xaml.XamlMember.LookupTargetType%2A> to influence what the base-defined property <xref:System.Xaml.XamlMember.TargetType%2A> returns in a derived class.</span></span> <span data-ttu-id="07a40-112">Можно предсказать возвращаемые значения таких свойств в <xref:System.Xaml.XamlMember> или существующих производных классов см. в документации по соответствующему `Lookup*` методы.</span><span class="sxs-lookup"><span data-stu-id="07a40-112">You can predict return values for such properties in <xref:System.Xaml.XamlMember> or existing derived classes by reading the documentation for the relevant `Lookup*` methods.</span></span>  
  
 <span data-ttu-id="07a40-113">Цель `Lookup*` методы — предоставить метод расширения XAML тип системы, включающий <xref:System.Xaml.XamlMember> базового класса.</span><span class="sxs-lookup"><span data-stu-id="07a40-113">The purpose of the `Lookup*` methods is to provide a XAML type system extension technique that incorporates the <xref:System.Xaml.XamlMember> base class.</span></span> <span data-ttu-id="07a40-114">Путем наследования от <xref:System.Xaml.XamlMember> и переопределение `Lookup` виртуальные члены можно определить концепцию члена XAML для схемы XAML в системе типов XAML без привязки к особенностям системой резервных типов или технологии.</span><span class="sxs-lookup"><span data-stu-id="07a40-114">By deriving from <xref:System.Xaml.XamlMember> and overriding the `Lookup` virtual members, you can define the concept of a XAML member for a XAML schema in a XAML type system without being tied to the specifics of a backing type system or technology.</span></span> <span data-ttu-id="07a40-115">Можно также использовать предоставленный контекст схемы XAML в этой схеме и по-прежнему возвращать нужные результаты.</span><span class="sxs-lookup"><span data-stu-id="07a40-115">You can also use a provided XAML schema context under this scheme and still return the results you want.</span></span>  
  
 <span data-ttu-id="07a40-116">Например, рассмотрим <xref:System.Xaml.XamlMember> свойство <xref:System.Xaml.XamlMember.IsWritePublic%2A>.</span><span class="sxs-lookup"><span data-stu-id="07a40-116">As an example, consider the <xref:System.Xaml.XamlMember> property <xref:System.Xaml.XamlMember.IsWritePublic%2A>.</span></span> <span data-ttu-id="07a40-117">Это свойство информирует вызывающие объекты этой операции, такие как с помощью <xref:System.Xaml.XamlWriter> для сериализации можно записать значение для этого элемента в целевом объекте.</span><span class="sxs-lookup"><span data-stu-id="07a40-117">This property informs callers that operations such as using a <xref:System.Xaml.XamlWriter> for serialization can write a value for this member on a target object.</span></span> <span data-ttu-id="07a40-118">В реализации по умолчанию выполняется определение, является ли элемент для записи, используя методы отражения для резервный CLR <xref:System.Type> и его членах ( <xref:System.Reflection.MemberInfo>).</span><span class="sxs-lookup"><span data-stu-id="07a40-118">In the default implementation, the determination of whether the member is writable is made by using reflection techniques against the backing CLR <xref:System.Type> and its members (the <xref:System.Reflection.MemberInfo>).</span></span> <span data-ttu-id="07a40-119">Таким образом по умолчанию система типов XAML зависит от системы типов среды CLR.</span><span class="sxs-lookup"><span data-stu-id="07a40-119">Therefore, by default, the XAML type system depends on the CLR type system.</span></span> <span data-ttu-id="07a40-120">Тем не менее, можно удалить эту зависимость для XAML тип системы создания отчетов из <xref:System.Xaml.XamlMember.IsWritePublic%2A> путем переопределения API <xref:System.Xaml.XamlMember.LookupIsWritePublic%2A>.</span><span class="sxs-lookup"><span data-stu-id="07a40-120">However, you can remove this dependency for your XAML type system reporting of <xref:System.Xaml.XamlMember.IsWritePublic%2A> by overriding the API <xref:System.Xaml.XamlMember.LookupIsWritePublic%2A>.</span></span> <span data-ttu-id="07a40-121">В рамках переопределения, можно использовать другие определения, например метаданные, относящиеся к технологии, главная таблица подстановки, оптимизированный для основного словаря XAML или ряд других стратегий для определения ли член XAML доступен для записи в вашей Словарь XAML.</span><span class="sxs-lookup"><span data-stu-id="07a40-121">Within your override, you can use other determinations, such as metadata that is specific to your technology, a master lookup table that is optimized for a fixed XAML vocabulary, or a variety of other strategies for determining whether a XAML member is writable in your XAML vocabulary.</span></span>  
  
## <a name="constructing-xamlmember-without-xaml-schema-context"></a><span data-ttu-id="07a40-122">Создав XamlMember без контекста схемы XAML</span><span class="sxs-lookup"><span data-stu-id="07a40-122">Constructing XamlMember Without XAML Schema Context</span></span>  
 <span data-ttu-id="07a40-123">Большинство конструкторов <xref:System.Xaml.XamlMember> требуют <xref:System.Xaml.XamlSchemaContext> как часть их инициализации.</span><span class="sxs-lookup"><span data-stu-id="07a40-123">Most constructors of <xref:System.Xaml.XamlMember> require a <xref:System.Xaml.XamlSchemaContext> as part of their initialization.</span></span> <span data-ttu-id="07a40-124"><xref:System.Xaml.XamlSchemaContext> Также необходим для многих внутренних <xref:System.Xaml.XamlSchemaContext> операций, таких как получение сведения, которые пересылаются из резервного типа.</span><span class="sxs-lookup"><span data-stu-id="07a40-124">The <xref:System.Xaml.XamlSchemaContext> is also necessary for many internal <xref:System.Xaml.XamlSchemaContext> operations, such as obtaining information that is being forwarded from the backing type.</span></span> <span data-ttu-id="07a40-125">При работе с <xref:System.Xaml.XamlMember> API, как правило, достаточно <xref:System.Xaml.XamlSchemaContext> , такие как доступные из окружающей конструкции <xref:System.Xaml.XamlWriter>.</span><span class="sxs-lookup"><span data-stu-id="07a40-125">When you are working with the <xref:System.Xaml.XamlMember> API, you typically have a <xref:System.Xaml.XamlSchemaContext> that is available from a surrounding construct such as a <xref:System.Xaml.XamlWriter>.</span></span> <span data-ttu-id="07a40-126">В этом случае вы можете передать <xref:System.Xaml.XamlSchemaContext> ссылаются через на любые вызовы системы типов XAML, которые требуется контекст схемы XAML.</span><span class="sxs-lookup"><span data-stu-id="07a40-126">In this case, you can pass the <xref:System.Xaml.XamlSchemaContext> reference through to all XAML type system calls that require a XAML schema context.</span></span>  
  
 <span data-ttu-id="07a40-127">Один определенный конструктор <xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29>, не требует <xref:System.Xaml.XamlSchemaContext>.</span><span class="sxs-lookup"><span data-stu-id="07a40-127">One specific constructor, <xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29>, does not require a <xref:System.Xaml.XamlSchemaContext>.</span></span> <span data-ttu-id="07a40-128">Тем не менее <xref:System.Xaml.XamlMember> , созданный с <xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29> сигнатура возвращает `true` для <xref:System.Xaml.XamlMember.IsUnknown%2A>.</span><span class="sxs-lookup"><span data-stu-id="07a40-128">However, a <xref:System.Xaml.XamlMember> that is constructed with the <xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29> signature returns `true` for <xref:System.Xaml.XamlMember.IsUnknown%2A>.</span></span>  
  
 <span data-ttu-id="07a40-129">Для пути загрузки, который включает в себя <xref:System.Xaml.XamlObjectWriter>, такой элемент не удается записать в граф объекта.</span><span class="sxs-lookup"><span data-stu-id="07a40-129">For a load path that involves <xref:System.Xaml.XamlObjectWriter>, such a member cannot be written into an object graph.</span></span> <span data-ttu-id="07a40-130">С помощью реализации служб XAML .NET Framework, <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=nameWithType> вызова вызывает <xref:System.Xaml.XamlObjectWriterException> при соответствующие <xref:System.Xaml.XamlMember> отчеты `true` для <xref:System.Xaml.XamlMember.IsUnknown%2A>.</span><span class="sxs-lookup"><span data-stu-id="07a40-130">Using the .NET Framework XAML services implementation, the <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=nameWithType> call throws a <xref:System.Xaml.XamlObjectWriterException> when the relevant <xref:System.Xaml.XamlMember> reports `true` for <xref:System.Xaml.XamlMember.IsUnknown%2A>.</span></span>  
  
 <span data-ttu-id="07a40-131">Не следует создавать <xref:System.Xaml.XamlMember> , имеет значение `true` для <xref:System.Xaml.XamlMember.IsUnknown%2A> Если ваша реализация может обрабатывать исключения из <xref:System.Xaml.XamlObjectWriter>, или у вас есть другие способы настройки <xref:System.Xaml.XamlObjectWriter> поведение.</span><span class="sxs-lookup"><span data-stu-id="07a40-131">You should not construct a <xref:System.Xaml.XamlMember> that has a value of `true` for <xref:System.Xaml.XamlMember.IsUnknown%2A> unless your implementation can handle the exceptions from <xref:System.Xaml.XamlObjectWriter>, or you have other ways to adjust the <xref:System.Xaml.XamlObjectWriter> behavior.</span></span> <span data-ttu-id="07a40-132">Например один или несколько из следующих может быть верно для реализации:</span><span class="sxs-lookup"><span data-stu-id="07a40-132">For example, one or more of the  following might be true of your implementation:</span></span>  
  
-   <span data-ttu-id="07a40-133">Контекст схемы XAML доступен в более поздней версии.</span><span class="sxs-lookup"><span data-stu-id="07a40-133">The XAML schema context is available later.</span></span>  
  
-   <span data-ttu-id="07a40-134">Можно использовать шаблон вызова члена.</span><span class="sxs-lookup"><span data-stu-id="07a40-134">You use a member invoker pattern.</span></span>  
  
-   <span data-ttu-id="07a40-135">Вы намеренно переопределить <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=nameWithType> в пользовательский модуль записи XAML.</span><span class="sxs-lookup"><span data-stu-id="07a40-135">You deliberately override <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=nameWithType> in a custom XAML writer.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xaml.XamlType" />
    <altmember cref="T:System.Xaml.XamlDirective" />
    <altmember cref="T:System.Xaml.XamlObjectWriter" />
    <related type="Article" href="https://msdn.microsoft.com/library/7c11abec-1075-474c-9d9b-778e5dab21c3"><span data-ttu-id="07a40-136">Общее представление о понятиях и структурах потока узлов XAML</span><span class="sxs-lookup"><span data-stu-id="07a40-136">Understanding XAML Node Stream Structures and Concepts</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="07a40-137">Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlMember" />.</span><span class="sxs-lookup"><span data-stu-id="07a40-137">Initializes a new instance of the <see cref="T:System.Xaml.XamlMember" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlMember (System.Reflection.EventInfo eventInfo, System.Xaml.XamlSchemaContext schemaContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Reflection.EventInfo eventInfo, class System.Xaml.XamlSchemaContext schemaContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.#ctor(System.Reflection.EventInfo,System.Xaml.XamlSchemaContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlMember(System::Reflection::EventInfo ^ eventInfo, System::Xaml::XamlSchemaContext ^ schemaContext);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlMember : System.Reflection.EventInfo * System.Xaml.XamlSchemaContext -&gt; System.Xaml.XamlMember" Usage="new System.Xaml.XamlMember (eventInfo, schemaContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="eventInfo" Type="System.Reflection.EventInfo" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
      </Parameters>
      <Docs>
        <param name="eventInfo"><span data-ttu-id="07a40-138">Системы типов среды CLR <see cref="T:System.Reflection.EventInfo" /> , представляющий член события.</span><span class="sxs-lookup"><span data-stu-id="07a40-138">The CLR type system <see cref="T:System.Reflection.EventInfo" /> that represents the event member.</span></span></param>
        <param name="schemaContext"><span data-ttu-id="07a40-139"><see cref="T:System.Xaml.XamlSchemaContext" /> Контекста, определяющий член.</span><span class="sxs-lookup"><span data-stu-id="07a40-139">The <see cref="T:System.Xaml.XamlSchemaContext" /> context that qualifies the member.</span></span></param>
        <summary><span data-ttu-id="07a40-140">Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlMember" /> класса системы типов среды CLR <see cref="T:System.Reflection.EventInfo" /> и <see cref="T:System.Xaml.XamlSchemaContext" />.</span><span class="sxs-lookup"><span data-stu-id="07a40-140">Initializes a new instance of the <see cref="T:System.Xaml.XamlMember" /> class using CLR type system <see cref="T:System.Reflection.EventInfo" /> and a <see cref="T:System.Xaml.XamlSchemaContext" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07a40-141">Этот конструктор используется, если элемент представляет событие (свойство точки подключения обработчика событий).</span><span class="sxs-lookup"><span data-stu-id="07a40-141">Use this constructor if the member represents an event (event handler connection-point property).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlMember (System.Reflection.PropertyInfo propertyInfo, System.Xaml.XamlSchemaContext schemaContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Reflection.PropertyInfo propertyInfo, class System.Xaml.XamlSchemaContext schemaContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.#ctor(System.Reflection.PropertyInfo,System.Xaml.XamlSchemaContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlMember(System::Reflection::PropertyInfo ^ propertyInfo, System::Xaml::XamlSchemaContext ^ schemaContext);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlMember : System.Reflection.PropertyInfo * System.Xaml.XamlSchemaContext -&gt; System.Xaml.XamlMember" Usage="new System.Xaml.XamlMember (propertyInfo, schemaContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="propertyInfo" Type="System.Reflection.PropertyInfo" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
      </Parameters>
      <Docs>
        <param name="propertyInfo"><span data-ttu-id="07a40-142">Системы типов среды CLR <see cref="T:System.Reflection.PropertyInfo" /> , представляющий член свойства.</span><span class="sxs-lookup"><span data-stu-id="07a40-142">The CLR type system <see cref="T:System.Reflection.PropertyInfo" /> that represents the property member.</span></span></param>
        <param name="schemaContext"><span data-ttu-id="07a40-143"><see cref="T:System.Xaml.XamlSchemaContext" /> Контекста, определяющий член.</span><span class="sxs-lookup"><span data-stu-id="07a40-143">The <see cref="T:System.Xaml.XamlSchemaContext" /> context that qualifies the member.</span></span></param>
        <summary><span data-ttu-id="07a40-144">Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlMember" /> класса системы типов среды CLR <see cref="T:System.Reflection.PropertyInfo" /> и <see cref="T:System.Xaml.XamlSchemaContext" />.</span><span class="sxs-lookup"><span data-stu-id="07a40-144">Initializes a new instance of the <see cref="T:System.Xaml.XamlMember" /> class using CLR type system <see cref="T:System.Reflection.PropertyInfo" /> and a <see cref="T:System.Xaml.XamlSchemaContext" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07a40-145">Этот конструктор используется в том случае, если член представляет свойство (и специально не является соединением обработчика событий).</span><span class="sxs-lookup"><span data-stu-id="07a40-145">Use this constructor if the member represents a property (and specifically is not an event handler connection).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlMember (System.Reflection.EventInfo eventInfo, System.Xaml.XamlSchemaContext schemaContext, System.Xaml.Schema.XamlMemberInvoker invoker);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Reflection.EventInfo eventInfo, class System.Xaml.XamlSchemaContext schemaContext, class System.Xaml.Schema.XamlMemberInvoker invoker) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.#ctor(System.Reflection.EventInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlMember(System::Reflection::EventInfo ^ eventInfo, System::Xaml::XamlSchemaContext ^ schemaContext, System::Xaml::Schema::XamlMemberInvoker ^ invoker);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlMember : System.Reflection.EventInfo * System.Xaml.XamlSchemaContext * System.Xaml.Schema.XamlMemberInvoker -&gt; System.Xaml.XamlMember" Usage="new System.Xaml.XamlMember (eventInfo, schemaContext, invoker)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="eventInfo" Type="System.Reflection.EventInfo" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
        <Parameter Name="invoker" Type="System.Xaml.Schema.XamlMemberInvoker" />
      </Parameters>
      <Docs>
        <param name="eventInfo"><span data-ttu-id="07a40-146">Системы типов среды CLR <see cref="T:System.Reflection.EventInfo" /> , представляющий член события.</span><span class="sxs-lookup"><span data-stu-id="07a40-146">The CLR type system <see cref="T:System.Reflection.EventInfo" /> that represents the event member.</span></span></param>
        <param name="schemaContext"><span data-ttu-id="07a40-147"><see cref="T:System.Xaml.XamlSchemaContext" /> Контекста, определяющий член.</span><span class="sxs-lookup"><span data-stu-id="07a40-147">The <see cref="T:System.Xaml.XamlSchemaContext" /> context that qualifies the member.</span></span></param>
        <param name="invoker"><span data-ttu-id="07a40-148"><see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> Реализация, которая обрабатывает отражения среды выполнения вызывает от <see cref="T:System.Xaml.XamlMember" />.</span><span class="sxs-lookup"><span data-stu-id="07a40-148">The <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> implementation that handles run-time reflection calls against the <see cref="T:System.Xaml.XamlMember" />.</span></span></param>
        <summary><span data-ttu-id="07a40-149">Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlMember" /> класса системы типов среды CLR <see cref="T:System.Reflection.EventInfo" /> и <see cref="T:System.Xaml.XamlSchemaContext" />, в том числе <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> сведения.</span><span class="sxs-lookup"><span data-stu-id="07a40-149">Initializes a new instance of the <see cref="T:System.Xaml.XamlMember" /> class using CLR type system <see cref="T:System.Reflection.EventInfo" /> and a <see cref="T:System.Xaml.XamlSchemaContext" />, including <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> information.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07a40-150">Этот конструктор используется, если элемент представляет событие (или свойство точки подключения обработчика событий).</span><span class="sxs-lookup"><span data-stu-id="07a40-150">Use this constructor if the member represents an event (or an event handler connection-point property).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlMember (System.Reflection.PropertyInfo propertyInfo, System.Xaml.XamlSchemaContext schemaContext, System.Xaml.Schema.XamlMemberInvoker invoker);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Reflection.PropertyInfo propertyInfo, class System.Xaml.XamlSchemaContext schemaContext, class System.Xaml.Schema.XamlMemberInvoker invoker) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.#ctor(System.Reflection.PropertyInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlMember(System::Reflection::PropertyInfo ^ propertyInfo, System::Xaml::XamlSchemaContext ^ schemaContext, System::Xaml::Schema::XamlMemberInvoker ^ invoker);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlMember : System.Reflection.PropertyInfo * System.Xaml.XamlSchemaContext * System.Xaml.Schema.XamlMemberInvoker -&gt; System.Xaml.XamlMember" Usage="new System.Xaml.XamlMember (propertyInfo, schemaContext, invoker)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="propertyInfo" Type="System.Reflection.PropertyInfo" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
        <Parameter Name="invoker" Type="System.Xaml.Schema.XamlMemberInvoker" />
      </Parameters>
      <Docs>
        <param name="propertyInfo"><span data-ttu-id="07a40-151">Системы типов среды CLR <see cref="T:System.Reflection.PropertyInfo" /> , представляющий член свойства.</span><span class="sxs-lookup"><span data-stu-id="07a40-151">The CLR type system <see cref="T:System.Reflection.PropertyInfo" /> that represents the property member.</span></span></param>
        <param name="schemaContext"><span data-ttu-id="07a40-152"><see cref="T:System.Xaml.XamlSchemaContext" /> Контекста, определяющий член.</span><span class="sxs-lookup"><span data-stu-id="07a40-152">The <see cref="T:System.Xaml.XamlSchemaContext" /> context that qualifies the member.</span></span></param>
        <param name="invoker"><span data-ttu-id="07a40-153"><see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> Реализация, которая обрабатывает вызов среды выполнения вызывает от <see cref="T:System.Xaml.XamlMember" />.</span><span class="sxs-lookup"><span data-stu-id="07a40-153">The <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> implementation that handles run-time invocation calls against the <see cref="T:System.Xaml.XamlMember" />.</span></span></param>
        <summary><span data-ttu-id="07a40-154">Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlMember" /> класса с помощью отражения <see cref="T:System.Reflection.PropertyInfo" /> и <see cref="T:System.Xaml.XamlSchemaContext" />, в том числе <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> сведения.</span><span class="sxs-lookup"><span data-stu-id="07a40-154">Initializes a new instance of the <see cref="T:System.Xaml.XamlMember" /> class using reflection <see cref="T:System.Reflection.PropertyInfo" /> and a <see cref="T:System.Xaml.XamlSchemaContext" />, including <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> information.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07a40-155">Этот конструктор используется только в том случае, если элемент представляет свойство, и если он не является соединением обработчика событий.</span><span class="sxs-lookup"><span data-stu-id="07a40-155">Use this constructor only if the member represents a property and if it is not an event handler connection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlMember (string attachableEventName, System.Reflection.MethodInfo adder, System.Xaml.XamlSchemaContext schemaContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string attachableEventName, class System.Reflection.MethodInfo adder, class System.Xaml.XamlSchemaContext schemaContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (attachableEventName As String, adder As MethodInfo, schemaContext As XamlSchemaContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlMember(System::String ^ attachableEventName, System::Reflection::MethodInfo ^ adder, System::Xaml::XamlSchemaContext ^ schemaContext);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlMember : string * System.Reflection.MethodInfo * System.Xaml.XamlSchemaContext -&gt; System.Xaml.XamlMember" Usage="new System.Xaml.XamlMember (attachableEventName, adder, schemaContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="attachableEventName" Type="System.String" />
        <Parameter Name="adder" Type="System.Reflection.MethodInfo" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
      </Parameters>
      <Docs>
        <param name="attachableEventName"><span data-ttu-id="07a40-156">Строковое имя присоединяемого события.</span><span class="sxs-lookup"><span data-stu-id="07a40-156">The string name of the attachable event.</span></span></param>
        <param name="adder"><span data-ttu-id="07a40-157">Системы типов среды CLR <see cref="T:System.Reflection.MethodInfo" /> обработчика <see langword="Add" /> метод присоединяемого члена в резервном реализации.</span><span class="sxs-lookup"><span data-stu-id="07a40-157">The CLR type system <see cref="T:System.Reflection.MethodInfo" /> for the handler <see langword="Add" /> method of the attachable member's backing implementation.</span></span></param>
        <param name="schemaContext"><span data-ttu-id="07a40-158"><see cref="T:System.Xaml.XamlSchemaContext" /> Контекста, определяющий член.</span><span class="sxs-lookup"><span data-stu-id="07a40-158">The <see cref="T:System.Xaml.XamlSchemaContext" /> context that qualifies the member.</span></span></param>
        <summary><span data-ttu-id="07a40-159">Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlMember" /> класса для <see cref="T:System.Xaml.XamlMember" /> , представляющего присоединяемое событие.</span><span class="sxs-lookup"><span data-stu-id="07a40-159">Initializes a new instance of the <see cref="T:System.Xaml.XamlMember" /> class for a <see cref="T:System.Xaml.XamlMember" /> that represents an attachable event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07a40-160">Этот конструктор используется, если элемент представляет элемент вложенного события.</span><span class="sxs-lookup"><span data-stu-id="07a40-160">Use this constructor if the member represents an attachable event member.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlMember (string name, System.Xaml.XamlType declaringType, bool isAttachable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, class System.Xaml.XamlType declaringType, bool isAttachable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.#ctor(System.String,System.Xaml.XamlType,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, declaringType As XamlType, isAttachable As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlMember(System::String ^ name, System::Xaml::XamlType ^ declaringType, bool isAttachable);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlMember : string * System.Xaml.XamlType * bool -&gt; System.Xaml.XamlMember" Usage="new System.Xaml.XamlMember (name, declaringType, isAttachable)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="declaringType" Type="System.Xaml.XamlType" />
        <Parameter Name="isAttachable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="07a40-161">Строковое имя члена.</span><span class="sxs-lookup"><span data-stu-id="07a40-161">The string name of the member.</span></span></param>
        <param name="declaringType"><span data-ttu-id="07a40-162"><see cref="T:System.Xaml.XamlType" /> Сведения для объявляющего типа.</span><span class="sxs-lookup"><span data-stu-id="07a40-162">The <see cref="T:System.Xaml.XamlType" /> information for the declaring type.</span></span></param>
        <param name="isAttachable"><span data-ttu-id="07a40-163"><see langword="true" /> Чтобы указать, что член может быть присоединен; в противном случае <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="07a40-163"><see langword="true" /> to indicate that the member is attachable; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="07a40-164">Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlMember" /> класса, используя строковое имя и объявление <see cref="T:System.Xaml.XamlType" /> сведения.</span><span class="sxs-lookup"><span data-stu-id="07a40-164">Initializes a new instance of the <see cref="T:System.Xaml.XamlMember" /> class using a string name and declaring <see cref="T:System.Xaml.XamlType" /> information.</span></span> <span data-ttu-id="07a40-165">Объект <see cref="T:System.Xaml.XamlMember" />, созданный с данной сигнатурой, имеет значительные ограничения.</span><span class="sxs-lookup"><span data-stu-id="07a40-165">A <see cref="T:System.Xaml.XamlMember" /> that is constructed with this signature has significant limitations.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07a40-166">Объект <xref:System.Xaml.XamlMember> , созданный с <xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29> сигнатура возвращает `true` для <xref:System.Xaml.XamlMember.IsUnknown%2A>.</span><span class="sxs-lookup"><span data-stu-id="07a40-166">A <xref:System.Xaml.XamlMember> that is constructed with the <xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29> signature returns `true` for <xref:System.Xaml.XamlMember.IsUnknown%2A>.</span></span>  
  
 <span data-ttu-id="07a40-167">Для пути загрузки, который включает в себя <xref:System.Xaml.XamlObjectWriter>, такой элемент не удается записать в граф объекта.</span><span class="sxs-lookup"><span data-stu-id="07a40-167">For a load path that involves <xref:System.Xaml.XamlObjectWriter>, such a member cannot be written into an object graph.</span></span> <span data-ttu-id="07a40-168">С помощью реализации служб XAML .NET Framework, <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=nameWithType> вызова вызывает <xref:System.Xaml.XamlObjectWriterException> при соответствующие <xref:System.Xaml.XamlMember> отчеты `true` для <xref:System.Xaml.XamlMember.IsUnknown%2A>.</span><span class="sxs-lookup"><span data-stu-id="07a40-168">Using the .NET Framework XAML Services implementation, the <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=nameWithType> call throws a <xref:System.Xaml.XamlObjectWriterException> when the relevant <xref:System.Xaml.XamlMember> reports `true` for <xref:System.Xaml.XamlMember.IsUnknown%2A>.</span></span>  
  
 <span data-ttu-id="07a40-169">Не следует создавать <xref:System.Xaml.XamlMember> с <xref:System.Xaml.XamlMember.IsUnknown%2A> `true` Если ваша реализация может обрабатывать исключения из <xref:System.Xaml.XamlObjectWriter>, или у вас есть другие способы настройки <xref:System.Xaml.XamlObjectWriter> поведение.</span><span class="sxs-lookup"><span data-stu-id="07a40-169">You should not construct a <xref:System.Xaml.XamlMember> with <xref:System.Xaml.XamlMember.IsUnknown%2A>`true` unless your implementation can handle the exceptions from <xref:System.Xaml.XamlObjectWriter>, or you have other ways to adjust the <xref:System.Xaml.XamlObjectWriter> behavior.</span></span> <span data-ttu-id="07a40-170">Например один или несколько из следующих может быть верно для реализации:</span><span class="sxs-lookup"><span data-stu-id="07a40-170">For example, one or more of the following might be true of your implementation:</span></span>  
  
-   <span data-ttu-id="07a40-171">Контекст схемы XAML доступен в более поздней версии.</span><span class="sxs-lookup"><span data-stu-id="07a40-171">The XAML schema context is available later.</span></span>  
  
-   <span data-ttu-id="07a40-172">Можно использовать шаблон вызова члена.</span><span class="sxs-lookup"><span data-stu-id="07a40-172">You use a member invoker pattern.</span></span>  
  
-   <span data-ttu-id="07a40-173">Вы намеренно переопределить <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=nameWithType> в пользовательский модуль записи XAML.</span><span class="sxs-lookup"><span data-stu-id="07a40-173">You deliberately override <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=nameWithType> in a custom XAML writer.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="07a40-174">Параметр <paramref name="name" /> или <paramref name="declaringType" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="07a40-174"><paramref name="name" /> or <paramref name="declaringType" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlMember (string attachablePropertyName, System.Reflection.MethodInfo getter, System.Reflection.MethodInfo setter, System.Xaml.XamlSchemaContext schemaContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string attachablePropertyName, class System.Reflection.MethodInfo getter, class System.Reflection.MethodInfo setter, class System.Xaml.XamlSchemaContext schemaContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (attachablePropertyName As String, getter As MethodInfo, setter As MethodInfo, schemaContext As XamlSchemaContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlMember(System::String ^ attachablePropertyName, System::Reflection::MethodInfo ^ getter, System::Reflection::MethodInfo ^ setter, System::Xaml::XamlSchemaContext ^ schemaContext);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlMember : string * System.Reflection.MethodInfo * System.Reflection.MethodInfo * System.Xaml.XamlSchemaContext -&gt; System.Xaml.XamlMember" Usage="new System.Xaml.XamlMember (attachablePropertyName, getter, setter, schemaContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="attachablePropertyName" Type="System.String" />
        <Parameter Name="getter" Type="System.Reflection.MethodInfo" />
        <Parameter Name="setter" Type="System.Reflection.MethodInfo" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
      </Parameters>
      <Docs>
        <param name="attachablePropertyName"><span data-ttu-id="07a40-175">Строковое имя присоединяемого свойства.</span><span class="sxs-lookup"><span data-stu-id="07a40-175">The string name of the attachable property.</span></span></param>
        <param name="getter"><span data-ttu-id="07a40-176">Системы типов среды CLR <see cref="T:System.Reflection.MethodInfo" /> для <see langword="get" /> доступа присоединяемого члена в резервном реализации.</span><span class="sxs-lookup"><span data-stu-id="07a40-176">The CLR type system <see cref="T:System.Reflection.MethodInfo" /> for the <see langword="get" /> accessor of the attachable member's backing implementation.</span></span></param>
        <param name="setter"><span data-ttu-id="07a40-177">Системы типов среды CLR <see cref="T:System.Reflection.MethodInfo" /> для <see langword="set" /> доступа присоединяемого члена в резервном реализации.</span><span class="sxs-lookup"><span data-stu-id="07a40-177">The CLR type system <see cref="T:System.Reflection.MethodInfo" /> for the <see langword="set" /> accessor of the attachable member's backing implementation.</span></span></param>
        <param name="schemaContext"><span data-ttu-id="07a40-178"><see cref="T:System.Xaml.XamlSchemaContext" /> Контекста, определяющий член.</span><span class="sxs-lookup"><span data-stu-id="07a40-178">The <see cref="T:System.Xaml.XamlSchemaContext" /> context that qualifies the member.</span></span></param>
        <summary><span data-ttu-id="07a40-179">Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlMember" /> класса для <see cref="T:System.Xaml.XamlMember" /> , представляющего присоединяемое свойство.</span><span class="sxs-lookup"><span data-stu-id="07a40-179">Initializes a new instance of the <see cref="T:System.Xaml.XamlMember" /> class for a <see cref="T:System.Xaml.XamlMember" /> that represents an attachable property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07a40-180">Этот конструктор используется, если элемент представляет присоединяемое свойство.</span><span class="sxs-lookup"><span data-stu-id="07a40-180">Use this constructor if the member represents an attachable property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlMember (string attachableEventName, System.Reflection.MethodInfo adder, System.Xaml.XamlSchemaContext schemaContext, System.Xaml.Schema.XamlMemberInvoker invoker);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string attachableEventName, class System.Reflection.MethodInfo adder, class System.Xaml.XamlSchemaContext schemaContext, class System.Xaml.Schema.XamlMemberInvoker invoker) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (attachableEventName As String, adder As MethodInfo, schemaContext As XamlSchemaContext, invoker As XamlMemberInvoker)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlMember(System::String ^ attachableEventName, System::Reflection::MethodInfo ^ adder, System::Xaml::XamlSchemaContext ^ schemaContext, System::Xaml::Schema::XamlMemberInvoker ^ invoker);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlMember : string * System.Reflection.MethodInfo * System.Xaml.XamlSchemaContext * System.Xaml.Schema.XamlMemberInvoker -&gt; System.Xaml.XamlMember" Usage="new System.Xaml.XamlMember (attachableEventName, adder, schemaContext, invoker)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="attachableEventName" Type="System.String" />
        <Parameter Name="adder" Type="System.Reflection.MethodInfo" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
        <Parameter Name="invoker" Type="System.Xaml.Schema.XamlMemberInvoker" />
      </Parameters>
      <Docs>
        <param name="attachableEventName"><span data-ttu-id="07a40-181">Строковое имя присоединяемого события.</span><span class="sxs-lookup"><span data-stu-id="07a40-181">The string name of the attachable event.</span></span></param>
        <param name="adder"><span data-ttu-id="07a40-182">Системы типов среды CLR <see cref="T:System.Reflection.MethodInfo" /> обработчика <see langword="Add" /> метод присоединяемого члена в резервном реализации.</span><span class="sxs-lookup"><span data-stu-id="07a40-182">The CLR type system <see cref="T:System.Reflection.MethodInfo" /> for the handler <see langword="Add" /> method of the attachable member's backing implementation.</span></span></param>
        <param name="schemaContext"><span data-ttu-id="07a40-183"><see cref="T:System.Xaml.XamlSchemaContext" /> Контекста, определяющий член.</span><span class="sxs-lookup"><span data-stu-id="07a40-183">The <see cref="T:System.Xaml.XamlSchemaContext" /> context that qualifies the member.</span></span></param>
        <param name="invoker"><span data-ttu-id="07a40-184"><see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> Реализация, которая обрабатывает вызов среды выполнения вызывает от <see cref="T:System.Xaml.XamlMember" />.</span><span class="sxs-lookup"><span data-stu-id="07a40-184">The <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> implementation that handles run-time invocation calls against the <see cref="T:System.Xaml.XamlMember" />.</span></span></param>
        <summary><span data-ttu-id="07a40-185">Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlMember" /> класса для <see cref="T:System.Xaml.XamlMember" /> , представляющего присоединяемое событие, включая <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> сведения.</span><span class="sxs-lookup"><span data-stu-id="07a40-185">Initializes a new instance of the <see cref="T:System.Xaml.XamlMember" /> class for a <see cref="T:System.Xaml.XamlMember" /> that represents an attachable event, including <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> information.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07a40-186">Этот конструктор используется, если элемент представляет элемент вложенного события.</span><span class="sxs-lookup"><span data-stu-id="07a40-186">Use this constructor if the member represents an attachable event member.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlMember (string attachablePropertyName, System.Reflection.MethodInfo getter, System.Reflection.MethodInfo setter, System.Xaml.XamlSchemaContext schemaContext, System.Xaml.Schema.XamlMemberInvoker invoker);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string attachablePropertyName, class System.Reflection.MethodInfo getter, class System.Reflection.MethodInfo setter, class System.Xaml.XamlSchemaContext schemaContext, class System.Xaml.Schema.XamlMemberInvoker invoker) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (attachablePropertyName As String, getter As MethodInfo, setter As MethodInfo, schemaContext As XamlSchemaContext, invoker As XamlMemberInvoker)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlMember(System::String ^ attachablePropertyName, System::Reflection::MethodInfo ^ getter, System::Reflection::MethodInfo ^ setter, System::Xaml::XamlSchemaContext ^ schemaContext, System::Xaml::Schema::XamlMemberInvoker ^ invoker);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlMember : string * System.Reflection.MethodInfo * System.Reflection.MethodInfo * System.Xaml.XamlSchemaContext * System.Xaml.Schema.XamlMemberInvoker -&gt; System.Xaml.XamlMember" Usage="new System.Xaml.XamlMember (attachablePropertyName, getter, setter, schemaContext, invoker)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="attachablePropertyName" Type="System.String" />
        <Parameter Name="getter" Type="System.Reflection.MethodInfo" />
        <Parameter Name="setter" Type="System.Reflection.MethodInfo" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
        <Parameter Name="invoker" Type="System.Xaml.Schema.XamlMemberInvoker" />
      </Parameters>
      <Docs>
        <param name="attachablePropertyName"><span data-ttu-id="07a40-187">Строковое имя присоединяемого свойства.</span><span class="sxs-lookup"><span data-stu-id="07a40-187">The string name of the attachable property.</span></span></param>
        <param name="getter"><span data-ttu-id="07a40-188">Системы типов среды CLR <see cref="T:System.Reflection.MethodInfo" /> для <see langword="get" /> доступа присоединяемого члена в резервном реализации.</span><span class="sxs-lookup"><span data-stu-id="07a40-188">The CLR type system <see cref="T:System.Reflection.MethodInfo" /> for the <see langword="get" /> accessor of the attachable member's backing implementation.</span></span></param>
        <param name="setter"><span data-ttu-id="07a40-189">Системы типов среды CLR <see cref="T:System.Reflection.MethodInfo" /> для <see langword="set" /> доступа присоединяемого члена в резервном реализации.</span><span class="sxs-lookup"><span data-stu-id="07a40-189">The CLR type system <see cref="T:System.Reflection.MethodInfo" /> for the <see langword="set" /> accessor of the attachable member's backing implementation.</span></span></param>
        <param name="schemaContext"><span data-ttu-id="07a40-190"><see cref="T:System.Xaml.XamlSchemaContext" /> Контекста, определяющий член.</span><span class="sxs-lookup"><span data-stu-id="07a40-190">The <see cref="T:System.Xaml.XamlSchemaContext" /> context that qualifies the member.</span></span></param>
        <param name="invoker"><span data-ttu-id="07a40-191"><see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> Реализация, которая обрабатывает вызов среды выполнения вызывает от <see cref="T:System.Xaml.XamlMember" />.</span><span class="sxs-lookup"><span data-stu-id="07a40-191">The <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> implementation that handles run-time invocation calls against the <see cref="T:System.Xaml.XamlMember" />.</span></span></param>
        <summary><span data-ttu-id="07a40-192">Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlMember" /> класса для <see cref="T:System.Xaml.XamlMember" /> , представляющего присоединяемое свойство, включая <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> сведения.</span><span class="sxs-lookup"><span data-stu-id="07a40-192">Initializes a new instance of the <see cref="T:System.Xaml.XamlMember" /> class for a <see cref="T:System.Xaml.XamlMember" /> that represents an attachable property, including <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> information.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07a40-193">Этот конструктор используется, если элемент представляет элемент вложенного свойства.</span><span class="sxs-lookup"><span data-stu-id="07a40-193">Use this constructor if the member represents an attachable property member.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeclaringType">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlType DeclaringType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlType DeclaringType" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.DeclaringType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DeclaringType As XamlType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::XamlType ^ DeclaringType { System::Xaml::XamlType ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DeclaringType : System.Xaml.XamlType" Usage="System.Xaml.XamlMember.DeclaringType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="07a40-194">Получает <see cref="T:System.Xaml.XamlType" /> для типа, который объявляет член, связанный с данным <see cref="T:System.Xaml.XamlMember" />.</span><span class="sxs-lookup"><span data-stu-id="07a40-194">Gets the <see cref="T:System.Xaml.XamlType" /> for the type that declares the member that is associated with this <see cref="T:System.Xaml.XamlMember" />.</span></span></summary>
        <value><span data-ttu-id="07a40-195"><see cref="T:System.Xaml.XamlType" /> Для типа, который объявляет член, связанный с данным <see cref="T:System.Xaml.XamlMember" />.</span><span class="sxs-lookup"><span data-stu-id="07a40-195">The <see cref="T:System.Xaml.XamlType" /> for the type that declares the member that is associated with this <see cref="T:System.Xaml.XamlMember" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07a40-196">Это значение обычно устанавливается во время инициализации и обычно не `null`.</span><span class="sxs-lookup"><span data-stu-id="07a40-196">This value is typically set during initialization and is usually not `null`.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="07a40-197"><xref:System.Xaml.XamlMember.DeclaringType%2A> данные могут передаваться в конструкторами для инициализации.</span><span class="sxs-lookup"><span data-stu-id="07a40-197"><xref:System.Xaml.XamlMember.DeclaringType%2A> information can be passed in by constructors for initialization.</span></span> <span data-ttu-id="07a40-198">Обращаясь напрямую базовые конструкторы, инициализации для <xref:System.Xaml.XamlMember> производных классов может пропускать некоторые проверки значения, которые вносятся в базовом классе.</span><span class="sxs-lookup"><span data-stu-id="07a40-198">By calling directly into base constructors, initialization for <xref:System.Xaml.XamlMember> derived classes can omit some of the value-checks that are made in the base class.</span></span> <span data-ttu-id="07a40-199">Таким образом производная инициализация можно изменить сведения о связях сообщаемые члена типа элемента XAML, таким образом, чтобы он больше не соответствуют ожидаемым образом информации о системе типов из его базового объявления CLR.</span><span class="sxs-lookup"><span data-stu-id="07a40-199">Therefore, the derived initialization can change the reported type-member relationship information of a XAML member so that it no longer aligns in an expected way with the type system information of its underlying CLR declaration.</span></span> <span data-ttu-id="07a40-200">Для объявления информации о типах проверок с точки зрения безопасности используйте базовый тип среды CLR.</span><span class="sxs-lookup"><span data-stu-id="07a40-200">For any security-critical checks of declaring type information, use the underlying CLR type instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeferringLoader">
      <MemberSignature Language="C#" Value="public System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt; DeferringLoader { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.Xaml.XamlDeferringLoader&gt; DeferringLoader" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.DeferringLoader" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DeferringLoader As XamlValueConverter(Of XamlDeferringLoader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::Schema::XamlValueConverter&lt;System::Xaml::XamlDeferringLoader ^&gt; ^ DeferringLoader { System::Xaml::Schema::XamlValueConverter&lt;System::Xaml::XamlDeferringLoader ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DeferringLoader : System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt;" Usage="System.Xaml.XamlMember.DeferringLoader" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="07a40-201">Получает <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> объектов, объявленных объект, который используется для отложенной загрузки XAML.</span><span class="sxs-lookup"><span data-stu-id="07a40-201">Gets a <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> object, which is used for deferred loading of XAML declared objects.</span></span></summary>
        <value><span data-ttu-id="07a40-202">Объект <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> с <see cref="T:System.Xaml.XamlDeferringLoader" /> ограничения для универсального.</span><span class="sxs-lookup"><span data-stu-id="07a40-202">A <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> with <see cref="T:System.Xaml.XamlDeferringLoader" /> constraint on the generic.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07a40-203">Вызов <xref:System.Xaml.XamlMember.DeferringLoader%2A> вызывает <xref:System.Xaml.XamlMember.LookupDeferringLoader%2A> или конкретного переопределения этого метода.</span><span class="sxs-lookup"><span data-stu-id="07a40-203">Calling <xref:System.Xaml.XamlMember.DeferringLoader%2A> invokes <xref:System.Xaml.XamlMember.LookupDeferringLoader%2A> or a specific override of that method.</span></span> <span data-ttu-id="07a40-204">Это происходит в случаях, где логика начального внутреннего отражения не уже настроен.</span><span class="sxs-lookup"><span data-stu-id="07a40-204">This behavior occurs in cases where the initial internal reflection logic has not already set the information.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DependsOn">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;System.Xaml.XamlMember&gt; DependsOn { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class System.Xaml.XamlMember&gt; DependsOn" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.DependsOn" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DependsOn As IList(Of XamlMember)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;System::Xaml::XamlMember ^&gt; ^ DependsOn { System::Collections::Generic::IList&lt;System::Xaml::XamlMember ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DependsOn : System.Collections.Generic.IList&lt;System.Xaml.XamlMember&gt;" Usage="System.Xaml.XamlMember.DependsOn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Xaml.XamlMember&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="07a40-205">Получает список объектов <see cref="T:System.Xaml.XamlMember" />.</span><span class="sxs-lookup"><span data-stu-id="07a40-205">Gets a list of <see cref="T:System.Xaml.XamlMember" /> objects.</span></span> <span data-ttu-id="07a40-206">Они сообщают о членах, в которых существуют отношения зависимости для порядка инициализации относительно данного <see cref="T:System.Xaml.XamlMember" />.</span><span class="sxs-lookup"><span data-stu-id="07a40-206">These report the members where dependency relationships for initialization order exist relative to this <see cref="T:System.Xaml.XamlMember" />.</span></span></summary>
        <value><span data-ttu-id="07a40-207">Список объектов <see cref="T:System.Xaml.XamlMember" />.</span><span class="sxs-lookup"><span data-stu-id="07a40-207">A list of <see cref="T:System.Xaml.XamlMember" /> objects.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07a40-208">Вызов <xref:System.Xaml.XamlMember.DependsOn%2A> вызывает <xref:System.Xaml.XamlMember.LookupDependsOn%2A> или конкретного переопределения этого метода.</span><span class="sxs-lookup"><span data-stu-id="07a40-208">Calling <xref:System.Xaml.XamlMember.DependsOn%2A> invokes <xref:System.Xaml.XamlMember.LookupDependsOn%2A> or a specific override of that method.</span></span> <span data-ttu-id="07a40-209">Это происходит в случаях, где логика начального внутреннего отражения не уже настроен.</span><span class="sxs-lookup"><span data-stu-id="07a40-209">This behavior occurs in cases where the initial internal reflection logic has not already set the information.</span></span>  
  
 <span data-ttu-id="07a40-210">`DependsOn` Модель может применяться к вариантам модели объекта, которые намеренно противоречат правило XAML.</span><span class="sxs-lookup"><span data-stu-id="07a40-210">The `DependsOn` pattern can be applied to object model cases that deliberately contradict a general XAML rule.</span></span> <span data-ttu-id="07a40-211">Общее правило XAML — это члены типа, которые передаются как текст инициализации (или методом фабрики в XAML 2009) должен уметь назначаться в любом порядке.</span><span class="sxs-lookup"><span data-stu-id="07a40-211">The general XAML rule is that members of a type that are not passed as initialization text (or by a factory method in XAML 2009) must be able to be assigned in any order.</span></span> <span data-ttu-id="07a40-212">Применяя `DependsOn` узор на член, можно указать модули записи XAML всегда обработать указанный член перед этим членом.</span><span class="sxs-lookup"><span data-stu-id="07a40-212">By applying a `DependsOn` pattern to a member, you can instruct XAML writers to always process the referenced member before this member.</span></span> <span data-ttu-id="07a40-213">Можно применить этот шаблон в ситуациях, где значение текущего элемента требует контекста или другие сведения, которые доступны только после установки другого элемента.</span><span class="sxs-lookup"><span data-stu-id="07a40-213">You can apply this pattern in situations where the value of the current member requires context or other information that is only available after the other member is set.</span></span>  
  
 <span data-ttu-id="07a40-214">`DependsOn` Шаблон должен применен внимательно и зарезервирован для сценариев свойств, где он служит архитектурной цели.</span><span class="sxs-lookup"><span data-stu-id="07a40-214">The `DependsOn` pattern should be applied judiciously and reserved for property scenarios where it serves an architectural purpose.</span></span> <span data-ttu-id="07a40-215">Большое количество зависимостей могут замедлить обработку XAML.</span><span class="sxs-lookup"><span data-stu-id="07a40-215">Large numbers of dependencies have the potential to slow down XAML processing.</span></span> <span data-ttu-id="07a40-216">Кроме того имеется возможность создать циклические зависимости, в этом случае поведение обработки XAML не определено.</span><span class="sxs-lookup"><span data-stu-id="07a40-216">Also, it is possible to produce circular dependencies, in which case the XAML processing behavior is undefined.</span></span>  
  
 <span data-ttu-id="07a40-217">Пример `DependsOn` сценарии из WPF включают некоторые свойства на <xref:System.Windows.Controls.ControlTemplate> и <xref:System.Windows.DataTemplate>на <xref:System.Windows.Trigger>, а затем на <xref:System.Windows.Setter>.</span><span class="sxs-lookup"><span data-stu-id="07a40-217">Example `DependsOn` scenarios from WPF include certain properties on <xref:System.Windows.Controls.ControlTemplate> and <xref:System.Windows.DataTemplate>, on <xref:System.Windows.Trigger>, and on <xref:System.Windows.Setter>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Markup.DependsOnAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="07a40-218">Указывает, равен ли текущий объект другому объекту.</span><span class="sxs-lookup"><span data-stu-id="07a40-218">Indicates whether the current object is equal to another object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="xamlMember.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="07a40-219">Объект, сравниваемый с данным объектом.</span><span class="sxs-lookup"><span data-stu-id="07a40-219">The object to compare with this object.</span></span></param>
        <summary><span data-ttu-id="07a40-220">Указывает, равен ли текущий объект другому объекту.</span><span class="sxs-lookup"><span data-stu-id="07a40-220">Indicates whether the current object is equal to another object.</span></span></summary>
        <returns><span data-ttu-id="07a40-221"><see langword="true" />, если текущий объект эквивалентен параметру <paramref name="obj" />, в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="07a40-221"><see langword="true" /> if the current object is equal to the <paramref name="obj" /> parameter; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Xaml.XamlMember other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(class System.Xaml.XamlMember other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.Equals(System.Xaml.XamlMember)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As XamlMember) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Xaml::XamlMember ^ other);" />
      <MemberSignature Language="F#" Value="override this.Equals : System.Xaml.XamlMember -&gt; bool" Usage="xamlMember.Equals other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Xaml.XamlMember" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="07a40-222">Объект, который требуется сравнить с данным объектом.</span><span class="sxs-lookup"><span data-stu-id="07a40-222">An object to compare with this object.</span></span></param>
        <summary><span data-ttu-id="07a40-223">Указывает, эквивалентен ли текущий объект другому объекту того же типа.</span><span class="sxs-lookup"><span data-stu-id="07a40-223">Indicates whether the current object is equal to another object of the same type.</span></span></summary>
        <returns><span data-ttu-id="07a40-224"><see langword="true" />, если текущий объект эквивалентен параметру <paramref name="other" />, в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="07a40-224"><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="xamlMember.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="07a40-225">Возвращает хэш-код для этого объекта.</span><span class="sxs-lookup"><span data-stu-id="07a40-225">Returns the hash code for this object.</span></span></summary>
        <returns><span data-ttu-id="07a40-226">Целочисленный хэш-код.</span><span class="sxs-lookup"><span data-stu-id="07a40-226">An integer hash code.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetXamlNamespaces">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;string&gt; GetXamlNamespaces ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;string&gt; GetXamlNamespaces() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.GetXamlNamespaces" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetXamlNamespaces () As IList(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IList&lt;System::String ^&gt; ^ GetXamlNamespaces();" />
      <MemberSignature Language="F#" Value="abstract member GetXamlNamespaces : unit -&gt; System.Collections.Generic.IList&lt;string&gt;&#xA;override this.GetXamlNamespaces : unit -&gt; System.Collections.Generic.IList&lt;string&gt;" Usage="xamlMember.GetXamlNamespaces " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="07a40-227">Возвращает список пространств имен XAML, в которых может существовать этот член XAML.</span><span class="sxs-lookup"><span data-stu-id="07a40-227">Returns a list of XAML namespaces where this XAML member can exist.</span></span></summary>
        <returns><span data-ttu-id="07a40-228">Список идентификаторов пространства имен XAML в виде строк.</span><span class="sxs-lookup"><span data-stu-id="07a40-228">A list of XAML namespace identifiers as strings.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07a40-229">Реализация по умолчанию возвращает <xref:System.Xaml.XamlType.GetXamlNamespaces%2A?displayProperty=nameWithType> результат из вызова <xref:System.Xaml.XamlMember.DeclaringType%2A> , связанного с данным <xref:System.Xaml.XamlMember>.</span><span class="sxs-lookup"><span data-stu-id="07a40-229">The default implementation returns the <xref:System.Xaml.XamlType.GetXamlNamespaces%2A?displayProperty=nameWithType> call result from the <xref:System.Xaml.XamlMember.DeclaringType%2A> that is associated with this <xref:System.Xaml.XamlMember>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Invoker">
      <MemberSignature Language="C#" Value="public System.Xaml.Schema.XamlMemberInvoker Invoker { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.Schema.XamlMemberInvoker Invoker" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.Invoker" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Invoker As XamlMemberInvoker" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::Schema::XamlMemberInvoker ^ Invoker { System::Xaml::Schema::XamlMemberInvoker ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Invoker : System.Xaml.Schema.XamlMemberInvoker" Usage="System.Xaml.XamlMember.Invoker" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlMemberInvoker</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="07a40-230">Получает <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> реализации, который связан с данным <see cref="T:System.Xaml.XamlMember" />.</span><span class="sxs-lookup"><span data-stu-id="07a40-230">Gets the <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> implementation that is associated with this <see cref="T:System.Xaml.XamlMember" />.</span></span></summary>
        <value><span data-ttu-id="07a40-231"><see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> Реализации, который связан с данным <see cref="T:System.Xaml.XamlMember" />.</span><span class="sxs-lookup"><span data-stu-id="07a40-231">The <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> implementation that is associated with this <see cref="T:System.Xaml.XamlMember" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07a40-232">`Invoker` Шаблон — это сложная и расширение системы типов XAML.</span><span class="sxs-lookup"><span data-stu-id="07a40-232">The `Invoker` pattern is an advanced XAML type system extension technique.</span></span> <span data-ttu-id="07a40-233">`Invoker` Шаблон предоставляет способ вставки поведение сопоставления типов другую схему, при этом используя определения системы типов XAML из служб XAML .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="07a40-233">The `Invoker` pattern provides a way to inject different schema type mapping behavior, while still using XAML type system definitions from .NET Framework XAML Services.</span></span>  
  
 <span data-ttu-id="07a40-234">Если <xref:System.Xaml.XamlMember.LookupInvoker%2A> переопределить возвращает `null`, или реализация по умолчанию возвращает `null` так, как у него нет <xref:System.Xaml.XamlMember.UnderlyingMember%2A> для данного <xref:System.Xaml.XamlMember>, <xref:System.Xaml.XamlMember.Invoker%2A> возвращает <xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="07a40-234">If a <xref:System.Xaml.XamlMember.LookupInvoker%2A> override returns `null`, or if the default implementation returns `null` because it lacks the <xref:System.Xaml.XamlMember.UnderlyingMember%2A> for this <xref:System.Xaml.XamlMember>, the <xref:System.Xaml.XamlMember.Invoker%2A> property returns <xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="07a40-235">Значение по умолчанию — <xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="07a40-235"><xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A?displayProperty=nameWithType> is the default.</span></span> <span data-ttu-id="07a40-236">Это верно для большинства операций, которые используют служб XAML .NET Framework и контекст схемы XAML по умолчанию, и где переопределить конкретные `Invoker` шаблоны передаются для создания сущностей системы типов XAML.</span><span class="sxs-lookup"><span data-stu-id="07a40-236">This is true for most operations that use .NET Framework XAML Services and the default XAML schema context, and where no specific override `Invoker` patterns are passed for construction of XAML type system entities.</span></span>  
  
 <span data-ttu-id="07a40-237">Вызов <xref:System.Xaml.XamlMember.Invoker%2A> вызывает <xref:System.Xaml.XamlMember.LookupInvoker%2A> или конкретного переопределения этого метода.</span><span class="sxs-lookup"><span data-stu-id="07a40-237">Calling <xref:System.Xaml.XamlMember.Invoker%2A> invokes <xref:System.Xaml.XamlMember.LookupInvoker%2A> or a specific override of that method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAmbient">
      <MemberSignature Language="C#" Value="public bool IsAmbient { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAmbient" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.IsAmbient" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAmbient As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAmbient { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAmbient : bool" Usage="System.Xaml.XamlMember.IsAmbient" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="07a40-238">Получает значение, указывающее, является ли это <see cref="T:System.Xaml.XamlMember" /> сообщается как внешнее свойство.</span><span class="sxs-lookup"><span data-stu-id="07a40-238">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlMember" /> is reported as an ambient property.</span></span></summary>
        <value><span data-ttu-id="07a40-239"><see langword="true" /> Если этот <see cref="T:System.Xaml.XamlMember" /> выводятся как внешнее свойство; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="07a40-239"><see langword="true" /> if this <see cref="T:System.Xaml.XamlMember" /> is reported as an ambient property; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07a40-240">Вызов <xref:System.Xaml.XamlMember.IsAmbient%2A> вызывает <xref:System.Xaml.XamlMember.LookupIsAmbient%2A> или конкретного переопределения этого метода.</span><span class="sxs-lookup"><span data-stu-id="07a40-240">Calling <xref:System.Xaml.XamlMember.IsAmbient%2A> invokes <xref:System.Xaml.XamlMember.LookupIsAmbient%2A> or a specific override of that method.</span></span> <span data-ttu-id="07a40-241">Это происходит в реализациях, где логика начального внутреннего отражения не уже настроен.</span><span class="sxs-lookup"><span data-stu-id="07a40-241">This behavior occurs in implementations where the initial internal reflection logic has not already set the information.</span></span>  
  
 <span data-ttu-id="07a40-242">Проверка внешних свойств обычно являются частью логики обработки XAML, чтобы убедиться в том, что объекты и значения, которые зависят от использования окружения для уточнения типа может работать неправильно.</span><span class="sxs-lookup"><span data-stu-id="07a40-242">Checking for ambient properties is are usually part of XAML processing logic to make sure that objects and values that rely on ambient usage for type qualification can function correctly.</span></span> <span data-ttu-id="07a40-243">API-интерфейсы служб XAML .NET Framework и контекст схемы XAML по умолчанию заполняет значение в зависимости от однозначного соответствия примитивов с <xref:System.Windows.Markup.AmbientAttribute>.</span><span class="sxs-lookup"><span data-stu-id="07a40-243">The .NET Framework XAML Services APIs and the default XAML schema context populates this value based on attribution with <xref:System.Windows.Markup.AmbientAttribute>.</span></span> <span data-ttu-id="07a40-244">Реализация по умолчанию <xref:System.Xaml.XamlMember.LookupIsAmbient%2A> использует этот существующие <xref:System.Windows.Markup.AmbientAttribute> прием и она вернет `true` Если <xref:System.Windows.Markup.AmbientAttribute> существует в объявлении члена.</span><span class="sxs-lookup"><span data-stu-id="07a40-244">The default implementation of <xref:System.Xaml.XamlMember.LookupIsAmbient%2A> uses this existing <xref:System.Windows.Markup.AmbientAttribute> technique, and it returns `true` if <xref:System.Windows.Markup.AmbientAttribute> exists on a member declaration.</span></span>  
  
 <span data-ttu-id="07a40-245"><xref:System.Windows.Markup.AmbientAttribute> имеет место на элементы из нескольких типов WPF, в том числе <xref:System.Windows.Application>, <xref:System.Windows.Setter>, и <xref:System.Windows.Style>.</span><span class="sxs-lookup"><span data-stu-id="07a40-245"><xref:System.Windows.Markup.AmbientAttribute> is found on members of several WPF types, which include <xref:System.Windows.Application>, <xref:System.Windows.Setter>, and <xref:System.Windows.Style>.</span></span> <span data-ttu-id="07a40-246">Также его обнаружении на <xref:System.Windows.ResourceDictionary> тип, который описывающая, что на любой член, который использует <xref:System.Windows.ResourceDictionary> как его тип должен считаться окружающим даже, если элемент не помечается с помощью специально.</span><span class="sxs-lookup"><span data-stu-id="07a40-246">It is also found on the <xref:System.Windows.ResourceDictionary> type, which connotes that any member that uses <xref:System.Windows.ResourceDictionary> as its type should be considered ambient even if the member is not specifically attributed.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Markup.AmbientAttribute" />
      </Docs>
    </Member>
    <Member MemberName="IsAttachable">
      <MemberSignature Language="C#" Value="public bool IsAttachable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAttachable" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.IsAttachable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAttachable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAttachable { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAttachable : bool" Usage="System.Xaml.XamlMember.IsAttachable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="07a40-247">Получает значение, указывающее, является ли это <see cref="T:System.Xaml.XamlMember" /> является присоединяемым членом.</span><span class="sxs-lookup"><span data-stu-id="07a40-247">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlMember" /> is an attachable member.</span></span></summary>
        <value><span data-ttu-id="07a40-248"><see langword="true" /> Если этот <see cref="T:System.Xaml.XamlMember" /> является присоединяемым членом; в противном случае <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="07a40-248"><see langword="true" /> if this <see cref="T:System.Xaml.XamlMember" /> is an attachable member; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07a40-249"><xref:System.Xaml.XamlMember.IsAttachable%2A> Значение инициализируется в зависимости от того, какой конструктор использовался для создания <xref:System.Xaml.XamlMember>.</span><span class="sxs-lookup"><span data-stu-id="07a40-249">The <xref:System.Xaml.XamlMember.IsAttachable%2A> value is initialized based on which constructor was used to construct a <xref:System.Xaml.XamlMember>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDirective">
      <MemberSignature Language="C#" Value="public bool IsDirective { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDirective" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.IsDirective" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDirective As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDirective { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDirective : bool" Usage="System.Xaml.XamlMember.IsDirective" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="07a40-250">Получает значение, указывающее, является ли это <see cref="T:System.Xaml.XamlMember" /> является директивой XAML.</span><span class="sxs-lookup"><span data-stu-id="07a40-250">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlMember" /> is a XAML directive.</span></span></summary>
        <value><span data-ttu-id="07a40-251"><see langword="true" /> Если этот <see cref="T:System.Xaml.XamlMember" /> является XAML; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="07a40-251"><see langword="true" /> if this <see cref="T:System.Xaml.XamlMember" /> is a XAML directive; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07a40-252"><xref:System.Xaml.XamlMember.IsDirective%2A> Значение инициализируется в зависимости от того, какой конструктор использовался для создания <xref:System.Xaml.XamlMember>.</span><span class="sxs-lookup"><span data-stu-id="07a40-252">The <xref:System.Xaml.XamlMember.IsDirective%2A> value is initialized based on which constructor was used to construct a <xref:System.Xaml.XamlMember>.</span></span> <span data-ttu-id="07a40-253">Базовый <xref:System.Xaml.XamlMember> конструкторы выполняют инициализацию, чтобы <xref:System.Xaml.XamlMember.IsDirective%2A> является `false`.</span><span class="sxs-lookup"><span data-stu-id="07a40-253">The base <xref:System.Xaml.XamlMember> constructors initialize so that <xref:System.Xaml.XamlMember.IsDirective%2A> is `false`.</span></span> <span data-ttu-id="07a40-254">Тем не менее <xref:System.Xaml.XamlDirective> класс ( <xref:System.Xaml.XamlMember> производного класса) инициализирует таким образом, чтобы <xref:System.Xaml.XamlMember.IsDirective%2A> является `true`.</span><span class="sxs-lookup"><span data-stu-id="07a40-254">However, the <xref:System.Xaml.XamlDirective> class (a <xref:System.Xaml.XamlMember> derived class) initializes so that <xref:System.Xaml.XamlMember.IsDirective%2A> is `true`.</span></span>  
  
 <span data-ttu-id="07a40-255">Если необходимо получить отчет <xref:System.Xaml.XamlMember.IsDirective%2A> как `true` вызывающим объектам пользовательского класса схемы XAML для элементов XAML, убедитесь, что вы наследуете от <xref:System.Xaml.XamlDirective> потому что это единственный способ включить это поведение.</span><span class="sxs-lookup"><span data-stu-id="07a40-255">If you want to report <xref:System.Xaml.XamlMember.IsDirective%2A> as `true` to callers of a custom XAML schema class for XAML members, make sure you derive from <xref:System.Xaml.XamlDirective> because that is the only way to enable that behavior.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEvent">
      <MemberSignature Language="C#" Value="public bool IsEvent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEvent" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.IsEvent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsEvent As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEvent { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEvent : bool" Usage="System.Xaml.XamlMember.IsEvent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="07a40-256">Получает значение, указывающее, является ли это <see cref="T:System.Xaml.XamlMember" /> представляет член события.</span><span class="sxs-lookup"><span data-stu-id="07a40-256">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlMember" /> represents an event member.</span></span></summary>
        <value><span data-ttu-id="07a40-257"><see langword="true" /> Если этот <see cref="T:System.Xaml.XamlMember" /> представляет событие; в противном случае <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="07a40-257"><see langword="true" /> if this <see cref="T:System.Xaml.XamlMember" /> represents an event; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07a40-258">Вызов <xref:System.Xaml.XamlMember.IsEvent%2A> вызывает <xref:System.Xaml.XamlMember.LookupIsEvent%2A> или конкретного переопределения этого метода.</span><span class="sxs-lookup"><span data-stu-id="07a40-258">Calling <xref:System.Xaml.XamlMember.IsEvent%2A> invokes <xref:System.Xaml.XamlMember.LookupIsEvent%2A> or a specific override of that method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNameValid">
      <MemberSignature Language="C#" Value="public bool IsNameValid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNameValid" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.IsNameValid" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsNameValid As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNameValid { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsNameValid : bool" Usage="System.Xaml.XamlMember.IsNameValid" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="07a40-259">Получает значение, указывающее ли это <see cref="T:System.Xaml.XamlMember" /> инициализируется с действующей <see langword="xamlName" /> строку в качестве его <see cref="P:System.Xaml.XamlMember.Name" />.</span><span class="sxs-lookup"><span data-stu-id="07a40-259">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlMember" /> is initialized with a valid <see langword="xamlName" /> string as its <see cref="P:System.Xaml.XamlMember.Name" />.</span></span></summary>
        <value><span data-ttu-id="07a40-260"><see langword="true" /> Если этот <see cref="T:System.Xaml.XamlMember" /> инициализируется с действующей <see langword="xamlName" /> строка; в противном случае <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="07a40-260"><see langword="true" /> if this <see cref="T:System.Xaml.XamlMember" /> is initialized with a valid <see langword="xamlName" /> string; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/11e4cada-41d2-494d-9531-0d3df4dfcbe3"><span data-ttu-id="07a40-261">XamlName</span><span class="sxs-lookup"><span data-stu-id="07a40-261">XamlName</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Xaml.XamlMember.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="07a40-262">Получает значение, указывающее, является ли это <see cref="T:System.Xaml.XamlMember" /> представляет член, доступный только для чтения.</span><span class="sxs-lookup"><span data-stu-id="07a40-262">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlMember" /> represents a read-only member.</span></span></summary>
        <value><span data-ttu-id="07a40-263"><see langword="true" /> Если этот <see cref="T:System.Xaml.XamlMember" /> представляет член, доступный только для чтения; в противном случае <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="07a40-263"><see langword="true" /> if this <see cref="T:System.Xaml.XamlMember" /> represents a read-only member; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07a40-264">Вызов <xref:System.Xaml.XamlMember.IsReadOnly%2A> вызывает <xref:System.Xaml.XamlMember.LookupIsReadOnly%2A> или конкретного переопределения этого метода.</span><span class="sxs-lookup"><span data-stu-id="07a40-264">Calling <xref:System.Xaml.XamlMember.IsReadOnly%2A> invokes <xref:System.Xaml.XamlMember.LookupIsReadOnly%2A> or a specific override of that method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadPublic">
      <MemberSignature Language="C#" Value="public bool IsReadPublic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadPublic" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.IsReadPublic" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadPublic As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadPublic { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadPublic : bool" Usage="System.Xaml.XamlMember.IsReadPublic" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="07a40-265">Получает значение, указывающее, является ли это <see cref="T:System.Xaml.XamlMember" /> представляет член с доступным для вызова открытым <see langword="get" /> метода доступа.</span><span class="sxs-lookup"><span data-stu-id="07a40-265">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlMember" /> represents a member with a callable public <see langword="get" /> accessor.</span></span></summary>
        <value><span data-ttu-id="07a40-266"><see langword="true" /> Если этот <see cref="T:System.Xaml.XamlMember" /> представляет доступным для вызова открытым <see langword="get" /> метод доступа; в противном случае <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="07a40-266"><see langword="true" /> if this <see cref="T:System.Xaml.XamlMember" /> represents a callable public <see langword="get" /> accessor; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07a40-267"><xref:System.Xaml.XamlMember.IsReadPublic%2A> Ли значение проверки <xref:System.Xaml.XamlMember.DeclaringType%2A> является открытым.</span><span class="sxs-lookup"><span data-stu-id="07a40-267">The <xref:System.Xaml.XamlMember.IsReadPublic%2A> value checks whether the <xref:System.Xaml.XamlMember.DeclaringType%2A> is public.</span></span> <span data-ttu-id="07a40-268">Если <xref:System.Xaml.XamlMember.DeclaringType%2A> является закрытым, `get` метод доступа не может вызываться удобный, и <xref:System.Xaml.XamlMember.IsReadPublic%2A> возвращает `false`.</span><span class="sxs-lookup"><span data-stu-id="07a40-268">If <xref:System.Xaml.XamlMember.DeclaringType%2A> is nonpublic, the `get` accessor is not callable in a practical way, and <xref:System.Xaml.XamlMember.IsReadPublic%2A> returns `false`.</span></span>  
  
 <span data-ttu-id="07a40-269">Вызов <xref:System.Xaml.XamlMember.IsReadPublic%2A> вызывает <xref:System.Xaml.XamlMember.LookupIsReadPublic%2A> или конкретного переопределения этого метода.</span><span class="sxs-lookup"><span data-stu-id="07a40-269">Calling <xref:System.Xaml.XamlMember.IsReadPublic%2A> invokes <xref:System.Xaml.XamlMember.LookupIsReadPublic%2A> or a specific override of that method.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="07a40-270"><xref:System.Xaml.XamlMember.LookupIsReadPublic%2A> Метод является виртуальным и таким образом, может быть переопределен.</span><span class="sxs-lookup"><span data-stu-id="07a40-270">The <xref:System.Xaml.XamlMember.LookupIsReadPublic%2A> method is virtual and therefore, can be overridden.</span></span> <span data-ttu-id="07a40-271">Переопределение обладает потенциалом (намеренно или иным способом) данные доступа члена XAML таким образом, чтобы он больше не соответствуют ожидаемым образом доступа к информации о системе типов из его базового объявления CLR.</span><span class="sxs-lookup"><span data-stu-id="07a40-271">The override has the potential to change (maliciously or otherwise) the reported access information of a XAML member so that it no longer aligns in an expected way with the type system access information of its underlying CLR declaration.</span></span> <span data-ttu-id="07a40-272">Для проверок с точки зрения безопасности уровни доступа используйте базовый тип среды CLR.</span><span class="sxs-lookup"><span data-stu-id="07a40-272">For any security-critical checks of access levels, use the underlying CLR type instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUnknown">
      <MemberSignature Language="C#" Value="public bool IsUnknown { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsUnknown" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.IsUnknown" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsUnknown As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsUnknown { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsUnknown : bool" Usage="System.Xaml.XamlMember.IsUnknown" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="07a40-273">Получает значение, указывающее, является ли элемент не неразрешимым в базовой системе, используется для разрешения типов и членов.</span><span class="sxs-lookup"><span data-stu-id="07a40-273">Gets a value that indicates whether the member is not resolvable by the backing system that is used for type and member resolution.</span></span></summary>
        <value><span data-ttu-id="07a40-274"><see langword="true" /> Если элемент не может быть разрешена; <see langword="false" /> Если разрешить член.</span><span class="sxs-lookup"><span data-stu-id="07a40-274"><see langword="true" /> if the member is not resolvable; <see langword="false" /> if the member is resolvable.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07a40-275">Объект <xref:System.Xaml.XamlMember> , созданный с <xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29> сигнатура возвращает `true` для <xref:System.Xaml.XamlMember.IsUnknown%2A>.</span><span class="sxs-lookup"><span data-stu-id="07a40-275">A <xref:System.Xaml.XamlMember> that is constructed with the <xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29> signature returns `true` for <xref:System.Xaml.XamlMember.IsUnknown%2A>.</span></span>  
  
 <span data-ttu-id="07a40-276">Для пути загрузки, который включает в себя <xref:System.Xaml.XamlObjectWriter>, <xref:System.Xaml.XamlMember> с `true` для <xref:System.Xaml.XamlMember.IsUnknown%2A> не может быть записан в граф объекта.</span><span class="sxs-lookup"><span data-stu-id="07a40-276">For a load path that involves <xref:System.Xaml.XamlObjectWriter>, a <xref:System.Xaml.XamlMember> with `true` for <xref:System.Xaml.XamlMember.IsUnknown%2A> cannot be written into an object graph.</span></span> <span data-ttu-id="07a40-277">В реализации по умолчанию в API служб XAML .NET Framework <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=nameWithType> вызова вызывает <xref:System.Xaml.XamlObjectWriterException> при соответствующие <xref:System.Xaml.XamlMember> отчеты `true` для <xref:System.Xaml.XamlMember.IsUnknown%2A>.</span><span class="sxs-lookup"><span data-stu-id="07a40-277">Under the default implementations in .NET Framework XAML Services APIs, the <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=nameWithType> call throws a <xref:System.Xaml.XamlObjectWriterException> when the relevant <xref:System.Xaml.XamlMember> reports `true` for <xref:System.Xaml.XamlMember.IsUnknown%2A>.</span></span>  
  
 <span data-ttu-id="07a40-278">Не следует создавать <xref:System.Xaml.XamlMember> , имеет значение `true` для <xref:System.Xaml.XamlMember.IsUnknown%2A> Если ваша реализация может обрабатывать исключения из <xref:System.Xaml.XamlObjectWriter>, или у вас есть другие способы настройки <xref:System.Xaml.XamlObjectWriter> поведение.</span><span class="sxs-lookup"><span data-stu-id="07a40-278">You should not construct a <xref:System.Xaml.XamlMember> that has a value of `true` for <xref:System.Xaml.XamlMember.IsUnknown%2A> unless your implementation can handle the exceptions from <xref:System.Xaml.XamlObjectWriter>, or you have other ways to adjust the <xref:System.Xaml.XamlObjectWriter> behavior.</span></span>  
  
 <span data-ttu-id="07a40-279">Вызов <xref:System.Xaml.XamlMember.IsUnknown%2A> вызывает <xref:System.Xaml.XamlMember.LookupIsUnknown%2A> или конкретного переопределения этого метода.</span><span class="sxs-lookup"><span data-stu-id="07a40-279">Calling <xref:System.Xaml.XamlMember.IsUnknown%2A> invokes <xref:System.Xaml.XamlMember.LookupIsUnknown%2A> or a specific override of that method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsWriteOnly">
      <MemberSignature Language="C#" Value="public bool IsWriteOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsWriteOnly" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.IsWriteOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsWriteOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsWriteOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsWriteOnly : bool" Usage="System.Xaml.XamlMember.IsWriteOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="07a40-280">Получает значение, указывающее, является ли это <see cref="T:System.Xaml.XamlMember" /> представляет член, доступный только для записи.</span><span class="sxs-lookup"><span data-stu-id="07a40-280">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlMember" /> represents a write-only member.</span></span></summary>
        <value><span data-ttu-id="07a40-281"><see langword="true" /> Если этот <see cref="T:System.Xaml.XamlMember" /> представляет член, доступный только для записи; в противном случае <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="07a40-281"><see langword="true" /> if this <see cref="T:System.Xaml.XamlMember" /> represents a write-only member; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07a40-282">Вызов <xref:System.Xaml.XamlMember.IsWriteOnly%2A> вызывает <xref:System.Xaml.XamlMember.LookupIsWriteOnly%2A> или конкретного переопределения этого метода.</span><span class="sxs-lookup"><span data-stu-id="07a40-282">Calling <xref:System.Xaml.XamlMember.IsWriteOnly%2A> invokes <xref:System.Xaml.XamlMember.LookupIsWriteOnly%2A> or a specific override of that method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsWritePublic">
      <MemberSignature Language="C#" Value="public bool IsWritePublic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsWritePublic" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.IsWritePublic" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsWritePublic As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsWritePublic { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsWritePublic : bool" Usage="System.Xaml.XamlMember.IsWritePublic" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="07a40-283">Получает значение, указывающее ли это <see cref="T:System.Xaml.XamlMember" /> представляет член, имеющий доступным для вызова открытым <see langword="set" /> метода доступа.</span><span class="sxs-lookup"><span data-stu-id="07a40-283">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlMember" /> represents a member that has a callable public <see langword="set" /> accessor.</span></span></summary>
        <value><span data-ttu-id="07a40-284"><see langword="true" /> Если этот <see cref="T:System.Xaml.XamlMember" /> представляет доступным для вызова открытым <see langword="set" /> метод доступа; в противном случае <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="07a40-284"><see langword="true" /> if this <see cref="T:System.Xaml.XamlMember" /> represents a callable public <see langword="set" /> accessor; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07a40-285"><xref:System.Xaml.XamlMember.IsWritePublic%2A> Считает, что значение ли <xref:System.Xaml.XamlMember.DeclaringType%2A> является общим как часть определения.</span><span class="sxs-lookup"><span data-stu-id="07a40-285">The <xref:System.Xaml.XamlMember.IsWritePublic%2A> value considers whether the <xref:System.Xaml.XamlMember.DeclaringType%2A> is public as part of the determination.</span></span> <span data-ttu-id="07a40-286">Если <xref:System.Xaml.XamlMember.DeclaringType%2A> является закрытым, `set` метод доступа не может вызываться удобный, и <xref:System.Xaml.XamlMember.IsWritePublic%2A> возвращает `false`.</span><span class="sxs-lookup"><span data-stu-id="07a40-286">If <xref:System.Xaml.XamlMember.DeclaringType%2A> is nonpublic, the `set` accessor is not callable in a practical way, and <xref:System.Xaml.XamlMember.IsWritePublic%2A> returns `false`.</span></span>  
  
 <span data-ttu-id="07a40-287">Вызов <xref:System.Xaml.XamlMember.IsWritePublic%2A> вызывает <xref:System.Xaml.XamlMember.LookupIsWritePublic%2A> или конкретного переопределения этого метода.</span><span class="sxs-lookup"><span data-stu-id="07a40-287">Calling <xref:System.Xaml.XamlMember.IsWritePublic%2A> invokes <xref:System.Xaml.XamlMember.LookupIsWritePublic%2A> or a specific override of that method.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="07a40-288"><xref:System.Xaml.XamlMember.LookupIsWritePublic%2A> Метод является виртуальным и таким образом, может быть переопределен.</span><span class="sxs-lookup"><span data-stu-id="07a40-288">The <xref:System.Xaml.XamlMember.LookupIsWritePublic%2A> method is virtual and therefore, can be overridden.</span></span> <span data-ttu-id="07a40-289">Переопределение обладает потенциалом (намеренно или иным способом) данные доступа члена XAML таким образом, чтобы он больше не соответствуют ожидаемым образом доступа к информации о системе типов из его базового объявления CLR.</span><span class="sxs-lookup"><span data-stu-id="07a40-289">The override has the potential to change (maliciously or otherwise) the reported access information of a XAML member so that it no longer aligns in an expected way with the type system access information of its underlying CLR declaration.</span></span> <span data-ttu-id="07a40-290">Для проверок с точки зрения безопасности уровни доступа используйте базовый тип среды CLR.</span><span class="sxs-lookup"><span data-stu-id="07a40-290">For any security-critical checks of access levels, use the underlying CLR type instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupCustomAttributeProvider">
      <MemberSignature Language="C#" Value="protected virtual System.Reflection.ICustomAttributeProvider LookupCustomAttributeProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Reflection.ICustomAttributeProvider LookupCustomAttributeProvider() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupCustomAttributeProvider" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupCustomAttributeProvider () As ICustomAttributeProvider" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Reflection::ICustomAttributeProvider ^ LookupCustomAttributeProvider();" />
      <MemberSignature Language="F#" Value="abstract member LookupCustomAttributeProvider : unit -&gt; System.Reflection.ICustomAttributeProvider&#xA;override this.LookupCustomAttributeProvider : unit -&gt; System.Reflection.ICustomAttributeProvider" Usage="xamlMember.LookupCustomAttributeProvider " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.ICustomAttributeProvider</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="07a40-291">При реализации в производном классе возвращает <see cref="T:System.Reflection.ICustomAttributeProvider" /> реализации.</span><span class="sxs-lookup"><span data-stu-id="07a40-291">When implemented in a derived class, returns an <see cref="T:System.Reflection.ICustomAttributeProvider" /> implementation.</span></span></summary>
        <returns><span data-ttu-id="07a40-292">Реализация <see cref="T:System.Reflection.ICustomAttributeProvider" />.</span><span class="sxs-lookup"><span data-stu-id="07a40-292">An <see cref="T:System.Reflection.ICustomAttributeProvider" /> implementation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07a40-293">Переопределите этот метод для предоставления внутреннее отражение альтернативный способ получения значений атрибутов CLR.</span><span class="sxs-lookup"><span data-stu-id="07a40-293">Override this method to provide the internal reflection with an alternative way to obtain CLR attribute values.</span></span> <span data-ttu-id="07a40-294">В отсутствие переопределения, внутренний объект, отражающий использует типичные логику отражения среды CLR, такие как вызовы <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A>.</span><span class="sxs-lookup"><span data-stu-id="07a40-294">In the absence of an override, the internal reflector uses typical CLR reflection logic such as calls to <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A>.</span></span>  
  
 <span data-ttu-id="07a40-295">Реализация по умолчанию возвращает значение `null`.</span><span class="sxs-lookup"><span data-stu-id="07a40-295">The default implementation returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupDeferringLoader">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt; LookupDeferringLoader ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.Xaml.XamlDeferringLoader&gt; LookupDeferringLoader() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupDeferringLoader" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupDeferringLoader () As XamlValueConverter(Of XamlDeferringLoader)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::Schema::XamlValueConverter&lt;System::Xaml::XamlDeferringLoader ^&gt; ^ LookupDeferringLoader();" />
      <MemberSignature Language="F#" Value="abstract member LookupDeferringLoader : unit -&gt; System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt;&#xA;override this.LookupDeferringLoader : unit -&gt; System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt;" Usage="xamlMember.LookupDeferringLoader " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="07a40-296">Возвращает <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> объектов, объявленных объект, который используется для отложенной загрузки XAML.</span><span class="sxs-lookup"><span data-stu-id="07a40-296">Returns a <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> object, which is used for deferred loading of XAML declared objects.</span></span></summary>
        <returns><span data-ttu-id="07a40-297">Объект <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> с <see cref="T:System.Xaml.XamlDeferringLoader" /> ограничения для универсального.</span><span class="sxs-lookup"><span data-stu-id="07a40-297">A <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> that has a <see cref="T:System.Xaml.XamlDeferringLoader" /> constraint on the generic.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07a40-298">Этот метод вызывается, когда вызывающий объект возвращает значение из <xref:System.Xaml.XamlMember.DeferringLoader%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="07a40-298">This method is invoked when a caller gets a value from the <xref:System.Xaml.XamlMember.DeferringLoader%2A> property.</span></span> <span data-ttu-id="07a40-299">Переопределите этот метод, если вы хотите, чтобы <xref:System.Xaml.XamlMember.DeferringLoader%2A> возвращать значение, отличное от значения, которое включено по умолчанию внутреннего отражения, и если вы также предоставляете пользовательский <xref:System.Xaml.Schema.XamlMemberInvoker> сведения.</span><span class="sxs-lookup"><span data-stu-id="07a40-299">Override this method if you want <xref:System.Xaml.XamlMember.DeferringLoader%2A> to return a value that differs from the value that is enabled by default internal reflection, and if you are also providing custom <xref:System.Xaml.Schema.XamlMemberInvoker> information.</span></span>  
  
 <span data-ttu-id="07a40-300">Реализация по умолчанию возвращает объект, либо путем чтения <xref:System.Windows.Markup.XamlDeferLoadAttribute> или с помощью <xref:System.Xaml.XamlDeferringLoader> от объявляющего типа.</span><span class="sxs-lookup"><span data-stu-id="07a40-300">The default implementation returns an object either by reading <xref:System.Windows.Markup.XamlDeferLoadAttribute> or using a <xref:System.Xaml.XamlDeferringLoader> from the declaring type.</span></span> <span data-ttu-id="07a40-301">Если ни один из объектов доступна, этот метод может возвращать `null`.</span><span class="sxs-lookup"><span data-stu-id="07a40-301">If neither object is available, this method might return `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.DeferringLoader" />
      </Docs>
    </Member>
    <Member MemberName="LookupDependsOn">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IList&lt;System.Xaml.XamlMember&gt; LookupDependsOn ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class System.Xaml.XamlMember&gt; LookupDependsOn() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupDependsOn" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupDependsOn () As IList(Of XamlMember)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::Generic::IList&lt;System::Xaml::XamlMember ^&gt; ^ LookupDependsOn();" />
      <MemberSignature Language="F#" Value="abstract member LookupDependsOn : unit -&gt; System.Collections.Generic.IList&lt;System.Xaml.XamlMember&gt;&#xA;override this.LookupDependsOn : unit -&gt; System.Collections.Generic.IList&lt;System.Xaml.XamlMember&gt;" Usage="xamlMember.LookupDependsOn " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Xaml.XamlMember&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="07a40-302">Возвращает список <see cref="T:System.Xaml.XamlMember" /> объектов.</span><span class="sxs-lookup"><span data-stu-id="07a40-302">Returns a list of <see cref="T:System.Xaml.XamlMember" /> objects.</span></span> <span data-ttu-id="07a40-303">Элементы списка сообщают о членах, в которых существуют отношения зависимости для порядка инициализации относительно данного <see cref="T:System.Xaml.XamlMember" />.</span><span class="sxs-lookup"><span data-stu-id="07a40-303">Items in the list report the members where dependency relationships for initialization order exist relative to this <see cref="T:System.Xaml.XamlMember" />.</span></span></summary>
        <returns><span data-ttu-id="07a40-304">Список объектов <see cref="T:System.Xaml.XamlMember" />.</span><span class="sxs-lookup"><span data-stu-id="07a40-304">A list of <see cref="T:System.Xaml.XamlMember" /> objects.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07a40-305">Этот метод вызывается, когда вызывающий объект возвращает значение из <xref:System.Xaml.XamlMember.DependsOn%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="07a40-305">This method is invoked when a caller gets a value from the <xref:System.Xaml.XamlMember.DependsOn%2A> property.</span></span> <span data-ttu-id="07a40-306">Переопределите этот метод, если вы хотите, чтобы <xref:System.Xaml.XamlMember.DependsOn%2A> возвращать значение, отличное от значения, которое включено по умолчанию внутреннего отражения, и если вы также предоставляете пользовательский <xref:System.Xaml.Schema.XamlMemberInvoker> сведения.</span><span class="sxs-lookup"><span data-stu-id="07a40-306">Override this method if you want <xref:System.Xaml.XamlMember.DependsOn%2A> to return a value that differs from the value that is enabled by default internal reflection, and if you are also providing custom <xref:System.Xaml.Schema.XamlMemberInvoker> information.</span></span>  
  
 <span data-ttu-id="07a40-307">Реализации WPF XAML чтения и записи атрибута этот случай с <xref:System.Windows.Markup.DependsOnAttribute>.</span><span class="sxs-lookup"><span data-stu-id="07a40-307">The WPF XAML reader and writer implementations attribute this case with <xref:System.Windows.Markup.DependsOnAttribute>.</span></span> <span data-ttu-id="07a40-308">Реализация по умолчанию использует этот существующий <xref:System.Windows.Markup.DependsOnAttribute> методика.</span><span class="sxs-lookup"><span data-stu-id="07a40-308">The default implementation uses this existing <xref:System.Windows.Markup.DependsOnAttribute> technique.</span></span>  
  
 <span data-ttu-id="07a40-309">Переопределите этот метод, если вы не используете <xref:System.Windows.Markup.DependsOnAttribute> для этой цели и не собираетесь заменить этот прием для указания порядка обработки свойств собственной методикой.</span><span class="sxs-lookup"><span data-stu-id="07a40-309">Override this method if you are not using <xref:System.Windows.Markup.DependsOnAttribute> for this purpose and intend to replace that technique for indicating property processing order with your own technique.</span></span> <span data-ttu-id="07a40-310">Если вы не собираетесь поддерживать порядок обработки свойства, можно использовать реализация по умолчанию, поскольку он не возвращает результатов, который подходит.</span><span class="sxs-lookup"><span data-stu-id="07a40-310">If you do not intend to support a property processing order, you can use the default implementation because it returns no results, which is appropriate.</span></span>  
  
 <span data-ttu-id="07a40-311">Список доступен только для чтения.</span><span class="sxs-lookup"><span data-stu-id="07a40-311">The list is read-only.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.DependsOn" />
      </Docs>
    </Member>
    <Member MemberName="LookupInvoker">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.Schema.XamlMemberInvoker LookupInvoker ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.Schema.XamlMemberInvoker LookupInvoker() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupInvoker" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupInvoker () As XamlMemberInvoker" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::Schema::XamlMemberInvoker ^ LookupInvoker();" />
      <MemberSignature Language="F#" Value="abstract member LookupInvoker : unit -&gt; System.Xaml.Schema.XamlMemberInvoker&#xA;override this.LookupInvoker : unit -&gt; System.Xaml.Schema.XamlMemberInvoker" Usage="xamlMember.LookupInvoker " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlMemberInvoker</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="07a40-312">Возвращает <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> , связанного с данным <see cref="T:System.Xaml.XamlMember" />.</span><span class="sxs-lookup"><span data-stu-id="07a40-312">Returns a <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> that is associated with this <see cref="T:System.Xaml.XamlMember" />.</span></span></summary>
        <returns><span data-ttu-id="07a40-313"><see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> Сведения для этого <see cref="T:System.Xaml.XamlMember" />; или <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="07a40-313">The <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> information for this <see cref="T:System.Xaml.XamlMember" />; or <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07a40-314">Этот метод вызывается при вызове <xref:System.Xaml.XamlMember.Invoker%2A>.</span><span class="sxs-lookup"><span data-stu-id="07a40-314">This method is invoked by calls to <xref:System.Xaml.XamlMember.Invoker%2A>.</span></span>  
  
 <span data-ttu-id="07a40-315">Реализация по умолчанию не требует <xref:System.Xaml.XamlMember> создаваться с помощью одного из конструкторов, которые передают первоначальный <xref:System.Xaml.Schema.XamlMemberInvoker>.</span><span class="sxs-lookup"><span data-stu-id="07a40-315">The default implementation does not require that a <xref:System.Xaml.XamlMember> be constructed by using one of the constructors that pass an initial <xref:System.Xaml.Schema.XamlMemberInvoker>.</span></span> <span data-ttu-id="07a40-316">Тем не менее <xref:System.Xaml.XamlMember.UnderlyingMember%2A> значение должно существовать для <xref:System.Xaml.XamlMember>; в противном случае реализация по умолчанию возвращает `null`.</span><span class="sxs-lookup"><span data-stu-id="07a40-316">However, an <xref:System.Xaml.XamlMember.UnderlyingMember%2A> value must exist for the <xref:System.Xaml.XamlMember>; otherwise, the default implementation returns `null`.</span></span>  
  
 <span data-ttu-id="07a40-317">Переопределите этот метод, если вы наследуете от <xref:System.Xaml.Schema.XamlMemberInvoker> и должны возвращать производного класса.</span><span class="sxs-lookup"><span data-stu-id="07a40-317">Override this method if you also derive from <xref:System.Xaml.Schema.XamlMemberInvoker> and intend to return the derived class.</span></span> <span data-ttu-id="07a40-318">Если возвращается `null`, <xref:System.Xaml.XamlMember.Invoker%2A> возвращает <xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A?displayProperty=nameWithType> вызывающим объектам.</span><span class="sxs-lookup"><span data-stu-id="07a40-318">If you return `null`, <xref:System.Xaml.XamlMember.Invoker%2A> returns <xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A?displayProperty=nameWithType> to callers.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.Invoker" />
        <altmember cref="T:System.Xaml.Schema.XamlMemberInvoker" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsAmbient">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsAmbient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsAmbient() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupIsAmbient" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsAmbient () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsAmbient();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsAmbient : unit -&gt; bool&#xA;override this.LookupIsAmbient : unit -&gt; bool" Usage="xamlMember.LookupIsAmbient " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="07a40-319">Возвращает ли это <see cref="T:System.Xaml.XamlMember" /> сообщается как внешнее свойство.</span><span class="sxs-lookup"><span data-stu-id="07a40-319">Returns whether this <see cref="T:System.Xaml.XamlMember" /> is reported as an ambient property.</span></span></summary>
        <returns><span data-ttu-id="07a40-320"><see langword="true" /> необходимо объявить этот <see cref="T:System.Xaml.XamlMember" /> внешним свойством; в противном случае <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="07a40-320"><see langword="true" /> to report this <see cref="T:System.Xaml.XamlMember" /> as an ambient property; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07a40-321">Этот метод вызывается внутренних вызовов, которые проверяют данные свойства окружения XAML.</span><span class="sxs-lookup"><span data-stu-id="07a40-321">This method is invoked by internal calls that check for ambient XAML property information.</span></span> <span data-ttu-id="07a40-322">Поведение внешнее свойство учитывается в поведении открытого API средства чтения XAML и записи XAML.</span><span class="sxs-lookup"><span data-stu-id="07a40-322">Ambient property behavior is accounted for in the public API behavior of XAML readers and XAML writers.</span></span> <span data-ttu-id="07a40-323">Эти внутренние вызовы, которые ссылаются на <xref:System.Xaml.XamlMember.LookupIsAmbient%2A> обычно являются частью логики обработки XAML, чтобы убедиться в том, что объекты и значения, которые зависят от использования окружения для уточнения типа может работать неправильно.</span><span class="sxs-lookup"><span data-stu-id="07a40-323">The internal calls that reference <xref:System.Xaml.XamlMember.LookupIsAmbient%2A> are usually part of XAML processing logic to make sure that objects and values that rely on ambient usage for type qualification can function correctly.</span></span> <span data-ttu-id="07a40-324">Реализация служб XAML .NET Framework по умолчанию использует CLR с атрибутами для получения этих сведений из отражения резервных типов.</span><span class="sxs-lookup"><span data-stu-id="07a40-324">The default .NET Framework XAML Services implementation uses CLR attributing to obtain this information from reflection over backing types.</span></span> <span data-ttu-id="07a40-325">В частности, реализация по умолчанию проверяет наличие <xref:System.Windows.Markup.AmbientAttribute> и возвращает `true` для <xref:System.Xaml.XamlMember.LookupIsAmbient%2A> Если <xref:System.Windows.Markup.AmbientAttribute> существует для определения члена.</span><span class="sxs-lookup"><span data-stu-id="07a40-325">Specifically, the default implementation checks for <xref:System.Windows.Markup.AmbientAttribute> and returns `true` for <xref:System.Xaml.XamlMember.LookupIsAmbient%2A> if <xref:System.Windows.Markup.AmbientAttribute> exists on a member definition.</span></span>  
  
 <span data-ttu-id="07a40-326">Переопределите этот метод, если вы не используете <xref:System.Windows.Markup.AmbientAttribute> для этой цели и не собираетесь заменить этот прием для указания внешние свойства XAML с помощью собственного метода.</span><span class="sxs-lookup"><span data-stu-id="07a40-326">Override this method if you are not using <xref:System.Windows.Markup.AmbientAttribute> for this purpose and intend to replace that technique for indicating ambient XAML properties with your own technique.</span></span>  
  
 <span data-ttu-id="07a40-327">Пример API-интерфейсы WPF, атрибут с <xref:System.Windows.Markup.AmbientAttribute> являются <xref:System.Windows.Trigger.Property%2A?displayProperty=nameWithType> и <xref:System.Windows.Style.BasedOn%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="07a40-327">Example APIs from WPF that attribute with <xref:System.Windows.Markup.AmbientAttribute> are <xref:System.Windows.Trigger.Property%2A?displayProperty=nameWithType> and <xref:System.Windows.Style.BasedOn%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Markup.AmbientAttribute" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsEvent">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsEvent ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsEvent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupIsEvent" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsEvent () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsEvent();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsEvent : unit -&gt; bool&#xA;override this.LookupIsEvent : unit -&gt; bool" Usage="xamlMember.LookupIsEvent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="07a40-328">Возвращает ли это <see cref="T:System.Xaml.XamlMember" /> представляет событие.</span><span class="sxs-lookup"><span data-stu-id="07a40-328">Returns whether this <see cref="T:System.Xaml.XamlMember" /> represents an event.</span></span></summary>
        <returns><span data-ttu-id="07a40-329"><see langword="true" /> отчет, <see cref="T:System.Xaml.XamlMember" /> представляет событие; в противном случае <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="07a40-329"><see langword="true" /> to report that this <see cref="T:System.Xaml.XamlMember" /> represents an event; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07a40-330">Реализация проверок по умолчанию ли <xref:System.Xaml.XamlMember.UnderlyingMember%2A> имеет тип <xref:System.Reflection.EventInfo>и если это так, возвращает `true`.</span><span class="sxs-lookup"><span data-stu-id="07a40-330">The default implementation checks whether <xref:System.Xaml.XamlMember.UnderlyingMember%2A> is of type <xref:System.Reflection.EventInfo>, and if it is, returns `true`.</span></span>  
  
 <span data-ttu-id="07a40-331">Этот метод вызывается, когда вызывающий объект возвращает значение из <xref:System.Xaml.XamlMember.IsEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="07a40-331">This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.IsEvent%2A>.</span></span> <span data-ttu-id="07a40-332">Переопределите этот метод, если вы хотите сообщить о результатах универсальный код для всего <xref:System.Xaml.XamlMember> производного класса, или если специализированные метаданные, можно интерпретировать для определения XAML тип представления систем для каждого случая.</span><span class="sxs-lookup"><span data-stu-id="07a40-332">Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available that can be interpreted to determine XAML type system representations on a per-case basis.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.IsEvent" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsReadOnly">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsReadOnly ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsReadOnly() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupIsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsReadOnly () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsReadOnly();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsReadOnly : unit -&gt; bool&#xA;override this.LookupIsReadOnly : unit -&gt; bool" Usage="xamlMember.LookupIsReadOnly " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="07a40-333">Возвращает ли это <see cref="T:System.Xaml.XamlMember" /> представляет требуемое свойство только для чтения.</span><span class="sxs-lookup"><span data-stu-id="07a40-333">Returns whether this <see cref="T:System.Xaml.XamlMember" /> represents an intended read-only property.</span></span></summary>
        <returns><span data-ttu-id="07a40-334"><see langword="true" /> необходимо объявить этот <see cref="T:System.Xaml.XamlMember" /> как требуемое свойство, доступное только для чтения; в противном случае <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="07a40-334"><see langword="true" /> to report this <see cref="T:System.Xaml.XamlMember" /> as an intended read-only property; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07a40-335">Реализация по умолчанию возвращает `true` Если <xref:System.Xaml.XamlMember.UnderlyingMember%2A> существует, но открытый `set` метод доступа не существует, что определяется внутреннего отражения.</span><span class="sxs-lookup"><span data-stu-id="07a40-335">The default implementation returns `true` if <xref:System.Xaml.XamlMember.UnderlyingMember%2A> exists, but a public `set` accessor does not exist for it, as determined by internal reflection.</span></span>  
  
 <span data-ttu-id="07a40-336">Этот метод вызывается, когда вызывающий объект возвращает значение из <xref:System.Xaml.XamlMember.IsReadOnly%2A>.</span><span class="sxs-lookup"><span data-stu-id="07a40-336">This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.IsReadOnly%2A>.</span></span> <span data-ttu-id="07a40-337">Переопределите этот метод, если вы хотите сообщить о результатах универсальный код для всего <xref:System.Xaml.XamlMember> производного класса, или если специализированные метаданные, можно интерпретировать для определения XAML тип представления систем для каждого случая.</span><span class="sxs-lookup"><span data-stu-id="07a40-337">Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available that can be interpreted to determine XAML type system representations on a per-case basis.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.IsReadOnly" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsReadPublic">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsReadPublic ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsReadPublic() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupIsReadPublic" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsReadPublic () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsReadPublic();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsReadPublic : unit -&gt; bool&#xA;override this.LookupIsReadPublic : unit -&gt; bool" Usage="xamlMember.LookupIsReadPublic " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="07a40-338">Возвращает ли это <see cref="T:System.Xaml.XamlMember" /> представляет свойство, имеющее открытый <see langword="get" /> метода доступа.</span><span class="sxs-lookup"><span data-stu-id="07a40-338">Returns whether this <see cref="T:System.Xaml.XamlMember" /> represents a property that has a public <see langword="get" /> accessor.</span></span></summary>
        <returns><span data-ttu-id="07a40-339"><see langword="true" /> Если этот <see cref="T:System.Xaml.XamlMember" /> представляет свойство, имеющее открытый <see langword="get" /> метод доступа; в противном случае <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="07a40-339"><see langword="true" /> if this <see cref="T:System.Xaml.XamlMember" /> represents a property that has a public <see langword="get" /> accessor; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07a40-340">Реализация по умолчанию возвращает результаты, либо на основе внутреннего отражения либо отрицание <xref:System.Xaml.XamlMember.IsWriteOnly%2A>, обработку в указанном порядке.</span><span class="sxs-lookup"><span data-stu-id="07a40-340">The default implementation returns results based either on internal reflection or the negation of <xref:System.Xaml.XamlMember.IsWriteOnly%2A>, processing in that order.</span></span>  
  
 <span data-ttu-id="07a40-341"><xref:System.Xaml.XamlMember.LookupIsReadPublic%2A> Возвращает, является ли сам элемент открытым; он возвращает `true` для на открытый член nonpublic, объявляющий тип.</span><span class="sxs-lookup"><span data-stu-id="07a40-341"><xref:System.Xaml.XamlMember.LookupIsReadPublic%2A> returns whether the member itself is public; it returns `true` for a public member on a nonpublic declaring type.</span></span> <span data-ttu-id="07a40-342">Используйте <xref:System.Xaml.XamlMember.IsReadPublic%2A> вместо этого, если вы хотите, чтобы учел видимость объявляющего типа.</span><span class="sxs-lookup"><span data-stu-id="07a40-342">Use <xref:System.Xaml.XamlMember.IsReadPublic%2A> instead, if you also want to consider the visibility of the declaring type.</span></span>  
  
 <span data-ttu-id="07a40-343">Этот метод вызывается, когда вызывающий объект возвращает значение из <xref:System.Xaml.XamlMember.IsReadPublic%2A>.</span><span class="sxs-lookup"><span data-stu-id="07a40-343">This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.IsReadPublic%2A>.</span></span> <span data-ttu-id="07a40-344">Переопределите этот метод, если вы хотите сообщить о результатах универсальный код для всего <xref:System.Xaml.XamlMember> производного класса, или если специализированные метаданными, доступными определение для каждого случая.</span><span class="sxs-lookup"><span data-stu-id="07a40-344">Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="07a40-345"><xref:System.Xaml.XamlMember.LookupIsReadPublic%2A> Метод является виртуальным и таким образом, может быть переопределен.</span><span class="sxs-lookup"><span data-stu-id="07a40-345">The <xref:System.Xaml.XamlMember.LookupIsReadPublic%2A> method is virtual and therefore, can be overridden.</span></span> <span data-ttu-id="07a40-346">Переопределение обладает потенциалом (намеренно или иным способом) данные доступа члена XAML таким образом, чтобы он больше не соответствуют ожидаемым образом доступа к информации о системе типов из его базового объявления CLR.</span><span class="sxs-lookup"><span data-stu-id="07a40-346">The override has the potential to change (maliciously or otherwise) the reported access information of a XAML member so that it no longer aligns in an expected way with the type system access information of its underlying CLR declaration.</span></span> <span data-ttu-id="07a40-347">Для проверок с точки зрения безопасности уровни доступа используйте базовый тип среды CLR.</span><span class="sxs-lookup"><span data-stu-id="07a40-347">For any security-critical checks of access levels, use the underlying CLR type instead.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.IsReadPublic" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsUnknown">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsUnknown ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsUnknown() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupIsUnknown" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsUnknown () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsUnknown();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsUnknown : unit -&gt; bool&#xA;override this.LookupIsUnknown : unit -&gt; bool" Usage="xamlMember.LookupIsUnknown " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="07a40-348">Возвращает ли это <see cref="T:System.Xaml.XamlMember" /> представляет член, не может быть разрешен в базовой системе, которая используется для разрешения типов и членов.</span><span class="sxs-lookup"><span data-stu-id="07a40-348">Returns whether this <see cref="T:System.Xaml.XamlMember" /> represents a member that is not resolvable by the backing system that is used for type and member resolution.</span></span></summary>
        <returns><span data-ttu-id="07a40-349"><see langword="true" /> Если этот <see cref="T:System.Xaml.XamlMember" /> представляет Неразрешимый член; в противном случае <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="07a40-349"><see langword="true" /> if this <see cref="T:System.Xaml.XamlMember" /> represents a non-resolvable member; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07a40-350">Этот метод может вызываться, когда вызывающий объект возвращает значение из <xref:System.Xaml.XamlMember.IsUnknown%2A>.</span><span class="sxs-lookup"><span data-stu-id="07a40-350">This method may be invoked when a caller gets a value from <xref:System.Xaml.XamlMember.IsUnknown%2A>.</span></span> <span data-ttu-id="07a40-351">Реализация по умолчанию возвращает результаты, которые находятся в зависимости от любого внутреннего отражения или для проверки `null` значение <xref:System.Xaml.XamlMember.UnderlyingMember%2A>, обработку в указанном порядке.</span><span class="sxs-lookup"><span data-stu-id="07a40-351">The default implementation returns results that are based on either internal reflection or checking for a `null` value of <xref:System.Xaml.XamlMember.UnderlyingMember%2A>, processing in that order.</span></span>  
  
 <span data-ttu-id="07a40-352">Переопределите этот метод, если вы хотите сообщить о результатах универсальный код для всего <xref:System.Xaml.XamlMember> производного класса, или если специализированные метаданными, доступными определение для каждого случая.</span><span class="sxs-lookup"><span data-stu-id="07a40-352">Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.IsUnknown" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsWriteOnly">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsWriteOnly ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsWriteOnly() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupIsWriteOnly" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsWriteOnly () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsWriteOnly();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsWriteOnly : unit -&gt; bool&#xA;override this.LookupIsWriteOnly : unit -&gt; bool" Usage="xamlMember.LookupIsWriteOnly " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="07a40-353">Возвращает ли это <see cref="T:System.Xaml.XamlMember" /> представляет член, имеющий открытый <see langword="set" /> метод доступа, но не имеющий открытого <see langword="get" /> метода доступа.</span><span class="sxs-lookup"><span data-stu-id="07a40-353">Returns whether this <see cref="T:System.Xaml.XamlMember" /> represents a member that has a public <see langword="set" /> accessor but not a public <see langword="get" /> accessor.</span></span></summary>
        <returns><span data-ttu-id="07a40-354"><see langword="true" /> Если этот <see cref="T:System.Xaml.XamlMember" /> представляет член, доступный только для записи; в противном случае <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="07a40-354"><see langword="true" /> if this <see cref="T:System.Xaml.XamlMember" /> represents a write-only member; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07a40-355">Реализация по умолчанию возвращает `true` Если <xref:System.Xaml.XamlMember.UnderlyingMember%2A> существует, имеющий открытый `set` метода доступа и закрытого `get` метод доступа, что определяется внутреннего отражения.</span><span class="sxs-lookup"><span data-stu-id="07a40-355">The default implementation returns `true` if an <xref:System.Xaml.XamlMember.UnderlyingMember%2A> exists that has a public `set` accessor and a nonpublic `get` accessor, as determined by internal reflection.</span></span>  
  
 <span data-ttu-id="07a40-356">Этот метод вызывается, когда вызывающий объект возвращает значение из <xref:System.Xaml.XamlMember.IsWriteOnly%2A>.</span><span class="sxs-lookup"><span data-stu-id="07a40-356">This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.IsWriteOnly%2A>.</span></span> <span data-ttu-id="07a40-357">Переопределите этот метод, если вы хотите сообщить о результатах универсальный код для всего <xref:System.Xaml.XamlMember> производного класса, или если специализированные метаданными, доступными определение для каждого случая.</span><span class="sxs-lookup"><span data-stu-id="07a40-357">Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.IsWriteOnly" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsWritePublic">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsWritePublic ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsWritePublic() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupIsWritePublic" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsWritePublic () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsWritePublic();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsWritePublic : unit -&gt; bool&#xA;override this.LookupIsWritePublic : unit -&gt; bool" Usage="xamlMember.LookupIsWritePublic " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="07a40-358">Возвращает ли это <see cref="T:System.Xaml.XamlMember" /> представляет член, имеющий открытый <see langword="set" /> метода доступа.</span><span class="sxs-lookup"><span data-stu-id="07a40-358">Returns whether this <see cref="T:System.Xaml.XamlMember" /> represents a member that has a public <see langword="set" /> accessor.</span></span></summary>
        <returns><span data-ttu-id="07a40-359"><see langword="true" /> Если этот <see cref="T:System.Xaml.XamlMember" /> представляет член, доступный для записи; в противном случае <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="07a40-359"><see langword="true" /> if this <see cref="T:System.Xaml.XamlMember" /> represents a writable member; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07a40-360">Реализация по умолчанию возвращает результаты на основе внутреннего отражения или отрицанием <xref:System.Xaml.XamlMember.IsReadOnly%2A>, обработку в указанном порядке.</span><span class="sxs-lookup"><span data-stu-id="07a40-360">The default implementation returns results based  either internal reflection or the negation of <xref:System.Xaml.XamlMember.IsReadOnly%2A>, processing in that order.</span></span>  
  
 <span data-ttu-id="07a40-361">Этот метод вызывается, когда вызывающий объект возвращает значение из <xref:System.Xaml.XamlMember.IsWritePublic%2A>.</span><span class="sxs-lookup"><span data-stu-id="07a40-361">This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.IsWritePublic%2A>.</span></span> <span data-ttu-id="07a40-362">Переопределите этот метод, если вы хотите сообщить о результатах универсальный код для всего <xref:System.Xaml.XamlMember> производного класса, или если специализированные метаданными, доступными определение для каждого случая.</span><span class="sxs-lookup"><span data-stu-id="07a40-362">Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="07a40-363"><xref:System.Xaml.XamlMember.LookupIsWritePublic%2A> Метод является виртуальным и таким образом, может быть переопределен.</span><span class="sxs-lookup"><span data-stu-id="07a40-363">The <xref:System.Xaml.XamlMember.LookupIsWritePublic%2A> method is virtual and therefore, can be overridden.</span></span> <span data-ttu-id="07a40-364">Переопределение обладает потенциалом (намеренно или иным способом) данные доступа члена XAML таким образом, чтобы он больше не соответствуют ожидаемым образом доступа к информации о системе типов из его базового объявления CLR.</span><span class="sxs-lookup"><span data-stu-id="07a40-364">The override has the potential to change (maliciously or otherwise) the reported access information of a XAML member so that it no longer aligns in an expected way with the type system access information of its underlying CLR declaration.</span></span> <span data-ttu-id="07a40-365">Для проверок с точки зрения безопасности уровни доступа используйте базовый тип среды CLR.</span><span class="sxs-lookup"><span data-stu-id="07a40-365">For any security-critical checks of access levels, use the underlying CLR type instead.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.IsWritePublic" />
      </Docs>
    </Member>
    <Member MemberName="LookupMarkupExtensionBracketCharacters">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IReadOnlyDictionary&lt;char,char&gt; LookupMarkupExtensionBracketCharacters ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IReadOnlyDictionary`2&lt;char, char&gt; LookupMarkupExtensionBracketCharacters() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupMarkupExtensionBracketCharacters" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupMarkupExtensionBracketCharacters () As IReadOnlyDictionary(Of Char, Char)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::Generic::IReadOnlyDictionary&lt;char, char&gt; ^ LookupMarkupExtensionBracketCharacters();" />
      <MemberSignature Language="F#" Value="abstract member LookupMarkupExtensionBracketCharacters : unit -&gt; System.Collections.Generic.IReadOnlyDictionary&lt;char, char&gt;&#xA;override this.LookupMarkupExtensionBracketCharacters : unit -&gt; System.Collections.Generic.IReadOnlyDictionary&lt;char, char&gt;" Usage="xamlMember.LookupMarkupExtensionBracketCharacters " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyDictionary&lt;System.Char,System.Char&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="07a40-366">Возвращает символы открывающей и закрывающей скобок для расширения разметки.</span><span class="sxs-lookup"><span data-stu-id="07a40-366">Returns the opening and closing bracket characters for a markup extension.</span></span></summary>
        <returns><span data-ttu-id="07a40-367">Коллекция, содержащая символы открывающих и закрывающих скобок.</span><span class="sxs-lookup"><span data-stu-id="07a40-367">A collection containing the opening and closing bracket characters.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupTargetType">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.XamlType LookupTargetType ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.XamlType LookupTargetType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupTargetType" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupTargetType () As XamlType" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::XamlType ^ LookupTargetType();" />
      <MemberSignature Language="F#" Value="abstract member LookupTargetType : unit -&gt; System.Xaml.XamlType&#xA;override this.LookupTargetType : unit -&gt; System.Xaml.XamlType" Usage="xamlMember.LookupTargetType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="07a40-368">Возвращает <see cref="T:System.Xaml.XamlType" /> типа где <see cref="T:System.Xaml.XamlMember" /> может существовать.</span><span class="sxs-lookup"><span data-stu-id="07a40-368">Returns the <see cref="T:System.Xaml.XamlType" /> of the type where the <see cref="T:System.Xaml.XamlMember" /> can exist.</span></span></summary>
        <returns><span data-ttu-id="07a40-369">Тип где <see cref="T:System.Xaml.XamlMember" /> может существовать.</span><span class="sxs-lookup"><span data-stu-id="07a40-369">The type where the <see cref="T:System.Xaml.XamlMember" /> can exist.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07a40-370">Реализация по умолчанию проводится различие между присоединяемого и не присоединяемых членов.</span><span class="sxs-lookup"><span data-stu-id="07a40-370">The default implementation distinguishes between attachable and non-attachable members.</span></span> <span data-ttu-id="07a40-371">Не присоединяемых членов <xref:System.Xaml.XamlMember.LookupTargetType%2A> всегда возвращает <xref:System.Xaml.XamlMember.DeclaringType%2A>.</span><span class="sxs-lookup"><span data-stu-id="07a40-371">For non-attachable members, <xref:System.Xaml.XamlMember.LookupTargetType%2A> always returns <xref:System.Xaml.XamlMember.DeclaringType%2A>.</span></span> <span data-ttu-id="07a40-372">Присоединяемых членов <xref:System.Xaml.XamlMember.LookupTargetType%2A> возвращает результат на основе анализа <xref:System.Xaml.XamlMember.UnderlyingMember%2A> тип параметра метода доступа и интерпретирует, что тип исходя из контекста схемы XAML.</span><span class="sxs-lookup"><span data-stu-id="07a40-372">For attachable members, <xref:System.Xaml.XamlMember.LookupTargetType%2A> returns a result based on examining the <xref:System.Xaml.XamlMember.UnderlyingMember%2A> accessor parameter type and interprets that type based on XAML schema context.</span></span>  
  
 <span data-ttu-id="07a40-373">Этот метод вызывается, когда вызывающий объект возвращает значение из <xref:System.Xaml.XamlMember.TargetType%2A>.</span><span class="sxs-lookup"><span data-stu-id="07a40-373">This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.TargetType%2A>.</span></span> <span data-ttu-id="07a40-374">Переопределите этот метод, если вы хотите сообщить о результатах универсальный код для всего <xref:System.Xaml.XamlMember> производного класса, или если специализированные метаданными, доступными определение для каждого случая.</span><span class="sxs-lookup"><span data-stu-id="07a40-374">Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.TargetType" />
      </Docs>
    </Member>
    <Member MemberName="LookupType">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.XamlType LookupType ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.XamlType LookupType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupType" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupType () As XamlType" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::XamlType ^ LookupType();" />
      <MemberSignature Language="F#" Value="abstract member LookupType : unit -&gt; System.Xaml.XamlType&#xA;override this.LookupType : unit -&gt; System.Xaml.XamlType" Usage="xamlMember.LookupType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="07a40-375">Возвращает <see cref="T:System.Xaml.XamlType" /> типа, который используется данным членом.</span><span class="sxs-lookup"><span data-stu-id="07a40-375">Returns the <see cref="T:System.Xaml.XamlType" /> of the type that is used by the member.</span></span></summary>
        <returns><span data-ttu-id="07a40-376"><see cref="T:System.Xaml.XamlType" /> Типа, который используется данным членом.</span><span class="sxs-lookup"><span data-stu-id="07a40-376">The <see cref="T:System.Xaml.XamlType" /> of the type that is used by the member.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07a40-377">Этот метод вызывается, когда вызывающий объект возвращает значение из <xref:System.Xaml.XamlMember.Type%2A>.</span><span class="sxs-lookup"><span data-stu-id="07a40-377">This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.Type%2A>.</span></span> <span data-ttu-id="07a40-378">Переопределите этот метод, если вы хотите, чтобы <xref:System.Xaml.XamlMember.Type%2A> возвращать значение, отличное от значения, которое включено по умолчанию внутреннего отражения, и если вы также предоставляете пользовательский <xref:System.Xaml.Schema.XamlMemberInvoker> сведения.</span><span class="sxs-lookup"><span data-stu-id="07a40-378">Override this method if you want <xref:System.Xaml.XamlMember.Type%2A> to return a value that differs from the value that is enabled by default internal reflection, and if you are also providing custom <xref:System.Xaml.Schema.XamlMemberInvoker> information.</span></span>  
  
 <span data-ttu-id="07a40-379">Реализация по умолчанию использует разных путей кода и концептуальные значения для возвращенного <xref:System.Xaml.XamlType> , основанный на ли это <xref:System.Xaml.XamlMember> представляет свойство, метод или событие.</span><span class="sxs-lookup"><span data-stu-id="07a40-379">The default implementation uses different code paths and conceptual meanings for the returned <xref:System.Xaml.XamlType> that is based on whether this <xref:System.Xaml.XamlMember> represents a property, method, or event.</span></span>  
  
-   <span data-ttu-id="07a40-380">Для свойства, возвращенного <xref:System.Xaml.XamlType> — тип, который задает свойство или возвращаемое свойство.</span><span class="sxs-lookup"><span data-stu-id="07a40-380">For a property, the returned <xref:System.Xaml.XamlType> is the type that sets the property or is returned by the property.</span></span>  
  
-   <span data-ttu-id="07a40-381">Для события, возвращенного <xref:System.Xaml.XamlType> — это тип обработчика событий (делегат в реализации CLR).</span><span class="sxs-lookup"><span data-stu-id="07a40-381">For an event, the returned <xref:System.Xaml.XamlType> is the required event handler type (a delegate in a CLR implementation).</span></span>  
  
-   <span data-ttu-id="07a40-382">Для метода <xref:System.Xaml.XamlType> является возвращаемым типом.</span><span class="sxs-lookup"><span data-stu-id="07a40-382">For a method, <xref:System.Xaml.XamlType> is the return type.</span></span>  
  
 <span data-ttu-id="07a40-383">В каждом случае контекст схемы XAML используется для определения типа XAML с базовым системным типом.</span><span class="sxs-lookup"><span data-stu-id="07a40-383">In each case, XAML schema context is used to evaluate the XAML type from the underlying system type.</span></span>  
  
 <span data-ttu-id="07a40-384">Этот метод вызывается, когда вызывающий объект возвращает значение из <xref:System.Xaml.XamlMember.Type%2A>.</span><span class="sxs-lookup"><span data-stu-id="07a40-384">This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.Type%2A>.</span></span> <span data-ttu-id="07a40-385">Переопределите этот метод, если вы хотите сообщить о результатах универсальный код для всего <xref:System.Xaml.XamlMember> производного класса, или если специализированные метаданными, доступными определение для каждого случая.</span><span class="sxs-lookup"><span data-stu-id="07a40-385">Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.Type" />
      </Docs>
    </Member>
    <Member MemberName="LookupTypeConverter">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt; LookupTypeConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.ComponentModel.TypeConverter&gt; LookupTypeConverter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupTypeConverter" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupTypeConverter () As XamlValueConverter(Of TypeConverter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::Schema::XamlValueConverter&lt;System::ComponentModel::TypeConverter ^&gt; ^ LookupTypeConverter();" />
      <MemberSignature Language="F#" Value="abstract member LookupTypeConverter : unit -&gt; System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt;&#xA;override this.LookupTypeConverter : unit -&gt; System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt;" Usage="xamlMember.LookupTypeConverter " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="07a40-386">Возвращает реализацию преобразователя типов, связанный с данным <see cref="T:System.Xaml.XamlMember" />.</span><span class="sxs-lookup"><span data-stu-id="07a40-386">Returns a type converter implementation that is associated with this <see cref="T:System.Xaml.XamlMember" />.</span></span></summary>
        <returns><span data-ttu-id="07a40-387">Объект <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> с экземпляром <see cref="T:System.ComponentModel.TypeConverter" /> ограничение; или <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="07a40-387">A <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> instance with <see cref="T:System.ComponentModel.TypeConverter" /> constraint; or <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07a40-388">Реализация по умолчанию использует следующую логику и порядок обработки:</span><span class="sxs-lookup"><span data-stu-id="07a40-388">The default implementation uses the following logic and processing order:</span></span>  
  
-   <span data-ttu-id="07a40-389">Если с атрибутами существует на уровне элементов (<xref:System.ComponentModel.TypeConverterAttribute>), сведения об атрибутах используется для вызова <xref:System.Xaml.XamlSchemaContext.GetValueConverter%2A> в контексте схемы XAML.</span><span class="sxs-lookup"><span data-stu-id="07a40-389">If attributing exists at the member level (<xref:System.ComponentModel.TypeConverterAttribute>), the attribute information is used for a call to <xref:System.Xaml.XamlSchemaContext.GetValueConverter%2A> against the XAML schema context.</span></span>  
  
-   <span data-ttu-id="07a40-390">Если <xref:System.Xaml.XamlMember.Type%2A> является допустимым, возвращается преобразователь типов, который связан с типом.</span><span class="sxs-lookup"><span data-stu-id="07a40-390">If <xref:System.Xaml.XamlMember.Type%2A> is valid, a type converter that is associated with the type is returned.</span></span>  
  
-   <span data-ttu-id="07a40-391">Если элемент является событием, возвращается преобразователь типов связанных с событием.</span><span class="sxs-lookup"><span data-stu-id="07a40-391">If the member is an event, an event-specific type converter is returned.</span></span>  
  
 <span data-ttu-id="07a40-392">Этот метод вызывается, когда вызывающий объект возвращает значение из <xref:System.Xaml.XamlMember.TypeConverter%2A>.</span><span class="sxs-lookup"><span data-stu-id="07a40-392">This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.TypeConverter%2A>.</span></span> <span data-ttu-id="07a40-393">Переопределите этот метод, если вы хотите сообщить о результатах универсальный код для всего <xref:System.Xaml.XamlMember> производного класса, или если специализированные метаданными, доступными определение для каждого случая.</span><span class="sxs-lookup"><span data-stu-id="07a40-393">Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.TypeConverter" />
      </Docs>
    </Member>
    <Member MemberName="LookupUnderlyingGetter">
      <MemberSignature Language="C#" Value="protected virtual System.Reflection.MethodInfo LookupUnderlyingGetter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Reflection.MethodInfo LookupUnderlyingGetter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupUnderlyingGetter" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupUnderlyingGetter () As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Reflection::MethodInfo ^ LookupUnderlyingGetter();" />
      <MemberSignature Language="F#" Value="abstract member LookupUnderlyingGetter : unit -&gt; System.Reflection.MethodInfo&#xA;override this.LookupUnderlyingGetter : unit -&gt; System.Reflection.MethodInfo" Usage="xamlMember.LookupUnderlyingGetter " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="07a40-394">Возвращает <see langword="get" /> метод доступа, который связан с данным <see cref="T:System.Xaml.XamlMember" />.</span><span class="sxs-lookup"><span data-stu-id="07a40-394">Returns a <see langword="get" /> accessor that is associated with this <see cref="T:System.Xaml.XamlMember" />.</span></span></summary>
        <returns><span data-ttu-id="07a40-395"><see cref="T:System.Reflection.MethodInfo" /> Для связанного <see langword="get" /> метод доступа; или <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="07a40-395">The <see cref="T:System.Reflection.MethodInfo" /> for the associated <see langword="get" /> accessor; or <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07a40-396">Реализация по умолчанию интерпретирует <xref:System.Xaml.XamlMember.UnderlyingMember%2A> свойство как <xref:System.Reflection.PropertyInfo> и возвращает значение <xref:System.Reflection.PropertyInfo.GetGetMethod%2A?displayProperty=nameWithType> (с параметром, имеющим `true`), что означает, что возвращаемый метод может быть закрытым.</span><span class="sxs-lookup"><span data-stu-id="07a40-396">The default implementation interprets the <xref:System.Xaml.XamlMember.UnderlyingMember%2A> property as <xref:System.Reflection.PropertyInfo> and returns the value of <xref:System.Reflection.PropertyInfo.GetGetMethod%2A?displayProperty=nameWithType> (with the parameter set to `true`), which means that the returned method can be nonpublic.</span></span> <span data-ttu-id="07a40-397">Это поведение может привести `null` некоторых случаях.</span><span class="sxs-lookup"><span data-stu-id="07a40-397">This behavior can result in `null` for certain cases.</span></span> <span data-ttu-id="07a40-398">включая случаи, когда связанный метод доступа не существует или член не является свойством.</span><span class="sxs-lookup"><span data-stu-id="07a40-398">including cases where no associated accessor exists or the member is not a property.</span></span>  
  
 <span data-ttu-id="07a40-399">Этот метод вызывается, когда вызывающий объект возвращает значение из <xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter%2A> свойства в связанном <xref:System.Xaml.Schema.XamlMemberInvoker>.</span><span class="sxs-lookup"><span data-stu-id="07a40-399">This method is invoked when a caller gets a value from the <xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter%2A> property on an associated <xref:System.Xaml.Schema.XamlMemberInvoker>.</span></span> <span data-ttu-id="07a40-400">Переопределите этот метод, если вы хотите сообщить о результатах универсальный код для всего <xref:System.Xaml.XamlMember> производного класса, или если специализированные метаданными, доступными определение для каждого случая.</span><span class="sxs-lookup"><span data-stu-id="07a40-400">Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.</span></span> <span data-ttu-id="07a40-401">Убедитесь, что <xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A>, <xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A>, и <xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A> таким образом, чтобы все они возвращают коррелированные результаты.</span><span class="sxs-lookup"><span data-stu-id="07a40-401">Make sure to implement <xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A>, <xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A>, and <xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A> so that they all return correlated results.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupUnderlyingMember">
      <MemberSignature Language="C#" Value="protected virtual System.Reflection.MemberInfo LookupUnderlyingMember ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Reflection.MemberInfo LookupUnderlyingMember() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupUnderlyingMember" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupUnderlyingMember () As MemberInfo" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Reflection::MemberInfo ^ LookupUnderlyingMember();" />
      <MemberSignature Language="F#" Value="abstract member LookupUnderlyingMember : unit -&gt; System.Reflection.MemberInfo&#xA;override this.LookupUnderlyingMember : unit -&gt; System.Reflection.MemberInfo" Usage="xamlMember.LookupUnderlyingMember " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="07a40-402">Возвращает системы типов среды CLR <see cref="T:System.Reflection.MemberInfo" /> , связанного с данным <see cref="T:System.Xaml.XamlMember" />.</span><span class="sxs-lookup"><span data-stu-id="07a40-402">Returns a CLR type system <see cref="T:System.Reflection.MemberInfo" /> that is associated with this <see cref="T:System.Xaml.XamlMember" />.</span></span></summary>
        <returns><span data-ttu-id="07a40-403">Системы типов среды CLR <see cref="T:System.Reflection.MemberInfo" /> объект, связанный с данным <see cref="T:System.Xaml.XamlMember" />; или <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="07a40-403">A CLR type system <see cref="T:System.Reflection.MemberInfo" /> object that is associated with this <see cref="T:System.Xaml.XamlMember" />; or <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07a40-404">Реализация по умолчанию возвращает базовые сведения о члене, основанное на построение.</span><span class="sxs-lookup"><span data-stu-id="07a40-404">The default implementation returns the underlying member information, which is based on construction.</span></span> <span data-ttu-id="07a40-405">Если <xref:System.Reflection.MemberInfo> объект создан с сигнатурой, которая не предоставляет достаточно сведений для установки базового элемента, этот метод возвращает `null`.</span><span class="sxs-lookup"><span data-stu-id="07a40-405">If the <xref:System.Reflection.MemberInfo> object is constructed with a signature that does not provide enough information to set the underlying member, this method returns `null`.</span></span>  
  
 <span data-ttu-id="07a40-406">Если базовый член был задан во время построения, нет необходимости вызывать этот метод.</span><span class="sxs-lookup"><span data-stu-id="07a40-406">If an underlying member was set during construction, you should not need to call this method.</span></span>  
  
 <span data-ttu-id="07a40-407">Этот метод вызывается, когда вызывающий объект возвращает значение из <xref:System.Xaml.XamlMember.UnderlyingMember%2A>.</span><span class="sxs-lookup"><span data-stu-id="07a40-407">This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.UnderlyingMember%2A>.</span></span> <span data-ttu-id="07a40-408">Переопределите этот метод, если вы хотите сообщить о результатах универсальный код для всего <xref:System.Xaml.XamlMember> производного класса, или если специализированные метаданными, доступными определение для каждого случая.</span><span class="sxs-lookup"><span data-stu-id="07a40-408">Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.</span></span> <span data-ttu-id="07a40-409">Убедитесь, что <xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A>, <xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A>, и <xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A> таким образом, чтобы все они возвращают коррелированные результаты.</span><span class="sxs-lookup"><span data-stu-id="07a40-409">Make sure to implement <xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A>, <xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A>, and <xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A> so that they all return correlated results.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.UnderlyingMember" />
      </Docs>
    </Member>
    <Member MemberName="LookupUnderlyingSetter">
      <MemberSignature Language="C#" Value="protected virtual System.Reflection.MethodInfo LookupUnderlyingSetter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Reflection.MethodInfo LookupUnderlyingSetter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupUnderlyingSetter" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupUnderlyingSetter () As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Reflection::MethodInfo ^ LookupUnderlyingSetter();" />
      <MemberSignature Language="F#" Value="abstract member LookupUnderlyingSetter : unit -&gt; System.Reflection.MethodInfo&#xA;override this.LookupUnderlyingSetter : unit -&gt; System.Reflection.MethodInfo" Usage="xamlMember.LookupUnderlyingSetter " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="07a40-410">Возвращает <see langword="set" /> метод доступа, который связан с данным <see cref="T:System.Xaml.XamlMember" />.</span><span class="sxs-lookup"><span data-stu-id="07a40-410">Returns a <see langword="set" /> accessor that is associated with this <see cref="T:System.Xaml.XamlMember" />.</span></span></summary>
        <returns><span data-ttu-id="07a40-411"><see cref="T:System.Reflection.MethodInfo" /> Для связанного <see langword="set" /> метод доступа; или <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="07a40-411">The <see cref="T:System.Reflection.MethodInfo" /> for the associated <see langword="set" /> accessor; or <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07a40-412">Реализация по умолчанию интерпретирует <xref:System.Xaml.XamlMember.UnderlyingMember%2A> как <xref:System.Reflection.PropertyInfo> и возвращает значение <xref:System.Reflection.PropertyInfo.GetSetMethod%2A?displayProperty=nameWithType> (с параметром, имеющим `true`), что означает, что возвращаемый метод может быть закрытым.</span><span class="sxs-lookup"><span data-stu-id="07a40-412">The default implementation interprets <xref:System.Xaml.XamlMember.UnderlyingMember%2A> as <xref:System.Reflection.PropertyInfo> and returns the value of <xref:System.Reflection.PropertyInfo.GetSetMethod%2A?displayProperty=nameWithType> (with the parameter set to `true`), which means that the returned method can be nonpublic.</span></span> <span data-ttu-id="07a40-413">Это может привести `null` для некоторых случаев, включая случаи, когда такой метод доступа отсутствует, или член не является свойством.</span><span class="sxs-lookup"><span data-stu-id="07a40-413">This can result in `null` for certain cases, including cases where there is no such accessor, or the member is not a property.</span></span>  
  
 <span data-ttu-id="07a40-414">Этот метод вызывается, когда вызывающий объект возвращает значение из <xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter%2A> в связанном <xref:System.Xaml.Schema.XamlMemberInvoker>. Переопределите этот метод, если вы хотите сообщить о результатах универсальный код для всего <xref:System.Xaml.XamlMember> производного класса, или если специализированные метаданными, доступными определение для каждого случая.</span><span class="sxs-lookup"><span data-stu-id="07a40-414">This method is invoked when a caller gets a value from <xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter%2A> on an associated <xref:System.Xaml.Schema.XamlMemberInvoker>.Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.</span></span> <span data-ttu-id="07a40-415">Убедитесь, что <xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A>, <xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A>, и <xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A> таким образом, чтобы все они возвращают коррелированные результаты.</span><span class="sxs-lookup"><span data-stu-id="07a40-415">Make sure to implement <xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A>, <xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A>, and <xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A> so that they all return correlated results.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupValueSerializer">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt; LookupValueSerializer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.Windows.Markup.ValueSerializer&gt; LookupValueSerializer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupValueSerializer" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupValueSerializer () As XamlValueConverter(Of ValueSerializer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::Schema::XamlValueConverter&lt;System::Windows::Markup::ValueSerializer ^&gt; ^ LookupValueSerializer();" />
      <MemberSignature Language="F#" Value="abstract member LookupValueSerializer : unit -&gt; System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt;&#xA;override this.LookupValueSerializer : unit -&gt; System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt;" Usage="xamlMember.LookupValueSerializer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="07a40-416">Возвращает реализацию сериализатора значений, связанный с данным <see cref="T:System.Xaml.XamlMember" />.</span><span class="sxs-lookup"><span data-stu-id="07a40-416">Returns a value serializer implementation that is associated with this <see cref="T:System.Xaml.XamlMember" />.</span></span></summary>
        <returns><span data-ttu-id="07a40-417">Объект <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> с экземпляром <see cref="T:System.Windows.Markup.ValueSerializer" /> ограничение, или <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="07a40-417">A <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> instance with <see cref="T:System.Windows.Markup.ValueSerializer" /> constraint, or <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07a40-418">Реализация по умолчанию использует следующую логику и порядок обработки:</span><span class="sxs-lookup"><span data-stu-id="07a40-418">The default implementation uses the following logic and processing order:</span></span>  
  
-   <span data-ttu-id="07a40-419">Если с атрибутами существует на уровне элементов (<xref:System.Windows.Markup.ValueSerializerAttribute>), сведения об атрибутах используется для вызова <xref:System.Xaml.XamlSchemaContext.GetValueConverter%2A> в контексте схемы XAML.</span><span class="sxs-lookup"><span data-stu-id="07a40-419">If attributing exists at the member level (<xref:System.Windows.Markup.ValueSerializerAttribute>), the attribute information is used for a call to <xref:System.Xaml.XamlSchemaContext.GetValueConverter%2A> against the XAML schema context.</span></span>  
  
-   <span data-ttu-id="07a40-420">Если <xref:System.Xaml.XamlMember.Type%2A> является допустимым, возвращается преобразователь значений, который связан с типом.</span><span class="sxs-lookup"><span data-stu-id="07a40-420">If <xref:System.Xaml.XamlMember.Type%2A> is valid, a value converter that is associated with the type is returned.</span></span>  
  
-   <span data-ttu-id="07a40-421">Если предыдущие условия не применяются, `null` возвращается.</span><span class="sxs-lookup"><span data-stu-id="07a40-421">If the previous conditions do not apply, `null` is returned.</span></span>  
  
 <span data-ttu-id="07a40-422">Этот метод вызывается, когда вызывающий объект возвращает значение из <xref:System.Xaml.XamlMember.ValueSerializer%2A>.</span><span class="sxs-lookup"><span data-stu-id="07a40-422">This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.ValueSerializer%2A>.</span></span> <span data-ttu-id="07a40-423">Переопределите этот метод, если вы хотите сообщить о результатах универсальный код для всего <xref:System.Xaml.XamlMember> производного класса, или если специализированные метаданными, доступными определение для каждого случая.</span><span class="sxs-lookup"><span data-stu-id="07a40-423">Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.ValueSerializer" />
      </Docs>
    </Member>
    <Member MemberName="MarkupExtensionBracketCharacters">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyDictionary&lt;char,char&gt; MarkupExtensionBracketCharacters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyDictionary`2&lt;char, char&gt; MarkupExtensionBracketCharacters" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.MarkupExtensionBracketCharacters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MarkupExtensionBracketCharacters As IReadOnlyDictionary(Of Char, Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IReadOnlyDictionary&lt;char, char&gt; ^ MarkupExtensionBracketCharacters { System::Collections::Generic::IReadOnlyDictionary&lt;char, char&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MarkupExtensionBracketCharacters : System.Collections.Generic.IReadOnlyDictionary&lt;char, char&gt;" Usage="System.Xaml.XamlMember.MarkupExtensionBracketCharacters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyDictionary&lt;System.Char,System.Char&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="07a40-424">Определяет символы открывающей и закрывающей скобок для расширения разметки.</span><span class="sxs-lookup"><span data-stu-id="07a40-424">Defines the opening and closing bracket characters for a markup extension.</span></span></summary>
        <value><span data-ttu-id="07a40-425">Коллекция, содержащая символы открывающих и закрывающих скобок.</span><span class="sxs-lookup"><span data-stu-id="07a40-425">A collection containing the opening and closing bracket characters.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Xaml.XamlMember.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="07a40-426">Получает <see langword="xamlName" /> , объявляющий это строковое представление имени <see cref="T:System.Xaml.XamlMember" />.</span><span class="sxs-lookup"><span data-stu-id="07a40-426">Gets the <see langword="xamlName" /> name string that declares this <see cref="T:System.Xaml.XamlMember" />.</span></span></summary>
        <value><span data-ttu-id="07a40-427"><see langword="xamlName" /> , Объявляющий это строковое представление имени <see cref="T:System.Xaml.XamlMember" />.</span><span class="sxs-lookup"><span data-stu-id="07a40-427">The <see langword="xamlName" /> name string that declares this <see cref="T:System.Xaml.XamlMember" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07a40-428">Это значение всегда имеет значение во время построения.</span><span class="sxs-lookup"><span data-stu-id="07a40-428">This value is always set during construction.</span></span> <span data-ttu-id="07a40-429">Конструкторы, которые реализуются <xref:System.Xaml.XamlMember> обычно создают исключение, если начальное имя не указано; таким образом, непредвиденным образом это свойство имело `null` или является пустой строкой, при использовании служб XAML .NET Framework по умолчанию в реализации.</span><span class="sxs-lookup"><span data-stu-id="07a40-429">The constructors that are implemented by <xref:System.Xaml.XamlMember> typically throw an exception if an initial name is not specified; therefore, do not expect this property to be `null` or an empty string, if you are using default .NET Framework XAML Services implementations.</span></span>  
  
 <span data-ttu-id="07a40-430">[Грамматика XamlName](~/docs/framework/xaml-services/xamlname-grammar.md) и правилам именования для членов и типов CLR не образуют точного пересечения.</span><span class="sxs-lookup"><span data-stu-id="07a40-430">[XamlName Grammar](~/docs/framework/xaml-services/xamlname-grammar.md) and naming rules for CLR type and members are not an exact intersect.</span></span> <span data-ttu-id="07a40-431">Это можно объявить имя элемента, которое является допустимым в среде CLR, но не является допустимым в области имен XAML.</span><span class="sxs-lookup"><span data-stu-id="07a40-431">It is possible to declare a member name that is legal under CLR but not valid under XAML naming.</span></span> <span data-ttu-id="07a40-432">По возможности следует избегать такой ситуации.</span><span class="sxs-lookup"><span data-stu-id="07a40-432">You should avoid this situation if possible.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/11e4cada-41d2-494d-9531-0d3df4dfcbe3"><span data-ttu-id="07a40-433">XamlName</span><span class="sxs-lookup"><span data-stu-id="07a40-433">XamlName</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Xaml.XamlMember xamlMember1, System.Xaml.XamlMember xamlMember2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(class System.Xaml.XamlMember xamlMember1, class System.Xaml.XamlMember xamlMember2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.op_Equality(System.Xaml.XamlMember,System.Xaml.XamlMember)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (xamlMember1 As XamlMember, xamlMember2 As XamlMember) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Xaml::XamlMember ^ xamlMember1, System::Xaml::XamlMember ^ xamlMember2);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Xaml.XamlMember * System.Xaml.XamlMember -&gt; bool" Usage="xamlMember1 = xamlMember2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xamlMember1" Type="System.Xaml.XamlMember" />
        <Parameter Name="xamlMember2" Type="System.Xaml.XamlMember" />
      </Parameters>
      <Docs>
        <param name="xamlMember1"><span data-ttu-id="07a40-434"><see cref="T:System.Xaml.XamlMember" /> или <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="07a40-434">A <see cref="T:System.Xaml.XamlMember" /> or <see langword="null" />.</span></span></param>
        <param name="xamlMember2"><span data-ttu-id="07a40-435"><see cref="T:System.Xaml.XamlMember" /> или <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="07a40-435">A <see cref="T:System.Xaml.XamlMember" /> or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="07a40-436">Определяет, совпадают ли значения двух указанных объектов <see cref="T:System.Xaml.XamlMember" />.</span><span class="sxs-lookup"><span data-stu-id="07a40-436">Determines whether two specified <see cref="T:System.Xaml.XamlMember" /> objects have the same value.</span></span></summary>
        <returns><span data-ttu-id="07a40-437">Значение <see langword="true" />, если значение параметра <paramref name="xamlMember1" /> совпадает со значением <paramref name="xamlMember2" />; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="07a40-437"><see langword="true" /> if the value of <paramref name="xamlMember1" /> is the same as the value of <paramref name="xamlMember2" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Xaml.XamlMember xamlMember1, System.Xaml.XamlMember xamlMember2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(class System.Xaml.XamlMember xamlMember1, class System.Xaml.XamlMember xamlMember2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.op_Inequality(System.Xaml.XamlMember,System.Xaml.XamlMember)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (xamlMember1 As XamlMember, xamlMember2 As XamlMember) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Xaml::XamlMember ^ xamlMember1, System::Xaml::XamlMember ^ xamlMember2);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Xaml.XamlMember * System.Xaml.XamlMember -&gt; bool" Usage="System.Xaml.XamlMember.op_Inequality (xamlMember1, xamlMember2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xamlMember1" Type="System.Xaml.XamlMember" />
        <Parameter Name="xamlMember2" Type="System.Xaml.XamlMember" />
      </Parameters>
      <Docs>
        <param name="xamlMember1"><span data-ttu-id="07a40-438"><see cref="T:System.Xaml.XamlMember" /> или <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="07a40-438">A <see cref="T:System.Xaml.XamlMember" /> or <see langword="null" />.</span></span></param>
        <param name="xamlMember2"><span data-ttu-id="07a40-439"><see cref="T:System.Xaml.XamlMember" /> или <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="07a40-439">A <see cref="T:System.Xaml.XamlMember" /> or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="07a40-440">Определяет, различаются ли значения двух указанных объектов <see cref="T:System.Xaml.XamlMember" />.</span><span class="sxs-lookup"><span data-stu-id="07a40-440">Determines whether two specified <see cref="T:System.Xaml.XamlMember" /> objects have different values.</span></span></summary>
        <returns><span data-ttu-id="07a40-441"><see langword="true" /> Если значение <paramref name="xamlMember1" /> отличается от значения <paramref name="xamlMember2" />; в противном случае <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="07a40-441"><see langword="true" /> if the value of <paramref name="xamlMember1" /> differs from the value of <paramref name="xamlMember2" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreferredXamlNamespace">
      <MemberSignature Language="C#" Value="public string PreferredXamlNamespace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PreferredXamlNamespace" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.PreferredXamlNamespace" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PreferredXamlNamespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PreferredXamlNamespace { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PreferredXamlNamespace : string" Usage="System.Xaml.XamlMember.PreferredXamlNamespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="07a40-442">Получает одно пространство имен XAML URI, определяющий первичное пространство имен XAML для данного <see cref="T:System.Xaml.XamlMember" />.</span><span class="sxs-lookup"><span data-stu-id="07a40-442">Gets the single XAML namespace URI that identifies the primary XAML namespace for this <see cref="T:System.Xaml.XamlMember" />.</span></span></summary>
        <value><span data-ttu-id="07a40-443">Идентификатор первичного пространства имен XAML для данного <see cref="T:System.Xaml.XamlMember" />, как строка.</span><span class="sxs-lookup"><span data-stu-id="07a40-443">The identifier for the primary XAML namespace for this <see cref="T:System.Xaml.XamlMember" />, as a string.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07a40-444"><xref:System.Xaml.XamlMember.PreferredXamlNamespace%2A> Свойство предоставляет то же значение, что и вызов метода <xref:System.Xaml.XamlMember.GetXamlNamespaces%2A> и затем получение первой строки значение из возвращенного списка.</span><span class="sxs-lookup"><span data-stu-id="07a40-444">The <xref:System.Xaml.XamlMember.PreferredXamlNamespace%2A> property provides the same value as calling <xref:System.Xaml.XamlMember.GetXamlNamespaces%2A> and then getting the first value string from the returned list.</span></span> <span data-ttu-id="07a40-445">Предпочтительный пространства имен XAML можно использовать при написании элемента к текст или другие представления, которые сохраняют сведения о пространстве имен XAML.</span><span class="sxs-lookup"><span data-stu-id="07a40-445">The preferred XAML namespace should be used when writing the member back to text or other representations that preserve XAML namespace information.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SerializationVisibility">
      <MemberSignature Language="C#" Value="public System.ComponentModel.DesignerSerializationVisibility SerializationVisibility { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ComponentModel.DesignerSerializationVisibility SerializationVisibility" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.SerializationVisibility" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SerializationVisibility As DesignerSerializationVisibility" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::DesignerSerializationVisibility SerializationVisibility { System::ComponentModel::DesignerSerializationVisibility get(); };" />
      <MemberSignature Language="F#" Value="member this.SerializationVisibility : System.ComponentModel.DesignerSerializationVisibility" Usage="System.Xaml.XamlMember.SerializationVisibility" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.DesignerSerializationVisibility</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="07a40-446">Возвращает <see cref="T:System.ComponentModel.DesignerSerializationVisibility" /> значение, которое указывает, как визуальный конструктор должен обрабатывать этот член.</span><span class="sxs-lookup"><span data-stu-id="07a40-446">Gets a <see cref="T:System.ComponentModel.DesignerSerializationVisibility" /> value, which indicates how a visual designer should process the member.</span></span></summary>
        <value><span data-ttu-id="07a40-447">Значение <see cref="T:System.ComponentModel.DesignerSerializationVisibility" /> перечисления.</span><span class="sxs-lookup"><span data-stu-id="07a40-447">A value of the <see cref="T:System.ComponentModel.DesignerSerializationVisibility" /> enumeration.</span></span> <span data-ttu-id="07a40-448">Значение по умолчанию — <see cref="F:System.ComponentModel.DesignerSerializationVisibility.Visible" />.</span><span class="sxs-lookup"><span data-stu-id="07a40-448">The default is <see cref="F:System.ComponentModel.DesignerSerializationVisibility.Visible" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetType">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlType TargetType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlType TargetType" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.TargetType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TargetType As XamlType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::XamlType ^ TargetType { System::Xaml::XamlType ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TargetType : System.Xaml.XamlType" Usage="System.Xaml.XamlMember.TargetType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="07a40-449">Получает <see cref="T:System.Xaml.XamlType" /> типа где <see cref="T:System.Xaml.XamlMember" /> может существовать.</span><span class="sxs-lookup"><span data-stu-id="07a40-449">Gets the <see cref="T:System.Xaml.XamlType" /> of the type where the <see cref="T:System.Xaml.XamlMember" /> can exist.</span></span></summary>
        <value><span data-ttu-id="07a40-450">Тип где <see cref="T:System.Xaml.XamlMember" /> может существовать.</span><span class="sxs-lookup"><span data-stu-id="07a40-450">The type where the <see cref="T:System.Xaml.XamlMember" /> can exist.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07a40-451">Возвращаемое значение отличается для присоединяемого и не присоединяемых членов.</span><span class="sxs-lookup"><span data-stu-id="07a40-451">The returned value is different for attachable and non-attachable members.</span></span> <span data-ttu-id="07a40-452">Не присоединяемых членов <xref:System.Xaml.XamlMember.TargetType%2A> возвращает <xref:System.Xaml.XamlMember.DeclaringType%2A>.</span><span class="sxs-lookup"><span data-stu-id="07a40-452">For non-attachable members, <xref:System.Xaml.XamlMember.TargetType%2A> returns <xref:System.Xaml.XamlMember.DeclaringType%2A>.</span></span> <span data-ttu-id="07a40-453">Присоединяемых членов <xref:System.Xaml.XamlMember.LookupTargetType%2A> возвращает результат, основанный на эту логику:</span><span class="sxs-lookup"><span data-stu-id="07a40-453">For attachable members, <xref:System.Xaml.XamlMember.LookupTargetType%2A> returns a result that is based on this logic:</span></span>  
  
-   <span data-ttu-id="07a40-454">Если отражение не может разрешить резервирование (<xref:System.Xaml.XamlMember.IsUnknown%2A> `true`), этот метод возвращает внутреннюю константу, представляющую тип универсального объекта.</span><span class="sxs-lookup"><span data-stu-id="07a40-454">If reflection cannot resolve a backing (<xref:System.Xaml.XamlMember.IsUnknown%2A> `true`), this method returns an internal constant that represents a generic object type.</span></span>  
  
-   <span data-ttu-id="07a40-455">Если предыдущее условие не применяется, <xref:System.Xaml.XamlMember.LookupTargetType%2A> вызывается.</span><span class="sxs-lookup"><span data-stu-id="07a40-455">If the previous condition does not apply, <xref:System.Xaml.XamlMember.LookupTargetType%2A> is called.</span></span> <span data-ttu-id="07a40-456">Реализация по умолчанию возвращает <xref:System.Xaml.XamlType> , основанный на изучение методов, реализующих `get` и `set` методы доступа.</span><span class="sxs-lookup"><span data-stu-id="07a40-456">The default implementation returns a <xref:System.Xaml.XamlType> that is based on examining the methods that implement the `get` and `set` accessors.</span></span> <span data-ttu-id="07a40-457">Класс может переопределить <xref:System.Xaml.XamlMember.LookupTargetType%2A> для использования другого поведения, такие, как другие метаданные форм может сообщить о целевых типов присоединяемых членов.</span><span class="sxs-lookup"><span data-stu-id="07a40-457">A class might override <xref:System.Xaml.XamlMember.LookupTargetType%2A> to use a different behavior such as other metadata forms that might report target types for attachable members.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="xamlMember.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="07a40-458">Возвращает строковое представление данного объекта <see cref="T:System.Xaml.XamlMember" />.</span><span class="sxs-lookup"><span data-stu-id="07a40-458">Returns a string representation of this <see cref="T:System.Xaml.XamlMember" />.</span></span></summary>
        <returns><span data-ttu-id="07a40-459">Строковое представление данного объекта <see cref="T:System.Xaml.XamlMember" />.</span><span class="sxs-lookup"><span data-stu-id="07a40-459">A string representation of this <see cref="T:System.Xaml.XamlMember" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07a40-460">Эта реализация возвращает <xref:System.Xaml.XamlMember.Name%2A>.</span><span class="sxs-lookup"><span data-stu-id="07a40-460">This implementation returns <xref:System.Xaml.XamlMember.Name%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlType Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlType Type" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.Type" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Type As XamlType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::XamlType ^ Type { System::Xaml::XamlType ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Type : System.Xaml.XamlType" Usage="System.Xaml.XamlMember.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="07a40-461">Получает <see cref="T:System.Xaml.XamlType" /> типа, который используется данным членом.</span><span class="sxs-lookup"><span data-stu-id="07a40-461">Gets the <see cref="T:System.Xaml.XamlType" /> of the type that is used by the member.</span></span></summary>
        <value><span data-ttu-id="07a40-462"><see cref="T:System.Xaml.XamlType" /> Типа, который используется данным членом.</span><span class="sxs-lookup"><span data-stu-id="07a40-462">The <see cref="T:System.Xaml.XamlType" /> of the type that is used by the member.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07a40-463">Вызов <xref:System.Xaml.XamlMember.Type%2A> вызывает <xref:System.Xaml.XamlMember.LookupType%2A> или конкретного переопределения этого метода.</span><span class="sxs-lookup"><span data-stu-id="07a40-463">Calling <xref:System.Xaml.XamlMember.Type%2A> invokes <xref:System.Xaml.XamlMember.LookupType%2A> or a specific override of that method.</span></span> <span data-ttu-id="07a40-464">Это происходит, когда логика начального внутреннего отражения не уже настроен.</span><span class="sxs-lookup"><span data-stu-id="07a40-464">This occurs when the initial internal reflection logic has not already set the information.</span></span>  
  
 <span data-ttu-id="07a40-465">Поведение по умолчанию (не <xref:System.Xaml.XamlMember.LookupType%2A> переопределить), возвращенного <xref:System.Xaml.XamlType> может иметь разные общие значения.</span><span class="sxs-lookup"><span data-stu-id="07a40-465">In the default behavior (no <xref:System.Xaml.XamlMember.LookupType%2A> override), the returned <xref:System.Xaml.XamlType> can have different conceptual meanings.</span></span> <span data-ttu-id="07a40-466">Применяемое значение зависит от того это <xref:System.Xaml.XamlMember> представляет свойство, метод или событие, как показано в следующем списке:</span><span class="sxs-lookup"><span data-stu-id="07a40-466">Which meaning applies depends on whether this <xref:System.Xaml.XamlMember> represents a property, method, or event, as the following list shows:</span></span>  
  
-   <span data-ttu-id="07a40-467">Для свойства, возвращенного <xref:System.Xaml.XamlType> — тип, который задает свойство или возвращаемое свойство.</span><span class="sxs-lookup"><span data-stu-id="07a40-467">For a property, the returned <xref:System.Xaml.XamlType> is the type that sets the property or is returned by the property.</span></span>  
  
-   <span data-ttu-id="07a40-468">Для события, возвращенного <xref:System.Xaml.XamlType> — это тип обработчика событий (делегат в реализации CLR).</span><span class="sxs-lookup"><span data-stu-id="07a40-468">For an event, the returned <xref:System.Xaml.XamlType> is the required event handler type (a delegate in a CLR implementation).</span></span>  
  
-   <span data-ttu-id="07a40-469">Для метода <xref:System.Xaml.XamlType> является тип возвращаемого значения этот метод, который может быть `null`.</span><span class="sxs-lookup"><span data-stu-id="07a40-469">For a method, <xref:System.Xaml.XamlType> is the return type of that method, which may be `null`.</span></span>  
  
 <span data-ttu-id="07a40-470">В каждом случае контекст схемы XAML используется для определения типа XAML из резервного типа.</span><span class="sxs-lookup"><span data-stu-id="07a40-470">In each case, the XAML schema context is used to evaluate the XAML type from the backing type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeConverter">
      <MemberSignature Language="C#" Value="public System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt; TypeConverter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.ComponentModel.TypeConverter&gt; TypeConverter" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.TypeConverter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TypeConverter As XamlValueConverter(Of TypeConverter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::Schema::XamlValueConverter&lt;System::ComponentModel::TypeConverter ^&gt; ^ TypeConverter { System::Xaml::Schema::XamlValueConverter&lt;System::ComponentModel::TypeConverter ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TypeConverter : System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt;" Usage="System.Xaml.XamlMember.TypeConverter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="07a40-471">Получает <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> объект, который может использоваться для создания конструкции преобразователя типов объектов, объявленных XAML.</span><span class="sxs-lookup"><span data-stu-id="07a40-471">Gets a <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> object, which can be used for type conversion construction of XAML declared objects.</span></span></summary>
        <value><span data-ttu-id="07a40-472">Объект <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> значение, с помощью <see cref="T:System.ComponentModel.TypeConverter" /> ограничения для универсального.</span><span class="sxs-lookup"><span data-stu-id="07a40-472">A <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> value, with a <see cref="T:System.ComponentModel.TypeConverter" /> constraint on the generic.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07a40-473">Вызов <xref:System.Xaml.XamlMember.TypeConverter%2A> вызывает <xref:System.Xaml.XamlMember.LookupTypeConverter%2A> или конкретного переопределения этого метода.</span><span class="sxs-lookup"><span data-stu-id="07a40-473">Calling <xref:System.Xaml.XamlMember.TypeConverter%2A> invokes <xref:System.Xaml.XamlMember.LookupTypeConverter%2A> or a specific override of that method.</span></span> <span data-ttu-id="07a40-474">Это происходит, когда логика начального внутреннего отражения не уже настроен.</span><span class="sxs-lookup"><span data-stu-id="07a40-474">This behavior occurs when the initial internal reflection logic has not already set the information.</span></span>  
  
 <span data-ttu-id="07a40-475">Реализации, которые возвращают свойство отличное от null значение для <xref:System.Xaml.XamlMember.TypeConverter%2A> не обязательно являются рабочее <xref:System.ComponentModel.TypeConverter>.</span><span class="sxs-lookup"><span data-stu-id="07a40-475">Implementations that return a non-null property value for <xref:System.Xaml.XamlMember.TypeConverter%2A> are not necessarily a working <xref:System.ComponentModel.TypeConverter>.</span></span> <span data-ttu-id="07a40-476">Ниже приведен список возможных возвращаемых значений от null для <xref:System.Xaml.XamlMember.TypeConverter%2A> и возможных значений:</span><span class="sxs-lookup"><span data-stu-id="07a40-476">The following is a list of possible non-null return values for <xref:System.Xaml.XamlMember.TypeConverter%2A> and what these values represent:</span></span>  
  
-   <span data-ttu-id="07a40-477">Возвращаемое значение сообщает преобразователь типов, помечается с членом, или более общем смысле конечный тип преобразователя.</span><span class="sxs-lookup"><span data-stu-id="07a40-477">The return value reports a type converter that is attributed specifically to that member or more generally to the target type of the converter.</span></span> <span data-ttu-id="07a40-478">Такое поведение обычно какие большинство системы типов XAML и искать процессоры XAML для создания экземпляра преобразователя типов и вызова его методов.</span><span class="sxs-lookup"><span data-stu-id="07a40-478">This behavior is typically what most XAML type systems and XAML processors look for in order to instantiate a type converter and invoke its methods.</span></span>  
  
-   <span data-ttu-id="07a40-479">Возвращаемое значение сообщает преобразователь встроенных значений.</span><span class="sxs-lookup"><span data-stu-id="07a40-479">The return value reports a built-in value converter.</span></span> <span data-ttu-id="07a40-480">Эти преобразователи существовать для некоторых внутренних операций, выполняемых модулем записи XAML.</span><span class="sxs-lookup"><span data-stu-id="07a40-480">These converters exist for certain internal operations that are performed by a XAML writer.</span></span> <span data-ttu-id="07a40-481">В частности эти встроенные преобразователи значений преобразования строковых значений атрибута строки примитивы языка XAML.</span><span class="sxs-lookup"><span data-stu-id="07a40-481">In particular, these built-in value converters convert the raw attribute string values to the XAML language-level primitives.</span></span> <span data-ttu-id="07a40-482">Для реализации служб XAML .NET Framework эти встроенные преобразования типа часто пересылают в преобразователь типов, который определен в сборке System.</span><span class="sxs-lookup"><span data-stu-id="07a40-482">For the .NET Framework XAML Services implementation, these built-in type conversions often forward to a type converter that is defined in the System assembly.</span></span> <span data-ttu-id="07a40-483">Например, преобразование для <xref:System.Int32> значение встроен перенаправленных преобразования и, следовательно, <xref:System.Xaml.Schema.XamlValueConverter%601.ConverterType%2A> значение ссылки <xref:System.ComponentModel.Int32Converter>.</span><span class="sxs-lookup"><span data-stu-id="07a40-483">For example, a conversion for an <xref:System.Int32> value has built-in forwarded conversion, and therefore, the <xref:System.Xaml.Schema.XamlValueConverter%601.ConverterType%2A> value references <xref:System.ComponentModel.Int32Converter>.</span></span>  
  
-   <span data-ttu-id="07a40-484">Возвращаемое значение сообщает особого случая неограниченной объектной модели; то есть <xref:System.Xaml.XamlMember> имеет <xref:System.Xaml.XamlMember.Type%2A> значение <xref:System.Object>.</span><span class="sxs-lookup"><span data-stu-id="07a40-484">The return value reports the special case of an unconstrained object model; that is, the <xref:System.Xaml.XamlMember> has a <xref:System.Xaml.XamlMember.Type%2A> value of <xref:System.Object>.</span></span> <span data-ttu-id="07a40-485">В этом случае <xref:System.Xaml.Schema.XamlValueConverter%601> сообщает, что <xref:System.Xaml.Schema.XamlValueConverter%601.Name%2A?displayProperty=nameWithType> — {`Object}`.</span><span class="sxs-lookup"><span data-stu-id="07a40-485">In this case, the <xref:System.Xaml.Schema.XamlValueConverter%601> reports that the <xref:System.Xaml.Schema.XamlValueConverter%601.Name%2A?displayProperty=nameWithType> is {`Object}`.</span></span> <span data-ttu-id="07a40-486">Тем не менее <xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A> является `null` , так как не фактический тип или экземпляр, для выполнения этого преобразования.</span><span class="sxs-lookup"><span data-stu-id="07a40-486">However, <xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A> is `null` because no actual type or instance is available to perform this conversion.</span></span> <span data-ttu-id="07a40-487">Вместо этого поведение модели объекта невозможно определить до времени выполнения, когда среда выполнения определенной технологии определяет обработку его графа объектов.</span><span class="sxs-lookup"><span data-stu-id="07a40-487">Instead, the object model behavior cannot be determined until run time, when the runtime of the specific technology determines the handling of its object graph.</span></span>  
  
 <span data-ttu-id="07a40-488">Если можно получить доступ к рабочей <xref:System.ComponentModel.TypeConverter> из <xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A>, можно вызывать его методы преобразования.</span><span class="sxs-lookup"><span data-stu-id="07a40-488">If you can access a working <xref:System.ComponentModel.TypeConverter> from <xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A>, you can invoke its conversion methods.</span></span> <span data-ttu-id="07a40-489">Тем не менее многие методы преобразования зависит от контекста службы.</span><span class="sxs-lookup"><span data-stu-id="07a40-489">However, many conversion methods rely on service context.</span></span> <span data-ttu-id="07a40-490">Если у вас же контекст службы, доступные ожидает что преобразователь типов для стандартной роли записи объектов для графов объектов, методы преобразователя можно вызывать исключения.</span><span class="sxs-lookup"><span data-stu-id="07a40-490">If you do not have the same service context available that the type converter expects for its typical role of writing objects for object graphs, the converter methods can throw exceptions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnderlyingMember">
      <MemberSignature Language="C#" Value="public System.Reflection.MemberInfo UnderlyingMember { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.MemberInfo UnderlyingMember" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.UnderlyingMember" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UnderlyingMember As MemberInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::MemberInfo ^ UnderlyingMember { System::Reflection::MemberInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UnderlyingMember : System.Reflection.MemberInfo" Usage="System.Xaml.XamlMember.UnderlyingMember" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="07a40-491">Получает системы типов среды CLR <see cref="T:System.Reflection.MemberInfo" /> доступный для члена, который создается с помощью <see cref="T:System.Reflection.PropertyInfo" />, <see cref="T:System.Reflection.MethodInfo" />, или <see cref="T:System.Reflection.EventInfo" />.</span><span class="sxs-lookup"><span data-stu-id="07a40-491">Gets the CLR type system <see cref="T:System.Reflection.MemberInfo" /> that is available for a member that is constructed by <see cref="T:System.Reflection.PropertyInfo" />, <see cref="T:System.Reflection.MethodInfo" />, or <see cref="T:System.Reflection.EventInfo" />.</span></span></summary>
        <value><span data-ttu-id="07a40-492">Системы типов среды CLR <see cref="T:System.Reflection.MemberInfo" /> сведения, преобразованные из исходных параметров конструктора.</span><span class="sxs-lookup"><span data-stu-id="07a40-492">CLR type system <see cref="T:System.Reflection.MemberInfo" /> information, as cast from the initial constructor parameters.</span></span> <span data-ttu-id="07a40-493">Объект <see cref="T:System.Xaml.XamlMember" /> , созданный с <see cref="M:System.Xaml.XamlMember.#ctor(System.String,System.Xaml.XamlType,System.Boolean)" /> сигнатура возвращает <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="07a40-493">A <see cref="T:System.Xaml.XamlMember" /> that is constructed with the <see cref="M:System.Xaml.XamlMember.#ctor(System.String,System.Xaml.XamlType,System.Boolean)" /> signature returns <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07a40-494">Вызов <xref:System.Xaml.XamlMember.UnderlyingMember%2A> вызывает <xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A> или конкретного переопределения этого метода.</span><span class="sxs-lookup"><span data-stu-id="07a40-494">Calling <xref:System.Xaml.XamlMember.UnderlyingMember%2A> invokes <xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A> or a specific override of that method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValueSerializer">
      <MemberSignature Language="C#" Value="public System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt; ValueSerializer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.Windows.Markup.ValueSerializer&gt; ValueSerializer" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.ValueSerializer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ValueSerializer As XamlValueConverter(Of ValueSerializer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::Schema::XamlValueConverter&lt;System::Windows::Markup::ValueSerializer ^&gt; ^ ValueSerializer { System::Xaml::Schema::XamlValueConverter&lt;System::Windows::Markup::ValueSerializer ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ValueSerializer : System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt;" Usage="System.Xaml.XamlMember.ValueSerializer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="07a40-495">Получает <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> объект, который используется для сериализации значений объектов, объявленных XAML.</span><span class="sxs-lookup"><span data-stu-id="07a40-495">Gets a <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> object, which is used for value serialization of XAML declared objects.</span></span></summary>
        <value><span data-ttu-id="07a40-496">Объект <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> с <see cref="T:System.Windows.Markup.ValueSerializer" /> ограничения для универсального.</span><span class="sxs-lookup"><span data-stu-id="07a40-496">A <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> with <see cref="T:System.Windows.Markup.ValueSerializer" /> constraint on the generic.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07a40-497">Вызов <xref:System.Xaml.XamlMember.ValueSerializer%2A> вызывает <xref:System.Xaml.XamlMember.LookupValueSerializer%2A> или конкретного переопределения этого метода.</span><span class="sxs-lookup"><span data-stu-id="07a40-497">Calling <xref:System.Xaml.XamlMember.ValueSerializer%2A> invokes <xref:System.Xaml.XamlMember.LookupValueSerializer%2A> or a specific override of that method.</span></span> <span data-ttu-id="07a40-498">Это происходит, когда логика начального внутреннего отражения не уже настроен.</span><span class="sxs-lookup"><span data-stu-id="07a40-498">This behavior occurs when the initial internal reflection logic has not already set the information.</span></span>  
  
 <span data-ttu-id="07a40-499">Не все варианты, которые возвращают свойство отличное от null значение для <xref:System.Xaml.XamlMember.ValueSerializer%2A> обязательно являются рабочее <xref:System.Windows.Markup.ValueSerializer>.</span><span class="sxs-lookup"><span data-stu-id="07a40-499">Not all cases that return a non-null property value for <xref:System.Xaml.XamlMember.ValueSerializer%2A> are necessarily a working <xref:System.Windows.Markup.ValueSerializer>.</span></span> <span data-ttu-id="07a40-500">См. в разделе <xref:System.Xaml.XamlMember.TypeConverter%2A>; эти же рекомендации будут применимы к <xref:System.Xaml.XamlMember.ValueSerializer%2A>.</span><span class="sxs-lookup"><span data-stu-id="07a40-500">See <xref:System.Xaml.XamlMember.TypeConverter%2A>; the same considerations apply to <xref:System.Xaml.XamlMember.ValueSerializer%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>