<Type Name="XamlMember" FullName="System.Xaml.XamlMember">
  <Metadata><Meta Name="ms.openlocfilehash" Value="eca9de4ba3e7db5769488f672b1fa19608582f9b" /><Meta Name="ms.sourcegitcommit" Value="2767b5903996fbd7e2b81eda1114dfc9d0d9db63" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="05/02/2019" /><Meta Name="ms.locfileid" Value="65014795" /></Metadata><TypeSignature Language="C#" Value="public class XamlMember : IEquatable&lt;System.Xaml.XamlMember&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XamlMember extends System.Object implements class System.IEquatable`1&lt;class System.Xaml.XamlMember&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.XamlMember" />
  <TypeSignature Language="VB.NET" Value="Public Class XamlMember&#xA;Implements IEquatable(Of XamlMember)" />
  <TypeSignature Language="C++ CLI" Value="public ref class XamlMember : IEquatable&lt;System::Xaml::XamlMember ^&gt;" />
  <TypeSignature Language="F#" Value="type XamlMember = class&#xA;    interface IEquatable&lt;XamlMember&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Xaml.XamlMember&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="7e819-101">Предоставляет системный идентификатор типа языка XAML для членов типов XAML.</span><span class="sxs-lookup"><span data-stu-id="7e819-101">Provides the XAML type system identifier for members of XAML types.</span></span> <span data-ttu-id="7e819-102">Этот идентификатор используется средствами чтения и записи XAML во время обработки узлов членов (когда средство чтения XAML находится в поле <see cref="F:System.Xaml.XamlNodeType.StartMember" />). Кроме того, он используется для общей логики системы типов XAML.</span><span class="sxs-lookup"><span data-stu-id="7e819-102">The identifier is used by XAML readers and XAML writers during processing of member nodes (when the XAML reader is positioned on a <see cref="F:System.Xaml.XamlNodeType.StartMember" />) and also for general XAML type system logic.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e819-103"><xref:System.Xaml.XamlMember>может использовать три методологии для возврата сведений о члене XAML: стандартное отражение среды CLR; метод отражения только для ссылок, вызывающий внутренние интерфейсы API, использующие оптимизированные битовые флаги; или вызов виртуальных переопределений `Lookup*` API, предоставляемых возможными <xref:System.Xaml.XamlMember> подклассами.</span><span class="sxs-lookup"><span data-stu-id="7e819-103"><xref:System.Xaml.XamlMember> can use three methodologies for returning information about a XAML member: standard common language runtime (CLR) reflection; a reference-only reflection technique calling internal APIs that use optimized bit flags; or calling into virtual overrides of the `Lookup*` API that is provided by possible <xref:System.Xaml.XamlMember> subclasses.</span></span> <span data-ttu-id="7e819-104">Для большинства случаев использования API-интерфейсов служб .NET Framework <xref:System.Xaml.XamlMember> XAML и API используется контекст схемы XAML по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="7e819-104">For most uses of .NET Framework XAML Services APIs and the <xref:System.Xaml.XamlMember> API, you use the default XAML schema context.</span></span> <span data-ttu-id="7e819-105">Контекст схемы XAML по умолчанию для служб .NET Framework XAML использует резервное копирование CLR для системы типов.</span><span class="sxs-lookup"><span data-stu-id="7e819-105">The default XAML schema context for .NET Framework XAML Services uses CLR backing for the type system.</span></span> <span data-ttu-id="7e819-106">Это позволяет средствам чтения и записи XAML работать с любым типом или членом, который определен в среде CLR и ее методах отражения или иным образом доступен.</span><span class="sxs-lookup"><span data-stu-id="7e819-106">This enables the XAML readers and XAML writers to work with any type or member that is defined in, or otherwise available to, the CLR and its reflection techniques.</span></span>  
  
## <a name="lookup-apis-and-xamlmember-derived-classes"></a><span data-ttu-id="7e819-107">API Lookup \* и производные классы Ксамлмембер</span><span class="sxs-lookup"><span data-stu-id="7e819-107">Lookup\* APIs and XamlMember Derived Classes</span></span>  
 <span data-ttu-id="7e819-108"><xref:System.Xaml.XamlMember>определяет несколько виртуальных членов, которые могут быть переопределены производными классами.</span><span class="sxs-lookup"><span data-stu-id="7e819-108"><xref:System.Xaml.XamlMember> defines several virtual members that derived classes might override.</span></span> <span data-ttu-id="7e819-109">Эти члены имеют имена, которые всегда начинаются со строки `Lookup`.</span><span class="sxs-lookup"><span data-stu-id="7e819-109">These members have names that always start with the string `Lookup`.</span></span> <span data-ttu-id="7e819-110">Оставшаяся часть имени API ссылается на свойство, которое влияет на виртуальный метод.</span><span class="sxs-lookup"><span data-stu-id="7e819-110">The remainder of the API name then references the property that the virtual method influences.</span></span> <span data-ttu-id="7e819-111">Например, <xref:System.Xaml.XamlMember> производный класс может переопределять <xref:System.Xaml.XamlMember.LookupTargetType%2A> , чтобы влиять на то, что базовое свойство <xref:System.Xaml.XamlMember.TargetType%2A> возвращает в производном классе.</span><span class="sxs-lookup"><span data-stu-id="7e819-111">For example, a <xref:System.Xaml.XamlMember> derived class might override <xref:System.Xaml.XamlMember.LookupTargetType%2A> to influence what the base-defined property <xref:System.Xaml.XamlMember.TargetType%2A> returns in a derived class.</span></span> <span data-ttu-id="7e819-112">Вы можете предсказать возвращаемые значения для таких свойств <xref:System.Xaml.XamlMember> в или существующих производных классах, прочитав документацию по соответствующим `Lookup*` методам.</span><span class="sxs-lookup"><span data-stu-id="7e819-112">You can predict return values for such properties in <xref:System.Xaml.XamlMember> or existing derived classes by reading the documentation for the relevant `Lookup*` methods.</span></span>  
  
 <span data-ttu-id="7e819-113">Назначение `Lookup*` методов заключается в том, чтобы предоставить метод расширения системы типов XAML, включающий <xref:System.Xaml.XamlMember> базовый класс.</span><span class="sxs-lookup"><span data-stu-id="7e819-113">The purpose of the `Lookup*` methods is to provide a XAML type system extension technique that incorporates the <xref:System.Xaml.XamlMember> base class.</span></span> <span data-ttu-id="7e819-114">При наследовании от <xref:System.Xaml.XamlMember> и `Lookup` переопределении виртуальных членов можно определить концепцию элемента XAML для схемы XAML в системе типов XAML без привязки к конкретным системам резервного типа или технологии.</span><span class="sxs-lookup"><span data-stu-id="7e819-114">By deriving from <xref:System.Xaml.XamlMember> and overriding the `Lookup` virtual members, you can define the concept of a XAML member for a XAML schema in a XAML type system without being tied to the specifics of a backing type system or technology.</span></span> <span data-ttu-id="7e819-115">Можно также использовать предоставленный контекст схемы XAML в этой схеме и по-прежнему возвращать нужные результаты.</span><span class="sxs-lookup"><span data-stu-id="7e819-115">You can also use a provided XAML schema context under this scheme and still return the results you want.</span></span>  
  
 <span data-ttu-id="7e819-116">В качестве примера рассмотрим <xref:System.Xaml.XamlMember> свойство. <xref:System.Xaml.XamlMember.IsWritePublic%2A></span><span class="sxs-lookup"><span data-stu-id="7e819-116">As an example, consider the <xref:System.Xaml.XamlMember> property <xref:System.Xaml.XamlMember.IsWritePublic%2A>.</span></span> <span data-ttu-id="7e819-117">Это свойство информирует вызывающие объекты о том, что операции, такие <xref:System.Xaml.XamlWriter> как использование для сериализации, могут записывать значение для этого элемента в целевом объекте.</span><span class="sxs-lookup"><span data-stu-id="7e819-117">This property informs callers that operations such as using a <xref:System.Xaml.XamlWriter> for serialization can write a value for this member on a target object.</span></span> <span data-ttu-id="7e819-118">В реализации по умолчанию определение, является ли член доступным для записи, с помощью методик отражения для резервной среды CLR <xref:System.Type> и ее членов <xref:System.Reflection.MemberInfo>().</span><span class="sxs-lookup"><span data-stu-id="7e819-118">In the default implementation, the determination of whether the member is writable is made by using reflection techniques against the backing CLR <xref:System.Type> and its members (the <xref:System.Reflection.MemberInfo>).</span></span> <span data-ttu-id="7e819-119">Таким образом, по умолчанию система типов XAML зависит от системы типов CLR.</span><span class="sxs-lookup"><span data-stu-id="7e819-119">Therefore, by default, the XAML type system depends on the CLR type system.</span></span> <span data-ttu-id="7e819-120">Однако эту зависимость можно удалить для отчетов <xref:System.Xaml.XamlMember.IsWritePublic%2A> системы типов XAML, переопределив API. <xref:System.Xaml.XamlMember.LookupIsWritePublic%2A></span><span class="sxs-lookup"><span data-stu-id="7e819-120">However, you can remove this dependency for your XAML type system reporting of <xref:System.Xaml.XamlMember.IsWritePublic%2A> by overriding the API <xref:System.Xaml.XamlMember.LookupIsWritePublic%2A>.</span></span> <span data-ttu-id="7e819-121">В рамках переопределения можно использовать другие определения, например метаданные, характерные для вашей технологии, главную таблицу уточняющих запросов, оптимизированную для фиксированного словаря XAML, или разнообразные другие стратегии определения того, доступен ли член XAML для записи в Словарь XAML.</span><span class="sxs-lookup"><span data-stu-id="7e819-121">Within your override, you can use other determinations, such as metadata that is specific to your technology, a master lookup table that is optimized for a fixed XAML vocabulary, or a variety of other strategies for determining whether a XAML member is writable in your XAML vocabulary.</span></span>  
  
## <a name="constructing-xamlmember-without-xaml-schema-context"></a><span data-ttu-id="7e819-122">Создание Ксамлмембер без контекста схемы XAML</span><span class="sxs-lookup"><span data-stu-id="7e819-122">Constructing XamlMember Without XAML Schema Context</span></span>  
 <span data-ttu-id="7e819-123">Для <xref:System.Xaml.XamlMember> большинства конструкторов <xref:System.Xaml.XamlSchemaContext> требуется как часть их инициализации.</span><span class="sxs-lookup"><span data-stu-id="7e819-123">Most constructors of <xref:System.Xaml.XamlMember> require a <xref:System.Xaml.XamlSchemaContext> as part of their initialization.</span></span> <span data-ttu-id="7e819-124">Компонент также необходим для многих внутренних <xref:System.Xaml.XamlSchemaContext> операций, например для получения сведений, пересылаемых из резервного типа. <xref:System.Xaml.XamlSchemaContext></span><span class="sxs-lookup"><span data-stu-id="7e819-124">The <xref:System.Xaml.XamlSchemaContext> is also necessary for many internal <xref:System.Xaml.XamlSchemaContext> operations, such as obtaining information that is being forwarded from the backing type.</span></span> <span data-ttu-id="7e819-125">При работе с <xref:System.Xaml.XamlMember> API обычно имеется объект <xref:System.Xaml.XamlSchemaContext> , доступный из <xref:System.Xaml.XamlWriter>окружающей конструкции, такой как.</span><span class="sxs-lookup"><span data-stu-id="7e819-125">When you are working with the <xref:System.Xaml.XamlMember> API, you typically have a <xref:System.Xaml.XamlSchemaContext> that is available from a surrounding construct such as a <xref:System.Xaml.XamlWriter>.</span></span> <span data-ttu-id="7e819-126">В этом случае можно передать <xref:System.Xaml.XamlSchemaContext> ссылку на все системные вызовы типов XAML, для которых требуется контекст схемы XAML.</span><span class="sxs-lookup"><span data-stu-id="7e819-126">In this case, you can pass the <xref:System.Xaml.XamlSchemaContext> reference through to all XAML type system calls that require a XAML schema context.</span></span>  
  
 <span data-ttu-id="7e819-127"><xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29> Для<xref:System.Xaml.XamlSchemaContext>одного конкретного конструктора,, не требуется.</span><span class="sxs-lookup"><span data-stu-id="7e819-127">One specific constructor, <xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29>, does not require a <xref:System.Xaml.XamlSchemaContext>.</span></span> <span data-ttu-id="7e819-128">Однако, <xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29> `true` который создается с сигнатурой, возвращает для <xref:System.Xaml.XamlMember.IsUnknown%2A>. <xref:System.Xaml.XamlMember></span><span class="sxs-lookup"><span data-stu-id="7e819-128">However, a <xref:System.Xaml.XamlMember> that is constructed with the <xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29> signature returns `true` for <xref:System.Xaml.XamlMember.IsUnknown%2A>.</span></span>  
  
 <span data-ttu-id="7e819-129">Для пути загрузки, включающего <xref:System.Xaml.XamlObjectWriter>в себя, такой элемент не может быть записан в граф объектов.</span><span class="sxs-lookup"><span data-stu-id="7e819-129">For a load path that involves <xref:System.Xaml.XamlObjectWriter>, such a member cannot be written into an object graph.</span></span> <span data-ttu-id="7e819-130">Используя .NET Framework реализацию служб XAML, <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=nameWithType> вызов создает исключение, <xref:System.Xaml.XamlObjectWriterException> когда соответствующие <xref:System.Xaml.XamlMember> отчеты `true` для <xref:System.Xaml.XamlMember.IsUnknown%2A>.</span><span class="sxs-lookup"><span data-stu-id="7e819-130">Using the .NET Framework XAML services implementation, the <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=nameWithType> call throws a <xref:System.Xaml.XamlObjectWriterException> when the relevant <xref:System.Xaml.XamlMember> reports `true` for <xref:System.Xaml.XamlMember.IsUnknown%2A>.</span></span>  
  
 <span data-ttu-id="7e819-131"><xref:System.Xaml.XamlMember> Не следует создавать объект, имеющий `true` значение для <xref:System.Xaml.XamlMember.IsUnknown%2A> , если только ваша реализация не может выполнять обработку исключений <xref:System.Xaml.XamlObjectWriter>из или у вас есть другие способы настройки <xref:System.Xaml.XamlObjectWriter> поведения.</span><span class="sxs-lookup"><span data-stu-id="7e819-131">You should not construct a <xref:System.Xaml.XamlMember> that has a value of `true` for <xref:System.Xaml.XamlMember.IsUnknown%2A> unless your implementation can handle the exceptions from <xref:System.Xaml.XamlObjectWriter>, or you have other ways to adjust the <xref:System.Xaml.XamlObjectWriter> behavior.</span></span> <span data-ttu-id="7e819-132">Например, для реализации может потребоваться одно или несколько из следующих условий:</span><span class="sxs-lookup"><span data-stu-id="7e819-132">For example, one or more of the  following might be true of your implementation:</span></span>  
  
-   <span data-ttu-id="7e819-133">Контекст схемы XAML доступен позже.</span><span class="sxs-lookup"><span data-stu-id="7e819-133">The XAML schema context is available later.</span></span>  
  
-   <span data-ttu-id="7e819-134">Используется шаблон вызова члена.</span><span class="sxs-lookup"><span data-stu-id="7e819-134">You use a member invoker pattern.</span></span>  
  
-   <span data-ttu-id="7e819-135">Намеренно переопределяется <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=nameWithType> в пользовательском модуле записи XAML.</span><span class="sxs-lookup"><span data-stu-id="7e819-135">You deliberately override <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=nameWithType> in a custom XAML writer.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xaml.XamlType" />
    <altmember cref="T:System.Xaml.XamlDirective" />
    <altmember cref="T:System.Xaml.XamlObjectWriter" />
    <related type="Article" href="https://msdn.microsoft.com/library/7c11abec-1075-474c-9d9b-778e5dab21c3"><span data-ttu-id="7e819-136">Общее представление о понятиях и структурах потока узлов XAML</span><span class="sxs-lookup"><span data-stu-id="7e819-136">Understanding XAML Node Stream Structures and Concepts</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7e819-137">Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlMember" />.</span><span class="sxs-lookup"><span data-stu-id="7e819-137">Initializes a new instance of the <see cref="T:System.Xaml.XamlMember" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlMember (System.Reflection.EventInfo eventInfo, System.Xaml.XamlSchemaContext schemaContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Reflection.EventInfo eventInfo, class System.Xaml.XamlSchemaContext schemaContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.#ctor(System.Reflection.EventInfo,System.Xaml.XamlSchemaContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlMember(System::Reflection::EventInfo ^ eventInfo, System::Xaml::XamlSchemaContext ^ schemaContext);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlMember : System.Reflection.EventInfo * System.Xaml.XamlSchemaContext -&gt; System.Xaml.XamlMember" Usage="new System.Xaml.XamlMember (eventInfo, schemaContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="eventInfo" Type="System.Reflection.EventInfo" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
      </Parameters>
      <Docs>
        <param name="eventInfo"><span data-ttu-id="7e819-138">Объект <see cref="T:System.Reflection.EventInfo" /> системы типов среды CLR, представляющий член события.</span><span class="sxs-lookup"><span data-stu-id="7e819-138">The CLR type system <see cref="T:System.Reflection.EventInfo" /> that represents the event member.</span></span></param>
        <param name="schemaContext"><span data-ttu-id="7e819-139">Контекст <see cref="T:System.Xaml.XamlSchemaContext" />, определяющий член.</span><span class="sxs-lookup"><span data-stu-id="7e819-139">The <see cref="T:System.Xaml.XamlSchemaContext" /> context that qualifies the member.</span></span></param>
        <summary><span data-ttu-id="7e819-140">Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlMember" /> объектами <see cref="T:System.Reflection.EventInfo" /> и <see cref="T:System.Xaml.XamlSchemaContext" /> системы типов среды CLR.</span><span class="sxs-lookup"><span data-stu-id="7e819-140">Initializes a new instance of the <see cref="T:System.Xaml.XamlMember" /> class using CLR type system <see cref="T:System.Reflection.EventInfo" /> and a <see cref="T:System.Xaml.XamlSchemaContext" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e819-141">Используйте этот конструктор, если элемент представляет событие (свойство точки соединения обработчика событий).</span><span class="sxs-lookup"><span data-stu-id="7e819-141">Use this constructor if the member represents an event (event handler connection-point property).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlMember (System.Reflection.PropertyInfo propertyInfo, System.Xaml.XamlSchemaContext schemaContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Reflection.PropertyInfo propertyInfo, class System.Xaml.XamlSchemaContext schemaContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.#ctor(System.Reflection.PropertyInfo,System.Xaml.XamlSchemaContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlMember(System::Reflection::PropertyInfo ^ propertyInfo, System::Xaml::XamlSchemaContext ^ schemaContext);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlMember : System.Reflection.PropertyInfo * System.Xaml.XamlSchemaContext -&gt; System.Xaml.XamlMember" Usage="new System.Xaml.XamlMember (propertyInfo, schemaContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="propertyInfo" Type="System.Reflection.PropertyInfo" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
      </Parameters>
      <Docs>
        <param name="propertyInfo"><span data-ttu-id="7e819-142">Объект <see cref="T:System.Reflection.PropertyInfo" /> системы типов среды CLR, представляющий член свойства.</span><span class="sxs-lookup"><span data-stu-id="7e819-142">The CLR type system <see cref="T:System.Reflection.PropertyInfo" /> that represents the property member.</span></span></param>
        <param name="schemaContext"><span data-ttu-id="7e819-143">Контекст <see cref="T:System.Xaml.XamlSchemaContext" />, определяющий член.</span><span class="sxs-lookup"><span data-stu-id="7e819-143">The <see cref="T:System.Xaml.XamlSchemaContext" /> context that qualifies the member.</span></span></param>
        <summary><span data-ttu-id="7e819-144">Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlMember" /> объектами <see cref="T:System.Reflection.PropertyInfo" /> и <see cref="T:System.Xaml.XamlSchemaContext" /> системы типов среды CLR.</span><span class="sxs-lookup"><span data-stu-id="7e819-144">Initializes a new instance of the <see cref="T:System.Xaml.XamlMember" /> class using CLR type system <see cref="T:System.Reflection.PropertyInfo" /> and a <see cref="T:System.Xaml.XamlSchemaContext" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e819-145">Используйте этот конструктор, если элемент представляет свойство (и в частности не является соединением обработчика событий).</span><span class="sxs-lookup"><span data-stu-id="7e819-145">Use this constructor if the member represents a property (and specifically is not an event handler connection).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlMember (System.Reflection.EventInfo eventInfo, System.Xaml.XamlSchemaContext schemaContext, System.Xaml.Schema.XamlMemberInvoker invoker);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Reflection.EventInfo eventInfo, class System.Xaml.XamlSchemaContext schemaContext, class System.Xaml.Schema.XamlMemberInvoker invoker) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.#ctor(System.Reflection.EventInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlMember(System::Reflection::EventInfo ^ eventInfo, System::Xaml::XamlSchemaContext ^ schemaContext, System::Xaml::Schema::XamlMemberInvoker ^ invoker);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlMember : System.Reflection.EventInfo * System.Xaml.XamlSchemaContext * System.Xaml.Schema.XamlMemberInvoker -&gt; System.Xaml.XamlMember" Usage="new System.Xaml.XamlMember (eventInfo, schemaContext, invoker)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="eventInfo" Type="System.Reflection.EventInfo" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
        <Parameter Name="invoker" Type="System.Xaml.Schema.XamlMemberInvoker" />
      </Parameters>
      <Docs>
        <param name="eventInfo"><span data-ttu-id="7e819-146">Объект <see cref="T:System.Reflection.EventInfo" /> системы типов среды CLR, представляющий член события.</span><span class="sxs-lookup"><span data-stu-id="7e819-146">The CLR type system <see cref="T:System.Reflection.EventInfo" /> that represents the event member.</span></span></param>
        <param name="schemaContext"><span data-ttu-id="7e819-147">Контекст <see cref="T:System.Xaml.XamlSchemaContext" />, определяющий член.</span><span class="sxs-lookup"><span data-stu-id="7e819-147">The <see cref="T:System.Xaml.XamlSchemaContext" /> context that qualifies the member.</span></span></param>
        <param name="invoker"><span data-ttu-id="7e819-148">Реализация <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />, которая обрабатывает вызовы отражения во время выполнения, адресованные объекту <see cref="T:System.Xaml.XamlMember" />.</span><span class="sxs-lookup"><span data-stu-id="7e819-148">The <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> implementation that handles run-time reflection calls against the <see cref="T:System.Xaml.XamlMember" />.</span></span></param>
        <summary><span data-ttu-id="7e819-149">Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlMember" /> объектами <see cref="T:System.Reflection.EventInfo" /> и <see cref="T:System.Xaml.XamlSchemaContext" /> системы типов среды CLR, включая сведения объекта <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</span><span class="sxs-lookup"><span data-stu-id="7e819-149">Initializes a new instance of the <see cref="T:System.Xaml.XamlMember" /> class using CLR type system <see cref="T:System.Reflection.EventInfo" /> and a <see cref="T:System.Xaml.XamlSchemaContext" />, including <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> information.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e819-150">Используйте этот конструктор, если элемент представляет событие (или свойство точки соединения обработчика событий).</span><span class="sxs-lookup"><span data-stu-id="7e819-150">Use this constructor if the member represents an event (or an event handler connection-point property).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlMember (System.Reflection.PropertyInfo propertyInfo, System.Xaml.XamlSchemaContext schemaContext, System.Xaml.Schema.XamlMemberInvoker invoker);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Reflection.PropertyInfo propertyInfo, class System.Xaml.XamlSchemaContext schemaContext, class System.Xaml.Schema.XamlMemberInvoker invoker) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.#ctor(System.Reflection.PropertyInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlMember(System::Reflection::PropertyInfo ^ propertyInfo, System::Xaml::XamlSchemaContext ^ schemaContext, System::Xaml::Schema::XamlMemberInvoker ^ invoker);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlMember : System.Reflection.PropertyInfo * System.Xaml.XamlSchemaContext * System.Xaml.Schema.XamlMemberInvoker -&gt; System.Xaml.XamlMember" Usage="new System.Xaml.XamlMember (propertyInfo, schemaContext, invoker)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="propertyInfo" Type="System.Reflection.PropertyInfo" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
        <Parameter Name="invoker" Type="System.Xaml.Schema.XamlMemberInvoker" />
      </Parameters>
      <Docs>
        <param name="propertyInfo"><span data-ttu-id="7e819-151">Объект <see cref="T:System.Reflection.PropertyInfo" /> системы типов среды CLR, представляющий член свойства.</span><span class="sxs-lookup"><span data-stu-id="7e819-151">The CLR type system <see cref="T:System.Reflection.PropertyInfo" /> that represents the property member.</span></span></param>
        <param name="schemaContext"><span data-ttu-id="7e819-152">Контекст <see cref="T:System.Xaml.XamlSchemaContext" />, определяющий член.</span><span class="sxs-lookup"><span data-stu-id="7e819-152">The <see cref="T:System.Xaml.XamlSchemaContext" /> context that qualifies the member.</span></span></param>
        <param name="invoker"><span data-ttu-id="7e819-153">Реализация <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />, которая обрабатывает вызовы времени выполнения, адресованные объекту <see cref="T:System.Xaml.XamlMember" />.</span><span class="sxs-lookup"><span data-stu-id="7e819-153">The <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> implementation that handles run-time invocation calls against the <see cref="T:System.Xaml.XamlMember" />.</span></span></param>
        <summary><span data-ttu-id="7e819-154">Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlMember" /> объектами <see cref="T:System.Reflection.PropertyInfo" /> и <see cref="T:System.Xaml.XamlSchemaContext" /> отражения, включая сведения объекта <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</span><span class="sxs-lookup"><span data-stu-id="7e819-154">Initializes a new instance of the <see cref="T:System.Xaml.XamlMember" /> class using reflection <see cref="T:System.Reflection.PropertyInfo" /> and a <see cref="T:System.Xaml.XamlSchemaContext" />, including <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> information.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e819-155">Используйте этот конструктор, только если элемент представляет свойство и не является соединением обработчика событий.</span><span class="sxs-lookup"><span data-stu-id="7e819-155">Use this constructor only if the member represents a property and if it is not an event handler connection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlMember (string attachableEventName, System.Reflection.MethodInfo adder, System.Xaml.XamlSchemaContext schemaContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string attachableEventName, class System.Reflection.MethodInfo adder, class System.Xaml.XamlSchemaContext schemaContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (attachableEventName As String, adder As MethodInfo, schemaContext As XamlSchemaContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlMember(System::String ^ attachableEventName, System::Reflection::MethodInfo ^ adder, System::Xaml::XamlSchemaContext ^ schemaContext);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlMember : string * System.Reflection.MethodInfo * System.Xaml.XamlSchemaContext -&gt; System.Xaml.XamlMember" Usage="new System.Xaml.XamlMember (attachableEventName, adder, schemaContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="attachableEventName" Type="System.String" />
        <Parameter Name="adder" Type="System.Reflection.MethodInfo" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
      </Parameters>
      <Docs>
        <param name="attachableEventName"><span data-ttu-id="7e819-156">Строковое имя присоединяемого события.</span><span class="sxs-lookup"><span data-stu-id="7e819-156">The string name of the attachable event.</span></span></param>
        <param name="adder"><span data-ttu-id="7e819-157">Объект <see cref="T:System.Reflection.MethodInfo" /> системы типов среды CLR для метода <see langword="Add" /> обработчика базовой реализации присоединяемого члена.</span><span class="sxs-lookup"><span data-stu-id="7e819-157">The CLR type system <see cref="T:System.Reflection.MethodInfo" /> for the handler <see langword="Add" /> method of the attachable member's backing implementation.</span></span></param>
        <param name="schemaContext"><span data-ttu-id="7e819-158">Контекст <see cref="T:System.Xaml.XamlSchemaContext" />, определяющий член.</span><span class="sxs-lookup"><span data-stu-id="7e819-158">The <see cref="T:System.Xaml.XamlSchemaContext" /> context that qualifies the member.</span></span></param>
        <summary><span data-ttu-id="7e819-159">Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlMember" /> для объекта <see cref="T:System.Xaml.XamlMember" />, представляющего присоединяемое событие.</span><span class="sxs-lookup"><span data-stu-id="7e819-159">Initializes a new instance of the <see cref="T:System.Xaml.XamlMember" /> class for a <see cref="T:System.Xaml.XamlMember" /> that represents an attachable event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e819-160">Используйте этот конструктор, если элемент представляет присоединяемый член события.</span><span class="sxs-lookup"><span data-stu-id="7e819-160">Use this constructor if the member represents an attachable event member.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlMember (string name, System.Xaml.XamlType declaringType, bool isAttachable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, class System.Xaml.XamlType declaringType, bool isAttachable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.#ctor(System.String,System.Xaml.XamlType,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, declaringType As XamlType, isAttachable As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlMember(System::String ^ name, System::Xaml::XamlType ^ declaringType, bool isAttachable);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlMember : string * System.Xaml.XamlType * bool -&gt; System.Xaml.XamlMember" Usage="new System.Xaml.XamlMember (name, declaringType, isAttachable)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="declaringType" Type="System.Xaml.XamlType" />
        <Parameter Name="isAttachable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="7e819-161">Строковое имя члена.</span><span class="sxs-lookup"><span data-stu-id="7e819-161">The string name of the member.</span></span></param>
        <param name="declaringType"><span data-ttu-id="7e819-162">Сведения <see cref="T:System.Xaml.XamlType" /> для объявляемого типа.</span><span class="sxs-lookup"><span data-stu-id="7e819-162">The <see cref="T:System.Xaml.XamlType" /> information for the declaring type.</span></span></param>
        <param name="isAttachable"><span data-ttu-id="7e819-163">Значение <see langword="true" />, если необходимо указать, что член является присоединяемым; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="7e819-163"><see langword="true" /> to indicate that the member is attachable; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="7e819-164">Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlMember" />, используя строковое имя и сведения об объявляющем типе <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="7e819-164">Initializes a new instance of the <see cref="T:System.Xaml.XamlMember" /> class using a string name and declaring <see cref="T:System.Xaml.XamlType" /> information.</span></span> <span data-ttu-id="7e819-165">Объект <see cref="T:System.Xaml.XamlMember" />, созданный с данной сигнатурой, имеет значительные ограничения.</span><span class="sxs-lookup"><span data-stu-id="7e819-165">A <see cref="T:System.Xaml.XamlMember" /> that is constructed with this signature has significant limitations.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e819-166">Объект <xref:System.Xaml.XamlMember> , созданный <xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29> с сигнатурой, возвращает `true` для <xref:System.Xaml.XamlMember.IsUnknown%2A>.</span><span class="sxs-lookup"><span data-stu-id="7e819-166">A <xref:System.Xaml.XamlMember> that is constructed with the <xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29> signature returns `true` for <xref:System.Xaml.XamlMember.IsUnknown%2A>.</span></span>  
  
 <span data-ttu-id="7e819-167">Для пути загрузки, включающего <xref:System.Xaml.XamlObjectWriter>в себя, такой элемент не может быть записан в граф объектов.</span><span class="sxs-lookup"><span data-stu-id="7e819-167">For a load path that involves <xref:System.Xaml.XamlObjectWriter>, such a member cannot be written into an object graph.</span></span> <span data-ttu-id="7e819-168">Используя .NET Framework реализацию служб XAML, <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=nameWithType> вызов создает исключение, <xref:System.Xaml.XamlObjectWriterException> когда соответствующие <xref:System.Xaml.XamlMember> отчеты `true` для <xref:System.Xaml.XamlMember.IsUnknown%2A>.</span><span class="sxs-lookup"><span data-stu-id="7e819-168">Using the .NET Framework XAML Services implementation, the <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=nameWithType> call throws a <xref:System.Xaml.XamlObjectWriterException> when the relevant <xref:System.Xaml.XamlMember> reports `true` for <xref:System.Xaml.XamlMember.IsUnknown%2A>.</span></span>  
  
 <span data-ttu-id="7e819-169">Не <xref:System.Xaml.XamlMember> следует создавать с помощью, <xref:System.Xaml.XamlMember.IsUnknown%2A> если ваша реализация не может обменять <xref:System.Xaml.XamlObjectWriter> `true` исключения из или у вас есть другие способы настройки <xref:System.Xaml.XamlObjectWriter> поведения.</span><span class="sxs-lookup"><span data-stu-id="7e819-169">You should not construct a <xref:System.Xaml.XamlMember> with <xref:System.Xaml.XamlMember.IsUnknown%2A>`true` unless your implementation can handle the exceptions from <xref:System.Xaml.XamlObjectWriter>, or you have other ways to adjust the <xref:System.Xaml.XamlObjectWriter> behavior.</span></span> <span data-ttu-id="7e819-170">Например, для реализации может потребоваться одно или несколько из следующих условий:</span><span class="sxs-lookup"><span data-stu-id="7e819-170">For example, one or more of the following might be true of your implementation:</span></span>  
  
-   <span data-ttu-id="7e819-171">Контекст схемы XAML доступен позже.</span><span class="sxs-lookup"><span data-stu-id="7e819-171">The XAML schema context is available later.</span></span>  
  
-   <span data-ttu-id="7e819-172">Используется шаблон вызова члена.</span><span class="sxs-lookup"><span data-stu-id="7e819-172">You use a member invoker pattern.</span></span>  
  
-   <span data-ttu-id="7e819-173">Намеренно переопределяется <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=nameWithType> в пользовательском модуле записи XAML.</span><span class="sxs-lookup"><span data-stu-id="7e819-173">You deliberately override <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=nameWithType> in a custom XAML writer.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="7e819-174">Параметр <paramref name="name" /> или <paramref name="declaringType" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="7e819-174"><paramref name="name" /> or <paramref name="declaringType" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlMember (string attachablePropertyName, System.Reflection.MethodInfo getter, System.Reflection.MethodInfo setter, System.Xaml.XamlSchemaContext schemaContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string attachablePropertyName, class System.Reflection.MethodInfo getter, class System.Reflection.MethodInfo setter, class System.Xaml.XamlSchemaContext schemaContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (attachablePropertyName As String, getter As MethodInfo, setter As MethodInfo, schemaContext As XamlSchemaContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlMember(System::String ^ attachablePropertyName, System::Reflection::MethodInfo ^ getter, System::Reflection::MethodInfo ^ setter, System::Xaml::XamlSchemaContext ^ schemaContext);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlMember : string * System.Reflection.MethodInfo * System.Reflection.MethodInfo * System.Xaml.XamlSchemaContext -&gt; System.Xaml.XamlMember" Usage="new System.Xaml.XamlMember (attachablePropertyName, getter, setter, schemaContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="attachablePropertyName" Type="System.String" />
        <Parameter Name="getter" Type="System.Reflection.MethodInfo" />
        <Parameter Name="setter" Type="System.Reflection.MethodInfo" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
      </Parameters>
      <Docs>
        <param name="attachablePropertyName"><span data-ttu-id="7e819-175">Строковое имя присоединяемого свойства.</span><span class="sxs-lookup"><span data-stu-id="7e819-175">The string name of the attachable property.</span></span></param>
        <param name="getter"><span data-ttu-id="7e819-176">Объект <see cref="T:System.Reflection.MethodInfo" /> системы типов среды CLR для метода доступа <see langword="get" /> базовой реализации присоединяемого члена.</span><span class="sxs-lookup"><span data-stu-id="7e819-176">The CLR type system <see cref="T:System.Reflection.MethodInfo" /> for the <see langword="get" /> accessor of the attachable member's backing implementation.</span></span></param>
        <param name="setter"><span data-ttu-id="7e819-177">Объект <see cref="T:System.Reflection.MethodInfo" /> системы типов среды CLR для метода доступа <see langword="set" /> базовой реализации присоединяемого члена.</span><span class="sxs-lookup"><span data-stu-id="7e819-177">The CLR type system <see cref="T:System.Reflection.MethodInfo" /> for the <see langword="set" /> accessor of the attachable member's backing implementation.</span></span></param>
        <param name="schemaContext"><span data-ttu-id="7e819-178">Контекст <see cref="T:System.Xaml.XamlSchemaContext" />, определяющий член.</span><span class="sxs-lookup"><span data-stu-id="7e819-178">The <see cref="T:System.Xaml.XamlSchemaContext" /> context that qualifies the member.</span></span></param>
        <summary><span data-ttu-id="7e819-179">Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlMember" /> для объекта <see cref="T:System.Xaml.XamlMember" />, представляющего присоединяемое свойство.</span><span class="sxs-lookup"><span data-stu-id="7e819-179">Initializes a new instance of the <see cref="T:System.Xaml.XamlMember" /> class for a <see cref="T:System.Xaml.XamlMember" /> that represents an attachable property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e819-180">Используйте этот конструктор, если элемент представляет присоединяемое свойство.</span><span class="sxs-lookup"><span data-stu-id="7e819-180">Use this constructor if the member represents an attachable property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlMember (string attachableEventName, System.Reflection.MethodInfo adder, System.Xaml.XamlSchemaContext schemaContext, System.Xaml.Schema.XamlMemberInvoker invoker);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string attachableEventName, class System.Reflection.MethodInfo adder, class System.Xaml.XamlSchemaContext schemaContext, class System.Xaml.Schema.XamlMemberInvoker invoker) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (attachableEventName As String, adder As MethodInfo, schemaContext As XamlSchemaContext, invoker As XamlMemberInvoker)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlMember(System::String ^ attachableEventName, System::Reflection::MethodInfo ^ adder, System::Xaml::XamlSchemaContext ^ schemaContext, System::Xaml::Schema::XamlMemberInvoker ^ invoker);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlMember : string * System.Reflection.MethodInfo * System.Xaml.XamlSchemaContext * System.Xaml.Schema.XamlMemberInvoker -&gt; System.Xaml.XamlMember" Usage="new System.Xaml.XamlMember (attachableEventName, adder, schemaContext, invoker)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="attachableEventName" Type="System.String" />
        <Parameter Name="adder" Type="System.Reflection.MethodInfo" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
        <Parameter Name="invoker" Type="System.Xaml.Schema.XamlMemberInvoker" />
      </Parameters>
      <Docs>
        <param name="attachableEventName"><span data-ttu-id="7e819-181">Строковое имя присоединяемого события.</span><span class="sxs-lookup"><span data-stu-id="7e819-181">The string name of the attachable event.</span></span></param>
        <param name="adder"><span data-ttu-id="7e819-182">Объект <see cref="T:System.Reflection.MethodInfo" /> системы типов среды CLR для метода <see langword="Add" /> обработчика базовой реализации присоединяемого члена.</span><span class="sxs-lookup"><span data-stu-id="7e819-182">The CLR type system <see cref="T:System.Reflection.MethodInfo" /> for the handler <see langword="Add" /> method of the attachable member's backing implementation.</span></span></param>
        <param name="schemaContext"><span data-ttu-id="7e819-183">Контекст <see cref="T:System.Xaml.XamlSchemaContext" />, определяющий член.</span><span class="sxs-lookup"><span data-stu-id="7e819-183">The <see cref="T:System.Xaml.XamlSchemaContext" /> context that qualifies the member.</span></span></param>
        <param name="invoker"><span data-ttu-id="7e819-184">Реализация <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />, которая обрабатывает вызовы времени выполнения, адресованные объекту <see cref="T:System.Xaml.XamlMember" />.</span><span class="sxs-lookup"><span data-stu-id="7e819-184">The <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> implementation that handles run-time invocation calls against the <see cref="T:System.Xaml.XamlMember" />.</span></span></param>
        <summary><span data-ttu-id="7e819-185">Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlMember" /> для объекта <see cref="T:System.Xaml.XamlMember" />, представляющего присоединяемое событие, включая сведения объекта <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</span><span class="sxs-lookup"><span data-stu-id="7e819-185">Initializes a new instance of the <see cref="T:System.Xaml.XamlMember" /> class for a <see cref="T:System.Xaml.XamlMember" /> that represents an attachable event, including <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> information.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e819-186">Используйте этот конструктор, если элемент представляет присоединяемый член события.</span><span class="sxs-lookup"><span data-stu-id="7e819-186">Use this constructor if the member represents an attachable event member.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlMember (string attachablePropertyName, System.Reflection.MethodInfo getter, System.Reflection.MethodInfo setter, System.Xaml.XamlSchemaContext schemaContext, System.Xaml.Schema.XamlMemberInvoker invoker);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string attachablePropertyName, class System.Reflection.MethodInfo getter, class System.Reflection.MethodInfo setter, class System.Xaml.XamlSchemaContext schemaContext, class System.Xaml.Schema.XamlMemberInvoker invoker) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (attachablePropertyName As String, getter As MethodInfo, setter As MethodInfo, schemaContext As XamlSchemaContext, invoker As XamlMemberInvoker)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlMember(System::String ^ attachablePropertyName, System::Reflection::MethodInfo ^ getter, System::Reflection::MethodInfo ^ setter, System::Xaml::XamlSchemaContext ^ schemaContext, System::Xaml::Schema::XamlMemberInvoker ^ invoker);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlMember : string * System.Reflection.MethodInfo * System.Reflection.MethodInfo * System.Xaml.XamlSchemaContext * System.Xaml.Schema.XamlMemberInvoker -&gt; System.Xaml.XamlMember" Usage="new System.Xaml.XamlMember (attachablePropertyName, getter, setter, schemaContext, invoker)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="attachablePropertyName" Type="System.String" />
        <Parameter Name="getter" Type="System.Reflection.MethodInfo" />
        <Parameter Name="setter" Type="System.Reflection.MethodInfo" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
        <Parameter Name="invoker" Type="System.Xaml.Schema.XamlMemberInvoker" />
      </Parameters>
      <Docs>
        <param name="attachablePropertyName"><span data-ttu-id="7e819-187">Строковое имя присоединяемого свойства.</span><span class="sxs-lookup"><span data-stu-id="7e819-187">The string name of the attachable property.</span></span></param>
        <param name="getter"><span data-ttu-id="7e819-188">Объект <see cref="T:System.Reflection.MethodInfo" /> системы типов среды CLR для метода доступа <see langword="get" /> базовой реализации присоединяемого члена.</span><span class="sxs-lookup"><span data-stu-id="7e819-188">The CLR type system <see cref="T:System.Reflection.MethodInfo" /> for the <see langword="get" /> accessor of the attachable member's backing implementation.</span></span></param>
        <param name="setter"><span data-ttu-id="7e819-189">Объект <see cref="T:System.Reflection.MethodInfo" /> системы типов среды CLR для метода доступа <see langword="set" /> базовой реализации присоединяемого члена.</span><span class="sxs-lookup"><span data-stu-id="7e819-189">The CLR type system <see cref="T:System.Reflection.MethodInfo" /> for the <see langword="set" /> accessor of the attachable member's backing implementation.</span></span></param>
        <param name="schemaContext"><span data-ttu-id="7e819-190">Контекст <see cref="T:System.Xaml.XamlSchemaContext" />, определяющий член.</span><span class="sxs-lookup"><span data-stu-id="7e819-190">The <see cref="T:System.Xaml.XamlSchemaContext" /> context that qualifies the member.</span></span></param>
        <param name="invoker"><span data-ttu-id="7e819-191">Реализация <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />, которая обрабатывает вызовы времени выполнения, адресованные объекту <see cref="T:System.Xaml.XamlMember" />.</span><span class="sxs-lookup"><span data-stu-id="7e819-191">The <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> implementation that handles run-time invocation calls against the <see cref="T:System.Xaml.XamlMember" />.</span></span></param>
        <summary><span data-ttu-id="7e819-192">Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlMember" /> для объекта <see cref="T:System.Xaml.XamlMember" />, представляющего присоединяемое свойство, включая сведения объекта <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</span><span class="sxs-lookup"><span data-stu-id="7e819-192">Initializes a new instance of the <see cref="T:System.Xaml.XamlMember" /> class for a <see cref="T:System.Xaml.XamlMember" /> that represents an attachable property, including <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> information.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e819-193">Используйте этот конструктор, если элемент представляет член присоединяемого свойства.</span><span class="sxs-lookup"><span data-stu-id="7e819-193">Use this constructor if the member represents an attachable property member.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeclaringType">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlType DeclaringType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlType DeclaringType" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.DeclaringType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DeclaringType As XamlType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::XamlType ^ DeclaringType { System::Xaml::XamlType ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DeclaringType : System.Xaml.XamlType" Usage="System.Xaml.XamlMember.DeclaringType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7e819-194">Получает объект <see cref="T:System.Xaml.XamlType" /> для типа, который объявляет член, связанный с этим объектом <see cref="T:System.Xaml.XamlMember" />.</span><span class="sxs-lookup"><span data-stu-id="7e819-194">Gets the <see cref="T:System.Xaml.XamlType" /> for the type that declares the member that is associated with this <see cref="T:System.Xaml.XamlMember" />.</span></span></summary>
        <value><span data-ttu-id="7e819-195">Объект <see cref="T:System.Xaml.XamlType" /> для типа, который объявляет член, связанный с этим объектом <see cref="T:System.Xaml.XamlMember" />.</span><span class="sxs-lookup"><span data-stu-id="7e819-195">The <see cref="T:System.Xaml.XamlType" /> for the type that declares the member that is associated with this <see cref="T:System.Xaml.XamlMember" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e819-196">Это значение обычно задается во время инициализации и обычно `null`не является.</span><span class="sxs-lookup"><span data-stu-id="7e819-196">This value is typically set during initialization and is usually not `null`.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="7e819-197"><xref:System.Xaml.XamlMember.DeclaringType%2A>сведения могут передаваться конструкторами для инициализации.</span><span class="sxs-lookup"><span data-stu-id="7e819-197"><xref:System.Xaml.XamlMember.DeclaringType%2A> information can be passed in by constructors for initialization.</span></span> <span data-ttu-id="7e819-198">При вызове напрямую в базовые конструкторы инициализация <xref:System.Xaml.XamlMember> производных классов может опускать некоторые проверки значений, сделанные в базовом классе.</span><span class="sxs-lookup"><span data-stu-id="7e819-198">By calling directly into base constructors, initialization for <xref:System.Xaml.XamlMember> derived classes can omit some of the value-checks that are made in the base class.</span></span> <span data-ttu-id="7e819-199">Таким образом, производная инициализация может изменить сообщаемую информацию о связях типа-члена для члена XAML, чтобы он больше не совпадал с данными системы типов базового объявления CLR.</span><span class="sxs-lookup"><span data-stu-id="7e819-199">Therefore, the derived initialization can change the reported type-member relationship information of a XAML member so that it no longer aligns in an expected way with the type system information of its underlying CLR declaration.</span></span> <span data-ttu-id="7e819-200">Для всех проверок, критических с точки зрения безопасности, для объявления сведений о типах следует использовать базовый тип CLR.</span><span class="sxs-lookup"><span data-stu-id="7e819-200">For any security-critical checks of declaring type information, use the underlying CLR type instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeferringLoader">
      <MemberSignature Language="C#" Value="public System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt; DeferringLoader { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.Xaml.XamlDeferringLoader&gt; DeferringLoader" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.DeferringLoader" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DeferringLoader As XamlValueConverter(Of XamlDeferringLoader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::Schema::XamlValueConverter&lt;System::Xaml::XamlDeferringLoader ^&gt; ^ DeferringLoader { System::Xaml::Schema::XamlValueConverter&lt;System::Xaml::XamlDeferringLoader ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DeferringLoader : System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt;" Usage="System.Xaml.XamlMember.DeferringLoader" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7e819-201">Получает объект <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />, используемый для отложенной загрузки объектов, объявленных в языке XAML.</span><span class="sxs-lookup"><span data-stu-id="7e819-201">Gets a <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> object, which is used for deferred loading of XAML declared objects.</span></span></summary>
        <value><span data-ttu-id="7e819-202">Объект <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> с ограничением <see cref="T:System.Xaml.XamlDeferringLoader" /> для универсального класса.</span><span class="sxs-lookup"><span data-stu-id="7e819-202">A <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> with <see cref="T:System.Xaml.XamlDeferringLoader" /> constraint on the generic.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e819-203"><xref:System.Xaml.XamlMember.DeferringLoader%2A> Вызов<xref:System.Xaml.XamlMember.LookupDeferringLoader%2A> Invoke или переопределение этого метода.</span><span class="sxs-lookup"><span data-stu-id="7e819-203">Calling <xref:System.Xaml.XamlMember.DeferringLoader%2A> invokes <xref:System.Xaml.XamlMember.LookupDeferringLoader%2A> or a specific override of that method.</span></span> <span data-ttu-id="7e819-204">Такое поведение возникает в случаях, когда начальная логика внутреннего отражения еще не установила информацию.</span><span class="sxs-lookup"><span data-stu-id="7e819-204">This behavior occurs in cases where the initial internal reflection logic has not already set the information.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DependsOn">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;System.Xaml.XamlMember&gt; DependsOn { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class System.Xaml.XamlMember&gt; DependsOn" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.DependsOn" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DependsOn As IList(Of XamlMember)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;System::Xaml::XamlMember ^&gt; ^ DependsOn { System::Collections::Generic::IList&lt;System::Xaml::XamlMember ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DependsOn : System.Collections.Generic.IList&lt;System.Xaml.XamlMember&gt;" Usage="System.Xaml.XamlMember.DependsOn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Xaml.XamlMember&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7e819-205">Получает список объектов <see cref="T:System.Xaml.XamlMember" />.</span><span class="sxs-lookup"><span data-stu-id="7e819-205">Gets a list of <see cref="T:System.Xaml.XamlMember" /> objects.</span></span> <span data-ttu-id="7e819-206">Эти объекты сообщают о членах, в которых существуют отношения зависимости для порядка инициализации относительно данного объекта <see cref="T:System.Xaml.XamlMember" />.</span><span class="sxs-lookup"><span data-stu-id="7e819-206">These report the members where dependency relationships for initialization order exist relative to this <see cref="T:System.Xaml.XamlMember" />.</span></span></summary>
        <value><span data-ttu-id="7e819-207">Список объектов <see cref="T:System.Xaml.XamlMember" />.</span><span class="sxs-lookup"><span data-stu-id="7e819-207">A list of <see cref="T:System.Xaml.XamlMember" /> objects.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e819-208"><xref:System.Xaml.XamlMember.DependsOn%2A> Вызов<xref:System.Xaml.XamlMember.LookupDependsOn%2A> Invoke или переопределение этого метода.</span><span class="sxs-lookup"><span data-stu-id="7e819-208">Calling <xref:System.Xaml.XamlMember.DependsOn%2A> invokes <xref:System.Xaml.XamlMember.LookupDependsOn%2A> or a specific override of that method.</span></span> <span data-ttu-id="7e819-209">Такое поведение возникает в случаях, когда начальная логика внутреннего отражения еще не установила информацию.</span><span class="sxs-lookup"><span data-stu-id="7e819-209">This behavior occurs in cases where the initial internal reflection logic has not already set the information.</span></span>  
  
 <span data-ttu-id="7e819-210">`DependsOn` Шаблон можно применить к вариантам объектной модели, которые намеренно противоречат общему правилу XAML.</span><span class="sxs-lookup"><span data-stu-id="7e819-210">The `DependsOn` pattern can be applied to object model cases that deliberately contradict a general XAML rule.</span></span> <span data-ttu-id="7e819-211">Общее правило XAML заключается в том, что члены типа, которые не передаются как текст инициализации (или методом фабрики в XAML 2009), должны быть способны назначаться в любом порядке.</span><span class="sxs-lookup"><span data-stu-id="7e819-211">The general XAML rule is that members of a type that are not passed as initialization text (or by a factory method in XAML 2009) must be able to be assigned in any order.</span></span> <span data-ttu-id="7e819-212">Применив `DependsOn` шаблон к элементу, можно указать средствам записи XAML всегда обрабатывать ссылочный элемент до этого элемента.</span><span class="sxs-lookup"><span data-stu-id="7e819-212">By applying a `DependsOn` pattern to a member, you can instruct XAML writers to always process the referenced member before this member.</span></span> <span data-ttu-id="7e819-213">Этот шаблон можно применить в ситуациях, когда значение текущего члена требует контекста или других сведений, доступных только после установки другого элемента.</span><span class="sxs-lookup"><span data-stu-id="7e819-213">You can apply this pattern in situations where the value of the current member requires context or other information that is only available after the other member is set.</span></span>  
  
 <span data-ttu-id="7e819-214">`DependsOn` Шаблон следует применять внимательно и зарезервировано для сценариев свойств, где он служит целью архитектуры.</span><span class="sxs-lookup"><span data-stu-id="7e819-214">The `DependsOn` pattern should be applied judiciously and reserved for property scenarios where it serves an architectural purpose.</span></span> <span data-ttu-id="7e819-215">Большое количество зависимостей может замедлить обработку XAML.</span><span class="sxs-lookup"><span data-stu-id="7e819-215">Large numbers of dependencies have the potential to slow down XAML processing.</span></span> <span data-ttu-id="7e819-216">Кроме того, можно создать циклические зависимости. в этом случае поведение обработки XAML не определено.</span><span class="sxs-lookup"><span data-stu-id="7e819-216">Also, it is possible to produce circular dependencies, in which case the XAML processing behavior is undefined.</span></span>  
  
 <span data-ttu-id="7e819-217">Примеры `DependsOn` сценариев из WPF включают определенные свойства в <xref:System.Windows.Controls.ControlTemplate> и <xref:System.Windows.DataTemplate>, в <xref:System.Windows.Trigger>и в <xref:System.Windows.Setter>.</span><span class="sxs-lookup"><span data-stu-id="7e819-217">Example `DependsOn` scenarios from WPF include certain properties on <xref:System.Windows.Controls.ControlTemplate> and <xref:System.Windows.DataTemplate>, on <xref:System.Windows.Trigger>, and on <xref:System.Windows.Setter>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Markup.DependsOnAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7e819-218">Позволяет определить, равен ли текущий объект другому объекту.</span><span class="sxs-lookup"><span data-stu-id="7e819-218">Indicates whether the current object is equal to another object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="xamlMember.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="7e819-219">Объект, который требуется сравнить с данным объектом.</span><span class="sxs-lookup"><span data-stu-id="7e819-219">The object to compare with this object.</span></span></param>
        <summary><span data-ttu-id="7e819-220">Позволяет определить, равен ли текущий объект другому объекту.</span><span class="sxs-lookup"><span data-stu-id="7e819-220">Indicates whether the current object is equal to another object.</span></span></summary>
        <returns><span data-ttu-id="7e819-221"><see langword="true" />, если текущий объект равен параметру <paramref name="obj" />, в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="7e819-221"><see langword="true" /> if the current object is equal to the <paramref name="obj" /> parameter; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Xaml.XamlMember other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(class System.Xaml.XamlMember other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.Equals(System.Xaml.XamlMember)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As XamlMember) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Xaml::XamlMember ^ other);" />
      <MemberSignature Language="F#" Value="override this.Equals : System.Xaml.XamlMember -&gt; bool" Usage="xamlMember.Equals other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Xaml.XamlMember" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="7e819-222">Объект, который требуется сравнить с данным объектом.</span><span class="sxs-lookup"><span data-stu-id="7e819-222">An object to compare with this object.</span></span></param>
        <summary><span data-ttu-id="7e819-223">Указывает, равен ли текущий объект другому объекту того же типа.</span><span class="sxs-lookup"><span data-stu-id="7e819-223">Indicates whether the current object is equal to another object of the same type.</span></span></summary>
        <returns><span data-ttu-id="7e819-224"><see langword="true" />, если текущий объект равен параметру <paramref name="other" />, в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="7e819-224"><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="xamlMember.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7e819-225">Возвращает хэш-код для этого объекта.</span><span class="sxs-lookup"><span data-stu-id="7e819-225">Returns the hash code for this object.</span></span></summary>
        <returns><span data-ttu-id="7e819-226">Целочисленный хэш-код.</span><span class="sxs-lookup"><span data-stu-id="7e819-226">An integer hash code.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetXamlNamespaces">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;string&gt; GetXamlNamespaces ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;string&gt; GetXamlNamespaces() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.GetXamlNamespaces" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetXamlNamespaces () As IList(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IList&lt;System::String ^&gt; ^ GetXamlNamespaces();" />
      <MemberSignature Language="F#" Value="abstract member GetXamlNamespaces : unit -&gt; System.Collections.Generic.IList&lt;string&gt;&#xA;override this.GetXamlNamespaces : unit -&gt; System.Collections.Generic.IList&lt;string&gt;" Usage="xamlMember.GetXamlNamespaces " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7e819-227">Возвращает список пространств имен XAML, в которых может существовать этот член XAML.</span><span class="sxs-lookup"><span data-stu-id="7e819-227">Returns a list of XAML namespaces where this XAML member can exist.</span></span></summary>
        <returns><span data-ttu-id="7e819-228">Список идентификаторов пространства имен XAML в виде строк.</span><span class="sxs-lookup"><span data-stu-id="7e819-228">A list of XAML namespace identifiers as strings.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e819-229">Реализация по умолчанию возвращает <xref:System.Xaml.XamlType.GetXamlNamespaces%2A?displayProperty=nameWithType> результат вызова <xref:System.Xaml.XamlMember.DeclaringType%2A> из, связанного с этим <xref:System.Xaml.XamlMember>объектом.</span><span class="sxs-lookup"><span data-stu-id="7e819-229">The default implementation returns the <xref:System.Xaml.XamlType.GetXamlNamespaces%2A?displayProperty=nameWithType> call result from the <xref:System.Xaml.XamlMember.DeclaringType%2A> that is associated with this <xref:System.Xaml.XamlMember>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Invoker">
      <MemberSignature Language="C#" Value="public System.Xaml.Schema.XamlMemberInvoker Invoker { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.Schema.XamlMemberInvoker Invoker" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.Invoker" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Invoker As XamlMemberInvoker" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::Schema::XamlMemberInvoker ^ Invoker { System::Xaml::Schema::XamlMemberInvoker ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Invoker : System.Xaml.Schema.XamlMemberInvoker" Usage="System.Xaml.XamlMember.Invoker" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlMemberInvoker</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7e819-230">Получает реализацию объекта <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />, связанную с данным типом <see cref="T:System.Xaml.XamlMember" />.</span><span class="sxs-lookup"><span data-stu-id="7e819-230">Gets the <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> implementation that is associated with this <see cref="T:System.Xaml.XamlMember" />.</span></span></summary>
        <value><span data-ttu-id="7e819-231">Реализация объекта <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />, связанная с данным типом <see cref="T:System.Xaml.XamlMember" />.</span><span class="sxs-lookup"><span data-stu-id="7e819-231">The <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> implementation that is associated with this <see cref="T:System.Xaml.XamlMember" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e819-232">`Invoker` Шаблон является расширенной методикой расширения системы типов XAML.</span><span class="sxs-lookup"><span data-stu-id="7e819-232">The `Invoker` pattern is an advanced XAML type system extension technique.</span></span> <span data-ttu-id="7e819-233">`Invoker` Шаблон позволяет внедрить поведение сопоставления типов схем, не используя определения системы типов XAML из .NET Framework служб XAML.</span><span class="sxs-lookup"><span data-stu-id="7e819-233">The `Invoker` pattern provides a way to inject different schema type mapping behavior, while still using XAML type system definitions from .NET Framework XAML Services.</span></span>  
  
 <span data-ttu-id="7e819-234"><xref:System.Xaml.XamlMember.UnderlyingMember%2A> `null` <xref:System.Xaml.XamlMember.Invoker%2A> <xref:System.Xaml.XamlMember> <xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A?displayProperty=nameWithType>Если переопределение возвращает `null`или, если реализация по умолчанию возвращает, поскольку для этого свойства отсутствует, свойство возвращает значение. <xref:System.Xaml.XamlMember.LookupInvoker%2A></span><span class="sxs-lookup"><span data-stu-id="7e819-234">If a <xref:System.Xaml.XamlMember.LookupInvoker%2A> override returns `null`, or if the default implementation returns `null` because it lacks the <xref:System.Xaml.XamlMember.UnderlyingMember%2A> for this <xref:System.Xaml.XamlMember>, the <xref:System.Xaml.XamlMember.Invoker%2A> property returns <xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="7e819-235">Тип <xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A?displayProperty=nameWithType> используется по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="7e819-235"><xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A?displayProperty=nameWithType> is the default.</span></span> <span data-ttu-id="7e819-236">Это справедливо для большинства операций, использующих .NET Framework служб XAML и контекст схемы XAML по умолчанию и где не передаются специальные шаблоны переопределения `Invoker` для создания системных сущностей типов XAML.</span><span class="sxs-lookup"><span data-stu-id="7e819-236">This is true for most operations that use .NET Framework XAML Services and the default XAML schema context, and where no specific override `Invoker` patterns are passed for construction of XAML type system entities.</span></span>  
  
 <span data-ttu-id="7e819-237"><xref:System.Xaml.XamlMember.Invoker%2A> Вызов<xref:System.Xaml.XamlMember.LookupInvoker%2A> Invoke или переопределение этого метода.</span><span class="sxs-lookup"><span data-stu-id="7e819-237">Calling <xref:System.Xaml.XamlMember.Invoker%2A> invokes <xref:System.Xaml.XamlMember.LookupInvoker%2A> or a specific override of that method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAmbient">
      <MemberSignature Language="C#" Value="public bool IsAmbient { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAmbient" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.IsAmbient" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAmbient As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAmbient { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAmbient : bool" Usage="System.Xaml.XamlMember.IsAmbient" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7e819-238">Получает значение, указывающее, представляет ли этот объект <see cref="T:System.Xaml.XamlMember" /> внешнее свойство.</span><span class="sxs-lookup"><span data-stu-id="7e819-238">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlMember" /> is reported as an ambient property.</span></span></summary>
        <value><span data-ttu-id="7e819-239">Значение <see langword="true" />, если об объекте <see cref="T:System.Xaml.XamlMember" /> сообщается, что он является внешним свойством; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="7e819-239"><see langword="true" /> if this <see cref="T:System.Xaml.XamlMember" /> is reported as an ambient property; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e819-240"><xref:System.Xaml.XamlMember.IsAmbient%2A> Вызов<xref:System.Xaml.XamlMember.LookupIsAmbient%2A> Invoke или переопределение этого метода.</span><span class="sxs-lookup"><span data-stu-id="7e819-240">Calling <xref:System.Xaml.XamlMember.IsAmbient%2A> invokes <xref:System.Xaml.XamlMember.LookupIsAmbient%2A> or a specific override of that method.</span></span> <span data-ttu-id="7e819-241">Это поведение возникает в реализациях, где начальная внутренняя логика отражения еще не установила информацию.</span><span class="sxs-lookup"><span data-stu-id="7e819-241">This behavior occurs in implementations where the initial internal reflection logic has not already set the information.</span></span>  
  
 <span data-ttu-id="7e819-242">Проверка внешних свойств обычно является частью логики обработки XAML, чтобы убедиться, что объекты и значения, зависящие от использования окружающей среды для квалификации типов, могут работать правильно.</span><span class="sxs-lookup"><span data-stu-id="7e819-242">Checking for ambient properties is are usually part of XAML processing logic to make sure that objects and values that rely on ambient usage for type qualification can function correctly.</span></span> <span data-ttu-id="7e819-243">.NET Framework API-интерфейсы служб XAML и контекст схемы XAML по умолчанию заполняет это значение на основе атрибутов с <xref:System.Windows.Markup.AmbientAttribute>.</span><span class="sxs-lookup"><span data-stu-id="7e819-243">The .NET Framework XAML Services APIs and the default XAML schema context populates this value based on attribution with <xref:System.Windows.Markup.AmbientAttribute>.</span></span> <span data-ttu-id="7e819-244">Реализация <xref:System.Xaml.XamlMember.LookupIsAmbient%2A> по умолчанию использует этот существующий <xref:System.Windows.Markup.AmbientAttribute> метод и возвращает `true` , если <xref:System.Windows.Markup.AmbientAttribute> существует в объявлении элемента.</span><span class="sxs-lookup"><span data-stu-id="7e819-244">The default implementation of <xref:System.Xaml.XamlMember.LookupIsAmbient%2A> uses this existing <xref:System.Windows.Markup.AmbientAttribute> technique, and it returns `true` if <xref:System.Windows.Markup.AmbientAttribute> exists on a member declaration.</span></span>  
  
 <span data-ttu-id="7e819-245"><xref:System.Windows.Markup.AmbientAttribute>находится на членах нескольких типов WPF, которые включают <xref:System.Windows.Application>, <xref:System.Windows.Setter>и <xref:System.Windows.Style>.</span><span class="sxs-lookup"><span data-stu-id="7e819-245"><xref:System.Windows.Markup.AmbientAttribute> is found on members of several WPF types, which include <xref:System.Windows.Application>, <xref:System.Windows.Setter>, and <xref:System.Windows.Style>.</span></span> <span data-ttu-id="7e819-246">Он также находится в <xref:System.Windows.ResourceDictionary> типе, который показывает, что любой член, который использует <xref:System.Windows.ResourceDictionary> в качестве его типа, должен рассматриваться как окружение, даже если элемент не имеет специально атрибутов.</span><span class="sxs-lookup"><span data-stu-id="7e819-246">It is also found on the <xref:System.Windows.ResourceDictionary> type, which connotes that any member that uses <xref:System.Windows.ResourceDictionary> as its type should be considered ambient even if the member is not specifically attributed.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Markup.AmbientAttribute" />
      </Docs>
    </Member>
    <Member MemberName="IsAttachable">
      <MemberSignature Language="C#" Value="public bool IsAttachable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAttachable" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.IsAttachable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAttachable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAttachable { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAttachable : bool" Usage="System.Xaml.XamlMember.IsAttachable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7e819-247">Получает значение, указывающее, является ли этот объект <see cref="T:System.Xaml.XamlMember" /> присоединяемым членом.</span><span class="sxs-lookup"><span data-stu-id="7e819-247">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlMember" /> is an attachable member.</span></span></summary>
        <value><span data-ttu-id="7e819-248">Значение <see langword="true" />, если этот объект <see cref="T:System.Xaml.XamlMember" /> является присоединяемым членом; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="7e819-248"><see langword="true" /> if this <see cref="T:System.Xaml.XamlMember" /> is an attachable member; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e819-249">Значение инициализируется в зависимости от того <xref:System.Xaml.XamlMember>, какой конструктор использовался для создания. <xref:System.Xaml.XamlMember.IsAttachable%2A></span><span class="sxs-lookup"><span data-stu-id="7e819-249">The <xref:System.Xaml.XamlMember.IsAttachable%2A> value is initialized based on which constructor was used to construct a <xref:System.Xaml.XamlMember>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDirective">
      <MemberSignature Language="C#" Value="public bool IsDirective { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDirective" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.IsDirective" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDirective As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDirective { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDirective : bool" Usage="System.Xaml.XamlMember.IsDirective" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7e819-250">Получает значение, указывающее, является ли этот объект <see cref="T:System.Xaml.XamlMember" /> директивой XAML.</span><span class="sxs-lookup"><span data-stu-id="7e819-250">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlMember" /> is a XAML directive.</span></span></summary>
        <value><span data-ttu-id="7e819-251">Значение <see langword="true" />, если объект <see cref="T:System.Xaml.XamlMember" /> является директивой XAML; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="7e819-251"><see langword="true" /> if this <see cref="T:System.Xaml.XamlMember" /> is a XAML directive; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e819-252">Значение инициализируется в зависимости от того <xref:System.Xaml.XamlMember>, какой конструктор использовался для создания. <xref:System.Xaml.XamlMember.IsDirective%2A></span><span class="sxs-lookup"><span data-stu-id="7e819-252">The <xref:System.Xaml.XamlMember.IsDirective%2A> value is initialized based on which constructor was used to construct a <xref:System.Xaml.XamlMember>.</span></span> <span data-ttu-id="7e819-253">Базовые <xref:System.Xaml.XamlMember> конструкторы инициализируются так, <xref:System.Xaml.XamlMember.IsDirective%2A> что `false`имеет значение.</span><span class="sxs-lookup"><span data-stu-id="7e819-253">The base <xref:System.Xaml.XamlMember> constructors initialize so that <xref:System.Xaml.XamlMember.IsDirective%2A> is `false`.</span></span> <span data-ttu-id="7e819-254">Однако класс (производный класс) инициализируется так, что <xref:System.Xaml.XamlMember.IsDirective%2A> имеет значение `true`. <xref:System.Xaml.XamlMember> <xref:System.Xaml.XamlDirective></span><span class="sxs-lookup"><span data-stu-id="7e819-254">However, the <xref:System.Xaml.XamlDirective> class (a <xref:System.Xaml.XamlMember> derived class) initializes so that <xref:System.Xaml.XamlMember.IsDirective%2A> is `true`.</span></span>  
  
 <span data-ttu-id="7e819-255">Если вы хотите сообщить о <xref:System.Xaml.XamlMember.IsDirective%2A> `true` вызовах для членов XAML классом пользовательского класса схемы XAML, убедитесь, что вы наследуете от <xref:System.Xaml.XamlDirective> , так как это единственный способ включить это поведение.</span><span class="sxs-lookup"><span data-stu-id="7e819-255">If you want to report <xref:System.Xaml.XamlMember.IsDirective%2A> as `true` to callers of a custom XAML schema class for XAML members, make sure you derive from <xref:System.Xaml.XamlDirective> because that is the only way to enable that behavior.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEvent">
      <MemberSignature Language="C#" Value="public bool IsEvent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEvent" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.IsEvent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsEvent As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEvent { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEvent : bool" Usage="System.Xaml.XamlMember.IsEvent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7e819-256">Получает значение, указывающее, действительно ли этот объект <see cref="T:System.Xaml.XamlMember" /> представляет член события.</span><span class="sxs-lookup"><span data-stu-id="7e819-256">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlMember" /> represents an event member.</span></span></summary>
        <value><span data-ttu-id="7e819-257">Значение <see langword="true" />, если этот объект <see cref="T:System.Xaml.XamlMember" /> представляет событие; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="7e819-257"><see langword="true" /> if this <see cref="T:System.Xaml.XamlMember" /> represents an event; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e819-258"><xref:System.Xaml.XamlMember.IsEvent%2A> Вызов<xref:System.Xaml.XamlMember.LookupIsEvent%2A> Invoke или переопределение этого метода.</span><span class="sxs-lookup"><span data-stu-id="7e819-258">Calling <xref:System.Xaml.XamlMember.IsEvent%2A> invokes <xref:System.Xaml.XamlMember.LookupIsEvent%2A> or a specific override of that method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNameValid">
      <MemberSignature Language="C#" Value="public bool IsNameValid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNameValid" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.IsNameValid" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsNameValid As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNameValid { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsNameValid : bool" Usage="System.Xaml.XamlMember.IsNameValid" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7e819-259">Получает значение, указывающее, инициализирован ли этот объект <see cref="T:System.Xaml.XamlMember" /> допустимой строкой <see langword="xamlName" /> в качестве значения его свойства <see cref="P:System.Xaml.XamlMember.Name" />.</span><span class="sxs-lookup"><span data-stu-id="7e819-259">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlMember" /> is initialized with a valid <see langword="xamlName" /> string as its <see cref="P:System.Xaml.XamlMember.Name" />.</span></span></summary>
        <value><span data-ttu-id="7e819-260">Значение <see langword="true" />, если этот объект <see cref="T:System.Xaml.XamlMember" /> инициализирован допустимой строкой <see langword="xamlName" />; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="7e819-260"><see langword="true" /> if this <see cref="T:System.Xaml.XamlMember" /> is initialized with a valid <see langword="xamlName" /> string; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/11e4cada-41d2-494d-9531-0d3df4dfcbe3"><span data-ttu-id="7e819-261">XamlName</span><span class="sxs-lookup"><span data-stu-id="7e819-261">XamlName</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Xaml.XamlMember.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7e819-262">Получает значение, указывающее, действительно ли этот объект <see cref="T:System.Xaml.XamlMember" /> представляет член, доступный только для чтения.</span><span class="sxs-lookup"><span data-stu-id="7e819-262">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlMember" /> represents a read-only member.</span></span></summary>
        <value><span data-ttu-id="7e819-263">Значение <see langword="true" />, если этот объект <see cref="T:System.Xaml.XamlMember" /> представляет член, доступный только для чтения; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="7e819-263"><see langword="true" /> if this <see cref="T:System.Xaml.XamlMember" /> represents a read-only member; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e819-264"><xref:System.Xaml.XamlMember.IsReadOnly%2A> Вызов<xref:System.Xaml.XamlMember.LookupIsReadOnly%2A> Invoke или переопределение этого метода.</span><span class="sxs-lookup"><span data-stu-id="7e819-264">Calling <xref:System.Xaml.XamlMember.IsReadOnly%2A> invokes <xref:System.Xaml.XamlMember.LookupIsReadOnly%2A> or a specific override of that method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadPublic">
      <MemberSignature Language="C#" Value="public bool IsReadPublic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadPublic" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.IsReadPublic" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadPublic As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadPublic { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadPublic : bool" Usage="System.Xaml.XamlMember.IsReadPublic" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7e819-265">Получает значение, указывающее, представляет ли объект <see cref="T:System.Xaml.XamlMember" /> член с доступным для вызова открытым методом доступа <see langword="get" />.</span><span class="sxs-lookup"><span data-stu-id="7e819-265">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlMember" /> represents a member with a callable public <see langword="get" /> accessor.</span></span></summary>
        <value><span data-ttu-id="7e819-266">Значение <see langword="true" />, если этот объект <see cref="T:System.Xaml.XamlMember" /> представляет доступный для вызова открытый метод доступа <see langword="get" />; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="7e819-266"><see langword="true" /> if this <see cref="T:System.Xaml.XamlMember" /> represents a callable public <see langword="get" /> accessor; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e819-267">Значение проверяет, является ли <xref:System.Xaml.XamlMember.DeclaringType%2A> объект общедоступным. <xref:System.Xaml.XamlMember.IsReadPublic%2A></span><span class="sxs-lookup"><span data-stu-id="7e819-267">The <xref:System.Xaml.XamlMember.IsReadPublic%2A> value checks whether the <xref:System.Xaml.XamlMember.DeclaringType%2A> is public.</span></span> <span data-ttu-id="7e819-268">Если <xref:System.Xaml.XamlMember.DeclaringType%2A> не является общедоступным `get` , метод доступа не может вызываться по-разному <xref:System.Xaml.XamlMember.IsReadPublic%2A> и `false`возвращает.</span><span class="sxs-lookup"><span data-stu-id="7e819-268">If <xref:System.Xaml.XamlMember.DeclaringType%2A> is nonpublic, the `get` accessor is not callable in a practical way, and <xref:System.Xaml.XamlMember.IsReadPublic%2A> returns `false`.</span></span>  
  
 <span data-ttu-id="7e819-269"><xref:System.Xaml.XamlMember.IsReadPublic%2A> Вызов<xref:System.Xaml.XamlMember.LookupIsReadPublic%2A> Invoke или переопределение этого метода.</span><span class="sxs-lookup"><span data-stu-id="7e819-269">Calling <xref:System.Xaml.XamlMember.IsReadPublic%2A> invokes <xref:System.Xaml.XamlMember.LookupIsReadPublic%2A> or a specific override of that method.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="7e819-270"><xref:System.Xaml.XamlMember.LookupIsReadPublic%2A> Метод является виртуальным и, следовательно, может быть переопределен.</span><span class="sxs-lookup"><span data-stu-id="7e819-270">The <xref:System.Xaml.XamlMember.LookupIsReadPublic%2A> method is virtual and therefore, can be overridden.</span></span> <span data-ttu-id="7e819-271">Переопределение может быть изменено (вредоносным или иным образом) сообщаемыми сведениями о доступе элемента XAML, чтобы он больше не совпадал с данными о доступе к системе типов его базовой декларации CLR.</span><span class="sxs-lookup"><span data-stu-id="7e819-271">The override has the potential to change (maliciously or otherwise) the reported access information of a XAML member so that it no longer aligns in an expected way with the type system access information of its underlying CLR declaration.</span></span> <span data-ttu-id="7e819-272">Для всех проверок уровня доступа, критически важных для безопасности, используйте базовый тип CLR.</span><span class="sxs-lookup"><span data-stu-id="7e819-272">For any security-critical checks of access levels, use the underlying CLR type instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUnknown">
      <MemberSignature Language="C#" Value="public bool IsUnknown { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsUnknown" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.IsUnknown" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsUnknown As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsUnknown { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsUnknown : bool" Usage="System.Xaml.XamlMember.IsUnknown" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7e819-273">Получает значение, указывающее, является ли этот член неразрешимым в базовой системе, используемой для разрешения типов и членов.</span><span class="sxs-lookup"><span data-stu-id="7e819-273">Gets a value that indicates whether the member is not resolvable by the backing system that is used for type and member resolution.</span></span></summary>
        <value><span data-ttu-id="7e819-274">Значение <see langword="true" />, если этот член невозможно разрешить; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="7e819-274"><see langword="true" /> if the member is not resolvable; <see langword="false" /> if the member is resolvable.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e819-275">Объект <xref:System.Xaml.XamlMember> , созданный <xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29> с сигнатурой, возвращает `true` для <xref:System.Xaml.XamlMember.IsUnknown%2A>.</span><span class="sxs-lookup"><span data-stu-id="7e819-275">A <xref:System.Xaml.XamlMember> that is constructed with the <xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29> signature returns `true` for <xref:System.Xaml.XamlMember.IsUnknown%2A>.</span></span>  
  
 <span data-ttu-id="7e819-276">Для пути загрузки, включающего <xref:System.Xaml.XamlObjectWriter>в себя <xref:System.Xaml.XamlMember> , `true` объект <xref:System.Xaml.XamlMember.IsUnknown%2A> с для не может быть записан в граф объектов.</span><span class="sxs-lookup"><span data-stu-id="7e819-276">For a load path that involves <xref:System.Xaml.XamlObjectWriter>, a <xref:System.Xaml.XamlMember> with `true` for <xref:System.Xaml.XamlMember.IsUnknown%2A> cannot be written into an object graph.</span></span> <span data-ttu-id="7e819-277">В реализациях по умолчанию в .NET Framework API-интерфейсах <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=nameWithType> служб XAML вызов <xref:System.Xaml.XamlObjectWriterException> создает исключение, <xref:System.Xaml.XamlMember> когда `true` соответствующие <xref:System.Xaml.XamlMember.IsUnknown%2A>отчеты для.</span><span class="sxs-lookup"><span data-stu-id="7e819-277">Under the default implementations in .NET Framework XAML Services APIs, the <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=nameWithType> call throws a <xref:System.Xaml.XamlObjectWriterException> when the relevant <xref:System.Xaml.XamlMember> reports `true` for <xref:System.Xaml.XamlMember.IsUnknown%2A>.</span></span>  
  
 <span data-ttu-id="7e819-278"><xref:System.Xaml.XamlMember> Не следует создавать объект, имеющий `true` значение для <xref:System.Xaml.XamlMember.IsUnknown%2A> , если только ваша реализация не может выполнять обработку исключений <xref:System.Xaml.XamlObjectWriter>из или у вас есть другие способы настройки <xref:System.Xaml.XamlObjectWriter> поведения.</span><span class="sxs-lookup"><span data-stu-id="7e819-278">You should not construct a <xref:System.Xaml.XamlMember> that has a value of `true` for <xref:System.Xaml.XamlMember.IsUnknown%2A> unless your implementation can handle the exceptions from <xref:System.Xaml.XamlObjectWriter>, or you have other ways to adjust the <xref:System.Xaml.XamlObjectWriter> behavior.</span></span>  
  
 <span data-ttu-id="7e819-279"><xref:System.Xaml.XamlMember.IsUnknown%2A> Вызов<xref:System.Xaml.XamlMember.LookupIsUnknown%2A> Invoke или переопределение этого метода.</span><span class="sxs-lookup"><span data-stu-id="7e819-279">Calling <xref:System.Xaml.XamlMember.IsUnknown%2A> invokes <xref:System.Xaml.XamlMember.LookupIsUnknown%2A> or a specific override of that method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsWriteOnly">
      <MemberSignature Language="C#" Value="public bool IsWriteOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsWriteOnly" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.IsWriteOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsWriteOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsWriteOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsWriteOnly : bool" Usage="System.Xaml.XamlMember.IsWriteOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7e819-280">Получает значение, указывающее, действительно ли этот объект <see cref="T:System.Xaml.XamlMember" /> представляет член, доступный только для записи.</span><span class="sxs-lookup"><span data-stu-id="7e819-280">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlMember" /> represents a write-only member.</span></span></summary>
        <value><span data-ttu-id="7e819-281">Значение <see langword="true" />, если этот объект <see cref="T:System.Xaml.XamlMember" /> представляет член, доступный только для записи; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="7e819-281"><see langword="true" /> if this <see cref="T:System.Xaml.XamlMember" /> represents a write-only member; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e819-282"><xref:System.Xaml.XamlMember.IsWriteOnly%2A> Вызов<xref:System.Xaml.XamlMember.LookupIsWriteOnly%2A> Invoke или переопределение этого метода.</span><span class="sxs-lookup"><span data-stu-id="7e819-282">Calling <xref:System.Xaml.XamlMember.IsWriteOnly%2A> invokes <xref:System.Xaml.XamlMember.LookupIsWriteOnly%2A> or a specific override of that method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsWritePublic">
      <MemberSignature Language="C#" Value="public bool IsWritePublic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsWritePublic" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.IsWritePublic" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsWritePublic As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsWritePublic { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsWritePublic : bool" Usage="System.Xaml.XamlMember.IsWritePublic" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7e819-283">Получает значение, указывающее, представляет ли объект <see cref="T:System.Xaml.XamlMember" /> член с доступным для вызова открытым методом доступа <see langword="set" />.</span><span class="sxs-lookup"><span data-stu-id="7e819-283">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlMember" /> represents a member that has a callable public <see langword="set" /> accessor.</span></span></summary>
        <value><span data-ttu-id="7e819-284">Значение <see langword="true" />, если этот объект <see cref="T:System.Xaml.XamlMember" /> представляет доступный для вызова открытый метод доступа <see langword="set" />; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="7e819-284"><see langword="true" /> if this <see cref="T:System.Xaml.XamlMember" /> represents a callable public <see langword="set" /> accessor; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e819-285">Значение определяет, является ли <xref:System.Xaml.XamlMember.DeclaringType%2A> объект общедоступным как часть определения. <xref:System.Xaml.XamlMember.IsWritePublic%2A></span><span class="sxs-lookup"><span data-stu-id="7e819-285">The <xref:System.Xaml.XamlMember.IsWritePublic%2A> value considers whether the <xref:System.Xaml.XamlMember.DeclaringType%2A> is public as part of the determination.</span></span> <span data-ttu-id="7e819-286">Если <xref:System.Xaml.XamlMember.DeclaringType%2A> не является общедоступным `set` , метод доступа не может вызываться по-разному <xref:System.Xaml.XamlMember.IsWritePublic%2A> и `false`возвращает.</span><span class="sxs-lookup"><span data-stu-id="7e819-286">If <xref:System.Xaml.XamlMember.DeclaringType%2A> is nonpublic, the `set` accessor is not callable in a practical way, and <xref:System.Xaml.XamlMember.IsWritePublic%2A> returns `false`.</span></span>  
  
 <span data-ttu-id="7e819-287"><xref:System.Xaml.XamlMember.IsWritePublic%2A> Вызов<xref:System.Xaml.XamlMember.LookupIsWritePublic%2A> Invoke или переопределение этого метода.</span><span class="sxs-lookup"><span data-stu-id="7e819-287">Calling <xref:System.Xaml.XamlMember.IsWritePublic%2A> invokes <xref:System.Xaml.XamlMember.LookupIsWritePublic%2A> or a specific override of that method.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="7e819-288"><xref:System.Xaml.XamlMember.LookupIsWritePublic%2A> Метод является виртуальным и, следовательно, может быть переопределен.</span><span class="sxs-lookup"><span data-stu-id="7e819-288">The <xref:System.Xaml.XamlMember.LookupIsWritePublic%2A> method is virtual and therefore, can be overridden.</span></span> <span data-ttu-id="7e819-289">Переопределение может быть изменено (вредоносным или иным образом) сообщаемыми сведениями о доступе элемента XAML, чтобы он больше не совпадал с данными о доступе к системе типов его базовой декларации CLR.</span><span class="sxs-lookup"><span data-stu-id="7e819-289">The override has the potential to change (maliciously or otherwise) the reported access information of a XAML member so that it no longer aligns in an expected way with the type system access information of its underlying CLR declaration.</span></span> <span data-ttu-id="7e819-290">Для всех проверок уровня доступа, критически важных для безопасности, используйте базовый тип CLR.</span><span class="sxs-lookup"><span data-stu-id="7e819-290">For any security-critical checks of access levels, use the underlying CLR type instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupCustomAttributeProvider">
      <MemberSignature Language="C#" Value="protected virtual System.Reflection.ICustomAttributeProvider LookupCustomAttributeProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Reflection.ICustomAttributeProvider LookupCustomAttributeProvider() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupCustomAttributeProvider" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupCustomAttributeProvider () As ICustomAttributeProvider" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Reflection::ICustomAttributeProvider ^ LookupCustomAttributeProvider();" />
      <MemberSignature Language="F#" Value="abstract member LookupCustomAttributeProvider : unit -&gt; System.Reflection.ICustomAttributeProvider&#xA;override this.LookupCustomAttributeProvider : unit -&gt; System.Reflection.ICustomAttributeProvider" Usage="xamlMember.LookupCustomAttributeProvider " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.ICustomAttributeProvider</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7e819-291">При реализации в производном классе возвращает реализацию класса <see cref="T:System.Reflection.ICustomAttributeProvider" />.</span><span class="sxs-lookup"><span data-stu-id="7e819-291">When implemented in a derived class, returns an <see cref="T:System.Reflection.ICustomAttributeProvider" /> implementation.</span></span></summary>
        <returns><span data-ttu-id="7e819-292">Реализация <see cref="T:System.Reflection.ICustomAttributeProvider" />.</span><span class="sxs-lookup"><span data-stu-id="7e819-292">An <see cref="T:System.Reflection.ICustomAttributeProvider" /> implementation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e819-293">Переопределите этот метод, чтобы обеспечить внутреннее отражение альтернативным способом получения значений атрибута CLR.</span><span class="sxs-lookup"><span data-stu-id="7e819-293">Override this method to provide the internal reflection with an alternative way to obtain CLR attribute values.</span></span> <span data-ttu-id="7e819-294">При отсутствии переопределения внутренний отражатель использует обычную логику отражения среды CLR, например вызовы <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A>.</span><span class="sxs-lookup"><span data-stu-id="7e819-294">In the absence of an override, the internal reflector uses typical CLR reflection logic such as calls to <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A>.</span></span>  
  
 <span data-ttu-id="7e819-295">Реализация по умолчанию возвращает значение `null`.</span><span class="sxs-lookup"><span data-stu-id="7e819-295">The default implementation returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupDeferringLoader">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt; LookupDeferringLoader ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.Xaml.XamlDeferringLoader&gt; LookupDeferringLoader() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupDeferringLoader" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupDeferringLoader () As XamlValueConverter(Of XamlDeferringLoader)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::Schema::XamlValueConverter&lt;System::Xaml::XamlDeferringLoader ^&gt; ^ LookupDeferringLoader();" />
      <MemberSignature Language="F#" Value="abstract member LookupDeferringLoader : unit -&gt; System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt;&#xA;override this.LookupDeferringLoader : unit -&gt; System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt;" Usage="xamlMember.LookupDeferringLoader " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7e819-296">Возвращает объект <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />, используемый для отложенной загрузки объектов, объявленных в XAML.</span><span class="sxs-lookup"><span data-stu-id="7e819-296">Returns a <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> object, which is used for deferred loading of XAML declared objects.</span></span></summary>
        <returns><span data-ttu-id="7e819-297">Объект <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> с ограничением <see cref="T:System.Xaml.XamlDeferringLoader" /> на универсальный класс.</span><span class="sxs-lookup"><span data-stu-id="7e819-297">A <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> that has a <see cref="T:System.Xaml.XamlDeferringLoader" /> constraint on the generic.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e819-298">Этот метод вызывается, когда вызывающий объект получает значение из <xref:System.Xaml.XamlMember.DeferringLoader%2A> свойства.</span><span class="sxs-lookup"><span data-stu-id="7e819-298">This method is invoked when a caller gets a value from the <xref:System.Xaml.XamlMember.DeferringLoader%2A> property.</span></span> <span data-ttu-id="7e819-299">Переопределите этот метод, если <xref:System.Xaml.XamlMember.DeferringLoader%2A> требуется возвратить значение, которое отличается от значения, включенного внутренним отражением по умолчанию, а также при предоставлении <xref:System.Xaml.Schema.XamlMemberInvoker> пользовательских сведений.</span><span class="sxs-lookup"><span data-stu-id="7e819-299">Override this method if you want <xref:System.Xaml.XamlMember.DeferringLoader%2A> to return a value that differs from the value that is enabled by default internal reflection, and if you are also providing custom <xref:System.Xaml.Schema.XamlMemberInvoker> information.</span></span>  
  
 <span data-ttu-id="7e819-300">Реализация по умолчанию возвращает объект путем чтения <xref:System.Windows.Markup.XamlDeferLoadAttribute> или <xref:System.Xaml.XamlDeferringLoader> использования из объявляющего типа.</span><span class="sxs-lookup"><span data-stu-id="7e819-300">The default implementation returns an object either by reading <xref:System.Windows.Markup.XamlDeferLoadAttribute> or using a <xref:System.Xaml.XamlDeferringLoader> from the declaring type.</span></span> <span data-ttu-id="7e819-301">Если ни один из объектов недоступен, этот `null`метод может вернуть значение.</span><span class="sxs-lookup"><span data-stu-id="7e819-301">If neither object is available, this method might return `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.DeferringLoader" />
      </Docs>
    </Member>
    <Member MemberName="LookupDependsOn">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IList&lt;System.Xaml.XamlMember&gt; LookupDependsOn ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class System.Xaml.XamlMember&gt; LookupDependsOn() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupDependsOn" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupDependsOn () As IList(Of XamlMember)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::Generic::IList&lt;System::Xaml::XamlMember ^&gt; ^ LookupDependsOn();" />
      <MemberSignature Language="F#" Value="abstract member LookupDependsOn : unit -&gt; System.Collections.Generic.IList&lt;System.Xaml.XamlMember&gt;&#xA;override this.LookupDependsOn : unit -&gt; System.Collections.Generic.IList&lt;System.Xaml.XamlMember&gt;" Usage="xamlMember.LookupDependsOn " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Xaml.XamlMember&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7e819-302">Возвращает список объектов <see cref="T:System.Xaml.XamlMember" />.</span><span class="sxs-lookup"><span data-stu-id="7e819-302">Returns a list of <see cref="T:System.Xaml.XamlMember" /> objects.</span></span> <span data-ttu-id="7e819-303">Элементы списка сообщают о членах, в которых существуют отношения зависимости для порядка инициализации относительно данного объекта <see cref="T:System.Xaml.XamlMember" />.</span><span class="sxs-lookup"><span data-stu-id="7e819-303">Items in the list report the members where dependency relationships for initialization order exist relative to this <see cref="T:System.Xaml.XamlMember" />.</span></span></summary>
        <returns><span data-ttu-id="7e819-304">Список объектов <see cref="T:System.Xaml.XamlMember" />.</span><span class="sxs-lookup"><span data-stu-id="7e819-304">A list of <see cref="T:System.Xaml.XamlMember" /> objects.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e819-305">Этот метод вызывается, когда вызывающий объект получает значение из <xref:System.Xaml.XamlMember.DependsOn%2A> свойства.</span><span class="sxs-lookup"><span data-stu-id="7e819-305">This method is invoked when a caller gets a value from the <xref:System.Xaml.XamlMember.DependsOn%2A> property.</span></span> <span data-ttu-id="7e819-306">Переопределите этот метод, если <xref:System.Xaml.XamlMember.DependsOn%2A> требуется возвратить значение, которое отличается от значения, включенного внутренним отражением по умолчанию, а также при предоставлении <xref:System.Xaml.Schema.XamlMemberInvoker> пользовательских сведений.</span><span class="sxs-lookup"><span data-stu-id="7e819-306">Override this method if you want <xref:System.Xaml.XamlMember.DependsOn%2A> to return a value that differs from the value that is enabled by default internal reflection, and if you are also providing custom <xref:System.Xaml.Schema.XamlMemberInvoker> information.</span></span>  
  
 <span data-ttu-id="7e819-307">Реализация средства чтения и записи XAML WPF в этом случае имеет <xref:System.Windows.Markup.DependsOnAttribute>атрибут.</span><span class="sxs-lookup"><span data-stu-id="7e819-307">The WPF XAML reader and writer implementations attribute this case with <xref:System.Windows.Markup.DependsOnAttribute>.</span></span> <span data-ttu-id="7e819-308">Реализация по умолчанию использует этот <xref:System.Windows.Markup.DependsOnAttribute> существующий метод.</span><span class="sxs-lookup"><span data-stu-id="7e819-308">The default implementation uses this existing <xref:System.Windows.Markup.DependsOnAttribute> technique.</span></span>  
  
 <span data-ttu-id="7e819-309">Переопределите этот метод, если вы не <xref:System.Windows.Markup.DependsOnAttribute> используете для этой цели и планируете заменить этот метод для указания порядка обработки свойств на собственный метод.</span><span class="sxs-lookup"><span data-stu-id="7e819-309">Override this method if you are not using <xref:System.Windows.Markup.DependsOnAttribute> for this purpose and intend to replace that technique for indicating property processing order with your own technique.</span></span> <span data-ttu-id="7e819-310">Если не требуется поддерживать порядок обработки свойств, можно использовать реализацию по умолчанию, так как она не возвращает результатов, что является соответствующим.</span><span class="sxs-lookup"><span data-stu-id="7e819-310">If you do not intend to support a property processing order, you can use the default implementation because it returns no results, which is appropriate.</span></span>  
  
 <span data-ttu-id="7e819-311">Список доступен только для чтения.</span><span class="sxs-lookup"><span data-stu-id="7e819-311">The list is read-only.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.DependsOn" />
      </Docs>
    </Member>
    <Member MemberName="LookupInvoker">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.Schema.XamlMemberInvoker LookupInvoker ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.Schema.XamlMemberInvoker LookupInvoker() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupInvoker" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupInvoker () As XamlMemberInvoker" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::Schema::XamlMemberInvoker ^ LookupInvoker();" />
      <MemberSignature Language="F#" Value="abstract member LookupInvoker : unit -&gt; System.Xaml.Schema.XamlMemberInvoker&#xA;override this.LookupInvoker : unit -&gt; System.Xaml.Schema.XamlMemberInvoker" Usage="xamlMember.LookupInvoker " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlMemberInvoker</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7e819-312">Возвращает объект <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />, связанный с данным типом <see cref="T:System.Xaml.XamlMember" />.</span><span class="sxs-lookup"><span data-stu-id="7e819-312">Returns a <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> that is associated with this <see cref="T:System.Xaml.XamlMember" />.</span></span></summary>
        <returns><span data-ttu-id="7e819-313">Сведения объекта <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> для этого объекта <see cref="T:System.Xaml.XamlMember" /> или значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="7e819-313">The <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> information for this <see cref="T:System.Xaml.XamlMember" />; or <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e819-314">Этот метод вызывается вызовами <xref:System.Xaml.XamlMember.Invoker%2A>метода.</span><span class="sxs-lookup"><span data-stu-id="7e819-314">This method is invoked by calls to <xref:System.Xaml.XamlMember.Invoker%2A>.</span></span>  
  
 <span data-ttu-id="7e819-315">Реализация по умолчанию не требует, чтобы <xref:System.Xaml.XamlMember> объект создавался с помощью одного из конструкторов, которые передают <xref:System.Xaml.Schema.XamlMemberInvoker>начальное значение.</span><span class="sxs-lookup"><span data-stu-id="7e819-315">The default implementation does not require that a <xref:System.Xaml.XamlMember> be constructed by using one of the constructors that pass an initial <xref:System.Xaml.Schema.XamlMemberInvoker>.</span></span> <span data-ttu-id="7e819-316">Однако значение должно существовать <xref:System.Xaml.XamlMember>для; в противном случае реализация по умолчанию возвращает `null`. <xref:System.Xaml.XamlMember.UnderlyingMember%2A></span><span class="sxs-lookup"><span data-stu-id="7e819-316">However, an <xref:System.Xaml.XamlMember.UnderlyingMember%2A> value must exist for the <xref:System.Xaml.XamlMember>; otherwise, the default implementation returns `null`.</span></span>  
  
 <span data-ttu-id="7e819-317">Переопределите этот метод, если вы также наследуете от <xref:System.Xaml.Schema.XamlMemberInvoker> и хотите вернуть производный класс.</span><span class="sxs-lookup"><span data-stu-id="7e819-317">Override this method if you also derive from <xref:System.Xaml.Schema.XamlMemberInvoker> and intend to return the derived class.</span></span> <span data-ttu-id="7e819-318">При возврате `null` <xref:System.Xaml.XamlMember.Invoker%2A> возвращается<xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A?displayProperty=nameWithType> к вызывающим объектам.</span><span class="sxs-lookup"><span data-stu-id="7e819-318">If you return `null`, <xref:System.Xaml.XamlMember.Invoker%2A> returns <xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A?displayProperty=nameWithType> to callers.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.Invoker" />
        <altmember cref="T:System.Xaml.Schema.XamlMemberInvoker" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsAmbient">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsAmbient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsAmbient() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupIsAmbient" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsAmbient () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsAmbient();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsAmbient : unit -&gt; bool&#xA;override this.LookupIsAmbient : unit -&gt; bool" Usage="xamlMember.LookupIsAmbient " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7e819-319">Возвращает значение, указывающее, рассматривается ли данный объект <see cref="T:System.Xaml.XamlMember" /> как внешнее свойство.</span><span class="sxs-lookup"><span data-stu-id="7e819-319">Returns whether this <see cref="T:System.Xaml.XamlMember" /> is reported as an ambient property.</span></span></summary>
        <returns><span data-ttu-id="7e819-320">Значение <see langword="true" />, если необходимо объявить этот объект <see cref="T:System.Xaml.XamlMember" /> внешним свойством; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="7e819-320"><see langword="true" /> to report this <see cref="T:System.Xaml.XamlMember" /> as an ambient property; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e819-321">Этот метод вызывается внутренними вызовами, которые проверяют сведения о внешнем свойстве XAML.</span><span class="sxs-lookup"><span data-stu-id="7e819-321">This method is invoked by internal calls that check for ambient XAML property information.</span></span> <span data-ttu-id="7e819-322">Поведение свойства окружения учитывается в поведении открытого API для средств чтения и записи XAML.</span><span class="sxs-lookup"><span data-stu-id="7e819-322">Ambient property behavior is accounted for in the public API behavior of XAML readers and XAML writers.</span></span> <span data-ttu-id="7e819-323">Внутренние вызовы, которые ссылаются <xref:System.Xaml.XamlMember.LookupIsAmbient%2A> на эту ссылку, обычно являются частью логики обработки XAML, чтобы убедиться, что объекты и значения, зависящие от использования окружающей среды для квалификации типов, могут работать правильно.</span><span class="sxs-lookup"><span data-stu-id="7e819-323">The internal calls that reference <xref:System.Xaml.XamlMember.LookupIsAmbient%2A> are usually part of XAML processing logic to make sure that objects and values that rely on ambient usage for type qualification can function correctly.</span></span> <span data-ttu-id="7e819-324">По умолчанию .NET Framework реализация служб XAML использует атрибуты CLR для получения этих сведений из отражения по резервным типам.</span><span class="sxs-lookup"><span data-stu-id="7e819-324">The default .NET Framework XAML Services implementation uses CLR attributing to obtain this information from reflection over backing types.</span></span> <span data-ttu-id="7e819-325">В частности, реализация по умолчанию <xref:System.Windows.Markup.AmbientAttribute> проверяет и `true` возвращает <xref:System.Xaml.XamlMember.LookupIsAmbient%2A> для <xref:System.Windows.Markup.AmbientAttribute> , если существует в определении элемента.</span><span class="sxs-lookup"><span data-stu-id="7e819-325">Specifically, the default implementation checks for <xref:System.Windows.Markup.AmbientAttribute> and returns `true` for <xref:System.Xaml.XamlMember.LookupIsAmbient%2A> if <xref:System.Windows.Markup.AmbientAttribute> exists on a member definition.</span></span>  
  
 <span data-ttu-id="7e819-326">Переопределите этот метод, если вы не <xref:System.Windows.Markup.AmbientAttribute> используете для этой цели и планируете заменить этот метод для указания внешних свойств XAML собственной методикой.</span><span class="sxs-lookup"><span data-stu-id="7e819-326">Override this method if you are not using <xref:System.Windows.Markup.AmbientAttribute> for this purpose and intend to replace that technique for indicating ambient XAML properties with your own technique.</span></span>  
  
 <span data-ttu-id="7e819-327">Примеры API-интерфейсов из WPF <xref:System.Windows.Markup.AmbientAttribute> этот <xref:System.Windows.Trigger.Property%2A?displayProperty=nameWithType> атрибут <xref:System.Windows.Style.BasedOn%2A?displayProperty=nameWithType>имеет атрибуты и.</span><span class="sxs-lookup"><span data-stu-id="7e819-327">Example APIs from WPF that attribute with <xref:System.Windows.Markup.AmbientAttribute> are <xref:System.Windows.Trigger.Property%2A?displayProperty=nameWithType> and <xref:System.Windows.Style.BasedOn%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Markup.AmbientAttribute" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsEvent">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsEvent ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsEvent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupIsEvent" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsEvent () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsEvent();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsEvent : unit -&gt; bool&#xA;override this.LookupIsEvent : unit -&gt; bool" Usage="xamlMember.LookupIsEvent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7e819-328">Возвращает значение, указывающее, представляет ли данный объект <see cref="T:System.Xaml.XamlMember" /> событие.</span><span class="sxs-lookup"><span data-stu-id="7e819-328">Returns whether this <see cref="T:System.Xaml.XamlMember" /> represents an event.</span></span></summary>
        <returns><span data-ttu-id="7e819-329">Значение <see langword="true" />, если необходимо объявить, что этот объект <see cref="T:System.Xaml.XamlMember" /> представляет событие; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="7e819-329"><see langword="true" /> to report that this <see cref="T:System.Xaml.XamlMember" /> represents an event; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e819-330">Реализация по умолчанию проверяет <xref:System.Xaml.XamlMember.UnderlyingMember%2A> , имеет ли <xref:System.Reflection.EventInfo>тип значение, и, если это `true`так, возвращает.</span><span class="sxs-lookup"><span data-stu-id="7e819-330">The default implementation checks whether <xref:System.Xaml.XamlMember.UnderlyingMember%2A> is of type <xref:System.Reflection.EventInfo>, and if it is, returns `true`.</span></span>  
  
 <span data-ttu-id="7e819-331">Этот метод вызывается, когда вызывающий объект получает значение из <xref:System.Xaml.XamlMember.IsEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="7e819-331">This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.IsEvent%2A>.</span></span> <span data-ttu-id="7e819-332">Переопределите этот метод, если требуется сообщать единообразные результаты для <xref:System.Xaml.XamlMember> всего производного класса или если имеются специализированные метаданные, которые можно интерпретировать для определения представлений системы типов XAML для каждого варианта.</span><span class="sxs-lookup"><span data-stu-id="7e819-332">Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available that can be interpreted to determine XAML type system representations on a per-case basis.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.IsEvent" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsReadOnly">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsReadOnly ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsReadOnly() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupIsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsReadOnly () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsReadOnly();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsReadOnly : unit -&gt; bool&#xA;override this.LookupIsReadOnly : unit -&gt; bool" Usage="xamlMember.LookupIsReadOnly " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7e819-333">Возвращает значение, указывающее, представляет ли объект <see cref="T:System.Xaml.XamlMember" /> требуемое свойство только для чтения.</span><span class="sxs-lookup"><span data-stu-id="7e819-333">Returns whether this <see cref="T:System.Xaml.XamlMember" /> represents an intended read-only property.</span></span></summary>
        <returns><span data-ttu-id="7e819-334">Значение <see langword="true" />, если необходимо объявить, что этот объект <see cref="T:System.Xaml.XamlMember" /> представляет ожидаемое свойство, доступное только для чтения; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="7e819-334"><see langword="true" /> to report this <see cref="T:System.Xaml.XamlMember" /> as an intended read-only property; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e819-335">Реализация по умолчанию `true` возвращает <xref:System.Xaml.XamlMember.UnderlyingMember%2A> , если существует, но `set` открытый метод доступа для него не существует, как определено внутренним отражением.</span><span class="sxs-lookup"><span data-stu-id="7e819-335">The default implementation returns `true` if <xref:System.Xaml.XamlMember.UnderlyingMember%2A> exists, but a public `set` accessor does not exist for it, as determined by internal reflection.</span></span>  
  
 <span data-ttu-id="7e819-336">Этот метод вызывается, когда вызывающий объект получает значение из <xref:System.Xaml.XamlMember.IsReadOnly%2A>.</span><span class="sxs-lookup"><span data-stu-id="7e819-336">This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.IsReadOnly%2A>.</span></span> <span data-ttu-id="7e819-337">Переопределите этот метод, если требуется сообщать единообразные результаты для <xref:System.Xaml.XamlMember> всего производного класса или если имеются специализированные метаданные, которые можно интерпретировать для определения представлений системы типов XAML для каждого варианта.</span><span class="sxs-lookup"><span data-stu-id="7e819-337">Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available that can be interpreted to determine XAML type system representations on a per-case basis.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.IsReadOnly" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsReadPublic">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsReadPublic ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsReadPublic() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupIsReadPublic" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsReadPublic () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsReadPublic();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsReadPublic : unit -&gt; bool&#xA;override this.LookupIsReadPublic : unit -&gt; bool" Usage="xamlMember.LookupIsReadPublic " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7e819-338">Возвращает значение, указывающее, представляет ли объект <see cref="T:System.Xaml.XamlMember" /> свойство, имеющее открытый метод доступа <see langword="get" />.</span><span class="sxs-lookup"><span data-stu-id="7e819-338">Returns whether this <see cref="T:System.Xaml.XamlMember" /> represents a property that has a public <see langword="get" /> accessor.</span></span></summary>
        <returns><span data-ttu-id="7e819-339">Значение <see langword="true" />, если этот объект <see cref="T:System.Xaml.XamlMember" /> представляет свойство, имеющее открытый метод доступа <see langword="get" />; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="7e819-339"><see langword="true" /> if this <see cref="T:System.Xaml.XamlMember" /> represents a property that has a public <see langword="get" /> accessor; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e819-340">Реализация по умолчанию возвращает результаты на основе внутреннего отражения или отрицания <xref:System.Xaml.XamlMember.IsWriteOnly%2A>, обрабатываемого в указанном порядке.</span><span class="sxs-lookup"><span data-stu-id="7e819-340">The default implementation returns results based either on internal reflection or the negation of <xref:System.Xaml.XamlMember.IsWriteOnly%2A>, processing in that order.</span></span>  
  
 <span data-ttu-id="7e819-341"><xref:System.Xaml.XamlMember.LookupIsReadPublic%2A>Возвращает значение, указывающее, является ли сам член открытым; Он возвращает `true` для открытого члена в неоткрытом объявляем типе.</span><span class="sxs-lookup"><span data-stu-id="7e819-341"><xref:System.Xaml.XamlMember.LookupIsReadPublic%2A> returns whether the member itself is public; it returns `true` for a public member on a nonpublic declaring type.</span></span> <span data-ttu-id="7e819-342">Вместо <xref:System.Xaml.XamlMember.IsReadPublic%2A> этого следует использовать, если также необходимо рассмотреть видимость объявляющего типа.</span><span class="sxs-lookup"><span data-stu-id="7e819-342">Use <xref:System.Xaml.XamlMember.IsReadPublic%2A> instead, if you also want to consider the visibility of the declaring type.</span></span>  
  
 <span data-ttu-id="7e819-343">Этот метод вызывается, когда вызывающий объект получает значение из <xref:System.Xaml.XamlMember.IsReadPublic%2A>.</span><span class="sxs-lookup"><span data-stu-id="7e819-343">This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.IsReadPublic%2A>.</span></span> <span data-ttu-id="7e819-344">Переопределите этот метод, если требуется сообщать единообразные результаты для <xref:System.Xaml.XamlMember> всего производного класса или если имеются специализированные метаданные для определения этого варианта для каждого случая.</span><span class="sxs-lookup"><span data-stu-id="7e819-344">Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="7e819-345"><xref:System.Xaml.XamlMember.LookupIsReadPublic%2A> Метод является виртуальным и, следовательно, может быть переопределен.</span><span class="sxs-lookup"><span data-stu-id="7e819-345">The <xref:System.Xaml.XamlMember.LookupIsReadPublic%2A> method is virtual and therefore, can be overridden.</span></span> <span data-ttu-id="7e819-346">Переопределение может быть изменено (вредоносным или иным образом) сообщаемыми сведениями о доступе элемента XAML, чтобы он больше не совпадал с данными о доступе к системе типов его базовой декларации CLR.</span><span class="sxs-lookup"><span data-stu-id="7e819-346">The override has the potential to change (maliciously or otherwise) the reported access information of a XAML member so that it no longer aligns in an expected way with the type system access information of its underlying CLR declaration.</span></span> <span data-ttu-id="7e819-347">Для всех проверок уровня доступа, критически важных для безопасности, используйте базовый тип CLR.</span><span class="sxs-lookup"><span data-stu-id="7e819-347">For any security-critical checks of access levels, use the underlying CLR type instead.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.IsReadPublic" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsUnknown">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsUnknown ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsUnknown() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupIsUnknown" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsUnknown () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsUnknown();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsUnknown : unit -&gt; bool&#xA;override this.LookupIsUnknown : unit -&gt; bool" Usage="xamlMember.LookupIsUnknown " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7e819-348">Возвращает значение, указывающее, представляет ли данный объект <see cref="T:System.Xaml.XamlMember" /> член, который не может быть разрешен в базовой системе, используемой для разрешения типов и членов.</span><span class="sxs-lookup"><span data-stu-id="7e819-348">Returns whether this <see cref="T:System.Xaml.XamlMember" /> represents a member that is not resolvable by the backing system that is used for type and member resolution.</span></span></summary>
        <returns><span data-ttu-id="7e819-349">Значение <see langword="true" />, если данный объект <see cref="T:System.Xaml.XamlMember" /> представляет неразрешимый член; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="7e819-349"><see langword="true" /> if this <see cref="T:System.Xaml.XamlMember" /> represents a non-resolvable member; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e819-350">Этот метод может быть вызван, когда вызывающий объект получает значение из <xref:System.Xaml.XamlMember.IsUnknown%2A>.</span><span class="sxs-lookup"><span data-stu-id="7e819-350">This method may be invoked when a caller gets a value from <xref:System.Xaml.XamlMember.IsUnknown%2A>.</span></span> <span data-ttu-id="7e819-351">Реализация по умолчанию возвращает результаты, которые основаны либо на внутреннем отражении `null` , либо <xref:System.Xaml.XamlMember.UnderlyingMember%2A>на проверке значения, обрабатываемого в указанном порядке.</span><span class="sxs-lookup"><span data-stu-id="7e819-351">The default implementation returns results that are based on either internal reflection or checking for a `null` value of <xref:System.Xaml.XamlMember.UnderlyingMember%2A>, processing in that order.</span></span>  
  
 <span data-ttu-id="7e819-352">Переопределите этот метод, если требуется сообщать единообразные результаты для <xref:System.Xaml.XamlMember> всего производного класса или если имеются специализированные метаданные для определения этого варианта для каждого случая.</span><span class="sxs-lookup"><span data-stu-id="7e819-352">Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.IsUnknown" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsWriteOnly">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsWriteOnly ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsWriteOnly() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupIsWriteOnly" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsWriteOnly () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsWriteOnly();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsWriteOnly : unit -&gt; bool&#xA;override this.LookupIsWriteOnly : unit -&gt; bool" Usage="xamlMember.LookupIsWriteOnly " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7e819-353">Возвращает значение, указывающее, действительно ли этот объект <see cref="T:System.Xaml.XamlMember" /> представляет член, имеющий открытый метод доступа <see langword="set" />, но не имеющий открытого метода доступа <see langword="get" />.</span><span class="sxs-lookup"><span data-stu-id="7e819-353">Returns whether this <see cref="T:System.Xaml.XamlMember" /> represents a member that has a public <see langword="set" /> accessor but not a public <see langword="get" /> accessor.</span></span></summary>
        <returns><span data-ttu-id="7e819-354">Значение <see langword="true" />, если этот объект <see cref="T:System.Xaml.XamlMember" /> представляет член, доступный только для записи; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="7e819-354"><see langword="true" /> if this <see cref="T:System.Xaml.XamlMember" /> represents a write-only member; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e819-355">Реализация по умолчанию `true` возвращает, <xref:System.Xaml.XamlMember.UnderlyingMember%2A> если существует, имеющий `set` открытый метод доступа и неоткрытый `get` метод доступа, как определено внутренним отражением.</span><span class="sxs-lookup"><span data-stu-id="7e819-355">The default implementation returns `true` if an <xref:System.Xaml.XamlMember.UnderlyingMember%2A> exists that has a public `set` accessor and a nonpublic `get` accessor, as determined by internal reflection.</span></span>  
  
 <span data-ttu-id="7e819-356">Этот метод вызывается, когда вызывающий объект получает значение из <xref:System.Xaml.XamlMember.IsWriteOnly%2A>.</span><span class="sxs-lookup"><span data-stu-id="7e819-356">This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.IsWriteOnly%2A>.</span></span> <span data-ttu-id="7e819-357">Переопределите этот метод, если требуется сообщать единообразные результаты для <xref:System.Xaml.XamlMember> всего производного класса или если имеются специализированные метаданные для определения этого варианта для каждого случая.</span><span class="sxs-lookup"><span data-stu-id="7e819-357">Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.IsWriteOnly" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsWritePublic">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsWritePublic ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsWritePublic() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupIsWritePublic" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsWritePublic () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsWritePublic();" />
      <MemberSignature Language="F#" Value="abstract member LookupIsWritePublic : unit -&gt; bool&#xA;override this.LookupIsWritePublic : unit -&gt; bool" Usage="xamlMember.LookupIsWritePublic " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7e819-358">Возвращает значение, указывающее, действительно ли этот объект <see cref="T:System.Xaml.XamlMember" /> представляет член, имеющий открытый метод доступа <see langword="set" />.</span><span class="sxs-lookup"><span data-stu-id="7e819-358">Returns whether this <see cref="T:System.Xaml.XamlMember" /> represents a member that has a public <see langword="set" /> accessor.</span></span></summary>
        <returns><span data-ttu-id="7e819-359">Значение <see langword="true" />, если этот объект <see cref="T:System.Xaml.XamlMember" /> представляет член, доступный для записи; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="7e819-359"><see langword="true" /> if this <see cref="T:System.Xaml.XamlMember" /> represents a writable member; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e819-360">Реализация по умолчанию возвращает результаты на основе внутреннего отражения или отрицания <xref:System.Xaml.XamlMember.IsReadOnly%2A>, обрабатываемого в указанном порядке.</span><span class="sxs-lookup"><span data-stu-id="7e819-360">The default implementation returns results based  either internal reflection or the negation of <xref:System.Xaml.XamlMember.IsReadOnly%2A>, processing in that order.</span></span>  
  
 <span data-ttu-id="7e819-361">Этот метод вызывается, когда вызывающий объект получает значение из <xref:System.Xaml.XamlMember.IsWritePublic%2A>.</span><span class="sxs-lookup"><span data-stu-id="7e819-361">This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.IsWritePublic%2A>.</span></span> <span data-ttu-id="7e819-362">Переопределите этот метод, если требуется сообщать единообразные результаты для <xref:System.Xaml.XamlMember> всего производного класса или если имеются специализированные метаданные для определения этого варианта для каждого случая.</span><span class="sxs-lookup"><span data-stu-id="7e819-362">Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="7e819-363"><xref:System.Xaml.XamlMember.LookupIsWritePublic%2A> Метод является виртуальным и, следовательно, может быть переопределен.</span><span class="sxs-lookup"><span data-stu-id="7e819-363">The <xref:System.Xaml.XamlMember.LookupIsWritePublic%2A> method is virtual and therefore, can be overridden.</span></span> <span data-ttu-id="7e819-364">Переопределение может быть изменено (вредоносным или иным образом) сообщаемыми сведениями о доступе элемента XAML, чтобы он больше не совпадал с данными о доступе к системе типов его базовой декларации CLR.</span><span class="sxs-lookup"><span data-stu-id="7e819-364">The override has the potential to change (maliciously or otherwise) the reported access information of a XAML member so that it no longer aligns in an expected way with the type system access information of its underlying CLR declaration.</span></span> <span data-ttu-id="7e819-365">Для всех проверок уровня доступа, критически важных для безопасности, используйте базовый тип CLR.</span><span class="sxs-lookup"><span data-stu-id="7e819-365">For any security-critical checks of access levels, use the underlying CLR type instead.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.IsWritePublic" />
      </Docs>
    </Member>
    <Member MemberName="LookupMarkupExtensionBracketCharacters">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IReadOnlyDictionary&lt;char,char&gt; LookupMarkupExtensionBracketCharacters ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IReadOnlyDictionary`2&lt;char, char&gt; LookupMarkupExtensionBracketCharacters() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupMarkupExtensionBracketCharacters" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupMarkupExtensionBracketCharacters () As IReadOnlyDictionary(Of Char, Char)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::Generic::IReadOnlyDictionary&lt;char, char&gt; ^ LookupMarkupExtensionBracketCharacters();" />
      <MemberSignature Language="F#" Value="abstract member LookupMarkupExtensionBracketCharacters : unit -&gt; System.Collections.Generic.IReadOnlyDictionary&lt;char, char&gt;&#xA;override this.LookupMarkupExtensionBracketCharacters : unit -&gt; System.Collections.Generic.IReadOnlyDictionary&lt;char, char&gt;" Usage="xamlMember.LookupMarkupExtensionBracketCharacters " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyDictionary&lt;System.Char,System.Char&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7e819-366">Возвращает символы открывающей и закрывающей скобок для расширения разметки.</span><span class="sxs-lookup"><span data-stu-id="7e819-366">Returns the opening and closing bracket characters for a markup extension.</span></span></summary>
        <returns><span data-ttu-id="7e819-367">Коллекция, содержащая символы открывающих и закрывающих скобок.</span><span class="sxs-lookup"><span data-stu-id="7e819-367">A collection containing the opening and closing bracket characters.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupTargetType">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.XamlType LookupTargetType ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.XamlType LookupTargetType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupTargetType" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupTargetType () As XamlType" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::XamlType ^ LookupTargetType();" />
      <MemberSignature Language="F#" Value="abstract member LookupTargetType : unit -&gt; System.Xaml.XamlType&#xA;override this.LookupTargetType : unit -&gt; System.Xaml.XamlType" Usage="xamlMember.LookupTargetType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7e819-368">Возвращает объект <see cref="T:System.Xaml.XamlType" /> того типа, в котором может существовать объект <see cref="T:System.Xaml.XamlMember" />.</span><span class="sxs-lookup"><span data-stu-id="7e819-368">Returns the <see cref="T:System.Xaml.XamlType" /> of the type where the <see cref="T:System.Xaml.XamlMember" /> can exist.</span></span></summary>
        <returns><span data-ttu-id="7e819-369">Тип, в котором может существовать объект <see cref="T:System.Xaml.XamlMember" />.</span><span class="sxs-lookup"><span data-stu-id="7e819-369">The type where the <see cref="T:System.Xaml.XamlMember" /> can exist.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e819-370">Реализация по умолчанию различает присоединяемые и не присоединяемые члены.</span><span class="sxs-lookup"><span data-stu-id="7e819-370">The default implementation distinguishes between attachable and non-attachable members.</span></span> <span data-ttu-id="7e819-371">Для членов, не являющихся присоединяемыми <xref:System.Xaml.XamlMember.DeclaringType%2A>, <xref:System.Xaml.XamlMember.LookupTargetType%2A> всегда возвращает.</span><span class="sxs-lookup"><span data-stu-id="7e819-371">For non-attachable members, <xref:System.Xaml.XamlMember.LookupTargetType%2A> always returns <xref:System.Xaml.XamlMember.DeclaringType%2A>.</span></span> <span data-ttu-id="7e819-372">Для присоединяемых членов <xref:System.Xaml.XamlMember.LookupTargetType%2A> возвращает результат на основе проверки <xref:System.Xaml.XamlMember.UnderlyingMember%2A> типа параметра доступа и интерпретирует этот тип на основе контекста схемы XAML.</span><span class="sxs-lookup"><span data-stu-id="7e819-372">For attachable members, <xref:System.Xaml.XamlMember.LookupTargetType%2A> returns a result based on examining the <xref:System.Xaml.XamlMember.UnderlyingMember%2A> accessor parameter type and interprets that type based on XAML schema context.</span></span>  
  
 <span data-ttu-id="7e819-373">Этот метод вызывается, когда вызывающий объект получает значение из <xref:System.Xaml.XamlMember.TargetType%2A>.</span><span class="sxs-lookup"><span data-stu-id="7e819-373">This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.TargetType%2A>.</span></span> <span data-ttu-id="7e819-374">Переопределите этот метод, если требуется сообщать единообразные результаты для <xref:System.Xaml.XamlMember> всего производного класса или если имеются специализированные метаданные для определения этого варианта для каждого случая.</span><span class="sxs-lookup"><span data-stu-id="7e819-374">Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.TargetType" />
      </Docs>
    </Member>
    <Member MemberName="LookupType">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.XamlType LookupType ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.XamlType LookupType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupType" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupType () As XamlType" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::XamlType ^ LookupType();" />
      <MemberSignature Language="F#" Value="abstract member LookupType : unit -&gt; System.Xaml.XamlType&#xA;override this.LookupType : unit -&gt; System.Xaml.XamlType" Usage="xamlMember.LookupType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7e819-375">Возвращает объект <see cref="T:System.Xaml.XamlType" /> того типа, который используется данным членом.</span><span class="sxs-lookup"><span data-stu-id="7e819-375">Returns the <see cref="T:System.Xaml.XamlType" /> of the type that is used by the member.</span></span></summary>
        <returns><span data-ttu-id="7e819-376">Объект <see cref="T:System.Xaml.XamlType" /> того типа, который используется данным членом.</span><span class="sxs-lookup"><span data-stu-id="7e819-376">The <see cref="T:System.Xaml.XamlType" /> of the type that is used by the member.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e819-377">Этот метод вызывается, когда вызывающий объект получает значение из <xref:System.Xaml.XamlMember.Type%2A>.</span><span class="sxs-lookup"><span data-stu-id="7e819-377">This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.Type%2A>.</span></span> <span data-ttu-id="7e819-378">Переопределите этот метод, если <xref:System.Xaml.XamlMember.Type%2A> требуется возвратить значение, которое отличается от значения, включенного внутренним отражением по умолчанию, а также при предоставлении <xref:System.Xaml.Schema.XamlMemberInvoker> пользовательских сведений.</span><span class="sxs-lookup"><span data-stu-id="7e819-378">Override this method if you want <xref:System.Xaml.XamlMember.Type%2A> to return a value that differs from the value that is enabled by default internal reflection, and if you are also providing custom <xref:System.Xaml.Schema.XamlMemberInvoker> information.</span></span>  
  
 <span data-ttu-id="7e819-379">Реализация по умолчанию использует разные пути кода и концептуальные значения для возвращаемого <xref:System.Xaml.XamlType> значения, основанного на том, представляет ли это <xref:System.Xaml.XamlMember> свойство, метод или событие.</span><span class="sxs-lookup"><span data-stu-id="7e819-379">The default implementation uses different code paths and conceptual meanings for the returned <xref:System.Xaml.XamlType> that is based on whether this <xref:System.Xaml.XamlMember> represents a property, method, or event.</span></span>  
  
-   <span data-ttu-id="7e819-380">Для свойства возвращается <xref:System.Xaml.XamlType> тип, который задает свойство или возвращается свойством.</span><span class="sxs-lookup"><span data-stu-id="7e819-380">For a property, the returned <xref:System.Xaml.XamlType> is the type that sets the property or is returned by the property.</span></span>  
  
-   <span data-ttu-id="7e819-381">Для события возвращаемым <xref:System.Xaml.XamlType> является обязательный тип обработчика событий (делегат в реализации CLR).</span><span class="sxs-lookup"><span data-stu-id="7e819-381">For an event, the returned <xref:System.Xaml.XamlType> is the required event handler type (a delegate in a CLR implementation).</span></span>  
  
-   <span data-ttu-id="7e819-382">Для метода <xref:System.Xaml.XamlType> является типом возвращаемого значения.</span><span class="sxs-lookup"><span data-stu-id="7e819-382">For a method, <xref:System.Xaml.XamlType> is the return type.</span></span>  
  
 <span data-ttu-id="7e819-383">В каждом случае контекст схемы XAML используется для вычисления типа XAML из базового системного типа.</span><span class="sxs-lookup"><span data-stu-id="7e819-383">In each case, XAML schema context is used to evaluate the XAML type from the underlying system type.</span></span>  
  
 <span data-ttu-id="7e819-384">Этот метод вызывается, когда вызывающий объект получает значение из <xref:System.Xaml.XamlMember.Type%2A>.</span><span class="sxs-lookup"><span data-stu-id="7e819-384">This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.Type%2A>.</span></span> <span data-ttu-id="7e819-385">Переопределите этот метод, если требуется сообщать единообразные результаты для <xref:System.Xaml.XamlMember> всего производного класса или если имеются специализированные метаданные для определения этого варианта для каждого случая.</span><span class="sxs-lookup"><span data-stu-id="7e819-385">Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.Type" />
      </Docs>
    </Member>
    <Member MemberName="LookupTypeConverter">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt; LookupTypeConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.ComponentModel.TypeConverter&gt; LookupTypeConverter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupTypeConverter" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupTypeConverter () As XamlValueConverter(Of TypeConverter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::Schema::XamlValueConverter&lt;System::ComponentModel::TypeConverter ^&gt; ^ LookupTypeConverter();" />
      <MemberSignature Language="F#" Value="abstract member LookupTypeConverter : unit -&gt; System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt;&#xA;override this.LookupTypeConverter : unit -&gt; System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt;" Usage="xamlMember.LookupTypeConverter " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7e819-386">Возвращает реализацию преобразователя типов, связанного с данным объектом <see cref="T:System.Xaml.XamlMember" />.</span><span class="sxs-lookup"><span data-stu-id="7e819-386">Returns a type converter implementation that is associated with this <see cref="T:System.Xaml.XamlMember" />.</span></span></summary>
        <returns><span data-ttu-id="7e819-387">Экземпляр <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> с ограничением <see cref="T:System.ComponentModel.TypeConverter" /> или значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="7e819-387">A <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> instance with <see cref="T:System.ComponentModel.TypeConverter" /> constraint; or <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e819-388">Реализация по умолчанию использует следующую логику и порядок обработки:</span><span class="sxs-lookup"><span data-stu-id="7e819-388">The default implementation uses the following logic and processing order:</span></span>  
  
-   <span data-ttu-id="7e819-389">Если атрибуты существуют на уровне члена (<xref:System.ComponentModel.TypeConverterAttribute>), сведения об атрибуте используются для вызова к <xref:System.Xaml.XamlSchemaContext.GetValueConverter%2A> контексту схемы XAML.</span><span class="sxs-lookup"><span data-stu-id="7e819-389">If attributing exists at the member level (<xref:System.ComponentModel.TypeConverterAttribute>), the attribute information is used for a call to <xref:System.Xaml.XamlSchemaContext.GetValueConverter%2A> against the XAML schema context.</span></span>  
  
-   <span data-ttu-id="7e819-390">Если <xref:System.Xaml.XamlMember.Type%2A> является допустимым, возвращается преобразователь типов, связанный с типом.</span><span class="sxs-lookup"><span data-stu-id="7e819-390">If <xref:System.Xaml.XamlMember.Type%2A> is valid, a type converter that is associated with the type is returned.</span></span>  
  
-   <span data-ttu-id="7e819-391">Если член является событием, возвращается преобразователь типов, специфичный для события.</span><span class="sxs-lookup"><span data-stu-id="7e819-391">If the member is an event, an event-specific type converter is returned.</span></span>  
  
 <span data-ttu-id="7e819-392">Этот метод вызывается, когда вызывающий объект получает значение из <xref:System.Xaml.XamlMember.TypeConverter%2A>.</span><span class="sxs-lookup"><span data-stu-id="7e819-392">This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.TypeConverter%2A>.</span></span> <span data-ttu-id="7e819-393">Переопределите этот метод, если требуется сообщать единообразные результаты для <xref:System.Xaml.XamlMember> всего производного класса или если имеются специализированные метаданные для определения этого варианта для каждого случая.</span><span class="sxs-lookup"><span data-stu-id="7e819-393">Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.TypeConverter" />
      </Docs>
    </Member>
    <Member MemberName="LookupUnderlyingGetter">
      <MemberSignature Language="C#" Value="protected virtual System.Reflection.MethodInfo LookupUnderlyingGetter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Reflection.MethodInfo LookupUnderlyingGetter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupUnderlyingGetter" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupUnderlyingGetter () As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Reflection::MethodInfo ^ LookupUnderlyingGetter();" />
      <MemberSignature Language="F#" Value="abstract member LookupUnderlyingGetter : unit -&gt; System.Reflection.MethodInfo&#xA;override this.LookupUnderlyingGetter : unit -&gt; System.Reflection.MethodInfo" Usage="xamlMember.LookupUnderlyingGetter " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7e819-394">Возвращает метод доступа <see langword="get" />, связанный с данным объектом <see cref="T:System.Xaml.XamlMember" />.</span><span class="sxs-lookup"><span data-stu-id="7e819-394">Returns a <see langword="get" /> accessor that is associated with this <see cref="T:System.Xaml.XamlMember" />.</span></span></summary>
        <returns><span data-ttu-id="7e819-395">Объект <see cref="T:System.Reflection.MethodInfo" /> для связанного метода доступа <see langword="get" /> или значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="7e819-395">The <see cref="T:System.Reflection.MethodInfo" /> for the associated <see langword="get" /> accessor; or <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e819-396">Реализация <xref:System.Xaml.XamlMember.UnderlyingMember%2A> по умолчанию интерпретирует свойство как <xref:System.Reflection.PropertyInfo> <xref:System.Reflection.PropertyInfo.GetGetMethod%2A?displayProperty=nameWithType> и возвращает значение (с параметром `true`, имеющим значение), что означает, что возвращаемый метод может быть неоткрытым.</span><span class="sxs-lookup"><span data-stu-id="7e819-396">The default implementation interprets the <xref:System.Xaml.XamlMember.UnderlyingMember%2A> property as <xref:System.Reflection.PropertyInfo> and returns the value of <xref:System.Reflection.PropertyInfo.GetGetMethod%2A?displayProperty=nameWithType> (with the parameter set to `true`), which means that the returned method can be nonpublic.</span></span> <span data-ttu-id="7e819-397">Это может привести `null` к определенным ситуациям.</span><span class="sxs-lookup"><span data-stu-id="7e819-397">This behavior can result in `null` for certain cases.</span></span> <span data-ttu-id="7e819-398">включая случаи, когда связанный метод доступа не существует или член не является свойством.</span><span class="sxs-lookup"><span data-stu-id="7e819-398">including cases where no associated accessor exists or the member is not a property.</span></span>  
  
 <span data-ttu-id="7e819-399">Этот метод вызывается, когда вызывающий объект получает значение из <xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter%2A> свойства связанного <xref:System.Xaml.Schema.XamlMemberInvoker>объекта.</span><span class="sxs-lookup"><span data-stu-id="7e819-399">This method is invoked when a caller gets a value from the <xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter%2A> property on an associated <xref:System.Xaml.Schema.XamlMemberInvoker>.</span></span> <span data-ttu-id="7e819-400">Переопределите этот метод, если требуется сообщать единообразные результаты для <xref:System.Xaml.XamlMember> всего производного класса или если имеются специализированные метаданные для определения этого варианта для каждого случая.</span><span class="sxs-lookup"><span data-stu-id="7e819-400">Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.</span></span> <span data-ttu-id="7e819-401">Обязательно реализуйте <xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A>, <xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A>и <xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A> так, чтобы они возвращали коррелированные результаты.</span><span class="sxs-lookup"><span data-stu-id="7e819-401">Make sure to implement <xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A>, <xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A>, and <xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A> so that they all return correlated results.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupUnderlyingMember">
      <MemberSignature Language="C#" Value="protected virtual System.Reflection.MemberInfo LookupUnderlyingMember ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Reflection.MemberInfo LookupUnderlyingMember() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupUnderlyingMember" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupUnderlyingMember () As MemberInfo" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Reflection::MemberInfo ^ LookupUnderlyingMember();" />
      <MemberSignature Language="F#" Value="abstract member LookupUnderlyingMember : unit -&gt; System.Reflection.MemberInfo&#xA;override this.LookupUnderlyingMember : unit -&gt; System.Reflection.MemberInfo" Usage="xamlMember.LookupUnderlyingMember " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7e819-402">Возвращает объект <see cref="T:System.Reflection.MemberInfo" /> системы типов среды CLR, связанный с данным объектом <see cref="T:System.Xaml.XamlMember" />.</span><span class="sxs-lookup"><span data-stu-id="7e819-402">Returns a CLR type system <see cref="T:System.Reflection.MemberInfo" /> that is associated with this <see cref="T:System.Xaml.XamlMember" />.</span></span></summary>
        <returns><span data-ttu-id="7e819-403">Объект <see cref="T:System.Reflection.MemberInfo" /> системы типов среды CLR, связанный с данным объектом <see cref="T:System.Xaml.XamlMember" />, или значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="7e819-403">A CLR type system <see cref="T:System.Reflection.MemberInfo" /> object that is associated with this <see cref="T:System.Xaml.XamlMember" />; or <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e819-404">Реализация по умолчанию возвращает сведения о базовом элементе, которые основаны на построении.</span><span class="sxs-lookup"><span data-stu-id="7e819-404">The default implementation returns the underlying member information, which is based on construction.</span></span> <span data-ttu-id="7e819-405">Если объект создан с сигнатурой, которая не предоставляет достаточно сведений для установки базового члена, этот метод возвращает `null`значение. <xref:System.Reflection.MemberInfo></span><span class="sxs-lookup"><span data-stu-id="7e819-405">If the <xref:System.Reflection.MemberInfo> object is constructed with a signature that does not provide enough information to set the underlying member, this method returns `null`.</span></span>  
  
 <span data-ttu-id="7e819-406">Если базовый элемент был задан во время создания, не нужно вызывать этот метод.</span><span class="sxs-lookup"><span data-stu-id="7e819-406">If an underlying member was set during construction, you should not need to call this method.</span></span>  
  
 <span data-ttu-id="7e819-407">Этот метод вызывается, когда вызывающий объект получает значение из <xref:System.Xaml.XamlMember.UnderlyingMember%2A>.</span><span class="sxs-lookup"><span data-stu-id="7e819-407">This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.UnderlyingMember%2A>.</span></span> <span data-ttu-id="7e819-408">Переопределите этот метод, если требуется сообщать единообразные результаты для <xref:System.Xaml.XamlMember> всего производного класса или если имеются специализированные метаданные для определения этого варианта для каждого случая.</span><span class="sxs-lookup"><span data-stu-id="7e819-408">Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.</span></span> <span data-ttu-id="7e819-409">Обязательно реализуйте <xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A>, <xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A>и <xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A> так, чтобы они возвращали коррелированные результаты.</span><span class="sxs-lookup"><span data-stu-id="7e819-409">Make sure to implement <xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A>, <xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A>, and <xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A> so that they all return correlated results.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.UnderlyingMember" />
      </Docs>
    </Member>
    <Member MemberName="LookupUnderlyingSetter">
      <MemberSignature Language="C#" Value="protected virtual System.Reflection.MethodInfo LookupUnderlyingSetter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Reflection.MethodInfo LookupUnderlyingSetter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupUnderlyingSetter" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupUnderlyingSetter () As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Reflection::MethodInfo ^ LookupUnderlyingSetter();" />
      <MemberSignature Language="F#" Value="abstract member LookupUnderlyingSetter : unit -&gt; System.Reflection.MethodInfo&#xA;override this.LookupUnderlyingSetter : unit -&gt; System.Reflection.MethodInfo" Usage="xamlMember.LookupUnderlyingSetter " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7e819-410">Возвращает метод доступа <see langword="set" />, связанный с данным объектом <see cref="T:System.Xaml.XamlMember" />.</span><span class="sxs-lookup"><span data-stu-id="7e819-410">Returns a <see langword="set" /> accessor that is associated with this <see cref="T:System.Xaml.XamlMember" />.</span></span></summary>
        <returns><span data-ttu-id="7e819-411">Объект <see cref="T:System.Reflection.MethodInfo" /> для связанного метода доступа <see langword="set" /> или значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="7e819-411">The <see cref="T:System.Reflection.MethodInfo" /> for the associated <see langword="set" /> accessor; or <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e819-412">Реализация по умолчанию интерпретирует <xref:System.Xaml.XamlMember.UnderlyingMember%2A> <xref:System.Reflection.PropertyInfo> <xref:System.Reflection.PropertyInfo.GetSetMethod%2A?displayProperty=nameWithType> и возвращает значение (с параметром, имеющим значение `true`), что означает, что возвращаемый метод может быть неоткрытым.</span><span class="sxs-lookup"><span data-stu-id="7e819-412">The default implementation interprets <xref:System.Xaml.XamlMember.UnderlyingMember%2A> as <xref:System.Reflection.PropertyInfo> and returns the value of <xref:System.Reflection.PropertyInfo.GetSetMethod%2A?displayProperty=nameWithType> (with the parameter set to `true`), which means that the returned method can be nonpublic.</span></span> <span data-ttu-id="7e819-413">Это может привести `null` к некоторым случаям, включая случаи отсутствия такого метода доступа, или член не является свойством.</span><span class="sxs-lookup"><span data-stu-id="7e819-413">This can result in `null` for certain cases, including cases where there is no such accessor, or the member is not a property.</span></span>  
  
 <span data-ttu-id="7e819-414">Этот метод вызывается, когда вызывающий объект получает значение из <xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter%2A> связанного <xref:System.Xaml.Schema.XamlMemberInvoker>объекта. Переопределите этот метод, если требуется сообщать единообразные результаты для <xref:System.Xaml.XamlMember> всего производного класса или если имеются специализированные метаданные для определения этого варианта для каждого случая.</span><span class="sxs-lookup"><span data-stu-id="7e819-414">This method is invoked when a caller gets a value from <xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter%2A> on an associated <xref:System.Xaml.Schema.XamlMemberInvoker>.Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.</span></span> <span data-ttu-id="7e819-415">Обязательно реализуйте <xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A>, <xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A>и <xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A> так, чтобы они возвращали коррелированные результаты.</span><span class="sxs-lookup"><span data-stu-id="7e819-415">Make sure to implement <xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A>, <xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A>, and <xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A> so that they all return correlated results.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupValueSerializer">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt; LookupValueSerializer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.Windows.Markup.ValueSerializer&gt; LookupValueSerializer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupValueSerializer" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupValueSerializer () As XamlValueConverter(Of ValueSerializer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::Schema::XamlValueConverter&lt;System::Windows::Markup::ValueSerializer ^&gt; ^ LookupValueSerializer();" />
      <MemberSignature Language="F#" Value="abstract member LookupValueSerializer : unit -&gt; System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt;&#xA;override this.LookupValueSerializer : unit -&gt; System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt;" Usage="xamlMember.LookupValueSerializer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7e819-416">Возвращает реализацию сериализатора значений, связанную с данным объектом <see cref="T:System.Xaml.XamlMember" />.</span><span class="sxs-lookup"><span data-stu-id="7e819-416">Returns a value serializer implementation that is associated with this <see cref="T:System.Xaml.XamlMember" />.</span></span></summary>
        <returns><span data-ttu-id="7e819-417">Экземпляр <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> с ограничением <see cref="T:System.Windows.Markup.ValueSerializer" /> или <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="7e819-417">A <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> instance with <see cref="T:System.Windows.Markup.ValueSerializer" /> constraint, or <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e819-418">Реализация по умолчанию использует следующую логику и порядок обработки:</span><span class="sxs-lookup"><span data-stu-id="7e819-418">The default implementation uses the following logic and processing order:</span></span>  
  
-   <span data-ttu-id="7e819-419">Если атрибуты существуют на уровне члена (<xref:System.Windows.Markup.ValueSerializerAttribute>), сведения об атрибуте используются для вызова к <xref:System.Xaml.XamlSchemaContext.GetValueConverter%2A> контексту схемы XAML.</span><span class="sxs-lookup"><span data-stu-id="7e819-419">If attributing exists at the member level (<xref:System.Windows.Markup.ValueSerializerAttribute>), the attribute information is used for a call to <xref:System.Xaml.XamlSchemaContext.GetValueConverter%2A> against the XAML schema context.</span></span>  
  
-   <span data-ttu-id="7e819-420">Если <xref:System.Xaml.XamlMember.Type%2A> является допустимым, возвращается преобразователь значений, связанный с типом.</span><span class="sxs-lookup"><span data-stu-id="7e819-420">If <xref:System.Xaml.XamlMember.Type%2A> is valid, a value converter that is associated with the type is returned.</span></span>  
  
-   <span data-ttu-id="7e819-421">Если предыдущие условия не применяются, `null` возвращается значение.</span><span class="sxs-lookup"><span data-stu-id="7e819-421">If the previous conditions do not apply, `null` is returned.</span></span>  
  
 <span data-ttu-id="7e819-422">Этот метод вызывается, когда вызывающий объект получает значение из <xref:System.Xaml.XamlMember.ValueSerializer%2A>.</span><span class="sxs-lookup"><span data-stu-id="7e819-422">This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.ValueSerializer%2A>.</span></span> <span data-ttu-id="7e819-423">Переопределите этот метод, если требуется сообщать единообразные результаты для <xref:System.Xaml.XamlMember> всего производного класса или если имеются специализированные метаданные для определения этого варианта для каждого случая.</span><span class="sxs-lookup"><span data-stu-id="7e819-423">Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.ValueSerializer" />
      </Docs>
    </Member>
    <Member MemberName="MarkupExtensionBracketCharacters">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyDictionary&lt;char,char&gt; MarkupExtensionBracketCharacters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyDictionary`2&lt;char, char&gt; MarkupExtensionBracketCharacters" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.MarkupExtensionBracketCharacters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MarkupExtensionBracketCharacters As IReadOnlyDictionary(Of Char, Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IReadOnlyDictionary&lt;char, char&gt; ^ MarkupExtensionBracketCharacters { System::Collections::Generic::IReadOnlyDictionary&lt;char, char&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MarkupExtensionBracketCharacters : System.Collections.Generic.IReadOnlyDictionary&lt;char, char&gt;" Usage="System.Xaml.XamlMember.MarkupExtensionBracketCharacters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyDictionary&lt;System.Char,System.Char&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7e819-424">Определяет символы открывающей и закрывающей скобок для расширения разметки.</span><span class="sxs-lookup"><span data-stu-id="7e819-424">Defines the opening and closing bracket characters for a markup extension.</span></span></summary>
        <value><span data-ttu-id="7e819-425">Коллекция, содержащая символы открывающих и закрывающих скобок.</span><span class="sxs-lookup"><span data-stu-id="7e819-425">A collection containing the opening and closing bracket characters.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Xaml.XamlMember.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7e819-426">Получает строковое представление имени <see langword="xamlName" />, объявляющего этот объект <see cref="T:System.Xaml.XamlMember" />.</span><span class="sxs-lookup"><span data-stu-id="7e819-426">Gets the <see langword="xamlName" /> name string that declares this <see cref="T:System.Xaml.XamlMember" />.</span></span></summary>
        <value><span data-ttu-id="7e819-427">Строковое представление имени <see langword="xamlName" />, объявляющего этот объект <see cref="T:System.Xaml.XamlMember" />.</span><span class="sxs-lookup"><span data-stu-id="7e819-427">The <see langword="xamlName" /> name string that declares this <see cref="T:System.Xaml.XamlMember" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e819-428">Это значение всегда задается во время создания.</span><span class="sxs-lookup"><span data-stu-id="7e819-428">This value is always set during construction.</span></span> <span data-ttu-id="7e819-429">Конструкторы, реализованные с помощью <xref:System.Xaml.XamlMember> , обычно создают исключение, если начальное имя не задано, поэтому не следует предполагать, что это свойство `null` является или пустой строкой, если используется .NET Framework служб XAML по умолчанию реализации.</span><span class="sxs-lookup"><span data-stu-id="7e819-429">The constructors that are implemented by <xref:System.Xaml.XamlMember> typically throw an exception if an initial name is not specified; therefore, do not expect this property to be `null` or an empty string, if you are using default .NET Framework XAML Services implementations.</span></span>  
  
 <span data-ttu-id="7e819-430">[Грамматика имяxaml](~/docs/framework/xaml-services/xamlname-grammar.md) и правила именования для типа CLR и членов не являются строго пересекающимися.</span><span class="sxs-lookup"><span data-stu-id="7e819-430">[XamlName Grammar](~/docs/framework/xaml-services/xamlname-grammar.md) and naming rules for CLR type and members are not an exact intersect.</span></span> <span data-ttu-id="7e819-431">Можно объявить имя члена, которое является допустимым в среде CLR, но недопустимо при именовании XAML.</span><span class="sxs-lookup"><span data-stu-id="7e819-431">It is possible to declare a member name that is legal under CLR but not valid under XAML naming.</span></span> <span data-ttu-id="7e819-432">Эту ситуацию следует избегать по возможности.</span><span class="sxs-lookup"><span data-stu-id="7e819-432">You should avoid this situation if possible.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/11e4cada-41d2-494d-9531-0d3df4dfcbe3"><span data-ttu-id="7e819-433">XamlName</span><span class="sxs-lookup"><span data-stu-id="7e819-433">XamlName</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Xaml.XamlMember xamlMember1, System.Xaml.XamlMember xamlMember2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(class System.Xaml.XamlMember xamlMember1, class System.Xaml.XamlMember xamlMember2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.op_Equality(System.Xaml.XamlMember,System.Xaml.XamlMember)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (xamlMember1 As XamlMember, xamlMember2 As XamlMember) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Xaml::XamlMember ^ xamlMember1, System::Xaml::XamlMember ^ xamlMember2);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Xaml.XamlMember * System.Xaml.XamlMember -&gt; bool" Usage="xamlMember1 = xamlMember2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xamlMember1" Type="System.Xaml.XamlMember" />
        <Parameter Name="xamlMember2" Type="System.Xaml.XamlMember" />
      </Parameters>
      <Docs>
        <param name="xamlMember1"><span data-ttu-id="7e819-434"><see cref="T:System.Xaml.XamlMember" /> или <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="7e819-434">A <see cref="T:System.Xaml.XamlMember" /> or <see langword="null" />.</span></span></param>
        <param name="xamlMember2"><span data-ttu-id="7e819-435"><see cref="T:System.Xaml.XamlMember" /> или <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="7e819-435">A <see cref="T:System.Xaml.XamlMember" /> or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="7e819-436">Определяет, совпадают ли значения двух указанных объектов <see cref="T:System.Xaml.XamlMember" />.</span><span class="sxs-lookup"><span data-stu-id="7e819-436">Determines whether two specified <see cref="T:System.Xaml.XamlMember" /> objects have the same value.</span></span></summary>
        <returns><span data-ttu-id="7e819-437">Значение <see langword="true" />, если значение параметра <paramref name="xamlMember1" /> совпадает со значением <paramref name="xamlMember2" />; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="7e819-437"><see langword="true" /> if the value of <paramref name="xamlMember1" /> is the same as the value of <paramref name="xamlMember2" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Xaml.XamlMember xamlMember1, System.Xaml.XamlMember xamlMember2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(class System.Xaml.XamlMember xamlMember1, class System.Xaml.XamlMember xamlMember2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.op_Inequality(System.Xaml.XamlMember,System.Xaml.XamlMember)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (xamlMember1 As XamlMember, xamlMember2 As XamlMember) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Xaml::XamlMember ^ xamlMember1, System::Xaml::XamlMember ^ xamlMember2);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Xaml.XamlMember * System.Xaml.XamlMember -&gt; bool" Usage="System.Xaml.XamlMember.op_Inequality (xamlMember1, xamlMember2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xamlMember1" Type="System.Xaml.XamlMember" />
        <Parameter Name="xamlMember2" Type="System.Xaml.XamlMember" />
      </Parameters>
      <Docs>
        <param name="xamlMember1"><span data-ttu-id="7e819-438"><see cref="T:System.Xaml.XamlMember" /> или <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="7e819-438">A <see cref="T:System.Xaml.XamlMember" /> or <see langword="null" />.</span></span></param>
        <param name="xamlMember2"><span data-ttu-id="7e819-439"><see cref="T:System.Xaml.XamlMember" /> или <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="7e819-439">A <see cref="T:System.Xaml.XamlMember" /> or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="7e819-440">Определяет, различаются ли значения двух указанных объектов <see cref="T:System.Xaml.XamlMember" />.</span><span class="sxs-lookup"><span data-stu-id="7e819-440">Determines whether two specified <see cref="T:System.Xaml.XamlMember" /> objects have different values.</span></span></summary>
        <returns><span data-ttu-id="7e819-441">Значение <see langword="true" />, если значение параметра <paramref name="xamlMember1" /> отличается от значения параметра <paramref name="xamlMember2" />; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="7e819-441"><see langword="true" /> if the value of <paramref name="xamlMember1" /> differs from the value of <paramref name="xamlMember2" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreferredXamlNamespace">
      <MemberSignature Language="C#" Value="public string PreferredXamlNamespace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PreferredXamlNamespace" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.PreferredXamlNamespace" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PreferredXamlNamespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PreferredXamlNamespace { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PreferredXamlNamespace : string" Usage="System.Xaml.XamlMember.PreferredXamlNamespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7e819-442">Получает URI одного пространства имен XAML, определяющий первичное пространство имен XAML для этого объекта <see cref="T:System.Xaml.XamlMember" />.</span><span class="sxs-lookup"><span data-stu-id="7e819-442">Gets the single XAML namespace URI that identifies the primary XAML namespace for this <see cref="T:System.Xaml.XamlMember" />.</span></span></summary>
        <value><span data-ttu-id="7e819-443">Идентификатор первичного пространства имен XAML для этого объекта <see cref="T:System.Xaml.XamlMember" /> в виде строки.</span><span class="sxs-lookup"><span data-stu-id="7e819-443">The identifier for the primary XAML namespace for this <see cref="T:System.Xaml.XamlMember" />, as a string.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e819-444">Свойство предоставляет то же значение, что и <xref:System.Xaml.XamlMember.GetXamlNamespaces%2A> вызов, а затем получает строку первого значения из возвращенного списка. <xref:System.Xaml.XamlMember.PreferredXamlNamespace%2A></span><span class="sxs-lookup"><span data-stu-id="7e819-444">The <xref:System.Xaml.XamlMember.PreferredXamlNamespace%2A> property provides the same value as calling <xref:System.Xaml.XamlMember.GetXamlNamespaces%2A> and then getting the first value string from the returned list.</span></span> <span data-ttu-id="7e819-445">Предпочтительное пространство имен XAML следует использовать при записи элемента обратно в текст или других представлениях, сохраняющих сведения о пространстве имен XAML.</span><span class="sxs-lookup"><span data-stu-id="7e819-445">The preferred XAML namespace should be used when writing the member back to text or other representations that preserve XAML namespace information.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SerializationVisibility">
      <MemberSignature Language="C#" Value="public System.ComponentModel.DesignerSerializationVisibility SerializationVisibility { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ComponentModel.DesignerSerializationVisibility SerializationVisibility" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.SerializationVisibility" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SerializationVisibility As DesignerSerializationVisibility" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::DesignerSerializationVisibility SerializationVisibility { System::ComponentModel::DesignerSerializationVisibility get(); };" />
      <MemberSignature Language="F#" Value="member this.SerializationVisibility : System.ComponentModel.DesignerSerializationVisibility" Usage="System.Xaml.XamlMember.SerializationVisibility" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.DesignerSerializationVisibility</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7e819-446">Получает значение <see cref="T:System.ComponentModel.DesignerSerializationVisibility" />, указывающее, как визуальный конструктор должен обрабатывать этот член.</span><span class="sxs-lookup"><span data-stu-id="7e819-446">Gets a <see cref="T:System.ComponentModel.DesignerSerializationVisibility" /> value, which indicates how a visual designer should process the member.</span></span></summary>
        <value><span data-ttu-id="7e819-447">Значение перечисления <see cref="T:System.ComponentModel.DesignerSerializationVisibility" />.</span><span class="sxs-lookup"><span data-stu-id="7e819-447">A value of the <see cref="T:System.ComponentModel.DesignerSerializationVisibility" /> enumeration.</span></span> <span data-ttu-id="7e819-448">Значение по умолчанию — <see cref="F:System.ComponentModel.DesignerSerializationVisibility.Visible" />.</span><span class="sxs-lookup"><span data-stu-id="7e819-448">The default is <see cref="F:System.ComponentModel.DesignerSerializationVisibility.Visible" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetType">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlType TargetType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlType TargetType" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.TargetType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TargetType As XamlType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::XamlType ^ TargetType { System::Xaml::XamlType ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TargetType : System.Xaml.XamlType" Usage="System.Xaml.XamlMember.TargetType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7e819-449">Получает объект <see cref="T:System.Xaml.XamlType" /> того типа, в котором может существовать объект <see cref="T:System.Xaml.XamlMember" />.</span><span class="sxs-lookup"><span data-stu-id="7e819-449">Gets the <see cref="T:System.Xaml.XamlType" /> of the type where the <see cref="T:System.Xaml.XamlMember" /> can exist.</span></span></summary>
        <value><span data-ttu-id="7e819-450">Тип, в котором может существовать объект <see cref="T:System.Xaml.XamlMember" />.</span><span class="sxs-lookup"><span data-stu-id="7e819-450">The type where the <see cref="T:System.Xaml.XamlMember" /> can exist.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e819-451">Возвращаемое значение отличается для присоединяемых и не присоединяемых членов.</span><span class="sxs-lookup"><span data-stu-id="7e819-451">The returned value is different for attachable and non-attachable members.</span></span> <span data-ttu-id="7e819-452">Для членов, не являющихся присоединяемыми, <xref:System.Xaml.XamlMember.TargetType%2A> возвращает. <xref:System.Xaml.XamlMember.DeclaringType%2A></span><span class="sxs-lookup"><span data-stu-id="7e819-452">For non-attachable members, <xref:System.Xaml.XamlMember.TargetType%2A> returns <xref:System.Xaml.XamlMember.DeclaringType%2A>.</span></span> <span data-ttu-id="7e819-453">Для присоединяемых членов <xref:System.Xaml.XamlMember.LookupTargetType%2A> возвращает результат, основанный на этой логике:</span><span class="sxs-lookup"><span data-stu-id="7e819-453">For attachable members, <xref:System.Xaml.XamlMember.LookupTargetType%2A> returns a result that is based on this logic:</span></span>  
  
-   <span data-ttu-id="7e819-454">Если отражение не может разрешить резервное копирование<xref:System.Xaml.XamlMember.IsUnknown%2A> ( `true`), этот метод возвращает внутреннюю константу, представляющую универсальный тип объекта.</span><span class="sxs-lookup"><span data-stu-id="7e819-454">If reflection cannot resolve a backing (<xref:System.Xaml.XamlMember.IsUnknown%2A> `true`), this method returns an internal constant that represents a generic object type.</span></span>  
  
-   <span data-ttu-id="7e819-455">Если предыдущее условие не применяется, <xref:System.Xaml.XamlMember.LookupTargetType%2A> вызывается метод.</span><span class="sxs-lookup"><span data-stu-id="7e819-455">If the previous condition does not apply, <xref:System.Xaml.XamlMember.LookupTargetType%2A> is called.</span></span> <span data-ttu-id="7e819-456">Реализация по умолчанию возвращает <xref:System.Xaml.XamlType> объект, основанный на проверке методов, `get` реализующих методы доступа `set` и.</span><span class="sxs-lookup"><span data-stu-id="7e819-456">The default implementation returns a <xref:System.Xaml.XamlType> that is based on examining the methods that implement the `get` and `set` accessors.</span></span> <span data-ttu-id="7e819-457">Класс может переопределяться <xref:System.Xaml.XamlMember.LookupTargetType%2A> для использования другого поведения, такого как другие формы метаданных, которые могут сообщать о целевых типах для присоединяемых членов.</span><span class="sxs-lookup"><span data-stu-id="7e819-457">A class might override <xref:System.Xaml.XamlMember.LookupTargetType%2A> to use a different behavior such as other metadata forms that might report target types for attachable members.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="xamlMember.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7e819-458">Возвращает строковое представление данного объекта <see cref="T:System.Xaml.XamlMember" />.</span><span class="sxs-lookup"><span data-stu-id="7e819-458">Returns a string representation of this <see cref="T:System.Xaml.XamlMember" />.</span></span></summary>
        <returns><span data-ttu-id="7e819-459">Строковое представление данного объекта <see cref="T:System.Xaml.XamlMember" />.</span><span class="sxs-lookup"><span data-stu-id="7e819-459">A string representation of this <see cref="T:System.Xaml.XamlMember" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e819-460">Эта реализация возвращает <xref:System.Xaml.XamlMember.Name%2A>.</span><span class="sxs-lookup"><span data-stu-id="7e819-460">This implementation returns <xref:System.Xaml.XamlMember.Name%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlType Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlType Type" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.Type" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Type As XamlType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::XamlType ^ Type { System::Xaml::XamlType ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Type : System.Xaml.XamlType" Usage="System.Xaml.XamlMember.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7e819-461">Получает объект <see cref="T:System.Xaml.XamlType" /> того типа, который используется данным членом.</span><span class="sxs-lookup"><span data-stu-id="7e819-461">Gets the <see cref="T:System.Xaml.XamlType" /> of the type that is used by the member.</span></span></summary>
        <value><span data-ttu-id="7e819-462">Объект <see cref="T:System.Xaml.XamlType" /> того типа, который используется данным членом.</span><span class="sxs-lookup"><span data-stu-id="7e819-462">The <see cref="T:System.Xaml.XamlType" /> of the type that is used by the member.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e819-463"><xref:System.Xaml.XamlMember.Type%2A> Вызов<xref:System.Xaml.XamlMember.LookupType%2A> Invoke или переопределение этого метода.</span><span class="sxs-lookup"><span data-stu-id="7e819-463">Calling <xref:System.Xaml.XamlMember.Type%2A> invokes <xref:System.Xaml.XamlMember.LookupType%2A> or a specific override of that method.</span></span> <span data-ttu-id="7e819-464">Это происходит, когда начальная логика внутреннего отражения еще не установила информацию.</span><span class="sxs-lookup"><span data-stu-id="7e819-464">This occurs when the initial internal reflection logic has not already set the information.</span></span>  
  
 <span data-ttu-id="7e819-465">В поведении по умолчанию <xref:System.Xaml.XamlMember.LookupType%2A> (без переопределения) возвращаемое <xref:System.Xaml.XamlType> значение может иметь различные концептуальные значения.</span><span class="sxs-lookup"><span data-stu-id="7e819-465">In the default behavior (no <xref:System.Xaml.XamlMember.LookupType%2A> override), the returned <xref:System.Xaml.XamlType> can have different conceptual meanings.</span></span> <span data-ttu-id="7e819-466">Это значение зависит от того, представляет <xref:System.Xaml.XamlMember> ли это свойство, метод или событие, как показано в следующем списке.</span><span class="sxs-lookup"><span data-stu-id="7e819-466">Which meaning applies depends on whether this <xref:System.Xaml.XamlMember> represents a property, method, or event, as the following list shows:</span></span>  
  
-   <span data-ttu-id="7e819-467">Для свойства возвращается <xref:System.Xaml.XamlType> тип, который задает свойство или возвращается свойством.</span><span class="sxs-lookup"><span data-stu-id="7e819-467">For a property, the returned <xref:System.Xaml.XamlType> is the type that sets the property or is returned by the property.</span></span>  
  
-   <span data-ttu-id="7e819-468">Для события возвращаемым <xref:System.Xaml.XamlType> является обязательный тип обработчика событий (делегат в реализации CLR).</span><span class="sxs-lookup"><span data-stu-id="7e819-468">For an event, the returned <xref:System.Xaml.XamlType> is the required event handler type (a delegate in a CLR implementation).</span></span>  
  
-   <span data-ttu-id="7e819-469">Для метода <xref:System.Xaml.XamlType> — это возвращаемый тип этого метода, который может иметь `null`значение.</span><span class="sxs-lookup"><span data-stu-id="7e819-469">For a method, <xref:System.Xaml.XamlType> is the return type of that method, which may be `null`.</span></span>  
  
 <span data-ttu-id="7e819-470">В каждом случае контекст схемы XAML используется для вычисления типа XAML из резервного типа.</span><span class="sxs-lookup"><span data-stu-id="7e819-470">In each case, the XAML schema context is used to evaluate the XAML type from the backing type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeConverter">
      <MemberSignature Language="C#" Value="public System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt; TypeConverter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.ComponentModel.TypeConverter&gt; TypeConverter" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.TypeConverter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TypeConverter As XamlValueConverter(Of TypeConverter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::Schema::XamlValueConverter&lt;System::ComponentModel::TypeConverter ^&gt; ^ TypeConverter { System::Xaml::Schema::XamlValueConverter&lt;System::ComponentModel::TypeConverter ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TypeConverter : System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt;" Usage="System.Xaml.XamlMember.TypeConverter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7e819-471">Получает объект <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />, который может использоваться для создания конструкции преобразователя типов для объектов, объявленных в языке XAML.</span><span class="sxs-lookup"><span data-stu-id="7e819-471">Gets a <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> object, which can be used for type conversion construction of XAML declared objects.</span></span></summary>
        <value><span data-ttu-id="7e819-472">Значение <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> с ограничением <see cref="T:System.ComponentModel.TypeConverter" /> для универсального класса.</span><span class="sxs-lookup"><span data-stu-id="7e819-472">A <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> value, with a <see cref="T:System.ComponentModel.TypeConverter" /> constraint on the generic.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e819-473"><xref:System.Xaml.XamlMember.TypeConverter%2A> Вызов<xref:System.Xaml.XamlMember.LookupTypeConverter%2A> Invoke или переопределение этого метода.</span><span class="sxs-lookup"><span data-stu-id="7e819-473">Calling <xref:System.Xaml.XamlMember.TypeConverter%2A> invokes <xref:System.Xaml.XamlMember.LookupTypeConverter%2A> or a specific override of that method.</span></span> <span data-ttu-id="7e819-474">Такое поведение возникает, когда начальная логика внутреннего отражения еще не установила информацию.</span><span class="sxs-lookup"><span data-stu-id="7e819-474">This behavior occurs when the initial internal reflection logic has not already set the information.</span></span>  
  
 <span data-ttu-id="7e819-475">Реализации, возвращающие значение <xref:System.Xaml.XamlMember.TypeConverter%2A> свойства, отличное от NULL, не обязательно являются рабочими. <xref:System.ComponentModel.TypeConverter></span><span class="sxs-lookup"><span data-stu-id="7e819-475">Implementations that return a non-null property value for <xref:System.Xaml.XamlMember.TypeConverter%2A> are not necessarily a working <xref:System.ComponentModel.TypeConverter>.</span></span> <span data-ttu-id="7e819-476">Ниже приведен список возможных возвращаемых значений, отличных от NULL, <xref:System.Xaml.XamlMember.TypeConverter%2A> для и значений, которые они представляют.</span><span class="sxs-lookup"><span data-stu-id="7e819-476">The following is a list of possible non-null return values for <xref:System.Xaml.XamlMember.TypeConverter%2A> and what these values represent:</span></span>  
  
-   <span data-ttu-id="7e819-477">Возвращаемое значение сообщает преобразователь типов, который в частности относится к этому элементу или более обычно к целевому типу преобразователя.</span><span class="sxs-lookup"><span data-stu-id="7e819-477">The return value reports a type converter that is attributed specifically to that member or more generally to the target type of the converter.</span></span> <span data-ttu-id="7e819-478">Обычно это поведение большинства систем типов XAML и обработчиков XAML для создания экземпляра преобразователя типов и вызова его методов.</span><span class="sxs-lookup"><span data-stu-id="7e819-478">This behavior is typically what most XAML type systems and XAML processors look for in order to instantiate a type converter and invoke its methods.</span></span>  
  
-   <span data-ttu-id="7e819-479">Возвращаемое значение сообщает о встроенном преобразователе значений.</span><span class="sxs-lookup"><span data-stu-id="7e819-479">The return value reports a built-in value converter.</span></span> <span data-ttu-id="7e819-480">Эти конвертеры существуют для определенных внутренних операций, выполняемых модулем записи XAML.</span><span class="sxs-lookup"><span data-stu-id="7e819-480">These converters exist for certain internal operations that are performed by a XAML writer.</span></span> <span data-ttu-id="7e819-481">В частности, эти встроенные преобразователи значений преобразуют необработанные строковые значения атрибута в примитивы уровня языка XAML.</span><span class="sxs-lookup"><span data-stu-id="7e819-481">In particular, these built-in value converters convert the raw attribute string values to the XAML language-level primitives.</span></span> <span data-ttu-id="7e819-482">Для .NET Framework реализации служб XAML эти встроенные преобразования типов часто пересылаются в преобразователь типов, определенный в системной сборке.</span><span class="sxs-lookup"><span data-stu-id="7e819-482">For the .NET Framework XAML Services implementation, these built-in type conversions often forward to a type converter that is defined in the System assembly.</span></span> <span data-ttu-id="7e819-483">Например, преобразование <xref:System.Int32> значения имеет встроенное перенаправленное преобразование, поэтому <xref:System.Xaml.Schema.XamlValueConverter%601.ConverterType%2A> значение ссылается на <xref:System.ComponentModel.Int32Converter>.</span><span class="sxs-lookup"><span data-stu-id="7e819-483">For example, a conversion for an <xref:System.Int32> value has built-in forwarded conversion, and therefore, the <xref:System.Xaml.Schema.XamlValueConverter%601.ConverterType%2A> value references <xref:System.ComponentModel.Int32Converter>.</span></span>  
  
-   <span data-ttu-id="7e819-484">Возвращаемое значение сообщает об особом случае неограниченной объектной модели. то есть, <xref:System.Xaml.XamlMember> <xref:System.Xaml.XamlMember.Type%2A> имеет значение <xref:System.Object>.</span><span class="sxs-lookup"><span data-stu-id="7e819-484">The return value reports the special case of an unconstrained object model; that is, the <xref:System.Xaml.XamlMember> has a <xref:System.Xaml.XamlMember.Type%2A> value of <xref:System.Object>.</span></span> <span data-ttu-id="7e819-485">В этом случае <xref:System.Xaml.Schema.XamlValueConverter%601> отчет <xref:System.Xaml.Schema.XamlValueConverter%601.Name%2A?displayProperty=nameWithType> имеет значение {`Object}`.</span><span class="sxs-lookup"><span data-stu-id="7e819-485">In this case, the <xref:System.Xaml.Schema.XamlValueConverter%601> reports that the <xref:System.Xaml.Schema.XamlValueConverter%601.Name%2A?displayProperty=nameWithType> is {`Object}`.</span></span> <span data-ttu-id="7e819-486">Однако это <xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A> `null` связано с тем, что для выполнения этого преобразования не существует фактического типа или экземпляра.</span><span class="sxs-lookup"><span data-stu-id="7e819-486">However, <xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A> is `null` because no actual type or instance is available to perform this conversion.</span></span> <span data-ttu-id="7e819-487">Вместо этого поведение объектной модели не может быть определено до времени выполнения, когда среда выполнения конкретной технологии определяет обработку графа объекта.</span><span class="sxs-lookup"><span data-stu-id="7e819-487">Instead, the object model behavior cannot be determined until run time, when the runtime of the specific technology determines the handling of its object graph.</span></span>  
  
 <span data-ttu-id="7e819-488">Если у вас есть доступ к <xref:System.ComponentModel.TypeConverter> работе <xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A>из, можно вызвать его методы преобразования.</span><span class="sxs-lookup"><span data-stu-id="7e819-488">If you can access a working <xref:System.ComponentModel.TypeConverter> from <xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A>, you can invoke its conversion methods.</span></span> <span data-ttu-id="7e819-489">Однако многие методы преобразования зависят от контекста службы.</span><span class="sxs-lookup"><span data-stu-id="7e819-489">However, many conversion methods rely on service context.</span></span> <span data-ttu-id="7e819-490">Если у вас нет того же контекста службы, который преобразователь типов ожидает для своей обычной роли при записи объектов для графов объектов, то методы преобразователя могут создавать исключения.</span><span class="sxs-lookup"><span data-stu-id="7e819-490">If you do not have the same service context available that the type converter expects for its typical role of writing objects for object graphs, the converter methods can throw exceptions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnderlyingMember">
      <MemberSignature Language="C#" Value="public System.Reflection.MemberInfo UnderlyingMember { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.MemberInfo UnderlyingMember" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.UnderlyingMember" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UnderlyingMember As MemberInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::MemberInfo ^ UnderlyingMember { System::Reflection::MemberInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UnderlyingMember : System.Reflection.MemberInfo" Usage="System.Xaml.XamlMember.UnderlyingMember" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7e819-491">Получает объект <see cref="T:System.Reflection.MemberInfo" /> системы типов среды CLR, доступный для члена, который создан объектом <see cref="T:System.Reflection.PropertyInfo" />, <see cref="T:System.Reflection.MethodInfo" /> или <see cref="T:System.Reflection.EventInfo" />.</span><span class="sxs-lookup"><span data-stu-id="7e819-491">Gets the CLR type system <see cref="T:System.Reflection.MemberInfo" /> that is available for a member that is constructed by <see cref="T:System.Reflection.PropertyInfo" />, <see cref="T:System.Reflection.MethodInfo" />, or <see cref="T:System.Reflection.EventInfo" />.</span></span></summary>
        <value><span data-ttu-id="7e819-492">Сведения объекта <see cref="T:System.Reflection.MemberInfo" /> системы типов среды CLR, преобразованные из исходных параметров конструктора.</span><span class="sxs-lookup"><span data-stu-id="7e819-492">CLR type system <see cref="T:System.Reflection.MemberInfo" /> information, as cast from the initial constructor parameters.</span></span> <span data-ttu-id="7e819-493">Объект <see cref="T:System.Xaml.XamlMember" />, созданный с сигнатурой <see cref="M:System.Xaml.XamlMember.#ctor(System.String,System.Xaml.XamlType,System.Boolean)" />, возвращает значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="7e819-493">A <see cref="T:System.Xaml.XamlMember" /> that is constructed with the <see cref="M:System.Xaml.XamlMember.#ctor(System.String,System.Xaml.XamlType,System.Boolean)" /> signature returns <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e819-494"><xref:System.Xaml.XamlMember.UnderlyingMember%2A> Вызов<xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A> Invoke или переопределение этого метода.</span><span class="sxs-lookup"><span data-stu-id="7e819-494">Calling <xref:System.Xaml.XamlMember.UnderlyingMember%2A> invokes <xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A> or a specific override of that method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValueSerializer">
      <MemberSignature Language="C#" Value="public System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt; ValueSerializer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.Windows.Markup.ValueSerializer&gt; ValueSerializer" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.ValueSerializer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ValueSerializer As XamlValueConverter(Of ValueSerializer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::Schema::XamlValueConverter&lt;System::Windows::Markup::ValueSerializer ^&gt; ^ ValueSerializer { System::Xaml::Schema::XamlValueConverter&lt;System::Windows::Markup::ValueSerializer ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ValueSerializer : System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt;" Usage="System.Xaml.XamlMember.ValueSerializer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7e819-495">Получает объект <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />, используемый для сериализации значений объектов, объявленных в языке XAML.</span><span class="sxs-lookup"><span data-stu-id="7e819-495">Gets a <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> object, which is used for value serialization of XAML declared objects.</span></span></summary>
        <value><span data-ttu-id="7e819-496">Объект <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> с ограничением <see cref="T:System.Windows.Markup.ValueSerializer" /> для универсального класса.</span><span class="sxs-lookup"><span data-stu-id="7e819-496">A <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> with <see cref="T:System.Windows.Markup.ValueSerializer" /> constraint on the generic.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e819-497"><xref:System.Xaml.XamlMember.ValueSerializer%2A> Вызов<xref:System.Xaml.XamlMember.LookupValueSerializer%2A> Invoke или переопределение этого метода.</span><span class="sxs-lookup"><span data-stu-id="7e819-497">Calling <xref:System.Xaml.XamlMember.ValueSerializer%2A> invokes <xref:System.Xaml.XamlMember.LookupValueSerializer%2A> or a specific override of that method.</span></span> <span data-ttu-id="7e819-498">Такое поведение возникает, когда начальная логика внутреннего отражения еще не установила информацию.</span><span class="sxs-lookup"><span data-stu-id="7e819-498">This behavior occurs when the initial internal reflection logic has not already set the information.</span></span>  
  
 <span data-ttu-id="7e819-499">Не все случаи, в которых возвращается значение <xref:System.Xaml.XamlMember.ValueSerializer%2A> свойства, отличное от NULL, обязательно являются рабочими. <xref:System.Windows.Markup.ValueSerializer></span><span class="sxs-lookup"><span data-stu-id="7e819-499">Not all cases that return a non-null property value for <xref:System.Xaml.XamlMember.ValueSerializer%2A> are necessarily a working <xref:System.Windows.Markup.ValueSerializer>.</span></span> <span data-ttu-id="7e819-500">См <xref:System.Xaml.XamlMember.TypeConverter%2A>. также те же рекомендации, <xref:System.Xaml.XamlMember.ValueSerializer%2A>что и для.</span><span class="sxs-lookup"><span data-stu-id="7e819-500">See <xref:System.Xaml.XamlMember.TypeConverter%2A>; the same considerations apply to <xref:System.Xaml.XamlMember.ValueSerializer%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>