<Type Name="JsonReaderWriterFactory" FullName="System.Runtime.Serialization.Json.JsonReaderWriterFactory">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a7abf135db94201d393c1e8dbb694ddbcb44f711" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69087666" /></Metadata><TypeSignature Language="C#" Value="public static class JsonReaderWriterFactory" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit JsonReaderWriterFactory extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Serialization.Json.JsonReaderWriterFactory" />
  <TypeSignature Language="VB.NET" Value="Public Class JsonReaderWriterFactory" />
  <TypeSignature Language="C++ CLI" Value="public ref class JsonReaderWriterFactory abstract sealed" />
  <TypeSignature Language="F#" Value="type JsonReaderWriterFactory = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization.Json</AssemblyName>
    <AssemblyVersion>4.0.4.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Web</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("System.ServiceModel.Web, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="adf0c-101">Создает экземпляры <see cref="T:System.Xml.XmlDictionaryReader" />, которые могут осуществлять чтение данных, кодированных с использованием нотации объектов JavaScript (JSON), из потока или буфера и сопоставлять их набору сведений XML, а также экземпляры <see cref="T:System.Xml.XmlDictionaryWriter" />, которые могут сопоставлять набор сведений XML данным JSON и записывать данные с кодированием JSON в поток.</span><span class="sxs-lookup"><span data-stu-id="adf0c-101">Produces instances of <see cref="T:System.Xml.XmlDictionaryReader" /> that can read data encoded with JavaScript Object Notation (JSON) from a stream or buffer and map it to an XML Infoset and instances of <see cref="T:System.Xml.XmlDictionaryWriter" /> that can map an XML Infoset to JSON and write JSON-encoded data to a stream.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="adf0c-102">Windows Communication Foundation (WCF) обрабатывает сообщения JSON с помощью сопоставления между данными JSON и информационным набором XML.</span><span class="sxs-lookup"><span data-stu-id="adf0c-102">Windows Communication Foundation (WCF) processes JSON messages using a mapping between JSON data and the XML Infoset.</span></span> <span data-ttu-id="adf0c-103">Как правило, это сопоставление скрыто от просмотра.</span><span class="sxs-lookup"><span data-stu-id="adf0c-103">Normally, this mapping is hidden from view.</span></span> <span data-ttu-id="adf0c-104">Однако в некоторых сложных случаях может потребоваться вручную выполнить преобразование между JSON и XML.</span><span class="sxs-lookup"><span data-stu-id="adf0c-104">However, in some advanced scenarios it may be necessary to manually convert between JSON and XML.</span></span> <span data-ttu-id="adf0c-105">При этом для создания необходимых средств чтения и записи XML может использоваться класс <xref:System.Runtime.Serialization.Json.JsonReaderWriterFactory>.</span><span class="sxs-lookup"><span data-stu-id="adf0c-105">In this case, the <xref:System.Runtime.Serialization.Json.JsonReaderWriterFactory> class can be used to create the necessary XML readers and writers.</span></span> <span data-ttu-id="adf0c-106">Обратите внимание, что каждый элемент набора сведений XML может быть сопоставлен нотации JSON.</span><span class="sxs-lookup"><span data-stu-id="adf0c-106">Note that not every XML Infoset element can be mapped to JSON.</span></span> <span data-ttu-id="adf0c-107">Дополнительные сведения о сопоставлении см [. в разделе как Сериализация и десериализация данных](~/docs/framework/wcf/feature-details/how-to-serialize-and-deserialize-json-data.md)JSON.</span><span class="sxs-lookup"><span data-stu-id="adf0c-107">For more information about mapping, see [How to: Serialize and Deserialize JSON Data](~/docs/framework/wcf/feature-details/how-to-serialize-and-deserialize-json-data.md).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="CreateJsonReader">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="adf0c-108">Создает объект <see cref="T:System.Xml.XmlDictionaryReader" />, который может сопоставлять потоки или буферы, кодированные с использованием нотации объектов JavaScript (JSON), набору сведений XML.</span><span class="sxs-lookup"><span data-stu-id="adf0c-108">Creates an <see cref="T:System.Xml.XmlDictionaryReader" /> that can map - streams or buffers encoded with JavaScript Object Notation (JSON) to an XML Infoset.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="adf0c-109">Каждая из перегрузок использует <xref:System.Xml.XmlDictionaryReaderQuotas> для предотвращения атак отказа в обслуживании при чтении недостоверных данных.</span><span class="sxs-lookup"><span data-stu-id="adf0c-109">Each of the overloads uses a <xref:System.Xml.XmlDictionaryReaderQuotas> to prevent Denial of Service (DoS) attacks when reading untrusted data.</span></span> <span data-ttu-id="adf0c-110">Дополнительные сведения об использовании <xref:System.Xml.XmlDictionaryReaderQuotas> для предотвращения атак типа "отказ в обслуживании" при чтении ненадежных данных см. в статье [вопросы безопасности для данных](~/docs/framework/wcf/feature-details/security-considerations-for-data.md).</span><span class="sxs-lookup"><span data-stu-id="adf0c-110">For more information about using <xref:System.Xml.XmlDictionaryReaderQuotas> to prevent Denial of Service attacks when reading untrusted data, see [Security Considerations for Data](~/docs/framework/wcf/feature-details/security-considerations-for-data.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateJsonReader">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlDictionaryReader CreateJsonReader (byte[] buffer, System.Xml.XmlDictionaryReaderQuotas quotas);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlDictionaryReader CreateJsonReader(unsigned int8[] buffer, class System.Xml.XmlDictionaryReaderQuotas quotas) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader(System.Byte[],System.Xml.XmlDictionaryReaderQuotas)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateJsonReader (buffer As Byte(), quotas As XmlDictionaryReaderQuotas) As XmlDictionaryReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlDictionaryReader ^ CreateJsonReader(cli::array &lt;System::Byte&gt; ^ buffer, System::Xml::XmlDictionaryReaderQuotas ^ quotas);" />
      <MemberSignature Language="F#" Value="static member CreateJsonReader : byte[] * System.Xml.XmlDictionaryReaderQuotas -&gt; System.Xml.XmlDictionaryReader" Usage="System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader (buffer, quotas)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Json</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="quotas" Type="System.Xml.XmlDictionaryReaderQuotas" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="adf0c-111">Массив буфера входных байтов <see cref="T:System.Byte" />, из которого выполняется чтение.</span><span class="sxs-lookup"><span data-stu-id="adf0c-111">The input <see cref="T:System.Byte" /> buffer array from which to read.</span></span></param>
        <param name="quotas"><span data-ttu-id="adf0c-112">Объект <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />, используемый для предотвращения атак типа «отказ в обслуживании» при чтении ненадежных данных.</span><span class="sxs-lookup"><span data-stu-id="adf0c-112">The <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> used to prevent Denial of Service attacks when reading untrusted data.</span></span></param>
        <summary><span data-ttu-id="adf0c-113">Создает объект <see cref="T:System.Xml.XmlDictionaryReader" />, который может сопоставлять буферы, кодированные с использованием нотации объектов JavaScript (JSON), набору сведений XML.</span><span class="sxs-lookup"><span data-stu-id="adf0c-113">Creates an <see cref="T:System.Xml.XmlDictionaryReader" /> that can map buffers encoded with JavaScript Object Notation (JSON) to an XML Infoset.</span></span></summary>
        <returns><span data-ttu-id="adf0c-114">Объект <see cref="T:System.Xml.XmlDictionaryReader" />, который может обрабатывать данные нотации объектов JavaScript (JSON).</span><span class="sxs-lookup"><span data-stu-id="adf0c-114">An <see cref="T:System.Xml.XmlDictionaryReader" /> that can process JavaScript Object Notation (JSON) data.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="adf0c-115">Эта перегрузка не принимает параметр <xref:System.Text.Encoding>.</span><span class="sxs-lookup"><span data-stu-id="adf0c-115">This overload does not accept an <xref:System.Text.Encoding> parameter.</span></span> <span data-ttu-id="adf0c-116">Кодировка (UTF-8, Юникод или Юникод с обратным порядком байтов) обнаруживается автоматически при чтении данных.</span><span class="sxs-lookup"><span data-stu-id="adf0c-116">The character encoding (UTF-8, Unicode or Big-Endian Unicode) is auto-detected when the data is read.</span></span>  
  
 <span data-ttu-id="adf0c-117">Дополнительные сведения об использовании <xref:System.Xml.XmlDictionaryReaderQuotas> для предотвращения атак типа "отказ в обслуживании" при чтении ненадежных данных см. в статье [вопросы безопасности для данных](~/docs/framework/wcf/feature-details/security-considerations-for-data.md).</span><span class="sxs-lookup"><span data-stu-id="adf0c-117">For more information about using <xref:System.Xml.XmlDictionaryReaderQuotas> to prevent Denial of Service attacks when reading untrusted data, see [Security Considerations for Data](~/docs/framework/wcf/feature-details/security-considerations-for-data.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateJsonReader">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlDictionaryReader CreateJsonReader (System.IO.Stream stream, System.Xml.XmlDictionaryReaderQuotas quotas);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlDictionaryReader CreateJsonReader(class System.IO.Stream stream, class System.Xml.XmlDictionaryReaderQuotas quotas) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader(System.IO.Stream,System.Xml.XmlDictionaryReaderQuotas)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlDictionaryReader ^ CreateJsonReader(System::IO::Stream ^ stream, System::Xml::XmlDictionaryReaderQuotas ^ quotas);" />
      <MemberSignature Language="F#" Value="static member CreateJsonReader : System.IO.Stream * System.Xml.XmlDictionaryReaderQuotas -&gt; System.Xml.XmlDictionaryReader" Usage="System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader (stream, quotas)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Json</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="quotas" Type="System.Xml.XmlDictionaryReaderQuotas" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="adf0c-118">Входной поток <see cref="T:System.IO.Stream" />, из которого выполняется чтение.</span><span class="sxs-lookup"><span data-stu-id="adf0c-118">The input <see cref="T:System.IO.Stream" /> from which to read.</span></span></param>
        <param name="quotas"><span data-ttu-id="adf0c-119">Объект <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />, используемый для предотвращения атак типа «отказ в обслуживании» при чтении ненадежных данных.</span><span class="sxs-lookup"><span data-stu-id="adf0c-119">The <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> used to prevent Denial of Service attacks when reading untrusted data.</span></span></param>
        <summary><span data-ttu-id="adf0c-120">Создает объект <see cref="T:System.Xml.XmlDictionaryReader" />, который может сопоставлять потоки, кодированные с использованием нотации объектов JavaScript (JSON), набору сведений XML.</span><span class="sxs-lookup"><span data-stu-id="adf0c-120">Creates an <see cref="T:System.Xml.XmlDictionaryReader" /> that can map streams encoded with JavaScript Object Notation (JSON) to an XML Infoset.</span></span></summary>
        <returns><span data-ttu-id="adf0c-121">Объект <see cref="T:System.Xml.XmlDictionaryReader" />, который может осуществлять чтение данных нотации объектов JavaScript (JSON).</span><span class="sxs-lookup"><span data-stu-id="adf0c-121">An <see cref="T:System.Xml.XmlDictionaryReader" /> that can read JavaScript Object Notation (JSON).</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="adf0c-122">Эта перегрузка не принимает параметр <xref:System.Text.Encoding>.</span><span class="sxs-lookup"><span data-stu-id="adf0c-122">This overload does not take an <xref:System.Text.Encoding> parameter.</span></span> <span data-ttu-id="adf0c-123">Кодировка (UTF-8, Юникод или Юникод с обратным порядком байтов) обнаруживается автоматически при чтении данных.</span><span class="sxs-lookup"><span data-stu-id="adf0c-123">The character encoding (UTF-8, Unicode or Big-Endian Unicode) is auto-detected when the data is read.</span></span>  
  
 <span data-ttu-id="adf0c-124">Дополнительные сведения об использовании <xref:System.Xml.XmlDictionaryReaderQuotas> для предотвращения атак типа "отказ в обслуживании" при чтении ненадежных данных см. в статье [вопросы безопасности для данных](~/docs/framework/wcf/feature-details/security-considerations-for-data.md).</span><span class="sxs-lookup"><span data-stu-id="adf0c-124">For more information about using <xref:System.Xml.XmlDictionaryReaderQuotas> to prevent Denial of Service attacks when reading untrusted data, see [Security Considerations for Data](~/docs/framework/wcf/feature-details/security-considerations-for-data.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateJsonReader">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlDictionaryReader CreateJsonReader (byte[] buffer, int offset, int count, System.Xml.XmlDictionaryReaderQuotas quotas);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlDictionaryReader CreateJsonReader(unsigned int8[] buffer, int32 offset, int32 count, class System.Xml.XmlDictionaryReaderQuotas quotas) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader(System.Byte[],System.Int32,System.Int32,System.Xml.XmlDictionaryReaderQuotas)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateJsonReader (buffer As Byte(), offset As Integer, count As Integer, quotas As XmlDictionaryReaderQuotas) As XmlDictionaryReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlDictionaryReader ^ CreateJsonReader(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, System::Xml::XmlDictionaryReaderQuotas ^ quotas);" />
      <MemberSignature Language="F#" Value="static member CreateJsonReader : byte[] * int * int * System.Xml.XmlDictionaryReaderQuotas -&gt; System.Xml.XmlDictionaryReader" Usage="System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader (buffer, offset, count, quotas)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Json</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="quotas" Type="System.Xml.XmlDictionaryReaderQuotas" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="adf0c-125">Массив буфера входных байтов <see cref="T:System.Byte" />, из которого выполняется чтение.</span><span class="sxs-lookup"><span data-stu-id="adf0c-125">The input <see cref="T:System.Byte" /> buffer array from which to read.</span></span></param>
        <param name="offset"><span data-ttu-id="adf0c-126">Начальное положение для чтения из параметра <paramref name="buffer" />.</span><span class="sxs-lookup"><span data-stu-id="adf0c-126">Starting position from which to read in <paramref name="buffer" />.</span></span></param>
        <param name="count"><span data-ttu-id="adf0c-127">Количество байтов, которое может быть считано из параметра <paramref name="buffer" />.</span><span class="sxs-lookup"><span data-stu-id="adf0c-127">Number of bytes that can be read from <paramref name="buffer" />.</span></span></param>
        <param name="quotas"><span data-ttu-id="adf0c-128">Объект <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />, используемый для предотвращения атак типа «отказ в обслуживании» при чтении ненадежных данных.</span><span class="sxs-lookup"><span data-stu-id="adf0c-128">The <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> used to prevent Denial of Service attacks when reading untrusted data.</span></span></param>
        <summary><span data-ttu-id="adf0c-129">Создает объект <see cref="T:System.Xml.XmlDictionaryReader" />, который может сопоставлять буферы заданных размера и смещения, кодированные с использованием нотации объектов JavaScript (JSON), набору сведений XML.</span><span class="sxs-lookup"><span data-stu-id="adf0c-129">Creates an <see cref="T:System.Xml.XmlDictionaryReader" /> that can map buffers encoded with JavaScript Object Notation (JSON), of a specified size and offset, to an XML Infoset.</span></span></summary>
        <returns><span data-ttu-id="adf0c-130">Объект <see cref="T:System.Xml.XmlDictionaryReader" />, который может осуществлять чтение данных нотации объектов JavaScript (JSON).</span><span class="sxs-lookup"><span data-stu-id="adf0c-130">An <see cref="T:System.Xml.XmlDictionaryReader" /> that can read JavaScript Object Notation (JSON).</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="adf0c-131">Эта перегрузка не принимает параметр <xref:System.Text.Encoding>.</span><span class="sxs-lookup"><span data-stu-id="adf0c-131">This overload does not take an <xref:System.Text.Encoding> parameter.</span></span> <span data-ttu-id="adf0c-132">Кодировка (UTF-8, Юникод или Юникод с обратным порядком байтов) обнаруживается автоматически при чтении данных.</span><span class="sxs-lookup"><span data-stu-id="adf0c-132">The character encoding (UTF-8, Unicode or Big-Endian Unicode) is auto-detected when the data is read.</span></span>  
  
 <span data-ttu-id="adf0c-133">Дополнительные сведения об использовании <xref:System.Xml.XmlDictionaryReaderQuotas> для предотвращения атак типа "отказ в обслуживании" при чтении ненадежных данных см. в статье [вопросы безопасности для данных](~/docs/framework/wcf/feature-details/security-considerations-for-data.md).</span><span class="sxs-lookup"><span data-stu-id="adf0c-133">For more information about using <xref:System.Xml.XmlDictionaryReaderQuotas> to prevent Denial of Service attacks when reading untrusted data, see [Security Considerations for Data](~/docs/framework/wcf/feature-details/security-considerations-for-data.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateJsonReader">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlDictionaryReader CreateJsonReader (System.IO.Stream stream, System.Text.Encoding encoding, System.Xml.XmlDictionaryReaderQuotas quotas, System.Xml.OnXmlDictionaryReaderClose onClose);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlDictionaryReader CreateJsonReader(class System.IO.Stream stream, class System.Text.Encoding encoding, class System.Xml.XmlDictionaryReaderQuotas quotas, class System.Xml.OnXmlDictionaryReaderClose onClose) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader(System.IO.Stream,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlDictionaryReader ^ CreateJsonReader(System::IO::Stream ^ stream, System::Text::Encoding ^ encoding, System::Xml::XmlDictionaryReaderQuotas ^ quotas, System::Xml::OnXmlDictionaryReaderClose ^ onClose);" />
      <MemberSignature Language="F#" Value="static member CreateJsonReader : System.IO.Stream * System.Text.Encoding * System.Xml.XmlDictionaryReaderQuotas * System.Xml.OnXmlDictionaryReaderClose -&gt; System.Xml.XmlDictionaryReader" Usage="System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader (stream, encoding, quotas, onClose)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Json</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
        <Parameter Name="quotas" Type="System.Xml.XmlDictionaryReaderQuotas" />
        <Parameter Name="onClose" Type="System.Xml.OnXmlDictionaryReaderClose" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="adf0c-134">Входной поток <see cref="T:System.IO.Stream" />, из которого выполняется чтение.</span><span class="sxs-lookup"><span data-stu-id="adf0c-134">The input <see cref="T:System.IO.Stream" /> from which to read.</span></span></param>
        <param name="encoding"><span data-ttu-id="adf0c-135">Параметр <see cref="T:System.Text.Encoding" /> , указывающий кодировку, используемую средством чтения.</span><span class="sxs-lookup"><span data-stu-id="adf0c-135">The <see cref="T:System.Text.Encoding" /> that specifies the character encoding used by the reader.</span></span> <span data-ttu-id="adf0c-136">Если в качестве значения задана <see langword="null" />, средство чтения пытается обнаружить кодировку автоматически.</span><span class="sxs-lookup"><span data-stu-id="adf0c-136">If <see langword="null" /> is specified as the value, the reader attempts to auto-detect the encoding.</span></span></param>
        <param name="quotas"><span data-ttu-id="adf0c-137">Объект <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />, используемый для предотвращения атак типа «отказ в обслуживании» при чтении ненадежных данных.</span><span class="sxs-lookup"><span data-stu-id="adf0c-137">The <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> used to prevent Denial of Service attacks when reading untrusted data.</span></span></param>
        <param name="onClose"><span data-ttu-id="adf0c-138">Делегат <see cref="T:System.Xml.OnXmlDictionaryReaderClose" />, вызываемый при закрытии средства чтения.</span><span class="sxs-lookup"><span data-stu-id="adf0c-138">The <see cref="T:System.Xml.OnXmlDictionaryReaderClose" /> delegate to call when the reader is closed.</span></span></param>
        <summary><span data-ttu-id="adf0c-139">Создает объект <see cref="T:System.Xml.XmlDictionaryReader" />, который может сопоставлять потоки заданных размера и смещения, кодированные с использованием нотации объектов JavaScript (JSON), набору сведений XML.</span><span class="sxs-lookup"><span data-stu-id="adf0c-139">Creates an <see cref="T:System.Xml.XmlDictionaryReader" /> that can map streams encoded with JavaScript Object Notation (JSON), of a specified size and offset, to an XML Infoset.</span></span></summary>
        <returns><span data-ttu-id="adf0c-140">Объект <see cref="T:System.Xml.XmlDictionaryReader" />, который может осуществлять чтение данных нотации объектов JavaScript (JSON).</span><span class="sxs-lookup"><span data-stu-id="adf0c-140">An <see cref="T:System.Xml.XmlDictionaryReader" /> that can read JavaScript Object Notation (JSON).</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="adf0c-141">Дополнительные сведения об использовании <xref:System.Xml.XmlDictionaryReaderQuotas> для предотвращения атак типа "отказ в обслуживании" при чтении ненадежных данных см. в статье [вопросы безопасности для данных](~/docs/framework/wcf/feature-details/security-considerations-for-data.md).</span><span class="sxs-lookup"><span data-stu-id="adf0c-141">For more information about using <xref:System.Xml.XmlDictionaryReaderQuotas> to prevent Denial of Service attacks when reading untrusted data, see [Security Considerations for Data](~/docs/framework/wcf/feature-details/security-considerations-for-data.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateJsonReader">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlDictionaryReader CreateJsonReader (byte[] buffer, int offset, int count, System.Text.Encoding encoding, System.Xml.XmlDictionaryReaderQuotas quotas, System.Xml.OnXmlDictionaryReaderClose onClose);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlDictionaryReader CreateJsonReader(unsigned int8[] buffer, int32 offset, int32 count, class System.Text.Encoding encoding, class System.Xml.XmlDictionaryReaderQuotas quotas, class System.Xml.OnXmlDictionaryReaderClose onClose) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader(System.Byte[],System.Int32,System.Int32,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlDictionaryReader ^ CreateJsonReader(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, System::Text::Encoding ^ encoding, System::Xml::XmlDictionaryReaderQuotas ^ quotas, System::Xml::OnXmlDictionaryReaderClose ^ onClose);" />
      <MemberSignature Language="F#" Value="static member CreateJsonReader : byte[] * int * int * System.Text.Encoding * System.Xml.XmlDictionaryReaderQuotas * System.Xml.OnXmlDictionaryReaderClose -&gt; System.Xml.XmlDictionaryReader" Usage="System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader (buffer, offset, count, encoding, quotas, onClose)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Json</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
        <Parameter Name="quotas" Type="System.Xml.XmlDictionaryReaderQuotas" />
        <Parameter Name="onClose" Type="System.Xml.OnXmlDictionaryReaderClose" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="adf0c-142">Массив буфера входных байтов <see cref="T:System.Byte" />, из которого выполняется чтение.</span><span class="sxs-lookup"><span data-stu-id="adf0c-142">The input <see cref="T:System.Byte" /> buffer array from which to read.</span></span></param>
        <param name="offset"><span data-ttu-id="adf0c-143">Начальное положение для чтения из параметра <paramref name="buffer" />.</span><span class="sxs-lookup"><span data-stu-id="adf0c-143">Starting position from which to read in <paramref name="buffer" />.</span></span></param>
        <param name="count"><span data-ttu-id="adf0c-144">Количество байтов, которое может быть считано из параметра <paramref name="buffer" />.</span><span class="sxs-lookup"><span data-stu-id="adf0c-144">Number of bytes that can be read from <paramref name="buffer" />.</span></span></param>
        <param name="encoding"><span data-ttu-id="adf0c-145">Параметр <see cref="T:System.Text.Encoding" />, указывающий кодировку, используемую средством чтения.</span><span class="sxs-lookup"><span data-stu-id="adf0c-145">The <see cref="T:System.Text.Encoding" /> that specifies the character encoding used by the reader.</span></span> <span data-ttu-id="adf0c-146">Если в качестве значения задана <see langword="null" />, средство чтения пытается обнаружить кодировку автоматически.</span><span class="sxs-lookup"><span data-stu-id="adf0c-146">If <see langword="null" /> is specified as the value, the reader attempts to auto-detect the encoding.</span></span></param>
        <param name="quotas"><span data-ttu-id="adf0c-147">Объект <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />, используемый для предотвращения атак типа «отказ в обслуживании» при чтении ненадежных данных.</span><span class="sxs-lookup"><span data-stu-id="adf0c-147">The <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> used to prevent Denial of Service attacks when reading untrusted data.</span></span></param>
        <param name="onClose"><span data-ttu-id="adf0c-148">Делегат <see cref="T:System.Xml.OnXmlDictionaryReaderClose" /> , вызываемый при закрытии средства чтения.</span><span class="sxs-lookup"><span data-stu-id="adf0c-148">The <see cref="T:System.Xml.OnXmlDictionaryReaderClose" /> delegate to call when the reader is closed.</span></span> <span data-ttu-id="adf0c-149">Значение по умолчанию — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="adf0c-149">The default value is <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="adf0c-150">Создает объект <see cref="T:System.Xml.XmlDictionaryReader" />, который может сопоставлять буферы с заданными размером, смещением и кодировкой, кодированные с использованием нотации объектов JavaScript (JSON), набору сведений XML.</span><span class="sxs-lookup"><span data-stu-id="adf0c-150">Creates an <see cref="T:System.Xml.XmlDictionaryReader" /> that can map buffers encoded with JavaScript Object Notation (JSON), with a specified size and offset and character encoding, to an XML Infoset.</span></span></summary>
        <returns><span data-ttu-id="adf0c-151">Объект <see cref="T:System.Xml.XmlDictionaryReader" />, который может осуществлять чтение данных нотации объектов JavaScript (JSON).</span><span class="sxs-lookup"><span data-stu-id="adf0c-151">An <see cref="T:System.Xml.XmlDictionaryReader" /> that can read JavaScript Object Notation (JSON).</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="adf0c-152">Дополнительные сведения об использовании <xref:System.Xml.XmlDictionaryReaderQuotas> для предотвращения атак типа "отказ в обслуживании" при чтении ненадежных данных см. в статье [вопросы безопасности для данных](~/docs/framework/wcf/feature-details/security-considerations-for-data.md).</span><span class="sxs-lookup"><span data-stu-id="adf0c-152">For more information about using <xref:System.Xml.XmlDictionaryReaderQuotas> to prevent Denial of Service attacks when reading untrusted data, see [Security Considerations for Data](~/docs/framework/wcf/feature-details/security-considerations-for-data.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateJsonWriter">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="adf0c-153">Создает объект <see cref="T:System.Xml.XmlDictionaryWriter" />, осуществляющий запись данных с кодированием JSON в поток.</span><span class="sxs-lookup"><span data-stu-id="adf0c-153">Creates an <see cref="T:System.Xml.XmlDictionaryWriter" /> that writes data encoded with JSON to a stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="adf0c-154">Статический метод <xref:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter%2A> возвращает экземпляр <xref:System.Xml.XmlDictionaryWriter>, который может сопоставлять набор сведений XML потоку JSON.</span><span class="sxs-lookup"><span data-stu-id="adf0c-154">The <xref:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter%2A> static method returns an instance of an <xref:System.Xml.XmlDictionaryWriter> that can map an XML Infoset to a JSON stream.</span></span> <span data-ttu-id="adf0c-155">Не существует гарантии, что объект <xref:System.Xml.XmlDictionaryWriter> создает правильные данные JSON.</span><span class="sxs-lookup"><span data-stu-id="adf0c-155">The <xref:System.Xml.XmlDictionaryWriter> is not guaranteed to produce valid JSON.</span></span> <span data-ttu-id="adf0c-156">Если этот объект используется способом, который не поддерживается сопоставлением JSON-XML, он может либо вызвать исключение, либо записать неверный документ JSON.</span><span class="sxs-lookup"><span data-stu-id="adf0c-156">If it is used in a way not supported by the JSON-XML mapping, it may either throw an exception or write an invalid JSON document.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateJsonWriter">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlDictionaryWriter CreateJsonWriter (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlDictionaryWriter CreateJsonWriter(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlDictionaryWriter ^ CreateJsonWriter(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="static member CreateJsonWriter : System.IO.Stream -&gt; System.Xml.XmlDictionaryWriter" Usage="System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter stream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Json</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="adf0c-157">Выходной поток <see cref="T:System.IO.Stream" /> для модуля записи JSON.</span><span class="sxs-lookup"><span data-stu-id="adf0c-157">The output <see cref="T:System.IO.Stream" /> for the JSON writer.</span></span></param>
        <summary><span data-ttu-id="adf0c-158">Создает объект <see cref="T:System.Xml.XmlDictionaryWriter" />, осуществляющий запись данных с кодированием JSON в поток.</span><span class="sxs-lookup"><span data-stu-id="adf0c-158">Creates an <see cref="T:System.Xml.XmlDictionaryWriter" /> that writes data encoded with JSON to a stream.</span></span></summary>
        <returns><span data-ttu-id="adf0c-159">Объект <see cref="T:System.Xml.XmlDictionaryWriter" />, осуществляющий запись данных с кодированием JSON в поток на основе набора сведений XML.</span><span class="sxs-lookup"><span data-stu-id="adf0c-159">An <see cref="T:System.Xml.XmlDictionaryWriter" /> that writes data encoded with JSON to the stream based on an XML Infoset.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="adf0c-160">Кодировка символов по умолчанию — UTF-8.</span><span class="sxs-lookup"><span data-stu-id="adf0c-160">The default character encoding is UTF-8.</span></span> <span data-ttu-id="adf0c-161">Когда модуль записи закрывается, поток также закрывается.</span><span class="sxs-lookup"><span data-stu-id="adf0c-161">When the writer is closed, the stream is closed as well.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateJsonWriter">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlDictionaryWriter CreateJsonWriter (System.IO.Stream stream, System.Text.Encoding encoding);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlDictionaryWriter CreateJsonWriter(class System.IO.Stream stream, class System.Text.Encoding encoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter(System.IO.Stream,System.Text.Encoding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlDictionaryWriter ^ CreateJsonWriter(System::IO::Stream ^ stream, System::Text::Encoding ^ encoding);" />
      <MemberSignature Language="F#" Value="static member CreateJsonWriter : System.IO.Stream * System.Text.Encoding -&gt; System.Xml.XmlDictionaryWriter" Usage="System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter (stream, encoding)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Json</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="adf0c-162">Выходной поток <see cref="T:System.IO.Stream" /> для модуля записи JSON.</span><span class="sxs-lookup"><span data-stu-id="adf0c-162">The output <see cref="T:System.IO.Stream" /> for the JSON writer.</span></span></param>
        <param name="encoding"><span data-ttu-id="adf0c-163">Параметр <see cref="T:System.Text.Encoding" />, указывающий кодировку, используемую средством записи.</span><span class="sxs-lookup"><span data-stu-id="adf0c-163">The <see cref="T:System.Text.Encoding" /> that specifies the character encoding used by the writer.</span></span> <span data-ttu-id="adf0c-164">Кодировка по умолчанию — UTF-8.</span><span class="sxs-lookup"><span data-stu-id="adf0c-164">The default encoding is UTF-8.</span></span></param>
        <summary><span data-ttu-id="adf0c-165">Создает объект <see cref="T:System.Xml.XmlDictionaryWriter" />, осуществляющий запись данных с кодированием JSON в поток с заданной кодировкой.</span><span class="sxs-lookup"><span data-stu-id="adf0c-165">Creates an <see cref="T:System.Xml.XmlDictionaryWriter" /> that writes data encoded with JSON to a stream with a specified character encoding.</span></span></summary>
        <returns><span data-ttu-id="adf0c-166">Объект <see cref="T:System.Xml.XmlDictionaryWriter" />, осуществляющий запись данных с кодированием JSON в поток на основе набора сведений XML.</span><span class="sxs-lookup"><span data-stu-id="adf0c-166">An <see cref="T:System.Xml.XmlDictionaryWriter" /> that writes data encoded with JSON to the stream based on an XML Infoset.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="adf0c-167">Когда модуль записи закрывается, поток также закрывается.</span><span class="sxs-lookup"><span data-stu-id="adf0c-167">When the writer is closed, the stream is closed as well.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateJsonWriter">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlDictionaryWriter CreateJsonWriter (System.IO.Stream stream, System.Text.Encoding encoding, bool ownsStream);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlDictionaryWriter CreateJsonWriter(class System.IO.Stream stream, class System.Text.Encoding encoding, bool ownsStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter(System.IO.Stream,System.Text.Encoding,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlDictionaryWriter ^ CreateJsonWriter(System::IO::Stream ^ stream, System::Text::Encoding ^ encoding, bool ownsStream);" />
      <MemberSignature Language="F#" Value="static member CreateJsonWriter : System.IO.Stream * System.Text.Encoding * bool -&gt; System.Xml.XmlDictionaryWriter" Usage="System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter (stream, encoding, ownsStream)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Json</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
        <Parameter Name="ownsStream" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="adf0c-168">Выходной поток <see cref="T:System.IO.Stream" /> для модуля записи JSON.</span><span class="sxs-lookup"><span data-stu-id="adf0c-168">The output <see cref="T:System.IO.Stream" /> for the JSON writer.</span></span></param>
        <param name="encoding"><span data-ttu-id="adf0c-169">Параметр <see cref="T:System.Text.Encoding" />, указывающий кодировку, используемую средством записи.</span><span class="sxs-lookup"><span data-stu-id="adf0c-169">The <see cref="T:System.Text.Encoding" /> that specifies the character encoding used by the writer.</span></span> <span data-ttu-id="adf0c-170">Кодировка по умолчанию — UTF-8.</span><span class="sxs-lookup"><span data-stu-id="adf0c-170">The default encoding is UTF-8.</span></span></param>
        <param name="ownsStream"><span data-ttu-id="adf0c-171">Значение <see langword="true" />, если выходной поток закрывается средством записи после завершения; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="adf0c-171">If <see langword="true" />, the output stream is closed by the writer when done; otherwise <see langword="false" />.</span></span> <span data-ttu-id="adf0c-172">Значение по умолчанию — <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="adf0c-172">The default value is <see langword="true" />.</span></span></param>
        <summary><span data-ttu-id="adf0c-173">Создает объект <see cref="T:System.Xml.XmlDictionaryWriter" />, осуществляющий запись данных с кодированием JSON в поток с заданной кодировкой.</span><span class="sxs-lookup"><span data-stu-id="adf0c-173">Creates an <see cref="T:System.Xml.XmlDictionaryWriter" /> that writes data encoded with JSON to a stream with a specified character encoding.</span></span></summary>
        <returns><span data-ttu-id="adf0c-174">Объект <see cref="T:System.Xml.XmlDictionaryWriter" />, осуществляющий запись данных с кодированием JSON в поток на основе набора сведений XML.</span><span class="sxs-lookup"><span data-stu-id="adf0c-174">An <see cref="T:System.Xml.XmlDictionaryWriter" /> that writes data encoded with JSON to the stream based on an XML Infoset.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateJsonWriter">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlDictionaryWriter CreateJsonWriter (System.IO.Stream stream, System.Text.Encoding encoding, bool ownsStream, bool indent);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlDictionaryWriter CreateJsonWriter(class System.IO.Stream stream, class System.Text.Encoding encoding, bool ownsStream, bool indent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlDictionaryWriter ^ CreateJsonWriter(System::IO::Stream ^ stream, System::Text::Encoding ^ encoding, bool ownsStream, bool indent);" />
      <MemberSignature Language="F#" Value="static member CreateJsonWriter : System.IO.Stream * System.Text.Encoding * bool * bool -&gt; System.Xml.XmlDictionaryWriter" Usage="System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter (stream, encoding, ownsStream, indent)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Json</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="encoding" Type="System.Text.Encoding" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="ownsStream" Type="System.Boolean" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="indent" Type="System.Boolean" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="adf0c-175">Выходной поток <see cref="T:System.IO.Stream" /> для модуля записи JSON.</span><span class="sxs-lookup"><span data-stu-id="adf0c-175">The output <see cref="T:System.IO.Stream" /> for the JSON writer.</span></span></param>
        <param name="encoding"><span data-ttu-id="adf0c-176">Параметр <see cref="T:System.Text.Encoding" />, указывающий кодировку, используемую средством записи.</span><span class="sxs-lookup"><span data-stu-id="adf0c-176">The <see cref="T:System.Text.Encoding" /> that specifies the character encoding used by the writer.</span></span> <span data-ttu-id="adf0c-177">Кодировка по умолчанию — UTF-8.</span><span class="sxs-lookup"><span data-stu-id="adf0c-177">The default encoding is UTF-8.</span></span></param>
        <param name="ownsStream"><span data-ttu-id="adf0c-178">Значение <see langword="true" />, если выходной поток закрывается средством записи после завершения; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="adf0c-178">If <see langword="true" />, the output stream is closed by the writer when done; otherwise <see langword="false" />.</span></span> <span data-ttu-id="adf0c-179">Значение по умолчанию — <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="adf0c-179">The default value is <see langword="true" />.</span></span></param>
        <param name="indent"><span data-ttu-id="adf0c-180">Если значение равно <see langword="true" />, в выходных данных используется многострочный формат с надлежащим отступом для каждого уровня; в противном случае значение равно <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="adf0c-180">If <see langword="true" />, the output uses multiline format, indenting each level properly; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="adf0c-181">Создает объект <see cref="T:System.Xml.XmlDictionaryWriter" />, осуществляющий запись данных с кодированием JSON в поток с заданным символом.</span><span class="sxs-lookup"><span data-stu-id="adf0c-181">Creates an <see cref="T:System.Xml.XmlDictionaryWriter" /> that writes data encoded with JSON to a stream with a specified character.</span></span></summary>
        <returns><span data-ttu-id="adf0c-182">Объект <see cref="T:System.Xml.XmlDictionaryWriter" />, осуществляющий запись данных с кодированием JSON в поток на основе набора сведений XML.</span><span class="sxs-lookup"><span data-stu-id="adf0c-182">An <see cref="T:System.Xml.XmlDictionaryWriter" /> that writes data encoded with JSON to the stream based on an XML Infoset.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateJsonWriter">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlDictionaryWriter CreateJsonWriter (System.IO.Stream stream, System.Text.Encoding encoding, bool ownsStream, bool indent, string indentChars);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlDictionaryWriter CreateJsonWriter(class System.IO.Stream stream, class System.Text.Encoding encoding, bool ownsStream, bool indent, string indentChars) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Boolean,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlDictionaryWriter ^ CreateJsonWriter(System::IO::Stream ^ stream, System::Text::Encoding ^ encoding, bool ownsStream, bool indent, System::String ^ indentChars);" />
      <MemberSignature Language="F#" Value="static member CreateJsonWriter : System.IO.Stream * System.Text.Encoding * bool * bool * string -&gt; System.Xml.XmlDictionaryWriter" Usage="System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter (stream, encoding, ownsStream, indent, indentChars)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Json</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="encoding" Type="System.Text.Encoding" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="ownsStream" Type="System.Boolean" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="indent" Type="System.Boolean" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="indentChars" Type="System.String" Index="4" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="adf0c-183">Выходной поток <see cref="T:System.IO.Stream" /> для модуля записи JSON.</span><span class="sxs-lookup"><span data-stu-id="adf0c-183">The output <see cref="T:System.IO.Stream" /> for the JSON writer.</span></span></param>
        <param name="encoding"><span data-ttu-id="adf0c-184">Параметр <see cref="T:System.Text.Encoding" />, указывающий кодировку, используемую средством записи.</span><span class="sxs-lookup"><span data-stu-id="adf0c-184">The <see cref="T:System.Text.Encoding" /> that specifies the character encoding used by the writer.</span></span> <span data-ttu-id="adf0c-185">Кодировка по умолчанию — UTF-8.</span><span class="sxs-lookup"><span data-stu-id="adf0c-185">The default encoding is UTF-8.</span></span></param>
        <param name="ownsStream"><span data-ttu-id="adf0c-186">Значение <see langword="true" />, если выходной поток закрывается средством записи после завершения; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="adf0c-186">If <see langword="true" />, the output stream is closed by the writer when done; otherwise <see langword="false" />.</span></span> <span data-ttu-id="adf0c-187">Значение по умолчанию — <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="adf0c-187">The default value is <see langword="true" />.</span></span></param>
        <param name="indent"><span data-ttu-id="adf0c-188">Если значение равно <see langword="true" />, в выходных данных используется многострочный формат с надлежащим отступом для каждого уровня; в противном случае значение равно <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="adf0c-188">If <see langword="true" />, the output uses multiline format, indenting each level properly; otherwise, <see langword="false" />.</span></span></param>
        <param name="indentChars"><span data-ttu-id="adf0c-189">Строка, используемая для задания отступа каждого уровня.</span><span class="sxs-lookup"><span data-stu-id="adf0c-189">The string used to indent each level.</span></span></param>
        <summary><span data-ttu-id="adf0c-190">Создает объект <see cref="T:System.Xml.XmlDictionaryWriter" />, осуществляющий запись данных с кодированием JSON в поток с заданным символом.</span><span class="sxs-lookup"><span data-stu-id="adf0c-190">Creates an <see cref="T:System.Xml.XmlDictionaryWriter" /> that writes data encoded with JSON to a stream with a specified character.</span></span></summary>
        <returns><span data-ttu-id="adf0c-191">Объект <see cref="T:System.Xml.XmlDictionaryWriter" />, осуществляющий запись данных с кодированием JSON в поток на основе набора сведений XML.</span><span class="sxs-lookup"><span data-stu-id="adf0c-191">An <see cref="T:System.Xml.XmlDictionaryWriter" /> that writes data encoded with JSON to the stream based on an XML Infoset.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
