<Type Name="ExportProvider" FullName="System.ComponentModel.Composition.Hosting.ExportProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f4a366a8164cfcae2b12638c58afc7e811df7546" /><Meta Name="ms.sourcegitcommit" Value="0084afad1b3b1cb2c8ad2c142ae3597d08bad4a7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="10/31/2019" /><Meta Name="ms.locfileid" Value="73375261" /></Metadata><TypeSignature Language="C#" Value="public abstract class ExportProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ExportProvider extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Composition.Hosting.ExportProvider" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ExportProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class ExportProvider abstract" />
  <TypeSignature Language="F#" Value="type ExportProvider = class" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.Composition</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="1c131-101">Получает экспорты, соответствующие заданному объекту <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition" />.</span><span class="sxs-lookup"><span data-stu-id="1c131-101">Retrieves exports which match a specified <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition" /> object.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ExportProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.ExportProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ExportProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1c131-102">Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Composition.Hosting.ExportProvider" />.</span><span class="sxs-lookup"><span data-stu-id="1c131-102">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Hosting.ExportProvider" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExportsChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs&gt; ExportsChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs&gt; ExportsChanged" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Composition.Hosting.ExportProvider.ExportsChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ExportsChanged As EventHandler(Of ExportsChangeEventArgs) " FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::ComponentModel::Composition::Hosting::ExportsChangeEventArgs ^&gt; ^ ExportsChanged;" />
      <MemberSignature Language="F#" Value="member this.ExportsChanged : EventHandler&lt;System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs&gt; " Usage="member this.ExportsChanged : System.EventHandler&lt;System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs&gt; " />
      <MemberSignature Language="VB.NET" Value="Public Event ExportsChanged As EventHandler(Of ExportsChangeEventArgs) " FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1c131-103">Происходит при изменении экспортов в объекте <see cref="T:System.ComponentModel.Composition.Hosting.ExportProvider" />.</span><span class="sxs-lookup"><span data-stu-id="1c131-103">Occurs when the exports in the <see cref="T:System.ComponentModel.Composition.Hosting.ExportProvider" /> change.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExportsChanging">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs&gt; ExportsChanging;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs&gt; ExportsChanging" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Composition.Hosting.ExportProvider.ExportsChanging" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ExportsChanging As EventHandler(Of ExportsChangeEventArgs) " FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::ComponentModel::Composition::Hosting::ExportsChangeEventArgs ^&gt; ^ ExportsChanging;" />
      <MemberSignature Language="F#" Value="member this.ExportsChanging : EventHandler&lt;System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs&gt; " Usage="member this.ExportsChanging : System.EventHandler&lt;System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs&gt; " />
      <MemberSignature Language="VB.NET" Value="Public Event ExportsChanging As EventHandler(Of ExportsChangeEventArgs) " FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1c131-104">Происходит при изменении предоставленных экспортов.</span><span class="sxs-lookup"><span data-stu-id="1c131-104">Occurs when the provided exports are changing.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetExport&lt;T&gt;">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1c131-105">Получает указанный экспорт.</span><span class="sxs-lookup"><span data-stu-id="1c131-105">Gets a specified export.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetExport&lt;T&gt;">
      <MemberSignature Language="C#" Value="public Lazy&lt;T&gt; GetExport&lt;T&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Lazy`1&lt;!!T&gt; GetExport&lt;T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExport``1" />
      <MemberSignature Language="VB.NET" Value="Public Function GetExport(Of T) () As Lazy(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; Lazy&lt;T&gt; ^ GetExport();" />
      <MemberSignature Language="F#" Value="member this.GetExport : unit -&gt; Lazy&lt;'T&gt;" Usage="exportProvider.GetExport " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Lazy&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T"><span data-ttu-id="1c131-106">Параметр типа возвращаемого объекта <see cref="T:System.Lazy`1" />.</span><span class="sxs-lookup"><span data-stu-id="1c131-106">The type parameter of the <see cref="T:System.Lazy`1" /> object to return.</span></span> <span data-ttu-id="1c131-107">Имя контракта также является производным от этого параметра типа.</span><span class="sxs-lookup"><span data-stu-id="1c131-107">The contract name is also derived from this type parameter.</span></span></typeparam>
        <summary><span data-ttu-id="1c131-108">Возвращает экспорт с именем контракта, производным от указанного параметра типа.</span><span class="sxs-lookup"><span data-stu-id="1c131-108">Returns the export with the contract name derived from the specified type parameter.</span></span> <span data-ttu-id="1c131-109">В случае отсутствия ровно одного соответствующего экспорта создается исключение.</span><span class="sxs-lookup"><span data-stu-id="1c131-109">If there is not exactly one matching export, an exception is thrown.</span></span></summary>
        <returns><span data-ttu-id="1c131-110">Экспорт с именем контракта, производным от указанного параметра типа.</span><span class="sxs-lookup"><span data-stu-id="1c131-110">The export with the contract name derived from the specified type parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1c131-111">Имя контракта является результатом вызова метода <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> в `T`.</span><span class="sxs-lookup"><span data-stu-id="1c131-111">The contract name is the result of calling the <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> method on `T`.</span></span>  
  
 <span data-ttu-id="1c131-112">Имя контракта сравнивается с помощью свойства <xref:System.StringComparer.Ordinal%2A> для выполнения нелингвистического сравнения без учета регистра.</span><span class="sxs-lookup"><span data-stu-id="1c131-112">The contract name is compared by using the <xref:System.StringComparer.Ordinal%2A> property to perform a case-sensitive, non-linguistic comparison.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.Composition.ImportCardinalityMismatchException"><span data-ttu-id="1c131-113">Существует ноль объектов <see cref="T:System.Lazy`1" /> с именем контракта, являющимся производным <paramref name="T" />, в объекте <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />.</span><span class="sxs-lookup"><span data-stu-id="1c131-113">There are zero <see cref="T:System.Lazy`1" /> objects with the contract name derived from <paramref name="T" /> in the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> object.</span></span>  
  
<span data-ttu-id="1c131-114">- или -</span><span class="sxs-lookup"><span data-stu-id="1c131-114">-or-</span></span> 
<span data-ttu-id="1c131-115">Существует несколько объектов <see cref="T:System.Lazy`1" /> с именем контракта, являющимся производным <paramref name="T" />, в объекте <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />.</span><span class="sxs-lookup"><span data-stu-id="1c131-115">There is more than one <see cref="T:System.Lazy`1" /> object with the contract name derived from <paramref name="T" /> in the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> object.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="1c131-116">Объект <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> ликвидирован.</span><span class="sxs-lookup"><span data-stu-id="1c131-116">The <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> object has been disposed of.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetExport&lt;T&gt;">
      <MemberSignature Language="C#" Value="public Lazy&lt;T&gt; GetExport&lt;T&gt; (string contractName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Lazy`1&lt;!!T&gt; GetExport&lt;T&gt;(string contractName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExport``1(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetExport(Of T) (contractName As String) As Lazy(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; Lazy&lt;T&gt; ^ GetExport(System::String ^ contractName);" />
      <MemberSignature Language="F#" Value="member this.GetExport : string -&gt; Lazy&lt;'T&gt;" Usage="exportProvider.GetExport contractName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Lazy&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="contractName" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="1c131-117">Параметр типа возвращаемого объекта <see cref="T:System.Lazy`1" />.</span><span class="sxs-lookup"><span data-stu-id="1c131-117">The type parameter of the <see cref="T:System.Lazy`1" /> object to return.</span></span></typeparam>
        <param name="contractName"><span data-ttu-id="1c131-118">Имя контракта возвращаемого объекта <see cref="T:System.Lazy`1" /> либо значение <see langword="null" /> или пустая строка ("") для использования имени контракта по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="1c131-118">The contract name of the <see cref="T:System.Lazy`1" /> object to return, or <see langword="null" /> or an empty string ("") to use the default contract name.</span></span></param>
        <summary><span data-ttu-id="1c131-119">Возвращает экспорт с указанным именем контракта.</span><span class="sxs-lookup"><span data-stu-id="1c131-119">Returns the export with the specified contract name.</span></span> <span data-ttu-id="1c131-120">В случае отсутствия ровно одного соответствующего экспорта создается исключение.</span><span class="sxs-lookup"><span data-stu-id="1c131-120">If there is not exactly one matching export, an exception is thrown.</span></span></summary>
        <returns><span data-ttu-id="1c131-121">Экспорт с указанным именем контракта.</span><span class="sxs-lookup"><span data-stu-id="1c131-121">The export with the specified contract name.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1c131-122">Имя контракта по умолчанию является результатом вызова метода <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> в `T`.</span><span class="sxs-lookup"><span data-stu-id="1c131-122">The default contract name is the result of calling the <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> method on `T`.</span></span>  
  
 <span data-ttu-id="1c131-123">Имя контракта сравнивается с помощью свойства <xref:System.StringComparer.Ordinal%2A> для выполнения нелингвистического сравнения без учета регистра.</span><span class="sxs-lookup"><span data-stu-id="1c131-123">The contract name is compared by using the <xref:System.StringComparer.Ordinal%2A> property to perform a case-sensitive, non-linguistic comparison.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.Composition.ImportCardinalityMismatchException"><span data-ttu-id="1c131-124">Существует ноль объектов <see cref="T:System.Lazy`1" /> с именем контракта, являющимся производным <paramref name="T" />, в объекте <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />.</span><span class="sxs-lookup"><span data-stu-id="1c131-124">There are zero <see cref="T:System.Lazy`1" /> objects with the contract name derived from <paramref name="T" /> in the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> object.</span></span>  
  
<span data-ttu-id="1c131-125">- или -</span><span class="sxs-lookup"><span data-stu-id="1c131-125">-or-</span></span> 
<span data-ttu-id="1c131-126">Существует несколько объектов <see cref="T:System.Lazy`1" /> с именем контракта, являющимся производным <paramref name="T" />, в объекте <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />.</span><span class="sxs-lookup"><span data-stu-id="1c131-126">There is more than one <see cref="T:System.Lazy`1" /> object with the contract name derived from <paramref name="T" /> in the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> object.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="1c131-127">Объект <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> ликвидирован.</span><span class="sxs-lookup"><span data-stu-id="1c131-127">The <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> object has been disposed of.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetExport&lt;T,TMetadataView&gt;">
      <MemberSignature Language="C#" Value="public Lazy&lt;T,TMetadataView&gt; GetExport&lt;T,TMetadataView&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Lazy`2&lt;!!T, !!TMetadataView&gt; GetExport&lt;T, TMetadataView&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExport``2" />
      <MemberSignature Language="VB.NET" Value="Public Function GetExport(Of T, TMetadataView) () As Lazy(Of T, TMetadataView)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T, typename TMetadataView&gt;&#xA; Lazy&lt;T, TMetadataView&gt; ^ GetExport();" />
      <MemberSignature Language="F#" Value="member this.GetExport : unit -&gt; Lazy&lt;'T, 'MetadataView&gt;" Usage="exportProvider.GetExport " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Lazy&lt;T,TMetadataView&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
        <TypeParameter Name="TMetadataView" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T"><span data-ttu-id="1c131-128">Параметр типа возвращаемого объекта <see cref="T:System.Lazy`2" />.</span><span class="sxs-lookup"><span data-stu-id="1c131-128">The type parameter of the <see cref="T:System.Lazy`2" /> object to return.</span></span> <span data-ttu-id="1c131-129">Имя контракта также является производным от этого параметра типа.</span><span class="sxs-lookup"><span data-stu-id="1c131-129">The contract name is also derived from this type parameter.</span></span></typeparam>
        <typeparam name="TMetadataView"><span data-ttu-id="1c131-130">Тип представления метаданных возвращаемого объекта <see cref="T:System.Lazy`2" />.</span><span class="sxs-lookup"><span data-stu-id="1c131-130">The type of the metadata view of the <see cref="T:System.Lazy`2" /> object to return.</span></span></typeparam>
        <summary><span data-ttu-id="1c131-131">Возвращает экспорт с именем контракта, производным от указанного параметра типа.</span><span class="sxs-lookup"><span data-stu-id="1c131-131">Returns the export with the contract name derived from the specified type parameter.</span></span> <span data-ttu-id="1c131-132">В случае отсутствия ровно одного соответствующего экспорта создается исключение.</span><span class="sxs-lookup"><span data-stu-id="1c131-132">If there is not exactly one matching export, an exception is thrown.</span></span></summary>
        <returns><span data-ttu-id="1c131-133">System.Lazy\`2</span><span class="sxs-lookup"><span data-stu-id="1c131-133">System.Lazy\`2</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1c131-134">Имя контракта является результатом вызова метода <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> в `T`.</span><span class="sxs-lookup"><span data-stu-id="1c131-134">The contract name is the result of calling the <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> method on `T`.</span></span>  
  
 <span data-ttu-id="1c131-135">Имя контракта сравнивается с помощью свойства <xref:System.StringComparer.Ordinal%2A> для выполнения нелингвистического сравнения без учета регистра.</span><span class="sxs-lookup"><span data-stu-id="1c131-135">The contract name is compared by using the <xref:System.StringComparer.Ordinal%2A> property to perform a case-sensitive, non-linguistic comparison.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.Composition.ImportCardinalityMismatchException"><span data-ttu-id="1c131-136">Существует ноль объектов <see cref="T:System.Lazy`2" /> с именем контракта, являющимся производным <paramref name="T" />, в объекте <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />.</span><span class="sxs-lookup"><span data-stu-id="1c131-136">There are zero <see cref="T:System.Lazy`2" /> objects with the contract name derived from <paramref name="T" /> in the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> object.</span></span>  
  
<span data-ttu-id="1c131-137">- или -</span><span class="sxs-lookup"><span data-stu-id="1c131-137">-or-</span></span> 
<span data-ttu-id="1c131-138">Существует несколько объектов <see cref="T:System.Lazy`2" /> с именем контракта, являющимся производным <paramref name="T" />, в объекте <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />.</span><span class="sxs-lookup"><span data-stu-id="1c131-138">There is more than one <see cref="T:System.Lazy`2" /> object with the contract name derived from <paramref name="T" /> in the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> object.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="1c131-139">Объект <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> ликвидирован.</span><span class="sxs-lookup"><span data-stu-id="1c131-139">The <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> object has been disposed of.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1c131-140"><paramref name="TMetadataView" /> не является допустимым типом представления метаданных.</span><span class="sxs-lookup"><span data-stu-id="1c131-140"><paramref name="TMetadataView" /> is not a valid metadata view type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetExport&lt;T,TMetadataView&gt;">
      <MemberSignature Language="C#" Value="public Lazy&lt;T,TMetadataView&gt; GetExport&lt;T,TMetadataView&gt; (string contractName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Lazy`2&lt;!!T, !!TMetadataView&gt; GetExport&lt;T, TMetadataView&gt;(string contractName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExport``2(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetExport(Of T, TMetadataView) (contractName As String) As Lazy(Of T, TMetadataView)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T, typename TMetadataView&gt;&#xA; Lazy&lt;T, TMetadataView&gt; ^ GetExport(System::String ^ contractName);" />
      <MemberSignature Language="F#" Value="member this.GetExport : string -&gt; Lazy&lt;'T, 'MetadataView&gt;" Usage="exportProvider.GetExport contractName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Lazy&lt;T,TMetadataView&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
        <TypeParameter Name="TMetadataView" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="contractName" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="1c131-141">Параметр типа возвращаемого объекта <see cref="T:System.Lazy`2" />.</span><span class="sxs-lookup"><span data-stu-id="1c131-141">The type parameter of the <see cref="T:System.Lazy`2" /> object to return.</span></span></typeparam>
        <typeparam name="TMetadataView"><span data-ttu-id="1c131-142">Тип представления метаданных возвращаемого объекта <see cref="T:System.Lazy`2" />.</span><span class="sxs-lookup"><span data-stu-id="1c131-142">The type of the metadata view of the <see cref="T:System.Lazy`2" /> object to return.</span></span></typeparam>
        <param name="contractName"><span data-ttu-id="1c131-143">Имя контракта возвращаемого объекта <see cref="T:System.Lazy`2" /> либо значение <see langword="null" /> или пустая строка ("") для использования имени контракта по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="1c131-143">The contract name of the <see cref="T:System.Lazy`2" /> object to return, or <see langword="null" /> or an empty string ("") to use the default contract name.</span></span></param>
        <summary><span data-ttu-id="1c131-144">Возвращает экспорт с указанным именем контракта.</span><span class="sxs-lookup"><span data-stu-id="1c131-144">Returns the export with the specified contract name.</span></span> <span data-ttu-id="1c131-145">В случае отсутствия ровно одного соответствующего экспорта создается исключение.</span><span class="sxs-lookup"><span data-stu-id="1c131-145">If there is not exactly one matching export, an exception is thrown.</span></span></summary>
        <returns><span data-ttu-id="1c131-146">Экспорт с указанным именем контракта.</span><span class="sxs-lookup"><span data-stu-id="1c131-146">The export with the specified contract name.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1c131-147">Имя контракта по умолчанию является результатом вызова метода <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> в `T`.</span><span class="sxs-lookup"><span data-stu-id="1c131-147">The default contract name is the result of calling the <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> method on `T`.</span></span>  
  
 <span data-ttu-id="1c131-148">Имя контракта сравнивается с помощью свойства <xref:System.StringComparer.Ordinal%2A> для выполнения нелингвистического сравнения без учета регистра.</span><span class="sxs-lookup"><span data-stu-id="1c131-148">The contract name is compared by using the <xref:System.StringComparer.Ordinal%2A> property to perform a case-sensitive, non-linguistic comparison.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.Composition.ImportCardinalityMismatchException"><span data-ttu-id="1c131-149">Существует ноль объектов <see cref="T:System.Lazy`2" /> с именем контракта, являющимся производным <paramref name="T" />, в объекте <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />.</span><span class="sxs-lookup"><span data-stu-id="1c131-149">There are zero <see cref="T:System.Lazy`2" /> objects with the contract name derived from <paramref name="T" /> in the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> object.</span></span>  
  
<span data-ttu-id="1c131-150">- или -</span><span class="sxs-lookup"><span data-stu-id="1c131-150">-or-</span></span> 
<span data-ttu-id="1c131-151">Существует несколько объектов <see cref="T:System.Lazy`2" /> с именем контракта, являющимся производным <paramref name="T" />, в объекте <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />.</span><span class="sxs-lookup"><span data-stu-id="1c131-151">There is more than one <see cref="T:System.Lazy`2" /> object with the contract name derived from <paramref name="T" /> in the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> object.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="1c131-152">Объект <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> ликвидирован.</span><span class="sxs-lookup"><span data-stu-id="1c131-152">The <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> object has been disposed of.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1c131-153"><paramref name="TMetadataView" /> не является допустимым типом представления метаданных.</span><span class="sxs-lookup"><span data-stu-id="1c131-153"><paramref name="TMetadataView" /> is not a valid metadata view type.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetExportedValue&lt;T&gt;">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1c131-154">Получает экспортированный объект.</span><span class="sxs-lookup"><span data-stu-id="1c131-154">Gets an exported object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetExportedValue&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T GetExportedValue&lt;T&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!T GetExportedValue&lt;T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValue``1" />
      <MemberSignature Language="VB.NET" Value="Public Function GetExportedValue(Of T) () As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; T GetExportedValue();" />
      <MemberSignature Language="F#" Value="member this.GetExportedValue : unit -&gt; 'T" Usage="exportProvider.GetExportedValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T"><span data-ttu-id="1c131-155">Тип возвращаемого экспортированного объекта.</span><span class="sxs-lookup"><span data-stu-id="1c131-155">The type of the exported object to return.</span></span> <span data-ttu-id="1c131-156">Имя контракта также является производным от этого параметра типа.</span><span class="sxs-lookup"><span data-stu-id="1c131-156">The contract name is also derived from this type parameter.</span></span></typeparam>
        <summary><span data-ttu-id="1c131-157">Возвращает экспортированный объект с именем контракта, производным от указанного параметра типа.</span><span class="sxs-lookup"><span data-stu-id="1c131-157">Returns the exported object with the contract name derived from the specified type parameter.</span></span> <span data-ttu-id="1c131-158">В случае отсутствия ровно одного соответствующего экспортированного объекта создается исключение.</span><span class="sxs-lookup"><span data-stu-id="1c131-158">If there is not exactly one matching exported object, an exception is thrown.</span></span></summary>
        <returns><span data-ttu-id="1c131-159">Экспортированный объект с именем контракта, производным от указанного параметра типа.</span><span class="sxs-lookup"><span data-stu-id="1c131-159">The exported object with the contract name derived from the specified type parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1c131-160">Имя контракта является результатом вызова метода <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> в `T`.</span><span class="sxs-lookup"><span data-stu-id="1c131-160">The contract name is the result of calling the <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> method on `T`.</span></span>  
  
 <span data-ttu-id="1c131-161">Имя контракта сравнивается с помощью свойства <xref:System.StringComparer.Ordinal%2A> для выполнения нелингвистического сравнения без учета регистра.</span><span class="sxs-lookup"><span data-stu-id="1c131-161">The contract name is compared by using the <xref:System.StringComparer.Ordinal%2A> property to perform a case-sensitive, non-linguistic comparison.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.Composition.ImportCardinalityMismatchException"><span data-ttu-id="1c131-162">Имеются ноль экспортируемых объектов с именем контракта, являющимся производным <paramref name="T" />, в <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />.</span><span class="sxs-lookup"><span data-stu-id="1c131-162">There are zero exported objects with the contract name derived from <paramref name="T" /> in the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />.</span></span>  
  
<span data-ttu-id="1c131-163">- или -</span><span class="sxs-lookup"><span data-stu-id="1c131-163">-or-</span></span> 
<span data-ttu-id="1c131-164">В контейнере <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> имеется несколько экспортированных объектов с именем контракта, являющимся производным типа <paramref name="T" />.</span><span class="sxs-lookup"><span data-stu-id="1c131-164">There is more than one exported object with the contract name derived from <paramref name="T" /> in the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="1c131-165">Объект <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> ликвидирован.</span><span class="sxs-lookup"><span data-stu-id="1c131-165">The <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> object has been disposed of.</span></span></exception>
        <exception cref="T:System.ComponentModel.Composition.CompositionContractMismatchException"><span data-ttu-id="1c131-166">Базовый экспортированный объект не может быть приведен к типу <paramref name="T" />.</span><span class="sxs-lookup"><span data-stu-id="1c131-166">The underlying exported object cannot be cast to <paramref name="T" />.</span></span></exception>
        <exception cref="T:System.ComponentModel.Composition.CompositionException"><span data-ttu-id="1c131-167">Произошла ошибка при композиции.</span><span class="sxs-lookup"><span data-stu-id="1c131-167">An error occurred during composition.</span></span> <span data-ttu-id="1c131-168"><see cref="P:System.ComponentModel.Composition.CompositionException.Errors" /> будет содержать коллекцию произошедших ошибок.</span><span class="sxs-lookup"><span data-stu-id="1c131-168"><see cref="P:System.ComponentModel.Composition.CompositionException.Errors" /> will contain a collection of errors that occurred.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetExportedValue&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T GetExportedValue&lt;T&gt; (string contractName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!T GetExportedValue&lt;T&gt;(string contractName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValue``1(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetExportedValue(Of T) (contractName As String) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; T GetExportedValue(System::String ^ contractName);" />
      <MemberSignature Language="F#" Value="member this.GetExportedValue : string -&gt; 'T" Usage="exportProvider.GetExportedValue contractName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="contractName" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="1c131-169">Тип возвращаемого экспортированного объекта.</span><span class="sxs-lookup"><span data-stu-id="1c131-169">The type of the exported object to return.</span></span></typeparam>
        <param name="contractName"><span data-ttu-id="1c131-170">Имя контракта возвращаемого экспортированного объекта либо значение <see langword="null" /> или пустая строка ("") для использования имени контракта по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="1c131-170">The contract name of the exported object to return, or <see langword="null" /> or an empty string ("") to use the default contract name.</span></span></param>
        <summary><span data-ttu-id="1c131-171">Возвращает экспортированный объект с указанным именем контракта.</span><span class="sxs-lookup"><span data-stu-id="1c131-171">Returns the exported object with the specified contract name.</span></span> <span data-ttu-id="1c131-172">В случае отсутствия ровно одного соответствующего экспортированного объекта создается исключение.</span><span class="sxs-lookup"><span data-stu-id="1c131-172">If there is not exactly one matching exported object, an exception is thrown.</span></span></summary>
        <returns><span data-ttu-id="1c131-173">Экспортированный объект с указанным именем контракта.</span><span class="sxs-lookup"><span data-stu-id="1c131-173">The exported object with the specified contract name.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1c131-174">Имя контракта по умолчанию является результатом вызова метода <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> в `T`.</span><span class="sxs-lookup"><span data-stu-id="1c131-174">The default contract name is the result of calling the <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> method on `T`.</span></span>  
  
 <span data-ttu-id="1c131-175">Имя контракта сравнивается с помощью свойства <xref:System.StringComparer.Ordinal%2A> для выполнения нелингвистического сравнения без учета регистра.</span><span class="sxs-lookup"><span data-stu-id="1c131-175">The contract name is compared by using the <xref:System.StringComparer.Ordinal%2A> property to perform a case-sensitive, non-linguistic comparison.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.Composition.ImportCardinalityMismatchException"><span data-ttu-id="1c131-176">Имеются ноль экспортируемых объектов с именем контракта, являющимся производным <paramref name="T" />, в <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />.</span><span class="sxs-lookup"><span data-stu-id="1c131-176">There are zero exported objects with the contract name derived from <paramref name="T" /> in the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />.</span></span>  
  
<span data-ttu-id="1c131-177">- или -</span><span class="sxs-lookup"><span data-stu-id="1c131-177">-or-</span></span> 
<span data-ttu-id="1c131-178">В контейнере <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> имеется несколько экспортированных объектов с именем контракта, являющимся производным типа <paramref name="T" />.</span><span class="sxs-lookup"><span data-stu-id="1c131-178">There is more than one exported object with the contract name derived from <paramref name="T" /> in the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="1c131-179">Объект <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> ликвидирован.</span><span class="sxs-lookup"><span data-stu-id="1c131-179">The <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> object has been disposed of.</span></span></exception>
        <exception cref="T:System.ComponentModel.Composition.CompositionContractMismatchException"><span data-ttu-id="1c131-180">Базовый экспортированный объект не может быть приведен к типу <paramref name="T" />.</span><span class="sxs-lookup"><span data-stu-id="1c131-180">The underlying exported object cannot be cast to <paramref name="T" />.</span></span></exception>
        <exception cref="T:System.ComponentModel.Composition.CompositionException"><span data-ttu-id="1c131-181">Произошла ошибка при композиции.</span><span class="sxs-lookup"><span data-stu-id="1c131-181">An error occurred during composition.</span></span> <span data-ttu-id="1c131-182"><see cref="P:System.ComponentModel.Composition.CompositionException.Errors" /> будет содержать коллекцию произошедших ошибок.</span><span class="sxs-lookup"><span data-stu-id="1c131-182"><see cref="P:System.ComponentModel.Composition.CompositionException.Errors" /> will contain a collection of errors that occurred.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetExportedValueOrDefault&lt;T&gt;">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1c131-183">Получает указанный экспортированный объект или значение по умолчанию, если он недоступен.</span><span class="sxs-lookup"><span data-stu-id="1c131-183">Gets a specified exported object or a default value if it is unavailable.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetExportedValueOrDefault&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T GetExportedValueOrDefault&lt;T&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!T GetExportedValueOrDefault&lt;T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValueOrDefault``1" />
      <MemberSignature Language="VB.NET" Value="Public Function GetExportedValueOrDefault(Of T) () As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; T GetExportedValueOrDefault();" />
      <MemberSignature Language="F#" Value="member this.GetExportedValueOrDefault : unit -&gt; 'T" Usage="exportProvider.GetExportedValueOrDefault " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T"><span data-ttu-id="1c131-184">Тип возвращаемого экспортированного объекта.</span><span class="sxs-lookup"><span data-stu-id="1c131-184">The type of the exported object to return.</span></span> <span data-ttu-id="1c131-185">Имя контракта также является производным от этого параметра типа.</span><span class="sxs-lookup"><span data-stu-id="1c131-185">The contract name is also derived from this type parameter.</span></span></typeparam>
        <summary><span data-ttu-id="1c131-186">Получает экспортированный объект с именем контракта, производным от указанного параметра типа, или значение по умолчанию для указанного типа. При наличии более одного соответствующего экспортированного объекта создается исключение.</span><span class="sxs-lookup"><span data-stu-id="1c131-186">Gets the exported object with the contract name derived from the specified type parameter or the default value for the specified type, or throws an exception if there is more than one matching exported object.</span></span></summary>
        <returns><span data-ttu-id="1c131-187">Экспортированный объект с именем контракта, производным от типа <paramref name="T" />, если оно найдено; в противном случае — значение по умолчанию для типа <paramref name="T" />.</span><span class="sxs-lookup"><span data-stu-id="1c131-187">The exported object with the contract name derived from <paramref name="T" />, if found; otherwise, the default value for <paramref name="T" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1c131-188">Если экспортированный объект не найден, этот метод возвращает соответствующее значение по умолчанию для `T`; Например, ноль для целочисленных типов, `false` для логических типов и `null` для ссылочных типов.</span><span class="sxs-lookup"><span data-stu-id="1c131-188">If the exported object is not found, this method returns the appropriate default value for `T`; for example, zero for integer types, `false` for Boolean types, and `null` for reference types.</span></span>  
  
 <span data-ttu-id="1c131-189">Имя контракта является результатом вызова метода <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> в `T`.</span><span class="sxs-lookup"><span data-stu-id="1c131-189">The contract name is the result of calling the <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> method on `T`.</span></span>  
  
 <span data-ttu-id="1c131-190">Имя контракта сравнивается с помощью свойства <xref:System.StringComparer.Ordinal%2A> для выполнения нелингвистического сравнения без учета регистра.</span><span class="sxs-lookup"><span data-stu-id="1c131-190">The contract name is compared by using the <xref:System.StringComparer.Ordinal%2A> property to perform a case-sensitive, non-linguistic comparison.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.Composition.ImportCardinalityMismatchException"><span data-ttu-id="1c131-191">В контейнере <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> имеется несколько экспортированных объектов с именем контракта, являющимся производным типа <paramref name="T" />.</span><span class="sxs-lookup"><span data-stu-id="1c131-191">There is more than one exported object with the contract name derived from <paramref name="T" /> in the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="1c131-192">Объект <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> ликвидирован.</span><span class="sxs-lookup"><span data-stu-id="1c131-192">The <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> object has been disposed of.</span></span></exception>
        <exception cref="T:System.ComponentModel.Composition.CompositionContractMismatchException"><span data-ttu-id="1c131-193">Базовый экспортированный объект не может быть приведен к типу <paramref name="T" />.</span><span class="sxs-lookup"><span data-stu-id="1c131-193">The underlying exported object cannot be cast to <paramref name="T" />.</span></span></exception>
        <exception cref="T:System.ComponentModel.Composition.CompositionException"><span data-ttu-id="1c131-194">Произошла ошибка при композиции.</span><span class="sxs-lookup"><span data-stu-id="1c131-194">An error occurred during composition.</span></span> <span data-ttu-id="1c131-195"><see cref="P:System.ComponentModel.Composition.CompositionException.Errors" /> будет содержать коллекцию произошедших ошибок.</span><span class="sxs-lookup"><span data-stu-id="1c131-195"><see cref="P:System.ComponentModel.Composition.CompositionException.Errors" /> will contain a collection of errors that occurred.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetExportedValueOrDefault&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T GetExportedValueOrDefault&lt;T&gt; (string contractName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!T GetExportedValueOrDefault&lt;T&gt;(string contractName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValueOrDefault``1(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetExportedValueOrDefault(Of T) (contractName As String) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; T GetExportedValueOrDefault(System::String ^ contractName);" />
      <MemberSignature Language="F#" Value="member this.GetExportedValueOrDefault : string -&gt; 'T" Usage="exportProvider.GetExportedValueOrDefault contractName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="contractName" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="1c131-196">Тип возвращаемого экспортированного объекта.</span><span class="sxs-lookup"><span data-stu-id="1c131-196">The type of the exported object to return.</span></span></typeparam>
        <param name="contractName"><span data-ttu-id="1c131-197">Имя контракта возвращаемого экспортированного объекта либо значение <see langword="null" /> или пустая строка ("") для использования имени контракта по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="1c131-197">The contract name of the exported object to return, or <see langword="null" /> or an empty string ("") to use the default contract name.</span></span></param>
        <summary><span data-ttu-id="1c131-198">Получает экспортированный объект с заданным именем контракта или значение по умолчанию для указанного типа. При наличии более одного соответствующего экспортированного объекта создается исключение.</span><span class="sxs-lookup"><span data-stu-id="1c131-198">Gets the exported object with the specified contract name or the default value for the specified type, or throws an exception if there is more than one matching exported object.</span></span></summary>
        <returns><span data-ttu-id="1c131-199">Экспортированный объект с указанным именем контракта, если оно найдено; в противном случае — значение по умолчанию для типа <paramref name="T" />.</span><span class="sxs-lookup"><span data-stu-id="1c131-199">The exported object with the specified contract name, if found; otherwise, the default value for <paramref name="T" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1c131-200">Если экспортированный объект не найден, этот метод возвращает соответствующее значение по умолчанию для `T`; Например, ноль для целочисленных типов, `false` для логических типов и `null` для ссылочных типов.</span><span class="sxs-lookup"><span data-stu-id="1c131-200">If the exported object is not found, this method returns the appropriate default value for `T`; for example, zero for integer types, `false` for Boolean types, and `null` for reference types.</span></span>  
  
 <span data-ttu-id="1c131-201">Имя контракта по умолчанию является результатом вызова метода <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> в `T`.</span><span class="sxs-lookup"><span data-stu-id="1c131-201">The default contract name is the result of calling the <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> method on `T`.</span></span>  
  
 <span data-ttu-id="1c131-202">Имя контракта сравнивается с помощью свойства <xref:System.StringComparer.Ordinal%2A> для выполнения нелингвистического сравнения без учета регистра.</span><span class="sxs-lookup"><span data-stu-id="1c131-202">The contract name is compared by using the <xref:System.StringComparer.Ordinal%2A> property to perform a case-sensitive, non-linguistic comparison.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.Composition.ImportCardinalityMismatchException"><span data-ttu-id="1c131-203">Существует несколько экспортируемых объектов с названием контракта, указанным в <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />.</span><span class="sxs-lookup"><span data-stu-id="1c131-203">There is more than one exported object with the specified contract name in the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="1c131-204">Объект <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> ликвидирован.</span><span class="sxs-lookup"><span data-stu-id="1c131-204">The <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> object has been disposed of.</span></span></exception>
        <exception cref="T:System.ComponentModel.Composition.CompositionContractMismatchException"><span data-ttu-id="1c131-205">Базовый экспортированный объект не может быть приведен к типу <paramref name="T" />.</span><span class="sxs-lookup"><span data-stu-id="1c131-205">The underlying exported object cannot be cast to <paramref name="T" />.</span></span></exception>
        <exception cref="T:System.ComponentModel.Composition.CompositionException"><span data-ttu-id="1c131-206">Произошла ошибка при композиции.</span><span class="sxs-lookup"><span data-stu-id="1c131-206">An error occurred during composition.</span></span> <span data-ttu-id="1c131-207"><see cref="P:System.ComponentModel.Composition.CompositionException.Errors" /> будет содержать коллекцию произошедших ошибок.</span><span class="sxs-lookup"><span data-stu-id="1c131-207"><see cref="P:System.ComponentModel.Composition.CompositionException.Errors" /> will contain a collection of errors that occurred.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetExportedValues&lt;T&gt;">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1c131-208">Получает один или несколько экспортированных объектов.</span><span class="sxs-lookup"><span data-stu-id="1c131-208">Gets one or more exported objects.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetExportedValues&lt;T&gt;">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;T&gt; GetExportedValues&lt;T&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;!!T&gt; GetExportedValues&lt;T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValues``1" />
      <MemberSignature Language="VB.NET" Value="Public Function GetExportedValues(Of T) () As IEnumerable(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; System::Collections::Generic::IEnumerable&lt;T&gt; ^ GetExportedValues();" />
      <MemberSignature Language="F#" Value="member this.GetExportedValues : unit -&gt; seq&lt;'T&gt;" Usage="exportProvider.GetExportedValues " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T"><span data-ttu-id="1c131-209">Тип возвращаемого экспортированного объекта.</span><span class="sxs-lookup"><span data-stu-id="1c131-209">The type of the exported object to return.</span></span> <span data-ttu-id="1c131-210">Имя контракта также является производным от этого параметра типа.</span><span class="sxs-lookup"><span data-stu-id="1c131-210">The contract name is also derived from this type parameter.</span></span></typeparam>
        <summary><span data-ttu-id="1c131-211">Получает экспортированные объекты с именем контракта, производным от указанного параметра типа.</span><span class="sxs-lookup"><span data-stu-id="1c131-211">Gets all the exported objects with the contract name derived from the specified type parameter.</span></span></summary>
        <returns><span data-ttu-id="1c131-212">Экспортированные объекты с именем контракта, производным от указанного типа, если оно найдено; в противном случае — пустой объект <see cref="T:System.Collections.ObjectModel.Collection`1" />.</span><span class="sxs-lookup"><span data-stu-id="1c131-212">The exported objects with the contract name derived from the specified type parameter, if found; otherwise, an empty <see cref="T:System.Collections.ObjectModel.Collection`1" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1c131-213">Имя контракта является результатом вызова метода <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> в `T`.</span><span class="sxs-lookup"><span data-stu-id="1c131-213">The contract name is the result of calling the <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> method on `T`.</span></span>  
  
 <span data-ttu-id="1c131-214">Имя контракта сравнивается с помощью свойства <xref:System.StringComparer.Ordinal%2A> для выполнения нелингвистического сравнения без учета регистра.</span><span class="sxs-lookup"><span data-stu-id="1c131-214">The contract name is compared by using the <xref:System.StringComparer.Ordinal%2A> property to perform a case-sensitive, non-linguistic comparison.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="1c131-215">Объект <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> ликвидирован.</span><span class="sxs-lookup"><span data-stu-id="1c131-215">The <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> object has been disposed of.</span></span></exception>
        <exception cref="T:System.ComponentModel.Composition.CompositionContractMismatchException"><span data-ttu-id="1c131-216">Один или несколько базовых экспортируемых объектов не могут быть приведены к <paramref name="T" />.</span><span class="sxs-lookup"><span data-stu-id="1c131-216">One or more of the underlying exported objects cannot be cast to <paramref name="T" />.</span></span></exception>
        <exception cref="T:System.ComponentModel.Composition.CompositionException"><span data-ttu-id="1c131-217">Произошла ошибка при композиции.</span><span class="sxs-lookup"><span data-stu-id="1c131-217">An error occurred during composition.</span></span> <span data-ttu-id="1c131-218"><see cref="P:System.ComponentModel.Composition.CompositionException.Errors" /> будет содержать коллекцию произошедших ошибок.</span><span class="sxs-lookup"><span data-stu-id="1c131-218"><see cref="P:System.ComponentModel.Composition.CompositionException.Errors" /> will contain a collection of errors that occurred.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetExportedValues&lt;T&gt;">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;T&gt; GetExportedValues&lt;T&gt; (string contractName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;!!T&gt; GetExportedValues&lt;T&gt;(string contractName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValues``1(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetExportedValues(Of T) (contractName As String) As IEnumerable(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; System::Collections::Generic::IEnumerable&lt;T&gt; ^ GetExportedValues(System::String ^ contractName);" />
      <MemberSignature Language="F#" Value="member this.GetExportedValues : string -&gt; seq&lt;'T&gt;" Usage="exportProvider.GetExportedValues contractName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="contractName" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="1c131-219">Тип возвращаемого экспортированного объекта.</span><span class="sxs-lookup"><span data-stu-id="1c131-219">The type of the exported object to return.</span></span></typeparam>
        <param name="contractName"><span data-ttu-id="1c131-220">Имя контракта возвращаемых экспортированных объектов либо значение <see langword="null" /> или пустая строка ("") для использования имени контракта по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="1c131-220">The contract name of the exported objects to return; or <see langword="null" /> or an empty string ("") to use the default contract name.</span></span></param>
        <summary><span data-ttu-id="1c131-221">Получает экспортированные объекты с указанным именем контракта.</span><span class="sxs-lookup"><span data-stu-id="1c131-221">Gets all the exported objects with the specified contract name.</span></span></summary>
        <returns><span data-ttu-id="1c131-222">Экспортированные объекты с указанным именем контракта, если оно найдено; в противном случае — пустой объект <see cref="T:System.Collections.ObjectModel.Collection`1" />.</span><span class="sxs-lookup"><span data-stu-id="1c131-222">The exported objects with the specified contract name, if found; otherwise, an empty <see cref="T:System.Collections.ObjectModel.Collection`1" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1c131-223">Имя контракта по умолчанию является результатом вызова метода <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> в `T`.</span><span class="sxs-lookup"><span data-stu-id="1c131-223">The default contract name is the result of calling the <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> method on `T`.</span></span>  
  
 <span data-ttu-id="1c131-224">Имя контракта сравнивается с помощью свойства <xref:System.StringComparer.Ordinal%2A> для выполнения нелингвистического сравнения без учета регистра.</span><span class="sxs-lookup"><span data-stu-id="1c131-224">The contract name is compared by using the <xref:System.StringComparer.Ordinal%2A> property to perform a case-sensitive, non-linguistic comparison.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="1c131-225">Объект <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> ликвидирован.</span><span class="sxs-lookup"><span data-stu-id="1c131-225">The <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> object has been disposed of.</span></span></exception>
        <exception cref="T:System.ComponentModel.Composition.CompositionContractMismatchException"><span data-ttu-id="1c131-226">Одно или несколько базовых экспортируемых значений не могут быть приведены к <paramref name="T" />.</span><span class="sxs-lookup"><span data-stu-id="1c131-226">One or more of the underlying exported values cannot be cast to <paramref name="T" />.</span></span></exception>
        <exception cref="T:System.ComponentModel.Composition.CompositionException"><span data-ttu-id="1c131-227">Произошла ошибка при композиции.</span><span class="sxs-lookup"><span data-stu-id="1c131-227">An error occurred during composition.</span></span> <span data-ttu-id="1c131-228"><see cref="P:System.ComponentModel.Composition.CompositionException.Errors" /> будет содержать коллекцию произошедших ошибок.</span><span class="sxs-lookup"><span data-stu-id="1c131-228"><see cref="P:System.ComponentModel.Composition.CompositionException.Errors" /> will contain a collection of errors that occurred.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetExports">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1c131-229">Получает все экспорты, которые соответствуют заданным условиям.</span><span class="sxs-lookup"><span data-stu-id="1c131-229">Gets all the exports matching the specified conditions.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetExports">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.ComponentModel.Composition.Primitives.Export&gt; GetExports (System.ComponentModel.Composition.Primitives.ImportDefinition definition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.ComponentModel.Composition.Primitives.Export&gt; GetExports(class System.ComponentModel.Composition.Primitives.ImportDefinition definition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetExports (definition As ImportDefinition) As IEnumerable(Of Export)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::ComponentModel::Composition::Primitives::Export ^&gt; ^ GetExports(System::ComponentModel::Composition::Primitives::ImportDefinition ^ definition);" />
      <MemberSignature Language="F#" Value="member this.GetExports : System.ComponentModel.Composition.Primitives.ImportDefinition -&gt; seq&lt;System.ComponentModel.Composition.Primitives.Export&gt;" Usage="exportProvider.GetExports definition" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.ComponentModel.Composition.Primitives.Export&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="definition" Type="System.ComponentModel.Composition.Primitives.ImportDefinition" />
      </Parameters>
      <Docs>
        <param name="definition"><span data-ttu-id="1c131-230">Объект, определяющий условия получаемых объектов <see cref="T:System.ComponentModel.Composition.Primitives.Export" />.</span><span class="sxs-lookup"><span data-stu-id="1c131-230">The object that defines the conditions of the <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> objects to get.</span></span></param>
        <summary><span data-ttu-id="1c131-231">Получает все экспорты, которые соответствуют условиям указанного определения импорта.</span><span class="sxs-lookup"><span data-stu-id="1c131-231">Gets all exports that match the conditions of the specified import definition.</span></span></summary>
        <returns><span data-ttu-id="1c131-232">Коллекция всех объектов <see cref="T:System.ComponentModel.Composition.Primitives.Export" />, соответствующих условию, определенному параметром <paramref name="definition" />.</span><span class="sxs-lookup"><span data-stu-id="1c131-232">A collection of all the <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> objects matching the condition specified by <paramref name="definition" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ComponentModel.Composition.ImportCardinalityMismatchException"><span data-ttu-id="1c131-233">Свойство <see cref="P:System.ComponentModel.Composition.Primitives.ImportDefinition.Cardinality" /> равно <see cref="F:System.ComponentModel.Composition.Primitives.ImportCardinality.ExactlyOne" /> и имеется ноль объектов <see cref="T:System.ComponentModel.Composition.Primitives.Export" />, которые соответствуют условиям указанного <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition" />.</span><span class="sxs-lookup"><span data-stu-id="1c131-233"><see cref="P:System.ComponentModel.Composition.Primitives.ImportDefinition.Cardinality" /> is <see cref="F:System.ComponentModel.Composition.Primitives.ImportCardinality.ExactlyOne" /> and there are zero <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> objects that match the conditions of the specified <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition" />.</span></span>  
  
<span data-ttu-id="1c131-234">- или -</span><span class="sxs-lookup"><span data-stu-id="1c131-234">-or-</span></span> 
 <span data-ttu-id="1c131-235">Свойство <see cref="P:System.ComponentModel.Composition.Primitives.ImportDefinition.Cardinality" /> равно <see cref="F:System.ComponentModel.Composition.Primitives.ImportCardinality.ZeroOrOne" /> или <see cref="F:System.ComponentModel.Composition.Primitives.ImportCardinality.ExactlyOne" /> и имеется более одного объекта <see cref="T:System.ComponentModel.Composition.Primitives.Export" />, который соответствует условиям указанного <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition" />.</span><span class="sxs-lookup"><span data-stu-id="1c131-235"><see cref="P:System.ComponentModel.Composition.Primitives.ImportDefinition.Cardinality" /> is <see cref="F:System.ComponentModel.Composition.Primitives.ImportCardinality.ZeroOrOne" /> or <see cref="F:System.ComponentModel.Composition.Primitives.ImportCardinality.ExactlyOne" /> and there is more than one <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> object that matches the conditions of the specified <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1c131-236">Свойство <paramref name="definition" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1c131-236"><paramref name="definition" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetExports">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.ComponentModel.Composition.Primitives.Export&gt; GetExports (System.ComponentModel.Composition.Primitives.ImportDefinition definition, System.ComponentModel.Composition.Hosting.AtomicComposition atomicComposition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.ComponentModel.Composition.Primitives.Export&gt; GetExports(class System.ComponentModel.Composition.Primitives.ImportDefinition definition, class System.ComponentModel.Composition.Hosting.AtomicComposition atomicComposition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::ComponentModel::Composition::Primitives::Export ^&gt; ^ GetExports(System::ComponentModel::Composition::Primitives::ImportDefinition ^ definition, System::ComponentModel::Composition::Hosting::AtomicComposition ^ atomicComposition);" />
      <MemberSignature Language="F#" Value="member this.GetExports : System.ComponentModel.Composition.Primitives.ImportDefinition * System.ComponentModel.Composition.Hosting.AtomicComposition -&gt; seq&lt;System.ComponentModel.Composition.Primitives.Export&gt;" Usage="exportProvider.GetExports (definition, atomicComposition)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.ComponentModel.Composition.Primitives.Export&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="definition" Type="System.ComponentModel.Composition.Primitives.ImportDefinition" />
        <Parameter Name="atomicComposition" Type="System.ComponentModel.Composition.Hosting.AtomicComposition" />
      </Parameters>
      <Docs>
        <param name="definition"><span data-ttu-id="1c131-237">Объект, определяющий условия получаемых объектов <see cref="T:System.ComponentModel.Composition.Primitives.Export" />.</span><span class="sxs-lookup"><span data-stu-id="1c131-237">The object that defines the conditions of the <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> objects to get.</span></span></param>
        <param name="atomicComposition"><span data-ttu-id="1c131-238">Транзакционный контейнер для композиции.</span><span class="sxs-lookup"><span data-stu-id="1c131-238">The transactional container for the composition.</span></span></param>
        <summary><span data-ttu-id="1c131-239">Получает все экспорты, которые соответствуют условиям указанного определения импорта и композиции.</span><span class="sxs-lookup"><span data-stu-id="1c131-239">Gets all exports that match the conditions of the specified import definition and composition.</span></span></summary>
        <returns><span data-ttu-id="1c131-240">Коллекция всех объектов <see cref="T:System.ComponentModel.Composition.Primitives.Export" />, соответствующих условию, определенному параметрами <paramref name="definition" /> и <paramref name="atomicComposition" />.</span><span class="sxs-lookup"><span data-stu-id="1c131-240">A collection of all the <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> objects matching the condition specified by <paramref name="definition" /> and <paramref name="atomicComposition" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ComponentModel.Composition.ImportCardinalityMismatchException"><span data-ttu-id="1c131-241">Свойство <see cref="P:System.ComponentModel.Composition.Primitives.ImportDefinition.Cardinality" /> равно <see cref="F:System.ComponentModel.Composition.Primitives.ImportCardinality.ExactlyOne" /> и имеется ноль объектов <see cref="T:System.ComponentModel.Composition.Primitives.Export" />, которые соответствуют условиям указанного <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition" />.</span><span class="sxs-lookup"><span data-stu-id="1c131-241"><see cref="P:System.ComponentModel.Composition.Primitives.ImportDefinition.Cardinality" /> is <see cref="F:System.ComponentModel.Composition.Primitives.ImportCardinality.ExactlyOne" /> and there are zero <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> objects that match the conditions of the specified <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition" />.</span></span>  
  
<span data-ttu-id="1c131-242">- или -</span><span class="sxs-lookup"><span data-stu-id="1c131-242">-or-</span></span> 
 <span data-ttu-id="1c131-243">Свойство <see cref="P:System.ComponentModel.Composition.Primitives.ImportDefinition.Cardinality" /> равно <see cref="F:System.ComponentModel.Composition.Primitives.ImportCardinality.ZeroOrOne" /> или <see cref="F:System.ComponentModel.Composition.Primitives.ImportCardinality.ExactlyOne" /> и имеется более одного объекта <see cref="T:System.ComponentModel.Composition.Primitives.Export" />, который соответствует условиям указанного <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition" />.</span><span class="sxs-lookup"><span data-stu-id="1c131-243"><see cref="P:System.ComponentModel.Composition.Primitives.ImportDefinition.Cardinality" /> is <see cref="F:System.ComponentModel.Composition.Primitives.ImportCardinality.ZeroOrOne" /> or <see cref="F:System.ComponentModel.Composition.Primitives.ImportCardinality.ExactlyOne" /> and there is more than one <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> object that matches the conditions of the specified <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1c131-244">Свойство <paramref name="definition" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1c131-244"><paramref name="definition" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="1c131-245">- или -</span><span class="sxs-lookup"><span data-stu-id="1c131-245">-or-</span></span> 
 <span data-ttu-id="1c131-246"><paramref name="atomicComposition" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1c131-246"><paramref name="atomicComposition" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetExports">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;Lazy&lt;object,object&gt;&gt; GetExports (Type type, Type metadataViewType, string contractName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.Lazy`2&lt;object, object&gt;&gt; GetExports(class System.Type type, class System.Type metadataViewType, string contractName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports(System.Type,System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;Lazy&lt;System::Object ^, System::Object ^&gt; ^&gt; ^ GetExports(Type ^ type, Type ^ metadataViewType, System::String ^ contractName);" />
      <MemberSignature Language="F#" Value="member this.GetExports : Type * Type * string -&gt; seq&lt;Lazy&lt;obj, obj&gt;&gt;" Usage="exportProvider.GetExports (type, metadataViewType, contractName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Lazy&lt;System.Object,System.Object&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="metadataViewType" Type="System.Type" />
        <Parameter Name="contractName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="1c131-247">Параметр типа возвращаемых объектов <see cref="T:System.Lazy`2" />.</span><span class="sxs-lookup"><span data-stu-id="1c131-247">The type parameter of the <see cref="T:System.Lazy`2" /> objects to return.</span></span></param>
        <param name="metadataViewType"><span data-ttu-id="1c131-248">Тип представления метаданных возвращаемых объектов <see cref="T:System.Lazy`2" />.</span><span class="sxs-lookup"><span data-stu-id="1c131-248">The type of the metadata view of the <see cref="T:System.Lazy`2" /> objects to return.</span></span></param>
        <param name="contractName"><span data-ttu-id="1c131-249">Имя контракта возвращаемого объекта <see cref="T:System.Lazy`2" /> либо значение <see langword="null" /> или пустая строка ("") для использования имени контракта по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="1c131-249">The contract name of the <see cref="T:System.Lazy`2" /> object to return, or <see langword="null" /> or an empty string ("") to use the default contract name.</span></span></param>
        <summary><span data-ttu-id="1c131-250">Получает экспорты с указанным именем контракта.</span><span class="sxs-lookup"><span data-stu-id="1c131-250">Gets all the exports with the specified contract name.</span></span></summary>
        <returns><span data-ttu-id="1c131-251">Коллекция всех объектов <see cref="T:System.Lazy`2" /> для контракта с именем <paramref name="contractName" />.</span><span class="sxs-lookup"><span data-stu-id="1c131-251">A collection of all the <see cref="T:System.Lazy`2" /> objects for the contract matching <paramref name="contractName" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1c131-252">Имя контракта по умолчанию является результатом вызова метода <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> в `type`.</span><span class="sxs-lookup"><span data-stu-id="1c131-252">The default contract name is the result of calling the <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> method on `type`.</span></span>  
  
 <span data-ttu-id="1c131-253">Имя контракта сравнивается с помощью свойства <xref:System.StringComparer.Ordinal%2A> для выполнения нелингвистического сравнения без учета регистра.</span><span class="sxs-lookup"><span data-stu-id="1c131-253">The contract name is compared by using the <xref:System.StringComparer.Ordinal%2A> property to perform a case-sensitive, non-linguistic comparison.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="1c131-254">Объект <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> ликвидирован.</span><span class="sxs-lookup"><span data-stu-id="1c131-254">The <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> object has been disposed of.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1c131-255">Свойство <paramref name="type" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1c131-255"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1c131-256"><paramref name="metadataViewType" /> не является допустимым типом представления метаданных.</span><span class="sxs-lookup"><span data-stu-id="1c131-256"><paramref name="metadataViewType" /> is not a valid metadata view type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetExports&lt;T&gt;">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;Lazy&lt;T&gt;&gt; GetExports&lt;T&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.Lazy`1&lt;!!T&gt;&gt; GetExports&lt;T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports``1" />
      <MemberSignature Language="VB.NET" Value="Public Function GetExports(Of T) () As IEnumerable(Of Lazy(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; System::Collections::Generic::IEnumerable&lt;Lazy&lt;T&gt; ^&gt; ^ GetExports();" />
      <MemberSignature Language="F#" Value="member this.GetExports : unit -&gt; seq&lt;Lazy&lt;'T&gt;&gt;" Usage="exportProvider.GetExports " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Lazy&lt;T&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T"><span data-ttu-id="1c131-257">Параметр типа возвращаемых объектов <see cref="T:System.Lazy`1" />.</span><span class="sxs-lookup"><span data-stu-id="1c131-257">The type parameter of the <see cref="T:System.Lazy`1" /> objects to return.</span></span> <span data-ttu-id="1c131-258">Имя контракта также является производным от этого параметра типа.</span><span class="sxs-lookup"><span data-stu-id="1c131-258">The contract name is also derived from this type parameter.</span></span></typeparam>
        <summary><span data-ttu-id="1c131-259">Получает все экспорты с именем контракта, производным от указанного параметра типа.</span><span class="sxs-lookup"><span data-stu-id="1c131-259">Gets all the exports with the contract name derived from the specified type parameter.</span></span></summary>
        <returns><span data-ttu-id="1c131-260">Объекты <see cref="T:System.Lazy`1" /> с именем контракта, производным от типа <paramref name="T" />, если оно найдено; в противном случае — пустой объект <see cref="T:System.Collections.Generic.IEnumerable`1" />.</span><span class="sxs-lookup"><span data-stu-id="1c131-260">The <see cref="T:System.Lazy`1" /> objects with the contract name derived from <paramref name="T" />, if found; otherwise, an empty <see cref="T:System.Collections.Generic.IEnumerable`1" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1c131-261">Имя контракта является результатом вызова метода <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> в `T`.</span><span class="sxs-lookup"><span data-stu-id="1c131-261">The contract name is the result of calling the <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> method on `T`.</span></span>  
  
 <span data-ttu-id="1c131-262">Имя контракта сравнивается с помощью свойства <xref:System.StringComparer.Ordinal%2A> для выполнения нелингвистического сравнения без учета регистра.</span><span class="sxs-lookup"><span data-stu-id="1c131-262">The contract name is compared by using the <xref:System.StringComparer.Ordinal%2A> property to perform a case-sensitive, non-linguistic comparison.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="1c131-263">Объект <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> ликвидирован.</span><span class="sxs-lookup"><span data-stu-id="1c131-263">The <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> object has been disposed of.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetExports&lt;T&gt;">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;Lazy&lt;T&gt;&gt; GetExports&lt;T&gt; (string contractName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.Lazy`1&lt;!!T&gt;&gt; GetExports&lt;T&gt;(string contractName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports``1(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetExports(Of T) (contractName As String) As IEnumerable(Of Lazy(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; System::Collections::Generic::IEnumerable&lt;Lazy&lt;T&gt; ^&gt; ^ GetExports(System::String ^ contractName);" />
      <MemberSignature Language="F#" Value="member this.GetExports : string -&gt; seq&lt;Lazy&lt;'T&gt;&gt;" Usage="exportProvider.GetExports contractName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Lazy&lt;T&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="contractName" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="1c131-264">Параметр типа возвращаемых объектов <see cref="T:System.Lazy`1" />.</span><span class="sxs-lookup"><span data-stu-id="1c131-264">The type parameter of the <see cref="T:System.Lazy`1" /> objects to return.</span></span></typeparam>
        <param name="contractName"><span data-ttu-id="1c131-265">Имя контракта возвращаемых объектов <see cref="T:System.Lazy`1" /> либо значение <see langword="null" /> или пустая строка ("") для использования имени контракта по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="1c131-265">The contract name of the <see cref="T:System.Lazy`1" /> objects to return, or <see langword="null" /> or an empty string ("") to use the default contract name.</span></span></param>
        <summary><span data-ttu-id="1c131-266">Получает экспорты с указанным именем контракта.</span><span class="sxs-lookup"><span data-stu-id="1c131-266">Gets all the exports with the specified contract name.</span></span></summary>
        <returns><span data-ttu-id="1c131-267">Объекты <see cref="T:System.Lazy`1" /> с указанным именем контракта, если оно найдено; в противном случае — пустой объект <see cref="T:System.Collections.Generic.IEnumerable`1" />.</span><span class="sxs-lookup"><span data-stu-id="1c131-267">The <see cref="T:System.Lazy`1" /> objects with the specified contract name, if found; otherwise, an empty <see cref="T:System.Collections.Generic.IEnumerable`1" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1c131-268">Имя контракта по умолчанию является результатом вызова метода <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> в `T`.</span><span class="sxs-lookup"><span data-stu-id="1c131-268">The default contract name is the result of calling the <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> method on `T`.</span></span>  
  
 <span data-ttu-id="1c131-269">Имя контракта сравнивается с помощью свойства <xref:System.StringComparer.Ordinal%2A> для выполнения нелингвистического сравнения без учета регистра.</span><span class="sxs-lookup"><span data-stu-id="1c131-269">The contract name is compared by using the <xref:System.StringComparer.Ordinal%2A> property to perform a case-sensitive, non-linguistic comparison.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="1c131-270">Объект <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> ликвидирован.</span><span class="sxs-lookup"><span data-stu-id="1c131-270">The <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> object has been disposed of.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetExports&lt;T,TMetadataView&gt;">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;Lazy&lt;T,TMetadataView&gt;&gt; GetExports&lt;T,TMetadataView&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.Lazy`2&lt;!!T, !!TMetadataView&gt;&gt; GetExports&lt;T, TMetadataView&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports``2" />
      <MemberSignature Language="VB.NET" Value="Public Function GetExports(Of T, TMetadataView) () As IEnumerable(Of Lazy(Of T, TMetadataView))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T, typename TMetadataView&gt;&#xA; System::Collections::Generic::IEnumerable&lt;Lazy&lt;T, TMetadataView&gt; ^&gt; ^ GetExports();" />
      <MemberSignature Language="F#" Value="member this.GetExports : unit -&gt; seq&lt;Lazy&lt;'T, 'MetadataView&gt;&gt;" Usage="exportProvider.GetExports " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Lazy&lt;T,TMetadataView&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
        <TypeParameter Name="TMetadataView" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T"><span data-ttu-id="1c131-271">Параметр типа возвращаемых объектов <see cref="T:System.Lazy`2" />.</span><span class="sxs-lookup"><span data-stu-id="1c131-271">The type parameter of the <see cref="T:System.Lazy`2" /> objects to return.</span></span> <span data-ttu-id="1c131-272">Имя контракта также является производным от этого параметра типа.</span><span class="sxs-lookup"><span data-stu-id="1c131-272">The contract name is also derived from this type parameter.</span></span></typeparam>
        <typeparam name="TMetadataView"><span data-ttu-id="1c131-273">Тип представления метаданных возвращаемых объектов <see cref="T:System.Lazy`2" />.</span><span class="sxs-lookup"><span data-stu-id="1c131-273">The type of the metadata view of the <see cref="T:System.Lazy`2" /> objects to return.</span></span></typeparam>
        <summary><span data-ttu-id="1c131-274">Получает все экспорты с именем контракта, производным от указанного параметра типа.</span><span class="sxs-lookup"><span data-stu-id="1c131-274">Gets all the exports with the contract name derived from the specified type parameter.</span></span></summary>
        <returns><span data-ttu-id="1c131-275">Объекты <see cref="T:System.Lazy`2" /> с именем контракта, производным от типа <paramref name="T" />, если оно найдено; в противном случае — пустой объект <see cref="T:System.Collections.Generic.IEnumerable`1" />.</span><span class="sxs-lookup"><span data-stu-id="1c131-275">The <see cref="T:System.Lazy`2" /> objects with the contract name derived from <paramref name="T" />, if found; otherwise, an empty <see cref="T:System.Collections.Generic.IEnumerable`1" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1c131-276">Имя контракта является результатом вызова метода <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> в `T`.</span><span class="sxs-lookup"><span data-stu-id="1c131-276">The contract name is the result of calling the <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> method on `T`.</span></span>  
  
 <span data-ttu-id="1c131-277">Имя контракта сравнивается с помощью свойства <xref:System.StringComparer.Ordinal%2A> для выполнения нелингвистического сравнения без учета регистра.</span><span class="sxs-lookup"><span data-stu-id="1c131-277">The contract name is compared by using the <xref:System.StringComparer.Ordinal%2A> property to perform a case-sensitive, non-linguistic comparison.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="1c131-278">Объект <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> ликвидирован.</span><span class="sxs-lookup"><span data-stu-id="1c131-278">The <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> object has been disposed of.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1c131-279"><paramref name="TMetadataView" /> не является допустимым типом представления метаданных.</span><span class="sxs-lookup"><span data-stu-id="1c131-279"><paramref name="TMetadataView" /> is not a valid metadata view type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetExports&lt;T,TMetadataView&gt;">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;Lazy&lt;T,TMetadataView&gt;&gt; GetExports&lt;T,TMetadataView&gt; (string contractName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.Lazy`2&lt;!!T, !!TMetadataView&gt;&gt; GetExports&lt;T, TMetadataView&gt;(string contractName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports``2(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetExports(Of T, TMetadataView) (contractName As String) As IEnumerable(Of Lazy(Of T, TMetadataView))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T, typename TMetadataView&gt;&#xA; System::Collections::Generic::IEnumerable&lt;Lazy&lt;T, TMetadataView&gt; ^&gt; ^ GetExports(System::String ^ contractName);" />
      <MemberSignature Language="F#" Value="member this.GetExports : string -&gt; seq&lt;Lazy&lt;'T, 'MetadataView&gt;&gt;" Usage="exportProvider.GetExports contractName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Lazy&lt;T,TMetadataView&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
        <TypeParameter Name="TMetadataView" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="contractName" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="1c131-280">Параметр типа возвращаемых объектов <see cref="T:System.Lazy`2" />.</span><span class="sxs-lookup"><span data-stu-id="1c131-280">The type parameter of the <see cref="T:System.Lazy`2" /> objects to return.</span></span> <span data-ttu-id="1c131-281">Имя контракта также является производным от этого параметра типа.</span><span class="sxs-lookup"><span data-stu-id="1c131-281">The contract name is also derived from this type parameter.</span></span></typeparam>
        <typeparam name="TMetadataView"><span data-ttu-id="1c131-282">Тип представления метаданных возвращаемых объектов <see cref="T:System.Lazy`2" />.</span><span class="sxs-lookup"><span data-stu-id="1c131-282">The type of the metadata view of the <see cref="T:System.Lazy`2" /> objects to return.</span></span></typeparam>
        <param name="contractName"><span data-ttu-id="1c131-283">Имя контракта возвращаемых объектов <see cref="T:System.Lazy`2" /> либо значение <see langword="null" /> или пустая строка ("") для использования имени контракта по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="1c131-283">The contract name of the <see cref="T:System.Lazy`2" /> objects to return, or <see langword="null" /> or an empty string ("") to use the default contract name.</span></span></param>
        <summary><span data-ttu-id="1c131-284">Получает экспорты с указанным именем контракта.</span><span class="sxs-lookup"><span data-stu-id="1c131-284">Gets all the exports with the specified contract name.</span></span></summary>
        <returns><span data-ttu-id="1c131-285">Объекты <see cref="T:System.Lazy`2" /> с указанным именем контракта, если оно найдено; в противном случае — пустой объект <see cref="T:System.Collections.Generic.IEnumerable`1" />.</span><span class="sxs-lookup"><span data-stu-id="1c131-285">The <see cref="T:System.Lazy`2" /> objects with the specified contract name if found; otherwise, an empty <see cref="T:System.Collections.Generic.IEnumerable`1" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1c131-286">Имя контракта по умолчанию является результатом вызова метода <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> в `T`.</span><span class="sxs-lookup"><span data-stu-id="1c131-286">The default contract name is the result of calling the <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> method on `T`.</span></span>  
  
 <span data-ttu-id="1c131-287">Имя контракта сравнивается с помощью свойства <xref:System.StringComparer.Ordinal%2A> для выполнения нелингвистического сравнения без учета регистра.</span><span class="sxs-lookup"><span data-stu-id="1c131-287">The contract name is compared by using the <xref:System.StringComparer.Ordinal%2A> property to perform a case-sensitive, non-linguistic comparison.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="1c131-288">Объект <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> ликвидирован.</span><span class="sxs-lookup"><span data-stu-id="1c131-288">The <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> object has been disposed of.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1c131-289"><paramref name="TMetadataView" /> не является допустимым типом представления метаданных.</span><span class="sxs-lookup"><span data-stu-id="1c131-289"><paramref name="TMetadataView" /> is not a valid metadata view type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetExportsCore">
      <MemberSignature Language="C#" Value="protected abstract System.Collections.Generic.IEnumerable&lt;System.ComponentModel.Composition.Primitives.Export&gt; GetExportsCore (System.ComponentModel.Composition.Primitives.ImportDefinition definition, System.ComponentModel.Composition.Hosting.AtomicComposition atomicComposition);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.ComponentModel.Composition.Primitives.Export&gt; GetExportsCore(class System.ComponentModel.Composition.Primitives.ImportDefinition definition, class System.ComponentModel.Composition.Hosting.AtomicComposition atomicComposition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportsCore(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::Collections::Generic::IEnumerable&lt;System::ComponentModel::Composition::Primitives::Export ^&gt; ^ GetExportsCore(System::ComponentModel::Composition::Primitives::ImportDefinition ^ definition, System::ComponentModel::Composition::Hosting::AtomicComposition ^ atomicComposition);" />
      <MemberSignature Language="F#" Value="abstract member GetExportsCore : System.ComponentModel.Composition.Primitives.ImportDefinition * System.ComponentModel.Composition.Hosting.AtomicComposition -&gt; seq&lt;System.ComponentModel.Composition.Primitives.Export&gt;" Usage="exportProvider.GetExportsCore (definition, atomicComposition)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.ComponentModel.Composition.Primitives.Export&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="definition" Type="System.ComponentModel.Composition.Primitives.ImportDefinition" />
        <Parameter Name="atomicComposition" Type="System.ComponentModel.Composition.Hosting.AtomicComposition" />
      </Parameters>
      <Docs>
        <param name="definition"><span data-ttu-id="1c131-290">Объект, определяющий условия возвращаемых объектов <see cref="T:System.ComponentModel.Composition.Primitives.Export" />.</span><span class="sxs-lookup"><span data-stu-id="1c131-290">The object that defines the conditions of the <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> objects to return.</span></span></param>
        <param name="atomicComposition"><span data-ttu-id="1c131-291">Транзакционный контейнер для композиции.</span><span class="sxs-lookup"><span data-stu-id="1c131-291">The transactional container for the composition.</span></span></param>
        <summary><span data-ttu-id="1c131-292">Получает все экспорты, которые соответствуют ограничению, заданному указанным определением.</span><span class="sxs-lookup"><span data-stu-id="1c131-292">Gets all the exports that match the constraint defined by the specified definition.</span></span></summary>
        <returns><span data-ttu-id="1c131-293">Коллекция, которая содержит все элементы экспорта, соответствующие заданному условию.</span><span class="sxs-lookup"><span data-stu-id="1c131-293">A collection that contains all the exports that match the specified condition.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1c131-294">Переопределения этого метода не должны обрабатывать несоответствия, связанные с количеством элементов, как ошибки, и не должны вызывать исключения в этих случаях.</span><span class="sxs-lookup"><span data-stu-id="1c131-294">Overrides of this method should not treat cardinality-related mismatches as errors, and should not throw exceptions in those cases.</span></span> <span data-ttu-id="1c131-295">Например, если <xref:System.ComponentModel.Composition.Primitives.ImportDefinition.Cardinality%2A> <xref:System.ComponentModel.Composition.Primitives.ImportCardinality.ExactlyOne> и имеется ноль <xref:System.ComponentModel.Composition.Primitives.Export> объектов, соответствующих условиям указанного <xref:System.ComponentModel.Composition.Primitives.ImportDefinition>, должна возвращаться пустая коллекция <xref:System.Collections.Generic.IEnumerable%601>.</span><span class="sxs-lookup"><span data-stu-id="1c131-295">For example, if <xref:System.ComponentModel.Composition.Primitives.ImportDefinition.Cardinality%2A> is <xref:System.ComponentModel.Composition.Primitives.ImportCardinality.ExactlyOne> and there are zero <xref:System.ComponentModel.Composition.Primitives.Export> objects that match the conditions of the specified <xref:System.ComponentModel.Composition.Primitives.ImportDefinition>, an empty <xref:System.Collections.Generic.IEnumerable%601> collection should be returned.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnExportsChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnExportsChanged (System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnExportsChanged(class System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.ExportProvider.OnExportsChanged(System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnExportsChanged (e As ExportsChangeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnExportsChanged(System::ComponentModel::Composition::Hosting::ExportsChangeEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnExportsChanged : System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs -&gt; unit&#xA;override this.OnExportsChanged : System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs -&gt; unit" Usage="exportProvider.OnExportsChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="1c131-296">Объект класса <see cref="T:System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs" />, содержащий данные события.</span><span class="sxs-lookup"><span data-stu-id="1c131-296">An <see cref="T:System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="1c131-297">Вызывает событие <see cref="E:System.ComponentModel.Composition.Hosting.ExportProvider.ExportsChanged" />.</span><span class="sxs-lookup"><span data-stu-id="1c131-297">Raises the <see cref="E:System.ComponentModel.Composition.Hosting.ExportProvider.ExportsChanged" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnExportsChanging">
      <MemberSignature Language="C#" Value="protected virtual void OnExportsChanging (System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnExportsChanging(class System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.ExportProvider.OnExportsChanging(System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnExportsChanging (e As ExportsChangeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnExportsChanging(System::ComponentModel::Composition::Hosting::ExportsChangeEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnExportsChanging : System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs -&gt; unit&#xA;override this.OnExportsChanging : System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs -&gt; unit" Usage="exportProvider.OnExportsChanging e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="1c131-298">Объект класса <see cref="T:System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs" />, содержащий данные события.</span><span class="sxs-lookup"><span data-stu-id="1c131-298">An <see cref="T:System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="1c131-299">Создает событие <see cref="E:System.ComponentModel.Composition.Hosting.ExportProvider.ExportsChanging" />.</span><span class="sxs-lookup"><span data-stu-id="1c131-299">Raises the <see cref="E:System.ComponentModel.Composition.Hosting.ExportProvider.ExportsChanging" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetExports">
      <MemberSignature Language="C#" Value="public bool TryGetExports (System.ComponentModel.Composition.Primitives.ImportDefinition definition, System.ComponentModel.Composition.Hosting.AtomicComposition atomicComposition, out System.Collections.Generic.IEnumerable&lt;System.ComponentModel.Composition.Primitives.Export&gt; exports);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetExports(class System.ComponentModel.Composition.Primitives.ImportDefinition definition, class System.ComponentModel.Composition.Hosting.AtomicComposition atomicComposition, [out] class System.Collections.Generic.IEnumerable`1&lt;class System.ComponentModel.Composition.Primitives.Export&gt;&amp; exports) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.ExportProvider.TryGetExports(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition,System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.Export}@)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetExports(System::ComponentModel::Composition::Primitives::ImportDefinition ^ definition, System::ComponentModel::Composition::Hosting::AtomicComposition ^ atomicComposition, [Runtime::InteropServices::Out] System::Collections::Generic::IEnumerable&lt;System::ComponentModel::Composition::Primitives::Export ^&gt; ^ % exports);" />
      <MemberSignature Language="F#" Value="member this.TryGetExports : System.ComponentModel.Composition.Primitives.ImportDefinition * System.ComponentModel.Composition.Hosting.AtomicComposition * seq -&gt; bool" Usage="exportProvider.TryGetExports (definition, atomicComposition, exports)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="definition" Type="System.ComponentModel.Composition.Primitives.ImportDefinition" />
        <Parameter Name="atomicComposition" Type="System.ComponentModel.Composition.Hosting.AtomicComposition" />
        <Parameter Name="exports" Type="System.Collections.Generic.IEnumerable&lt;System.ComponentModel.Composition.Primitives.Export&gt;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="definition"><span data-ttu-id="1c131-300">Объект, определяющий условия получаемых объектов <see cref="T:System.ComponentModel.Composition.Primitives.Export" />.</span><span class="sxs-lookup"><span data-stu-id="1c131-300">The object that defines the conditions of the <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> objects to get.</span></span></param>
        <param name="atomicComposition"><span data-ttu-id="1c131-301">Транзакционный контейнер для композиции.</span><span class="sxs-lookup"><span data-stu-id="1c131-301">The transactional container for the composition.</span></span></param>
        <param name="exports"><span data-ttu-id="1c131-302">При возвращении данного метода содержит коллекцию объектов <see cref="T:System.ComponentModel.Composition.Primitives.Export" />, соответствующих условиям, определенным объектом <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition" />, если эти объекты найдены; в противном случае — пустой объект <see cref="T:System.Collections.Generic.IEnumerable`1" />.</span><span class="sxs-lookup"><span data-stu-id="1c131-302">When this method returns, contains a collection of <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> objects that match the conditions defined by <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition" />, if found; otherwise, an empty <see cref="T:System.Collections.Generic.IEnumerable`1" /> object.</span></span> <span data-ttu-id="1c131-303">Этот параметр передается неинициализированным.</span><span class="sxs-lookup"><span data-stu-id="1c131-303">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="1c131-304">Получает все элементы экспорта, которые соответствуют заданным параметрам импорта.</span><span class="sxs-lookup"><span data-stu-id="1c131-304">Gets all the exports that match the conditions of the specified import.</span></span></summary>
        <returns><span data-ttu-id="1c131-305">Значение <see langword="true" />, если значение свойства <see cref="P:System.ComponentModel.Composition.Primitives.ImportDefinition.Cardinality" /> равно <see cref="F:System.ComponentModel.Composition.Primitives.ImportCardinality.ZeroOrOne" /> или <see cref="F:System.ComponentModel.Composition.Primitives.ImportCardinality.ZeroOrMore" /> и имеется ноль объектов <see cref="T:System.ComponentModel.Composition.Primitives.Export" />, соответствующих условиям указанного определения <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition" />; значение <see langword="true" />, если значение свойства <see cref="P:System.ComponentModel.Composition.Primitives.ImportDefinition.Cardinality" /> равно <see cref="F:System.ComponentModel.Composition.Primitives.ImportCardinality.ZeroOrOne" /> или <see cref="F:System.ComponentModel.Composition.Primitives.ImportCardinality.ExactlyOne" /> и имеется ровно один объект <see cref="T:System.ComponentModel.Composition.Primitives.Export" />, соответствующий условиям указанного определения <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition" />; в противном случае значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="1c131-305"><see langword="true" /> if <see cref="P:System.ComponentModel.Composition.Primitives.ImportDefinition.Cardinality" /> is <see cref="F:System.ComponentModel.Composition.Primitives.ImportCardinality.ZeroOrOne" /> or <see cref="F:System.ComponentModel.Composition.Primitives.ImportCardinality.ZeroOrMore" /> and there are zero <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> objects that match the conditions of the specified <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition" />; <see langword="true" /> if <see cref="P:System.ComponentModel.Composition.Primitives.ImportDefinition.Cardinality" /> is <see cref="F:System.ComponentModel.Composition.Primitives.ImportCardinality.ZeroOrOne" /> or <see cref="F:System.ComponentModel.Composition.Primitives.ImportCardinality.ExactlyOne" /> and there is exactly one <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> that matches the conditions of the specified <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1c131-306">Свойство <paramref name="definition" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1c131-306"><paramref name="definition" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
