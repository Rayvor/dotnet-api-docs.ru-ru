<Type Name="TypeCatalog" FullName="System.ComponentModel.Composition.Hosting.TypeCatalog">
  <Metadata><Meta Name="ms.openlocfilehash" Value="df37dd9c963d90f9ac1b0258c30ef7d2c65febbe" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70427050" /></Metadata><TypeSignature Language="C#" Value="public class TypeCatalog : System.ComponentModel.Composition.Primitives.ComposablePartCatalog, System.ComponentModel.Composition.Primitives.ICompositionElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TypeCatalog extends System.ComponentModel.Composition.Primitives.ComposablePartCatalog implements class System.ComponentModel.Composition.Primitives.ICompositionElement" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Composition.Hosting.TypeCatalog" />
  <TypeSignature Language="VB.NET" Value="Public Class TypeCatalog&#xA;Inherits ComposablePartCatalog&#xA;Implements ICompositionElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class TypeCatalog : System::ComponentModel::Composition::Primitives::ComposablePartCatalog, System::ComponentModel::Composition::Primitives::ICompositionElement" />
  <TypeSignature Language="F#" Value="type TypeCatalog = class&#xA;    inherit ComposablePartCatalog&#xA;    interface ICompositionElement" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.Composition</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Composition.Primitives.ComposablePartCatalog</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.Composition.Primitives.ICompositionElement</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Diagnostics.DebuggerTypeProxy(typeof(System.ComponentModel.Composition.Primitives.ComposablePartCatalogDebuggerProxy))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="317ed-101">Извлекает части с атрибутами из коллекции типов.</span><span class="sxs-lookup"><span data-stu-id="317ed-101">Discovers attributed parts from a collection of types.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="317ed-102">Этот тип реализует интерфейс <xref:System.IDisposable>.</span><span class="sxs-lookup"><span data-stu-id="317ed-102">This type implements the <xref:System.IDisposable> interface.</span></span> <span data-ttu-id="317ed-103">По окончании использования выдаленную ему память следует прямо или косвенно освободить.</span><span class="sxs-lookup"><span data-stu-id="317ed-103">When you have finished using the type, you should dispose of it either directly or indirectly.</span></span> <span data-ttu-id="317ed-104">Чтобы сделать это прямо, вызовите его метод <xref:System.IDisposable.Dispose%2A> в блоке `try`/`catch`.</span><span class="sxs-lookup"><span data-stu-id="317ed-104">To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block.</span></span> <span data-ttu-id="317ed-105">Чтобы сделать это косвенно, используйте языковые конструкции, такие как `using` (в C#) или `Using` (в Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="317ed-105">To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic).</span></span> <span data-ttu-id="317ed-106">Дополнительные сведения см. в разделе "Использование объекта, реализующего IDisposable" в статье об интерфейсе <xref:System.IDisposable>.</span><span class="sxs-lookup"><span data-stu-id="317ed-106">For more information, see the "Using an Object that Implements IDisposable" section in the <xref:System.IDisposable> interface topic.</span></span>  
  
 <span data-ttu-id="317ed-107">Этот класс является потокобезопасным.</span><span class="sxs-lookup"><span data-stu-id="317ed-107">This class is thread safe.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="317ed-108">Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Composition.Hosting.TypeCatalog" />.</span><span class="sxs-lookup"><span data-stu-id="317ed-108">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Hosting.TypeCatalog" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TypeCatalog (System.Collections.Generic.IEnumerable&lt;Type&gt; types);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;class System.Type&gt; types) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.TypeCatalog.#ctor(System.Collections.Generic.IEnumerable{System.Type})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (types As IEnumerable(Of Type))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TypeCatalog(System::Collections::Generic::IEnumerable&lt;Type ^&gt; ^ types);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Composition.Hosting.TypeCatalog : seq&lt;Type&gt; -&gt; System.ComponentModel.Composition.Hosting.TypeCatalog" Usage="new System.ComponentModel.Composition.Hosting.TypeCatalog types" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="types" Type="System.Collections.Generic.IEnumerable&lt;System.Type&gt;" />
      </Parameters>
      <Docs>
        <param name="types"><span data-ttu-id="317ed-109">Коллекция помеченных атрибутами объектов <see cref="T:System.Type" />, добавляемых в объект <see cref="T:System.ComponentModel.Composition.Hosting.TypeCatalog" />.</span><span class="sxs-lookup"><span data-stu-id="317ed-109">A collection of attributed <see cref="T:System.Type" /> objects to add to the <see cref="T:System.ComponentModel.Composition.Hosting.TypeCatalog" /> object.</span></span></param>
        <summary><span data-ttu-id="317ed-110">Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Composition.Hosting.TypeCatalog" /> указанными типами.</span><span class="sxs-lookup"><span data-stu-id="317ed-110">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Hosting.TypeCatalog" /> class with the specified types.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="317ed-111">Свойство <paramref name="types" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="317ed-111"><paramref name="types" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="317ed-112">Параметр <paramref name="types" /> содержит элемент, равный <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="317ed-112"><paramref name="types" /> contains an element that is <see langword="null" />.</span></span>  
  
<span data-ttu-id="317ed-113">- или -</span><span class="sxs-lookup"><span data-stu-id="317ed-113">-or-</span></span> 
 <span data-ttu-id="317ed-114"><paramref name="types" /> содержит элемент, который был загружен в контекст только для отражения.</span><span class="sxs-lookup"><span data-stu-id="317ed-114"><paramref name="types" /> contains an element that was loaded in the reflection-only context.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TypeCatalog (params Type[] types);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type[] types) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.TypeCatalog.#ctor(System.Type[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (ParamArray types As Type())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TypeCatalog(... cli::array &lt;Type ^&gt; ^ types);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Composition.Hosting.TypeCatalog : Type[] -&gt; System.ComponentModel.Composition.Hosting.TypeCatalog" Usage="new System.ComponentModel.Composition.Hosting.TypeCatalog types" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="types" Type="System.Type[]">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-plat-ext-2.1">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="types"><span data-ttu-id="317ed-115">Массив помеченных атрибутами объектов <see cref="T:System.Type" /> для добавления в объект <see cref="T:System.ComponentModel.Composition.Hosting.TypeCatalog" />.</span><span class="sxs-lookup"><span data-stu-id="317ed-115">An array of attributed <see cref="T:System.Type" /> objects to add to the <see cref="T:System.ComponentModel.Composition.Hosting.TypeCatalog" /> object.</span></span></param>
        <summary><span data-ttu-id="317ed-116">Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Composition.Hosting.TypeCatalog" /> указанными типами.</span><span class="sxs-lookup"><span data-stu-id="317ed-116">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Hosting.TypeCatalog" /> class with the specified types.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="317ed-117">Свойство <paramref name="types" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="317ed-117"><paramref name="types" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="317ed-118">Параметр <paramref name="types" /> содержит элемент, равный <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="317ed-118"><paramref name="types" /> contains an element that is <see langword="null" />.</span></span>  
  
<span data-ttu-id="317ed-119">- или -</span><span class="sxs-lookup"><span data-stu-id="317ed-119">-or-</span></span> 
 <span data-ttu-id="317ed-120"><paramref name="types" /> содержит элемент, который был загружен в контекст только для отражения.</span><span class="sxs-lookup"><span data-stu-id="317ed-120"><paramref name="types" /> contains an element that was loaded in the reflection-only context.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TypeCatalog (System.Collections.Generic.IEnumerable&lt;Type&gt; types, System.ComponentModel.Composition.Primitives.ICompositionElement definitionOrigin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;class System.Type&gt; types, class System.ComponentModel.Composition.Primitives.ICompositionElement definitionOrigin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.TypeCatalog.#ctor(System.Collections.Generic.IEnumerable{System.Type},System.ComponentModel.Composition.Primitives.ICompositionElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (types As IEnumerable(Of Type), definitionOrigin As ICompositionElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TypeCatalog(System::Collections::Generic::IEnumerable&lt;Type ^&gt; ^ types, System::ComponentModel::Composition::Primitives::ICompositionElement ^ definitionOrigin);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Composition.Hosting.TypeCatalog : seq&lt;Type&gt; * System.ComponentModel.Composition.Primitives.ICompositionElement -&gt; System.ComponentModel.Composition.Hosting.TypeCatalog" Usage="new System.ComponentModel.Composition.Hosting.TypeCatalog (types, definitionOrigin)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="types" Type="System.Collections.Generic.IEnumerable&lt;System.Type&gt;" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="definitionOrigin" Type="System.ComponentModel.Composition.Primitives.ICompositionElement" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="types"><span data-ttu-id="317ed-121">Коллекция помеченных атрибутами объектов <see cref="T:System.Type" />, добавляемых в объект <see cref="T:System.ComponentModel.Composition.Hosting.TypeCatalog" />.</span><span class="sxs-lookup"><span data-stu-id="317ed-121">A collection of attributed <see cref="T:System.Type" /> objects to add to the <see cref="T:System.ComponentModel.Composition.Hosting.TypeCatalog" /> object.</span></span></param>
        <param name="definitionOrigin"><span data-ttu-id="317ed-122">Элемент, используемый средствами диагностики для определения источника для частей.</span><span class="sxs-lookup"><span data-stu-id="317ed-122">An element used by diagnostics to identify the source for parts.</span></span></param>
        <summary><span data-ttu-id="317ed-123">Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Composition.Hosting.TypeCatalog" /> с указанными типами и источником для частей.</span><span class="sxs-lookup"><span data-stu-id="317ed-123">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Hosting.TypeCatalog" /> class with the specified types and source for parts.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="317ed-124">Свойство <paramref name="types" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="317ed-124"><paramref name="types" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="317ed-125">Параметр <paramref name="types" /> содержит элемент, равный <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="317ed-125"><paramref name="types" /> contains an element that is <see langword="null" />.</span></span>  
  
<span data-ttu-id="317ed-126">-или-</span><span class="sxs-lookup"><span data-stu-id="317ed-126">-or-</span></span> 
 <span data-ttu-id="317ed-127"><paramref name="types" /> содержит элемент, который был загружен в контекст только для отражения.</span><span class="sxs-lookup"><span data-stu-id="317ed-127"><paramref name="types" /> contains an element that was loaded in the reflection-only context.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TypeCatalog (System.Collections.Generic.IEnumerable&lt;Type&gt; types, System.Reflection.ReflectionContext reflectionContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;class System.Type&gt; types, class System.Reflection.ReflectionContext reflectionContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.TypeCatalog.#ctor(System.Collections.Generic.IEnumerable{System.Type},System.Reflection.ReflectionContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TypeCatalog(System::Collections::Generic::IEnumerable&lt;Type ^&gt; ^ types, System::Reflection::ReflectionContext ^ reflectionContext);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Composition.Hosting.TypeCatalog : seq&lt;Type&gt; * System.Reflection.ReflectionContext -&gt; System.ComponentModel.Composition.Hosting.TypeCatalog" Usage="new System.ComponentModel.Composition.Hosting.TypeCatalog (types, reflectionContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="types" Type="System.Collections.Generic.IEnumerable&lt;System.Type&gt;" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="reflectionContext" Type="System.Reflection.ReflectionContext" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="types"><span data-ttu-id="317ed-128">Коллекция помеченных атрибутами объектов <see cref="T:System.Type" />, добавляемых в объект <see cref="T:System.ComponentModel.Composition.Hosting.TypeCatalog" />.</span><span class="sxs-lookup"><span data-stu-id="317ed-128">A collection of attributed <see cref="T:System.Type" /> objects to add to the <see cref="T:System.ComponentModel.Composition.Hosting.TypeCatalog" /> object.</span></span></param>
        <param name="reflectionContext"><span data-ttu-id="317ed-129">Контекст, используемый для интерпретации типов.</span><span class="sxs-lookup"><span data-stu-id="317ed-129">The context used to interpret the types.</span></span></param>
        <summary><span data-ttu-id="317ed-130">Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Composition.Hosting.TypeCatalog" /> указанными типами в указанном контексте отражения.</span><span class="sxs-lookup"><span data-stu-id="317ed-130">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Hosting.TypeCatalog" /> class with the specified types in the specified reflection context.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="317ed-131">Свойство <paramref name="types" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="317ed-131"><paramref name="types" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="317ed-132">Параметр <paramref name="types" /> содержит элемент, равный <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="317ed-132"><paramref name="types" /> contains an element that is <see langword="null" />.</span></span>  
  
<span data-ttu-id="317ed-133">-или-</span><span class="sxs-lookup"><span data-stu-id="317ed-133">-or-</span></span> 
 <span data-ttu-id="317ed-134"><paramref name="types" /> содержит элемент, который был загружен в контекст только для отражения.</span><span class="sxs-lookup"><span data-stu-id="317ed-134"><paramref name="types" /> contains an element that was loaded in the reflection-only context.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TypeCatalog (System.Collections.Generic.IEnumerable&lt;Type&gt; types, System.Reflection.ReflectionContext reflectionContext, System.ComponentModel.Composition.Primitives.ICompositionElement definitionOrigin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;class System.Type&gt; types, class System.Reflection.ReflectionContext reflectionContext, class System.ComponentModel.Composition.Primitives.ICompositionElement definitionOrigin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.TypeCatalog.#ctor(System.Collections.Generic.IEnumerable{System.Type},System.Reflection.ReflectionContext,System.ComponentModel.Composition.Primitives.ICompositionElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TypeCatalog(System::Collections::Generic::IEnumerable&lt;Type ^&gt; ^ types, System::Reflection::ReflectionContext ^ reflectionContext, System::ComponentModel::Composition::Primitives::ICompositionElement ^ definitionOrigin);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Composition.Hosting.TypeCatalog : seq&lt;Type&gt; * System.Reflection.ReflectionContext * System.ComponentModel.Composition.Primitives.ICompositionElement -&gt; System.ComponentModel.Composition.Hosting.TypeCatalog" Usage="new System.ComponentModel.Composition.Hosting.TypeCatalog (types, reflectionContext, definitionOrigin)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="types" Type="System.Collections.Generic.IEnumerable&lt;System.Type&gt;" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="reflectionContext" Type="System.Reflection.ReflectionContext" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="definitionOrigin" Type="System.ComponentModel.Composition.Primitives.ICompositionElement" Index="2" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="types"><span data-ttu-id="317ed-135">Коллекция помеченных атрибутами объектов <see cref="T:System.Type" />, добавляемых в объект <see cref="T:System.ComponentModel.Composition.Hosting.TypeCatalog" />.</span><span class="sxs-lookup"><span data-stu-id="317ed-135">A collection of attributed <see cref="T:System.Type" /> objects to add to the <see cref="T:System.ComponentModel.Composition.Hosting.TypeCatalog" /> object.</span></span></param>
        <param name="reflectionContext"><span data-ttu-id="317ed-136">Контекст, используемый для интерпретации типов.</span><span class="sxs-lookup"><span data-stu-id="317ed-136">The context used to interpret the types.</span></span></param>
        <param name="definitionOrigin"><span data-ttu-id="317ed-137">Элемент, используемый средствами диагностики для определения источника для частей.</span><span class="sxs-lookup"><span data-stu-id="317ed-137">An element used by diagnostics to identify the source for parts.</span></span></param>
        <summary><span data-ttu-id="317ed-138">Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Composition.Hosting.TypeCatalog" /> указанными типами в указанном контексте отражения и источником для частей.</span><span class="sxs-lookup"><span data-stu-id="317ed-138">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Hosting.TypeCatalog" /> class with the specified types in the specified reflection context and source for parts.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="317ed-139">Свойство <paramref name="types" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="317ed-139"><paramref name="types" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="317ed-140">Параметр <paramref name="types" /> содержит элемент, равный <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="317ed-140"><paramref name="types" /> contains an element that is <see langword="null" />.</span></span>  
  
<span data-ttu-id="317ed-141">-или-</span><span class="sxs-lookup"><span data-stu-id="317ed-141">-or-</span></span> 
 <span data-ttu-id="317ed-142"><paramref name="types" /> содержит элемент, который был загружен в контекст только для отражения.</span><span class="sxs-lookup"><span data-stu-id="317ed-142"><paramref name="types" /> contains an element that was loaded in the reflection-only context.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.TypeCatalog.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="typeCatalog.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="317ed-143">Значение <see langword="true" /> позволяет освободить управляемые и неуправляемые ресурсы; значение <see langword="false" /> позволяет освободить только неуправляемые ресурсы.</span><span class="sxs-lookup"><span data-stu-id="317ed-143"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="317ed-144">Освобождает неуправляемые ресурсы, используемые объектом <see cref="T:System.ComponentModel.Composition.Hosting.TypeCatalog" />, а при необходимости освобождает также управляемые ресурсы.</span><span class="sxs-lookup"><span data-stu-id="317ed-144">Releases the unmanaged resources used by the <see cref="T:System.ComponentModel.Composition.Hosting.TypeCatalog" /> and optionally releases the managed resources.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IEnumerator&lt;System.ComponentModel.Composition.Primitives.ComposablePartDefinition&gt; GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.Generic.IEnumerator`1&lt;class System.ComponentModel.Composition.Primitives.ComposablePartDefinition&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.TypeCatalog.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEnumerator () As IEnumerator(Of ComposablePartDefinition)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Collections::Generic::IEnumerator&lt;System::ComponentModel::Composition::Primitives::ComposablePartDefinition ^&gt; ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="override this.GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;System.ComponentModel.Composition.Primitives.ComposablePartDefinition&gt;" Usage="typeCatalog.GetEnumerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.ComponentModel.Composition.Primitives.ComposablePartDefinition&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="317ed-145">Возвращает перечислитель, выполняющий итерацию каталога.</span><span class="sxs-lookup"><span data-stu-id="317ed-145">Returns an enumerator that iterates through the catalog.</span></span></summary>
        <returns><span data-ttu-id="317ed-146">Перечислитель, который может использоваться для выполнения итерации каталога.</span><span class="sxs-lookup"><span data-stu-id="317ed-146">An enumerator that can be used to iterate through the catalog.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetExports">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IEnumerable&lt;Tuple&lt;System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.ComponentModel.Composition.Primitives.ExportDefinition&gt;&gt; GetExports (System.ComponentModel.Composition.Primitives.ImportDefinition definition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Tuple`2&lt;class System.ComponentModel.Composition.Primitives.ComposablePartDefinition, class System.ComponentModel.Composition.Primitives.ExportDefinition&gt;&gt; GetExports(class System.ComponentModel.Composition.Primitives.ImportDefinition definition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.TypeCatalog.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetExports (definition As ImportDefinition) As IEnumerable(Of Tuple(Of ComposablePartDefinition, ExportDefinition))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Collections::Generic::IEnumerable&lt;Tuple&lt;System::ComponentModel::Composition::Primitives::ComposablePartDefinition ^, System::ComponentModel::Composition::Primitives::ExportDefinition ^&gt; ^&gt; ^ GetExports(System::ComponentModel::Composition::Primitives::ImportDefinition ^ definition);" />
      <MemberSignature Language="F#" Value="override this.GetExports : System.ComponentModel.Composition.Primitives.ImportDefinition -&gt; seq&lt;System.ComponentModel.Composition.Primitives.ComposablePartDefinition * System.ComponentModel.Composition.Primitives.ExportDefinition&gt;" Usage="typeCatalog.GetExports definition" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Tuple&lt;System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.ComponentModel.Composition.Primitives.ExportDefinition&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="definition" Type="System.ComponentModel.Composition.Primitives.ImportDefinition" Index="0" FrameworkAlternate="netframework-4.0" />
      </Parameters>
      <Docs>
        <param name="definition"><span data-ttu-id="317ed-147">Условия, которые определяют соответствующие экспорты.</span><span class="sxs-lookup"><span data-stu-id="317ed-147">Conditions that specify which exports to match.</span></span></param>
        <summary><span data-ttu-id="317ed-148">Получает коллекцию экспортов, которые соответствуют условиям, заданным определением импорта.</span><span class="sxs-lookup"><span data-stu-id="317ed-148">Gets a collection of exports that match the conditions specified by the import definition.</span></span></summary>
        <returns><span data-ttu-id="317ed-149">Коллекция экспортов, которые соответствуют условиям, заданным параметром <paramref name="definition" />.</span><span class="sxs-lookup"><span data-stu-id="317ed-149">A collection of exports that match the conditions specified by <paramref name="definition" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parts">
      <MemberSignature Language="C#" Value="public override System.Linq.IQueryable&lt;System.ComponentModel.Composition.Primitives.ComposablePartDefinition&gt; Parts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Linq.IQueryable`1&lt;class System.ComponentModel.Composition.Primitives.ComposablePartDefinition&gt; Parts" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.Hosting.TypeCatalog.Parts" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Parts As IQueryable(Of ComposablePartDefinition)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Linq::IQueryable&lt;System::ComponentModel::Composition::Primitives::ComposablePartDefinition ^&gt; ^ Parts { System::Linq::IQueryable&lt;System::ComponentModel::Composition::Primitives::ComposablePartDefinition ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Parts : System.Linq.IQueryable&lt;System.ComponentModel.Composition.Primitives.ComposablePartDefinition&gt;" Usage="System.ComponentModel.Composition.Hosting.TypeCatalog.Parts" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;System.ComponentModel.Composition.Primitives.ComposablePartDefinition&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="317ed-150">Получает определения частей, содержащиеся в каталоге.</span><span class="sxs-lookup"><span data-stu-id="317ed-150">Gets the part definitions that are contained in the catalog.</span></span></summary>
        <value><span data-ttu-id="317ed-151">Объекты <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition" />, содержащиеся в объекте <see cref="T:System.ComponentModel.Composition.Hosting.TypeCatalog" />.</span><span class="sxs-lookup"><span data-stu-id="317ed-151">The <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition" /> objects that are contained in the <see cref="T:System.ComponentModel.Composition.Hosting.TypeCatalog" /> object.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="317ed-152">Объект <see cref="T:System.ComponentModel.Composition.Hosting.TypeCatalog" /> ликвидирован.</span><span class="sxs-lookup"><span data-stu-id="317ed-152">The <see cref="T:System.ComponentModel.Composition.Hosting.TypeCatalog" /> object has been disposed of.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Composition.Primitives.ICompositionElement.DisplayName">
      <MemberSignature Language="C#" Value="string System.ComponentModel.Composition.Primitives.ICompositionElement.DisplayName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string System.ComponentModel.Composition.Primitives.ICompositionElement.DisplayName" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.Hosting.TypeCatalog.System#ComponentModel#Composition#Primitives#ICompositionElement#DisplayName" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property DisplayName As String Implements ICompositionElement.DisplayName" />
      <MemberSignature Language="C++ CLI" Value="property System::String ^ System::ComponentModel::Composition::Primitives::ICompositionElement::DisplayName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.ComponentModel.Composition.Primitives.ICompositionElement.DisplayName" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ComponentModel.Composition.Primitives.ICompositionElement.DisplayName</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="317ed-153">Получает отображаемое имя каталога типов.</span><span class="sxs-lookup"><span data-stu-id="317ed-153">Gets the display name of the type catalog.</span></span></summary>
        <value><span data-ttu-id="317ed-154">Строка, содержащая доступное для чтения отображаемое имя каталога <see cref="T:System.ComponentModel.Composition.Hosting.TypeCatalog" />.</span><span class="sxs-lookup"><span data-stu-id="317ed-154">A string containing a human-readable display name of the <see cref="T:System.ComponentModel.Composition.Hosting.TypeCatalog" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="317ed-155">Этот член представляет собой явную реализацию члена интерфейса.</span><span class="sxs-lookup"><span data-stu-id="317ed-155">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="317ed-156">Он может использоваться, только если экземпляр <xref:System.ComponentModel.Composition.Hosting.TypeCatalog> приведен к типу интерфейса <xref:System.ComponentModel.Composition.Primitives.ICompositionElement>.</span><span class="sxs-lookup"><span data-stu-id="317ed-156">It can be used only when the <xref:System.ComponentModel.Composition.Hosting.TypeCatalog> instance is cast to an <xref:System.ComponentModel.Composition.Primitives.ICompositionElement> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Composition.Primitives.ICompositionElement.Origin">
      <MemberSignature Language="C#" Value="System.ComponentModel.Composition.Primitives.ICompositionElement System.ComponentModel.Composition.Primitives.ICompositionElement.Origin { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.Composition.Primitives.ICompositionElement System.ComponentModel.Composition.Primitives.ICompositionElement.Origin" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.Hosting.TypeCatalog.System#ComponentModel#Composition#Primitives#ICompositionElement#Origin" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Origin As ICompositionElement Implements ICompositionElement.Origin" />
      <MemberSignature Language="C++ CLI" Value="property System::ComponentModel::Composition::Primitives::ICompositionElement ^ System::ComponentModel::Composition::Primitives::ICompositionElement::Origin { System::ComponentModel::Composition::Primitives::ICompositionElement ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.ComponentModel.Composition.Primitives.ICompositionElement.Origin" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ComponentModel.Composition.Primitives.ICompositionElement.Origin</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.Primitives.ICompositionElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="317ed-157">Получает элемент композиции, от которого происходит данный каталог типов.</span><span class="sxs-lookup"><span data-stu-id="317ed-157">Gets the composition element from which the type catalog originated.</span></span></summary>
        <value><span data-ttu-id="317ed-158">Всегда <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="317ed-158">Always <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="317ed-159">Этот член представляет собой явную реализацию члена интерфейса.</span><span class="sxs-lookup"><span data-stu-id="317ed-159">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="317ed-160">Он может использоваться, только если экземпляр <xref:System.ComponentModel.Composition.Hosting.TypeCatalog> приведен к типу интерфейса <xref:System.ComponentModel.Composition.Primitives.ICompositionElement>.</span><span class="sxs-lookup"><span data-stu-id="317ed-160">It can be used only when the <xref:System.ComponentModel.Composition.Hosting.TypeCatalog> instance is cast to an <xref:System.ComponentModel.Composition.Primitives.ICompositionElement> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.TypeCatalog.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="typeCatalog.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="317ed-161">Возвращает строковое представление каталога типов.</span><span class="sxs-lookup"><span data-stu-id="317ed-161">Returns a string representation of the type catalog.</span></span></summary>
        <returns><span data-ttu-id="317ed-162">Строковое представление каталога типов.</span><span class="sxs-lookup"><span data-stu-id="317ed-162">A string representation of the type catalog.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
