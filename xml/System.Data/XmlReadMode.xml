<Type Name="XmlReadMode" FullName="System.Data.XmlReadMode">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b534624022a70f8e598c871528b015a97bad0df5" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75139749" /></Metadata><TypeSignature Language="C#" Value="public enum XmlReadMode" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed XmlReadMode extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Data.XmlReadMode" />
  <TypeSignature Language="VB.NET" Value="Public Enum XmlReadMode" />
  <TypeSignature Language="C++ CLI" Value="public enum class XmlReadMode" />
  <TypeSignature Language="F#" Value="type XmlReadMode = " />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary><span data-ttu-id="908f9-101">Указывает, как считывать XML-данные и реляционную схему в объект <see cref="T:System.Data.DataSet" />.</span><span class="sxs-lookup"><span data-stu-id="908f9-101">Specifies how to read XML data and a relational schema into a <see cref="T:System.Data.DataSet" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="908f9-102">Используйте члены этого перечисления при задании параметра `ReadMode` метода <xref:System.Data.DataSet.ReadXml%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="908f9-102">Use the members of this enumeration when setting the `ReadMode` parameter of the <xref:System.Data.DataSet.ReadXml%2A?displayProperty=nameWithType> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="908f9-103">`Auto`ный режим может быть медленнее, чем установка параметра <xref:System.Data.XmlReadMode> в явный режим.</span><span class="sxs-lookup"><span data-stu-id="908f9-103">`Auto` mode may be slower than setting <xref:System.Data.XmlReadMode> to an explicit option.</span></span>  

<span data-ttu-id="908f9-104">`Auto` выполняет наиболее подходящие действия.</span><span class="sxs-lookup"><span data-stu-id="908f9-104">`Auto` performs the most appropriate of these actions:</span></span>  
  
- <span data-ttu-id="908f9-105">Если данные являются DiffGram, устанавливает режим чтения XML для `DiffGram`.</span><span class="sxs-lookup"><span data-stu-id="908f9-105">If the data is a DiffGram, sets the XML read mode to `DiffGram`.</span></span>  

- <span data-ttu-id="908f9-106">Если в наборе данных уже есть схема или документ содержит встроенную схему, устанавливает режим чтения XML для `ReadSchema`.</span><span class="sxs-lookup"><span data-stu-id="908f9-106">If the dataset already has a schema, or if the document contains an in-line schema, sets the XML read mode  to `ReadSchema`.</span></span>  
  
- <span data-ttu-id="908f9-107">Если в наборе данных еще нет схемы, а документ не содержит встроенной схемы, устанавливает режим чтения XML для `InferSchema`.</span><span class="sxs-lookup"><span data-stu-id="908f9-107">If the dataset does not already have a schema and the document does not contain an in-line schema, sets the XML read mode to `InferSchema`.</span></span>

 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Auto">
      <MemberSignature Language="C#" Value="Auto" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.XmlReadMode Auto = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Data.XmlReadMode.Auto" />
      <MemberSignature Language="VB.NET" Value="Auto" />
      <MemberSignature Language="C++ CLI" Value="Auto" />
      <MemberSignature Language="F#" Value="Auto = 0" Usage="System.Data.XmlReadMode.Auto" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.XmlReadMode</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="908f9-108">Режим чтения по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="908f9-108">The default read mode.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DiffGram">
      <MemberSignature Language="C#" Value="DiffGram" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.XmlReadMode DiffGram = int32(4)" />
      <MemberSignature Language="DocId" Value="F:System.Data.XmlReadMode.DiffGram" />
      <MemberSignature Language="VB.NET" Value="DiffGram" />
      <MemberSignature Language="C++ CLI" Value="DiffGram" />
      <MemberSignature Language="F#" Value="DiffGram = 4" Usage="System.Data.XmlReadMode.DiffGram" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.XmlReadMode</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary><span data-ttu-id="908f9-109">Считывает DiffGram, применяя изменения из DiffGram к объекту <see cref="T:System.Data.DataSet" />.</span><span class="sxs-lookup"><span data-stu-id="908f9-109">Reads a DiffGram, applying changes from the DiffGram to the <see cref="T:System.Data.DataSet" />.</span></span> <span data-ttu-id="908f9-110">Семантика идентична семантике операции <see cref="M:System.Data.DataSet.Merge(System.Data.DataSet)" />.</span><span class="sxs-lookup"><span data-stu-id="908f9-110">The semantics are identical to those of a <see cref="M:System.Data.DataSet.Merge(System.Data.DataSet)" /> operation.</span></span> <span data-ttu-id="908f9-111">Как и в случае операции <see cref="M:System.Data.DataSet.Merge(System.Data.DataSet)" />, значения <see cref="P:System.Data.DataRow.RowState" /> сохраняются.</span><span class="sxs-lookup"><span data-stu-id="908f9-111">As with the <see cref="M:System.Data.DataSet.Merge(System.Data.DataSet)" /> operation, <see cref="P:System.Data.DataRow.RowState" /> values are preserved.</span></span> <span data-ttu-id="908f9-112">Входные данные метода <see cref="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader)" /> с DiffGrams могут быть получены только с использованием выходных данных метода <see cref="M:System.Data.DataSet.WriteXml(System.IO.Stream)" /> в виде DiffGram.</span><span class="sxs-lookup"><span data-stu-id="908f9-112">Input to <see cref="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader)" /> with DiffGrams should only be obtained using the output from <see cref="M:System.Data.DataSet.WriteXml(System.IO.Stream)" /> as a DiffGram.</span></span>
        
<span data-ttu-id="908f9-113">Целевой объект <see cref="T:System.Data.DataSet" /> должен иметь ту же схему, что и <see cref="T:System.Data.DataSet" />, для которого <see cref="Overload:System.Data.DataSet.WriteXml" /> вызывается как DiffGram.</span><span class="sxs-lookup"><span data-stu-id="908f9-113">The target <see cref="T:System.Data.DataSet" /> must have the same schema as the <see cref="T:System.Data.DataSet" /> on which <see cref="Overload:System.Data.DataSet.WriteXml" /> as DiffGram is called.</span></span> <span data-ttu-id="908f9-114">В противном случае происходит сбой операции слияния DiffGram и возникает исключение.</span><span class="sxs-lookup"><span data-stu-id="908f9-114">Otherwise the DiffGram merge operation fails and an exception is thrown.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Fragment">
      <MemberSignature Language="C#" Value="Fragment" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.XmlReadMode Fragment = int32(5)" />
      <MemberSignature Language="DocId" Value="F:System.Data.XmlReadMode.Fragment" />
      <MemberSignature Language="VB.NET" Value="Fragment" />
      <MemberSignature Language="C++ CLI" Value="Fragment" />
      <MemberSignature Language="F#" Value="Fragment = 5" Usage="System.Data.XmlReadMode.Fragment" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.XmlReadMode</ReturnType>
      </ReturnValue>
      <MemberValue>5</MemberValue>
      <Docs>
        <summary><span data-ttu-id="908f9-115">Считывает XML-фрагменты, которые созданы при выполнении запросов FOR XML к экземпляру SQL Server.</span><span class="sxs-lookup"><span data-stu-id="908f9-115">Reads XML fragments, such as those generated by executing FOR XML queries, against an instance of SQL Server.</span></span> <span data-ttu-id="908f9-116">Когда для режима <see cref="T:System.Data.XmlReadMode" /> задано значение <see langword="Fragment" />, пространство имен по умолчанию читается как встроенная схема.</span><span class="sxs-lookup"><span data-stu-id="908f9-116">When <see cref="T:System.Data.XmlReadMode" /> is set to <see langword="Fragment" />, the default namespace is read as the inline schema.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="IgnoreSchema">
      <MemberSignature Language="C#" Value="IgnoreSchema" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.XmlReadMode IgnoreSchema = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Data.XmlReadMode.IgnoreSchema" />
      <MemberSignature Language="VB.NET" Value="IgnoreSchema" />
      <MemberSignature Language="C++ CLI" Value="IgnoreSchema" />
      <MemberSignature Language="F#" Value="IgnoreSchema = 2" Usage="System.Data.XmlReadMode.IgnoreSchema" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.XmlReadMode</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary><span data-ttu-id="908f9-117">Пропускает любую встроенную схему и считывает данные в существующую схему <see cref="T:System.Data.DataSet" />.</span><span class="sxs-lookup"><span data-stu-id="908f9-117">Ignores any inline schema and reads data into the existing <see cref="T:System.Data.DataSet" /> schema.</span></span> <span data-ttu-id="908f9-118">Если какие-либо данные не соответствуют существующей схеме, они удаляются (включая данные из разных пространств имен, определенных для объекта <see cref="T:System.Data.DataSet" />).</span><span class="sxs-lookup"><span data-stu-id="908f9-118">If any data does not match the existing schema, it is discarded (including data from differing namespaces defined for the <see cref="T:System.Data.DataSet" />).</span></span> <span data-ttu-id="908f9-119">Если данные являются DiffGram, значение <see langword="IgnoreSchema" /> имеет такую же функциональность, что и <see langword="DiffGram" />.</span><span class="sxs-lookup"><span data-stu-id="908f9-119">If the data is a DiffGram, <see langword="IgnoreSchema" /> has the same functionality as <see langword="DiffGram" />.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="InferSchema">
      <MemberSignature Language="C#" Value="InferSchema" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.XmlReadMode InferSchema = int32(3)" />
      <MemberSignature Language="DocId" Value="F:System.Data.XmlReadMode.InferSchema" />
      <MemberSignature Language="VB.NET" Value="InferSchema" />
      <MemberSignature Language="C++ CLI" Value="InferSchema" />
      <MemberSignature Language="F#" Value="InferSchema = 3" Usage="System.Data.XmlReadMode.InferSchema" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.XmlReadMode</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary><span data-ttu-id="908f9-120">Игнорирует все встроенные схемы, выводит схему из данных и загружает их.</span><span class="sxs-lookup"><span data-stu-id="908f9-120">Ignores any inline schema, infers schema from the data and loads the data.</span></span> <span data-ttu-id="908f9-121">Если объект <see cref="T:System.Data.DataSet" /> уже содержит схему, текущая схема расширяется за счет добавления новых таблиц или столбцов в существующие таблицы.</span><span class="sxs-lookup"><span data-stu-id="908f9-121">If the <see cref="T:System.Data.DataSet" /> already contains a schema, the current schema is extended by adding new tables or adding columns to existing tables.</span></span> <span data-ttu-id="908f9-122">Если добавляемая таблица уже существует, но с другим пространством имен, или если добавляемые столбцы конфликтуют с существующими, выдается исключение.</span><span class="sxs-lookup"><span data-stu-id="908f9-122">An exception is thrown if the inferred table already exists but with a different namespace, or if any of the inferred columns conflict with existing columns.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="InferTypedSchema">
      <MemberSignature Language="C#" Value="InferTypedSchema" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.XmlReadMode InferTypedSchema = int32(6)" />
      <MemberSignature Language="DocId" Value="F:System.Data.XmlReadMode.InferTypedSchema" />
      <MemberSignature Language="VB.NET" Value="InferTypedSchema" />
      <MemberSignature Language="C++ CLI" Value="InferTypedSchema" />
      <MemberSignature Language="F#" Value="InferTypedSchema = 6" Usage="System.Data.XmlReadMode.InferTypedSchema" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.XmlReadMode</ReturnType>
      </ReturnValue>
      <MemberValue>6</MemberValue>
      <Docs>
        <summary><span data-ttu-id="908f9-123">Игнорирует все встроенные схемы, выводит строго типизированную схему из данных и загружает их.</span><span class="sxs-lookup"><span data-stu-id="908f9-123">Ignores any inline schema, infers a strongly typed schema from the data, and loads the data.</span></span> <span data-ttu-id="908f9-124">Если тип не может быть выведен из данных, он интерпретируется как строковые данные.</span><span class="sxs-lookup"><span data-stu-id="908f9-124">If the type cannot be inferred from the data, it is interpreted as string data.</span></span> <span data-ttu-id="908f9-125">Если объект <see cref="T:System.Data.DataSet" /> уже содержит схему, текущая схема расширяется за счет добавления либо новых таблиц, либо столбцов в существующие таблицы.</span><span class="sxs-lookup"><span data-stu-id="908f9-125">If the <see cref="T:System.Data.DataSet" /> already contains a schema, the current schema is extended, either by adding new tables or by adding columns to existing tables.</span></span> <span data-ttu-id="908f9-126">Если добавляемая таблица уже существует, но с другим пространством имен, или если добавляемые столбцы конфликтуют с существующими, выдается исключение.</span><span class="sxs-lookup"><span data-stu-id="908f9-126">An exception is thrown if the inferred table already exists but with a different namespace, or if any of the inferred columns conflict with existing columns.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="ReadSchema">
      <MemberSignature Language="C#" Value="ReadSchema" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.XmlReadMode ReadSchema = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Data.XmlReadMode.ReadSchema" />
      <MemberSignature Language="VB.NET" Value="ReadSchema" />
      <MemberSignature Language="C++ CLI" Value="ReadSchema" />
      <MemberSignature Language="F#" Value="ReadSchema = 1" Usage="System.Data.XmlReadMode.ReadSchema" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.XmlReadMode</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="908f9-127">Считывает любую встроенную схему и загружает данные.</span><span class="sxs-lookup"><span data-stu-id="908f9-127">Reads any inline schema and loads the data.</span></span> <span data-ttu-id="908f9-128">Если объект <see cref="T:System.Data.DataSet" /> уже содержит схему, новая таблица может быть в нее добавлена, но если какая-либо таблица во внутренней схеме уже существует в объекте <see cref="T:System.Data.DataSet" />, выдается исключение.</span><span class="sxs-lookup"><span data-stu-id="908f9-128">If the <see cref="T:System.Data.DataSet" /> already contains schema, new tables may be added to the schema, but an exception is thrown if any tables in the inline schema already exist in the <see cref="T:System.Data.DataSet" />.</span></span></summary>
      </Docs>
    </Member>
  </Members>
</Type>
