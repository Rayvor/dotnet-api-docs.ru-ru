<Type Name="IDbDataAdapter" FullName="System.Data.IDbDataAdapter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="37e8c13cf42cb0dcddefa667ae01b061151843d8" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75140230" /></Metadata><TypeSignature Language="C#" Value="public interface IDbDataAdapter : System.Data.IDataAdapter" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDbDataAdapter implements class System.Data.IDataAdapter" />
  <TypeSignature Language="DocId" Value="T:System.Data.IDbDataAdapter" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDbDataAdapter&#xA;Implements IDataAdapter" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDbDataAdapter : System::Data::IDataAdapter" />
  <TypeSignature Language="F#" Value="type IDbDataAdapter = interface&#xA;    interface IDataAdapter" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Data.IDataAdapter</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Представляет набор связанных с командой свойств, которые используются для заполнения <see cref="T:System.Data.DataSet" /> и обновления источника данных, реализуемый поставщиками данных .NET Framework, осуществляющими доступ к реляционным базам данных.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Интерфейс <xref:System.Data.IDbDataAdapter> наследуется от интерфейса <xref:System.Data.IDataAdapter> и позволяет объекту создать DataAdapter, предназначенный для использования с реляционной базой данных. Интерфейс <xref:System.Data.IDbDataAdapter> и, по желанию, класс служебной программы, <xref:System.Data.Common.DbDataAdapter>, допускает наследование класса для реализации класса DataAdapter, который представляет мост между источником данных и <xref:System.Data.DataSet>. Дополнительные сведения о классах DataAdapter см. в разделе [Заполнение набора данных из DataAdapter](~/docs/framework/data/adonet/populating-a-dataset-from-a-dataadapter.md). Дополнительные сведения о реализации .NET Framework поставщиков данных см. [в разделе Реализация поставщика данных .NET Framework](https://docs.microsoft.com/previous-versions/dotnet/netframework-1.1/4ksaf9z5(v=vs.71)).  
  
 Приложение не создает экземпляр интерфейса <xref:System.Data.IDbDataAdapter> напрямую, но создает экземпляр класса, наследующий <xref:System.Data.IDbDataAdapter> и <xref:System.Data.Common.DbDataAdapter>.  
  
 Классы, наследующие <xref:System.Data.IDbDataAdapter>, должны реализовывать наследуемые члены и, как правило, определять дополнительные члены для добавления функций, зависящих от поставщика. Например, интерфейс <xref:System.Data.IDbDataAdapter> определяет свойство <xref:System.Data.IDbDataAdapter.SelectCommand%2A>, а интерфейс <xref:System.Data.Common.DbDataAdapter> определяет метод <xref:System.Data.IDataAdapter.Fill%2A>, который принимает <xref:System.Data.DataTable> в качестве параметра. В свою очередь, класс <xref:System.Data.OleDb.OleDbDataAdapter> наследует свойство <xref:System.Data.IDbDataAdapter.SelectCommand%2A> и метод <xref:System.Data.Common.DbDataAdapter.Fill%2A>, а также определяет две дополнительные перегрузки метода <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A>, которые принимают объект набора записей ADO в качестве параметра.  
  
   
  
## Examples  
 В следующем примере для выбора записей из источника данных используются производные классы, <xref:System.Data.SqlClient.SqlCommand>, <xref:System.Data.SqlClient.SqlDataAdapter> и <xref:System.Data.SqlClient.SqlConnection>. Затем возвращается заполненный <xref:System.Data.DataSet>. Для этого методу передается инициализированное <xref:System.Data.DataSet>, строка подключения и строка запроса, которая является инструкцией Transact-SQL SELECT.  
  
 [!code-csharp[Classic WebData SqlDataAdapter Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlDataAdapter Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlDataAdapter Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlDataAdapter Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para>Чтобы обеспечить согласованность между .NET Framework поставщиками данных, назовите класс-наследник в форме <paramref name="Prv" /> DataAdapter, где <paramref name="Prv" /> является универсальным префиксом, присвоенным всем классам в определенном пространстве имен .NET Framework поставщика данных. Например, <paramref name="Sql" /> является префиксом класса <see cref="T:System.Data.SqlClient.SqlDataAdapter" /> в пространстве имен <see langword="System.Data.SqlClient" />.  
  
При наследовании от интерфейса <see cref="T:System.Data.IDbDataAdapter" /> необходимо реализовать следующие конструкторы: 
 <list type="table"><listheader><term> Элемент 
 </term><description> Описание 
 </description></listheader><item><term> Првдатаадаптер () 
 </term><description> Инициализирует новый экземпляр класса Првдатаадаптер.  
  
 </description></item><item><term> Првдатаадаптер (Првкомманд selectCommand) 
 </term><description> Инициализирует новый экземпляр класса Првдатаадаптер с указанной инструкцией SQL SELECT.  
  
 </description></item><item><term> Првдатаадаптер (строка Селекткоммандтекст, строка Селектконнектионстринг) 
 </term><description> Инициализирует новый экземпляр класса Првдатаадаптер с помощью инструкции SQL SELECT и строки подключения.  
  
 </description></item><item><term> Првдатаадаптер (строка Селекткоммандтекст, Првконнектион Селектконнектион) 
 </term><description> Инициализирует новый экземпляр класса Првдатаадаптер с помощью инструкции SQL SELECT и объекта Првконнектион.  
  
 </description></item></list></para></block>
  </Docs>
  <Members>
    <Member MemberName="DeleteCommand">
      <MemberSignature Language="C#" Value="public System.Data.IDbCommand DeleteCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand DeleteCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDbDataAdapter.DeleteCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property DeleteCommand As IDbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::IDbCommand ^ DeleteCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DeleteCommand : System.Data.IDbCommand with get, set" Usage="System.Data.IDbDataAdapter.DeleteCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает инструкцию SQL, удаляющую записи из набора данных.</summary>
        <value>Интерфейс <see cref="T:System.Data.IDbCommand" />, используемый во время применения метода <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> для удаления записей в источнике данных, соответствующих удаленным строкам в наборе данных.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если в <xref:System.Data.Common.DbDataAdapter.Update%2A>, если это свойство не задано и сведения о первичном ключе имеются в <xref:System.Data.DataSet>, <xref:System.Data.IDbDataAdapter.DeleteCommand%2A> можно создать автоматически, если задать свойство `SelectCommand` поставщика данных .NET Framework. Затем любые дополнительные команды, которые не были заданы, создаются CommandBuilder. Эта логика создания требует, чтобы сведения о ключевом столбце присутствовали в <xref:System.Data.DataSet>. Дополнительные сведения см. [в разделе Создание команд с помощью коммандбуилдерс](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).  
  
 Если <xref:System.Data.IDbDataAdapter.DeleteCommand%2A> назначен ранее созданной <xref:System.Data.IDbCommand>, <xref:System.Data.IDbCommand> не клонируется. <xref:System.Data.IDbDataAdapter.DeleteCommand%2A> поддерживает ссылку на ранее созданный объект <xref:System.Data.IDbCommand>.  
  
   
  
## Examples  
 В следующем примере создается экземпляр наследуемого класса <xref:System.Data.OleDb.OleDbDataAdapter> и устанавливаются свойства <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> и <xref:System.Data.OleDb.OleDbDataAdapter.DeleteCommand%2A>. Предполагается, что вы уже создали объект <xref:System.Data.OleDb.OleDbConnection>.  
  
 [!code-csharp[Classic WebData DbDataAdapter.DeleteCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.DeleteCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.DeleteCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.DeleteCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertCommand">
      <MemberSignature Language="C#" Value="public System.Data.IDbCommand InsertCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand InsertCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDbDataAdapter.InsertCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property InsertCommand As IDbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::IDbCommand ^ InsertCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InsertCommand : System.Data.IDbCommand with get, set" Usage="System.Data.IDbDataAdapter.InsertCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает инструкцию SQL, используемую для вставки новых записей в источнике данных.</summary>
        <value>Интерфейс <see cref="T:System.Data.IDbCommand" />, используемый во время применения метода <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> для вставки записей в источник данных, соответствующих новым строкам в наборе данных.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если в <xref:System.Data.Common.DbDataAdapter.Update%2A>, если это свойство не задано и сведения о первичном ключе имеются в <xref:System.Data.DataSet>, <xref:System.Data.IDbDataAdapter.InsertCommand%2A> можно создать автоматически, если задать свойство `SelectCommand` поставщика данных .NET Framework. Затем любые дополнительные команды, которые не были заданы, создаются CommandBuilder. Эта логика создания требует, чтобы сведения о ключевом столбце присутствовали в <xref:System.Data.DataSet>. Дополнительные сведения см. [в разделе Создание команд с помощью коммандбуилдерс](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).  
  
 Если <xref:System.Data.IDbDataAdapter.InsertCommand%2A> назначен ранее созданной <xref:System.Data.IDbCommand>, <xref:System.Data.IDbCommand> не клонируется. <xref:System.Data.IDbDataAdapter.InsertCommand%2A> поддерживает ссылку на ранее созданный объект <xref:System.Data.IDbCommand>.  
  
> [!NOTE]
>  Если выполнение этой команды возвращает строки, эти строки могут быть добавлены в <xref:System.Data.DataSet> в зависимости от того, как задано свойство <xref:System.Data.IDbCommand.UpdatedRowSource%2A> объекта <xref:System.Data.IDbCommand>.  
  
   
  
## Examples  
 В следующем примере создается экземпляр наследуемого класса <xref:System.Data.OleDb.OleDbDataAdapter> и устанавливаются свойства <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> и <xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A>. Предполагается, что вы уже создали объект <xref:System.Data.OleDb.OleDbConnection>.  
  
 [!code-csharp[Classic WebData DbDataAdapter.InsertCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.InsertCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.InsertCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.InsertCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectCommand">
      <MemberSignature Language="C#" Value="public System.Data.IDbCommand SelectCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand SelectCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDbDataAdapter.SelectCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectCommand As IDbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::IDbCommand ^ SelectCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SelectCommand : System.Data.IDbCommand with get, set" Usage="System.Data.IDbDataAdapter.SelectCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает оператор SQL для выбора записей в источнике данных.</summary>
        <value>Интерфейс <see cref="T:System.Data.IDbCommand" />, используемый во время применения метода <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> для выбора записей из источника данных для размещения в наборе данных.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если <xref:System.Data.IDbDataAdapter.SelectCommand%2A> назначен ранее созданной <xref:System.Data.IDbCommand>, <xref:System.Data.IDbCommand> не клонируется. <xref:System.Data.IDbDataAdapter.SelectCommand%2A> поддерживает ссылку на ранее созданный объект <xref:System.Data.IDbCommand>.  
  
 Если <xref:System.Data.IDbDataAdapter.SelectCommand%2A> не возвращает никаких строк, в <xref:System.Data.DataSet>не добавляются никакие таблицы и исключение не возникает.  
  
   
  
## Examples  
 В следующем примере создается экземпляр наследуемого класса <xref:System.Data.OleDb.OleDbDataAdapter> и устанавливаются свойства <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> и <xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A>. Предполагается, что вы уже создали объект <xref:System.Data.OleDb.OleDbConnection>.  
  
 [!code-csharp[Classic WebData DbDataAdapter.SelectCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.SelectCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.SelectCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.SelectCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateCommand">
      <MemberSignature Language="C#" Value="public System.Data.IDbCommand UpdateCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand UpdateCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDbDataAdapter.UpdateCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateCommand As IDbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::IDbCommand ^ UpdateCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.UpdateCommand : System.Data.IDbCommand with get, set" Usage="System.Data.IDbDataAdapter.UpdateCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает инструкцию SQL, используемую для обновления записей в источнике данных.</summary>
        <value>Интерфейс <see cref="T:System.Data.IDbCommand" />, используемый во время применения метода <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> для обновления записей в источнике данных, соответствующих измененным строкам в наборе данных.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если в <xref:System.Data.Common.DbDataAdapter.Update%2A>, если это свойство не задано и сведения о первичном ключе имеются в <xref:System.Data.DataSet>, <xref:System.Data.IDbDataAdapter.UpdateCommand%2A> можно создать автоматически, если задать свойство `SelectCommand` поставщика данных .NET Framework. Затем любые дополнительные команды, которые не были заданы, создаются CommandBuilder. Эта логика создания требует, чтобы сведения о ключевом столбце присутствовали в <xref:System.Data.DataSet>. Дополнительные сведения см. [в разделе Создание команд с помощью коммандбуилдерс](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).  
  
 Если <xref:System.Data.IDbDataAdapter.UpdateCommand%2A> назначен ранее созданной <xref:System.Data.IDbCommand>, <xref:System.Data.IDbCommand> не клонируется. <xref:System.Data.IDbDataAdapter.UpdateCommand%2A> поддерживает ссылку на ранее созданный объект <xref:System.Data.IDbCommand>.  
  
> [!NOTE]
>  Если выполнение этой команды возвращает строки, эти строки добавляются в <xref:System.Data.DataSet>.  
  
   
  
## Examples  
 В следующем примере создается экземпляр наследуемого класса <xref:System.Data.OleDb.OleDbDataAdapter> и устанавливаются свойства <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> и <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A>. Предполагается, что вы уже создали объект <xref:System.Data.OleDb.OleDbConnection>.  
  
 [!code-csharp[Classic WebData OleDbDataAdapter.UpdateCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter.UpdateCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbDataAdapter.UpdateCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter.UpdateCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
