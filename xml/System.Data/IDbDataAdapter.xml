<Type Name="IDbDataAdapter" FullName="System.Data.IDbDataAdapter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="37e8c13cf42cb0dcddefa667ae01b061151843d8" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75140230" /></Metadata><TypeSignature Language="C#" Value="public interface IDbDataAdapter : System.Data.IDataAdapter" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDbDataAdapter implements class System.Data.IDataAdapter" />
  <TypeSignature Language="DocId" Value="T:System.Data.IDbDataAdapter" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDbDataAdapter&#xA;Implements IDataAdapter" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDbDataAdapter : System::Data::IDataAdapter" />
  <TypeSignature Language="F#" Value="type IDbDataAdapter = interface&#xA;    interface IDataAdapter" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Data.IDataAdapter</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="277f2-101">Представляет набор связанных с командой свойств, которые используются для заполнения <see cref="T:System.Data.DataSet" /> и обновления источника данных, реализуемый поставщиками данных .NET Framework, осуществляющими доступ к реляционным базам данных.</span><span class="sxs-lookup"><span data-stu-id="277f2-101">Represents a set of command-related properties that are used to fill the <see cref="T:System.Data.DataSet" /> and update a data source, and is implemented by .NET Framework data providers that access relational databases.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="277f2-102">Интерфейс <xref:System.Data.IDbDataAdapter> наследуется от интерфейса <xref:System.Data.IDataAdapter> и позволяет объекту создать DataAdapter, предназначенный для использования с реляционной базой данных.</span><span class="sxs-lookup"><span data-stu-id="277f2-102">The <xref:System.Data.IDbDataAdapter> interface inherits from the <xref:System.Data.IDataAdapter> interface and allows an object to create a DataAdapter designed for use with a relational database.</span></span> <span data-ttu-id="277f2-103">Интерфейс <xref:System.Data.IDbDataAdapter> и, по желанию, класс служебной программы, <xref:System.Data.Common.DbDataAdapter>, допускает наследование класса для реализации класса DataAdapter, который представляет мост между источником данных и <xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="277f2-103">The <xref:System.Data.IDbDataAdapter> interface and, optionally, the utility class, <xref:System.Data.Common.DbDataAdapter>, allow an inheriting class to implement a DataAdapter class, which represents the bridge between a data source and a <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="277f2-104">Дополнительные сведения о классах DataAdapter см. в разделе [Заполнение набора данных из DataAdapter](~/docs/framework/data/adonet/populating-a-dataset-from-a-dataadapter.md).</span><span class="sxs-lookup"><span data-stu-id="277f2-104">For more information about DataAdapter classes, see [Populating a DataSet from a DataAdapter](~/docs/framework/data/adonet/populating-a-dataset-from-a-dataadapter.md).</span></span> <span data-ttu-id="277f2-105">Дополнительные сведения о реализации .NET Framework поставщиков данных см. [в разделе Реализация поставщика данных .NET Framework](https://docs.microsoft.com/previous-versions/dotnet/netframework-1.1/4ksaf9z5(v=vs.71)).</span><span class="sxs-lookup"><span data-stu-id="277f2-105">For more information about implementing .NET Framework data providers, see [Implementing a .NET Framework Data Provider](https://docs.microsoft.com/previous-versions/dotnet/netframework-1.1/4ksaf9z5(v=vs.71)).</span></span>  
  
 <span data-ttu-id="277f2-106">Приложение не создает экземпляр интерфейса <xref:System.Data.IDbDataAdapter> напрямую, но создает экземпляр класса, наследующий <xref:System.Data.IDbDataAdapter> и <xref:System.Data.Common.DbDataAdapter>.</span><span class="sxs-lookup"><span data-stu-id="277f2-106">An application does not create an instance of the <xref:System.Data.IDbDataAdapter> interface directly, but creates an instance of a class that inherits <xref:System.Data.IDbDataAdapter> and <xref:System.Data.Common.DbDataAdapter>.</span></span>  
  
 <span data-ttu-id="277f2-107">Классы, наследующие <xref:System.Data.IDbDataAdapter>, должны реализовывать наследуемые члены и, как правило, определять дополнительные члены для добавления функций, зависящих от поставщика.</span><span class="sxs-lookup"><span data-stu-id="277f2-107">Classes that inherit <xref:System.Data.IDbDataAdapter> must implement the inherited members, and typically define additional members to add provider-specific functionality.</span></span> <span data-ttu-id="277f2-108">Например, интерфейс <xref:System.Data.IDbDataAdapter> определяет свойство <xref:System.Data.IDbDataAdapter.SelectCommand%2A>, а интерфейс <xref:System.Data.Common.DbDataAdapter> определяет метод <xref:System.Data.IDataAdapter.Fill%2A>, который принимает <xref:System.Data.DataTable> в качестве параметра.</span><span class="sxs-lookup"><span data-stu-id="277f2-108">For example, the <xref:System.Data.IDbDataAdapter> interface defines the <xref:System.Data.IDbDataAdapter.SelectCommand%2A> property, and the <xref:System.Data.Common.DbDataAdapter> interface defines a <xref:System.Data.IDataAdapter.Fill%2A> method that takes a <xref:System.Data.DataTable> as a parameter.</span></span> <span data-ttu-id="277f2-109">В свою очередь, класс <xref:System.Data.OleDb.OleDbDataAdapter> наследует свойство <xref:System.Data.IDbDataAdapter.SelectCommand%2A> и метод <xref:System.Data.Common.DbDataAdapter.Fill%2A>, а также определяет две дополнительные перегрузки метода <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A>, которые принимают объект набора записей ADO в качестве параметра.</span><span class="sxs-lookup"><span data-stu-id="277f2-109">In turn, the <xref:System.Data.OleDb.OleDbDataAdapter> class inherits the <xref:System.Data.IDbDataAdapter.SelectCommand%2A> property and the <xref:System.Data.Common.DbDataAdapter.Fill%2A> method, and also defines two additional overloads of the <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> method that take an ADO Recordset object as a parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="277f2-110">В следующем примере для выбора записей из источника данных используются производные классы, <xref:System.Data.SqlClient.SqlCommand>, <xref:System.Data.SqlClient.SqlDataAdapter> и <xref:System.Data.SqlClient.SqlConnection>.</span><span class="sxs-lookup"><span data-stu-id="277f2-110">The following example uses the derived classes, <xref:System.Data.SqlClient.SqlCommand>, <xref:System.Data.SqlClient.SqlDataAdapter> and <xref:System.Data.SqlClient.SqlConnection>, to select records from a data source.</span></span> <span data-ttu-id="277f2-111">Затем возвращается заполненный <xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="277f2-111">The filled <xref:System.Data.DataSet> is then returned.</span></span> <span data-ttu-id="277f2-112">Для этого методу передается инициализированное <xref:System.Data.DataSet>, строка подключения и строка запроса, которая является инструкцией Transact-SQL SELECT.</span><span class="sxs-lookup"><span data-stu-id="277f2-112">To accomplish this, the method is passed an initialized <xref:System.Data.DataSet>, a connection string, and a query string that is a Transact-SQL SELECT statement.</span></span>  
  
 [!code-csharp[Classic WebData SqlDataAdapter Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlDataAdapter Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlDataAdapter Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlDataAdapter Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para><span data-ttu-id="277f2-113">Чтобы обеспечить согласованность между .NET Framework поставщиками данных, назовите класс-наследник в форме <paramref name="Prv" /> DataAdapter, где <paramref name="Prv" /> является универсальным префиксом, присвоенным всем классам в определенном пространстве имен .NET Framework поставщика данных.</span><span class="sxs-lookup"><span data-stu-id="277f2-113">To promote consistency among .NET Framework data providers, name the inheriting class in the form <paramref name="Prv" /> DataAdapter where <paramref name="Prv" /> is the uniform prefix given to all classes in a specific .NET Framework data provider namespace.</span></span> <span data-ttu-id="277f2-114">Например, <paramref name="Sql" /> является префиксом класса <see cref="T:System.Data.SqlClient.SqlDataAdapter" /> в пространстве имен <see langword="System.Data.SqlClient" />.</span><span class="sxs-lookup"><span data-stu-id="277f2-114">For example, <paramref name="Sql" /> is the prefix of the <see cref="T:System.Data.SqlClient.SqlDataAdapter" /> class in the <see langword="System.Data.SqlClient" /> namespace.</span></span>  
  
<span data-ttu-id="277f2-115">При наследовании от интерфейса <see cref="T:System.Data.IDbDataAdapter" /> необходимо реализовать следующие конструкторы:</span><span class="sxs-lookup"><span data-stu-id="277f2-115">When you inherit from the <see cref="T:System.Data.IDbDataAdapter" /> interface, you should implement the following constructors:</span></span> 
 <list type="table"><listheader><term> <span data-ttu-id="277f2-116">Элемент</span><span class="sxs-lookup"><span data-stu-id="277f2-116">Item</span></span> 
 </term><description> <span data-ttu-id="277f2-117">Описание</span><span class="sxs-lookup"><span data-stu-id="277f2-117">Description</span></span> 
 </description></listheader><item><term> <span data-ttu-id="277f2-118">Првдатаадаптер ()</span><span class="sxs-lookup"><span data-stu-id="277f2-118">PrvDataAdapter()</span></span> 
 </term><description> <span data-ttu-id="277f2-119">Инициализирует новый экземпляр класса Првдатаадаптер.</span><span class="sxs-lookup"><span data-stu-id="277f2-119">Initializes a new instance of the PrvDataAdapter class.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="277f2-120">Првдатаадаптер (Првкомманд selectCommand)</span><span class="sxs-lookup"><span data-stu-id="277f2-120">PrvDataAdapter(PrvCommand selectCommand)</span></span> 
 </term><description> <span data-ttu-id="277f2-121">Инициализирует новый экземпляр класса Првдатаадаптер с указанной инструкцией SQL SELECT.</span><span class="sxs-lookup"><span data-stu-id="277f2-121">Initializes a new instance of the PrvDataAdapter class with the specified SQL SELECT statement.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="277f2-122">Првдатаадаптер (строка Селекткоммандтекст, строка Селектконнектионстринг)</span><span class="sxs-lookup"><span data-stu-id="277f2-122">PrvDataAdapter(string selectCommandText, string selectConnectionString)</span></span> 
 </term><description> <span data-ttu-id="277f2-123">Инициализирует новый экземпляр класса Првдатаадаптер с помощью инструкции SQL SELECT и строки подключения.</span><span class="sxs-lookup"><span data-stu-id="277f2-123">Initializes a new instance of the PrvDataAdapter class with an SQL SELECT statement and a connection string.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="277f2-124">Првдатаадаптер (строка Селекткоммандтекст, Првконнектион Селектконнектион)</span><span class="sxs-lookup"><span data-stu-id="277f2-124">PrvDataAdapter(string selectCommandText, PrvConnection selectConnection)</span></span> 
 </term><description> <span data-ttu-id="277f2-125">Инициализирует новый экземпляр класса Првдатаадаптер с помощью инструкции SQL SELECT и объекта Првконнектион.</span><span class="sxs-lookup"><span data-stu-id="277f2-125">Initializes a new instance of the PrvDataAdapter class with an SQL SELECT statement and a PrvConnection object.</span></span>  
  
 </description></item></list></para></block>
  </Docs>
  <Members>
    <Member MemberName="DeleteCommand">
      <MemberSignature Language="C#" Value="public System.Data.IDbCommand DeleteCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand DeleteCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDbDataAdapter.DeleteCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property DeleteCommand As IDbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::IDbCommand ^ DeleteCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DeleteCommand : System.Data.IDbCommand with get, set" Usage="System.Data.IDbDataAdapter.DeleteCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="277f2-126">Возвращает или задает инструкцию SQL, удаляющую записи из набора данных.</span><span class="sxs-lookup"><span data-stu-id="277f2-126">Gets or sets an SQL statement for deleting records from the data set.</span></span></summary>
        <value><span data-ttu-id="277f2-127">Интерфейс <see cref="T:System.Data.IDbCommand" />, используемый во время применения метода <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> для удаления записей в источнике данных, соответствующих удаленным строкам в наборе данных.</span><span class="sxs-lookup"><span data-stu-id="277f2-127">An <see cref="T:System.Data.IDbCommand" /> used during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> to delete records in the data source for deleted rows in the data set.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="277f2-128">Если в <xref:System.Data.Common.DbDataAdapter.Update%2A>, если это свойство не задано и сведения о первичном ключе имеются в <xref:System.Data.DataSet>, <xref:System.Data.IDbDataAdapter.DeleteCommand%2A> можно создать автоматически, если задать свойство `SelectCommand` поставщика данных .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="277f2-128">During <xref:System.Data.Common.DbDataAdapter.Update%2A>, if this property is not set and primary key information is present in the <xref:System.Data.DataSet>, the <xref:System.Data.IDbDataAdapter.DeleteCommand%2A> can be generated automatically if you set the `SelectCommand` property of a .NET Framework data provider.</span></span> <span data-ttu-id="277f2-129">Затем любые дополнительные команды, которые не были заданы, создаются CommandBuilder.</span><span class="sxs-lookup"><span data-stu-id="277f2-129">Then, any additional commands that you do not set are generated by the CommandBuilder.</span></span> <span data-ttu-id="277f2-130">Эта логика создания требует, чтобы сведения о ключевом столбце присутствовали в <xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="277f2-130">This generation logic requires key column information to be present in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="277f2-131">Дополнительные сведения см. [в разделе Создание команд с помощью коммандбуилдерс](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span><span class="sxs-lookup"><span data-stu-id="277f2-131">For more information see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span></span>  
  
 <span data-ttu-id="277f2-132">Если <xref:System.Data.IDbDataAdapter.DeleteCommand%2A> назначен ранее созданной <xref:System.Data.IDbCommand>, <xref:System.Data.IDbCommand> не клонируется.</span><span class="sxs-lookup"><span data-stu-id="277f2-132">When <xref:System.Data.IDbDataAdapter.DeleteCommand%2A> is assigned to a previously created <xref:System.Data.IDbCommand>, the <xref:System.Data.IDbCommand> is not cloned.</span></span> <span data-ttu-id="277f2-133"><xref:System.Data.IDbDataAdapter.DeleteCommand%2A> поддерживает ссылку на ранее созданный объект <xref:System.Data.IDbCommand>.</span><span class="sxs-lookup"><span data-stu-id="277f2-133">The <xref:System.Data.IDbDataAdapter.DeleteCommand%2A> maintains a reference to the previously created <xref:System.Data.IDbCommand> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="277f2-134">В следующем примере создается экземпляр наследуемого класса <xref:System.Data.OleDb.OleDbDataAdapter> и устанавливаются свойства <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> и <xref:System.Data.OleDb.OleDbDataAdapter.DeleteCommand%2A>.</span><span class="sxs-lookup"><span data-stu-id="277f2-134">The following example creates an instance of the inherited <xref:System.Data.OleDb.OleDbDataAdapter> class, and sets the <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> and <xref:System.Data.OleDb.OleDbDataAdapter.DeleteCommand%2A> properties.</span></span> <span data-ttu-id="277f2-135">Предполагается, что вы уже создали объект <xref:System.Data.OleDb.OleDbConnection>.</span><span class="sxs-lookup"><span data-stu-id="277f2-135">It assumes you have already created an <xref:System.Data.OleDb.OleDbConnection> object.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.DeleteCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.DeleteCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.DeleteCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.DeleteCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertCommand">
      <MemberSignature Language="C#" Value="public System.Data.IDbCommand InsertCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand InsertCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDbDataAdapter.InsertCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property InsertCommand As IDbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::IDbCommand ^ InsertCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InsertCommand : System.Data.IDbCommand with get, set" Usage="System.Data.IDbDataAdapter.InsertCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="277f2-136">Возвращает или задает инструкцию SQL, используемую для вставки новых записей в источнике данных.</span><span class="sxs-lookup"><span data-stu-id="277f2-136">Gets or sets an SQL statement used to insert new records into the data source.</span></span></summary>
        <value><span data-ttu-id="277f2-137">Интерфейс <see cref="T:System.Data.IDbCommand" />, используемый во время применения метода <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> для вставки записей в источник данных, соответствующих новым строкам в наборе данных.</span><span class="sxs-lookup"><span data-stu-id="277f2-137">An <see cref="T:System.Data.IDbCommand" /> used during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> to insert records in the data source for new rows in the data set.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="277f2-138">Если в <xref:System.Data.Common.DbDataAdapter.Update%2A>, если это свойство не задано и сведения о первичном ключе имеются в <xref:System.Data.DataSet>, <xref:System.Data.IDbDataAdapter.InsertCommand%2A> можно создать автоматически, если задать свойство `SelectCommand` поставщика данных .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="277f2-138">During <xref:System.Data.Common.DbDataAdapter.Update%2A>, if this property is not set and primary key information is present in the <xref:System.Data.DataSet>, the <xref:System.Data.IDbDataAdapter.InsertCommand%2A> can be generated automatically if you set the `SelectCommand` property of a .NET Framework data provider.</span></span> <span data-ttu-id="277f2-139">Затем любые дополнительные команды, которые не были заданы, создаются CommandBuilder.</span><span class="sxs-lookup"><span data-stu-id="277f2-139">Then, any additional commands that you do not set are generated by the CommandBuilder.</span></span> <span data-ttu-id="277f2-140">Эта логика создания требует, чтобы сведения о ключевом столбце присутствовали в <xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="277f2-140">This generation logic requires key column information to be present in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="277f2-141">Дополнительные сведения см. [в разделе Создание команд с помощью коммандбуилдерс](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span><span class="sxs-lookup"><span data-stu-id="277f2-141">For more information see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span></span>  
  
 <span data-ttu-id="277f2-142">Если <xref:System.Data.IDbDataAdapter.InsertCommand%2A> назначен ранее созданной <xref:System.Data.IDbCommand>, <xref:System.Data.IDbCommand> не клонируется.</span><span class="sxs-lookup"><span data-stu-id="277f2-142">When <xref:System.Data.IDbDataAdapter.InsertCommand%2A> is assigned to a previously created <xref:System.Data.IDbCommand>, the <xref:System.Data.IDbCommand> is not cloned.</span></span> <span data-ttu-id="277f2-143"><xref:System.Data.IDbDataAdapter.InsertCommand%2A> поддерживает ссылку на ранее созданный объект <xref:System.Data.IDbCommand>.</span><span class="sxs-lookup"><span data-stu-id="277f2-143">The <xref:System.Data.IDbDataAdapter.InsertCommand%2A> maintains a reference to the previously created <xref:System.Data.IDbCommand> object.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="277f2-144">Если выполнение этой команды возвращает строки, эти строки могут быть добавлены в <xref:System.Data.DataSet> в зависимости от того, как задано свойство <xref:System.Data.IDbCommand.UpdatedRowSource%2A> объекта <xref:System.Data.IDbCommand>.</span><span class="sxs-lookup"><span data-stu-id="277f2-144">If execution of this command returns rows, these rows may be added to the <xref:System.Data.DataSet> depending on how you set the <xref:System.Data.IDbCommand.UpdatedRowSource%2A> property of the <xref:System.Data.IDbCommand> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="277f2-145">В следующем примере создается экземпляр наследуемого класса <xref:System.Data.OleDb.OleDbDataAdapter> и устанавливаются свойства <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> и <xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A>.</span><span class="sxs-lookup"><span data-stu-id="277f2-145">The following example creates an instance of the inherited <xref:System.Data.OleDb.OleDbDataAdapter> class, and sets the <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> and <xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A> properties.</span></span> <span data-ttu-id="277f2-146">Предполагается, что вы уже создали объект <xref:System.Data.OleDb.OleDbConnection>.</span><span class="sxs-lookup"><span data-stu-id="277f2-146">It assumes you have already created an <xref:System.Data.OleDb.OleDbConnection> object.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.InsertCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.InsertCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.InsertCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.InsertCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectCommand">
      <MemberSignature Language="C#" Value="public System.Data.IDbCommand SelectCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand SelectCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDbDataAdapter.SelectCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectCommand As IDbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::IDbCommand ^ SelectCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SelectCommand : System.Data.IDbCommand with get, set" Usage="System.Data.IDbDataAdapter.SelectCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="277f2-147">Возвращает или задает оператор SQL для выбора записей в источнике данных.</span><span class="sxs-lookup"><span data-stu-id="277f2-147">Gets or sets an SQL statement used to select records in the data source.</span></span></summary>
        <value><span data-ttu-id="277f2-148">Интерфейс <see cref="T:System.Data.IDbCommand" />, используемый во время применения метода <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> для выбора записей из источника данных для размещения в наборе данных.</span><span class="sxs-lookup"><span data-stu-id="277f2-148">An <see cref="T:System.Data.IDbCommand" /> that is used during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> to select records from data source for placement in the data set.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="277f2-149">Если <xref:System.Data.IDbDataAdapter.SelectCommand%2A> назначен ранее созданной <xref:System.Data.IDbCommand>, <xref:System.Data.IDbCommand> не клонируется.</span><span class="sxs-lookup"><span data-stu-id="277f2-149">When <xref:System.Data.IDbDataAdapter.SelectCommand%2A> is assigned to a previously created <xref:System.Data.IDbCommand>, the <xref:System.Data.IDbCommand> is not cloned.</span></span> <span data-ttu-id="277f2-150"><xref:System.Data.IDbDataAdapter.SelectCommand%2A> поддерживает ссылку на ранее созданный объект <xref:System.Data.IDbCommand>.</span><span class="sxs-lookup"><span data-stu-id="277f2-150">The <xref:System.Data.IDbDataAdapter.SelectCommand%2A> maintains a reference to the previously created <xref:System.Data.IDbCommand> object.</span></span>  
  
 <span data-ttu-id="277f2-151">Если <xref:System.Data.IDbDataAdapter.SelectCommand%2A> не возвращает никаких строк, в <xref:System.Data.DataSet>не добавляются никакие таблицы и исключение не возникает.</span><span class="sxs-lookup"><span data-stu-id="277f2-151">If the <xref:System.Data.IDbDataAdapter.SelectCommand%2A> does not return any rows, no tables are added to the <xref:System.Data.DataSet>, and no exception is raised.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="277f2-152">В следующем примере создается экземпляр наследуемого класса <xref:System.Data.OleDb.OleDbDataAdapter> и устанавливаются свойства <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> и <xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A>.</span><span class="sxs-lookup"><span data-stu-id="277f2-152">The following example creates an instance of the inherited <xref:System.Data.OleDb.OleDbDataAdapter> class, and sets the <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> and <xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A> properties.</span></span> <span data-ttu-id="277f2-153">Предполагается, что вы уже создали объект <xref:System.Data.OleDb.OleDbConnection>.</span><span class="sxs-lookup"><span data-stu-id="277f2-153">It assumes you have already created an <xref:System.Data.OleDb.OleDbConnection> object.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.SelectCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.SelectCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.SelectCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.SelectCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateCommand">
      <MemberSignature Language="C#" Value="public System.Data.IDbCommand UpdateCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand UpdateCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDbDataAdapter.UpdateCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateCommand As IDbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::IDbCommand ^ UpdateCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.UpdateCommand : System.Data.IDbCommand with get, set" Usage="System.Data.IDbDataAdapter.UpdateCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="277f2-154">Возвращает или задает инструкцию SQL, используемую для обновления записей в источнике данных.</span><span class="sxs-lookup"><span data-stu-id="277f2-154">Gets or sets an SQL statement used to update records in the data source.</span></span></summary>
        <value><span data-ttu-id="277f2-155">Интерфейс <see cref="T:System.Data.IDbCommand" />, используемый во время применения метода <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> для обновления записей в источнике данных, соответствующих измененным строкам в наборе данных.</span><span class="sxs-lookup"><span data-stu-id="277f2-155">An <see cref="T:System.Data.IDbCommand" /> used during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> to update records in the data source for modified rows in the data set.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="277f2-156">Если в <xref:System.Data.Common.DbDataAdapter.Update%2A>, если это свойство не задано и сведения о первичном ключе имеются в <xref:System.Data.DataSet>, <xref:System.Data.IDbDataAdapter.UpdateCommand%2A> можно создать автоматически, если задать свойство `SelectCommand` поставщика данных .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="277f2-156">During <xref:System.Data.Common.DbDataAdapter.Update%2A>, if this property is not set and primary key information is present in the <xref:System.Data.DataSet>, the <xref:System.Data.IDbDataAdapter.UpdateCommand%2A> can be generated automatically if you set the `SelectCommand` property of a .NET Framework data provider.</span></span> <span data-ttu-id="277f2-157">Затем любые дополнительные команды, которые не были заданы, создаются CommandBuilder.</span><span class="sxs-lookup"><span data-stu-id="277f2-157">Then, any additional commands that you do not set are generated by the CommandBuilder.</span></span> <span data-ttu-id="277f2-158">Эта логика создания требует, чтобы сведения о ключевом столбце присутствовали в <xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="277f2-158">This generation logic requires key column information to be present in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="277f2-159">Дополнительные сведения см. [в разделе Создание команд с помощью коммандбуилдерс](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span><span class="sxs-lookup"><span data-stu-id="277f2-159">For more information see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span></span>  
  
 <span data-ttu-id="277f2-160">Если <xref:System.Data.IDbDataAdapter.UpdateCommand%2A> назначен ранее созданной <xref:System.Data.IDbCommand>, <xref:System.Data.IDbCommand> не клонируется.</span><span class="sxs-lookup"><span data-stu-id="277f2-160">When <xref:System.Data.IDbDataAdapter.UpdateCommand%2A> is assigned to a previously created <xref:System.Data.IDbCommand>, the <xref:System.Data.IDbCommand> is not cloned.</span></span> <span data-ttu-id="277f2-161"><xref:System.Data.IDbDataAdapter.UpdateCommand%2A> поддерживает ссылку на ранее созданный объект <xref:System.Data.IDbCommand>.</span><span class="sxs-lookup"><span data-stu-id="277f2-161">The <xref:System.Data.IDbDataAdapter.UpdateCommand%2A> maintains a reference to the previously created <xref:System.Data.IDbCommand> object.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="277f2-162">Если выполнение этой команды возвращает строки, эти строки добавляются в <xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="277f2-162">If execution of this command returns rows, these rows are added to the <xref:System.Data.DataSet>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="277f2-163">В следующем примере создается экземпляр наследуемого класса <xref:System.Data.OleDb.OleDbDataAdapter> и устанавливаются свойства <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> и <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A>.</span><span class="sxs-lookup"><span data-stu-id="277f2-163">The following example creates an instance of the inherited <xref:System.Data.OleDb.OleDbDataAdapter> class, and sets the <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> and <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A> properties.</span></span> <span data-ttu-id="277f2-164">Предполагается, что вы уже создали объект <xref:System.Data.OleDb.OleDbConnection>.</span><span class="sxs-lookup"><span data-stu-id="277f2-164">It assumes you have already created an <xref:System.Data.OleDb.OleDbConnection> object.</span></span>  
  
 [!code-csharp[Classic WebData OleDbDataAdapter.UpdateCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter.UpdateCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbDataAdapter.UpdateCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter.UpdateCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
