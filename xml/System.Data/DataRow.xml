<Type Name="DataRow" FullName="System.Data.DataRow">
  <Metadata><Meta Name="ms.openlocfilehash" Value="41776e1637f8ec310b98a708aeda64c6a35ae5fd" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75140906" /></Metadata><TypeSignature Language="C#" Value="public class DataRow" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataRow extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.DataRow" />
  <TypeSignature Language="VB.NET" Value="Public Class DataRow" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataRow" />
  <TypeSignature Language="F#" Value="type DataRow = class" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Представляет строку данных в <see cref="T:System.Data.DataTable" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Объекты <xref:System.Data.DataRow> и <xref:System.Data.DataColumn> являются основными компонентами <xref:System.Data.DataTable>. Для извлечения и вычисления используйте объект <xref:System.Data.DataRow> и его свойства и методы. а также для вставки, удаления и обновления значений в <xref:System.Data.DataTable>. <xref:System.Data.DataRowCollection> представляет фактические объекты <xref:System.Data.DataRow> в <xref:System.Data.DataTable>, а <xref:System.Data.DataColumnCollection> содержит <xref:System.Data.DataColumn> объекты, описывающие схему <xref:System.Data.DataTable>. Используйте Перегруженное свойство <xref:System.Data.DataRow.Item%2A>, чтобы вернуть или задать значение <xref:System.Data.DataColumn>.  
  
 Используйте свойства <xref:System.Data.DataRow.HasVersion%2A> и <xref:System.Data.DataRow.IsNull%2A>, чтобы определить состояние конкретного значения строки, а также свойство <xref:System.Data.DataRow.RowState*> для определения состояния строки относительно ее родительского <xref:System.Data.DataTable>.  
  
 Чтобы создать новый <xref:System.Data.DataRow>, используйте метод <xref:System.Data.DataTable.NewRow%2A> объекта <xref:System.Data.DataTable>. После создания нового <xref:System.Data.DataRow>используйте метод <xref:System.Data.DataRowCollection.Add%2A>, чтобы добавить новый <xref:System.Data.DataRow> в <xref:System.Data.DataRowCollection>. Наконец, вызовите метод <xref:System.Data.DataRow.AcceptChanges%2A> объекта <xref:System.Data.DataTable>, чтобы подтвердить добавление. Дополнительные сведения о добавлении данных в <xref:System.Data.DataTable>см. в разделе [Добавление данных в таблицу DataTable](~/docs/framework/data/adonet/dataset-datatable-dataview/adding-data-to-a-datatable.md).  
  
 <xref:System.Data.DataRow> можно удалить из <xref:System.Data.DataRowCollection>, вызвав метод <xref:System.Data.DataRowCollection.Remove%2A> <xref:System.Data.DataRowCollection>или вызвав метод <xref:System.Data.DataRow.Delete%2A> объекта <xref:System.Data.DataRow>. Метод <xref:System.Data.DataRowCollection.Remove%2A> удаляет строку из коллекции. Напротив, <xref:System.Data.DataRow.Delete%2A> помечает <xref:System.Data.DataRow> для удаления. Фактическое удаление происходит при вызове метода <xref:System.Data.DataRow.AcceptChanges%2A>. Вызывая <xref:System.Data.DataRow.Delete%2A>, можно программно проверить, какие строки помечены для удаления, прежде чем удалять их. Дополнительные сведения см. в разделе [Удаление DataRow](~/docs/framework/data/adonet/dataset-datatable-dataview/datarow-deletion.md).  
  
   
  
## Examples  
 В следующем примере создается новый <xref:System.Data.DataRow> путем вызова метода <xref:System.Data.DataTable.NewRow%2A> объекта <xref:System.Data.DataTable>.  
  
 [!code-csharp[Classic WebData DataRow Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>Этот тип является надежным для многопоточных операций чтения. Необходимо синхронизировать любые операции записи.</threadsafe>
    <altmember cref="M:System.Data.DataRow.AcceptChanges" />
    <altmember cref="M:System.Data.DataRowCollection.Add(System.Data.DataRow)" />
    <altmember cref="T:System.Data.DataColumnCollection" />
    <altmember cref="T:System.Data.DataColumn" />
    <altmember cref="T:System.Data.DataRowView" />
    <altmember cref="T:System.Data.DataTable" />
    <altmember cref="M:System.Data.DataRow.HasVersion(System.Data.DataRowVersion)" />
    <altmember cref="M:System.Data.DataRow.IsNull(System.Int32)" />
    <altmember cref="P:System.Data.DataRow.Item(System.Int32)" />
    <altmember cref="M:System.Data.DataTable.NewRow" />
    <altmember cref="T:System.Data.DataRowCollection" />
    <related type="Article" href="~/docs/framework/data/adonet/dataset-datatable-dataview/index.md">Использование наборов данных в ADO.NET</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal DataRow (System.Data.DataRowBuilder builder);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(class System.Data.DataRowBuilder builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.#ctor(System.Data.DataRowBuilder)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub New (builder As DataRowBuilder)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; DataRow(System::Data::DataRowBuilder ^ builder);" />
      <MemberSignature Language="F#" Value="new System.Data.DataRow : System.Data.DataRowBuilder -&gt; System.Data.DataRow" Usage="new System.Data.DataRow builder" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="builder" Type="System.Data.DataRowBuilder" />
      </Parameters>
      <Docs>
        <param name="builder">построитель</param>
        <summary>Инициализирует новый экземпляр DataRow. Создает строку из построителя. Только для внутреннего использования.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AcceptChanges">
      <MemberSignature Language="C#" Value="public void AcceptChanges ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AcceptChanges() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.AcceptChanges" />
      <MemberSignature Language="VB.NET" Value="Public Sub AcceptChanges ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AcceptChanges();" />
      <MemberSignature Language="F#" Value="member this.AcceptChanges : unit -&gt; unit" Usage="dataRow.AcceptChanges " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Фиксирует все изменения, внесенные в эту строку со времени последнего вызова метода <see cref="M:System.Data.DataRow.AcceptChanges" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При вызове <xref:System.Data.DataRow.AcceptChanges%2A>метод <xref:System.Data.DataRow.EndEdit%2A> вызывается неявно для завершения любых изменений. Если <xref:System.Data.DataRow.RowState*> строки было добавлено или изменено, <xref:System.Data.DataRow.RowState*> не изменяется. Если <xref:System.Data.DataRow.RowState*> был удален, строка удаляется.  
  
 Дополнительные сведения см. в описании метода <xref:System.Data.DataRow.BeginEdit%2A>.  
  
 Класс <xref:System.Data.DataTable> также имеет метод <xref:System.Data.DataTable.AcceptChanges%2A>, который влияет на изменения, внесенные в таблицу целиком. Дополнительные сведения и пример кода, демонстрирующий принятие и отклонение изменений в отдельных строках данных, см. в разделе [AcceptChanges и RejectChanges](~/docs/framework/data/adonet/dataset-datatable-dataview/acceptchanges-and-rejectchanges.md).  
  
   
  
## Examples  
 В следующем примере сначала создается новый <xref:System.Data.DataTable> с одним столбцом, а затем создается один <xref:System.Data.DataRow>. При создании, добавлении, изменении и удалении <xref:System.Data.DataRow> печатается его <xref:System.Data.DataRow.RowState*>.  
  
 [!code-csharp[Classic WebData DataRow.AcceptChanges Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.AcceptChanges Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.AcceptChanges Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.AcceptChanges Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.RowNotInTableException">Строка не принадлежит таблице.</exception>
        <altmember cref="M:System.Data.DataTable.AcceptChanges" />
        <altmember cref="M:System.Data.DataRow.BeginEdit" />
        <altmember cref="M:System.Data.DataRow.CancelEdit" />
        <altmember cref="T:System.Data.DataViewRowState" />
        <altmember cref="T:System.Data.DataTable" />
        <altmember cref="M:System.Data.DataRow.EndEdit" />
        <altmember cref="M:System.Data.DataRow.HasVersion(System.Data.DataRowVersion)" />
        <altmember cref="P:System.Data.DataRow.Item(System.Int32)" />
        <altmember cref="P:System.Data.DataRow.RowState" />
        <related type="Article" href="~/docs/framework/data/adonet/dataset-datatable-dataview/index.md">Использование наборов данных в ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="BeginEdit">
      <MemberSignature Language="C#" Value="public void BeginEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BeginEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.BeginEdit" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginEdit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BeginEdit();" />
      <MemberSignature Language="F#" Value="member this.BeginEdit : unit -&gt; unit" Usage="dataRow.BeginEdit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;netcore-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Начинает операцию изменения объекта <see cref="T:System.Data.DataRow" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте метод <xref:System.Data.DataRow.BeginEdit%2A>, чтобы перевести <xref:System.Data.DataRow> в режим редактирования. В этом режиме события временно приостанавливаются, что позволяет пользователю вносить изменения в более чем одну строку, не запуская правила проверки. Например, если необходимо убедиться, что значение столбца для общего количества равно значениям столбцов дебет и кредит в строке, можно перевести каждую строку в режим редактирования, чтобы приостановить проверку значений строк до тех пор, пока пользователь не попытается зафиксировать значения.  
  
 Метод <xref:System.Data.DataRow.BeginEdit%2A> вызывается неявно, когда пользователь изменяет значение элемента управления с привязкой к данным; метод <xref:System.Data.DataRow.EndEdit%2A> вызывается неявно при вызове метода <xref:System.Data.DataTable.AcceptChanges%2A> для объекта <xref:System.Data.DataTable>. В этом режиме редактирования <xref:System.Data.DataRow> сохраняет представления исходного и новых предложенных значений. Таким образом, если метод <xref:System.Data.DataRow.EndEdit%2A> не был вызван, можно получить исходную или предложенную версию, передав либо `DataRowVersion.Original`, либо `DataRowVersion.Proposed` для параметра `version` свойства <xref:System.Data.DataRow.Item%2A>. Вы также можете отменить все изменения на этом этапе, вызвав метод <xref:System.Data.DataRow.CancelEdit%2A>.  
  
 Чтобы проверить, содержит ли строка исходное или предложенное значение, вызовите метод <xref:System.Data.DataRow.HasVersion%2A>.  
  
> [!NOTE]
>  Метод <xref:System.Data.DataRow.BeginEdit%2A> временно приостанавливает <xref:System.Data.DataTable.RowChanging> события, но операция `delete` не выполняется.  
  
   
  
## Examples  
 В примере создается простой <xref:System.Data.DataTable> с одним <xref:System.Data.DataColumn> и пятью <xref:System.Data.DataRow>ными объектами, а также <xref:System.Data.UniqueConstraint>. Для наблюдения за изменением значения строки также добавляется обработчик <xref:System.Data.DataTable.RowChanged> событий. После вызова <xref:System.Data.DataRow.BeginEdit%2A> для существующих строк ограничение и событие временно отключаются, и выводятся исходные и предложенные значения. <xref:System.Data.DataRow.BeginEdit%2A> вызывается повторно, чтобы установить одно и то же значение для двух строк. При вызове <xref:System.Data.DataRow.EndEdit%2A> для идентичных значений применяется <xref:System.Data.UniqueConstraint>.  
  
 [!code-csharp[Classic WebData DataRow.BeginEdit Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.BeginEdit Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.BeginEdit Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.BeginEdit Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.InRowChangingEventException">Метод был вызван внутри события <see cref="E:System.Data.DataTable.RowChanging" />.</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">Метод был вызван в удаленную строку.</exception>
        <altmember cref="M:System.Data.DataTable.AcceptChanges" />
        <altmember cref="M:System.Data.DataRow.CancelEdit" />
        <altmember cref="M:System.Data.DataRow.EndEdit" />
        <altmember cref="M:System.Data.DataRow.HasVersion(System.Data.DataRowVersion)" />
        <altmember cref="P:System.Data.DataRow.Item(System.Int32)" />
        <altmember cref="P:System.Data.DataRow.RowState" />
        <related type="Article" href="~/docs/framework/data/adonet/dataset-datatable-dataview/index.md">Использование наборов данных в ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="CancelEdit">
      <MemberSignature Language="C#" Value="public void CancelEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CancelEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.CancelEdit" />
      <MemberSignature Language="VB.NET" Value="Public Sub CancelEdit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CancelEdit();" />
      <MemberSignature Language="F#" Value="member this.CancelEdit : unit -&gt; unit" Usage="dataRow.CancelEdit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;netcore-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Отменяет текущее изменение строки.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Дополнительные сведения см. в описании метода <xref:System.Data.DataRow.BeginEdit%2A>.  
  
   
  
## Examples  
 В следующем примере изменяется значение одного столбца в последней строке элемента управления <xref:System.Windows.Forms.DataGrid>. В примере используются методы <xref:System.Data.DataRow.BeginEdit%2A>, <xref:System.Data.DataRow.EndEdit%2A>, для изменения значения столбца и фиксации изменения в строке.  
  
 [!code-csharp[Classic WebData DataRow.CancelEdit Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.CancelEdit Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.CancelEdit Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.CancelEdit Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.InRowChangingEventException">Метод был вызван внутри события <see cref="E:System.Data.DataTable.RowChanging" />.</exception>
        <altmember cref="M:System.Data.DataTable.AcceptChanges" />
        <altmember cref="M:System.Data.DataRow.BeginEdit" />
        <altmember cref="T:System.Data.DataViewRowState" />
        <altmember cref="M:System.Data.DataRow.EndEdit" />
        <altmember cref="M:System.Data.DataRow.HasVersion(System.Data.DataRowVersion)" />
        <altmember cref="P:System.Data.DataRow.Item(System.Int32)" />
        <altmember cref="P:System.Data.DataRow.RowState" />
        <related type="Article" href="~/docs/framework/data/adonet/dataset-datatable-dataview/index.md">Использование наборов данных в ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="ClearErrors">
      <MemberSignature Language="C#" Value="public void ClearErrors ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearErrors() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.ClearErrors" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearErrors ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearErrors();" />
      <MemberSignature Language="F#" Value="member this.ClearErrors : unit -&gt; unit" Usage="dataRow.ClearErrors " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Очищает ошибки для строки. Это относится к свойству <see cref="P:System.Data.DataRow.RowError" /> и ошибкам, установленным с помощью метода <see cref="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Data.DataRow.SetColumnError%2A> и <xref:System.Data.DataRow.GetColumnError%2A>, чтобы задавать и возвращать ошибки для отдельных столбцов.  
  
 Задайте свойство <xref:System.Data.DataRow.RowError%2A>, чтобы задать ошибку, которая применяется ко всей строке.  
  
 Чтобы определить, существуют ли какие либо ошибки для коллекции Columns, используйте метод <xref:System.Data.DataRow.HasErrors%2A>. Следовательно, можно использовать метод <xref:System.Data.DataRow.GetColumnsInError%2A> для получения всех столбцов с ошибками.  
  
   
  
## Examples  
 В следующем примере для поиска ошибок используется <xref:System.Data.DataRow.HasErrors%2A>. Если строка содержит ошибки, то метод <xref:System.Data.DataRow.GetColumnsInError%2A> возвращает массив столбцов с ошибками, которые затем можно разрешить. Затем вызывается метод <xref:System.Data.DataRow.ClearErrors%2A> для очистки всех ошибок.  
  
 [!code-csharp[Classic WebData DataRow.ClearErrors Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.ClearErrors Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.ClearErrors Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.ClearErrors Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Data.DataColumnCollection" />
        <altmember cref="M:System.Data.DataRow.GetColumnError(System.Int32)" />
        <altmember cref="M:System.Data.DataRow.GetColumnsInError" />
        <altmember cref="P:System.Data.DataRow.HasErrors" />
        <altmember cref="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)" />
        <altmember cref="P:System.Data.DataRow.RowError" />
        <related type="Article" href="~/docs/framework/data/adonet/dataset-datatable-dataview/index.md">Использование наборов данных в ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Delete() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Sub Delete ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Delete();" />
      <MemberSignature Language="F#" Value="member this.Delete : unit -&gt; unit" Usage="dataRow.Delete " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Удаляет объект <see cref="T:System.Data.DataRow" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если добавляется <xref:System.Data.DataRow.RowState*> строки, <xref:System.Data.DataRow.RowState*> становится `Detached` и строка удаляется из таблицы при вызове <xref:System.Data.DataRow.AcceptChanges%2A>.  
  
 <xref:System.Data.DataRow.RowState*> будет `Deleted` после использования метода <xref:System.Data.DataRow.Delete%2A> в существующем <xref:System.Data.DataRow>. Он остается `Deleted` до вызова <xref:System.Data.DataRow.AcceptChanges%2A>. В данный момент <xref:System.Data.DataRow> удаляется из таблицы.  
  
 <xref:System.Data.DataRow.Delete%2A> не следует вызывать в цикле foreach при переборе объекта <xref:System.Data.DataRowCollection>. <xref:System.Data.DataRow.Delete%2A> изменяет состояние коллекции.  
  
 Удаленную строку можно отменить, вызвав <xref:System.Data.DataRow.RejectChanges%2A>.  
  
> [!NOTE]
>  Метод <xref:System.Data.DataRow.BeginEdit%2A> временно приостанавливает <xref:System.Data.DataTable.RowChanging> события, а операция удаления — нет.  
  
   
  
## Examples  
 В следующем примере создается простой <xref:System.Data.DataTable> с двумя столбцами и десятью строками. После удаления нескольких <xref:System.Data.DataRow> элементов с помощью метода <xref:System.Data.DataRow.Delete%2A> одна из строк удаляется путем вызова <xref:System.Data.DataRow.RejectChanges%2A>.  
  
 [!code-csharp[Classic WebData DataRow.Delete Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.Delete Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.Delete Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.Delete Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">Объект <see cref="T:System.Data.DataRow" /> уже был удален.</exception>
        <altmember cref="T:System.Data.DataRowState" />
        <altmember cref="T:System.Data.DataViewRowState" />
        <altmember cref="P:System.Data.DataRow.RowState" />
        <related type="Article" href="~/docs/framework/data/adonet/dataset-datatable-dataview/index.md">Использование наборов данных в ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="EndEdit">
      <MemberSignature Language="C#" Value="public void EndEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.EndEdit" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndEdit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndEdit();" />
      <MemberSignature Language="F#" Value="member this.EndEdit : unit -&gt; unit" Usage="dataRow.EndEdit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;netcore-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Прекращает изменение строки.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При задании свойства создается исключение, если в событии <xref:System.Data.DataTable.RowChanging> возникает исключение.  
  
   
  
## Examples  
 В следующем примере метод <xref:System.Data.DataRow.EndEdit%2A> используется для завершения редактирования значения <xref:System.Data.DataRow>, если функция проверки возвращает значение true.  
  
 [!code-csharp[Classic WebData DataRow.CancelEdit Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.CancelEdit Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.CancelEdit Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.CancelEdit Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.InRowChangingEventException">Метод был вызван внутри события <see cref="E:System.Data.DataTable.RowChanging" />.</exception>
        <exception cref="T:System.Data.ConstraintException">Изменение привело к нарушению ограничения.</exception>
        <exception cref="T:System.Data.ReadOnlyException">Строка принадлежит таблице, а при изменении была предпринята попытка изменить значение столбца, доступного только для чтения.</exception>
        <exception cref="T:System.Data.NoNullAllowedException">При изменении была предпринята попытка поместить значение null в столбец, в котором свойство <see cref="P:System.Data.DataColumn.AllowDBNull" /> имеет значение false.</exception>
        <altmember cref="M:System.Data.DataTable.AcceptChanges" />
        <altmember cref="P:System.Data.DataColumn.AllowDBNull" />
        <altmember cref="M:System.Data.DataRow.BeginEdit" />
        <altmember cref="M:System.Data.DataRow.CancelEdit" />
        <altmember cref="M:System.Data.DataRow.HasVersion(System.Data.DataRowVersion)" />
        <altmember cref="P:System.Data.DataRow.Item(System.Int32)" />
        <altmember cref="P:System.Data.DataRow.RowState" />
        <related type="Article" href="~/docs/framework/data/adonet/dataset-datatable-dataview/index.md">Использование наборов данных в ADO.NET</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetChildRows">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Получает дочерние строки объекта <see cref="T:System.Data.DataRow" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetChildRows">
      <MemberSignature Language="C#" Value="public System.Data.DataRow[] GetChildRows (System.Data.DataRelation relation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow[] GetChildRows(class System.Data.DataRelation relation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetChildRows(System.Data.DataRelation)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChildRows (relation As DataRelation) As DataRow()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::DataRow ^&gt; ^ GetChildRows(System::Data::DataRelation ^ relation);" />
      <MemberSignature Language="F#" Value="member this.GetChildRows : System.Data.DataRelation -&gt; System.Data.DataRow[]" Usage="dataRow.GetChildRows relation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relation" Type="System.Data.DataRelation" />
      </Parameters>
      <Docs>
        <param name="relation">Используемый <see cref="T:System.Data.DataRelation" />.</param>
        <summary>Получает дочерние строки этого объекта <see cref="T:System.Data.DataRow" /> с помощью указанного объекта <see cref="T:System.Data.DataRelation" />.</summary>
        <returns>Массив объектов <see cref="T:System.Data.DataRow" /> или массив нулевой длины.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.DataTable> также содержит коллекцию объектов <xref:System.Data.DataRelation>, возвращаемых свойством <xref:System.Data.DataTable.ChildRelations%2A>.  
  
   
  
## Examples  
 В следующем примере используется <xref:System.Data.DataRow.GetChildRows%2A>, чтобы получить дочерние объекты <xref:System.Data.DataRow> для каждого дочернего <xref:System.Data.DataRelation> в <xref:System.Data.DataTable>. Затем распечатывается значение каждого столбца в строке.  
  
 [!code-csharp[Classic WebData DataRow.GetChildRows2 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.GetChildRows2 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.GetChildRows2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.GetChildRows2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Отношение и строка не принадлежат одной и той же таблице.</exception>
        <exception cref="T:System.ArgumentNullException">Значением отношения является <see langword="null" />.</exception>
        <exception cref="T:System.Data.RowNotInTableException">Строка не принадлежит таблице.</exception>
        <exception cref="T:System.Data.VersionNotFoundException">Строка не содержит эту версию данных.</exception>
        <altmember cref="P:System.Data.DataTable.ChildRelations" />
        <altmember cref="T:System.Data.DataRelation" />
        <altmember cref="M:System.Data.DataRow.GetParentRows(System.String)" />
        <altmember cref="P:System.Data.DataSet.Relations" />
        <related type="Article" href="~/docs/framework/data/adonet/dataset-datatable-dataview/index.md">Использование наборов данных в ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="GetChildRows">
      <MemberSignature Language="C#" Value="public System.Data.DataRow[] GetChildRows (string relationName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow[] GetChildRows(string relationName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetChildRows(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChildRows (relationName As String) As DataRow()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::DataRow ^&gt; ^ GetChildRows(System::String ^ relationName);" />
      <MemberSignature Language="F#" Value="member this.GetChildRows : string -&gt; System.Data.DataRow[]" Usage="dataRow.GetChildRows relationName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="relationName">Используемое свойство <see cref="P:System.Data.DataRelation.RelationName" /> объекта <see cref="T:System.Data.DataRelation" />.</param>
        <summary>Получает дочерние строки объекта <see cref="T:System.Data.DataRow" /> с помощью указанного свойства <see cref="P:System.Data.DataRelation.RelationName" /> объекта <see cref="T:System.Data.DataRelation" />.</summary>
        <returns>Массив объектов <see cref="T:System.Data.DataRow" /> или массив нулевой длины.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.DataTable> также содержит коллекцию объектов <xref:System.Data.DataRelation>, возвращаемых свойством <xref:System.Data.DataTable.ChildRelations%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Отношение и строка не принадлежат одной и той же таблице.</exception>
        <exception cref="T:System.Data.RowNotInTableException">Строка не принадлежит таблице.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetChildRows">
      <MemberSignature Language="C#" Value="public System.Data.DataRow[] GetChildRows (System.Data.DataRelation relation, System.Data.DataRowVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow[] GetChildRows(class System.Data.DataRelation relation, valuetype System.Data.DataRowVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetChildRows(System.Data.DataRelation,System.Data.DataRowVersion)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChildRows (relation As DataRelation, version As DataRowVersion) As DataRow()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::DataRow ^&gt; ^ GetChildRows(System::Data::DataRelation ^ relation, System::Data::DataRowVersion version);" />
      <MemberSignature Language="F#" Value="member this.GetChildRows : System.Data.DataRelation * System.Data.DataRowVersion -&gt; System.Data.DataRow[]" Usage="dataRow.GetChildRows (relation, version)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relation" Type="System.Data.DataRelation" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <param name="relation">Используемый <see cref="T:System.Data.DataRelation" />.</param>
        <param name="version">Одно из значений <see cref="T:System.Data.DataRowVersion" />, указывающих версию получаемых данных. Допустимые значения: <see langword="Default" />, <see langword="Original" />, <see langword="Current" /> и <see langword="Proposed" />.</param>
        <summary>Получает дочерние строки объекта <see cref="T:System.Data.DataRow" /> с помощью указанных объектов <see cref="T:System.Data.DataRelation" /> и <see cref="T:System.Data.DataRowVersion" />.</summary>
        <returns>Массив объектов <see cref="T:System.Data.DataRow" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.DataTable> также содержит коллекцию объектов <xref:System.Data.DataRelation>, возвращаемых свойством <xref:System.Data.DataTable.ChildRelations%2A>.  
  
 Используйте свойство <xref:System.Data.DataRow.HasVersion%2A>, чтобы определить, существует ли необходимый <xref:System.Data.DataRowVersion>.  
  
 Если указан параметр <xref:System.Data.DataRowVersion.Default>, используемая версия зависит от <xref:System.Data.DataRow.RowState*> строки, в которой вызывается `GetChildRows`. Если строка, в которой вызывается `GetChildRows`, имеет `RowState` `Modified`, `New`или `Unchanged`, то для выборки связанных дочерних строк с совпадающими значениями в их текущих версиях используется <xref:System.Data.DataRowVersion.Current> версия строки. Если строка, в которой вызывается `GetChildRows`, имеет `RowState` `Deleted`, то <xref:System.Data.DataRowVersion.Original> версия строки используется для выборки связанных дочерних строк с совпадающими значениями в их исходных версиях.  
  
   
  
## Examples  
 В следующем примере используется <xref:System.Data.DataRow.GetChildRows%2A>, чтобы получить дочерние объекты <xref:System.Data.DataRow> для каждого дочернего <xref:System.Data.DataRelation> в <xref:System.Data.DataTable>. Затем распечатывается значение каждого столбца с указанной версией в строке.  
  
 [!code-csharp[Classic WebData DataRow.GetChildRows3 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.GetChildRows3 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.GetChildRows3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.GetChildRows3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Отношение и строка не принадлежат одной и той же таблице.</exception>
        <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="relation" /> — <see langword="null" />.</exception>
        <exception cref="T:System.Data.RowNotInTableException">Строка не принадлежит таблице.</exception>
        <exception cref="T:System.Data.VersionNotFoundException">Строка не имеет запрошенного объекта <see cref="T:System.Data.DataRowVersion" />.</exception>
        <altmember cref="P:System.Data.DataTable.ChildRelations" />
        <altmember cref="T:System.Data.DataRelation" />
        <altmember cref="T:System.Data.DataRowVersion" />
        <altmember cref="M:System.Data.DataRow.GetParentRow(System.String)" />
        <altmember cref="M:System.Data.DataRow.GetParentRows(System.String)" />
        <altmember cref="P:System.Data.DataSet.Relations" />
        <related type="Article" href="~/docs/framework/data/adonet/dataset-datatable-dataview/index.md">Использование наборов данных в ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="GetChildRows">
      <MemberSignature Language="C#" Value="public System.Data.DataRow[] GetChildRows (string relationName, System.Data.DataRowVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow[] GetChildRows(string relationName, valuetype System.Data.DataRowVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetChildRows(System.String,System.Data.DataRowVersion)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChildRows (relationName As String, version As DataRowVersion) As DataRow()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::DataRow ^&gt; ^ GetChildRows(System::String ^ relationName, System::Data::DataRowVersion version);" />
      <MemberSignature Language="F#" Value="member this.GetChildRows : string * System.Data.DataRowVersion -&gt; System.Data.DataRow[]" Usage="dataRow.GetChildRows (relationName, version)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationName" Type="System.String" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <param name="relationName">Используемое свойство <see cref="P:System.Data.DataRelation.RelationName" /> объекта <see cref="T:System.Data.DataRelation" />.</param>
        <param name="version">Одно из значений <see cref="T:System.Data.DataRowVersion" />, указывающих версию получаемых данных. Допустимые значения: <see langword="Default" />, <see langword="Original" />, <see langword="Current" /> и <see langword="Proposed" />.</param>
        <summary>Получает дочерние строки объекта <see cref="T:System.Data.DataRow" /> с помощью указанного свойства <see cref="P:System.Data.DataRelation.RelationName" /> объектов <see cref="T:System.Data.DataRelation" /> и <see cref="T:System.Data.DataRowVersion" />.</summary>
        <returns>Массив объектов <see cref="T:System.Data.DataRow" /> или массив нулевой длины.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.DataTable> также содержит коллекцию объектов <xref:System.Data.DataRelation>, возвращаемых свойством <xref:System.Data.DataTable.ChildRelations%2A>.  
  
 Используйте свойство <xref:System.Data.DataRow.HasVersion%2A>, чтобы определить, существует ли необходимый <xref:System.Data.DataRowVersion>.  
  
 Если указан параметр <xref:System.Data.DataRowVersion.Default>, используемая версия зависит от <xref:System.Data.DataRow.RowState*> строки, в которой вызывается `GetChildRows`. Если строка, в которой вызывается `GetChildRows`, имеет `RowState` `Modified`, `New`или `Unchanged`, то для выборки связанных дочерних строк с совпадающими значениями в их текущих версиях используется <xref:System.Data.DataRowVersion.Current> версия строки. Если строка, в которой вызывается `GetChildRows`, имеет `RowState` `Deleted`, то <xref:System.Data.DataRowVersion.Original> версия строки используется для выборки связанных дочерних строк с совпадающими значениями в их исходных версиях.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Отношение и строка не принадлежат одной и той же таблице.</exception>
        <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="relation" /> — <see langword="null" />.</exception>
        <exception cref="T:System.Data.RowNotInTableException">Строка не принадлежит таблице.</exception>
        <exception cref="T:System.Data.VersionNotFoundException">Строка не имеет запрошенного объекта <see cref="T:System.Data.DataRowVersion" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetColumnError">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Получает описание ошибки для столбца.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetColumnError">
      <MemberSignature Language="C#" Value="public string GetColumnError (System.Data.DataColumn column);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetColumnError(class System.Data.DataColumn column) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetColumnError(System.Data.DataColumn)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetColumnError (column As DataColumn) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetColumnError(System::Data::DataColumn ^ column);" />
      <MemberSignature Language="F#" Value="member this.GetColumnError : System.Data.DataColumn -&gt; string" Usage="dataRow.GetColumnError column" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.Data.DataColumn" />
      </Parameters>
      <Docs>
        <param name="column">Объект <see cref="T:System.Data.DataColumn" />.</param>
        <summary>Получает описание ошибки указанного объекта <see cref="T:System.Data.DataColumn" />.</summary>
        <returns>Текст описания ошибки.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Для установки ошибок столбцов используйте метод <xref:System.Data.DataRow.SetColumnError%2A>.  
  
 Чтобы определить, существуют ли какие либо ошибки для коллекции Columns, используйте метод <xref:System.Data.DataRow.HasErrors%2A>. Следовательно, можно использовать метод <xref:System.Data.DataRow.GetColumnsInError%2A> для получения всех столбцов с ошибками. Кроме того, метод <xref:System.Data.DataTable.GetErrors%2A> <xref:System.Data.DataTable> возвращает все строки с ошибками.  
  
 Чтобы очистить все ошибки для коллекции Columns, используйте метод <xref:System.Data.DataRow.ClearErrors%2A>.  
  
   
  
## Examples  
 В следующем примере задается описание ошибки для указанного <xref:System.Data.DataRow>.  
  
 [!code-csharp[Classic WebData DataRow.SetColumnError Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.SetColumnError Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataRow.ClearErrors" />
        <altmember cref="T:System.Data.DataColumnCollection" />
        <altmember cref="M:System.Data.DataColumnCollection.Contains(System.String)" />
        <altmember cref="T:System.Data.DataColumn" />
        <altmember cref="M:System.Data.DataRow.GetColumnsInError" />
        <altmember cref="M:System.Data.DataTable.GetErrors" />
        <altmember cref="P:System.Data.DataRow.HasErrors" />
        <altmember cref="P:System.Data.DataRow.RowError" />
        <altmember cref="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetColumnError">
      <MemberSignature Language="C#" Value="public string GetColumnError (int columnIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetColumnError(int32 columnIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetColumnError(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetColumnError (columnIndex As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetColumnError(int columnIndex);" />
      <MemberSignature Language="F#" Value="member this.GetColumnError : int -&gt; string" Usage="dataRow.GetColumnError columnIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="columnIndex">Индекс столбца (с нуля).</param>
        <summary>Получает описание ошибки для столбца, указанного по индексу.</summary>
        <returns>Текст описания ошибки.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Для установки ошибок столбцов используйте метод <xref:System.Data.DataRow.SetColumnError%2A>.  
  
 Чтобы определить, существуют ли какие либо ошибки для коллекции Columns, используйте метод <xref:System.Data.DataRow.HasErrors%2A>. Следовательно, можно использовать метод <xref:System.Data.DataRow.GetColumnsInError%2A> для получения всех столбцов с ошибками.  
  
 Чтобы очистить все ошибки для коллекции Columns, используйте метод <xref:System.Data.DataRow.ClearErrors%2A>.  
  
   
  
## Examples  
 В следующем примере задается описание ошибки для указанного <xref:System.Data.DataRow>.  
  
 [!code-csharp[Classic WebData DataRow.SetColumnError Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.SetColumnError Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">Аргумент <paramref name="columnIndex" /> вне диапазона.</exception>
        <altmember cref="M:System.Data.DataRow.ClearErrors" />
        <altmember cref="T:System.Data.DataColumnCollection" />
        <altmember cref="M:System.Data.DataColumnCollection.Contains(System.String)" />
        <altmember cref="T:System.Data.DataColumn" />
        <altmember cref="M:System.Data.DataRow.GetColumnsInError" />
        <altmember cref="P:System.Data.DataRow.HasErrors" />
        <altmember cref="P:System.Data.DataRow.RowError" />
        <altmember cref="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetColumnError">
      <MemberSignature Language="C#" Value="public string GetColumnError (string columnName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetColumnError(string columnName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetColumnError(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetColumnError (columnName As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetColumnError(System::String ^ columnName);" />
      <MemberSignature Language="F#" Value="member this.GetColumnError : string -&gt; string" Usage="dataRow.GetColumnError columnName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="columnName">Имя столбца.</param>
        <summary>Получает описание ошибки для столбца, указанного по имени.</summary>
        <returns>Текст описания ошибки.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Для установки ошибок столбцов используйте метод <xref:System.Data.DataRow.SetColumnError%2A>.  
  
 Чтобы определить, существуют ли какие либо ошибки для коллекции Columns, используйте метод <xref:System.Data.DataRow.HasErrors%2A>. Следовательно, можно использовать метод <xref:System.Data.DataRow.GetColumnsInError%2A> для получения всех столбцов с ошибками.  
  
 Чтобы очистить все ошибки для коллекции Columns, используйте метод <xref:System.Data.DataRow.ClearErrors%2A>.  
  
   
  
## Examples  
 В следующем примере задается описание ошибки для указанного <xref:System.Data.DataRow>.  
  
 [!code-csharp[Classic WebData DataRow.SetColumnError Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.SetColumnError Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataRow.ClearErrors" />
        <altmember cref="T:System.Data.DataColumnCollection" />
        <altmember cref="M:System.Data.DataColumnCollection.Contains(System.String)" />
        <altmember cref="T:System.Data.DataColumn" />
        <altmember cref="M:System.Data.DataRow.GetColumnsInError" />
        <altmember cref="P:System.Data.DataRow.HasErrors" />
        <altmember cref="P:System.Data.DataRow.RowError" />
        <altmember cref="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetColumnsInError">
      <MemberSignature Language="C#" Value="public System.Data.DataColumn[] GetColumnsInError ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataColumn[] GetColumnsInError() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetColumnsInError" />
      <MemberSignature Language="VB.NET" Value="Public Function GetColumnsInError () As DataColumn()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::DataColumn ^&gt; ^ GetColumnsInError();" />
      <MemberSignature Language="F#" Value="member this.GetColumnsInError : unit -&gt; System.Data.DataColumn[]" Usage="dataRow.GetColumnsInError " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataColumn[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Получает массив столбцов с ошибками.</summary>
        <returns>Массив объектов <see cref="T:System.Data.DataColumn" />, содержащих ошибки.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.DataRow.GetColumnsInError%2A> позволяет сократить количество объектов <xref:System.Data.DataColumn>, которые должны быть обработаны для ошибок, возвращая только те столбцы, которые содержат ошибку. Ошибки могут быть заданы для отдельных столбцов с помощью метода <xref:System.Data.DataRow.SetColumnError%2A>. Чтобы еще больше сократить число обрабатываемых данных, изучите свойство <xref:System.Data.DataRow.HasErrors%2A> класса <xref:System.Data.DataRow>, чтобы определить, есть ли ошибки <xref:System.Data.DataRow> перед вызовом <xref:System.Data.DataRow.GetColumnsInError%2A>.  
  
 Чтобы очистить все ошибки в строке, используйте метод <xref:System.Data.DataRow.ClearErrors%2A>. Включает свойство <xref:System.Data.DataRow.RowError%2A>.  
  
   
  
## Examples  
 В следующем примере для поиска ошибок используется <xref:System.Data.DataRow.HasErrors%2A>. Если строка содержит ошибки, то метод <xref:System.Data.DataRow.GetColumnsInError%2A> возвращает массив столбцов с ошибками, которые затем можно разрешить. Затем вызывается метод <xref:System.Data.DataRow.ClearErrors%2A> для очистки всех ошибок.  
  
 [!code-csharp[Classic WebData DataRow.ClearErrors Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.ClearErrors Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.ClearErrors Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.ClearErrors Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataRow.ClearErrors" />
        <altmember cref="M:System.Data.DataRow.GetColumnError(System.Int32)" />
        <altmember cref="M:System.Data.DataTable.GetErrors" />
        <altmember cref="P:System.Data.DataRow.HasErrors" />
        <altmember cref="P:System.Data.DataRow.RowError" />
        <altmember cref="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetParentRow">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Получает родительскую строку объекта <see cref="T:System.Data.DataRow" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetParentRow">
      <MemberSignature Language="C#" Value="public System.Data.DataRow GetParentRow (System.Data.DataRelation relation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow GetParentRow(class System.Data.DataRelation relation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetParentRow(System.Data.DataRelation)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetParentRow (relation As DataRelation) As DataRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DataRow ^ GetParentRow(System::Data::DataRelation ^ relation);" />
      <MemberSignature Language="F#" Value="member this.GetParentRow : System.Data.DataRelation -&gt; System.Data.DataRow" Usage="dataRow.GetParentRow relation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relation" Type="System.Data.DataRelation" />
      </Parameters>
      <Docs>
        <param name="relation">Используемый <see cref="T:System.Data.DataRelation" />.</param>
        <summary>Получает родительскую строку объекта <see cref="T:System.Data.DataRow" /> с помощью указанного объекта <see cref="T:System.Data.DataRelation" />.</summary>
        <returns>Родительский объект <see cref="T:System.Data.DataRow" /> текущей строки.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 В <xref:System.Data.DataSet>коллекция всех родительских объектов <xref:System.Data.DataRelation> для набора данных возвращается методом <xref:System.Data.DataRow.GetParentRows%2A>.  
  
 <xref:System.Data.DataTable> также содержит коллекцию объектов <xref:System.Data.DataRelation>, возвращаемых свойством <xref:System.Data.DataTable.ParentRelations%2A>.  
  
   
  
## Examples  
 В следующем примере используется <xref:System.Data.DataRow.GetParentRow%2A>, чтобы получить дочерние объекты <xref:System.Data.DataRow> для каждого дочернего <xref:System.Data.DataRelation> в <xref:System.Data.DataTable>. Затем распечатывается значение каждого столбца в строке.  
  
 [!code-csharp[Classic WebData DataRow.GetParentRow2 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.GetParentRow2 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.GetParentRow2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.GetParentRow2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="relation" /> не принадлежит объекту <see cref="T:System.Data.DataTable" />.  
  
-или-

Строка имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.Data.DataException">Дочерняя строка имеет несколько родительских элементов.</exception>
        <exception cref="T:System.Data.InvalidConstraintException">Эта строка не принадлежит дочерней таблице объекта <see cref="T:System.Data.DataRelation" />.</exception>
        <exception cref="T:System.Data.RowNotInTableException">Строка не принадлежит таблице.</exception>
        <altmember cref="P:System.Data.DataTable.ChildRelations" />
        <altmember cref="T:System.Data.DataRelation" />
        <altmember cref="M:System.Data.DataRow.GetChildRows(System.String)" />
        <altmember cref="M:System.Data.DataRow.GetParentRow(System.String)" />
        <altmember cref="P:System.Data.DataSet.Relations" />
      </Docs>
    </Member>
    <Member MemberName="GetParentRow">
      <MemberSignature Language="C#" Value="public System.Data.DataRow GetParentRow (string relationName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow GetParentRow(string relationName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetParentRow(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetParentRow (relationName As String) As DataRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DataRow ^ GetParentRow(System::String ^ relationName);" />
      <MemberSignature Language="F#" Value="member this.GetParentRow : string -&gt; System.Data.DataRow" Usage="dataRow.GetParentRow relationName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="relationName">Свойство <see cref="P:System.Data.DataRelation.RelationName" /> объекта <see cref="T:System.Data.DataRelation" />.</param>
        <summary>Получает родительскую строку объекта <see cref="T:System.Data.DataRow" /> с помощью указанного свойства <see cref="P:System.Data.DataRelation.RelationName" /> объекта <see cref="T:System.Data.DataRelation" />.</summary>
        <returns>Родительский объект <see cref="T:System.Data.DataRow" /> текущей строки.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 В <xref:System.Data.DataSet>коллекция всех родительских объектов <xref:System.Data.DataRelation> для набора данных возвращается методом <xref:System.Data.DataRow.GetParentRows%2A>.  
  
 <xref:System.Data.DataTable> также содержит коллекцию объектов <xref:System.Data.DataRelation>, возвращаемых свойством <xref:System.Data.DataTable.ParentRelations%2A>.  
  
   
  
## Examples  
 В следующем примере используется <xref:System.Data.DataRow.GetParentRow%2A> для печати значения из каждой родительской строки каждого <xref:System.Data.DataRow> в <xref:System.Data.DataTable>.  
  
 [!code-csharp[Classic WebData DataRow.GetParentRow Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.GetParentRow Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.GetParentRow Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.GetParentRow Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Отношение и строка не принадлежат одной и той же таблице.</exception>
        <exception cref="T:System.Data.DataException">Дочерняя строка имеет несколько родительских элементов.</exception>
        <exception cref="T:System.Data.RowNotInTableException">Строка не принадлежит таблице.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetParentRow">
      <MemberSignature Language="C#" Value="public System.Data.DataRow GetParentRow (System.Data.DataRelation relation, System.Data.DataRowVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow GetParentRow(class System.Data.DataRelation relation, valuetype System.Data.DataRowVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetParentRow(System.Data.DataRelation,System.Data.DataRowVersion)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetParentRow (relation As DataRelation, version As DataRowVersion) As DataRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DataRow ^ GetParentRow(System::Data::DataRelation ^ relation, System::Data::DataRowVersion version);" />
      <MemberSignature Language="F#" Value="member this.GetParentRow : System.Data.DataRelation * System.Data.DataRowVersion -&gt; System.Data.DataRow" Usage="dataRow.GetParentRow (relation, version)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relation" Type="System.Data.DataRelation" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <param name="relation">Используемый <see cref="T:System.Data.DataRelation" />.</param>
        <param name="version">Одно из значений <see cref="T:System.Data.DataRowVersion" />, указывающих версию получаемых данных.</param>
        <summary>Получает родительскую строку объекта <see cref="T:System.Data.DataRow" /> с помощью указанных объектов <see cref="T:System.Data.DataRelation" /> и <see cref="T:System.Data.DataRowVersion" />.</summary>
        <returns>Родительский объект <see cref="T:System.Data.DataRow" /> текущей строки.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 В <xref:System.Data.DataSet>коллекция всех родительских объектов <xref:System.Data.DataRelation> для набора данных возвращается методом <xref:System.Data.DataRow.GetParentRows%2A>.  
  
 <xref:System.Data.DataTable> также содержит коллекцию объектов <xref:System.Data.DataRelation>, возвращаемых свойством <xref:System.Data.DataTable.ParentRelations%2A>.  
  
 Используйте свойство <xref:System.Data.DataRow.HasVersion%2A>, чтобы определить, существует ли необходимый <xref:System.Data.DataRowVersion>.  
  
   
  
## Examples  
 В следующем примере используется <xref:System.Data.DataRow.GetParentRow%2A>, чтобы получить дочерние объекты <xref:System.Data.DataRow> для каждого дочернего <xref:System.Data.DataRelation> в <xref:System.Data.DataTable>. Затем распечатывается значение каждого столбца в строке.  
  
 [!code-csharp[Classic WebData DataRow.GetParentRow3 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.GetParentRow3 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.GetParentRow3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.GetParentRow3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Строка имеет значение <see langword="null" />.  
  
-или-

Параметр <paramref name="relation" /> не принадлежит к родительским отношениям этой таблицы.</exception>
        <exception cref="T:System.Data.DataException">Дочерняя строка имеет несколько родительских элементов.</exception>
        <exception cref="T:System.Data.InvalidConstraintException">Дочерняя таблица отношения не является таблицей, которой принадлежит строка.</exception>
        <exception cref="T:System.Data.RowNotInTableException">Строка не принадлежит таблице.</exception>
        <exception cref="T:System.Data.VersionNotFoundException">Строка не содержит эту версию данных.</exception>
        <altmember cref="P:System.Data.DataTable.ChildRelations" />
        <altmember cref="T:System.Data.DataRelation" />
        <altmember cref="T:System.Data.DataRowVersion" />
        <altmember cref="M:System.Data.DataRow.GetChildRows(System.String)" />
        <altmember cref="M:System.Data.DataRow.GetParentRow(System.String)" />
        <altmember cref="P:System.Data.DataSet.Relations" />
      </Docs>
    </Member>
    <Member MemberName="GetParentRow">
      <MemberSignature Language="C#" Value="public System.Data.DataRow GetParentRow (string relationName, System.Data.DataRowVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow GetParentRow(string relationName, valuetype System.Data.DataRowVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetParentRow(System.String,System.Data.DataRowVersion)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetParentRow (relationName As String, version As DataRowVersion) As DataRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DataRow ^ GetParentRow(System::String ^ relationName, System::Data::DataRowVersion version);" />
      <MemberSignature Language="F#" Value="member this.GetParentRow : string * System.Data.DataRowVersion -&gt; System.Data.DataRow" Usage="dataRow.GetParentRow (relationName, version)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationName" Type="System.String" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <param name="relationName">Свойство <see cref="P:System.Data.DataRelation.RelationName" /> объекта <see cref="T:System.Data.DataRelation" />.</param>
        <param name="version">Одно из значений перечисления <see cref="T:System.Data.DataRowVersion" />.</param>
        <summary>Получает родительскую строку объекта <see cref="T:System.Data.DataRow" /> с помощью указанного свойства <see cref="P:System.Data.DataRelation.RelationName" /> объектов <see cref="T:System.Data.DataRelation" /> и <see cref="T:System.Data.DataRowVersion" />.</summary>
        <returns>Родительский объект <see cref="T:System.Data.DataRow" /> текущей строки.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 В <xref:System.Data.DataSet>коллекция всех родительских объектов <xref:System.Data.DataRelation> для набора данных возвращается методом <xref:System.Data.DataRow.GetParentRows%2A>.  
  
 <xref:System.Data.DataTable> также содержит коллекцию объектов <xref:System.Data.DataRelation>, возвращаемых свойством <xref:System.Data.DataTable.ParentRelations%2A>.  
  
 Используйте свойство <xref:System.Data.DataRow.HasVersion%2A>, чтобы определить, существует ли необходимый <xref:System.Data.DataRowVersion>.  
  
   
  
## Examples  
 В следующем примере используется <xref:System.Data.DataRow.GetParentRow%2A> для печати значения из каждой родительской строки каждого <xref:System.Data.DataRow> в <xref:System.Data.DataTable>.  
  
 [!code-csharp[Classic WebData DataRow.GetParentRow1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.GetParentRow1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.GetParentRow1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.GetParentRow1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Отношение и строка не принадлежат одной и той же таблице.</exception>
        <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="relation" /> — <see langword="null" />.</exception>
        <exception cref="T:System.Data.DataException">Дочерняя строка имеет несколько родительских элементов.</exception>
        <exception cref="T:System.Data.RowNotInTableException">Строка не принадлежит таблице.</exception>
        <exception cref="T:System.Data.VersionNotFoundException">Строка не имеет запрошенного объекта <see cref="T:System.Data.DataRowVersion" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetParentRows">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Получает родительские строки объекта <see cref="T:System.Data.DataRow" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetParentRows">
      <MemberSignature Language="C#" Value="public System.Data.DataRow[] GetParentRows (System.Data.DataRelation relation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow[] GetParentRows(class System.Data.DataRelation relation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetParentRows(System.Data.DataRelation)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetParentRows (relation As DataRelation) As DataRow()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::DataRow ^&gt; ^ GetParentRows(System::Data::DataRelation ^ relation);" />
      <MemberSignature Language="F#" Value="member this.GetParentRows : System.Data.DataRelation -&gt; System.Data.DataRow[]" Usage="dataRow.GetParentRows relation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relation" Type="System.Data.DataRelation" />
      </Parameters>
      <Docs>
        <param name="relation">Используемый <see cref="T:System.Data.DataRelation" />.</param>
        <summary>Получает родительские строки объекта <see cref="T:System.Data.DataRow" /> с помощью указанного объекта <see cref="T:System.Data.DataRelation" />.</summary>
        <returns>Массив объектов <see cref="T:System.Data.DataRow" /> или массив нулевой длины.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 В <xref:System.Data.DataSet>коллекция всех родительских объектов <xref:System.Data.DataRelation> для набора данных возвращается методом <xref:System.Data.DataRow.GetParentRows%2A>.  
  
 <xref:System.Data.DataTable> также содержит коллекцию объектов <xref:System.Data.DataRelation>, возвращаемых свойством <xref:System.Data.DataTable.ParentRelations%2A>.  
  
   
  
## Examples  
 В следующем примере используется <xref:System.Data.DataRow.GetParentRows%2A>, чтобы получить дочерние объекты <xref:System.Data.DataRow> для каждого дочернего <xref:System.Data.DataRelation> в <xref:System.Data.DataTable>. Затем распечатывается значение каждого столбца в строке.  
  
 [!code-vb[Classic WebData DataRow.GetParentRows2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.GetParentRows2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Объект <see cref="T:System.Data.DataRelation" /> не принадлежит <see cref="T:System.Data.DataSet" /> этой строки.</exception>
        <exception cref="T:System.ArgumentNullException">Строка имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.Data.InvalidConstraintException">Дочерняя таблица отношения не является таблицей, которой принадлежит строка.</exception>
        <exception cref="T:System.Data.RowNotInTableException">Строка не принадлежит <see cref="T:System.Data.DataTable" />.</exception>
        <altmember cref="P:System.Data.DataTable.ChildRelations" />
        <altmember cref="T:System.Data.DataRelation" />
        <altmember cref="M:System.Data.DataRow.GetChildRows(System.String)" />
        <altmember cref="M:System.Data.DataRow.GetParentRow(System.String)" />
        <altmember cref="P:System.Data.DataSet.Relations" />
      </Docs>
    </Member>
    <Member MemberName="GetParentRows">
      <MemberSignature Language="C#" Value="public System.Data.DataRow[] GetParentRows (string relationName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow[] GetParentRows(string relationName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetParentRows(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetParentRows (relationName As String) As DataRow()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::DataRow ^&gt; ^ GetParentRows(System::String ^ relationName);" />
      <MemberSignature Language="F#" Value="member this.GetParentRows : string -&gt; System.Data.DataRow[]" Usage="dataRow.GetParentRows relationName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="relationName">Свойство <see cref="P:System.Data.DataRelation.RelationName" /> объекта <see cref="T:System.Data.DataRelation" />.</param>
        <summary>Получает родительские строки объекта <see cref="T:System.Data.DataRow" /> с помощью указанного свойства <see cref="P:System.Data.DataRelation.RelationName" /> объекта <see cref="T:System.Data.DataRelation" />.</summary>
        <returns>Массив объектов <see cref="T:System.Data.DataRow" /> или массив нулевой длины.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 В <xref:System.Data.DataSet>коллекция всех родительских объектов <xref:System.Data.DataRelation> для набора данных возвращается методом <xref:System.Data.DataRow.GetParentRows%2A>.  
  
 <xref:System.Data.DataTable> также содержит коллекцию объектов <xref:System.Data.DataRelation>, возвращаемых свойством <xref:System.Data.DataTable.ParentRelations%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Отношение и строка не принадлежат одной и той же таблице.</exception>
        <exception cref="T:System.Data.RowNotInTableException">Строка не принадлежит таблице.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetParentRows">
      <MemberSignature Language="C#" Value="public System.Data.DataRow[] GetParentRows (System.Data.DataRelation relation, System.Data.DataRowVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow[] GetParentRows(class System.Data.DataRelation relation, valuetype System.Data.DataRowVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetParentRows(System.Data.DataRelation,System.Data.DataRowVersion)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetParentRows (relation As DataRelation, version As DataRowVersion) As DataRow()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::DataRow ^&gt; ^ GetParentRows(System::Data::DataRelation ^ relation, System::Data::DataRowVersion version);" />
      <MemberSignature Language="F#" Value="member this.GetParentRows : System.Data.DataRelation * System.Data.DataRowVersion -&gt; System.Data.DataRow[]" Usage="dataRow.GetParentRows (relation, version)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relation" Type="System.Data.DataRelation" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <param name="relation">Используемый <see cref="T:System.Data.DataRelation" />.</param>
        <param name="version">Одно из значений <see cref="T:System.Data.DataRowVersion" />, указывающих версию получаемых данных.</param>
        <summary>Получает родительские строки объекта <see cref="T:System.Data.DataRow" /> с помощью указанных объектов <see cref="T:System.Data.DataRelation" /> и <see cref="T:System.Data.DataRowVersion" />.</summary>
        <returns>Массив объектов <see cref="T:System.Data.DataRow" /> или массив нулевой длины.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 В <xref:System.Data.DataSet>коллекция всех родительских объектов <xref:System.Data.DataRelation> для набора данных возвращается методом <xref:System.Data.DataRow.GetParentRows%2A>.  
  
 <xref:System.Data.DataTable> также содержит коллекцию объектов <xref:System.Data.DataRelation>, возвращаемых свойством <xref:System.Data.DataTable.ParentRelations%2A>.  
  
 Используйте свойство <xref:System.Data.DataRow.HasVersion%2A>, чтобы определить, существует ли необходимый <xref:System.Data.DataRowVersion>.  
  
   
  
## Examples  
 В следующем примере используется <xref:System.Data.DataRow.GetParentRows%2A>, чтобы получить дочерние объекты <xref:System.Data.DataRow> для каждого дочернего <xref:System.Data.DataRelation> в <xref:System.Data.DataTable>. Затем распечатывается значение каждого столбца в строке.  
  
 [!code-vb[Classic WebData DataRow.GetParentRows3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.GetParentRows3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Объект <see cref="T:System.Data.DataRelation" /> не принадлежит <see cref="T:System.Data.DataSet" /> этой строки.</exception>
        <exception cref="T:System.ArgumentNullException">Строка имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.Data.InvalidConstraintException">Дочерняя таблица отношения не является таблицей, которой принадлежит строка.</exception>
        <exception cref="T:System.Data.RowNotInTableException">Строка не принадлежит <see cref="T:System.Data.DataTable" />.</exception>
        <exception cref="T:System.Data.VersionNotFoundException">Строка не имеет запрошенного объекта <see cref="T:System.Data.DataRowVersion" />.</exception>
        <altmember cref="P:System.Data.DataTable.ChildRelations" />
        <altmember cref="T:System.Data.DataRelation" />
        <altmember cref="M:System.Data.DataRow.GetChildRows(System.String)" />
        <altmember cref="M:System.Data.DataRow.GetParentRow(System.String)" />
        <altmember cref="P:System.Data.DataSet.Relations" />
      </Docs>
    </Member>
    <Member MemberName="GetParentRows">
      <MemberSignature Language="C#" Value="public System.Data.DataRow[] GetParentRows (string relationName, System.Data.DataRowVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow[] GetParentRows(string relationName, valuetype System.Data.DataRowVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetParentRows(System.String,System.Data.DataRowVersion)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetParentRows (relationName As String, version As DataRowVersion) As DataRow()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::DataRow ^&gt; ^ GetParentRows(System::String ^ relationName, System::Data::DataRowVersion version);" />
      <MemberSignature Language="F#" Value="member this.GetParentRows : string * System.Data.DataRowVersion -&gt; System.Data.DataRow[]" Usage="dataRow.GetParentRows (relationName, version)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationName" Type="System.String" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <param name="relationName">Свойство <see cref="P:System.Data.DataRelation.RelationName" /> объекта <see cref="T:System.Data.DataRelation" />.</param>
        <param name="version">Одно из значений <see cref="T:System.Data.DataRowVersion" />, указывающих версию получаемых данных. Допустимые значения: <see langword="Default" />, <see langword="Original" />, <see langword="Current" /> и <see langword="Proposed" />.</param>
        <summary>Получает родительские строки объекта <see cref="T:System.Data.DataRow" /> с помощью указанного свойства <see cref="P:System.Data.DataRelation.RelationName" /> объектов <see cref="T:System.Data.DataRelation" /> и <see cref="T:System.Data.DataRowVersion" />.</summary>
        <returns>Массив объектов <see cref="T:System.Data.DataRow" /> или массив нулевой длины.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 В <xref:System.Data.DataSet>коллекция всех родительских объектов <xref:System.Data.DataRelation> для набора данных возвращается методом <xref:System.Data.DataRow.GetParentRows%2A>.  
  
 <xref:System.Data.DataTable> также содержит коллекцию объектов <xref:System.Data.DataRelation>, возвращаемых свойством <xref:System.Data.DataTable.ParentRelations%2A>.  
  
 Используйте свойство <xref:System.Data.DataRow.HasVersion%2A>, чтобы определить, существует ли необходимый <xref:System.Data.DataRowVersion>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Отношение и строка не принадлежат одной и той же таблице.</exception>
        <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="relation" /> — <see langword="null" />.</exception>
        <exception cref="T:System.Data.RowNotInTableException">Строка не принадлежит таблице.</exception>
        <exception cref="T:System.Data.VersionNotFoundException">Строка не имеет запрошенного объекта <see cref="T:System.Data.DataRowVersion" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="HasErrors">
      <MemberSignature Language="C#" Value="public bool HasErrors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasErrors" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRow.HasErrors" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasErrors As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasErrors { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasErrors : bool" Usage="System.Data.DataRow.HasErrors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает значение, показывающее, есть ли ошибки в строке.</summary>
        <value>Значение <see langword="true" />, если строка содержит ошибку; в противном случае — значение <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `HasErrors` возвращает `true`, если какой-либо объект <xref:System.Data.DataColumn> в строке содержит ошибку, или если свойство <xref:System.Data.DataRow.RowError%2A> <xref:System.Data.DataRow> не является пустой строкой.  
  
 При проверке данных можно задать ошибку для любого столбца в строке. Такой столбец, отображаемый в элементе управления <xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType>, помечается красным восклицательным знаком, чтобы сообщить пользователю о том, что столбец находится в ошибке.  
  
 Используйте <xref:System.Data.DataRow.SetColumnError%2A>, чтобы задать ошибку для любого столбца.  
  
 Используйте методы <xref:System.Data.DataRow.GetColumnError%2A> и `GetColumnsInError`, чтобы возвращать столбцы с ошибками.  
  
 Метод <xref:System.Data.DataRow.ClearErrors%2A> удаляет все ошибки для строки.  
  
   
  
## Examples  
 В следующем примере для поиска ошибок используется <xref:System.Data.DataRow.HasErrors%2A>. Если строка содержит ошибки, то метод <xref:System.Data.DataRow.GetColumnsInError%2A> возвращает массив столбцов с ошибками, которые затем можно разрешить. Затем вызывается метод <xref:System.Data.DataRow.ClearErrors%2A> для очистки всех ошибок.  
  
 [!code-csharp[Classic WebData DataRow.HasErrors Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.HasErrors Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.HasErrors Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.HasErrors Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataRow.ClearErrors" />
        <altmember cref="T:System.Data.DataColumnCollection" />
        <altmember cref="M:System.Data.DataRow.GetColumnError(System.Int32)" />
        <altmember cref="M:System.Data.DataRow.GetColumnsInError" />
        <altmember cref="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="HasVersion">
      <MemberSignature Language="C#" Value="public bool HasVersion (System.Data.DataRowVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool HasVersion(valuetype System.Data.DataRowVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.HasVersion(System.Data.DataRowVersion)" />
      <MemberSignature Language="VB.NET" Value="Public Function HasVersion (version As DataRowVersion) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool HasVersion(System::Data::DataRowVersion version);" />
      <MemberSignature Language="F#" Value="member this.HasVersion : System.Data.DataRowVersion -&gt; bool" Usage="dataRow.HasVersion version" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <param name="version">Одно из значений <see cref="T:System.Data.DataRowVersion" />, указывающее версию строки.</param>
        <summary>Получает значение, показывающее, существует ли указанная версия.</summary>
        <returns>Значение <see langword="true" />, если версия существует; в противном случае — значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Дополнительные сведения см. в описании метода <xref:System.Data.DataRow.BeginEdit%2A>.  
  
   
  
## Examples  
 В следующем примере используется метод <xref:System.Data.DataRow.HasVersion%2A>, чтобы определить, совпадают ли текущее значение столбца и предлагаемое значение. Если это так, редактирование отменяется. В противном случае вызывается метод <xref:System.Data.DataRow.AcceptChanges%2A> для завершения редактирования.  
  
 [!code-vb[Classic WebData DataRow.HasVersion Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.HasVersion Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataTable.AcceptChanges" />
        <altmember cref="M:System.Data.DataRow.BeginEdit" />
        <altmember cref="M:System.Data.DataRow.CancelEdit" />
        <altmember cref="P:System.Data.DataRow.Item(System.Int32)" />
        <altmember cref="M:System.Data.DataRow.GetChildRows(System.String)" />
        <altmember cref="M:System.Data.DataRow.GetParentRows(System.String)" />
        <altmember cref="M:System.Data.DataRow.EndEdit" />
        <altmember cref="P:System.Data.DataRow.RowState" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsNull">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Получает значение, показывающее, содержит ли указанный столбец значение null.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsNull">
      <MemberSignature Language="C#" Value="public bool IsNull (System.Data.DataColumn column);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsNull(class System.Data.DataColumn column) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.IsNull(System.Data.DataColumn)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsNull (column As DataColumn) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsNull(System::Data::DataColumn ^ column);" />
      <MemberSignature Language="F#" Value="member this.IsNull : System.Data.DataColumn -&gt; bool" Usage="dataRow.IsNull column" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.Data.DataColumn" />
      </Parameters>
      <Docs>
        <param name="column">Объект <see cref="T:System.Data.DataColumn" />.</param>
        <summary>Получает значение, показывающее, содержит ли указанный объект <see cref="T:System.Data.DataColumn" /> значение null.</summary>
        <returns>Значение <see langword="true" />, если столбец содержит значение null; в противном случае — значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере каждый столбец каждой строки выводится на печать в каждой таблице <xref:System.Data.DataSet>. Если для строки задано значение null, значение не распечатывается.  
  
 [!code-vb[Classic WebData DataRow.IsNull2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.IsNull2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="column" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.Data.RowNotInTableException">Строка не принадлежит таблице.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsNull">
      <MemberSignature Language="C#" Value="public bool IsNull (int columnIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsNull(int32 columnIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.IsNull(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsNull (columnIndex As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsNull(int columnIndex);" />
      <MemberSignature Language="F#" Value="member this.IsNull : int -&gt; bool" Usage="dataRow.IsNull columnIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="columnIndex">Индекс столбца (с нуля).</param>
        <summary>Получает значение, показывающее, содержит ли столбец по указанному индексу значение null.</summary>
        <returns>Значение <see langword="true" />, если столбец содержит значение null; в противном случае — значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере значение столбца изменяется на значение null, а затем используется метод <xref:System.Data.DataRow.IsNull%2A>, чтобы определить, является ли значение нулевым.  
  
 [!code-vb[Classic WebData DataRow.IsNull Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.IsNull Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">Нет столбца, который соответствует индексу, определяемому <paramref name="columnIndex" />.</exception>
        <exception cref="T:System.Data.RowNotInTableException">Строка не принадлежит таблице.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsNull">
      <MemberSignature Language="C#" Value="public bool IsNull (string columnName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsNull(string columnName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.IsNull(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsNull (columnName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsNull(System::String ^ columnName);" />
      <MemberSignature Language="F#" Value="member this.IsNull : string -&gt; bool" Usage="dataRow.IsNull columnName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="columnName">Имя столбца.</param>
        <summary>Получает значение, показывающее, содержит ли названный столбец значение null.</summary>
        <returns>Значение <see langword="true" />, если столбец содержит значение null; в противном случае — значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере значение столбца изменяется на значение null, а затем используется метод <xref:System.Data.DataRow.IsNull%2A>, чтобы определить, является ли значение нулевым.  
  
 [!code-vb[Classic WebData DataRow.IsNull1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.IsNull1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Не удается найти столбец, указанный по значению <paramref name="columnName" />.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="columnName" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.Data.RowNotInTableException">Строка не принадлежит таблице.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsNull">
      <MemberSignature Language="C#" Value="public bool IsNull (System.Data.DataColumn column, System.Data.DataRowVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsNull(class System.Data.DataColumn column, valuetype System.Data.DataRowVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.IsNull(System.Data.DataColumn,System.Data.DataRowVersion)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsNull (column As DataColumn, version As DataRowVersion) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsNull(System::Data::DataColumn ^ column, System::Data::DataRowVersion version);" />
      <MemberSignature Language="F#" Value="member this.IsNull : System.Data.DataColumn * System.Data.DataRowVersion -&gt; bool" Usage="dataRow.IsNull (column, version)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.Data.DataColumn" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <param name="column">Объект <see cref="T:System.Data.DataColumn" />.</param>
        <param name="version">Одно из значений <see cref="T:System.Data.DataRowVersion" />, указывающее версию строки. Допустимые значения: <see langword="Default" />, <see langword="Original" />, <see langword="Current" /> и <see langword="Proposed" />.</param>
        <summary>Получает значение, показывающее, содержит ли указанные объекты <see cref="T:System.Data.DataColumn" /> и <see cref="T:System.Data.DataRowVersion" /> значение null.</summary>
        <returns>Значение <see langword="true" />, если столбец содержит значение null; в противном случае — значение <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="column" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.Data.RowNotInTableException">Строка не принадлежит таблице.</exception>
        <exception cref="T:System.Data.VersionNotFoundException">Строка не имеет запрошенного объекта <paramref name="version" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Возвращает или задает данные, сохраненные в указанном столбце.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[System.Data.DataColumn column] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(class System.Data.DataColumn)" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRow.Item(System.Data.DataColumn)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(column As DataColumn) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[System::Data::DataColumn ^] { System::Object ^ get(System::Data::DataColumn ^ column); void set(System::Data::DataColumn ^ column, System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(System.Data.DataColumn) : obj with get, set" Usage="System.Data.DataRow.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.Data.DataColumn" />
      </Parameters>
      <Docs>
        <param name="column">Значение типа <see cref="T:System.Data.DataColumn" />, содержащее данные.</param>
        <summary>Возвращает или задает данные, сохраненные в указанном объекте <see cref="T:System.Data.DataColumn" />.</summary>
        <value>Объект <see cref="T:System.Object" />, содержащий данные.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При задании свойства создается исключение, если в событии <xref:System.Data.DataTable.ColumnChanging> возникает исключение.  
  
 Если это мгновенное изменение, см. раздел <xref:System.Data.DataRow.EndEdit%2A> для исключений, которые могут быть созданы.  
  
   
  
## Examples  
 В следующих примерах демонстрируется использование свойства <xref:System.Data.DataRow.Item%2A> для получения и задания значения определенного индекса столбца. В первом примере возвращается значение первого столбца в любой строке, которую пользователь щелкает в элементе управления <xref:System.Windows.Forms.DataGrid>. Второй задает значение, передаваемое в качестве аргумента в метод.  
  
 [!code-vb[Classic WebData DataRow.this2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.this2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Столбец не принадлежит этой таблице.</exception>
        <exception cref="T:System.ArgumentNullException">Значением параметра <paramref name="column" /> является null.</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">Была предпринята попытка задать значение в удаленной строке.</exception>
        <exception cref="T:System.InvalidCastException">Типы данных значения и столбца не совпадают.</exception>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[int columnIndex] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRow.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(columnIndex As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[int] { System::Object ^ get(int columnIndex); void set(int columnIndex, System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : obj with get, set" Usage="System.Data.DataRow.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="columnIndex">Индекс столбца (с нуля).</param>
        <summary>Возвращает или задает данные, сохраненные в столбце, указанном по индексу.</summary>
        <value>Объект <see cref="T:System.Object" />, содержащий данные.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При задании свойства создается исключение, если в событии <xref:System.Data.DataTable.ColumnChanging> возникает исключение.  
  
 Если это изменение, см. раздел <xref:System.Data.DataRow.EndEdit%2A> для исключений, которые могут быть созданы.  
  
   
  
## Examples  
 В следующих примерах демонстрируется использование свойства <xref:System.Data.DataRow.Item%2A> для получения и задания значения определенного индекса столбца. В первом примере возвращается значение первого столбца в любой строке, которую пользователь щелкает в элементе управления <xref:System.Windows.Forms.DataGrid>.  
  
 [!code-csharp[Classic WebData DataRow.this Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.this Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.this Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.this Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">Происходит при попытке задать значение в удаленной строке.</exception>
        <exception cref="T:System.IndexOutOfRangeException">Аргумент <paramref name="columnIndex" /> вне диапазона.</exception>
        <exception cref="T:System.InvalidCastException">Происходит при задании значения, когда <see cref="T:System.Type" /> нового значения не совпадает со свойством <see cref="P:System.Data.DataColumn.DataType" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[string columnName] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRow.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(columnName As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[System::String ^] { System::Object ^ get(System::String ^ columnName); void set(System::String ^ columnName, System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : obj with get, set" Usage="System.Data.DataRow.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="columnName">Имя столбца.</param>
        <summary>Возвращает или задает данные, сохраненные в столбце, указанном по имени.</summary>
        <value>Объект <see cref="T:System.Object" />, содержащий данные.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При задании свойства создается исключение, если в событии <xref:System.Data.DataTable.ColumnChanging> возникает исключение.  
  
 Если это мгновенное изменение, см. раздел <xref:System.Data.DataRow.EndEdit%2A> для исключений, которые могут быть созданы.  
  
   
  
## Examples  
 В следующих примерах демонстрируется использование свойства <xref:System.Data.DataRow.Item%2A> для получения и задания значения определенного индекса столбца. В первом примере возвращается значение первого столбца в любой строке, которую пользователь щелкает в элементе управления <xref:System.Windows.Forms.DataGrid>. Второй задает значение, передаваемое в качестве аргумента в метод.  
  
 [!code-csharp[Classic WebData DataRow.this1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.this1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.this1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.this1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Не удается найти столбец, указанный по значению <paramref name="columnName" />.</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">Происходит при попытке задать значение в удаленной строке.</exception>
        <exception cref="T:System.InvalidCastException">Происходит при задании значения, когда <see cref="T:System.Type" /> нового значения не совпадает со свойством <see cref="P:System.Data.DataColumn.DataType" />.</exception>
        <exception cref="T:System.Data.NoNullAllowedException">Возникает попытке вставки значения null в столбец, где для свойства <see cref="P:System.Data.DataColumn.AllowDBNull" /> задано значение <see langword="false" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[System.Data.DataColumn column, System.Data.DataRowVersion version] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(class System.Data.DataColumn, valuetype System.Data.DataRowVersion)" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRow.Item(System.Data.DataColumn,System.Data.DataRowVersion)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(column As DataColumn, version As DataRowVersion) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[System::Data::DataColumn ^, System::Data::DataRowVersion] { System::Object ^ get(System::Data::DataColumn ^ column, System::Data::DataRowVersion version); };" />
      <MemberSignature Language="F#" Value="member this.Item(System.Data.DataColumn * System.Data.DataRowVersion) : obj" Usage="System.Data.DataRow.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.Data.DataColumn" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <param name="column">Объект <see cref="T:System.Data.DataColumn" />, содержащий сведения о столбце.</param>
        <param name="version">Одно из значений <see cref="T:System.Data.DataRowVersion" />, указывающее требуемую версию строки. Допустимые значения: <see langword="Default" />, <see langword="Original" />, <see langword="Current" /> и <see langword="Proposed" />.</param>
        <summary>Получает указанную версию данных, сохраненных в указанном объекте <see cref="T:System.Data.DataColumn" />.</summary>
        <value>Объект <see cref="T:System.Object" />, содержащий данные.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `version` не следует путать со свойством <xref:System.Data.DataRow.RowState*>. Аргумент `version` описывает состояние данных, содержащихся в столбце относительно исходного значения столбца.  
  
 При задании свойства создается исключение, если в событии <xref:System.Data.DataTable.ColumnChanging> возникает исключение.  
  
 Если это мгновенное изменение, см. раздел <xref:System.Data.DataRow.EndEdit%2A> для исключений, которые могут быть созданы.  
  
   
  
## Examples  
 В следующем примере показано получение текущего значения нажатой ячейки в элементе управления <xref:System.Windows.Forms.DataGrid>.  
  
 [!code-csharp[Classic WebData DataRow.this5 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.this5 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.this5 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.this5 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Столбец не принадлежит этой таблице.</exception>
        <exception cref="T:System.ArgumentNullException">Аргумент параметра <paramref name="column" /> содержит ноль.</exception>
        <exception cref="T:System.Data.VersionNotFoundException">Строка не содержит эту версию данных.</exception>
        <altmember cref="T:System.Data.DataRowVersion" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[int columnIndex, System.Data.DataRowVersion version] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(int32, valuetype System.Data.DataRowVersion)" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRow.Item(System.Int32,System.Data.DataRowVersion)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(columnIndex As Integer, version As DataRowVersion) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[int, System::Data::DataRowVersion] { System::Object ^ get(int columnIndex, System::Data::DataRowVersion version); };" />
      <MemberSignature Language="F#" Value="member this.Item(int * System.Data.DataRowVersion) : obj" Usage="System.Data.DataRow.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnIndex" Type="System.Int32" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <param name="columnIndex">Индекс столбца (с нуля).</param>
        <param name="version">Одно из значений <see cref="T:System.Data.DataRowVersion" />, указывающее требуемую версию строки. Допустимые значения: <see langword="Default" />, <see langword="Original" />, <see langword="Current" /> и <see langword="Proposed" />.</param>
        <summary>Получает данные, сохраненные в столбце, указанном по индексу и версии извлекаемых данных.</summary>
        <value>Объект <see cref="T:System.Object" />, содержащий данные.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Создать или обновить строку можно только после вызова метода <xref:System.Data.DataRow.BeginEdit%2A>. Аналогичным образом для фиксации изменения необходимо вызвать метод <xref:System.Data.DataRow.EndEdit%2A>. После вызова метода <xref:System.Data.DataRow.EndEdit%2A> и перед вызовом метода <xref:System.Data.DataRow.AcceptChanges%2A> сохраняются внутренние представления исходного и новых предложенных значений. Поэтому до вызова <xref:System.Data.DataRow.AcceptChanges%2A>можно использовать аргумент `version`, чтобы указать требуемую версию значения столбца: `DataRowVersion.Original` или `DataRowVersion.Proposed`. Однако, как только вы вызываете метод <xref:System.Data.DataRow.AcceptChanges%2A>, версия столбца возвращается к `DataRowVersion.Original`. Если строка является новой, можно также передать `DataRowVersion.Default` для параметра, чтобы получить значение столбца по умолчанию. При передаче `DataRowVersion.Current`свойство возвращает текущее значение, независимо от его версии.  
  
> [!NOTE]
>  Метод <xref:System.Data.DataRow.BeginEdit%2A> вызывается неявно при изменении значения элемента управления с привязкой к данным или при добавлении объекта <xref:System.Data.DataRow> в <xref:System.Data.DataRowCollection>. метод <xref:System.Data.DataRow.EndEdit%2A> вызывается неявно при вызове следующих методов: метод <xref:System.Data.DataRow.AcceptChanges%2A> объекта <xref:System.Data.DataRow>, метод <xref:System.Data.DataTable.AcceptChanges%2A> объекта <xref:System.Data.DataTable> или метод <xref:System.Data.DataRow.CancelEdit%2A>.  
  
 Напротив, перечисление <xref:System.Data.DataRowVersion> `Current` Возвращает версию данных после вызова метода <xref:System.Data.DataRow.EndEdit%2A>.  
  
 Аргумент `version` не следует путать со свойством <xref:System.Data.DataRow.RowState*>. Аргумент `version` описывает состояние данных, содержащихся в столбце относительно исходного значения столбца. Свойство <xref:System.Data.DataRow.RowState*> описывает состояние всей строки относительно ее родительского <xref:System.Data.DataTable>.  
  
 При задании свойства создается исключение, если в событии <xref:System.Data.DataTable.ColumnChanging> возникает исключение.  
  
 Если это мгновенное изменение, см. раздел <xref:System.Data.DataRow.EndEdit%2A> для исключений, которые могут быть созданы.  
  
   
  
## Examples  
 В следующем примере показано получение текущего значения столбца с помощью свойства <xref:System.Data.DataRow.Item%2A> объекта <xref:System.Data.DataRow>.  
  
 [!code-vb[Classic WebData DataRow.this3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.this3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">Аргумент <paramref name="columnIndex" /> вне диапазона.</exception>
        <exception cref="T:System.InvalidCastException">Типы данных значения и столбца не совпадают.</exception>
        <exception cref="T:System.Data.VersionNotFoundException">Строка не содержит эту версию данных.</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">Была предпринята попытка задать значение в удаленной строке.</exception>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[string columnName, System.Data.DataRowVersion version] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(string, valuetype System.Data.DataRowVersion)" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRow.Item(System.String,System.Data.DataRowVersion)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(columnName As String, version As DataRowVersion) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[System::String ^, System::Data::DataRowVersion] { System::Object ^ get(System::String ^ columnName, System::Data::DataRowVersion version); };" />
      <MemberSignature Language="F#" Value="member this.Item(string * System.Data.DataRowVersion) : obj" Usage="System.Data.DataRow.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnName" Type="System.String" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <param name="columnName">Имя столбца.</param>
        <param name="version">Одно из значений <see cref="T:System.Data.DataRowVersion" />, указывающее требуемую версию строки. Допустимые значения: <see langword="Default" />, <see langword="Original" />, <see langword="Current" /> и <see langword="Proposed" />.</param>
        <summary>Получает указанную версию данных, сохраненных в именованном столбце.</summary>
        <value>Объект <see cref="T:System.Object" />, содержащий данные.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Версию не следует путать со свойством <xref:System.Data.DataRow.RowState*>. Аргумент `version` описывает состояние данных, содержащихся в столбце относительно исходного значения столбца. Свойство <xref:System.Data.DataRow.RowState*> описывает состояние всей строки относительно ее родительского <xref:System.Data.DataTable>.  
  
 При задании свойства создается исключение, если в событии <xref:System.Data.DataTable.ColumnChanging> возникает исключение.  
  
 Если это мгновенное изменение, см. раздел <xref:System.Data.DataRow.EndEdit%2A> для исключений, которые могут быть созданы.  
  
   
  
## Examples  
 В следующем примере возвращается текущая версия данных в выделенной ячейке элемента управления <xref:System.Windows.Forms.DataGrid>.  
  
 [!code-csharp[Classic WebData DataRow.this4 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.this4 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.this4 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.this4 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Не удается найти столбец, указанный по значению <paramref name="columnName" />.</exception>
        <exception cref="T:System.InvalidCastException">Типы данных значения и столбца не совпадают.</exception>
        <exception cref="T:System.Data.VersionNotFoundException">Строка не содержит эту версию данных.</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">Строка была удалена.</exception>
        <altmember cref="T:System.Data.DataRowVersion" />
      </Docs>
    </Member>
    <Member MemberName="ItemArray">
      <MemberSignature Language="C#" Value="public object[] ItemArray { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object[] ItemArray" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRow.ItemArray" />
      <MemberSignature Language="VB.NET" Value="Public Property ItemArray As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Object ^&gt; ^ ItemArray { cli::array &lt;System::Object ^&gt; ^ get(); void set(cli::array &lt;System::Object ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ItemArray : obj[] with get, set" Usage="System.Data.DataRow.ItemArray" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает все значения для этой строки с помощью массива.</summary>
        <value>Массив типа <see cref="T:System.Object" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это свойство можно использовать для задания или получения значений для этой строки через массив. Если это свойство используется для задания значений, массив должен иметь тот же размер и порядок, что и коллекция столбцов. Передача `null` в <xref:System.Data.DataRow.ItemArray%2A> указывает, что значение не указано.  
  
 Пользователи могут создавать исключения в событии <xref:System.Data.DataTable.ColumnChanging> или <xref:System.Data.DataTable.RowChanging>.  
  
   
  
## Examples  
 В следующих примерах показано, как получить и задать значения с помощью свойства <xref:System.Data.DataRow.ItemArray%2A>.  
  
 [!code-csharp[Classic WebData DataRow.ItemArray Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.ItemArray Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.ItemArray Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.ItemArray Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Размер массива превышает число столбцов в таблице.</exception>
        <exception cref="T:System.InvalidCastException">Значение в массиве не соответствует его свойству <see cref="P:System.Data.DataColumn.DataType" /> в его соответствующем объекте <see cref="T:System.Data.DataColumn" />.</exception>
        <exception cref="T:System.Data.ConstraintException">Изменение привело к нарушению ограничения.</exception>
        <exception cref="T:System.Data.ReadOnlyException">При изменении была предпринята попытка изменить значение столбца, доступное только для чтения.</exception>
        <exception cref="T:System.Data.NoNullAllowedException">При изменении была предпринята попытка значение null в столбец, у которого свойство <see cref="P:System.Data.DataColumn.AllowDBNull" /> объекта <see cref="T:System.Data.DataColumn" /> имеет значение <see langword="false" />.</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">Строка была удалена.</exception>
        <altmember cref="M:System.Data.DataRow.AcceptChanges" />
        <altmember cref="P:System.Data.DataColumn.AutoIncrement" />
        <altmember cref="T:System.Data.DataColumn" />
      </Docs>
    </Member>
    <Member MemberName="RejectChanges">
      <MemberSignature Language="C#" Value="public void RejectChanges ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RejectChanges() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.RejectChanges" />
      <MemberSignature Language="VB.NET" Value="Public Sub RejectChanges ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RejectChanges();" />
      <MemberSignature Language="F#" Value="member this.RejectChanges : unit -&gt; unit" Usage="dataRow.RejectChanges " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Отменяет все изменения, внесенные в строку после последнего вызова метода <see cref="M:System.Data.DataRow.AcceptChanges" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При вызове метода <xref:System.Data.DataRow.RejectChanges%2A> метод <xref:System.Data.DataRow.CancelEdit%2A> вызывается неявно для отмены любых изменений. Если <xref:System.Data.DataRow.RowState*> удаляется или изменяется, строка возвращается к предыдущим значениям, а <xref:System.Data.DataRow.RowState*> становится неизменной. Если добавляется <xref:System.Data.DataRow.RowState*>, строка удаляется.  
  
   
  
## Examples  
 В следующем примере создается простой <xref:System.Data.DataTable> с двумя столбцами и 10 строками. После удаления нескольких <xref:System.Data.DataRow> элементов с помощью метода <xref:System.Data.DataRow.Delete%2A> одна из строк не удаляется путем вызова <xref:System.Data.DataRow.RejectChanges%2A>.  
  
 [!code-csharp[Classic WebData DataRow.Delete Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.Delete Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.Delete Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.Delete Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.RowNotInTableException">Строка не принадлежит таблице.</exception>
        <altmember cref="M:System.Data.DataRow.AcceptChanges" />
        <altmember cref="M:System.Data.DataRow.IsNull(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="RowError">
      <MemberSignature Language="C#" Value="public string RowError { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RowError" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRow.RowError" />
      <MemberSignature Language="VB.NET" Value="Public Property RowError As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RowError { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RowError : string with get, set" Usage="System.Data.DataRow.RowError" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает настраиваемое описание ошибки для строки.</summary>
        <value>Текст описания ошибки.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Использует свойство <xref:System.Data.DataRow.HasErrors%2A>, чтобы сначала определить, содержит ли <xref:System.Data.DataRow> ошибки.  
  
   
  
## Examples  
 В следующем примере задается текст сообщения об ошибке для десяти строк таблицы, отображаемой в элементе управления <xref:System.Windows.Forms.DataGrid>.  
  
 [!code-csharp[Classic WebData DataRow.RowError Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.RowError Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.RowError Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.RowError Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)" />
        <altmember cref="P:System.Data.DataSet.HasErrors" />
      </Docs>
    </Member>
    <Member MemberName="RowState">
      <MemberSignature Language="C#" Value="public System.Data.DataRowState RowState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.DataRowState RowState" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRow.RowState" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RowState As DataRowState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::DataRowState RowState { System::Data::DataRowState get(); };" />
      <MemberSignature Language="F#" Value="member this.RowState : System.Data.DataRowState" Usage="System.Data.DataRow.RowState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRowState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает текущее состояние строки, относящееся к ее отношению к коллекции <see cref="T:System.Data.DataRowCollection" />.</summary>
        <value>Одно из значений перечисления <see cref="T:System.Data.DataRowState" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Значение <xref:System.Data.DataRow.RowState*> зависит от двух факторов: типа операции, выполненной над строкой, и от того, была ли вызвана <xref:System.Data.DataRow.AcceptChanges%2A> на <xref:System.Data.DataRow>.  
  
   
  
## Examples  
 В следующем примере сначала создается новый <xref:System.Data.DataTable> с одним столбцом, а затем создается один <xref:System.Data.DataRow>. При создании, добавлении, изменении и удалении <xref:System.Data.DataRow> печатается его <xref:System.Data.DataRow.RowState*>.  
  
 [!code-csharp[Classic WebData DataRow.RowState Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.RowState Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.RowState Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.RowState Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataRow.AcceptChanges" />
        <altmember cref="M:System.Data.DataRow.BeginEdit" />
        <altmember cref="M:System.Data.DataRowCollection.Add(System.Data.DataRow)" />
        <altmember cref="M:System.Data.DataRow.CancelEdit" />
        <altmember cref="T:System.Data.DataTable" />
        <altmember cref="T:System.Data.DataRowView" />
        <altmember cref="M:System.Data.DataRow.Delete" />
        <altmember cref="M:System.Data.DataRow.EndEdit" />
        <altmember cref="M:System.Data.DataTable.NewRow" />
        <altmember cref="M:System.Data.DataRow.SetAdded" />
        <altmember cref="M:System.Data.DataRow.SetModified" />
      </Docs>
    </Member>
    <Member MemberName="SetAdded">
      <MemberSignature Language="C#" Value="public void SetAdded ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAdded() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.SetAdded" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetAdded ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAdded();" />
      <MemberSignature Language="F#" Value="member this.SetAdded : unit -&gt; unit" Usage="dataRow.SetAdded " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Изменяет значение свойства <see cref="P:System.Data.DataRow.RowState" /> объекта <see cref="T:System.Data.DataRow" /> на <see langword="Added" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Изменяет значение свойства <xref:System.Data.DataRow.RowState*> объекта <xref:System.Data.DataRow> на `Added`. Если текущая строка не находится ни в `Unchanged`е, ни в состоянии `Added`, она выдает <xref:System.InvalidOperationException> с сообщением, что `SetAdded` может быть вызвано только в экземпляре `DataRow`, в `RowState` `Unchanged`.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataRow.SetModified" />
        <altmember cref="P:System.Data.DataRow.RowState" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SetColumnError">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Задает описание ошибки для столбца.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetColumnError">
      <MemberSignature Language="C#" Value="public void SetColumnError (System.Data.DataColumn column, string error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetColumnError(class System.Data.DataColumn column, string error) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.SetColumnError(System.Data.DataColumn,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetColumnError (column As DataColumn, error As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetColumnError(System::Data::DataColumn ^ column, System::String ^ error);" />
      <MemberSignature Language="F#" Value="member this.SetColumnError : System.Data.DataColumn * string -&gt; unit" Usage="dataRow.SetColumnError (column, error)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.Data.DataColumn" />
        <Parameter Name="error" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="column">Объект <see cref="T:System.Data.DataColumn" />, для которого задается описание ошибки.</param>
        <param name="error">Описание ошибки.</param>
        <summary>Задает описание ошибки для столбца, указанного как <see cref="T:System.Data.DataColumn" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Чтобы просмотреть описания ошибок, используйте метод <xref:System.Data.DataRow.GetColumnError%2A>.  
  
 Чтобы определить, существуют ли какие либо ошибки для коллекции Columns, используйте свойство <xref:System.Data.DataRow.HasErrors%2A>. Следовательно, можно использовать метод <xref:System.Data.DataRow.GetColumnsInError%2A> для получения всех столбцов с ошибками.  
  
 Если в качестве параметра `error` передается `null` или пустая строка, <xref:System.Data.DataRow> ведет себя так, как если бы ошибки не было задано, а свойство <xref:System.Data.DataRow.HasErrors%2A> возвращает значение false.  
  
 Чтобы задать пользовательское описание ошибки для всей строки, используйте свойство <xref:System.Data.DataRow.RowError%2A>.  
  
 Чтобы определить, существуют ли какие либо ошибки для коллекции Columns, используйте метод <xref:System.Data.DataRow.HasErrors%2A>.  
  
 Чтобы очистить все ошибки для коллекции Columns, используйте метод <xref:System.Data.DataRow.ClearErrors%2A>.  
  
   
  
## Examples  
 В следующем примере задается описание ошибки для указанного <xref:System.Data.DataRow>.  
  
 [!code-csharp[Classic WebData DataRow.SetColumnError Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.SetColumnError Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataRow.ClearErrors" />
        <altmember cref="T:System.Data.DataColumnCollection" />
        <altmember cref="M:System.Data.DataColumnCollection.Contains(System.String)" />
        <altmember cref="T:System.Data.DataColumn" />
        <altmember cref="M:System.Data.DataRow.GetColumnsInError" />
        <altmember cref="P:System.Data.DataRow.HasErrors" />
        <altmember cref="P:System.Data.DataRow.RowError" />
      </Docs>
    </Member>
    <Member MemberName="SetColumnError">
      <MemberSignature Language="C#" Value="public void SetColumnError (int columnIndex, string error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetColumnError(int32 columnIndex, string error) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetColumnError (columnIndex As Integer, error As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetColumnError(int columnIndex, System::String ^ error);" />
      <MemberSignature Language="F#" Value="member this.SetColumnError : int * string -&gt; unit" Usage="dataRow.SetColumnError (columnIndex, error)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnIndex" Type="System.Int32" />
        <Parameter Name="error" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="columnIndex">Индекс столбца (с нуля).</param>
        <param name="error">Описание ошибки.</param>
        <summary>Задает описание ошибки для столбца, указанного по индексу.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод используется для задания пользовательских описаний ошибок для указанных столбцов. Для вывода текста ошибки можно использовать элемент управления <xref:System.Windows.Forms.ErrorProvider>.  
  
 Чтобы просмотреть описания ошибок, используйте метод <xref:System.Data.DataRow.GetColumnError%2A>.  
  
 Чтобы определить, существуют ли какие либо ошибки для коллекции Columns, используйте свойство <xref:System.Data.DataRow.HasErrors%2A>. Следовательно, можно использовать метод <xref:System.Data.DataRow.GetColumnsInError%2A> для получения всех столбцов с ошибками.  
  
 Если в качестве параметра `error` передается `null` или пустая строка, <xref:System.Data.DataRow> ведет себя так, как если бы ошибки не было задано, а свойство <xref:System.Data.DataRow.HasErrors%2A> возвращает значение false.  
  
 Чтобы задать пользовательское описание ошибки для всей строки, используйте свойство <xref:System.Data.DataRow.RowError%2A>.  
  
 Чтобы очистить все ошибки для коллекции Columns, используйте метод <xref:System.Data.DataRow.ClearErrors%2A>.  
  
 Чтобы задать текст ошибки, который применяется ко всей строке, задайте свойство <xref:System.Data.DataRow.RowError%2A>.  
  
   
  
## Examples  
 В следующем примере задается описание ошибки для указанного <xref:System.Data.DataRow>.  
  
 [!code-csharp[Classic WebData DataRow.SetColumnError Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.SetColumnError Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">Аргумент <paramref name="columnIndex" /> вне диапазона</exception>
        <altmember cref="M:System.Data.DataRow.ClearErrors" />
        <altmember cref="T:System.Data.DataColumnCollection" />
        <altmember cref="M:System.Data.DataColumnCollection.Contains(System.String)" />
        <altmember cref="T:System.Data.DataColumn" />
        <altmember cref="M:System.Data.DataRow.GetColumnsInError" />
        <altmember cref="P:System.Data.DataRow.HasErrors" />
        <altmember cref="P:System.Data.DataRow.RowError" />
      </Docs>
    </Member>
    <Member MemberName="SetColumnError">
      <MemberSignature Language="C#" Value="public void SetColumnError (string columnName, string error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetColumnError(string columnName, string error) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.SetColumnError(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetColumnError (columnName As String, error As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetColumnError(System::String ^ columnName, System::String ^ error);" />
      <MemberSignature Language="F#" Value="member this.SetColumnError : string * string -&gt; unit" Usage="dataRow.SetColumnError (columnName, error)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnName" Type="System.String" />
        <Parameter Name="error" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="columnName">Имя столбца.</param>
        <param name="error">Описание ошибки.</param>
        <summary>Задает описание ошибки для столбца, указанного по имени.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Имя столбца задается свойством <xref:System.Data.DataColumn.ColumnName%2A> класса <xref:System.Data.DataColumn>.  
  
 Чтобы просмотреть описания ошибок, используйте метод <xref:System.Data.DataRow.GetColumnError%2A>.  
  
 Чтобы определить, существуют ли какие либо ошибки для коллекции Columns, используйте свойство <xref:System.Data.DataRow.HasErrors%2A>. Следовательно, можно использовать метод <xref:System.Data.DataRow.GetColumnsInError%2A> для получения всех столбцов с ошибками.  
  
 Если в качестве параметра `error` передается `null` или пустая строка, <xref:System.Data.DataRow> ведет себя так, как если бы ошибки не было задано, а свойство <xref:System.Data.DataRow.HasErrors%2A> возвращает значение false.  
  
 Чтобы задать пользовательское описание ошибки для всей строки, используйте свойство <xref:System.Data.DataRow.RowError%2A>.  
  
 Чтобы определить, существуют ли какие либо ошибки для коллекции Columns, используйте метод <xref:System.Data.DataRow.HasErrors%2A>.  
  
 Чтобы очистить все ошибки для коллекции Columns, используйте метод <xref:System.Data.DataRow.ClearErrors%2A>.  
  
   
  
## Examples  
 В следующем примере задается описание ошибки для указанного <xref:System.Data.DataRow>.  
  
 [!code-csharp[Classic WebData DataRow.SetColumnError Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.SetColumnError Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataRow.ClearErrors" />
        <altmember cref="T:System.Data.DataColumnCollection" />
        <altmember cref="M:System.Data.DataColumnCollection.Contains(System.String)" />
        <altmember cref="T:System.Data.DataColumn" />
        <altmember cref="M:System.Data.DataRow.GetColumnsInError" />
        <altmember cref="P:System.Data.DataRow.HasErrors" />
        <altmember cref="P:System.Data.DataRow.RowError" />
      </Docs>
    </Member>
    <Member MemberName="SetModified">
      <MemberSignature Language="C#" Value="public void SetModified ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetModified() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.SetModified" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetModified ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetModified();" />
      <MemberSignature Language="F#" Value="member this.SetModified : unit -&gt; unit" Usage="dataRow.SetModified " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Изменяет значение свойства <see cref="P:System.Data.DataRow.RowState" /> объекта <see cref="T:System.Data.DataRow" /> на <see langword="Modified" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Изменяет значение свойства <xref:System.Data.DataRow.RowState*> объекта <xref:System.Data.DataRow> на `Modified`. Если текущая строка не находится ни в `Unchanged`е, ни в состоянии `Added`, она выдает <xref:System.InvalidOperationException> с сообщением, что `SetModified` может быть вызвано только в экземпляре `DataRow`, в `RowState` `Unchanged`.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataRow.SetAdded" />
        <altmember cref="P:System.Data.DataRow.RowState" />
      </Docs>
    </Member>
    <Member MemberName="SetNull">
      <MemberSignature Language="C#" Value="protected void SetNull (System.Data.DataColumn column);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetNull(class System.Data.DataColumn column) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.SetNull(System.Data.DataColumn)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SetNull (column As DataColumn)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SetNull(System::Data::DataColumn ^ column);" />
      <MemberSignature Language="F#" Value="member this.SetNull : System.Data.DataColumn -&gt; unit" Usage="dataRow.SetNull column" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.Data.DataColumn" />
      </Parameters>
      <Docs>
        <param name="column">Объект <see cref="T:System.Data.DataColumn" />.</param>
        <summary>Задает значение null указанному параметру <see cref="T:System.Data.DataColumn" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте метод <xref:System.Data.DataRow.IsNull%2A>, чтобы определить, содержит ли столбец значение null.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetParentRow">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Задает родительскую строку объекта <see cref="T:System.Data.DataRow" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetParentRow">
      <MemberSignature Language="C#" Value="public void SetParentRow (System.Data.DataRow parentRow);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetParentRow(class System.Data.DataRow parentRow) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.SetParentRow(System.Data.DataRow)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetParentRow (parentRow As DataRow)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetParentRow(System::Data::DataRow ^ parentRow);" />
      <MemberSignature Language="F#" Value="member this.SetParentRow : System.Data.DataRow -&gt; unit" Usage="dataRow.SetParentRow parentRow" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parentRow" Type="System.Data.DataRow" />
      </Parameters>
      <Docs>
        <param name="parentRow">Новый родительский объект <see cref="T:System.Data.DataRow" />.</param>
        <summary>Задает родительскую строку <see cref="T:System.Data.DataRow" /> с указанным новым родительским объектом <see cref="T:System.Data.DataRow" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetParentRow">
      <MemberSignature Language="C#" Value="public void SetParentRow (System.Data.DataRow parentRow, System.Data.DataRelation relation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetParentRow(class System.Data.DataRow parentRow, class System.Data.DataRelation relation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.SetParentRow(System.Data.DataRow,System.Data.DataRelation)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetParentRow (parentRow As DataRow, relation As DataRelation)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetParentRow(System::Data::DataRow ^ parentRow, System::Data::DataRelation ^ relation);" />
      <MemberSignature Language="F#" Value="member this.SetParentRow : System.Data.DataRow * System.Data.DataRelation -&gt; unit" Usage="dataRow.SetParentRow (parentRow, relation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parentRow" Type="System.Data.DataRow" />
        <Parameter Name="relation" Type="System.Data.DataRelation" />
      </Parameters>
      <Docs>
        <param name="parentRow">Новый родительский объект <see cref="T:System.Data.DataRow" />.</param>
        <param name="relation">Отношение <see cref="T:System.Data.DataRelation" /> для использования.</param>
        <summary>Задает родительскую строку <see cref="T:System.Data.DataRow" /> с указанными новыми родительскими объектами <see cref="T:System.Data.DataRow" /> и <see cref="T:System.Data.DataRelation" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере задается родительская строка определенной дочерней строки.  
  
 [!code-vb[Classic WebData DataRow.SetParentRow1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.SetParentRow1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.RowNotInTableException">Одна из строк не принадлежит таблице.</exception>
        <exception cref="T:System.ArgumentNullException">Одна из строк имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Отношение не принадлежит коллекции <see cref="T:System.Data.DataRelationCollection" /> объекта <see cref="T:System.Data.DataSet" />.</exception>
        <exception cref="T:System.Data.InvalidConstraintException">Дочернее отношение <see cref="T:System.Data.DataTable" /> не является таблицей, которой принадлежит эта строка.</exception>
      </Docs>
    </Member>
    <Member MemberName="Table">
      <MemberSignature Language="C#" Value="public System.Data.DataTable Table { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.DataTable Table" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRow.Table" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Table As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::DataTable ^ Table { System::Data::DataTable ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Table : System.Data.DataTable" Usage="System.Data.DataRow.Table" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает объект <see cref="T:System.Data.DataTable" />, для которого эта строка имеет схему.</summary>
        <value>Объект <see cref="T:System.Data.DataTable" />, которому принадлежит эта строка.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.DataRow> не обязательно относится к коллекции строк какой-либо таблицы. Такое поведение возникает, когда <xref:System.Data.DataRow> был создан, но не добавлен в <xref:System.Data.DataRowCollection>. Если свойство <xref:System.Data.DataRow.RowState*> возвращает `DataRowState.Detached`, строка не находится ни в одной коллекции.  
  
   
  
## Examples  
 В следующем примере свойство <xref:System.Data.DataRow.Table%2A> используется для возвращения ссылки на коллекцию Columns <xref:System.Data.DataTable>.  
  
 [!code-csharp[Classic WebData DataRow.Table Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.Table Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.Table Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.Table Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Data.DataColumnCollection" />
        <altmember cref="T:System.Data.DataTable" />
      </Docs>
    </Member>
  </Members>
</Type>
