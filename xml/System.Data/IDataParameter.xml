<Type Name="IDataParameter" FullName="System.Data.IDataParameter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="bb507198ca6abf7062bbe907899c985b94fab73a" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69367252" /></Metadata><TypeSignature Language="C#" Value="public interface IDataParameter" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDataParameter" />
  <TypeSignature Language="DocId" Value="T:System.Data.IDataParameter" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDataParameter" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDataParameter" />
  <TypeSignature Language="F#" Value="type IDataParameter = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Представляет параметр, относящийся к объекту Command, и при необходимости его сопоставление со столбцами <see cref="T:System.Data.DataSet" />. Реализация осуществляется с помощью поставщиков данных .NET Framework, которые обращаются к источникам данных.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.IDataParameter> Интерфейс позволяет наследующему классу реализовать класс параметра, который представляет параметр для командного объекта. Дополнительные сведения о классах параметров см. в разделе [Настройка параметров и типов данных параметров](~/docs/framework/data/adonet/configuring-parameters-and-parameter-data-types.md).  
  
 Приложение не создает экземпляр <xref:System.Data.IDataParameter> интерфейса напрямую, но создает экземпляр класса, который <xref:System.Data.IDataParameter>наследует.  
  
 Классы, наследующие <xref:System.Data.IDataParameter> , должны реализовывать унаследованные члены и, как правило, определяют дополнительные члены для добавления функций, зависящих от поставщика. Например, <xref:System.Data.IDataParameter> интерфейс <xref:System.Data.IDataParameter.DbType%2A> определяет свойство. В свою очередь, <xref:System.Data.OleDb.OleDbParameter> класс наследует это свойство, а также <xref:System.Data.OleDb.OleDbParameter.OleDbType%2A> определяет свойство.  
  
   
  
## Examples  
 В следующем примере создается несколько экземпляров производного класса <xref:System.Data.SqlClient.SqlParameter>с <xref:System.Data.SqlClient.SqlParameterCollection> помощью коллекции в <xref:System.Data.SqlClient.SqlDataAdapter>. Эти параметры используются для выбора данных из источника данных и размещения данных в <xref:System.Data.DataSet>. В этом примере предполагается <xref:System.Data.DataSet> , что <xref:System.Data.SqlClient.SqlDataAdapter> объект и уже были созданы с соответствующей схемой, командами и соединением.  
  
 [!code-csharp[Classic WebData SqlParameter Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlParameter Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlParameter Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlParameter Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para>Чтобы обеспечить согласованность между .NET Framework поставщиками данных, назовите класс-наследник в <paramref name="Prv" /> параметре <paramref name="Prv" /> Form, где — это универсальный префикс, присваиваемый всем классам в определенном пространстве имен поставщика данных .NET Framework. Например, <paramref name="Sql" /> является префиксом <see cref="T:System.Data.SqlClient.SqlCommand" /> класса в <see langword="System.Data.SqlClient" /> пространстве имен.  
  
При наследовании от <see cref="T:System.Data.IDataParameter" /> интерфейса необходимо реализовать следующие конструкторы: 
 <list type="table"><listheader><term> Элемент 
 </term><description> Описание 
 </description></listheader><item><term> Првпараметер () 
 </term><description> Инициализирует новый экземпляр класса Parameter.  
  
 </description></item><item><term> Првпараметер (имя строки, тип данных Првдбтипе) 
 </term><description> Инициализирует новый экземпляр класса Parameter с именем параметра и типом данных.  
  
 </description></item><item><term> Првпараметер (строковое имя, значение объекта) 
 </term><description> Инициализирует новый экземпляр класса Parameter с именем параметра и объектом, который является значением параметра.  
  
 </description></item><item><term> Првпараметер (строковое имя, тип данных Првдбтипе, размер int) 
 </term><description> Инициализирует новый экземпляр класса Parameter, используя имя параметра, тип данных и ширину.  
  
 </description></item><item><term> Првпараметер (строковое имя, тип данных Првдбтипе, размер int, строка srcColumn) 
 </term><description> Инициализирует новый экземпляр класса DbParameter, используя имя параметра, тип данных, ширину и имя исходного столбца.  
  
 </description></item><item><term> Првпараметер (строка parameterName, Првдбтипе dbType, размер int, Параметердиректион, логическое значение, null, точность байт, масштаб в байтах, строка srcColumn, DataRowVersion Сркверсион, значение объекта) 
 </term><description> Инициализирует новый экземпляр <see cref="T:System.Data.OleDb.OleDbParameter" /> класса с именем параметра, типом данных, шириной, именем исходного столбца, направлением параметра, числовой точностью и другими свойствами.  
  
 </description></item></list></para></block>
  </Docs>
  <Members>
    <Member MemberName="DbType">
      <MemberSignature Language="C#" Value="public System.Data.DbType DbType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.DbType DbType" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDataParameter.DbType" />
      <MemberSignature Language="VB.NET" Value="Public Property DbType As DbType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::DbType DbType { System::Data::DbType get(); void set(System::Data::DbType value); };" />
      <MemberSignature Language="F#" Value="member this.DbType : System.Data.DbType with get, set" Usage="System.Data.IDataParameter.DbType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DbType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или устанавливает тип <see cref="T:System.Data.DbType" /> параметра.</summary>
        <value>Одно из значений перечисления <see cref="T:System.Data.DbType" />. Значение по умолчанию — <see cref="F:System.Data.DbType.String" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Првдбтипе (где Prv представляет префикс, зависящий от поставщика) и <xref:System.Data.SqlClient.SqlParameter.DbType%2A> являются связанными. Поэтому при установке <xref:System.Data.SqlClient.SqlParameter.DbType%2A> для првдбтипе изменяется поддерживающий првдбтипе.  
  
 Список поддерживаемых типов данных см. в подходящем .NET Framework члене Првдбтипе поставщика данных. Дополнительные сведения см. в разделе [Параметры DataAdapter](~/docs/framework/data/adonet/dataadapter-parameters.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Свойству не задано допустимое значение <see cref="T:System.Data.DbType" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Direction">
      <MemberSignature Language="C#" Value="public System.Data.ParameterDirection Direction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.ParameterDirection Direction" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDataParameter.Direction" />
      <MemberSignature Language="VB.NET" Value="Public Property Direction As ParameterDirection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::ParameterDirection Direction { System::Data::ParameterDirection get(); void set(System::Data::ParameterDirection value); };" />
      <MemberSignature Language="F#" Value="member this.Direction : System.Data.ParameterDirection with get, set" Usage="System.Data.IDataParameter.Direction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.ParameterDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, определяющее, предназначен ли параметр только для ввода, только для вывода, является ли он двунаправленным или возвращается хранимой процедурой.</summary>
        <value>Одно из значений <see cref="T:System.Data.ParameterDirection" />. Значение по умолчанию — <see langword="Input" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если параметр <xref:System.Data.ParameterDirection> является выходным и выполнение связанного <xref:System.Data.SqlClient.SqlCommand> объекта не возвращает значение, то <xref:System.Data.IDataParameter> содержит значение null.  
  
 После считывания `Output` `InputOut`последней строки из последнего набора результатов происходит обновление параметров,, и `ReturnValue` .  
  
   
  
## Examples  
 В следующем примере создается экземпляр реализующего класса, <xref:System.Data.SqlClient.SqlParameter>а также задаются некоторые его свойства.  
  
 [!code-csharp[Classic WebData SqlParameter.Direction Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlParameter.Direction Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlParameter.Direction Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlParameter.Direction Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Для свойства не задано одно из допустимых значений типа <see cref="T:System.Data.ParameterDirection" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsNullable">
      <MemberSignature Language="C#" Value="public bool IsNullable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNullable" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDataParameter.IsNullable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsNullable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNullable { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsNullable : bool" Usage="System.Data.IDataParameter.IsNullable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает значение, определяющее, может ли параметр принимать значения null.</summary>
        <value><see langword="true" />, если допускаются значения null. В противном случае — <see langword="false" />. Значение по умолчанию — <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Значения NULL обрабатываются с <xref:System.DBNull> помощью класса.  
  
   
  
## Examples  
 В следующем примере создается экземпляр реализующего класса, <xref:System.Data.SqlClient.SqlParameter>а также задаются некоторые его свойства.  
  
 [!code-csharp[Classic WebData SqlParameter.IsNullable Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlParameter.IsNullable Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlParameter.IsNullable Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlParameter.IsNullable Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParameterName">
      <MemberSignature Language="C#" Value="public string ParameterName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ParameterName" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDataParameter.ParameterName" />
      <MemberSignature Language="VB.NET" Value="Public Property ParameterName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ParameterName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ParameterName : string with get, set" Usage="System.Data.IDataParameter.ParameterName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает имя таблицы для объекта <see cref="T:System.Data.IDataParameter" />.</summary>
        <value>Имя <see cref="T:System.Data.IDataParameter" />. Значение по умолчанию - пустая строка.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

 Указывается в формате \@ *paramName*. <xref:System.Data.IDataParameter.ParameterName%2A> Перед выполнением <xref:System.Data.IDataParameter.ParameterName%2A> команды, использующей параметры, необходимо задать значение.  
  
   
  
## Examples  
 В следующем примере создается экземпляр реализующего класса, <xref:System.Data.SqlClient.SqlParameter>а также задаются некоторые его свойства.  
  
 [!code-csharp[Classic WebData SqlParameter.ParameterName Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlParameter.ParameterName Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlParameter.ParameterName Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlParameter.ParameterName Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceColumn">
      <MemberSignature Language="C#" Value="public string SourceColumn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SourceColumn" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDataParameter.SourceColumn" />
      <MemberSignature Language="VB.NET" Value="Public Property SourceColumn As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SourceColumn { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SourceColumn : string with get, set" Usage="System.Data.IDataParameter.SourceColumn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает имя исходного столбца, сопоставленного с <see cref="T:System.Data.DataSet" /> и используемого для загрузки или возвращения значения <see cref="P:System.Data.IDataParameter.Value" />.</summary>
        <value>Имя исходного столбца, сопоставленного с <see cref="T:System.Data.DataSet" />. Значение по умолчанию - пустая строка.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ссылка между значением <xref:System.Data.IDataParameter> <xref:System.Data.DataTable> и может быть двунаправленной в зависимости от значения <xref:System.Data.IDataParameter.Direction%2A> свойства.  
  
   
  
## Examples  
 В следующем примере создается экземпляр реализующего класса, <xref:System.Data.SqlClient.SqlParameter>а также задаются некоторые его свойства.  
  
 [!code-csharp[Classic WebData SqlParameter.SourceColumn Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlParameter.SourceColumn Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlParameter.SourceColumn Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlParameter.SourceColumn Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceVersion">
      <MemberSignature Language="C#" Value="public System.Data.DataRowVersion SourceVersion { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.DataRowVersion SourceVersion" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDataParameter.SourceVersion" />
      <MemberSignature Language="VB.NET" Value="Public Property SourceVersion As DataRowVersion" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::DataRowVersion SourceVersion { System::Data::DataRowVersion get(); void set(System::Data::DataRowVersion value); };" />
      <MemberSignature Language="F#" Value="member this.SourceVersion : System.Data.DataRowVersion with get, set" Usage="System.Data.IDataParameter.SourceVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRowVersion</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение <see cref="T:System.Data.DataRowVersion" /> при загрузке <see cref="P:System.Data.IDataParameter.Value" />.</summary>
        <value>Одно из значений <see cref="T:System.Data.DataRowVersion" />. Значение по умолчанию — <see langword="Current" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это свойство используется объектом <xref:System.Data.IDbDataAdapter.UpdateCommand%2A> во время, <xref:System.Data.Common.DbDataAdapter.Update%2A> чтобы определить, используется ли исходное или текущее значение для значения параметра. Это позволяет обновлять первичные ключи. Это свойство игнорируется <xref:System.Data.IDbDataAdapter.InsertCommand%2A> и <xref:System.Data.IDbDataAdapter.DeleteCommand%2A>. Для этого свойства <xref:System.Data.DataRow> задана версия, используемая <xref:System.Data.DataRow.Item%2A> свойством, <xref:System.Data.DataRow> или <xref:System.Data.DataRow.GetChildRows%2A> метод объекта.  
  
   
  
## Examples  
 В следующем примере создается экземпляр реализующего класса, <xref:System.Data.SqlClient.SqlParameter>а также задаются некоторые его свойства.  
  
 [!code-csharp[Classic WebData SqlParameter.SourceVersion Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlParameter.SourceVersion Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlParameter.SourceVersion Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlParameter.SourceVersion Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Для свойства не задано одно из допустимых значений типа <see cref="T:System.Data.DataRowVersion" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public object Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Value" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDataParameter.Value" />
      <MemberSignature Language="VB.NET" Value="Public Property Value As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Value { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Value : obj with get, set" Usage="System.Data.IDataParameter.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение параметра.</summary>
        <value>Объект <see cref="T:System.Object" />, который является значением параметра. Значение по умолчанию — null.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Для входных параметров значение привязывается <xref:System.Data.IDbCommand> к объекту, отправляемому на сервер. Для выходных и возвращаемых параметров значение задается при завершении <xref:System.Data.IDbCommand> и <xref:System.Data.IDataReader> после закрытия.  
  
 При отправке на сервер значения параметра NULL пользователь должен указать `DBNull`значение, а не NULL. В системе значение null - это пустой объект, не имеющий значения. Для представления значений null используется тип`DBNull` .  
  
 Если в приложении указан тип базы данных, то связанное значение преобразуется в этот тип, когда поставщик отправляет данные на сервер. Поставщик пытается преобразовать любой тип значения, если он поддерживает <xref:System.IConvertible> интерфейс. Ошибки преобразования могут возникать, если указанный тип несовместим со значением.  
  
 <xref:System.Data.SqlClient.SqlParameter.Value%2A> Свойство <xref:System.Data.Common.DbDataAdapter.Update%2A>перезаписывается.  
  
   
  
## Examples  
 В следующем примере создается экземпляр реализующего класса, <xref:System.Data.SqlClient.SqlParameter>а также задаются некоторые его свойства.  
  
 [!code-csharp[Classic WebData SqlParameter.Value Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlParameter.Value Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlParameter.Value Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlParameter.Value Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
