<Type Name="DataRowExtensions" FullName="System.Data.DataRowExtensions">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ab784645b43a7fbc4bb30faf3f2a404baf5ce614" /><Meta Name="ms.sourcegitcommit" Value="2767b5903996fbd7e2b81eda1114dfc9d0d9db63" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="05/02/2019" /><Meta Name="ms.locfileid" Value="65006349" /></Metadata><TypeSignature Language="C#" Value="public static class DataRowExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit DataRowExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.DataRowExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module DataRowExtensions" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataRowExtensions abstract sealed" />
  <TypeSignature Language="F#" Value="type DataRowExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Определяет методы расширения для класса <see cref="T:System.Data.DataRow" />. Этот класс является статическим.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 API расширен с помощью двух новых методов <xref:System.Data.DataRow> класса, <xref:System.Data.DataRowExtensions.Field%2A> и <xref:System.Data.DataRowExtensions.SetField%2A>. <xref:System.Data.DataSet> Их можно использовать для формирования [!INCLUDE[vbteclinqext](~/includes/vbteclinqext-md.md)] выражений и запросов методов к <xref:System.Data.DataTable> объектам. Они являются рекомендуемыми методами для доступа к значениям столбцов [!INCLUDE[vbteclinqext](~/includes/vbteclinqext-md.md)] в выражениях и запросах методов. Дополнительные сведения см. в разделе [универсальные методы полей и SetField](~/docs/framework/data/adonet/generic-field-and-setfield-methods-linq-to-dataset.md).  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="Field&lt;T&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Обеспечивает строго типизированный доступ к каждому значению столбца в строке <see cref="T:System.Data.DataRow" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Field&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T Field&lt;T&gt; (this System.Data.DataRow row, System.Data.DataColumn column);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T Field&lt;T&gt;(class System.Data.DataRow row, class System.Data.DataColumn column) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Field(Of T) (row As DataRow, column As DataColumn) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T Field(System::Data::DataRow ^ row, System::Data::DataColumn ^ column);" />
      <MemberSignature Language="F#" Value="static member Field : System.Data.DataRow * System.Data.DataColumn -&gt; 'T" Usage="System.Data.DataRowExtensions.Field (row, column)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="row" Type="System.Data.DataRow" RefType="this" />
        <Parameter Name="column" Type="System.Data.DataColumn" />
      </Parameters>
      <Docs>
        <typeparam name="T">Общий параметр, в котором указывается тип возвращаемого значения для этого столбца.</typeparam>
        <param name="row">Входной объект <see cref="T:System.Data.DataRow" />, действующий для метода расширения как экземпляр <see langword="this" />.</param>
        <param name="column">Объект входа <see cref="T:System.Data.DataColumn" />, в котором указывается столбец, значение которого следует возвратить.</param>
        <summary>Обеспечивает строго типизированный доступ к каждому значению столбца в указанной строке. Метод <see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn)" /> также поддерживает типы, допускающие значения null.</summary>
        <returns>Значение типа <paramref name="T" /> столбца <see cref="T:System.Data.DataColumn" />, определенного именем <paramref name="column" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Класс представляет значения **null** с помощью <xref:System.DBNull.Value> экземпляра <xref:System.DBNull> класса. <xref:System.Data.DataSet>  Выражение, которое обращается к столбцу **** со <xref:System.InvalidCastException> значением NULL, будет формировать во время выполнения. [!INCLUDE[vbteclinqext](~/includes/vbteclinqext-md.md)] Кроме того <xref:System.Data.DataSet> , не поддерживает типы, допускающие значение null. <xref:System.Data.DataRowExtensions.Field%2A> Метод обеспечивает поддержку доступа к столбцам как к типам, допускающим значение null.  Если базовое значение в <xref:System.Data.DataSet> равно <xref:System.DBNull.Value>, возвращаемый тип Nullable будет иметь значение **null**.  
  
 Если значение указанного <xref:System.Data.DataColumn> параметра равно <xref:System.DBNull.Value> , а `T` является ссылочным типом или типом, допускающим значение null, то возвращаемый тип будет **равен нулю**. Метод <xref:System.Data.DataRowExtensions.Field%2A> не будет возвращать <xref:System.DBNull.Value>значение.  
  
 <xref:System.Data.DataRowExtensions.Field%2A> Метод не выполняет преобразования типов. Если требуется преобразование типа, сначала необходимо получить значение столбца с помощью <xref:System.Data.DataRowExtensions.Field%2A> метода. Значение столбца должно быть преобразовано в другой тип.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">Тип значений соответствующего столбца не должен быть приведен к типу, заданному параметром универсального типа <paramref name="T" />.</exception>
        <exception cref="T:System.IndexOutOfRangeException">Столбец, определенный именем <paramref name="column" />, не находится в таблице <see cref="T:System.Data.DataTable" />, частью которой является строка <see cref="T:System.Data.DataRow" />.</exception>
        <exception cref="T:System.NullReferenceException">Значение **null** было назначено типу, не поддерживающему значения null.</exception>
      </Docs>
    </Member>
    <Member MemberName="Field&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T Field&lt;T&gt; (this System.Data.DataRow row, int columnIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T Field&lt;T&gt;(class System.Data.DataRow row, int32 columnIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Field(Of T) (row As DataRow, columnIndex As Integer) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T Field(System::Data::DataRow ^ row, int columnIndex);" />
      <MemberSignature Language="F#" Value="static member Field : System.Data.DataRow * int -&gt; 'T" Usage="System.Data.DataRowExtensions.Field (row, columnIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="row" Type="System.Data.DataRow" RefType="this" />
        <Parameter Name="columnIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T">Общий параметр, в котором указывается тип возвращаемого значения для этого столбца.</typeparam>
        <param name="row">Входной объект <see cref="T:System.Data.DataRow" />, действующий для метода расширения как экземпляр <see langword="this" />.</param>
        <param name="columnIndex">Индекс столбца.</param>
        <summary>Обеспечивает строго типизированный доступ к каждому значению столбца в указанной строке. Метод <see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32)" /> также поддерживает типы, допускающие значения null.</summary>
        <returns>Значение типа <paramref name="T" /> столбца <see cref="T:System.Data.DataColumn" />, определенного именем <paramref name="columnIndex" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Класс представляет значения **null** с помощью <xref:System.DBNull.Value> экземпляра <xref:System.DBNull> класса. <xref:System.Data.DataSet>  Выражение, которое обращается к столбцу **** со <xref:System.InvalidCastException> значением NULL, будет формировать во время выполнения. [!INCLUDE[vbteclinqext](~/includes/vbteclinqext-md.md)] Кроме того <xref:System.Data.DataSet> , не поддерживает типы, допускающие значение null. <xref:System.Data.DataRowExtensions.Field%2A> Метод обеспечивает поддержку доступа к столбцам как к типам, допускающим значение null.  Если базовое значение в <xref:System.Data.DataSet> равно <xref:System.DBNull.Value>, возвращаемый тип Nullable будет иметь значение **null**.  
  
 Если значение указанного <xref:System.Data.DataColumn> параметра равно **null** и `T` является ссылочным типом или типом, допускающим значение null, то возвращаемый тип будет **равен нулю**.  Метод <xref:System.Data.DataRowExtensions.Field%2A> не будет возвращать <xref:System.DBNull.Value>значение.  
  
 <xref:System.Data.DataRowExtensions.Field%2A> Метод не выполняет преобразования типов. Если требуется преобразование типа, сначала необходимо получить значение столбца с помощью <xref:System.Data.DataRowExtensions.Field%2A> метода. Значение столбца должно быть преобразовано в другой тип.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">Тип значений соответствующего столбца не должен быть приведен к типу, заданному параметром универсального типа <paramref name="T" />.</exception>
        <exception cref="T:System.IndexOutOfRangeException">Столбца, определенного именем <paramref name="ordinal" />, не существует в таблице <see cref="T:System.Data.DataTable" />, частью которой является строка <see cref="T:System.Data.DataRow" />.</exception>
        <exception cref="T:System.NullReferenceException">Значение **null** было назначено типу, не поддерживающему значения null.</exception>
      </Docs>
    </Member>
    <Member MemberName="Field&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T Field&lt;T&gt; (this System.Data.DataRow row, string columnName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T Field&lt;T&gt;(class System.Data.DataRow row, string columnName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Field(Of T) (row As DataRow, columnName As String) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T Field(System::Data::DataRow ^ row, System::String ^ columnName);" />
      <MemberSignature Language="F#" Value="static member Field : System.Data.DataRow * string -&gt; 'T" Usage="System.Data.DataRowExtensions.Field (row, columnName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="row" Type="System.Data.DataRow" RefType="this" />
        <Parameter Name="columnName" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T">Общий параметр, в котором указывается тип возвращаемого значения для этого столбца.</typeparam>
        <param name="row">Входной объект <see cref="T:System.Data.DataRow" />, действующий для метода расширения как экземпляр <see langword="this" />.</param>
        <param name="columnName">Имя столбца, значение которого следует возвратить.</param>
        <summary>Обеспечивает строго типизированный доступ к каждому значению столбца в указанной строке. Метод <see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String)" /> также поддерживает типы, допускающие значения null.</summary>
        <returns>Значение типа <paramref name="T" /> столбца <see cref="T:System.Data.DataColumn" />, определенного именем <paramref name="columnName" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Класс представляет значения **null** с помощью <xref:System.DBNull.Value> экземпляра <xref:System.DBNull> класса. <xref:System.Data.DataSet> Выражение, которое обращается к столбцу **** со <xref:System.InvalidCastException> значением NULL, будет формировать во время выполнения. [!INCLUDE[vbteclinqext](~/includes/vbteclinqext-md.md)] Кроме того <xref:System.Data.DataSet> , не поддерживает типы, допускающие значение null. <xref:System.Data.DataRowExtensions.Field%2A> Метод обеспечивает поддержку доступа к столбцам как к типам, допускающим значение null. Если базовое значение в <xref:System.Data.DataSet> равно <xref:System.DBNull.Value>, возвращаемый тип Nullable будет иметь значение **null**.  
  
 Если значение указанного <xref:System.Data.DataColumn> параметра равно **null** и `T` является ссылочным типом или типом, допускающим значение null, то возвращаемый тип будет **равен нулю**. Метод <xref:System.Data.DataRowExtensions.Field%2A> не будет возвращать <xref:System.DBNull.Value>значение.  
  
 <xref:System.Data.DataRowExtensions.Field%2A> Метод не выполняет преобразования типов. Если требуется преобразование типа, сначала необходимо получить значение столбца с помощью <xref:System.Data.DataRowExtensions.Field%2A> метода. Значение столбца должно быть преобразовано в другой тип.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">Тип значений соответствующего столбца не должен быть приведен к типу, заданному параметром универсального типа <paramref name="T" />.</exception>
        <exception cref="T:System.IndexOutOfRangeException">Столбец, определенный именем <paramref name="columnName" />, не находится в таблице <see cref="T:System.Data.DataTable" />, частью которой является строка <see cref="T:System.Data.DataRow" />.</exception>
        <exception cref="T:System.NullReferenceException">Значение <see langword="null" /> было назначено типу, не поддерживающему значения null.</exception>
      </Docs>
    </Member>
    <Member MemberName="Field&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T Field&lt;T&gt; (this System.Data.DataRow row, System.Data.DataColumn column, System.Data.DataRowVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T Field&lt;T&gt;(class System.Data.DataRow row, class System.Data.DataColumn column, valuetype System.Data.DataRowVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn,System.Data.DataRowVersion)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Field(Of T) (row As DataRow, column As DataColumn, version As DataRowVersion) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T Field(System::Data::DataRow ^ row, System::Data::DataColumn ^ column, System::Data::DataRowVersion version);" />
      <MemberSignature Language="F#" Value="static member Field : System.Data.DataRow * System.Data.DataColumn * System.Data.DataRowVersion -&gt; 'T" Usage="System.Data.DataRowExtensions.Field (row, column, version)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="row" Type="System.Data.DataRow" RefType="this" />
        <Parameter Name="column" Type="System.Data.DataColumn" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <typeparam name="T">Общий параметр, в котором указывается тип возвращаемого значения для этого столбца.</typeparam>
        <param name="row">Входной объект <see cref="T:System.Data.DataRow" />, действующий для метода расширения как экземпляр <see langword="this" />.</param>
        <param name="column">Объект входа <see cref="T:System.Data.DataColumn" />, в котором указывается столбец, значение которого следует возвратить.</param>
        <param name="version">Перечисление <see cref="T:System.Data.DataRowVersion" />, которое определяет версию возвращаемого значения столбца, например: версия <see langword="Current" /> или <see langword="Original" />.</param>
        <summary>Обеспечивает строго типизированный доступ к каждому значению столбца в указанной строке. Метод <see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn,System.Data.DataRowVersion)" /> также поддерживает типы, допускающие значения null.</summary>
        <returns>Значение типа <paramref name="T" /> столбца <see cref="T:System.Data.DataColumn" />, определенного параметрами <paramref name="column" /> и <paramref name="version" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Класс представляет значения **null** с помощью <xref:System.DBNull.Value> экземпляра <xref:System.DBNull> класса. <xref:System.Data.DataSet>  Выражение, которое обращается к столбцу **** со <xref:System.InvalidCastException> значением NULL, будет формировать во время выполнения. [!INCLUDE[vbteclinqext](~/includes/vbteclinqext-md.md)] Кроме того <xref:System.Data.DataSet> , не поддерживает типы, допускающие значение null. <xref:System.Data.DataRowExtensions.Field%2A> Метод обеспечивает поддержку доступа к столбцам как к типам, допускающим значение null.  Если базовое значение в <xref:System.Data.DataSet> равно <xref:System.DBNull.Value>, возвращаемый тип Nullable будет иметь значение **null**.  
  
 Если значение указанного <xref:System.Data.DataColumn> параметра равно NULL и `T` является ссылочным типом или типом, допускающим значение null, то возвращаемый тип будет **равен нулю**. Метод <xref:System.Data.DataRowExtensions.Field%2A> не будет возвращать <xref:System.DBNull.Value>значение.  
  
 <xref:System.Data.DataRowExtensions.Field%2A> Метод не выполняет преобразования типов. Если требуется преобразование типа, сначала необходимо получить значение столбца с помощью <xref:System.Data.DataRowExtensions.Field%2A> метода. Значение столбца должно быть преобразовано в другой тип.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">Тип значений соответствующего столбца не должен быть приведен к типу, заданному параметром универсального типа <paramref name="T" />.</exception>
        <exception cref="T:System.IndexOutOfRangeException">Столбца, определенного именем <paramref name="column" />, не существует в таблице <see cref="T:System.Data.DataTable" />, частью которой является строка <see cref="T:System.Data.DataRow" />.</exception>
        <exception cref="T:System.NullReferenceException">Значение **null** было назначено типу, не поддерживающему значения null.</exception>
      </Docs>
    </Member>
    <Member MemberName="Field&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T Field&lt;T&gt; (this System.Data.DataRow row, int columnIndex, System.Data.DataRowVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T Field&lt;T&gt;(class System.Data.DataRow row, int32 columnIndex, valuetype System.Data.DataRowVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32,System.Data.DataRowVersion)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Field(Of T) (row As DataRow, columnIndex As Integer, version As DataRowVersion) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T Field(System::Data::DataRow ^ row, int columnIndex, System::Data::DataRowVersion version);" />
      <MemberSignature Language="F#" Value="static member Field : System.Data.DataRow * int * System.Data.DataRowVersion -&gt; 'T" Usage="System.Data.DataRowExtensions.Field (row, columnIndex, version)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="row" Type="System.Data.DataRow" RefType="this" />
        <Parameter Name="columnIndex" Type="System.Int32" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <typeparam name="T">Общий параметр, в котором указывается тип возвращаемого значения для этого столбца.</typeparam>
        <param name="row">Входной объект <see cref="T:System.Data.DataRow" />, действующий для метода расширения как экземпляр <see langword="this" />.</param>
        <param name="columnIndex">Порядковый номер (начинающийся с нуля) столбца, значение которого следует возвратить.</param>
        <param name="version">Перечисление <see cref="T:System.Data.DataRowVersion" />, которое определяет версию возвращаемого значения столбца, например: версия <see langword="Current" /> или <see langword="Original" />.</param>
        <summary>Обеспечивает строго типизированный доступ к каждому значению столбца в указанной строке. Метод <see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32,System.Data.DataRowVersion)" /> также поддерживает типы, допускающие значения null.</summary>
        <returns>Значение типа <paramref name="T" /> столбца <see cref="T:System.Data.DataColumn" />, определенного параметрами <paramref name="ordinal" /> и <paramref name="version" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Класс представляет значения **null** с помощью <xref:System.DBNull.Value> экземпляра <xref:System.DBNull> класса. <xref:System.Data.DataSet>  Выражение, которое обращается к столбцу **** со <xref:System.InvalidCastException> значением NULL, будет формировать во время выполнения. [!INCLUDE[vbteclinqext](~/includes/vbteclinqext-md.md)] Кроме того <xref:System.Data.DataSet> , не поддерживает типы, допускающие значение null. <xref:System.Data.DataRowExtensions.Field%2A> Метод обеспечивает поддержку доступа к столбцам как к типам, допускающим значение null.  Если базовое значение в <xref:System.Data.DataSet> равно <xref:System.DBNull.Value>, возвращаемый тип Nullable будет иметь значение **null**.  
  
 Если значение указанного <xref:System.Data.DataColumn> параметра равно NULL и `T` является ссылочным типом или типом, допускающим значение null, то возвращаемый тип будет **равен нулю**. Метод <xref:System.Data.DataRowExtensions.Field%2A> не будет возвращать <xref:System.DBNull.Value>значение.  
  
 <xref:System.Data.DataRowExtensions.Field%2A> Метод не выполняет преобразования типов. Если требуется преобразование типа, сначала необходимо получить значение столбца с помощью <xref:System.Data.DataRowExtensions.Field%2A> метода. Значение столбца должно быть преобразовано в другой тип.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">Тип значений соответствующего столбца не должен быть приведен к типу, заданному параметром универсального типа <paramref name="T" />.</exception>
        <exception cref="T:System.IndexOutOfRangeException">Столбца, определенного именем <paramref name="ordinal" />, не существует в таблице <see cref="T:System.Data.DataTable" />, частью которой является строка <see cref="T:System.Data.DataRow" />.</exception>
        <exception cref="T:System.NullReferenceException">Значение **null** было назначено типу, не поддерживающему значения null.</exception>
      </Docs>
    </Member>
    <Member MemberName="Field&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T Field&lt;T&gt; (this System.Data.DataRow row, string columnName, System.Data.DataRowVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T Field&lt;T&gt;(class System.Data.DataRow row, string columnName, valuetype System.Data.DataRowVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String,System.Data.DataRowVersion)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Field(Of T) (row As DataRow, columnName As String, version As DataRowVersion) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T Field(System::Data::DataRow ^ row, System::String ^ columnName, System::Data::DataRowVersion version);" />
      <MemberSignature Language="F#" Value="static member Field : System.Data.DataRow * string * System.Data.DataRowVersion -&gt; 'T" Usage="System.Data.DataRowExtensions.Field (row, columnName, version)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="row" Type="System.Data.DataRow" RefType="this" />
        <Parameter Name="columnName" Type="System.String" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <typeparam name="T">Общий параметр, в котором указывается тип возвращаемого значения для этого столбца.</typeparam>
        <param name="row">Входной объект <see cref="T:System.Data.DataRow" />, действующий для метода расширения как экземпляр <see langword="this" />.</param>
        <param name="columnName">Имя столбца, значение которого следует возвратить.</param>
        <param name="version">Перечисление <see cref="T:System.Data.DataRowVersion" />, которое определяет версию возвращаемого значения столбца, например: версия <see langword="Current" /> или <see langword="Original" />.</param>
        <summary>Обеспечивает строго типизированный доступ к каждому значению столбца в указанной строке. Метод <see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String,System.Data.DataRowVersion)" /> также поддерживает типы, допускающие значения null.</summary>
        <returns>Значение типа <paramref name="T" /> столбца <see cref="T:System.Data.DataColumn" />, определенного параметрами <paramref name="columnName" /> и <paramref name="version" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Класс представляет значения **null** с помощью <xref:System.DBNull.Value> экземпляра <xref:System.DBNull> класса. <xref:System.Data.DataSet>  Выражение, которое обращается к столбцу **** со <xref:System.InvalidCastException> значением NULL, будет формировать во время выполнения. [!INCLUDE[vbteclinqext](~/includes/vbteclinqext-md.md)] Кроме того <xref:System.Data.DataSet> , не поддерживает типы, допускающие значение null. <xref:System.Data.DataRowExtensions.Field%2A> Метод обеспечивает поддержку доступа к столбцам как к типам, допускающим значение null.  Если базовое значение в <xref:System.Data.DataSet> равно <xref:System.DBNull.Value>, возвращаемый тип Nullable будет иметь значение **null**.  
  
 Если значение указанного <xref:System.Data.DataColumn> параметра равно NULL и `T` является ссылочным типом или типом, допускающим значение null, то возвращаемый тип будет **равен нулю**. Метод <xref:System.Data.DataRowExtensions.Field%2A> не будет возвращать <xref:System.DBNull.Value>значение.  
  
 <xref:System.Data.DataRowExtensions.Field%2A> Метод не выполняет преобразования типов. Если требуется преобразование типа, сначала необходимо получить значение столбца с помощью <xref:System.Data.DataRowExtensions.Field%2A> метода. Значение столбца должно быть преобразовано в другой тип.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">Тип значений соответствующего столбца не должен быть приведен к типу, заданному параметром универсального типа <paramref name="T" />.</exception>
        <exception cref="T:System.IndexOutOfRangeException">Столбца, определенного именем <paramref name="columnName" />, не существует в таблице <see cref="T:System.Data.DataTable" />, частью которой является строка <see cref="T:System.Data.DataRow" />.</exception>
        <exception cref="T:System.NullReferenceException">Значение **null** было назначено типу, не поддерживающему значения null.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetField&lt;T&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Задает новое значение для указанного столбца в <see cref="T:System.Data.DataRow" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetField&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void SetField&lt;T&gt; (this System.Data.DataRow row, System.Data.DataColumn column, T value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetField&lt;T&gt;(class System.Data.DataRow row, class System.Data.DataColumn column, !!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Data.DataColumn,``0)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub SetField(Of T) (row As DataRow, column As DataColumn, value As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void SetField(System::Data::DataRow ^ row, System::Data::DataColumn ^ column, T value);" />
      <MemberSignature Language="F#" Value="static member SetField : System.Data.DataRow * System.Data.DataColumn * 'T -&gt; unit" Usage="System.Data.DataRowExtensions.SetField (row, column, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="row" Type="System.Data.DataRow" RefType="this" />
        <Parameter Name="column" Type="System.Data.DataColumn" />
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">Общий параметр, в котором указывается тип значения для этого столбца.</typeparam>
        <param name="row">Входной объект <see cref="T:System.Data.DataRow" />, действующий для метода расширения как экземпляр <see langword="this" />.</param>
        <param name="column">Входящий столбец <see cref="T:System.Data.DataColumn" /> определяет, какое значение строки следует извлечь.</param>
        <param name="value">Значение новой строки для указанного столбца, имеющее тип <paramref name="T" />.</param>
        <summary>Задает новое значение для указанного столбца в <see cref="T:System.Data.DataRow" />. Метод <see cref="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Data.DataColumn,``0)" /> также поддерживает типы, допускающие значения null.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если `value` <xref:System.DBNull.Value> имеет **значение NULL**, <xref:System.Data.DataColumn> **** метод преобразует значение NULL в базовый. <xref:System.Data.DataRowExtensions.SetField%2A>  
  
 <xref:System.Data.DataRowExtensions.SetField%2A> Метод не выполняет преобразования типов. Однако это не означает, что преобразование типов не происходит. <xref:System.Data.DataRowExtensions.SetField%2A> Метод предоставляет<xref:System.Data.DataRow> поведение класса. [!INCLUDE[ado_whidbey_long](~/includes/ado-whidbey-long-md.md)] Преобразование типа может быть выполнено <xref:System.Data.DataRow> объектом, а преобразованное значение будет сохранено в строке.  
  
 Исключения могут передаваться через <xref:System.Data.DataRowExtensions.SetField%2A> метод из базового <xref:System.Data.DataRow> объекта.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Не удается найти столбец, указанный по значению <paramref name="column" />.</exception>
        <exception cref="T:System.ArgumentNullException">Значением параметра <paramref name="column" /> является **NULL**.</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">Происходит при попытке установить значение в удаленной строке.</exception>
        <exception cref="T:System.InvalidCastException">Тип значений соответствующего столбца не должен быть приведен к типу, заданному параметром универсального типа <paramref name="T" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="SetField&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void SetField&lt;T&gt; (this System.Data.DataRow row, int columnIndex, T value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetField&lt;T&gt;(class System.Data.DataRow row, int32 columnIndex, !!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Int32,``0)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub SetField(Of T) (row As DataRow, columnIndex As Integer, value As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void SetField(System::Data::DataRow ^ row, int columnIndex, T value);" />
      <MemberSignature Language="F#" Value="static member SetField : System.Data.DataRow * int * 'T -&gt; unit" Usage="System.Data.DataRowExtensions.SetField (row, columnIndex, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="row" Type="System.Data.DataRow" RefType="this" />
        <Parameter Name="columnIndex" Type="System.Int32" />
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">Общий параметр, в котором указывается тип значения для этого столбца.</typeparam>
        <param name="row">Входной объект <see cref="T:System.Data.DataRow" />, действующий для метода расширения как экземпляр <see langword="this" />.</param>
        <param name="columnIndex">Порядковый номер (начинающийся с нуля) столбца, значение которого следует задать.</param>
        <param name="value">Значение новой строки для указанного столбца, имеющее тип <paramref name="T" />.</param>
        <summary>Задает новое значение для указанного столбца в вызванном методе <see cref="T:System.Data.DataRow" />. Метод <see cref="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Int32,``0)" /> также поддерживает типы, допускающие значения null.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если `value` <xref:System.DBNull.Value> имеет **значение NULL**, <xref:System.Data.DataColumn> **** метод преобразует значение NULL в базовый. <xref:System.Data.DataRowExtensions.SetField%2A>  
  
 <xref:System.Data.DataRowExtensions.SetField%2A> Метод не выполняет преобразования типов. Однако это не означает, что преобразование типов не происходит. <xref:System.Data.DataRowExtensions.SetField%2A> Метод предоставляет<xref:System.Data.DataRow> поведение класса. [!INCLUDE[ado_whidbey_long](~/includes/ado-whidbey-long-md.md)] Преобразование типа может быть выполнено <xref:System.Data.DataRow> объектом, а преобразованное значение будет сохранено в строке.  
  
 Исключения могут передаваться через <xref:System.Data.DataRowExtensions.SetField%2A> метод из базового <xref:System.Data.DataRow> объекта.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">Происходит при попытке установить значение в удаленной строке.</exception>
        <exception cref="T:System.IndexOutOfRangeException">Аргумент <paramref name="ordinal" /> вне диапазона.</exception>
        <exception cref="T:System.InvalidCastException">Тип значений соответствующего столбца не должен быть приведен к типу, заданному параметром универсального типа <paramref name="T" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="SetField&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void SetField&lt;T&gt; (this System.Data.DataRow row, string columnName, T value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetField&lt;T&gt;(class System.Data.DataRow row, string columnName, !!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.String,``0)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub SetField(Of T) (row As DataRow, columnName As String, value As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void SetField(System::Data::DataRow ^ row, System::String ^ columnName, T value);" />
      <MemberSignature Language="F#" Value="static member SetField : System.Data.DataRow * string * 'T -&gt; unit" Usage="System.Data.DataRowExtensions.SetField (row, columnName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="row" Type="System.Data.DataRow" RefType="this" />
        <Parameter Name="columnName" Type="System.String" />
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">Общий параметр, в котором указывается тип значения для этого столбца.</typeparam>
        <param name="row">Входной объект <see cref="T:System.Data.DataRow" />, действующий для метода расширения как экземпляр <see langword="this" />.</param>
        <param name="columnName">Имя столбца, значение которого следует задать.</param>
        <param name="value">Значение новой строки для указанного столбца, имеющее тип <paramref name="T" />.</param>
        <summary>Задает новое значение для указанного столбца в <see cref="T:System.Data.DataRow" />. Метод <see cref="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.String,``0)" /> также поддерживает типы, допускающие значения null.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если `value` <xref:System.DBNull.Value> имеет **значение NULL**, <xref:System.Data.DataColumn> **** метод преобразует значение NULL в базовый. <xref:System.Data.DataRowExtensions.SetField%2A>  
  
 <xref:System.Data.DataRowExtensions.SetField%2A> Метод не выполняет преобразования типов. Однако это не означает, что преобразование типов не происходит. <xref:System.Data.DataRowExtensions.SetField%2A> Метод предоставляет<xref:System.Data.DataRow> поведение класса. [!INCLUDE[ado_whidbey_long](~/includes/ado-whidbey-long-md.md)] Преобразование типа может быть выполнено <xref:System.Data.DataRow> объектом, а преобразованное значение будет сохранено в строке.  
  
 Исключения могут передаваться через <xref:System.Data.DataRowExtensions.SetField%2A> метод из базового <xref:System.Data.DataRow> объекта.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Не удается найти столбец, указанный по значению <paramref name="columnName" />.</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">Происходит при попытке установить значение в удаленной строке.</exception>
        <exception cref="T:System.InvalidCastException">Тип значений соответствующего столбца не должен быть приведен к типу, заданному параметром универсального типа <paramref name="T" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>