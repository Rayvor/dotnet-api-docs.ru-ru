<Type Name="IsolationLevel" FullName="System.Data.IsolationLevel">
  <Metadata><Meta Name="ms.openlocfilehash" Value="edb852c3574b8eeca02c658eab11acfb89f89346" /><Meta Name="ms.sourcegitcommit" Value="bc24a3ba616ee1df8b858f9400cae4f058ea3a7e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="06/19/2019" /><Meta Name="ms.locfileid" Value="67239939" /></Metadata><TypeSignature Language="C#" Value="public enum IsolationLevel" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed IsolationLevel extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Data.IsolationLevel" />
  <TypeSignature Language="VB.NET" Value="Public Enum IsolationLevel" />
  <TypeSignature Language="C++ CLI" Value="public enum class IsolationLevel" />
  <TypeSignature Language="F#" Value="type IsolationLevel = " />
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.Flags</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="40b82-101">Задает поведение при блокировке транзакции для подключения.</span><span class="sxs-lookup"><span data-stu-id="40b82-101">Specifies the transaction locking behavior for the connection.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks

<span data-ttu-id="40b82-102">`IsolationLevel` Значения используются поставщиком данных .NET, при выполнении транзакции.</span><span class="sxs-lookup"><span data-stu-id="40b82-102">The `IsolationLevel` values are used by a .NET data provider when performing a transaction.</span></span>

<span data-ttu-id="40b82-103">`IsolationLevel` Действует до явным образом изменены, но его можно изменить в любое время.</span><span class="sxs-lookup"><span data-stu-id="40b82-103">The `IsolationLevel` remains in effect until explicitly changed, but it can be changed at any time.</span></span> <span data-ttu-id="40b82-104">Новое значение используется во время выполнения, не на этапе синтаксического анализа.</span><span class="sxs-lookup"><span data-stu-id="40b82-104">The new value is used at execution time, not parse time.</span></span> <span data-ttu-id="40b82-105">Если изменен во время транзакции, ожидаемое поведение сервера является применение нового уровня блокировки ко всем остальным операторам.</span><span class="sxs-lookup"><span data-stu-id="40b82-105">If changed during a transaction, the expected behavior of the server is to apply the new locking level to all statements remaining.</span></span>  
  
<span data-ttu-id="40b82-106">При использовании <xref:System.Data.Odbc.OdbcTransaction>, если вы не установите <xref:System.Data.Odbc.OdbcTransaction.IsolationLevel?displayProperty=nameWithType> или ему присвоено `Unspecified`, транзакция выполняется в соответствии с уровнем изоляции, определить с помощью драйвера, используемого.</span><span class="sxs-lookup"><span data-stu-id="40b82-106">When using <xref:System.Data.Odbc.OdbcTransaction>, if you do not set <xref:System.Data.Odbc.OdbcTransaction.IsolationLevel?displayProperty=nameWithType> or you set it to `Unspecified`, the transaction executes according to the isolation level determined by the driver in use.</span></span>  

## Examples  
 <span data-ttu-id="40b82-107">Это приложение демонстрирует использование <xref:System.Data.IsolationLevel> в <xref:System.Data.Common.DbTransaction>.</span><span class="sxs-lookup"><span data-stu-id="40b82-107">This application demonstrates how to use <xref:System.Data.IsolationLevel> in <xref:System.Data.Common.DbTransaction>.</span></span> <span data-ttu-id="40b82-108">Пример мы рассмотрим, какие из следующих поведений разрешены в различными уровнями изоляции:</span><span class="sxs-lookup"><span data-stu-id="40b82-108">The sample will demonstrate which of the following behaviors are allowed in the different isolation levels:</span></span>  
  
-   <span data-ttu-id="40b82-109">«Грязные» чтения.</span><span class="sxs-lookup"><span data-stu-id="40b82-109">Dirty reads.</span></span>  
  
-   <span data-ttu-id="40b82-110">Без повторного чтения.</span><span class="sxs-lookup"><span data-stu-id="40b82-110">Non-repeatable reads.</span></span>  
  
-   <span data-ttu-id="40b82-111">Фантомные объекты.</span><span class="sxs-lookup"><span data-stu-id="40b82-111">Phantoms.</span></span>  
  
 <span data-ttu-id="40b82-112">Это приложение будет выполняться на следующих уровнях изоляции:</span><span class="sxs-lookup"><span data-stu-id="40b82-112">This application will execute in the following isolation levels:</span></span>  
  
-   <span data-ttu-id="40b82-113">ReadUncommitted</span><span class="sxs-lookup"><span data-stu-id="40b82-113">ReadUncommitted</span></span>  
  
-   <span data-ttu-id="40b82-114">Читать зафиксированные</span><span class="sxs-lookup"><span data-stu-id="40b82-114">ReadCommitted</span></span>  
  
-   <span data-ttu-id="40b82-115">RepeatableRead</span><span class="sxs-lookup"><span data-stu-id="40b82-115">RepeatableRead</span></span>  
  
-   <span data-ttu-id="40b82-116">Сериализуемый</span><span class="sxs-lookup"><span data-stu-id="40b82-116">Serializable</span></span>  
  
-   <span data-ttu-id="40b82-117">Снимок</span><span class="sxs-lookup"><span data-stu-id="40b82-117">Snapshot</span></span>  
  
 <span data-ttu-id="40b82-118">Класс PhantomReadThreads демонстрирует, если для определенной транзакции позволяет поведению чтение фантомных.</span><span class="sxs-lookup"><span data-stu-id="40b82-118">The PhantomReadThreads class demonstrates if the specific transaction allows the Phantom Read behavior.</span></span> <span data-ttu-id="40b82-119">Если транзакция позволяет поведению, потоки будут работать в следующем порядке:</span><span class="sxs-lookup"><span data-stu-id="40b82-119">If the transaction allows the behavior, the threads will operate in the following order:</span></span>  
  
-   <span data-ttu-id="40b82-120">В первый поток выберите products(All).</span><span class="sxs-lookup"><span data-stu-id="40b82-120">In first thread, select the products(All).</span></span>  
  
-   <span data-ttu-id="40b82-121">Во втором потоке вставьте новый продукт.</span><span class="sxs-lookup"><span data-stu-id="40b82-121">In the second thread, insert a new product.</span></span>  
  
-   <span data-ttu-id="40b82-122">Зафиксируйте транзакцию во втором потоке.</span><span class="sxs-lookup"><span data-stu-id="40b82-122">Commit the transaction in second thread.</span></span>  
  
-   <span data-ttu-id="40b82-123">Выберите продукты, еще раз.</span><span class="sxs-lookup"><span data-stu-id="40b82-123">Select the products again.</span></span>  
  
-   <span data-ttu-id="40b82-124">Зафиксируйте транзакцию в первый поток.</span><span class="sxs-lookup"><span data-stu-id="40b82-124">Commit the transaction in first thread.</span></span>  
  
 <span data-ttu-id="40b82-125">Если транзакция позволяет поведению, две операции Select получите разные результаты.</span><span class="sxs-lookup"><span data-stu-id="40b82-125">If the transaction allows the behavior, the two Select operations will get the different results.</span></span>  
  
 <span data-ttu-id="40b82-126">Класс NonrepeatableReadThreads демонстрирует, если для определенной транзакции позволяет поведению неповторяющееся чтение.</span><span class="sxs-lookup"><span data-stu-id="40b82-126">The NonrepeatableReadThreads class demonstrates if the specific transaction allows the Nonrepeatable Read behavior.</span></span> <span data-ttu-id="40b82-127">Если транзакция позволяет поведению, потоки будут работать в следующем порядке:</span><span class="sxs-lookup"><span data-stu-id="40b82-127">If the transaction allows the behavior, the threads will operate in the following order:</span></span>  
  
-   <span data-ttu-id="40b82-128">В первый поток выберите product(ProductId=1).</span><span class="sxs-lookup"><span data-stu-id="40b82-128">In first thread, select the product(ProductId=1).</span></span>  
  
-   <span data-ttu-id="40b82-129">Во втором потоке обновите value(ProductId=1) количество.</span><span class="sxs-lookup"><span data-stu-id="40b82-129">In the second thread, update the Quantity value(ProductId=1).</span></span>  
  
-   <span data-ttu-id="40b82-130">Зафиксируйте транзакцию во втором потоке.</span><span class="sxs-lookup"><span data-stu-id="40b82-130">Commit the transaction in second thread.</span></span>  
  
-   <span data-ttu-id="40b82-131">Выберите продукт, еще раз.</span><span class="sxs-lookup"><span data-stu-id="40b82-131">Select the product again.</span></span>  
  
-   <span data-ttu-id="40b82-132">Зафиксируйте транзакцию в первый поток.</span><span class="sxs-lookup"><span data-stu-id="40b82-132">Commit the transaction in first thread.</span></span>  
  
 <span data-ttu-id="40b82-133">Если транзакция позволяет поведению, две операции Select получите разные результаты.</span><span class="sxs-lookup"><span data-stu-id="40b82-133">If the transaction allows the behavior, the two Select operations will get the different results.</span></span>  
  
 <span data-ttu-id="40b82-134">Класс ExchangeValuesThreads иллюстрирует различие между транзакции Serializable и моментальных снимков.</span><span class="sxs-lookup"><span data-stu-id="40b82-134">The ExchangeValuesThreads class demonstrates the difference between the Serializable and Snapshot transaction.</span></span> <span data-ttu-id="40b82-135">Для сериализуемой транзакции потоки будут работать в следующем порядке:</span><span class="sxs-lookup"><span data-stu-id="40b82-135">For the Serializable transaction, threads will operate in the following order:</span></span>  
  
-   <span data-ttu-id="40b82-136">В первый поток получите цены product(ProductId=2) и хранилища в переменной.</span><span class="sxs-lookup"><span data-stu-id="40b82-136">In first thread, get the Price of product(ProductId=2) and store in the variable.</span></span>  
  
-   <span data-ttu-id="40b82-137">В первом потоке обновляем цены product(ProductId=1) со стоимостью product(ProductId=2).</span><span class="sxs-lookup"><span data-stu-id="40b82-137">In first thread, update the Price of product(ProductId=1) with the price of product(ProductId=2).</span></span>  
  
-   <span data-ttu-id="40b82-138">Зафиксируйте транзакцию в первый поток.</span><span class="sxs-lookup"><span data-stu-id="40b82-138">Commit the transaction in first thread.</span></span>  
  
-   <span data-ttu-id="40b82-139">Во втором потоке получите цены product(ProductId=1) и хранилища в переменной.</span><span class="sxs-lookup"><span data-stu-id="40b82-139">In second thread, get the Price of product(ProductId=1) and store in the variable.</span></span>  
  
-   <span data-ttu-id="40b82-140">Во втором потоке обновляем цены product(ProductId=2) со стоимостью product(ProductId=1).</span><span class="sxs-lookup"><span data-stu-id="40b82-140">In second thread, update the Price of product(ProductId=2) with the price of product(ProductId=1).</span></span>  
  
-   <span data-ttu-id="40b82-141">Зафиксируйте транзакцию во втором потоке.</span><span class="sxs-lookup"><span data-stu-id="40b82-141">Commit the transaction in second thread.</span></span>  
  
 <span data-ttu-id="40b82-142">Теперь значения цены (ProductId = 1 и ProductId = 2), как и исходный цена Product(ProductId=2).</span><span class="sxs-lookup"><span data-stu-id="40b82-142">Now the values of the Price(ProductId=1 and ProductId=2) are as same as the original Price of Product(ProductId=2).</span></span>  
  
 <span data-ttu-id="40b82-143">Для транзакции моментального снимка потоки будут работать в следующем порядке:</span><span class="sxs-lookup"><span data-stu-id="40b82-143">For the Snapshot transaction, threads will operate in the following order:</span></span>  
  
-   <span data-ttu-id="40b82-144">Первый поток получите цены product(ProductId=2) и хранилища в переменной;</span><span class="sxs-lookup"><span data-stu-id="40b82-144">In first thread, get the Price of product(ProductId=2) and store in the variable;</span></span>  
  
-   <span data-ttu-id="40b82-145">В первом потоке обновляем цены product(ProductId=1) со стоимостью product(ProductId=2).</span><span class="sxs-lookup"><span data-stu-id="40b82-145">In first thread, update the Price of product(ProductId=1) with the price of product(ProductId=2).</span></span>  
  
-   <span data-ttu-id="40b82-146">Во втором потоке получить цены product(ProductId=1) из моментального снимка и сохранить в переменной.</span><span class="sxs-lookup"><span data-stu-id="40b82-146">In second thread, get the Price of product(ProductId=1) from the snapshot and store in the variable.</span></span>  
  
-   <span data-ttu-id="40b82-147">Во втором потоке обновляем цены product(ProductId=2) со стоимостью product(ProductId=1).</span><span class="sxs-lookup"><span data-stu-id="40b82-147">In second thread, update the Price of product(ProductId=2) with the price of product(ProductId=1).</span></span>  
  
-   <span data-ttu-id="40b82-148">Зафиксируйте транзакцию во втором потоке.</span><span class="sxs-lookup"><span data-stu-id="40b82-148">Commit the transaction in second thread.</span></span>  
  
-   <span data-ttu-id="40b82-149">Зафиксируйте транзакцию в первый поток.</span><span class="sxs-lookup"><span data-stu-id="40b82-149">Commit the transaction in first thread.</span></span>  
  
 <span data-ttu-id="40b82-150">Теперь обмениваться цены продуктов (ProductId = 1 и ProductId = 2).</span><span class="sxs-lookup"><span data-stu-id="40b82-150">Now exchange the Price of products(ProductId=1 and ProductId=2).</span></span>  
  
 <span data-ttu-id="40b82-151">Класс DirtyReadThreads демонстрирует, если специальная транзакция позволяет определить поведение «грязное» чтение.</span><span class="sxs-lookup"><span data-stu-id="40b82-151">The DirtyReadThreads class demonstrates if the specific transaction allows the Dirty Read behavior.</span></span> <span data-ttu-id="40b82-152">Если транзакция позволяет поведению, потоки будут работать в следующем порядке:</span><span class="sxs-lookup"><span data-stu-id="40b82-152">If the transaction allows the behavior, the threads will operate in the following order:</span></span>  
  
-   <span data-ttu-id="40b82-153">В первый поток запускает транзакцию и добавить value(ProductId=1) количество.</span><span class="sxs-lookup"><span data-stu-id="40b82-153">In first thread, begin a transaction and add the Quantity value(ProductId=1).</span></span>  
  
-   <span data-ttu-id="40b82-154">Во втором потоке чтение значение количества и снова добавьте значение.</span><span class="sxs-lookup"><span data-stu-id="40b82-154">In the second thread, read the Quantity value and add the value again.</span></span>  
  
-   <span data-ttu-id="40b82-155">Зафиксируйте транзакцию во втором потоке.</span><span class="sxs-lookup"><span data-stu-id="40b82-155">Commit the transaction in second thread.</span></span>  
  
-   <span data-ttu-id="40b82-156">Откат транзакции в первый поток.</span><span class="sxs-lookup"><span data-stu-id="40b82-156">Roll back the transaction in first thread.</span></span>  
  
 <span data-ttu-id="40b82-157">Если транзакция позволяет поведению, значение количества будет добавлен дважды.</span><span class="sxs-lookup"><span data-stu-id="40b82-157">If the transaction allows the behavior, the Quantity value will be added twice.</span></span>  
  
 <span data-ttu-id="40b82-158">Проекты C# и Visual Basic с этим образцом кода можно найти на [примеры кода от разработчиков](https://code.msdn.microsoft.com/site/search?query=How%20to%20use%20IsolationLevel%20Enumeration%20in%20DbTransaction&f%5B0%5D.Value=How%20to%20use%20IsolationLevel%20Enumeration%20in%20DbTransaction&f%5B0%5D.Type=SearchText&ac=4).</span><span class="sxs-lookup"><span data-stu-id="40b82-158">C# and Visual Basic projects with this code sample can be found on [Developer Code Samples](https://code.msdn.microsoft.com/site/search?query=How%20to%20use%20IsolationLevel%20Enumeration%20in%20DbTransaction&f%5B0%5D.Value=How%20to%20use%20IsolationLevel%20Enumeration%20in%20DbTransaction&f%5B0%5D.Type=SearchText&ac=4).</span></span>  
  
 [!code-csharp[system_data_IsolationLevel#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/system_data_isolationlevel/cs/source.cs#1)]
 [!code-vb[system_data_IsolationLevel#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/system_data_isolationlevel/vb/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Chaos">
      <MemberSignature Language="C#" Value="Chaos" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.IsolationLevel Chaos = int32(16)" />
      <MemberSignature Language="DocId" Value="F:System.Data.IsolationLevel.Chaos" />
      <MemberSignature Language="VB.NET" Value="Chaos" />
      <MemberSignature Language="C++ CLI" Value="Chaos" />
      <MemberSignature Language="F#" Value="Chaos = 16" Usage="System.Data.IsolationLevel.Chaos" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IsolationLevel</ReturnType>
      </ReturnValue>
      <MemberValue>16</MemberValue>
      <Docs>
        <summary><span data-ttu-id="40b82-159">Ожидающие изменения более изолированных транзакций не могут быть перезаписаны.</span><span class="sxs-lookup"><span data-stu-id="40b82-159">The pending changes from more highly isolated transactions cannot be overwritten.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="ReadCommitted">
      <MemberSignature Language="C#" Value="ReadCommitted" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.IsolationLevel ReadCommitted = int32(4096)" />
      <MemberSignature Language="DocId" Value="F:System.Data.IsolationLevel.ReadCommitted" />
      <MemberSignature Language="VB.NET" Value="ReadCommitted" />
      <MemberSignature Language="C++ CLI" Value="ReadCommitted" />
      <MemberSignature Language="F#" Value="ReadCommitted = 4096" Usage="System.Data.IsolationLevel.ReadCommitted" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IsolationLevel</ReturnType>
      </ReturnValue>
      <MemberValue>4096</MemberValue>
      <Docs>
        <summary><span data-ttu-id="40b82-160">В процессе чтения данных совмещаемые блокировки сохраняются, чтобы избежать чтения "грязных" данных, однако данные могут быть изменены до окончания транзакции, что может стать причиной неповторяемого чтения или появления фиктивных данных.</span><span class="sxs-lookup"><span data-stu-id="40b82-160">Shared locks are held while the data is being read to avoid dirty reads, but the data can be changed before the end of the transaction, resulting in non-repeatable reads or phantom data.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="ReadUncommitted">
      <MemberSignature Language="C#" Value="ReadUncommitted" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.IsolationLevel ReadUncommitted = int32(256)" />
      <MemberSignature Language="DocId" Value="F:System.Data.IsolationLevel.ReadUncommitted" />
      <MemberSignature Language="VB.NET" Value="ReadUncommitted" />
      <MemberSignature Language="C++ CLI" Value="ReadUncommitted" />
      <MemberSignature Language="F#" Value="ReadUncommitted = 256" Usage="System.Data.IsolationLevel.ReadUncommitted" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IsolationLevel</ReturnType>
      </ReturnValue>
      <MemberValue>256</MemberValue>
      <Docs>
        <summary><span data-ttu-id="40b82-161">Чтение "грязных" данных возможно, что означает отсутствие совмещаемых и монопольных блокировок.</span><span class="sxs-lookup"><span data-stu-id="40b82-161">A dirty read is possible, meaning that no shared locks are issued and no exclusive locks are honored.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="RepeatableRead">
      <MemberSignature Language="C#" Value="RepeatableRead" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.IsolationLevel RepeatableRead = int32(65536)" />
      <MemberSignature Language="DocId" Value="F:System.Data.IsolationLevel.RepeatableRead" />
      <MemberSignature Language="VB.NET" Value="RepeatableRead" />
      <MemberSignature Language="C++ CLI" Value="RepeatableRead" />
      <MemberSignature Language="F#" Value="RepeatableRead = 65536" Usage="System.Data.IsolationLevel.RepeatableRead" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IsolationLevel</ReturnType>
      </ReturnValue>
      <MemberValue>65536</MemberValue>
      <Docs>
        <summary><span data-ttu-id="40b82-162">Блокировки помещаются на все данные, используемые в запросе, что предотвращает обновление данных другими пользователями.</span><span class="sxs-lookup"><span data-stu-id="40b82-162">Locks are placed on all data that is used in a query, preventing other users from updating the data.</span></span> <span data-ttu-id="40b82-163">Предотвращает неповторяемое чтение, однако появление фиктивных строк остается возможным.</span><span class="sxs-lookup"><span data-stu-id="40b82-163">Prevents non-repeatable reads but phantom rows are still possible.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Serializable">
      <MemberSignature Language="C#" Value="Serializable" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.IsolationLevel Serializable = int32(1048576)" />
      <MemberSignature Language="DocId" Value="F:System.Data.IsolationLevel.Serializable" />
      <MemberSignature Language="VB.NET" Value="Serializable" />
      <MemberSignature Language="C++ CLI" Value="Serializable" />
      <MemberSignature Language="F#" Value="Serializable = 1048576" Usage="System.Data.IsolationLevel.Serializable" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IsolationLevel</ReturnType>
      </ReturnValue>
      <MemberValue>1048576</MemberValue>
      <Docs>
        <summary><span data-ttu-id="40b82-164">Блокировка диапазона устанавливается для объекта <see cref="T:System.Data.DataSet" />, что предотвращает обновление или ставку строк другими пользователями в набор данных до завершения транзакции.</span><span class="sxs-lookup"><span data-stu-id="40b82-164">A range lock is placed on the <see cref="T:System.Data.DataSet" />, preventing other users from updating or inserting rows into the dataset until the transaction is complete.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Snapshot">
      <MemberSignature Language="C#" Value="Snapshot" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.IsolationLevel Snapshot = int32(16777216)" />
      <MemberSignature Language="DocId" Value="F:System.Data.IsolationLevel.Snapshot" />
      <MemberSignature Language="VB.NET" Value="Snapshot" />
      <MemberSignature Language="C++ CLI" Value="Snapshot" />
      <MemberSignature Language="F#" Value="Snapshot = 16777216" Usage="System.Data.IsolationLevel.Snapshot" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IsolationLevel</ReturnType>
      </ReturnValue>
      <MemberValue>16777216</MemberValue>
      <Docs>
        <summary><span data-ttu-id="40b82-165">Уменьшает блокировку, сохраняя версию данных, которую приложение может считывать в то время, когда другое приложение изменяет те же самые данные.</span><span class="sxs-lookup"><span data-stu-id="40b82-165">Reduces blocking by storing a version of data that one application can read while another is modifying the same data.</span></span> <span data-ttu-id="40b82-166">Указывает, что из одной транзакции пользователь не может просматривать изменения, сделанные в других транзакциях, даже если он запросит их повторно.</span><span class="sxs-lookup"><span data-stu-id="40b82-166">Indicates that from one transaction you cannot see changes made in other transactions, even if you requery.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Unspecified">
      <MemberSignature Language="C#" Value="Unspecified" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.IsolationLevel Unspecified = int32(-1)" />
      <MemberSignature Language="DocId" Value="F:System.Data.IsolationLevel.Unspecified" />
      <MemberSignature Language="VB.NET" Value="Unspecified" />
      <MemberSignature Language="C++ CLI" Value="Unspecified" />
      <MemberSignature Language="F#" Value="Unspecified = -1" Usage="System.Data.IsolationLevel.Unspecified" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IsolationLevel</ReturnType>
      </ReturnValue>
      <MemberValue>-1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="40b82-167">Используется уровень изоляции, отличный от указанного, однако этот уровень не может быть определен.</span><span class="sxs-lookup"><span data-stu-id="40b82-167">A different isolation level than the one specified is being used, but the level cannot be determined.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>