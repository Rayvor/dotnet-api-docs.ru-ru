<Type Name="DataTableReader" FullName="System.Data.DataTableReader">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f86464005e30acfd4d0dac6af6136d4819e27a1a" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69367665" /></Metadata><TypeSignature Language="C#" Value="public sealed class DataTableReader : System.Data.Common.DbDataReader" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DataTableReader extends System.Data.Common.DbDataReader" />
  <TypeSignature Language="DocId" Value="T:System.Data.DataTableReader" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DataTableReader&#xA;Inherits DbDataReader" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataTableReader sealed : System::Data::Common::DbDataReader" />
  <TypeSignature Language="F#" Value="type DataTableReader = class&#xA;    inherit DbDataReader" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbDataReader</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Объект <see cref="T:System.Data.DataTableReader" /> получает содержимое одного или нескольких объектов <see cref="T:System.Data.DataTable" /> в виде одного или нескольких однопроходных результирующих наборов, доступных только для чтения.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Работает во многом подобно любому другому средству чтения данных, <xref:System.Data.SqlClient.SqlDataReader>такому как, <xref:System.Data.DataTableReader> за исключением того, что предоставляет для перебора строк в <xref:System.Data.DataTable>. <xref:System.Data.DataTableReader> Иными словами, он обеспечивает перебор строк в кэше. Кэшированные данные можно изменить, когда <xref:System.Data.DataTableReader> активен, и читатель автоматически сохранит свое расположение.  
  
 При создании <xref:System.Data.DataTableReader> <xref:System.Data.DataTableReader> из объект результирующий объект содержит один <xref:System.Data.DataTable> результирующий набор с теми же данными, что и у объекта, из которого он был создан, за исключением строк, которые были помечены как удаленные. <xref:System.Data.DataTable> Столбцы отображаются в том же порядке, что и в исходном <xref:System.Data.DataTable>. Структура возвращаемого результата идентична схеме и данным с оригиналом <xref:System.Data.DataTable>. Объект <xref:System.Data.DataTableReader> , созданный путем <xref:System.Data.DataSet.CreateDataReader*> вызова метода <xref:System.Data.DataSet> объекта, содержит несколько результирующих наборов, если <xref:System.Data.DataSet> содержит более одной таблицы. Результаты находятся в той же последовательности, что и <xref:System.Data.DataTable> объекты <xref:System.Data.DataTableCollection> в <xref:System.Data.DataSet> объекте.  
  
 Возвращаемый результирующий набор содержит только текущую версию каждой <xref:System.Data.DataRow>строки, которые помечены для удаления, пропускаются.  
  
 Предоставляет стабильный итератор, то есть содержимое `DataTableReader` объекта не становится недействительным, если размер базовой коллекции изменяется во время итерации. `DataTableReader` Например, если одна или несколько строк в <xref:System.Data.DataTable.Rows%2A> коллекции удаляются или удаляются во время итерации, то текущая позицией `DataTableReader` в будет поддерживаться соответствующим образом, а итератор не становится недействительным.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.DataTableReader" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataTableReader (System.Data.DataTable dataTable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.DataTable dataTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.#ctor(System.Data.DataTable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataTableReader(System::Data::DataTable ^ dataTable);" />
      <MemberSignature Language="F#" Value="new System.Data.DataTableReader : System.Data.DataTable -&gt; System.Data.DataTableReader" Usage="new System.Data.DataTableReader dataTable" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dataTable" Type="System.Data.DataTable" />
      </Parameters>
      <Docs>
        <param name="dataTable">Объект <see cref="T:System.Data.DataTable" />, из которого новый объект <see cref="T:System.Data.DataTableReader" /> получает свой результирующий набор.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.DataTableReader" />, с использованием данных из заданного объекта <see cref="T:System.Data.DataTable" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataTableReader (System.Data.DataTable[] dataTables);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.DataTable[] dataTables) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.#ctor(System.Data.DataTable[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dataTables As DataTable())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataTableReader(cli::array &lt;System::Data::DataTable ^&gt; ^ dataTables);" />
      <MemberSignature Language="F#" Value="new System.Data.DataTableReader : System.Data.DataTable[] -&gt; System.Data.DataTableReader" Usage="new System.Data.DataTableReader dataTables" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dataTables" Type="System.Data.DataTable[]" />
      </Parameters>
      <Docs>
        <param name="dataTables">Массив объектов <see cref="T:System.Data.DataTable" />, который предоставляет результаты для нового объекта <see cref="T:System.Data.DataTableReader" />.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.DataTableReader" />, используя указанный массив объектов <see cref="T:System.Data.DataTable" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если <xref:System.Data.DataTableReader> необходимо создать объект на основе всех или подмножества таблиц внутри конкретного <xref:System.Data.DataSet>объекта, вызовите `DataSet` <xref:System.Data.DataSet.CreateDataReader*> метод. Если вы хотите создать новый <xref:System.Data.DataTableReader> экземпляр на основе `DataTable` группы экземпляров, которые не связаны иным образом, используйте этот конструктор. Можно также воспользоваться преимуществами этого конструктора `DataTables` `DataTableReader`, чтобы изменить порядок расположения в, если их порядок в источнике `DataSet` не соответствует вашим потребностям.  
  
   
  
## Examples  
 В следующем примере метод тестконструктор создает два <xref:System.Data.DataTable> экземпляра. Чтобы продемонстрировать этот конструктор для <xref:System.Data.DataTableReader> класса, образец создает новый `DataTableReader` на основе массива, содержащего два `DataTables`, и выполняет простую операцию, выполняя печать содержимого из первых нескольких столбцов в консоли. окно. Чтобы протестировать это приложение, создайте новое консольное приложение и вставьте пример кода в созданный файл.  
  
 [!code-csharp[DataWorks DataTableReader.ctor#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.ctor/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.ctor#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.ctor/VB/source.vb#1)]  
  
 В окне консоли отобразятся следующие результаты.  
  
```  
1 Mary  
2 Andy  
3 Peter  
4 Russ  
1 Wireless Network Card  
2 Hard Drive  
3 Monitor  
4 CPU  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberSignature Language="F#" Value="override this.Close : unit -&gt; unit" Usage="dataTableReader.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Закрывает текущий объект <see cref="T:System.Data.DataTableReader" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Вызов `Close()` для закрытого `DataTableReader` объекта не вызывает ошибку.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Depth">
      <MemberSignature Language="C#" Value="public override int Depth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Depth" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTableReader.Depth" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Depth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Depth { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Depth : int" Usage="System.Data.DataTableReader.Depth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Глубина вложенности для текущей строки объекта <see cref="T:System.Data.DataTableReader" />.</summary>
        <value>Глубина вложенности для текущей строки; всегда равна нулю.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `DataTableReader`не поддерживает вложение. `Depth` Свойство всегда возвращает ноль.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FieldCount">
      <MemberSignature Language="C#" Value="public override int FieldCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 FieldCount" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTableReader.FieldCount" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property FieldCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int FieldCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.FieldCount : int" Usage="System.Data.DataTableReader.FieldCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает количество столбцов в текущей строке.</summary>
        <value>Значение 0, если метод не находится внутри допустимого набора записей; в обратном случае — число столбцов в текущей строке.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">Предпринята попытка извлечения значения количества полей в закрытом объекте <see cref="T:System.Data.DataTableReader" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetBoolean">
      <MemberSignature Language="C#" Value="public override bool GetBoolean (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool GetBoolean(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetBoolean(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetBoolean (ordinal As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool GetBoolean(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetBoolean : int -&gt; bool" Usage="dataTableReader.GetBoolean ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">Порядковый номер столбца (от нуля).</param>
        <summary>Возвращает значение заданного столбца в виде объекта <see cref="T:System.Boolean" />.</summary>
        <returns>Значение указанного столбца.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Преобразования не выполняются; поэтому извлеченные данные должны быть либо логическими, либо приводимыми к логическому типу, либо сгенерировано исключение.  
  
 <xref:System.Data.DataTableReader.IsDBNull%2A> Перед вызовом этого метода проверьте, есть ли значения NULL.  
  
   
  
## Examples  
 В следующем примере выводится содержимое столбца с номером 2 в переданном <xref:System.Data.DataTableReader>объекте. Если значение столбца в определенной строке равно null, код отображает > NULL в тексте \<. Если данные в столбце имеют неправильный тип, в примере выводится сообщение об ошибке для каждой строки.  
  
 [!code-csharp[DataWorks DataTableReader.GetBoolean#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetBoolean/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetBoolean#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetBoolean/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Переданный индекс находился вне диапазона от 0 до <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">Предпринята попытка извлечения данных из удаленной строки.</exception>
        <exception cref="T:System.InvalidOperationException">Предпринята попытка чтения или доступа к столбцу закрытого объекта <see cref="T:System.Data.DataTableReader" />.</exception>
        <exception cref="T:System.InvalidCastException">Указанный столбец не содержит значения <see langword="Boolean" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetByte">
      <MemberSignature Language="C#" Value="public override byte GetByte (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8 GetByte(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetByte(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetByte (ordinal As Integer) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Byte GetByte(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetByte : int -&gt; byte" Usage="dataTableReader.GetByte ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">Порядковый номер столбца (от нуля).</param>
        <summary>Возвращает значение указанного столбца в виде байта.</summary>
        <returns>Значение указанного столбца.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Преобразования не выполняются; поэтому извлеченные данные должны уже быть байтом или приводиться к байту.  
  
 <xref:System.Data.DataTableReader.IsDBNull%2A> Перед вызовом этого метода проверьте, есть ли значения NULL.  
  
   
  
## Examples  
 В следующем примере выводится содержимое столбца с номером 2 в переданном <xref:System.Data.DataTableReader>объекте. Если значение столбца в определенной строке равно null, код отображает > NULL в тексте \<. Если данные в столбце имеют неправильный тип, в примере выводится сообщение об ошибке для каждой строки.  
  
 [!code-csharp[DataWorks DataTableReader.GetByte#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetByte/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetByte#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetByte/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Переданный индекс находился вне диапазона от 0 до <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">Предпринята попытка извлечения данных из удаленной строки.</exception>
        <exception cref="T:System.InvalidOperationException">Предпринята попытка чтения или доступа к столбцу закрытого объекта <see langword="DataTableReader" />.</exception>
        <exception cref="T:System.InvalidCastException">Указанный столбец не содержит данных с типом byte.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public override long GetBytes (int ordinal, long dataIndex, byte[] buffer, int bufferIndex, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 GetBytes(int32 ordinal, int64 dataIndex, unsigned int8[] buffer, int32 bufferIndex, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetBytes (ordinal As Integer, dataIndex As Long, buffer As Byte(), bufferIndex As Integer, length As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override long GetBytes(int ordinal, long dataIndex, cli::array &lt;System::Byte&gt; ^ buffer, int bufferIndex, int length);" />
      <MemberSignature Language="F#" Value="override this.GetBytes : int * int64 * byte[] * int * int -&gt; int64" Usage="dataTableReader.GetBytes (ordinal, dataIndex, buffer, bufferIndex, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
        <Parameter Name="dataIndex" Type="System.Int64" />
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="bufferIndex" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">Порядковый номер столбца (от нуля).</param>
        <param name="dataIndex">Индекс в поле, с которого необходимо начать считывание.</param>
        <param name="buffer">Буфер, в который считывается поток байтов.</param>
        <param name="bufferIndex">Индекс в буфере, начиная с которого будут помещаться данные.</param>
        <param name="length">Максимальная длина для копирования в буфер.</param>
        <summary>Считывает поток байтов с заданного смещения столбца в буфер в виде массива, который начинается с конкретного смещения буфера.</summary>
        <returns>Число фактически считанных байтов.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `GetBytes`Возвращает количество доступных байтов в поле. В большинстве случаев это точная длина поля. Однако возвращаемое число может быть меньше истинной длины поля, если `GetBytes` уже использовалось для получения байтов из поля. Это может быть так, например, когда объект <xref:System.Data.DataTableReader> считывает большую структуру данных в буфер.  
  
 Если передать буфер, который имеет значение `null` (`Nothing` в Visual Basic), `GetBytes` возвращает длину всего поля в байтах, а не оставшегося размера, основанного на параметре смещения буфера.  
  
 Преобразования не выполняются; поэтому извлеченные данные должны уже быть массивом байтов или приводиться к массиву байтов.  
  
   
  
## Examples  
 В следующем примере создается <xref:System.Data.DataTableReader> на основе данных в образце базы данных AdventureWorks и сохраняется каждый полученный образ в отдельный файл в файле C:\. Folder. Чтобы протестировать это приложение, создайте новое консольное приложение, сослаться на сборку System. Drawing. dll и вставьте пример кода в созданный файл.  
  
 [!code-csharp[DataWorks DataTableReader.GetBytes#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetBytes/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetBytes#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetBytes/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Переданный индекс находился вне диапазона от 0 до <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">Предпринята попытка извлечения данных из удаленной строки.</exception>
        <exception cref="T:System.InvalidOperationException">Предпринята попытка чтения или доступа к столбцу закрытого объекта <see langword="DataTableReader" />.</exception>
        <exception cref="T:System.InvalidCastException">Указанный столбец не содержит массива данных с типом byte.</exception>
        <altmember cref="M:System.Data.DataTableReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetChar">
      <MemberSignature Language="C#" Value="public override char GetChar (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance char GetChar(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetChar(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetChar (ordinal As Integer) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override char GetChar(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetChar : int -&gt; char" Usage="dataTableReader.GetChar ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">Порядковый номер столбца (от нуля).</param>
        <summary>Возвращает значение указанного столбца в виде символа.</summary>
        <returns>Значение столбца.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Преобразования не выполняются; поэтому извлеченные данные должны уже быть символом или приводимым к символу.  
  
 <xref:System.Data.DataTableReader.IsDBNull%2A> Перед вызовом этого метода проверьте, есть ли значения NULL.  
  
   
  
## Examples  
 В следующем примере выводится содержимое столбца с номером 2 в переданном объекте DataTableReader. Если значение столбца в определенной строке равно null, код отображает > NULL в тексте \<. Если данные в столбце имеют неправильный тип, в примере выводится сообщение об ошибке для каждой строки.  
  
 [!code-csharp[DataWorks DataTableReader.GetChar#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetChar/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetChar#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetChar/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Переданный индекс находился вне диапазона от 0 до <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">Предпринята попытка извлечения данных из удаленной строки.</exception>
        <exception cref="T:System.InvalidOperationException">Предпринята попытка чтения или доступа к столбцу закрытого объекта <see langword="DataTableReader" />.</exception>
        <exception cref="T:System.InvalidCastException">Заданное поле не содержит знака.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetChars">
      <MemberSignature Language="C#" Value="public override long GetChars (int ordinal, long dataIndex, char[] buffer, int bufferIndex, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 GetChars(int32 ordinal, int64 dataIndex, char[] buffer, int32 bufferIndex, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetChars (ordinal As Integer, dataIndex As Long, buffer As Char(), bufferIndex As Integer, length As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override long GetChars(int ordinal, long dataIndex, cli::array &lt;char&gt; ^ buffer, int bufferIndex, int length);" />
      <MemberSignature Language="F#" Value="override this.GetChars : int * int64 * char[] * int * int -&gt; int64" Usage="dataTableReader.GetChars (ordinal, dataIndex, buffer, bufferIndex, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
        <Parameter Name="dataIndex" Type="System.Int64" />
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="bufferIndex" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">Порядковый номер столбца (от нуля).</param>
        <param name="dataIndex">Индекс в поле, с которого необходимо начать считывание.</param>
        <param name="buffer">Буфер, в который необходимо считать поток данных с типом char.</param>
        <param name="bufferIndex">Индекс в буфере, начиная с которого будут помещаться данные.</param>
        <param name="length">Максимальная длина для копирования в буфер.</param>
        <summary>Возвращает значение указанного столбца в виде массива символов.</summary>
        <returns>Число фактически считанных символов.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `GetChars`Возвращает количество доступных символов в поле. В большинстве случаев это точная длина поля. Однако возвращаемое число может быть меньше истинной длины поля, если `GetChars` уже используется для получения символов из поля.  
  
 Фактическое число считываемых символов может быть меньше запрошенной длины, если достигнут конец поля. Если передать буфер, имеющий значение null (`Nothing` в Visual Basic), `GetChars` возвращает длину всего поля в символах, а не оставшийся размер, основанный на параметре смещения буфера.  
  
 Преобразования не выполняются; Поэтому извлекаемые данные должны уже быть массивом символов или приводиться к массиву символов.  
  
   
  
## Examples  
 В следующем примере демонстрируется `GetChars` метод. Метод должен передаваться заполненным двумя столбцами данных: именем файла в первом столбце и массивом символов во втором. `DataTableReader` `TestGetChars` Кроме того, `TestGetChars` позволяет указать размер буфера, который будет использоваться при чтении данных из массива символов `DataTableReader`в. `TestGetChars`создает файл `DataTableReader`, соответствующий каждой строке данных в, используя указанные данные в первом столбце `DataTableReader` в качестве имени файла.  
  
 В этой процедуре демонстрируется использование `GetChars` метода чтения данных, сохраненных в в `DataTable` виде массива символов. Любой другой тип данных приводит к тому `GetChars` , что метод выдает `InvalidCastException`исключение.  
  
 [!code-csharp[DataWorks DataTableReader.GetChars#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetChars/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetChars#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetChars/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Переданный индекс находился вне диапазона от 0 до <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">Предпринята попытка извлечения данных из удаленной строки.</exception>
        <exception cref="T:System.InvalidOperationException">Предпринята попытка чтения или доступа к столбцу закрытого объекта <see langword="DataTableReader" />.</exception>
        <exception cref="T:System.InvalidCastException">Указанный столбец не содержит массива знаков.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetDataTypeName">
      <MemberSignature Language="C#" Value="public override string GetDataTypeName (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetDataTypeName(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetDataTypeName(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDataTypeName (ordinal As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetDataTypeName(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetDataTypeName : int -&gt; string" Usage="dataTableReader.GetDataTypeName ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">Порядковый номер столбца (от нуля).</param>
        <summary>Получает строку, представляющую тип данных в указанном столбце.</summary>
        <returns>Строка, представляющая имя типа данных в столбце.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод всегда возвращает тип базового <xref:System.Data.DataColumn> объекта, а не зависящий от поставщика тип. <xref:System.Data.DataTableReader.GetDataTypeName%2A>  
  
   
  
## Examples  
 Следующее консольное приложение отображает список полей и имена их типов из простого <xref:System.Data.DataTable>:  
  
 [!code-csharp[DataWorks DataTableReader.GetDataTypeName#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetDataTypeName/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetDataTypeName#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetDataTypeName/VB/source.vb#1)]  
  
 В окне консоли отобразятся следующие результаты.  
  
```  
ID: Int32  
Name: String  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Переданный индекс находился вне диапазона от 0 до <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
        <exception cref="T:System.InvalidOperationException">Предпринята попытка чтения или доступа к столбцу закрытого объекта <see cref="T:System.Data.DataTableReader" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetDateTime">
      <MemberSignature Language="C#" Value="public override DateTime GetDateTime (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.DateTime GetDateTime(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetDateTime(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDateTime (ordinal As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override DateTime GetDateTime(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetDateTime : int -&gt; DateTime" Usage="dataTableReader.GetDateTime ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">Порядковый номер столбца (от нуля).</param>
        <summary>Возвращает значение указанного столбца в виде объекта <see cref="T:System.DateTime" />.</summary>
        <returns>Значение указанного столбца.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Преобразования не выполняются; поэтому извлеченные данные уже должны быть <xref:System.DateTime> приводимыми `DataTime`к.  
  
 <xref:System.Data.DataTableReader.IsDBNull%2A> Перед вызовом этого метода проверьте, есть ли значения NULL.  
  
   
  
## Examples  
 В следующем примере выводится содержимое столбца с номером 2 в переданном <xref:System.Data.DataTableReader>объекте. Если значение столбца в определенной строке равно null, код отображает > NULL в тексте \<. Если данные в столбце имеют неправильный тип, в примере выводится сообщение об ошибке для каждой строки.  
  
 [!code-csharp[DataWorks DataTableReader.GetDateTime#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetDateTime/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetDateTime#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetDateTime/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Переданный индекс находился вне диапазона от 0 до <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">Предпринята попытка извлечения данных из удаленной строки.</exception>
        <exception cref="T:System.InvalidOperationException">Предпринята попытка чтения или доступа к столбцу закрытого объекта <see langword="DataTableReader" />.</exception>
        <exception cref="T:System.InvalidCastException">Указанный столбец не содержит значения DateTime.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetDecimal">
      <MemberSignature Language="C#" Value="public override decimal GetDecimal (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Decimal GetDecimal(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetDecimal(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDecimal (ordinal As Integer) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Decimal GetDecimal(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetDecimal : int -&gt; decimal" Usage="dataTableReader.GetDecimal ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">Порядковый номер столбца (от нуля).</param>
        <summary>Возвращает значение заданного столбца в виде объекта <see cref="T:System.Decimal" />.</summary>
        <returns>Значение указанного столбца.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Преобразования не выполняются; поэтому извлеченные данные уже должны быть <xref:System.Decimal> приводимыми `Decimal`к.  
  
 <xref:System.Data.DataTableReader.IsDBNull%2A> Перед вызовом этого метода проверьте, есть ли значения NULL.  
  
   
  
## Examples  
 В следующем примере выводится содержимое столбца с номером 2 в переданном <xref:System.Data.DataTableReader>объекте. Если значение столбца в определенной строке равно null, код отображает > NULL в тексте \<. Если данные в столбце имеют неправильный тип, в примере выводится сообщение об ошибке для каждой строки.  
  
 [!code-csharp[DataWorks DataTableReader.GetDecimal#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetDecimal/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetDecimal#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetDecimal/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Переданный индекс находился вне диапазона от 0 до <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">Предпринята попытка извлечения данных из удаленной строки.</exception>
        <exception cref="T:System.InvalidOperationException">Предпринята попытка чтения или доступа к столбцу закрытого объекта <see langword="DataTableReader" />.</exception>
        <exception cref="T:System.InvalidCastException">Указанный столбец не содержит значения <see langword="Decimal" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetDouble">
      <MemberSignature Language="C#" Value="public override double GetDouble (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance float64 GetDouble(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetDouble(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDouble (ordinal As Integer) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override double GetDouble(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetDouble : int -&gt; double" Usage="dataTableReader.GetDouble ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">Отсчитываемый от нуля порядковый номер столбца.</param>
        <summary>Возвращает значение указанного столбца в виде числа с плавающей запятой с двойной точностью.</summary>
        <returns>Значение указанного столбца.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Преобразования не выполняются; поэтому извлеченные данные должны уже представлять собой число с плавающей запятой двойной точности или должны быть приводиться к числу с плавающей запятой двойной точности.  
  
 <xref:System.Data.DataTableReader.IsDBNull%2A> Перед вызовом этого метода проверьте, есть ли значения NULL.  
  
   
  
## Examples  
 В следующем примере выводится содержимое столбца с номером 2 в переданном <xref:System.Data.DataTableReader>объекте. Если значение столбца в определенной строке равно null, код отображает > NULL в тексте \<. Если данные в столбце имеют неправильный тип, в примере выводится сообщение об ошибке для каждой строки.  
  
 [!code-csharp[DataWorks DataTableReader.GetDouble#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetDouble/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetDouble#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetDouble/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Переданный индекс находился вне диапазона от 0 до <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">Предпринята попытка извлечения данных из удаленной строки.</exception>
        <exception cref="T:System.InvalidOperationException">Предпринята попытка чтения или доступа к столбцу закрытого объекта <see langword="DataTableReader" />.</exception>
        <exception cref="T:System.InvalidCastException">Указанный столбец не содержит числа с плавающей запятой с двойной точностью.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public override System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="dataTableReader.GetEnumerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает перечислитель, который может использоваться для перемещения по коллекции элементов.</summary>
        <returns>Объект <see cref="T:System.Collections.IEnumerator" />, представляющий коллекцию элементов.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Перечислители позволяют только считывать данные в <xref:System.Data.DataTableReader>. Перечислители не могут использоваться для изменения базовой коллекции.  
  
 Сначала перечислитель располагается перед первым элементом в коллекции. В этой позиции вызов <xref:System.Collections.IEnumerator.Current%2A> создает исключение. Поэтому необходимо вызвать метод `MoveNext`, чтобы переместить перечислитель к первому элементу коллекции до считывания значения свойства `Current`.  
  
 `Current`Возвращает, и возвращает тот же объект, <xref:System.Collections.IEnumerator.MoveNext%2A> пока не будет вызван метод или. <xref:System.Collections.IEnumerator.Reset%2A> <xref:System.Data.Common.DbDataRecord> `MoveNext` задает `Current` в качестве значения для следующего элемента.  
  
 После передачи конца коллекции перечислитель размещается после последнего элемента в коллекции, а вызов `MoveNext` возвращает false. Если последний вызов `MoveNext` возвращал `false`, вызов `Current` создает исключение. Кроме того, поскольку <xref:System.Data.DataTableReader> предоставляет доступ к данным только для прямого доступа, <xref:System.Collections.IEnumerator.Reset%2A> вызов метода IEnumerator создает исключение <xref:System.NotSupportedException>.  
  
 <xref:System.Data.DataTableReader> Предоставляет стабильный перечислитель. Это означает, что даже если удаление строк или дополнений происходит в базовых данных, перечислитель, возвращаемый вызовом <xref:System.Data.DataTableReader.GetEnumerator%2A> , по-прежнему является допустимым.  
  
   
  
## Examples  
 В следующем примере иллюстрируется использование метода <xref:System.Data.DataTableReader.GetEnumerator%2A>. Это включает поведение перечислителя при удалении строк из базового <xref:System.Data.DataTable> объекта, когда перечислитель активен.  
  
 [!code-csharp[DataWorks DataTableReader.GetEnumerator#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetEnumerator/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetEnumerator#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetEnumerator/VB/source.vb#1)]  
  
 Процедура отображает следующий текст в окне консоли:  
  
```  
Peter  
Mary  
Russ  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Предпринята попытка чтения или доступа к столбцу закрытого объекта <see cref="T:System.Data.DataTableReader" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetFieldType">
      <MemberSignature Language="C#" Value="public override Type GetFieldType (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Type GetFieldType(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetFieldType(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetFieldType (ordinal As Integer) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Type ^ GetFieldType(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetFieldType : int -&gt; Type" Usage="dataTableReader.GetFieldType ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">Порядковый номер столбца (от нуля).</param>
        <summary>Возвращает тип <see cref="T:System.Type" />, который является типом данных объекта.</summary>
        <returns>Тип данных объекта (<see cref="T:System.Type" />).</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Вызовите следующую процедуру, передав <xref:System.Data.DataTableReader> экземпляр, чтобы отобразить список всех полей и полное имя для каждого типа в окне консоли.  
  
 [!code-csharp[DataWorks DataTableReader.GetFieldType#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetFieldType/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetFieldType#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetFieldType/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Переданный индекс находился вне диапазона от 0 до <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
        <exception cref="T:System.InvalidOperationException">Предпринята попытка чтения столбца закрытого объекта <see cref="T:System.Data.DataTableReader" /> или получения доступа к нему.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetFloat">
      <MemberSignature Language="C#" Value="public override float GetFloat (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance float32 GetFloat(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetFloat(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetFloat (ordinal As Integer) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override float GetFloat(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetFloat : int -&gt; single" Usage="dataTableReader.GetFloat ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">Порядковый номер столбца (от нуля).</param>
        <summary>Возвращает значение заданного столбца в виде числа с плавающей запятой одинарной точности.</summary>
        <returns>Значение столбца.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Преобразования не выполняются; поэтому извлеченные данные должны уже представлять собой число с плавающей запятой одиночной точности или приводиться к числу с плавающей запятой одиночной точности.  
  
 <xref:System.Data.DataTableReader.IsDBNull%2A> Перед вызовом этого метода проверьте, есть ли значения NULL.  
  
   
  
## Examples  
 В следующем примере выводится содержимое столбца с номером 2 в переданном <xref:System.Data.DataTableReader>объекте. Если значение столбца в определенной строке равно null, код отображает > NULL в тексте \<. Если данные в столбце имеют неправильный тип, в примере выводится сообщение об ошибке для каждой строки.  
  
 [!code-csharp[DataWorks DataTableReader.GetFloat#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetFloat/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetFloat#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetFloat/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Переданный индекс находился вне диапазона от 0 до <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">Предпринята попытка извлечения данных из удаленной строки.</exception>
        <exception cref="T:System.InvalidOperationException">Предпринята попытка чтения или доступа к столбцу закрытого объекта <see cref="T:System.Data.DataTableReader" />.</exception>
        <exception cref="T:System.InvalidCastException">Указанный столбец не содержит числа с плавающей запятой с одинарной точностью.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetGuid">
      <MemberSignature Language="C#" Value="public override Guid GetGuid (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Guid GetGuid(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetGuid(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetGuid (ordinal As Integer) As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Guid GetGuid(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetGuid : int -&gt; Guid" Usage="dataTableReader.GetGuid ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">Порядковый номер столбца (от нуля).</param>
        <summary>Возвращает значение заданного столбца в виде глобально-уникального идентификатора GUID.</summary>
        <returns>Значение указанного столбца.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Преобразования не выполняются; поэтому извлеченные данные уже должны быть <xref:System.Guid> приводимыми `Guid`к.  
  
 <xref:System.Data.DataTableReader.IsDBNull%2A> Перед вызовом этого метода проверьте, есть ли значения NULL.  
  
   
  
## Examples  
 В следующем примере выводится содержимое столбца с номером 2 в переданном объекте DataTableReader. Если значение столбца в определенной строке равно null, код отображает > NULL в тексте \<. Если данные в столбце имеют неправильный тип, в примере выводится сообщение об ошибке для каждой строки.  
  
 [!code-csharp[DataWorks DataTableReader.GetGuid#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetGuid/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetGuid#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetGuid/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Переданный индекс находился вне диапазона от 0 до <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">Предпринята попытка извлечения данных из удаленной строки.</exception>
        <exception cref="T:System.InvalidOperationException">Предпринята попытка чтения или доступа к столбцу закрытого объекта <see cref="T:System.Data.DataTableReader" />.</exception>
        <exception cref="T:System.InvalidCastException">Указанный столбец не содержит GUID.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetInt16">
      <MemberSignature Language="C#" Value="public override short GetInt16 (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int16 GetInt16(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetInt16(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetInt16 (ordinal As Integer) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override short GetInt16(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetInt16 : int -&gt; int16" Usage="dataTableReader.GetInt16 ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">Порядковый номер (с нуля) столбца.</param>
        <summary>Получает значение заданного столбца в виде 16-битового целого числа со знаком.</summary>
        <returns>Значение указанного столбца.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Преобразования не выполняются; Следовательно, извлеченные данные должны уже быть <xref:System.Int16> или приводиться `Int16`к.  
  
 <xref:System.Data.DataTableReader.IsDBNull%2A> Перед вызовом этого метода проверьте, есть ли значения NULL.  
  
   
  
## Examples  
 В следующем примере выводится содержимое столбца с номером 2 в переданном <xref:System.Data.DataTableReader>объекте. Если значение столбца в определенной строке равно null, код отображает > NULL в тексте \<. Если данные в столбце имеют неправильный тип, в примере выводится сообщение об ошибке для каждой строки.  
  
 [!code-csharp[DataWorks DataTableReader.GetInt16#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetInt16/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetInt16#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetInt16/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Переданный индекс находился вне диапазона от 0 до <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">Предпринята попытка извлечения данных из удаленной строки.</exception>
        <exception cref="T:System.InvalidOperationException">Предпринята попытка чтения или доступа к столбцу закрытого объекта <see cref="T:System.Data.DataTableReader" />.</exception>
        <exception cref="T:System.InvalidCastException">Указанный столбец не содержит 16-разрядное целое число со знаком.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetInt32">
      <MemberSignature Language="C#" Value="public override int GetInt32 (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetInt32(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetInt32(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetInt32 (ordinal As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetInt32(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetInt32 : int -&gt; int" Usage="dataTableReader.GetInt32 ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">Порядковый номер (с нуля) столбца.</param>
        <summary>Возвращает значение указанного столбца в виде 32-разрядного целого числа со знаком.</summary>
        <returns>Значение указанного столбца.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Преобразования не выполняются; Следовательно, извлеченные данные должны уже быть <xref:System.Int32> или приводиться `Int32`к.  
  
 <xref:System.Data.DataTableReader.IsDBNull%2A> Перед вызовом этого метода проверьте, есть ли значения NULL.  
  
   
  
## Examples  
 В следующем примере выводится содержимое столбца с номером 2 в переданном <xref:System.Data.DataTableReader>объекте. Если значение столбца в определенной строке равно null, код отображает > NULL в тексте \<. Если данные в столбце имеют неправильный тип, в примере выводится сообщение об ошибке для каждой строки.  
  
 [!code-csharp[DataWorks DataTableReader.GetInt32#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetInt32/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetInt32#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetInt32/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Переданный индекс находился вне диапазона от 0 до <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">Предпринята попытка извлечения данных из удаленной строки.</exception>
        <exception cref="T:System.InvalidOperationException">Предпринята попытка чтения столбца закрытого объекта <see cref="T:System.Data.DataTableReader" /> или получения доступа к нему.</exception>
        <exception cref="T:System.InvalidCastException">Указанный столбец не содержит 32-разрядное целое число со знаком.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetInt64">
      <MemberSignature Language="C#" Value="public override long GetInt64 (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 GetInt64(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetInt64(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetInt64 (ordinal As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override long GetInt64(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetInt64 : int -&gt; int64" Usage="dataTableReader.GetInt64 ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">Порядковый номер (с нуля) столбца.</param>
        <summary>Возвращает значение указанного столбца в виде 64-разрядного целого числа со знаком.</summary>
        <returns>Значение указанного столбца.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Преобразования не выполняются; Следовательно, извлеченные данные должны уже быть <xref:System.Int64> или приводиться `Int64`к.  
  
 <xref:System.Data.DataTableReader.IsDBNull%2A> Перед вызовом этого метода проверьте, есть ли значения NULL.  
  
   
  
## Examples  
 В следующем примере выводится содержимое столбца с номером 2 в переданном <xref:System.Data.DataTableReader>объекте. Если значение столбца в определенной строке равно null, код отображает > NULL в тексте \<. Если данные в столбце имеют неправильный тип, в примере выводится сообщение об ошибке для каждой строки.  
  
 [!code-csharp[DataWorks DataTableReader.GetInt64#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetInt64/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetInt64#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetInt64/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Переданный индекс находился вне диапазона от 0 до <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">Предпринята попытка извлечения данных из удаленной строки.</exception>
        <exception cref="T:System.InvalidOperationException">Предпринята попытка чтения столбца закрытого объекта <see cref="T:System.Data.DataTableReader" /> или получения доступа к нему.</exception>
        <exception cref="T:System.InvalidCastException">Указанный столбец не содержит 64-разрядное целое число со знаком.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetName">
      <MemberSignature Language="C#" Value="public override string GetName (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetName(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetName(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetName (ordinal As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetName(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetName : int -&gt; string" Usage="dataTableReader.GetName ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">Порядковый номер (с нуля) столбца.</param>
        <summary>Возвращает значение заданного столбца в виде объекта <see cref="T:System.String" />.</summary>
        <returns>Имя заданного столбца.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Методы `GetName` и<xref:System.Data.DataTableReader.GetOrdinal%2A> предоставляют обратную функциональность. То есть вызов метода `GetOrdinal` для возвращаемого значения вызова `GetName` должен возвращать исходный параметр, переданный `GetName`в. то же самое применимо к вызову процедур в обратном порядке.  
  
   
  
## Examples  
 В следующем простом примере показана процедура, которая перечисляет имена всех столбцов в указанном `DataTableReader`столбце, а также порядковый номер столбца в окне консоли.  
  
 [!code-csharp[DataWorks DataTableReader.GetName#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetName/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetName#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetName/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Переданный индекс находился вне диапазона от 0 до <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
        <exception cref="T:System.InvalidOperationException">Предпринята попытка чтения или доступа к столбцу закрытого объекта <see cref="T:System.Data.DataTableReader" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetOrdinal">
      <MemberSignature Language="C#" Value="public override int GetOrdinal (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetOrdinal(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetOrdinal(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetOrdinal (name As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetOrdinal(System::String ^ name);" />
      <MemberSignature Language="F#" Value="override this.GetOrdinal : string -&gt; int" Usage="dataTableReader.GetOrdinal name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Имя столбца.</param>
        <summary>Возвращает порядковый номер столбца при наличии заданного имени столбца.</summary>
        <returns>Порядковый номер столбца (от нуля).</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Так как большинство методов, предоставляемых <xref:System.Data.DataTableReader> классом, должны быть предоставлены с порядковым номером столбца, можно `GetOrdinal` использовать метод для получения номера столбца с учетом имени столбца.  
  
 `GetOrdinal`сначала выполняет поиск с учетом регистра. В случае сбоя выполняется второй Поиск без учета регистра. Если номер столбца не найден `IndexOutOfRangeException` , создается исключение.  
  
 `GetOrdinal`не учитывается ширина японской азбуки.  
  
 Поскольку уточняющие запросы более эффективны, чем имена уточняющих запросов, вызов `GetOrdinal` в цикле неэффективен. Сэкономьте время, вызвав `GetOrdinal` один раз и назначив результаты целочисленной переменной для использования в цикле.  
  
   
  
## Examples  
 Если имеется только имя столбца, в этом случае имя столбца указывается пользователем и необходимо получить сведения из столбца, для извлечения необходимых сведений можно использовать следующую процедуру, подобную приведенной ниже. В этом примере процедура принимает имя столбца и возвращает данные, содержащиеся в этом столбце, для текущей строки в <xref:System.Data.DataTableReader> :  
  
 [!code-csharp[DataWorks DataTableReader.GetOrdinal#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetOrdinal/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetOrdinal#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetOrdinal/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Предпринята попытка чтения или доступа к столбцу закрытого объекта <see cref="T:System.Data.DataTableReader" />.</exception>
        <exception cref="T:System.ArgumentException">Заданное имя недопустимо для имени столбца.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetProviderSpecificFieldType">
      <MemberSignature Language="C#" Value="public override Type GetProviderSpecificFieldType (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Type GetProviderSpecificFieldType(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetProviderSpecificFieldType(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetProviderSpecificFieldType (ordinal As Integer) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Type ^ GetProviderSpecificFieldType(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetProviderSpecificFieldType : int -&gt; Type" Usage="dataTableReader.GetProviderSpecificFieldType ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">Порядковый номер столбца (от нуля).</param>
        <summary>Возвращает тип указанного столбца в формате конкретного поставщика.</summary>
        <returns>Тип данных объекта (<see cref="T:System.Type" />).</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Поскольку всегда возвращает тип, хранящийся в базовом <xref:System.Data.DataColumn> <xref:System.Data.DataTableReader.GetProviderSpecificFieldType%2A> значении, значение, возвращаемое при вызове метода, всегда возвращает тот <xref:System.Data.DataTable>же тип, что и тип, хранящийся в. <xref:System.Data.DataTableReader> При работе с <xref:System.Data.DataTableReader> классом <xref:System.Data.DataTableReader.GetProviderSpecificFieldType%2A> вызов метода возвращает тот <xref:System.Type.GetType%2A> же тип, что и вызов метода.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Переданный индекс находился вне диапазона от 0 до <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
        <exception cref="T:System.InvalidOperationException">Предпринята попытка чтения или доступа к столбцу закрытого объекта <see cref="T:System.Data.DataTableReader" />.</exception>
        <altmember cref="M:System.Data.DataTableReader.GetFieldType(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetProviderSpecificValue">
      <MemberSignature Language="C#" Value="public override object GetProviderSpecificValue (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object GetProviderSpecificValue(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetProviderSpecificValue(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetProviderSpecificValue (ordinal As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ GetProviderSpecificValue(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetProviderSpecificValue : int -&gt; obj" Usage="dataTableReader.GetProviderSpecificValue ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">Номер столбца (с нуля), значение которого извлекается.</param>
        <summary>Возвращает значение указанного столбца в формате конкретного поставщика.</summary>
        <returns>Значение указанного столбца в формате конкретного поставщика.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Поскольку всегда возвращает тип, хранящийся в базовом <xref:System.Data.DataColumn> <xref:System.Data.DataTableReader.GetProviderSpecificValue%2A> значении, значение, возвращаемое при вызове метода, всегда возвращает данные того <xref:System.Data.DataTable>же типа, что и данные, хранящиеся в. <xref:System.Data.DataTableReader> При работе с <xref:System.Data.DataTableReader> классом <xref:System.Data.DataTableReader.GetProviderSpecificValue%2A> вызов метода возвращает то же значение <xref:System.Data.DataTableReader.GetValue%2A> и тип, что и вызов метода.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Переданный индекс находился вне диапазона от 0 до <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">Предпринята попытка извлечения данных из удаленной строки.</exception>
        <exception cref="T:System.InvalidOperationException">Предпринята попытка чтения столбца закрытого объекта <see cref="T:System.Data.DataTableReader" /> или получения доступа к нему.</exception>
        <altmember cref="M:System.Data.DataTableReader.GetValue(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetProviderSpecificValues">
      <MemberSignature Language="C#" Value="public override int GetProviderSpecificValues (object[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetProviderSpecificValues(object[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetProviderSpecificValues(System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetProviderSpecificValues (values As Object()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetProviderSpecificValues(cli::array &lt;System::Object ^&gt; ^ values);" />
      <MemberSignature Language="F#" Value="override this.GetProviderSpecificValues : obj[] -&gt; int" Usage="dataTableReader.GetProviderSpecificValues values" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="values">Массив объектов, заполненный данными типа для столбцов в объекте <see cref="T:System.Data.DataTableReader" />.</param>
        <summary>Заполняет предоставленный массив данными с типом конкретного поставщика для всех столбцов в объекте <see cref="T:System.Data.DataTableReader" />.</summary>
        <returns>Число значений столбцов, копируемое в этот массив.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Поскольку всегда возвращает данные типа, хранящегося в базовом <xref:System.Data.DataColumn>массиве, <xref:System.Data.DataTableReader.GetProviderSpecificValues%2A> значения, возвращаемые при вызове метода, всегда имеют те <xref:System.Data.DataTable>же типы, что и данные, хранящиеся в. <xref:System.Data.DataTableReader> При работе с <xref:System.Data.DataTableReader> классом <xref:System.Data.DataTableReader.GetProviderSpecificValues%2A> вызов метода возвращает те же значения <xref:System.Data.DataTableReader.GetValues%2A> и типы, что и вызов метода.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">Предпринята попытка извлечения данных из удаленной строки.</exception>
        <exception cref="T:System.InvalidOperationException">Предпринята попытка чтения или доступа к столбцу закрытого объекта <see cref="T:System.Data.DataTableReader" />.</exception>
        <altmember cref="M:System.Data.DataTableReader.GetValues(System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="GetSchemaTable">
      <MemberSignature Language="C#" Value="public override System.Data.DataTable GetSchemaTable ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.DataTable GetSchemaTable() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetSchemaTable" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetSchemaTable () As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::DataTable ^ GetSchemaTable();" />
      <MemberSignature Language="F#" Value="override this.GetSchemaTable : unit -&gt; System.Data.DataTable" Usage="dataTableReader.GetSchemaTable " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает объект <see cref="T:System.Data.DataTable" />, описывающий метаданные столбцов модуля чтения данных <see cref="T:System.Data.DataTableReader" />.</summary>
        <returns>Объект <see cref="T:System.Data.DataTable" />, описывающий метаданные столбцов.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод GetSchemaTable возвращает метаданные о каждом столбце в следующем порядке:  
  
|Столбец DataReader|Описание|  
|-----------------------|-----------------|  
|ColumnName|Имя столбца в том виде, в котором <xref:System.Data.DataTable>оно отображается в.|  
|колумнординал|Порядковый номер столбца|  
|ColumnSize|значение-1, <xref:System.Data.Common.SchemaTableColumn.ColumnSize> если свойство <xref:System.Data.DataColumn.MaxLength%2A> <xref:System.Data.DataColumn> (или) не может быть определено или не является релевантным; в противном случае — `MaxLength` 0 или положительное целое число, содержащее значение.|  
|NumericPrecision|Если типом столбца является числовой тип, это максимальная точность столбца. Если тип столбца не является числовым типом данных, это значение равно null.|  
|NumericScale|Если тип данных столбца имеет компонент масштабирования, возвращается число цифр справа от десятичной запятой. В противном случае возвращается значение null.|  
|DataType|Базовый тип столбца.|  
|ProviderType|Индикатор типа данных столбца. Если тип данных столбца отличается от строки к строке, это значение равно <xref:System.Object>. Этот столбец не может содержать значение null.|  
|IsLong|`true`значение, если столбец имеет <xref:System.String> тип данных, а его <xref:System.Data.DataColumn.MaxLength%2A> свойство имеет значение-1. В противном случае — значение `false`.|  
|AllowDBNull|`true`значение, если для столбца задано ограничение AllowDbNull, равное true. в противном случае —. `false`|  
|IsReadOnly|`true`значение, если столбец не может быть изменен; в `false`противном случае — значение.|  
|исровверсион|`false`для каждого столбца.|  
|IsUnique|`true`: Ни одна из двух строк <xref:System.Data.DataTable> в не может иметь одинаковое значение в этом столбце. `IsUnique`гарантированно будет иметь значение true, если столбец представляет ключ самостоятельно или если существует ограничение типа UNIQUE, которое применяется только к этому столбцу. `false`: Столбец может содержать дублирующиеся значения в `DataTable`. Значение по умолчанию для этого `false`столбца —.|  
|IsKey|`true`: Столбец является одним из набора столбцов, которые вместе однозначно идентифицируют строку в <xref:System.Data.DataTable>. Набор столбцов с `IsKey` `true` параметром, равным, должен однозначно `DataTable`идентифицировать строку в. Нет необходимости в том, чтобы этот набор столбцов был минимальным набором столбцов. Этот набор столбцов может быть создан из `DataTable` первичного ключа, уникального ограничения или уникального индекса. `false`: Столбец не требуется для уникальной идентификации строки. Это значение равно `true` , если столбец участвует в одном или составном первичном ключе. В противном случае его `false`значение равно.|  
|IsAutoIncrement|`true`: Столбец присваивает значения новым строкам с фиксированным приращением. `false`: Столбец не присваивает значения новым строкам с фиксированным приращением. Значение по умолчанию для этого `false`столбца —.|  
|басекаталогнаме|Имя каталога в хранилище данных, содержащем столбец. `Null`значение, если невозможно определить базовое имя каталога. Значением по умолчанию для этого столбца является `null` значение.|  
|басесчеманаме|Это значение всегда `Null`равно.|  
|BaseTableName|Имя <xref:System.Data.DataTable>.|  
|басеколумннаме|Имя столбца в <xref:System.Data.DataTable>.|  
|аутоинкрементсид|<xref:System.Data.DataTable> Значение<xref:System.Data.DataColumn.AutoIncrementSeed%2A> свойства.|  
|аутоинкрементстеп|<xref:System.Data.DataTable> Значение<xref:System.Data.DataColumn.AutoIncrementStep%2A> свойства.|  
|Максимально|<xref:System.Data.DataColumn> Значение<xref:System.Data.DataColumn.DefaultValue%2A> свойства.|  
|Выражение|Строка выражения, если текущий столбец является столбцом выражения, а все столбцы, используемые в выражении, принадлежат к тому `T:System.Data.DataTable` же, что содержат столбец выражения. `null`в противном случае — значение.|  
|ColumnMapping|<xref:System.Data.MappingType> Значение ,<xref:System.Data.DataColumn>связанное с. Тип может быть одним `Attribute`из, `Element`, `Hidden`или `SimpleContent`. Значение по умолчанию — `Element`.|  
|басетабленамеспаце|<xref:System.Data.DataTable> Значение<xref:System.Data.DataTable.Namespace%2A> свойства.|  
|басеколумннамеспаце|<xref:System.Data.DataColumn> Значение<xref:System.Data.DataColumn.Namespace%2A> свойства.|  
  
   
  
## Examples  
 В следующем примере консольного приложения извлекаются сведения о схеме для указанного столбца. Передайте `DisplaySchemaTableInfo` `DataTableReader`процедуру а ицелоечисло,представляющеепорядковуюточкустолбцав,апроцедуравыводит<xref:System.Data.DataTableReader> сведения о схеме в окно консоли.  
  
 [!code-csharp[DataWorks DataTableReader.GetSchemaTable#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetSchemaTable/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetSchemaTable#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetSchemaTable/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Объект <see cref="T:System.Data.DataTableReader" /> закрыт.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetString">
      <MemberSignature Language="C#" Value="public override string GetString (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetString(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetString(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetString (ordinal As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetString(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetString : int -&gt; string" Usage="dataTableReader.GetString ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">Порядковый номер (с нуля) столбца.</param>
        <summary>Возвращает значение заданного столбца в виде строки.</summary>
        <returns>Значение указанного столбца.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.DataTableReader.IsDBNull%2A> Перед вызовом этого метода проверьте, есть ли значения NULL.  
  
   
  
## Examples  
 В следующем примере выводится содержимое столбца с номером 2 в переданном <xref:System.Data.DataTableReader>объекте. Если значение столбца в определенной строке равно null, код отображает > NULL в тексте \<. Если данные в столбце правильного типа, в примере выводится сообщение об ошибке для каждой строки.  
  
 [!code-csharp[DataWorks DataTableReader.GetString#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetString/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetString#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetString/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Переданный индекс находился вне диапазона от 0 до <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">Предпринята попытка извлечения данных из удаленной строки.</exception>
        <exception cref="T:System.InvalidOperationException">Предпринята попытка чтения или доступа к столбцу закрытого объекта <see cref="T:System.Data.DataTableReader" />.</exception>
        <exception cref="T:System.InvalidCastException">Указанный столбец не содержит данных с типом string.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public override object GetValue (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object GetValue(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetValue(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetValue (ordinal As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ GetValue(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.GetValue : int -&gt; obj" Usage="dataTableReader.GetValue ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">Порядковый номер (с нуля) столбца.</param>
        <summary>Возвращает значение заданного столбца в его исходном формате.</summary>
        <returns>Значение указанного столбца. Этот метод возвращает значение с типом <see langword="DBNull" /> для столбцов со значениями null.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Хотя можно вызвать <xref:System.Data.DataTableReader.IsDBNull%2A> , чтобы проверить наличие значений null перед вызовом этого метода, нет необходимости делать это.  
  
   
  
## Examples  
 В следующем примере выполняется перебор всех столбцов в текущей строке в <xref:System.Data.DataTableReader>, отображая содержимое каждого столбца и имя столбца. Как правило, если предполагается работать со всеми столбцами в строке <xref:System.Data.DataTableReader>, полученной с помощью, рекомендуется <xref:System.Data.DataTableReader.GetValues%2A> использовать вместо этого метод, так как он более эффективен.  
  
 [!code-csharp[DataWorks DataTableReader.GetValue#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetValue/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetValue#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetValue/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Переданный индекс находился вне диапазона от 0 до <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">Предпринята попытка извлечения данных из удаленной строки.</exception>
        <exception cref="T:System.InvalidOperationException">Предпринята попытка чтения столбцов закрытого объекта <see cref="T:System.Data.DataTableReader" /> или получения доступа к ним.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetValues">
      <MemberSignature Language="C#" Value="public override int GetValues (object[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetValues(object[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.GetValues(System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetValues (values As Object()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetValues(cli::array &lt;System::Object ^&gt; ^ values);" />
      <MemberSignature Language="F#" Value="override this.GetValues : obj[] -&gt; int" Usage="dataTableReader.GetValues values" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="values">Массив типа <see cref="T:System.Object" />, в который будут скопированы значения столбцов из объекта <see cref="T:System.Data.DataTableReader" />.</param>
        <summary>Заполняет массив объектов значениями столбцов текущей строки.</summary>
        <returns>Число значений столбцов, копируемое в этот массив.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Для большинства приложений этот метод предоставляет эффективные средства для извлечения всех столбцов вместо извлечения каждого столбца по отдельности. Если ваша цель — извлечь все значения столбцов из строки в <xref:System.Data.DataTableReader> `GetValues` , метод предоставляет наиболее эффективное решение.  
  
 Можно передать <xref:System.Object> массив, который содержит меньшее количество столбцов в результирующей строке. В массив копируется только объем `Object` данных, которые может хранить массив. Можно также передать `Object` массив, длина которого превышает количество столбцов, содержащихся в результирующей строке. в этом случае дополнительные элементы массива остаются неизменными при вызове метода.  
  
 Этот метод помещает `DBNull` в выходной массив для столбцов со значением NULL.  
  
   
  
## Examples  
 В следующем примере демонстрируется использование массива, имеющего правильный размер, для чтения всех значений из текущей строки в указанном <xref:System.Data.DataTableReader>. Кроме того, в примере демонстрируется использование массива фиксированного размера, который может быть либо меньшим, либо большим, чем количество доступных столбцов.  
  
 [!code-csharp[DataWorks DataTableReader.GetValueObject#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetValueObject/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.GetValueObject#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.GetValueObject/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Переданный индекс находился вне диапазона от 0 до <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">Предпринята попытка извлечения данных из удаленной строки.</exception>
        <exception cref="T:System.InvalidOperationException">Предпринята попытка чтения столбца закрытого объекта <see cref="T:System.Data.DataTableReader" /> или получения доступа к нему.</exception>
      </Docs>
    </Member>
    <Member MemberName="HasRows">
      <MemberSignature Language="C#" Value="public override bool HasRows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasRows" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTableReader.HasRows" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property HasRows As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool HasRows { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasRows : bool" Usage="System.Data.DataTableReader.HasRows" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает значение, указывающее, содержит ли объект <see cref="T:System.Data.DataTableReader" /> одну или несколько строк.</summary>
        <value>Значение <see langword="true" />, если объект <see cref="T:System.Data.DataTableReader" /> содержит одну или несколько строк; в противном случае — значение <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `HasRows` Свойство возвращает сведения о текущем результирующем наборе. Если содержит несколько результирующих наборов, можно проверить значение `HasRows` свойства <xref:System.Data.DataTableReader.NextResult%2A> сразу после вызова метода, чтобы определить, содержит ли новый результирующий набор строки. <xref:System.Data.DataTableReader>  
  
 Используйте свойство, чтобы избежать необходимости <xref:System.Data.DataTableReader.Read%2A> вызывать метод объекта, <xref:System.Data.DataTableReader> если в текущем результирующем наборе нет строк. `HasRows`  
  
   
  
## Examples  
 В следующем примере производится заполнение двух <xref:System.Data.DataTable> экземпляров данными. Первая <xref:System.Data.DataTable> строка содержит одну строку, а вторая не содержит строк. Затем в примере создается объект <xref:System.Data.DataTableReader> , содержащий оба <xref:System.Data.DataTable> объекта, и вызывается метод принтдата для вывода содержимого каждого объекта, <xref:System.Data.DataTableReader.HasRows%2A> проверки значения свойства каждого объекта перед вызовом метода принтдата.  
  
 [!code-csharp[DataWorks DataTableReader.HasRows#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.HasRows/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.HasRows#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.HasRows/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Предпринята попытка извлечения сведений о закрытом объекте <see cref="T:System.Data.DataTableReader" />.</exception>
        <altmember cref="M:System.Data.DataTableReader.NextResult" />
        <altmember cref="M:System.Data.DataTableReader.Read" />
      </Docs>
    </Member>
    <Member MemberName="IsClosed">
      <MemberSignature Language="C#" Value="public override bool IsClosed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsClosed" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTableReader.IsClosed" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsClosed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsClosed { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsClosed : bool" Usage="System.Data.DataTableReader.IsClosed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает значение, указывающее, закрыт ли объект <see cref="T:System.Data.DataTableReader" />.</summary>
        <value>Значение <see langword="true" />, если <see cref="T:System.Data.DataTableReader" /> закрыт; в противном случае — значение <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.DataTableReader.Close%2A>— единственный метод `IsClosed` <xref:System.Data.DataTableReader.RecordsAffected%2A> , и — это единственные свойства, доступ к которым <xref:System.Data.DataTableReader> можно получить после закрытия.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDBNull">
      <MemberSignature Language="C#" Value="public override bool IsDBNull (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsDBNull(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.IsDBNull(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsDBNull (ordinal As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsDBNull(int ordinal);" />
      <MemberSignature Language="F#" Value="override this.IsDBNull : int -&gt; bool" Usage="dataTableReader.IsDBNull ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">Порядковый номер (с нуля) столбца.</param>
        <summary>Получает значение, указывающее, содержит ли столбец несуществующие или пропущенные значения.</summary>
        <returns>Значение <see langword="true" />, если значение указанного столбца эквивалентно <see cref="T:System.DBNull" />; в обратном случае — значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Вызовите этот метод, чтобы проверить наличие значений NULL в столбцах перед вызовом типизированных методов Get ( <xref:System.Data.DataTableReader.GetByte%2A> <xref:System.Data.DataTableReader.GetChar%2A>например,, и т. д.), чтобы избежать возникновения ошибки.  
  
   
  
## Examples  
 В следующем примере выводится содержимое столбца с номером 2 в переданном <xref:System.Data.DataTableReader>объекте. Если значение столбца в определенной строке равно null, код отображает > NULL в тексте \<. Если данные в столбце правильного типа, в примере выводится сообщение об ошибке для каждой строки.  
  
 [!code-csharp[DataWorks DataTableReader.IsDbNull#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.IsDbNull/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.IsDbNull#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.IsDbNull/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Переданный индекс находился вне диапазона от 0 до <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">Предпринята попытка извлечения данных из удаленной строки.</exception>
        <exception cref="T:System.InvalidOperationException">Предпринята попытка чтения столбца закрытого объекта <see cref="T:System.Data.DataTableReader" /> или получения доступа к нему.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Возвращает значение заданного столбца в его исходном формате.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public override object this[int ordinal] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTableReader.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overrides ReadOnly Property Item(ordinal As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ default[int] { System::Object ^ get(int ordinal); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : obj" Usage="System.Data.DataTableReader.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">Порядковый номер столбца (от нуля).</param>
        <summary>Возвращает значение указанного столбца в собственном формате при наличии заданного порядкового номера столбца.</summary>
        <value>Значение заданного столбца в собственном формате.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Эта перегрузка для <xref:System.Data.DataTableReader.Item%2A> ведет себя идентично <xref:System.Data.DataTableReader.GetValue%2A> методу.  
  
   
  
## Examples  
 В следующем примере отображается содержимое всех столбцов во всех строках из переданного объекта <xref:System.Data.DataTableReader>. Для получения значения, <xref:System.Data.DataTableReader.Item%2A> содержащегося в каждом столбце, в коде C#используется метод (индексатор в Microsoft).  
  
 [!code-csharp[DataWorks DataTableReader.Item#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.Item/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.Item#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.Item/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">Переданный индекс находился вне диапазона от 0 до <see cref="P:System.Data.DataTableReader.FieldCount" /> - 1.</exception>
        <altmember cref="M:System.Data.DataTableReader.GetValue(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public override object this[string name] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTableReader.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overrides ReadOnly Property Item(name As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ default[System::String ^] { System::Object ^ get(System::String ^ name); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : obj" Usage="System.Data.DataTableReader.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Имя столбца.</param>
        <summary>Возвращает значение заданного столбца в собственном формате при наличии заданного имени столбца.</summary>
        <value>Значение заданного столбца в собственном формате.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Сначала выполняется поиск с учетом регистра. В случае сбоя выполняется второй Поиск без учета регистра.  
  
 Этот метод не чувствителен к ширине японской азбуки.  
  
 Эта перегруженная версия <xref:System.Data.DataTableReader.Item%2A> соответствует <xref:System.Data.DataTableReader.GetOrdinal%2A> вызову метода <xref:System.Data.DataTableReader.GetValue%2A> и последующему вызову метода.  
  
   
  
## Examples  
 При наличии <xref:System.Data.DataTableReader> и имени столбца процедура жетвалуебинаме возвращает значение указанного столбца. Перед вызовом этой процедуры необходимо создать новый <xref:System.Data.DataTableReader> экземпляр и вызвать его метод Read, как минимум один раз, чтобы поместить указатель на строку в строке данных.  
  
 [!code-csharp[DataWorks DataTableReader.ItemName#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.ItemName/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.ItemName#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.ItemName/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Заданное имя недопустимо для имени столбца.</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">Предпринята попытка извлечения данных из удаленной строки.</exception>
        <exception cref="T:System.InvalidOperationException">Предпринята попытка чтения или доступа к столбцу закрытого объекта <see cref="T:System.Data.DataTableReader" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="NextResult">
      <MemberSignature Language="C#" Value="public override bool NextResult ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool NextResult() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.NextResult" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function NextResult () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool NextResult();" />
      <MemberSignature Language="F#" Value="override this.NextResult : unit -&gt; bool" Usage="dataTableReader.NextResult " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Перемещает <see cref="T:System.Data.DataTableReader" /> к следующему результирующему набору (при его наличии).</summary>
        <returns>Значение <see langword="true" /> при наличии другого результирующего набора; в обратном случае – значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используется для обработки нескольких результатов, которые могут быть созданы путем создания <xref:System.Data.DataTableReader> объекта <xref:System.Data.DataSet> , содержащего две или более таблиц, или массив, содержащий два или более <xref:System.Data.DataTable> экземпляров.  
  
 Новый <xref:System.Data.DataTableReader> элемент размещается по первому результату.  
  
   
  
## Examples  
 В следующем примере метод тестконструктор создает два <xref:System.Data.DataTable> экземпляра. Чтобы продемонстрировать этот конструктор для <xref:System.Data.DataTableReader> класса, образец создает новый `DataTableReader` на основе массива, содержащего два `DataTables`, и выполняет простую операцию, выполняя печать содержимого из первых нескольких столбцов в консоли. окно. Чтобы протестировать это приложение, создайте новое консольное приложение и вставьте пример кода в созданный файл.  
  
 [!code-csharp[DataWorks DataTableReader.NextResult#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.NextResult/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.NextResult#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.NextResult/VB/source.vb#1)]  
  
 В окне консоли отобразятся следующие результаты.  
  
```  
1 Mary  
2 Andy  
3 Peter  
4 Russ  
1 Wireless Network Card  
2 Hard Drive  
3 Monitor  
4 CPU  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Предпринята попытка перемещения в закрытом объекте <see cref="T:System.Data.DataTableReader" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override bool Read ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Read() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableReader.Read" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Read();" />
      <MemberSignature Language="F#" Value="override this.Read : unit -&gt; bool" Usage="dataTableReader.Read " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Перемещает <see cref="T:System.Data.DataTableReader" /> к следующей записи.</summary>
        <returns>Значение <see langword="true" /> при наличии другой строки для чтения; в обратном случае – значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Расположение <xref:System.Data.DataTableReader> по умолчанию перед первой записью. Поэтому необходимо вызвать `Read` , чтобы начать доступ к любым данным.  
  
   
  
## Examples  
 Процедура принтколумнс выполняет цикл по всем строкам в <xref:System.Data.DataTableReader>, отображая содержимое каждого столбца в окне консоли.  
  
 [!code-csharp[DataWorks DataTableReader.Read#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableReader.Read/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableReader.Read#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableReader.Read/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Предпринята попытка чтения столбца закрытого объекта <see cref="T:System.Data.DataTableReader" /> или получения доступа к нему.</exception>
      </Docs>
    </Member>
    <Member MemberName="RecordsAffected">
      <MemberSignature Language="C#" Value="public override int RecordsAffected { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RecordsAffected" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTableReader.RecordsAffected" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property RecordsAffected As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int RecordsAffected { int get(); };" />
      <MemberSignature Language="F#" Value="member this.RecordsAffected : int" Usage="System.Data.DataTableReader.RecordsAffected" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает количество строк, которые были изменены, вставлены или удалены при выполнении оператора SQL.</summary>
        <value>Объект <see cref="T:System.Data.DataTableReader" /> не поддерживает это свойство и всегда возвращает значение 0.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
