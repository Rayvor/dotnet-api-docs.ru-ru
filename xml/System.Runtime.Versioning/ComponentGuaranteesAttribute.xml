<Type Name="ComponentGuaranteesAttribute" FullName="System.Runtime.Versioning.ComponentGuaranteesAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8f6240b9b8f6982e9231dbcf18f0e28464110c14" /><Meta Name="ms.sourcegitcommit" Value="0084afad1b3b1cb2c8ad2c142ae3597d08bad4a7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="10/31/2019" /><Meta Name="ms.locfileid" Value="73386270" /></Metadata><TypeSignature Language="C#" Value="public sealed class ComponentGuaranteesAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ComponentGuaranteesAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Versioning.ComponentGuaranteesAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ComponentGuaranteesAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class ComponentGuaranteesAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type ComponentGuaranteesAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netstandard-2.0;netcore-2.2;netstandard-2.1;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Assembly | System.AttributeTargets.Class | System.AttributeTargets.Constructor | System.AttributeTargets.Delegate | System.AttributeTargets.Enum | System.AttributeTargets.Event | System.AttributeTargets.Interface | System.AttributeTargets.Method | System.AttributeTargets.Module | System.AttributeTargets.Property | System.AttributeTargets.Struct, AllowMultiple=false, Inherited=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Определяет гарантированную совместимость компонента, типа или члена типа с одной или несколькими версиями.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Runtime.Versioning.ComponentGuaranteesAttribute> используется разработчиками компонентов и библиотек классов для указания уровня совместимости, который могут рассчитывать потребители своих библиотек в нескольких версиях. Указывает уровень гарантии того, что будущая версия библиотеки или компонента не будет нарушить работу существующего клиента. Затем клиенты могут использовать <xref:System.Runtime.Versioning.ComponentGuaranteesAttribute> в качестве вспомогательного средства проектирования собственных интерфейсов для обеспечения стабильной работы разных версий.  
  
> [!NOTE]
>  Среда CLR не использует этот атрибут каким-либо образом. Его значение заключается в формальном документировании цели автора компонента. Средства времени компиляции также могут использовать эти объявления для обнаружения ошибок во время компиляции, которые в противном случае нарушат объявленную гарантию.  
  
## <a name="levels-of-compatibility"></a>Уровни совместимости  
 <xref:System.Runtime.Versioning.ComponentGuaranteesAttribute> поддерживает следующие уровни совместимости, которые представлены членами перечисления <xref:System.Runtime.Versioning.ComponentGuaranteesOptions>.  
  
-   Нет совместимости версий с версиями (<xref:System.Runtime.Versioning.ComponentGuaranteesOptions.None?displayProperty=nameWithType>). Клиент может рассчитывать на то, что будущие версии будут нарушить работу существующего клиента. Дополнительные сведения см. в подразделе [без совместимости](#None) далее в этом разделе.  
  
-   Совместимость версий с параллельными версиями (<xref:System.Runtime.Versioning.ComponentGuaranteesOptions.SideBySide?displayProperty=nameWithType>). Компонент был протестирован на работу при загрузке нескольких версий сборки в один и тот же домен приложения. Как правило, будущие версии могут нарушить совместимость. Однако при внесении критических изменений старая версия не изменяется, но существует рядом с новой версией. Параллельное выполнение является ожидаемым способом обеспечения работы существующих клиентов при внесении критических изменений. Дополнительные сведения см. в подразделе " [параллельная совместимость](#SideBySide) " Далее в этом разделе.  
  
-   Стабильная совместимость версий с версиями (<xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Stable?displayProperty=nameWithType>). Будущие версии не должны прерывать работу клиента, и параллельное выполнение не требуется. Однако если клиент непреднамеренно поврежден, можно использовать параллельное выполнение, чтобы устранить проблему. Дополнительные сведения см. в разделе о [стабильной совместимости](#Standard) .  
  
-   Совместимость версии Exchange с версией (<xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Exchange?displayProperty=nameWithType>). Для того, чтобы будущие версии не нарушить работу клиента, необходимо уделить внимание дополнительной осторожности. Клиент должен использовать только эти типы в сигнатуре интерфейсов, которые используются для связи с другими сборками, развернутыми независимо друг от друга. В данном домене приложения ожидается только одна версия этих типов. Это означает, что если клиент прерывает работу, параллельное выполнение не может устранить проблему совместимости. Дополнительные сведения см. в разделе о [совместимости типов Exchange](#Exchange) .  
  
 В следующих разделах каждый уровень гарантии рассматривается более подробно.  
  
<a name="None"></a>   
### <a name="no-compatibility"></a>Без совместимости  
 Пометка компонента как <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.None?displayProperty=nameWithType> указывает, что поставщик не гарантирует совместимость. Клиенты должны избегать зависимостей от предоставляемых интерфейсов. Этот уровень совместимости полезен для тех типов, которые являются экспериментальными или общедоступными, но предназначены только для компонентов, которые всегда обновляются одновременно. <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.None> явно указывает, что этот компонент не должен использоваться внешними компонентами.  
  
<a name="SideBySide"></a>   
### <a name="side-by-side-compatibility"></a>Параллельная совместимость  
 Пометка компонента как <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.SideBySide?displayProperty=nameWithType> указывает, что компонент был протестирован на работу при загрузке нескольких версий сборки в один и тот же домен приложения. Критические изменения разрешены до тех пор, пока они выполняются в сборке с более высоким номером версии. Предполагается, что компоненты, привязанные к старой версии сборки, продолжают привязываться к старой версии, а другие компоненты могут быть привязаны к новой версии. Кроме того, можно обновить компонент, объявленный для <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.SideBySide>, разрушая изменение старой версии.  
  
<a name="Standard"></a>   
### <a name="stable-compatibility"></a>Стабильная совместимость  
 Пометка типа как <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Stable?displayProperty=nameWithType> указывает, что тип должен оставаться стабильным в разных версиях. Однако это также может быть возможно для параллельных версий стабильного типа в том же домене приложения.  
  
 Стабильные типы поддерживают высокую двоичную панель совместимости. По этой причине поставщики должны избегать внесения критических изменений в стабильные типы. Допустимы следующие виды изменений:  
  
-   Добавление закрытых полей экземпляров в тип или удаление полей из типа, если это не нарушает формат сериализации.  
  
-   Изменение несериализуемых типов на сериализуемый тип. (Однако сериализуемый тип нельзя изменить на тип, не являющийся сериализуемым.)  
  
-   Создание новых, более производных исключений из метода.  
  
-   Повышение производительности метода.  
  
-   Изменение диапазона возвращаемых значений при условии, что изменение не негативно влияет на большинство клиентов.  
  
-   Устранение серьезных ошибок, если Деловое обоснование велико и количество неблагоприятных затронутых клиентов мало.  
  
 Поскольку новые версии стабильных компонентов не могут нарушить работу существующих клиентов, обычно в домене приложения требуется только одна версия стабильного компонента. Однако это не является обязательным требованием, так как устойчивые типы не используются в качестве хорошо известных типов Exchange, с которыми согласовываются все компоненты. Таким образом, если новая версия стабильного компонента непреднамеренно нарушает некоторые компоненты, и если другим компонентам требуется новая версия, возможно, проблему удастся устранить, загрузив старый и новый компоненты.  
  
 <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Stable> обеспечивает более надежную совместимость версий, чем <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.None>. Это распространенное значение по умолчанию для компонентов с несколькими версиями.  
  
 <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Stable> можно сочетать с <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.SideBySide>, в котором говорится, что компонент не нарушает совместимость, но проверяется на работу при загрузке нескольких версий в определенный домен приложения.  
  
 После того как тип или метод помечается как <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Stable>, его можно обновить до <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Exchange>. Однако его нельзя понизить до <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.None>.  
  
<a name="Exchange"></a>   
### <a name="exchange-type-compatibility"></a>Совместимость типов Exchange  
 Пометка типа <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Exchange?displayProperty=nameWithType> обеспечивает более надежную совместимость версий, чем <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Stable>, и должна применяться к наиболее стабильному типу. Эти типы предназначены для обмена между независимо создаваемыми компонентами на всех границах компонентов одновременно (любая версия среды CLR или любая версия компонента или приложения) и пробел (кросс-обработка, кросс-CLR в одном процессе, домен между приложениями в одной среде CLR). Если в тип Exchange внесено критическое изменение, невозможно устранить проблему, загрузив несколько версий типа.  
  
 Типы Exchange следует изменять только в том случае, если проблема очень серьезна (например, серьезная проблема безопасности) или вероятность повреждения очень мала (то есть, если поведение уже было разорвано случайным образом, когда код не мог бы считать зависимость от). В тип обмена можно внести следующие изменения:  
  
-   Добавление наследования новых определений интерфейсов.  
  
-   Добавьте новые закрытые методы, реализующие методы вновь наследуемых определений интерфейса.  
  
-   Добавление новых статических полей.  
  
-   Добавьте новые статические методы.  
  
-   Добавьте новые методы экземпляра, не являющиеся виртуальными.  
  
 Следующие элементы считаются критическими изменениями и не допускаются для типов-примитивов:  
  
-   Изменение форматов сериализации. Требуется сериализация, не зависящая от версии.  
  
-   Добавление или удаление закрытых полей экземпляров. Это опасно, изменяя формат сериализации типа и нарушая код клиента, который использует отражение.  
  
-   Изменение возможности сериализации типа. Несериализуемый тип нельзя сделать сериализуемым, и наоборот.  
  
-   Создание различных исключений из метода.  
  
-   Изменение диапазона возвращаемых значений метода, если только определение элемента не вызывает такую возможность и ясно указывает, как клиенты должны поддерживать неизвестные значения.  
  
-   Устранение большинства ошибок. Потребители типа будут полагаться на существующее поведение.  
  
 После того как компонент, тип или член помечается как <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Exchange> гарантия, его нельзя изменить на <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Stable> или <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.None>.  
  
 Как правило, типы Exchange являются основными типами (например <xref:System.Int32> и <xref:System.String> в .NET Framework) и интерфейсами (такими как <xref:System.Collections.Generic.IList%601>, <xref:System.Collections.Generic.IEnumerable%601>и <xref:System.IComparable%601>), которые обычно используются в открытых интерфейсах.  
  
 Типы обмена могут использовать только другие типы, которые также помечены как совместимые с <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Exchange>. Кроме того, типы обмена не могут зависеть от поведения интерфейсов API Windows, которые подвержены изменениям.  
  
## <a name="component-guarantees-a-summary"></a>Гарантии компонентов: сводка  
 В следующей таблице показано, как характеристики и использование компонента влияют на его гарантию на совместимость.  
  
|Характеристики компонента|Exchange|Stable|Параллельно|Отсутствуют|  
|-------------------------------|--------------|------------|--------------------|----------|  
|Может использоваться в интерфейсах между компонентами независимо от версии.|Y|Нет|Нет|Нет|  
|Может использоваться (в частном порядке) сборкой, независимой от версий.|Y|Y|Y|Нет|  
|Может иметь несколько версий в одном домене приложения.|Нет|Y|Y|Y|  
|Может внести критические изменения|Нет|в|Y|Y|  
|Проверено, что можно загрузить несколько версий сборки вместе.|Нет|в|Y|Нет|  
|Может внести критические изменения на месте.|Нет|Нет|в|Y|  
|Может обеспечить очень надежное некритическое обслуживание изменений на месте.|Y|Y|Y|Y|  
  
## <a name="applying-the-attribute"></a>Применение атрибута  
 <xref:System.Runtime.Versioning.ComponentGuaranteesAttribute> можно применить к сборке, типу или члену типа. Его приложение является иерархическим. То есть по умолчанию гарантия, определяемая свойством <xref:System.Runtime.Versioning.ComponentGuaranteesAttribute.Guarantees%2A> атрибута на уровне сборки, определяет гарантию всех типов в сборке и всех элементов этих типов. Аналогично, если гарантия применяется к типу, по умолчанию она также применяется к каждому элементу типа.  
  
 Это Наследуемая гарантия может быть переопределена путем применения <xref:System.Runtime.Versioning.ComponentGuaranteesAttribute> к отдельным типам и членам типов. Однако гарантирует, что переопределение по умолчанию может ослабить только гарантию. они не могут усилить его. Например, если сборка помечена с помощью <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.None> гарантии, ее типы и члены не гарантируют совместимость, и любая другая гарантия, применяемая к типам или членам в сборке, игнорируется.  
  
## <a name="testing-the-guarantee"></a>Проверка гарантии  
 Свойство <xref:System.Runtime.Versioning.ComponentGuaranteesAttribute.Guarantees%2A> Возвращает элемент перечисления <xref:System.Runtime.Versioning.ComponentGuaranteesOptions>, помеченный атрибутом <xref:System.FlagsAttribute>. Это означает, что необходимо протестировать нужный флаг, заменив маску неизвестными флагами. Например, в следующем примере проверяется, помечен ли тип как <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Stable>.  
  
 [!code-csharp[System.Runtime.Versioning.ComponentGuaranteesAttribute.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.versioning.componentguaranteesattribute.class/cs/apply1.cs#1)]
 [!code-vb[System.Runtime.Versioning.ComponentGuaranteesAttribute.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.versioning.componentguaranteesattribute.class/vb/apply1.vb#1)]  
  
 В следующем примере проверяется, помечен ли тип как <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Stable> или как <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Exchange>.  
  
 [!code-csharp[System.Runtime.Versioning.ComponentGuaranteesAttribute.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.versioning.componentguaranteesattribute.class/cs/apply1.cs#2)]
 [!code-vb[System.Runtime.Versioning.ComponentGuaranteesAttribute.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.versioning.componentguaranteesattribute.class/vb/apply1.vb#2)]  
  
 В следующем примере проверяется, предложено тип помечен как <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.None> (то есть ни <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Stable>, ни <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Exchange>).  
  
 [!code-csharp[System.Runtime.Versioning.ComponentGuaranteesAttribute.Class#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.versioning.componentguaranteesattribute.class/cs/apply1.cs#3)]
 [!code-vb[System.Runtime.Versioning.ComponentGuaranteesAttribute.Class#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.versioning.componentguaranteesattribute.class/vb/apply1.vb#3)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Runtime.Versioning.ComponentGuaranteesOptions" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ComponentGuaranteesAttribute (System.Runtime.Versioning.ComponentGuaranteesOptions guarantees);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Runtime.Versioning.ComponentGuaranteesOptions guarantees) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Versioning.ComponentGuaranteesAttribute.#ctor(System.Runtime.Versioning.ComponentGuaranteesOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (guarantees As ComponentGuaranteesOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ComponentGuaranteesAttribute(System::Runtime::Versioning::ComponentGuaranteesOptions guarantees);" />
      <MemberSignature Language="F#" Value="new System.Runtime.Versioning.ComponentGuaranteesAttribute : System.Runtime.Versioning.ComponentGuaranteesOptions -&gt; System.Runtime.Versioning.ComponentGuaranteesAttribute" Usage="new System.Runtime.Versioning.ComponentGuaranteesAttribute guarantees" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="guarantees" Type="System.Runtime.Versioning.ComponentGuaranteesOptions" />
      </Parameters>
      <Docs>
        <param name="guarantees">Одно из значений перечисления, задающее гарантированный уровень совместимости с несколькими версиями.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.Versioning.ComponentGuaranteesAttribute" /> со значением, указывающим библиотеку, тип или гарантированный уровень совместимости члена с несколькими версиями.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При создании экземпляра класса <xref:System.Runtime.Versioning.ComponentGuaranteesAttribute> значение параметра `guarantees` присваивается свойству <xref:System.Runtime.Versioning.ComponentGuaranteesAttribute.Guarantees%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Guarantees">
      <MemberSignature Language="C#" Value="public System.Runtime.Versioning.ComponentGuaranteesOptions Guarantees { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Runtime.Versioning.ComponentGuaranteesOptions Guarantees" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Versioning.ComponentGuaranteesAttribute.Guarantees" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Guarantees As ComponentGuaranteesOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::Versioning::ComponentGuaranteesOptions Guarantees { System::Runtime::Versioning::ComponentGuaranteesOptions get(); };" />
      <MemberSignature Language="F#" Value="member this.Guarantees : System.Runtime.Versioning.ComponentGuaranteesOptions" Usage="System.Runtime.Versioning.ComponentGuaranteesAttribute.Guarantees" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Versioning.ComponentGuaranteesOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает значение, указывающее гарантированный уровень совместимости библиотеки, типа или члена типа с несколькими версиями.</summary>
        <value>Одно из значений перечисления, задающее гарантированный уровень совместимости с несколькими версиями.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Значение свойства <xref:System.Runtime.Versioning.ComponentGuaranteesAttribute.Guarantees%2A> соответствует параметру `guarantees` конструктора <xref:System.Runtime.Versioning.ComponentGuaranteesAttribute.%23ctor%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
