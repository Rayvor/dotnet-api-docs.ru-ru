<Type Name="ComponentGuaranteesAttribute" FullName="System.Runtime.Versioning.ComponentGuaranteesAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b50b7dac2911a22c0edce0c9bed4359055cbf54b" /><Meta Name="ms.sourcegitcommit" Value="bc24a3ba616ee1df8b858f9400cae4f058ea3a7e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="06/19/2019" /><Meta Name="ms.locfileid" Value="67247318" /></Metadata><TypeSignature Language="C#" Value="public sealed class ComponentGuaranteesAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ComponentGuaranteesAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Versioning.ComponentGuaranteesAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ComponentGuaranteesAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class ComponentGuaranteesAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type ComponentGuaranteesAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-3.0">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Assembly | System.AttributeTargets.Module | System.AttributeTargets.Class | System.AttributeTargets.Struct | System.AttributeTargets.Enum | System.AttributeTargets.Constructor | System.AttributeTargets.Method | System.AttributeTargets.Property | System.AttributeTargets.Event | System.AttributeTargets.Interface | System.AttributeTargets.Delegate, AllowMultiple=false, Inherited=false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netstandard-2.0;netcore-2.2;netstandard-2.1">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Assembly | System.AttributeTargets.Class | System.AttributeTargets.Constructor | System.AttributeTargets.Delegate | System.AttributeTargets.Enum | System.AttributeTargets.Event | System.AttributeTargets.Interface | System.AttributeTargets.Method | System.AttributeTargets.Module | System.AttributeTargets.Property | System.AttributeTargets.Struct, AllowMultiple=false, Inherited=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Определяет гарантированную совместимость компонента, типа или члена типа с одной или несколькими версиями.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Runtime.Versioning.ComponentGuaranteesAttribute> Используется разработчиками, компоненты и библиотеки классов, чтобы указать уровень совместимости, потребители своих библиотек можно ожидать в нескольких версиях. Указывает уровень гарантии, что будущие версии библиотеки или компонента не нарушит работу существующего клиента. Клиенты могут использовать <xref:System.Runtime.Versioning.ComponentGuaranteesAttribute> для помощи в разработке собственных интерфейсов для обеспечения стабильности всех версий.  
  
> [!NOTE]
>  Среда CLR (CLR) не использует этот атрибут любым способом. Его значение заключается в формально задокументировать намерения автора компонента. Средства компиляции также могут использовать эти объявления для обнаружения ошибок во время компиляции, в противном случае приводящие к сбою объявленную гарантию.  
  
## <a name="levels-of-compatibility"></a>Уровни совместимости  
 <xref:System.Runtime.Versioning.ComponentGuaranteesAttribute> Поддерживает следующие уровни совместимости, представленные членами <xref:System.Runtime.Versioning.ComponentGuaranteesOptions> перечисления:  
  
-   Совместимость не версии к версии (<xref:System.Runtime.Versioning.ComponentGuaranteesOptions.None?displayProperty=nameWithType>). Клиент может ожидать, что нарушит работу будущими версиями существующий клиент. Дополнительные сведения см. в разделе [совместимости нет](#None) подразделе данного раздела.  
  
-   Совместимость версий Side-by-side (<xref:System.Runtime.Versioning.ComponentGuaranteesOptions.SideBySide?displayProperty=nameWithType>). Компонент был протестирован для работы с более чем одной версии сборки загружается в одном домене приложения. Как правило будущие версии могут нарушить совместимость. Тем не менее при внесении критических изменений старая версия не изменяется, а вместе с ним новой версии. Выполнение Side-by-side — ожидаемый способ обеспечить работу при значительных изменениях существующих клиентов. Дополнительные сведения см. в разделе [совместимости Side-by-Side](#SideBySide) подразделе данного раздела.  
  
-   Стабильные версии к версии совместимости (<xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Stable?displayProperty=nameWithType>). Будущие версии не должно прерывать работу клиента и не должно возникнуть необходимости выполнения side-by-side. Тем не менее если клиент случайно нарушена, возможно, можно использовать для устранения проблемы side-by-side выполнения. Дополнительные сведения см. в разделе [устойчивую совместимость](#Standard) раздел.  
  
-   Совместимость версии к версии Exchange (<xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Exchange?displayProperty=nameWithType>). Принять дополнительные меры, чтобы убедиться, что будущие версии не нарушит работу клиента. Клиент должен использовать только эти типы в сигнатуре интерфейсов, которые используются для взаимодействия с другими сборками, которые развертываются независимо друг от друга. Только одна версия этих типов должен находиться в домене данного приложения, это означает, что если клиент выдает ошибку, side-by-side выполнение не может устранить проблему совместимости. Дополнительные сведения см. в разделе [совместимость типов Exchange](#Exchange) раздел.  
  
 В следующих разделах рассматриваются каждого уровня гарантии более подробно.  
  
<a name="None"></a>   
### <a name="no-compatibility"></a>Совместимость не  
 Пометка компонент как <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.None?displayProperty=nameWithType> указывает, что поставщик не гарантирует совместимости. Клиенты должны избежать любых зависимостей на предоставляемых интерфейсах. Этот уровень совместимости полезен для типов, являются экспериментальными или происходят в открытую, однако предназначены только для компонентов, которые всегда обновляются одновременно. <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.None> явно указывает, что этот компонент не должен использоваться внешними компонентами.  
  
<a name="SideBySide"></a>   
### <a name="side-by-side-compatibility"></a>Совместимость Side-by-Side  
 Пометка компонент как <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.SideBySide?displayProperty=nameWithType> указывает, что компонент был протестирован для работы с более чем одной версии сборки загружается в одном домене приложения. Критические изменения разрешены, пока их внесения в сборку, которая имеет больший номер версии. Компоненты, которые привязаны к старой версии сборки должны продолжать привязку к старой версии и другие компоненты можно привязать к новой версии. Можно также обновить компонент, который объявлен как <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.SideBySide> разрушительно изменив старую версию.  
  
<a name="Standard"></a>   
### <a name="stable-compatibility"></a>Устойчивую совместимость  
 Пометить тип как <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Stable?displayProperty=nameWithType> указывает, что тип должны оставаться стабильными версиями. Тем не менее его можно также side-by-side версиях стабильного типа существуют в одном домене приложения.  
  
 Устойчивые типы поддерживают двоичный совместима с. По этой причине поставщики не следует вносить критические изменения в устойчивые типы. Допустимы следующие виды изменений:  
  
-   Закрытых поля экземпляра для добавления или удаления полей из типа, до тех пор, пока это не нарушает формат сериализации.  
  
-   Изменение типа несериализуемые на является сериализуемым типом. (Однако сериализуемый тип невозможно перевести сериализуемого типа.)  
  
-   Создание новых, более производные исключения из метода.  
  
-   Повышение производительности метода.  
  
-   Изменение диапазона возвращаемых значений, до тех пор, пока изменение не влияет отрицательно на большинство клиентов.  
  
-   Устранение серьезных ошибок, если коммерческое обоснование высока и число клиентов, оказывается негативное влияние не хватает.  
  
 Поскольку новые версии стабильных компонентов не должны затрагивающей существующих клиентов, обычно только одна версия стабильного компонента необходима в домене приложения. Тем не менее это не является обязательным, так как устойчивые типы не используются как типы известного обмена, согласованные всеми компонентами. Таким образом Если новая версия стабильного компонента случайно нарушить работу некоторых компонентов, а для других компонентов требуется новая версия, ее можно устранить проблему, загрузив старый и новый компонент.  
  
 <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Stable> предоставляет надежную гарантию совместимости версии, чем <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.None>. Это значение по умолчанию для нескольких версий компонентов.  
  
 <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Stable> можно сочетать с <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.SideBySide>, который гласит, что компонент не нарушает совместимость, но протестирована на совместимость при загрузке более одной версии в домене данного приложения.  
  
 После тип или метод помечен как <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Stable>, его можно обновить до <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Exchange>. Тем не менее, он не может быть изменена <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.None>.  
  
<a name="Exchange"></a>   
### <a name="exchange-type-compatibility"></a>Совместимость типов Exchange  
 Пометить тип как <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Exchange?displayProperty=nameWithType> предоставляет надежную гарантию совместимости версии, чем <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Stable>и должны быть применены к наиболее стабильной всех типов. Эти типы предназначены для обмена данными между независимо друг от друга подготовленные компоненты границы всех компонентов во времени (любая версия среды CLR) или любая версия компонента или приложения и местом (между процессами, кросс CLR в рамках одного процесса между доменами приложений в одной среде CLR). Если для типа обмена является критическим изменением, вы не сможете устранить данную проблему, загрузки нескольких версий типа.  
  
 Типы Exchange необходимо изменить только в том случае, когда проблема очень серьезных (например, серьезная уязвимость безопасности) или вероятность сбоя очень мал (то есть, если поведение уже было нарушено случайным образом, код может не иметь возможной зависимости на). Можно внести следующие виды изменений типа обмена:  
  
-   Добавьте наследование новых определений интерфейса.  
  
-   Добавьте новый закрытых методов, реализующих методы вновь наследуемых определений интерфейса.  
  
-   Добавьте новые статические поля.  
  
-   Добавление новых статических методов.  
  
-   Добавьте новые методы невиртуальный экземпляра.  
  
 Ниже рассматриваются критические изменения и не допускаются для типов-примитивов:  
  
-   Изменение форматов сериализации. Независимые от версий сериализация является обязательным.  
  
-   Добавление или удаление закрытых поля экземпляра. Это риск изменения формата сериализации типа и критические клиентский код, который использует отражение.  
  
-   Изменение возможности сериализации типа. Несериализуемый тип нельзя сделать сериализуемым и наоборот.  
  
-   Создание различных исключений из метода.  
  
-   Изменение диапазона возвращаемых значений метода, если определение члена вызывает эту возможность и четко показывает, как клиенты должны обрабатывать неизвестные значения.  
  
-   Исправление большинства ошибок. Потребители типа будут использовать существующее поведение.  
  
 После компонента, типа или члена помечается <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Exchange> гарантировать, он не сможет изменить либо <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Stable> или <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.None>.  
  
 Как правило, типы exchange: базовые типы (такие как <xref:System.Int32> и <xref:System.String> в .NET Framework) и интерфейсов (такие как <xref:System.Collections.Generic.IList%601>, <xref:System.Collections.Generic.IEnumerable%601>, и <xref:System.IComparable%601>), которые часто используются в открытых интерфейсов.  
  
 Типы Exchange публично могут предоставлять только других типов, которые также отмечены <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Exchange> совместимости. Кроме того типы обмена нельзя полагаться на поведение Windows API, которые часто меняются.  
  
## <a name="component-guarantees-a-summary"></a>Гарантии компонента: Сводка  
 В этой таблице перечислены влияние характеристик и использования компонента его гарантированную совместимость.  
  
|Характеристики компонента|Exchange|стабильных|Side-by-Side|Нет|  
|-------------------------------|--------------|------------|--------------------|----------|  
|Можно использовать в интерфейсах между компонентами этой версии независимо друг от друга.|Y|в|в|в|  
|Может быть использован (закрыто) сборкой, версии независимо друг от друга.|Y|Y|Y|в|  
|Может иметь несколько версий в одном домене приложения.|в|Y|Y|Y|  
|Можно вносить критические изменения|в|в|Y|Y|  
|Проверено, убедитесь, что несколько версий сборки могут загружаться друг с другом.|в|в|Y|в|  
|Может привести к значительным изменениям на месте.|в|в|в|Y|  
|Можно осуществить безопасное некритических обслуживания на месте.|Y|Y|Y|Y|  
  
## <a name="applying-the-attribute"></a>Применение атрибута  
 Можно применить <xref:System.Runtime.Versioning.ComponentGuaranteesAttribute> сборки, типа или члена типа. Приложение является иерархическим. То есть, по умолчанию, гарантия определением <xref:System.Runtime.Versioning.ComponentGuaranteesAttribute.Guarantees%2A> свойство атрибута на уровне сборки определяет гарантированную все типы в сборке и все элементы в этих типах. Аналогичным образом Если гарантии применяется к типу, по умолчанию он также применяется к каждому члену типа.  
  
 Эта гарантия унаследованные можно переопределить путем применения <xref:System.Runtime.Versioning.ComponentGuaranteesAttribute> для отдельных типов и членов типов. Тем не менее гарантирует, что переопределить значение по умолчанию можно только ослабить гарантии; они не может повысить его. Например, если сборка отмечена с <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.None> гарантирует его типы и члены имеют нет гарантированную совместимость, и любые другие гарантии, что применяется к типам и членам сборки учитывается.  
  
## <a name="testing-the-guarantee"></a>Тестирование гарантии  
 <xref:System.Runtime.Versioning.ComponentGuaranteesAttribute.Guarantees%2A> Свойство возвращает член <xref:System.Runtime.Versioning.ComponentGuaranteesOptions> перечисления, который помечен <xref:System.FlagsAttribute> атрибута. Это означает, что необходимо тестировать флаг, который вас интересует, маскируя потенциально неизвестных флагов. Например, следующий пример проверяет, является ли тип помечен как <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Stable>.  
  
 [!code-csharp[System.Runtime.Versioning.ComponentGuaranteesAttribute.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.versioning.componentguaranteesattribute.class/cs/apply1.cs#1)]
 [!code-vb[System.Runtime.Versioning.ComponentGuaranteesAttribute.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.versioning.componentguaranteesattribute.class/vb/apply1.vb#1)]  
  
 Следующий пример проверяет, является ли тип помечен как <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Stable> или <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Exchange>.  
  
 [!code-csharp[System.Runtime.Versioning.ComponentGuaranteesAttribute.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.versioning.componentguaranteesattribute.class/cs/apply1.cs#2)]
 [!code-vb[System.Runtime.Versioning.ComponentGuaranteesAttribute.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.versioning.componentguaranteesattribute.class/vb/apply1.vb#2)]  
  
 Следующие пример тесты устранить опытных тип помечен как <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.None> (иными словами, <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Stable> , ни <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Exchange>).  
  
 [!code-csharp[System.Runtime.Versioning.ComponentGuaranteesAttribute.Class#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.versioning.componentguaranteesattribute.class/cs/apply1.cs#3)]
 [!code-vb[System.Runtime.Versioning.ComponentGuaranteesAttribute.Class#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.versioning.componentguaranteesattribute.class/vb/apply1.vb#3)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Runtime.Versioning.ComponentGuaranteesOptions" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ComponentGuaranteesAttribute (System.Runtime.Versioning.ComponentGuaranteesOptions guarantees);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Runtime.Versioning.ComponentGuaranteesOptions guarantees) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Versioning.ComponentGuaranteesAttribute.#ctor(System.Runtime.Versioning.ComponentGuaranteesOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (guarantees As ComponentGuaranteesOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ComponentGuaranteesAttribute(System::Runtime::Versioning::ComponentGuaranteesOptions guarantees);" />
      <MemberSignature Language="F#" Value="new System.Runtime.Versioning.ComponentGuaranteesAttribute : System.Runtime.Versioning.ComponentGuaranteesOptions -&gt; System.Runtime.Versioning.ComponentGuaranteesAttribute" Usage="new System.Runtime.Versioning.ComponentGuaranteesAttribute guarantees" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="guarantees" Type="System.Runtime.Versioning.ComponentGuaranteesOptions" />
      </Parameters>
      <Docs>
        <param name="guarantees">Одно из значений перечисления, задающее гарантированный уровень совместимости с несколькими версиями.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Runtime.Versioning.ComponentGuaranteesAttribute" /> со значением, указывающим библиотеку, тип или гарантированный уровень совместимости члена с несколькими версиями.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Когда <xref:System.Runtime.Versioning.ComponentGuaranteesAttribute> создается экземпляр класса, значение `guarantees` присваивается <xref:System.Runtime.Versioning.ComponentGuaranteesAttribute.Guarantees%2A> свойство.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Guarantees">
      <MemberSignature Language="C#" Value="public System.Runtime.Versioning.ComponentGuaranteesOptions Guarantees { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Runtime.Versioning.ComponentGuaranteesOptions Guarantees" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Versioning.ComponentGuaranteesAttribute.Guarantees" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Guarantees As ComponentGuaranteesOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::Versioning::ComponentGuaranteesOptions Guarantees { System::Runtime::Versioning::ComponentGuaranteesOptions get(); };" />
      <MemberSignature Language="F#" Value="member this.Guarantees : System.Runtime.Versioning.ComponentGuaranteesOptions" Usage="System.Runtime.Versioning.ComponentGuaranteesAttribute.Guarantees" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Versioning.ComponentGuaranteesOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает значение, указывающее гарантированный уровень совместимости библиотеки, типа или члена типа с несколькими версиями.</summary>
        <value>Одно из значений перечисления, задающее гарантированный уровень совместимости с несколькими версиями.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Значение <xref:System.Runtime.Versioning.ComponentGuaranteesAttribute.Guarantees%2A> свойство соответствует `guarantees` параметр <xref:System.Runtime.Versioning.ComponentGuaranteesAttribute.%23ctor%2A> конструктор.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>