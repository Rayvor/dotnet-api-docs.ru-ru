<Type Name="Binding" FullName="System.Windows.Data.Binding">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9a22d563cf90b2854a6bf8d729f1b8114d9c9b46" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69211138" /></Metadata><TypeSignature Language="C#" Value="public class Binding : System.Windows.Data.BindingBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Binding extends System.Windows.Data.BindingBase" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Data.Binding" />
  <TypeSignature Language="VB.NET" Value="Public Class Binding&#xA;Inherits BindingBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class Binding : System::Windows::Data::BindingBase" />
  <TypeSignature Language="F#" Value="type Binding = class&#xA;    inherit BindingBase" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Data.BindingBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="2371f-101">Предоставляет высокоуровневый доступ к определению привязки, соединяющей свойства целевых объектов привязки (как правило, элементов WPF) и любой источник данных (например, базу данных, XML-файл или любой объект, который содержит данные).</span><span class="sxs-lookup"><span data-stu-id="2371f-101">Provides high-level access to the definition of a binding, which connects the properties of binding target objects (typically, WPF elements), and any data source (for example, a database, an XML file, or any object that contains data).</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2371f-102">Привязка данных [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] предоставляет приложениям простой и последовательный способ представления данных и взаимодействия с ними.</span><span class="sxs-lookup"><span data-stu-id="2371f-102">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] data binding provides a simple and consistent way for applications to present and interact with data.</span></span> <span data-ttu-id="2371f-103">Привязка данных позволяет синхронизировать значения свойств двух различных объектов.</span><span class="sxs-lookup"><span data-stu-id="2371f-103">Data binding enables you to synchronize the values of the properties of two different objects.</span></span>  
  
 <span data-ttu-id="2371f-104">Чтобы установить привязку, используйте <xref:System.Windows.Data.Binding> класс или один из других классов, которые наследуют. <xref:System.Windows.Data.BindingBase></span><span class="sxs-lookup"><span data-stu-id="2371f-104">To establish a binding, use the <xref:System.Windows.Data.Binding> class or one of the other classes that inherit <xref:System.Windows.Data.BindingBase>.</span></span> <span data-ttu-id="2371f-105">Независимо от объекта, который вы привязываете, и природы источника данных, каждая привязка соответствует модели, показанной на следующем рисунке.</span><span class="sxs-lookup"><span data-stu-id="2371f-105">Regardless of what object you are binding and the nature of your data source, each binding follows the model illustrated by the following figure.</span></span>  
  
 <span data-ttu-id="2371f-106">![Базовая диаграмма привязки данных] (~/add/media/databindingmostbasic.png "Базовая диаграмма привязки данных")</span><span class="sxs-lookup"><span data-stu-id="2371f-106">![Basic data binding diagram](~/add/media/databindingmostbasic.png "Basic data binding diagram")</span></span>  
  
 <span data-ttu-id="2371f-107">На рисунке показаны следующие фундаментальные [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] понятия привязки данных.</span><span class="sxs-lookup"><span data-stu-id="2371f-107">The figure demonstrates the following fundamental [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] data binding concepts.</span></span>  
  
-   <span data-ttu-id="2371f-108">Каждая привязка обычно содержит следующие четыре компонента: целевой объект привязки, целевое свойство, источник привязки и <xref:System.Windows.Data.Binding.Path%2A> значение для использования в источнике привязки.</span><span class="sxs-lookup"><span data-stu-id="2371f-108">Each binding typically has these four components: a binding target object, a target property, a binding source, and a <xref:System.Windows.Data.Binding.Path%2A> to the value in the binding source to use.</span></span> <span data-ttu-id="2371f-109">Например, если требуется привязать содержимое <xref:System.Windows.Controls.TextBox> к свойству Name объекта Employee, то целевой объект <xref:System.Windows.Controls.TextBox>будет иметь значение, свойство Target — <xref:System.Windows.Controls.TextBox.Text%2A> это свойство, используемое значение — имя, а исходный объект — сотрудник. объектами.</span><span class="sxs-lookup"><span data-stu-id="2371f-109">For example, if you want to bind the content of a <xref:System.Windows.Controls.TextBox> to the Name property of an Employee object, your target object is the <xref:System.Windows.Controls.TextBox>, the target property is the <xref:System.Windows.Controls.TextBox.Text%2A> property, the value to use is Name, and the source object is the Employee object.</span></span>  
  
-   <span data-ttu-id="2371f-110">Целевое свойство должно быть свойством зависимостей.</span><span class="sxs-lookup"><span data-stu-id="2371f-110">The target property must be a dependency property.</span></span> <span data-ttu-id="2371f-111">Это также означает, что невозможно привязать поле.</span><span class="sxs-lookup"><span data-stu-id="2371f-111">This also means that you cannot bind a field.</span></span> <span data-ttu-id="2371f-112">Большинство свойств <xref:System.Windows.UIElement> объектов являются свойствами зависимостей и большинством свойств зависимостей, кроме доступных только для чтения, поддерживают привязку данных по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="2371f-112">Most properties of <xref:System.Windows.UIElement> objects are dependency properties and most dependency properties, except read-only ones, support data binding by default.</span></span> <span data-ttu-id="2371f-113">(Только <xref:System.Windows.DependencyObject> типы могут определять свойства зависимостей, а <xref:System.Windows.UIElement> все объекты являются производными от <xref:System.Windows.DependencyObject>.)</span><span class="sxs-lookup"><span data-stu-id="2371f-113">(Only <xref:System.Windows.DependencyObject> types can define dependency properties and all <xref:System.Windows.UIElement> objects derive from <xref:System.Windows.DependencyObject>.)</span></span>  
  
-   <span data-ttu-id="2371f-114">Несмотря на то что это не указано на рисунке, следует отметить, что источник привязки не обязан быть пользовательским объектом [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)].</span><span class="sxs-lookup"><span data-stu-id="2371f-114">Although not specified in the figure, it should be noted that the binding source object is not restricted to being a custom [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] object.</span></span> <span data-ttu-id="2371f-115">Привязка данных [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] поддерживает данные в виде объектов [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] и [!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)].</span><span class="sxs-lookup"><span data-stu-id="2371f-115">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] data binding supports data in the form of [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] objects and [!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)].</span></span> <span data-ttu-id="2371f-116">Чтобы предоставить несколько примеров, источником привязки может <xref:System.Windows.UIElement>быть, любой объект списка [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] , объект, связанный с [!INCLUDE[TLA#tla_adonet](~/includes/tlasharptla-adonet-md.md)] данными или веб-службами, или XmlNode, содержащий ваши [!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)] данные.</span><span class="sxs-lookup"><span data-stu-id="2371f-116">To provide some examples, your binding source may be a <xref:System.Windows.UIElement>, any list object, a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] object that is associated with [!INCLUDE[TLA#tla_adonet](~/includes/tlasharptla-adonet-md.md)] data or Web Services, or an XmlNode that contains your [!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)] data.</span></span>  
  
 <span data-ttu-id="2371f-117"><xref:System.Windows.Data.Binding.Mode%2A> Используйте свойство, чтобы указать направление потока данных.</span><span class="sxs-lookup"><span data-stu-id="2371f-117">Use the <xref:System.Windows.Data.Binding.Mode%2A> property to specify the direction of the data flow.</span></span> <span data-ttu-id="2371f-118">Чтобы обнаружить изменения источника в односторонней или двухсторонней привязке, источник должен реализовать подходящий механизм уведомления об изменении свойств, например <xref:System.ComponentModel.INotifyPropertyChanged>.</span><span class="sxs-lookup"><span data-stu-id="2371f-118">To detect source changes in one-way or two-way bindings, the source must implement a suitable property change notification mechanism such as <xref:System.ComponentModel.INotifyPropertyChanged>.</span></span> <span data-ttu-id="2371f-119">Пример см. в статье [Практическое руководство. Реализация уведомления об](~/docs/framework/wpf/data/how-to-implement-property-change-notification.md)изменении свойства.</span><span class="sxs-lookup"><span data-stu-id="2371f-119">For an example, see [How to: Implement Property Change Notification](~/docs/framework/wpf/data/how-to-implement-property-change-notification.md).</span></span> <span data-ttu-id="2371f-120"><xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> Свойство задает время обновления источника.</span><span class="sxs-lookup"><span data-stu-id="2371f-120">The <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> property specifies the timing of source updates.</span></span> <span data-ttu-id="2371f-121">Дополнительные сведения см. в разделе "Основные понятия привязки данных" раздела [Общие сведения о привязке данных](~/docs/framework/wpf/data/data-binding-overview.md).</span><span class="sxs-lookup"><span data-stu-id="2371f-121">For more information, see "Basic Data Binding Concepts" in [Data Binding Overview](~/docs/framework/wpf/data/data-binding-overview.md).</span></span>  
  
<a name="xamlAttributeUsage_PriorityBinding"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="2371f-122">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="2371f-122">XAML Attribute Usage</span></span>  
  
```  
<object property="{Binding  declaration}"/>  
```  
  
<a name="xamlValues_PriorityBinding"></a>   
## <a name="xaml-values"></a><span data-ttu-id="2371f-123">Значения XAML</span><span class="sxs-lookup"><span data-stu-id="2371f-123">XAML Values</span></span>  
 <span data-ttu-id="2371f-124">*declaration*</span><span class="sxs-lookup"><span data-stu-id="2371f-124">*declaration*</span></span>  
 <span data-ttu-id="2371f-125">Ноль или несколько предложений атрибутов, разделенных запятыми (,).</span><span class="sxs-lookup"><span data-stu-id="2371f-125">Zero or more attribute-assignment clauses separated by commas (,).</span></span> <span data-ttu-id="2371f-126">Дополнительные сведения см. в разделе [Привязка расширения разметки](~/docs/framework/wpf/advanced/binding-markup-extension.md) или [объявлений привязки](~/docs/framework/wpf/data/binding-declarations-overview.md).</span><span class="sxs-lookup"><span data-stu-id="2371f-126">For more information, see [Binding Markup Extension](~/docs/framework/wpf/advanced/binding-markup-extension.md) or [Binding Declarations Overview](~/docs/framework/wpf/data/binding-declarations-overview.md).</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Data.MultiBinding" />
    <altmember cref="T:System.Windows.Data.PriorityBinding" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2371f-127">Инициализирует новый экземпляр класса <see cref="T:System.Windows.Data.Binding" />.</span><span class="sxs-lookup"><span data-stu-id="2371f-127">Initializes a new instance of the <see cref="T:System.Windows.Data.Binding" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Binding ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.Binding.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Binding();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2371f-128">Инициализирует новый экземпляр класса <see cref="T:System.Windows.Data.Binding" />.</span><span class="sxs-lookup"><span data-stu-id="2371f-128">Initializes a new instance of the <see cref="T:System.Windows.Data.Binding" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Binding (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.Binding.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Binding(System::String ^ path);" />
      <MemberSignature Language="F#" Value="new System.Windows.Data.Binding : string -&gt; System.Windows.Data.Binding" Usage="new System.Windows.Data.Binding path" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="2371f-129">Начальный <see cref="P:System.Windows.Data.Binding.Path" /> для привязки.</span><span class="sxs-lookup"><span data-stu-id="2371f-129">The initial <see cref="P:System.Windows.Data.Binding.Path" /> for the binding.</span></span></param>
        <summary><span data-ttu-id="2371f-130">Инициализирует новый экземпляр класса <see cref="T:System.Windows.Data.Binding" /> с начальным путем.</span><span class="sxs-lookup"><span data-stu-id="2371f-130">Initializes a new instance of the <see cref="T:System.Windows.Data.Binding" /> class with an initial path.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddSourceUpdatedHandler">
      <MemberSignature Language="C#" Value="public static void AddSourceUpdatedHandler (System.Windows.DependencyObject element, EventHandler&lt;System.Windows.Data.DataTransferEventArgs&gt; handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddSourceUpdatedHandler(class System.Windows.DependencyObject element, class System.EventHandler`1&lt;class System.Windows.Data.DataTransferEventArgs&gt; handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.Binding.AddSourceUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddSourceUpdatedHandler (element As DependencyObject, handler As EventHandler(Of DataTransferEventArgs))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddSourceUpdatedHandler(System::Windows::DependencyObject ^ element, EventHandler&lt;System::Windows::Data::DataTransferEventArgs ^&gt; ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddSourceUpdatedHandler : System.Windows.DependencyObject * EventHandler&lt;System.Windows.Data.DataTransferEventArgs&gt; -&gt; unit" Usage="System.Windows.Data.Binding.AddSourceUpdatedHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.EventHandler&lt;System.Windows.Data.DataTransferEventArgs&gt;" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="2371f-131">Объект <see cref="T:System.Windows.UIElement" /> или <see cref="T:System.Windows.ContentElement" />, прослушивающий событие.</span><span class="sxs-lookup"><span data-stu-id="2371f-131">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to the event.</span></span></param>
        <param name="handler"><span data-ttu-id="2371f-132">Добавляемый обработчик.</span><span class="sxs-lookup"><span data-stu-id="2371f-132">The handler to add.</span></span></param>
        <summary><span data-ttu-id="2371f-133">Добавляет обработчик для вложенного события <see cref="E:System.Windows.Data.Binding.SourceUpdated" />.</span><span class="sxs-lookup"><span data-stu-id="2371f-133">Adds a handler for the <see cref="E:System.Windows.Data.Binding.SourceUpdated" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2371f-134">Этот метод поддерживает использование присоединенных событий [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]в.</span><span class="sxs-lookup"><span data-stu-id="2371f-134">This method supports attached event usage in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddTargetUpdatedHandler">
      <MemberSignature Language="C#" Value="public static void AddTargetUpdatedHandler (System.Windows.DependencyObject element, EventHandler&lt;System.Windows.Data.DataTransferEventArgs&gt; handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddTargetUpdatedHandler(class System.Windows.DependencyObject element, class System.EventHandler`1&lt;class System.Windows.Data.DataTransferEventArgs&gt; handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.Binding.AddTargetUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddTargetUpdatedHandler (element As DependencyObject, handler As EventHandler(Of DataTransferEventArgs))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddTargetUpdatedHandler(System::Windows::DependencyObject ^ element, EventHandler&lt;System::Windows::Data::DataTransferEventArgs ^&gt; ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddTargetUpdatedHandler : System.Windows.DependencyObject * EventHandler&lt;System.Windows.Data.DataTransferEventArgs&gt; -&gt; unit" Usage="System.Windows.Data.Binding.AddTargetUpdatedHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.EventHandler&lt;System.Windows.Data.DataTransferEventArgs&gt;" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="2371f-135">Объект <see cref="T:System.Windows.UIElement" /> или <see cref="T:System.Windows.ContentElement" />, прослушивающий событие.</span><span class="sxs-lookup"><span data-stu-id="2371f-135">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to the event.</span></span></param>
        <param name="handler"><span data-ttu-id="2371f-136">Добавляемый обработчик.</span><span class="sxs-lookup"><span data-stu-id="2371f-136">The handler to add.</span></span></param>
        <summary><span data-ttu-id="2371f-137">Добавляет обработчик для вложенного события <see cref="E:System.Windows.Data.Binding.TargetUpdated" />.</span><span class="sxs-lookup"><span data-stu-id="2371f-137">Adds a handler for the <see cref="E:System.Windows.Data.Binding.TargetUpdated" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2371f-138">Этот метод поддерживает использование присоединенных событий [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]в.</span><span class="sxs-lookup"><span data-stu-id="2371f-138">This method supports attached event usage in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AsyncState">
      <MemberSignature Language="C#" Value="public object AsyncState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object AsyncState" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.AsyncState" />
      <MemberSignature Language="VB.NET" Value="Public Property AsyncState As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ AsyncState { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AsyncState : obj with get, set" Usage="System.Windows.Data.Binding.AsyncState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2371f-139">Получает или задает непрозрачные данные, передаваемые в диспетчер асинхронных данных.</span><span class="sxs-lookup"><span data-stu-id="2371f-139">Gets or sets opaque data passed to the asynchronous data dispatcher.</span></span></summary>
        <value><span data-ttu-id="2371f-140">Данные, передаваемые в диспетчер асинхронных данных.</span><span class="sxs-lookup"><span data-stu-id="2371f-140">Data passed to the asynchronous data dispatcher.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Data.Binding.IsAsync" />
        <altmember cref="P:System.Windows.Data.ObjectDataProvider.IsAsynchronous" />
        <altmember cref="P:System.Windows.Data.XmlDataProvider.IsAsynchronous" />
      </Docs>
    </Member>
    <Member MemberName="BindsDirectlyToSource">
      <MemberSignature Language="C#" Value="public bool BindsDirectlyToSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool BindsDirectlyToSource" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.BindsDirectlyToSource" />
      <MemberSignature Language="VB.NET" Value="Public Property BindsDirectlyToSource As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool BindsDirectlyToSource { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.BindsDirectlyToSource : bool with get, set" Usage="System.Windows.Data.Binding.BindsDirectlyToSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2371f-141">Возвращает или задает значение, указывающее, следует ли вычислять <see cref="P:System.Windows.Data.Binding.Path" /> относительно элемента данных или объекта <see cref="T:System.Windows.Data.DataSourceProvider" />.</span><span class="sxs-lookup"><span data-stu-id="2371f-141">Gets or sets a value that indicates whether to evaluate the <see cref="P:System.Windows.Data.Binding.Path" /> relative to the data item or the <see cref="T:System.Windows.Data.DataSourceProvider" /> object.</span></span></summary>
        <value><span data-ttu-id="2371f-142">Значение <see langword="false" /> для определения пути относительно самого элемента данных; в противном случае — значение <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="2371f-142"><see langword="false" /> to evaluate the path relative to the data item itself; otherwise, <see langword="true" />.</span></span> <span data-ttu-id="2371f-143">Значение по умолчанию — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2371f-143">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2371f-144">Нормальное поведение (если это свойство имеет `false`значение) включает специальную <xref:System.Windows.Data.DataSourceProvider> обработку для объектов.</span><span class="sxs-lookup"><span data-stu-id="2371f-144">The normal behavior (when this property is `false`) includes special treatment for <xref:System.Windows.Data.DataSourceProvider> objects.</span></span> <span data-ttu-id="2371f-145">В этом случае механизм привязки вычисляет относительно объекта, <xref:System.Windows.Data.Binding.Path%2A> полученного <xref:System.Windows.Data.DataSourceProvider.Data%2A> из свойства.</span><span class="sxs-lookup"><span data-stu-id="2371f-145">In this case, the binding engine evaluates the <xref:System.Windows.Data.Binding.Path%2A> relative to the object obtained from the <xref:System.Windows.Data.DataSourceProvider.Data%2A> property.</span></span> <span data-ttu-id="2371f-146">Кроме того, привязка прослушивает <xref:System.Windows.Data.DataSourceProvider.DataChanged> событие и реагирует соответствующим образом.</span><span class="sxs-lookup"><span data-stu-id="2371f-146">In addition, the binding listens for the <xref:System.Windows.Data.DataSourceProvider.DataChanged> event and reacts accordingly.</span></span> <span data-ttu-id="2371f-147">Присвоение этому свойству `true` значения переопределяет это поведение и предоставляет привязку доступ к <xref:System.Windows.Data.DataSourceProvider> свойствам самого объекта.</span><span class="sxs-lookup"><span data-stu-id="2371f-147">Setting this property to `true` overrides this behavior and gives the binding access to properties of the <xref:System.Windows.Data.DataSourceProvider> object itself.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Data.ObjectDataProvider" />
        <altmember cref="T:System.Windows.Data.XmlDataProvider" />
      </Docs>
    </Member>
    <Member MemberName="Converter">
      <MemberSignature Language="C#" Value="public System.Windows.Data.IValueConverter Converter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Data.IValueConverter Converter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.Converter" />
      <MemberSignature Language="VB.NET" Value="Public Property Converter As IValueConverter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Data::IValueConverter ^ Converter { System::Windows::Data::IValueConverter ^ get(); void set(System::Windows::Data::IValueConverter ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Converter : System.Windows.Data.IValueConverter with get, set" Usage="System.Windows.Data.Binding.Converter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Data.IValueConverter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2371f-148">Получает или задает используемый преобразователь.</span><span class="sxs-lookup"><span data-stu-id="2371f-148">Gets or sets the converter to use.</span></span></summary>
        <value><span data-ttu-id="2371f-149">Значение типа <see cref="T:System.Windows.Data.IValueConverter" />.</span><span class="sxs-lookup"><span data-stu-id="2371f-149">A value of type <see cref="T:System.Windows.Data.IValueConverter" />.</span></span> <span data-ttu-id="2371f-150">Значение по умолчанию — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2371f-150">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2371f-151">Привязка неявно использует преобразователь по умолчанию, который пытается выполнить преобразование типов между исходным значением и целевым значением.</span><span class="sxs-lookup"><span data-stu-id="2371f-151">A binding implicitly uses a default converter that tries to do a type conversion between the source value and the target value.</span></span> <span data-ttu-id="2371f-152">Если преобразование не удается выполнить, преобразователь по умолчанию возвращает значение `null`.</span><span class="sxs-lookup"><span data-stu-id="2371f-152">If a conversion cannot be made, the default converter returns `null`.</span></span>  
  
 <span data-ttu-id="2371f-153">Если необходимо связать пользовательский преобразователь значений с привязкой, следует создать класс, реализующий <xref:System.Windows.Data.IValueConverter> интерфейс, и предоставить реализации <xref:System.Windows.Data.IValueConverter.Convert%2A> для методов и <xref:System.Windows.Data.IValueConverter.ConvertBack%2A> .</span><span class="sxs-lookup"><span data-stu-id="2371f-153">If you want to associate a custom value converter with a binding, you should create a class that implements the <xref:System.Windows.Data.IValueConverter> interface and supply implementations for the <xref:System.Windows.Data.IValueConverter.Convert%2A> and <xref:System.Windows.Data.IValueConverter.ConvertBack%2A> methods.</span></span> <span data-ttu-id="2371f-154">Преобразователи значений могут изменять данные одного типа на другой, переводить между культурными сведениями, такими как наборы символов, или изменять другие аспекты их представления.</span><span class="sxs-lookup"><span data-stu-id="2371f-154">Value converters can change data from one type to another, translate between cultural details such as character sets, or modify other aspects of their presentation.</span></span> <span data-ttu-id="2371f-155">Примеры типичных сценариев преобразования см. в разделе "Преобразование данных" в статье [Общие сведения о привязке данных](~/docs/framework/wpf/data/data-binding-overview.md).</span><span class="sxs-lookup"><span data-stu-id="2371f-155">For examples of typical conversion scenarios, see "Data Conversion" in the [Data Binding Overview](~/docs/framework/wpf/data/data-binding-overview.md).</span></span>  
  
<a name="xamlAttributeUsage_Converter"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="2371f-156">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="2371f-156">XAML Attribute Usage</span></span>  
  
```  
<object Converter="myConverter"/>  
```  
  
<a name="xamlValues_Converter"></a>   
## <a name="xaml-values"></a><span data-ttu-id="2371f-157">Значения XAML</span><span class="sxs-lookup"><span data-stu-id="2371f-157">XAML Values</span></span>  
 <span data-ttu-id="2371f-158">*myConverter*</span><span class="sxs-lookup"><span data-stu-id="2371f-158">*myConverter*</span></span>  
 <span data-ttu-id="2371f-159">Ссылка на ресурс для класса, реализующего <xref:System.Windows.Data.IValueConverter> интерфейс, который включает реализации <xref:System.Windows.Data.IValueConverter.Convert%2A> методов и <xref:System.Windows.Data.IValueConverter.ConvertBack%2A> .</span><span class="sxs-lookup"><span data-stu-id="2371f-159">A resource reference to a class that implements the <xref:System.Windows.Data.IValueConverter> interface, which includes implementations of the <xref:System.Windows.Data.IValueConverter.Convert%2A> and <xref:System.Windows.Data.IValueConverter.ConvertBack%2A> methods.</span></span> <span data-ttu-id="2371f-160">Для ссылки на преобразователь значений используйте [расширение разметки StaticResource](~/docs/framework/wpf/advanced/staticresource-markup-extension.md).</span><span class="sxs-lookup"><span data-stu-id="2371f-160">To refer to a value converter, use the [StaticResource Markup Extension](~/docs/framework/wpf/advanced/staticresource-markup-extension.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConverterCulture">
      <MemberSignature Language="C#" Value="public System.Globalization.CultureInfo ConverterCulture { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.CultureInfo ConverterCulture" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.ConverterCulture" />
      <MemberSignature Language="VB.NET" Value="Public Property ConverterCulture As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::CultureInfo ^ ConverterCulture { System::Globalization::CultureInfo ^ get(); void set(System::Globalization::CultureInfo ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ConverterCulture : System.Globalization.CultureInfo with get, set" Usage="System.Windows.Data.Binding.ConverterCulture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.CultureInfoIetfLanguageTagConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2371f-161">Получает или задает язык и региональные параметры, в которых необходимо оценить преобразователь.</span><span class="sxs-lookup"><span data-stu-id="2371f-161">Gets or sets the culture in which to evaluate the converter.</span></span></summary>
        <value><span data-ttu-id="2371f-162">Значение по умолчанию — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2371f-162">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2371f-163">Если это свойство не задано, подсистема привязки использует `Language` свойство целевого объекта привязки.</span><span class="sxs-lookup"><span data-stu-id="2371f-163">If you do not set this property, the binding engine uses the `Language` property of the binding target object.</span></span> <span data-ttu-id="2371f-164">В [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] этом случае значение по умолчанию — en-US или наследуется от корневого элемента (или любого элемента) страницы, если он был явно задан.</span><span class="sxs-lookup"><span data-stu-id="2371f-164">In [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] this defaults to "en-US" or inherits the value from the root element (or any element) of the page, if one has been explicitly set.</span></span>  
  
 <span data-ttu-id="2371f-165">Дополнительные сведения о преобразовании данных см. в разделе Преобразование данных в статье [Общие сведения о привязке данных](~/docs/framework/wpf/data/data-binding-overview.md).</span><span class="sxs-lookup"><span data-stu-id="2371f-165">For information about data conversion, see the Data Conversion section in the [Data Binding Overview](~/docs/framework/wpf/data/data-binding-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConverterParameter">
      <MemberSignature Language="C#" Value="public object ConverterParameter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ConverterParameter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.ConverterParameter" />
      <MemberSignature Language="VB.NET" Value="Public Property ConverterParameter As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ConverterParameter { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ConverterParameter : obj with get, set" Usage="System.Windows.Data.Binding.ConverterParameter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2371f-166">Возвращает или задает параметр, передаваемый <see cref="P:System.Windows.Data.Binding.Converter" />.</span><span class="sxs-lookup"><span data-stu-id="2371f-166">Gets or sets the parameter to pass to the <see cref="P:System.Windows.Data.Binding.Converter" />.</span></span></summary>
        <value><span data-ttu-id="2371f-167">Параметр, который передается <see cref="P:System.Windows.Data.Binding.Converter" />.</span><span class="sxs-lookup"><span data-stu-id="2371f-167">The parameter to pass to the <see cref="P:System.Windows.Data.Binding.Converter" />.</span></span> <span data-ttu-id="2371f-168">Значение по умолчанию — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2371f-168">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2371f-169"><xref:System.Windows.Data.Binding.ConverterParameter%2A> Свойство можно использовать для указания способа преобразования объекта.</span><span class="sxs-lookup"><span data-stu-id="2371f-169">You can use the <xref:System.Windows.Data.Binding.ConverterParameter%2A> property to specify how an object is converted.</span></span>  <span data-ttu-id="2371f-170">Это свойство передает дополнительные сведения в преобразователь, используемый в привязке.</span><span class="sxs-lookup"><span data-stu-id="2371f-170">This property passes additional information to a converter that you use on a binding.</span></span>  <span data-ttu-id="2371f-171">При указании <xref:System.Windows.Data.Binding.ConverterParameter%2A>значение передается <xref:System.Windows.Data.IValueConverter.Convert%2A> в методы и <xref:System.Windows.Data.IValueConverter.ConvertBack%2A> в качестве `parameter` параметра.</span><span class="sxs-lookup"><span data-stu-id="2371f-171">When you specify a <xref:System.Windows.Data.Binding.ConverterParameter%2A>, the value is passed to the <xref:System.Windows.Data.IValueConverter.Convert%2A> and <xref:System.Windows.Data.IValueConverter.ConvertBack%2A> methods as the `parameter` parameter.</span></span>  
  
 <span data-ttu-id="2371f-172">Пример см. в статье [Практическое руководство. Получение значения на основе списка привязанных элементов](~/docs/framework/wpf/data/how-to-produce-a-value-based-on-a-list-of-bound-items.md).</span><span class="sxs-lookup"><span data-stu-id="2371f-172">For an example, see [How to: Produce a Value Based on a List of Bound Items](~/docs/framework/wpf/data/how-to-produce-a-value-based-on-a-list-of-bound-items.md).</span></span> <span data-ttu-id="2371f-173">В этом примере показана реализация объекта <xref:System.Windows.Data.IMultiValueConverter> , но использование по-прежнему применяется.</span><span class="sxs-lookup"><span data-stu-id="2371f-173">That example shows an implementation of an <xref:System.Windows.Data.IMultiValueConverter> but the usage still applies.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DoNothing">
      <MemberSignature Language="C#" Value="public static readonly object DoNothing;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly object DoNothing" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Data.Binding.DoNothing" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DoNothing As Object " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Object ^ DoNothing;" />
      <MemberSignature Language="F#" Value=" staticval mutable DoNothing : obj" Usage="System.Windows.Data.Binding.DoNothing" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2371f-174">Используется как возвращаемое значение, чтобы указать, что механизму привязки не требуется выполнять никаких действий.</span><span class="sxs-lookup"><span data-stu-id="2371f-174">Used as a returned value to instruct the binding engine not to perform any action.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2371f-175">Свойство источника привязки или преобразователь может вернуть <xref:System.Windows.Data.Binding.DoNothing?displayProperty=nameWithType> , чтобы указать механизму привязки не выполнять никаких действий.</span><span class="sxs-lookup"><span data-stu-id="2371f-175">A binding source property or a converter can return <xref:System.Windows.Data.Binding.DoNothing?displayProperty=nameWithType> to instruct the binding engine not to perform any action.</span></span> <span data-ttu-id="2371f-176">Например, чтобы указать механизму привязки не передавать значение в целевой объект привязки, не переходить к следующему <xref:System.Windows.Data.Binding> элементу <xref:System.Windows.Data.PriorityBinding>в `FallBackValue` или не использовать значение по умолчанию или.</span><span class="sxs-lookup"><span data-stu-id="2371f-176">For example, to instruct the binding engine not to transfer a value to the binding target, not to move to the next <xref:System.Windows.Data.Binding> in a <xref:System.Windows.Data.PriorityBinding>, or not to use the `FallBackValue` or default value.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ElementName">
      <MemberSignature Language="C#" Value="public string ElementName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ElementName" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.ElementName" />
      <MemberSignature Language="VB.NET" Value="Public Property ElementName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ElementName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ElementName : string with get, set" Usage="System.Windows.Data.Binding.ElementName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2371f-177">Получает или задает имя элемента, который требуется использовать в качестве объекта источника привязки.</span><span class="sxs-lookup"><span data-stu-id="2371f-177">Gets or sets the name of the element to use as the binding source object.</span></span></summary>
        <value><span data-ttu-id="2371f-178">Значение свойства <see langword="Name" /> или [директива x:Name](~/docs/framework/xaml-services/x-name-directive.md) нужного элемента.</span><span class="sxs-lookup"><span data-stu-id="2371f-178">The value of the <see langword="Name" /> property or [x:Name Directive](~/docs/framework/xaml-services/x-name-directive.md) of the element of interest.</span></span> <span data-ttu-id="2371f-179">Ссылаться на элементы в коде можно только в том случае, если они зарегистрированы в соответствующем <see cref="T:System.Windows.NameScope" /> с помощью <see langword="RegisterName" />.</span><span class="sxs-lookup"><span data-stu-id="2371f-179">You can refer to elements in code only if they are registered to the appropriate <see cref="T:System.Windows.NameScope" /> through <see langword="RegisterName" />.</span></span> <span data-ttu-id="2371f-180">Более подробную информацию см. в разделе [Области видимости имен XAML в WPF](~/docs/framework/wpf/advanced/wpf-xaml-namescopes.md).</span><span class="sxs-lookup"><span data-stu-id="2371f-180">For more information, see [WPF XAML Namescopes](~/docs/framework/wpf/advanced/wpf-xaml-namescopes.md).</span></span>  
  
<span data-ttu-id="2371f-181">Значение по умолчанию — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2371f-181">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2371f-182">Это свойство полезно, если необходимо выполнить привязку к свойству другого элемента в приложении.</span><span class="sxs-lookup"><span data-stu-id="2371f-182">This property is useful when you want to bind to the property of another element in your application.</span></span> <span data-ttu-id="2371f-183">Например, <xref:System.Windows.Controls.Slider> если вы хотите использовать для управления высотой другого элемента управления в приложении или если вы хотите <xref:System.Windows.Controls.ContentControl.Content%2A> привязать элемент управления <xref:System.Windows.Controls.ListBox> к <xref:System.Windows.Controls.Primitives.Selector.SelectedValue%2A> свойству элемента управления.</span><span class="sxs-lookup"><span data-stu-id="2371f-183">For example, if you want to use a <xref:System.Windows.Controls.Slider> to control the height of another control in your application, or if you want to bind the <xref:System.Windows.Controls.ContentControl.Content%2A> of your control to the <xref:System.Windows.Controls.Primitives.Selector.SelectedValue%2A> property of your <xref:System.Windows.Controls.ListBox> control.</span></span>  
  
 <span data-ttu-id="2371f-184">По умолчанию привязки наследуют контекст данных, заданный `DataContext` свойством, если он задан.</span><span class="sxs-lookup"><span data-stu-id="2371f-184">By default, bindings inherit the data context specified by the `DataContext` property, if one has been set.</span></span> <span data-ttu-id="2371f-185">Однако свойство является одним из способов явного задания источника <xref:System.Windows.Data.Binding> и переопределения унаследованного контекста данных. <xref:System.Windows.Data.Binding.ElementName%2A></span><span class="sxs-lookup"><span data-stu-id="2371f-185">However, the <xref:System.Windows.Data.Binding.ElementName%2A> property is one of the ways you can explicitly set the source of a <xref:System.Windows.Data.Binding> and override the inherited data context.</span></span> <span data-ttu-id="2371f-186">Дополнительные сведения см. в разделе [Практическое руководство. Укажите источник](~/docs/framework/wpf/data/how-to-specify-the-binding-source.md)привязки.</span><span class="sxs-lookup"><span data-stu-id="2371f-186">For more information, see [How to: Specify the Binding Source](~/docs/framework/wpf/data/how-to-specify-the-binding-source.md).</span></span>  
  
 <span data-ttu-id="2371f-187">Свойства <xref:System.Windows.Data.Binding.Source%2A> и<xref:System.Windows.Data.Binding.RelativeSource%2A> класса также позволяют явно задать источник привязки. <xref:System.Windows.Data.Binding></span><span class="sxs-lookup"><span data-stu-id="2371f-187">The <xref:System.Windows.Data.Binding.Source%2A> and <xref:System.Windows.Data.Binding.RelativeSource%2A> properties of the <xref:System.Windows.Data.Binding> class also enable you to set the source of the binding explicitly.</span></span> <span data-ttu-id="2371f-188">Однако для каждой привязки должны быть заданы только <xref:System.Windows.Data.Binding.ElementName%2A>одно <xref:System.Windows.Data.Binding.Source%2A>из трех <xref:System.Windows.Data.Binding.RelativeSource%2A>свойств,, и, или может возникнуть конфликт.</span><span class="sxs-lookup"><span data-stu-id="2371f-188">However, only one of the three properties, <xref:System.Windows.Data.Binding.ElementName%2A>, <xref:System.Windows.Data.Binding.Source%2A>, and <xref:System.Windows.Data.Binding.RelativeSource%2A>, should be set for each binding, or a conflict might occur.</span></span> <span data-ttu-id="2371f-189">Это свойство создает исключение при конфликте источника привязки.</span><span class="sxs-lookup"><span data-stu-id="2371f-189">This property throws an exception if there is a binding source conflict.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetXmlNamespaceManager">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlNamespaceManager GetXmlNamespaceManager (System.Windows.DependencyObject target);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlNamespaceManager GetXmlNamespaceManager(class System.Windows.DependencyObject target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.Binding.GetXmlNamespaceManager(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetXmlNamespaceManager (target As DependencyObject) As XmlNamespaceManager" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlNamespaceManager ^ GetXmlNamespaceManager(System::Windows::DependencyObject ^ target);" />
      <MemberSignature Language="F#" Value="static member GetXmlNamespaceManager : System.Windows.DependencyObject -&gt; System.Xml.XmlNamespaceManager" Usage="System.Windows.Data.Binding.GetXmlNamespaceManager target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNamespaceManager</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="2371f-190">Объект, из которого требуется получить сведения о пространстве имен.</span><span class="sxs-lookup"><span data-stu-id="2371f-190">The object from which to get namespace information.</span></span></param>
        <summary><span data-ttu-id="2371f-191">Возвращает объект диспетчера пространства имен [!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)], используемый привязкой, подключенной к указанному объекту.</span><span class="sxs-lookup"><span data-stu-id="2371f-191">Returns an [!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)] namespace manager object used by the binding attached to the specified object.</span></span></summary>
        <returns><span data-ttu-id="2371f-192">Возвращенный объект, используемый для просмотра пространств имен [!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)], относящихся к привязке в переданном элементе объекта.</span><span class="sxs-lookup"><span data-stu-id="2371f-192">A returned object used for viewing [!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)] namespaces that relate to the binding on the passed object element.</span></span> <span data-ttu-id="2371f-193">Этот объект должен быть приведен как <see cref="T:System.Xml.XmlNamespaceManager" />.</span><span class="sxs-lookup"><span data-stu-id="2371f-193">This object should be cast as <see cref="T:System.Xml.XmlNamespaceManager" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2371f-194">Этот метод поддерживает использование присоединенного свойства для <xref:System.Windows.Data.Binding.XmlNamespaceManager%2A> присоединенного свойства.</span><span class="sxs-lookup"><span data-stu-id="2371f-194">This method supports attached property usage for the <xref:System.Windows.Data.Binding.XmlNamespaceManager%2A> attached property.</span></span>  
  
 [!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)]<span data-ttu-id="2371f-195">диспетчеры пространств имен важны только в том случае, если данные в привязке поступили из [!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)] источника привязки (<xref:System.Windows.Data.XmlDataProvider> объекта).</span><span class="sxs-lookup"><span data-stu-id="2371f-195">namespace managers are relevant only if the data in the binding came from an [!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)] binding source (<xref:System.Windows.Data.XmlDataProvider> object).</span></span>  
  
 <span data-ttu-id="2371f-196">Если диспетчер пространств имен не был специально применен либо при создании исходного источника данных, либо при последующем <xref:System.Windows.Data.Binding.SetXmlNamespaceManager%2A> вызове в привязке, этот метод возвратит `null`.</span><span class="sxs-lookup"><span data-stu-id="2371f-196">If a namespace manager was not specifically applied either in the original data source creation or by subsequently calling <xref:System.Windows.Data.Binding.SetXmlNamespaceManager%2A> on the binding, then this method will return `null`.</span></span>  
  
 <span data-ttu-id="2371f-197">Этот метод всегда будет возвращать `null` значение, если данные за пределами привязки не [!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)]являются.</span><span class="sxs-lookup"><span data-stu-id="2371f-197">This method will always return `null` if the data behind the binding is not [!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)].</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2371f-198">Параметр <paramref name="target" /> не может иметь значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2371f-198">The <paramref name="target" /> parameter cannot be <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IndexerName">
      <MemberSignature Language="C#" Value="public const string IndexerName;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string IndexerName" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Data.Binding.IndexerName" />
      <MemberSignature Language="VB.NET" Value="Public Const IndexerName As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ IndexerName;" />
      <MemberSignature Language="F#" Value="val mutable IndexerName : string" Usage="System.Windows.Data.Binding.IndexerName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2371f-199">Используется как <see cref="P:System.ComponentModel.PropertyChangedEventArgs.PropertyName" /> из <see cref="T:System.ComponentModel.PropertyChangedEventArgs" />, указывая, что свойство индексатора изменилось.</span><span class="sxs-lookup"><span data-stu-id="2371f-199">Used as the <see cref="P:System.ComponentModel.PropertyChangedEventArgs.PropertyName" /> of <see cref="T:System.ComponentModel.PropertyChangedEventArgs" /> to indicate that an indexer property has changed.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAsync">
      <MemberSignature Language="C#" Value="public bool IsAsync { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAsync" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.IsAsync" />
      <MemberSignature Language="VB.NET" Value="Public Property IsAsync As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAsync { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsAsync : bool with get, set" Usage="System.Windows.Data.Binding.IsAsync" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2371f-200">Возвращает или задает значение, которое указывает, следует ли объекту <see cref="T:System.Windows.Data.Binding" /> получать и задавать значения асинхронно.</span><span class="sxs-lookup"><span data-stu-id="2371f-200">Gets or sets a value that indicates whether the <see cref="T:System.Windows.Data.Binding" /> should get and set values asynchronously.</span></span></summary>
        <value><span data-ttu-id="2371f-201">Значение по умолчанию — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2371f-201">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2371f-202">Используйте свойство <xref:System.Windows.Data.Binding.IsAsync%2A> , `get` если свойство источника привязки может занимать много времени.</span><span class="sxs-lookup"><span data-stu-id="2371f-202">Use the <xref:System.Windows.Data.Binding.IsAsync%2A> property when the `get` accessor of your binding source property might take a long time.</span></span> <span data-ttu-id="2371f-203">Одним из примеров является свойство Image с `get` методом доступа, который скачивается из Интернета.</span><span class="sxs-lookup"><span data-stu-id="2371f-203">One example is an image property with a `get` accessor that downloads from the Web.</span></span> <span data-ttu-id="2371f-204">Значение <xref:System.Windows.Data.Binding.IsAsync%2A> , `true` чтобы избежать блокировки [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] во время загрузки.</span><span class="sxs-lookup"><span data-stu-id="2371f-204">Setting <xref:System.Windows.Data.Binding.IsAsync%2A> to `true` avoids blocking the [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] while the download occurs.</span></span>  
  
 <span data-ttu-id="2371f-205">При ожидании прибытия значения привязка сообщает <xref:System.Windows.Data.BindingBase.FallbackValue%2A>, если она доступна, или значение по умолчанию для свойства цели привязки.</span><span class="sxs-lookup"><span data-stu-id="2371f-205">While waiting for the value to arrive, the binding reports the <xref:System.Windows.Data.BindingBase.FallbackValue%2A>, if one is available, or the default value of the binding target property.</span></span>  
  
 <span data-ttu-id="2371f-206">Однако не должно быть многих сценариев, в которых необходимо использовать <xref:System.Windows.Data.Binding.IsAsync%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="2371f-206">However, there should not be many scenarios where you need to use the <xref:System.Windows.Data.Binding.IsAsync%2A> property.</span></span> <span data-ttu-id="2371f-207">[!INCLUDE[TLA2#tla_net](~/includes/tla2sharptla-net-md.md)] Рекомендации рекомендуются для определения свойств, порядок которых меньше, чем набор полей.</span><span class="sxs-lookup"><span data-stu-id="2371f-207">The [!INCLUDE[TLA2#tla_net](~/includes/tla2sharptla-net-md.md)] guidelines recommend against defining properties that are orders of magnitude slower than a field set would be.</span></span> <span data-ttu-id="2371f-208">При создании класса рассмотрите возможность обработки чрезвычайно небольшого числа `get` операций за пределами метода доступа и кэширования результата.</span><span class="sxs-lookup"><span data-stu-id="2371f-208">When you are creating your class, consider handling extremely slow operations outside of the `get` accessor and caching the result.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Data.Binding.AsyncState" />
        <altmember cref="P:System.Windows.Data.ObjectDataProvider.IsAsynchronous" />
        <altmember cref="P:System.Windows.Data.XmlDataProvider.IsAsynchronous" />
        <altmember cref="T:System.Windows.PropertyChangedCallback" />
      </Docs>
    </Member>
    <Member MemberName="Mode">
      <MemberSignature Language="C#" Value="public System.Windows.Data.BindingMode Mode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Data.BindingMode Mode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.Mode" />
      <MemberSignature Language="VB.NET" Value="Public Property Mode As BindingMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Data::BindingMode Mode { System::Windows::Data::BindingMode get(); void set(System::Windows::Data::BindingMode value); };" />
      <MemberSignature Language="F#" Value="member this.Mode : System.Windows.Data.BindingMode with get, set" Usage="System.Windows.Data.Binding.Mode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Data.BindingMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2371f-209">Возвращает или задает значение, указывающее направление потока данных в привязке.</span><span class="sxs-lookup"><span data-stu-id="2371f-209">Gets or sets a value that indicates the direction of the data flow in the binding.</span></span></summary>
        <value><span data-ttu-id="2371f-210">Одно из значений перечисления <see cref="T:System.Windows.Data.BindingMode" />.</span><span class="sxs-lookup"><span data-stu-id="2371f-210">One of the <see cref="T:System.Windows.Data.BindingMode" /> values.</span></span> <span data-ttu-id="2371f-211">Значение по умолчанию — <see cref="F:System.Windows.Data.BindingMode.Default" />, возвращающее значение режима привязки по умолчанию для целевого свойства зависимостей.</span><span class="sxs-lookup"><span data-stu-id="2371f-211">The default is <see cref="F:System.Windows.Data.BindingMode.Default" />, which returns the default binding mode value of the target dependency property.</span></span> <span data-ttu-id="2371f-212">Однако значение по умолчанию для каждого из свойств зависимостей может различаться.</span><span class="sxs-lookup"><span data-stu-id="2371f-212">However, the default value varies for each dependency property.</span></span> <span data-ttu-id="2371f-213">В общем случае свойства доступного для редактирования пользователями элемента управления (например, текстового поля или флажка) по умолчанию имеют двухсторонние привязки, в то время как большинство других свойств по умолчанию имеют односторонние привязки.</span><span class="sxs-lookup"><span data-stu-id="2371f-213">In general, user-editable control properties, such as those of text boxes and check boxes, default to two-way bindings, whereas most other properties default to one-way bindings.</span></span>  
  
<span data-ttu-id="2371f-214">Существует способ определить программно, использует ли свойство зависимостей односторонние или двухсторонние привязки по умолчанию: для этого нужно получить метаданные этого свойства, воспользовавшись методом <see cref="M:System.Windows.DependencyProperty.GetMetadata(System.Type)" />, а затем проверить логическое значение свойства <see cref="P:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault" />.</span><span class="sxs-lookup"><span data-stu-id="2371f-214">A programmatic way to determine whether a dependency property binds one-way or two-way by default is to get the property metadata of the property using <see cref="M:System.Windows.DependencyProperty.GetMetadata(System.Type)" /> and then check the Boolean value of the <see cref="P:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault" /> property.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2371f-215">Для поддержки <xref:System.Windows.Data.BindingMode.OneWay> и <xref:System.Windows.Data.BindingMode.TwoWay> привязок базовые данные должны реализовывать <xref:System.ComponentModel.INotifyPropertyChanged>.</span><span class="sxs-lookup"><span data-stu-id="2371f-215">To support <xref:System.Windows.Data.BindingMode.OneWay> and <xref:System.Windows.Data.BindingMode.TwoWay> bindings, the underlying data must implement <xref:System.ComponentModel.INotifyPropertyChanged>.</span></span> <span data-ttu-id="2371f-216">Подробную информацию см. в разделе [Практическое руководство. Реализация уведомления об](~/docs/framework/wpf/data/how-to-implement-property-change-notification.md)изменении свойства.</span><span class="sxs-lookup"><span data-stu-id="2371f-216">For details, see [How to: Implement Property Change Notification](~/docs/framework/wpf/data/how-to-implement-property-change-notification.md).</span></span>  
  
 <span data-ttu-id="2371f-217">Для <xref:System.Windows.Data.BindingMode.TwoWay> привязок или <xref:System.Windows.Data.BindingMode.OneWayToSource> можно управлять обновлениями с нацеливанием на <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> источник, задав свойство.</span><span class="sxs-lookup"><span data-stu-id="2371f-217">For <xref:System.Windows.Data.BindingMode.TwoWay> or <xref:System.Windows.Data.BindingMode.OneWayToSource> bindings, you can control the target-to-source updates by setting the <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> property.</span></span> <span data-ttu-id="2371f-218">Для получения дополнительной информации см. <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A>.</span><span class="sxs-lookup"><span data-stu-id="2371f-218">For more information, see <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A>.</span></span>  
  
 <span data-ttu-id="2371f-219">Дополнительные сведения о различных режимах привязки см. в разделе [Общие сведения о привязке данных](~/docs/framework/wpf/data/data-binding-overview.md).</span><span class="sxs-lookup"><span data-stu-id="2371f-219">For more information on the different binding modes, see [Data Binding Overview](~/docs/framework/wpf/data/data-binding-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NotifyOnSourceUpdated">
      <MemberSignature Language="C#" Value="public bool NotifyOnSourceUpdated { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NotifyOnSourceUpdated" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.NotifyOnSourceUpdated" />
      <MemberSignature Language="VB.NET" Value="Public Property NotifyOnSourceUpdated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool NotifyOnSourceUpdated { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.NotifyOnSourceUpdated : bool with get, set" Usage="System.Windows.Data.Binding.NotifyOnSourceUpdated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2371f-220">Возвращает или задает значение, указывающее, следует ли вызывать событие <see cref="E:System.Windows.Data.Binding.SourceUpdated" />, когда значение передается от целевого объекта привязки к источнику привязки.</span><span class="sxs-lookup"><span data-stu-id="2371f-220">Gets or sets a value that indicates whether to raise the <see cref="E:System.Windows.Data.Binding.SourceUpdated" /> event when a value is transferred from the binding target to the binding source.</span></span></summary>
        <value><span data-ttu-id="2371f-221">Значение <see langword="true" />, если событие <see cref="E:System.Windows.Data.Binding.SourceUpdated" /> должно вызываться при обновлении источника привязки; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2371f-221"><see langword="true" /> if the <see cref="E:System.Windows.Data.Binding.SourceUpdated" /> event should be raised when the binding source value is updated; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="2371f-222">Значение по умолчанию — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2371f-222">The default is <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Data.BindingExpression.UpdateSource" />
      </Docs>
    </Member>
    <Member MemberName="NotifyOnTargetUpdated">
      <MemberSignature Language="C#" Value="public bool NotifyOnTargetUpdated { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NotifyOnTargetUpdated" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.NotifyOnTargetUpdated" />
      <MemberSignature Language="VB.NET" Value="Public Property NotifyOnTargetUpdated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool NotifyOnTargetUpdated { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.NotifyOnTargetUpdated : bool with get, set" Usage="System.Windows.Data.Binding.NotifyOnTargetUpdated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2371f-223">Возвращает или задает значение, указывающее, следует ли вызывать событие <see cref="E:System.Windows.Data.Binding.TargetUpdated" />, когда значение передается от исходного объекта привязки к целевому объекту привязки.</span><span class="sxs-lookup"><span data-stu-id="2371f-223">Gets or sets a value that indicates whether to raise the <see cref="E:System.Windows.Data.Binding.TargetUpdated" /> event when a value is transferred from the binding source to the binding target.</span></span></summary>
        <value><span data-ttu-id="2371f-224">Значение <see langword="true" />, если событие <see cref="E:System.Windows.Data.Binding.TargetUpdated" /> должно вызываться при обновлении значения источника привязки; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2371f-224"><see langword="true" /> if the <see cref="E:System.Windows.Data.Binding.TargetUpdated" /> event should be raised when the binding target value is updated; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="2371f-225">Значение по умолчанию — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2371f-225">The default is <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Data.BindingExpression.UpdateTarget" />
      </Docs>
    </Member>
    <Member MemberName="NotifyOnValidationError">
      <MemberSignature Language="C#" Value="public bool NotifyOnValidationError { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NotifyOnValidationError" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.NotifyOnValidationError" />
      <MemberSignature Language="VB.NET" Value="Public Property NotifyOnValidationError As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool NotifyOnValidationError { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.NotifyOnValidationError : bool with get, set" Usage="System.Windows.Data.Binding.NotifyOnValidationError" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2371f-226">Получает или задает значение, указывающее, следует ли вызывать подключенное к <see cref="E:System.Windows.Controls.Validation.Error" /> событие в привязанном объекте.</span><span class="sxs-lookup"><span data-stu-id="2371f-226">Gets or sets a value that indicates whether to raise the <see cref="E:System.Windows.Controls.Validation.Error" /> attached event on the bound object.</span></span></summary>
        <value><span data-ttu-id="2371f-227">Значение<see langword="true" /> , если подключенное к <see cref="E:System.Windows.Controls.Validation.Error" /> событие должно вызываться в привязанном объекте при ошибке проверки во время обновления источника, в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2371f-227"><see langword="true" /> if the <see cref="E:System.Windows.Controls.Validation.Error" /> attached event should be raised on the bound object when there is a validation error during source updates; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="2371f-228">Значение по умолчанию — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2371f-228">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2371f-229">Если привязка <xref:System.Windows.Data.Binding.ValidationRules%2A> связана с ней, механизм привязки проверяет каждое правило при каждой передаче значения целевого свойства в исходное свойство.</span><span class="sxs-lookup"><span data-stu-id="2371f-229">If the binding has <xref:System.Windows.Data.Binding.ValidationRules%2A> associated with it, the binding engine checks each rule each time it transfers the target property value to the source property.</span></span> <span data-ttu-id="2371f-230">Если правило делает недействительным значение, подсистема привязки создает <xref:System.Windows.Controls.ValidationError> объект и добавляет его <xref:System.Windows.Controls.Validation>в.<xref:System.Windows.Controls.Validation.Errors%2A></span><span class="sxs-lookup"><span data-stu-id="2371f-230">If a rule invalidates a value, the binding engine creates a <xref:System.Windows.Controls.ValidationError> object and adds it to the <xref:System.Windows.Controls.Validation>.<xref:System.Windows.Controls.Validation.Errors%2A></span></span> <span data-ttu-id="2371f-231">Коллекция привязанного объекта.</span><span class="sxs-lookup"><span data-stu-id="2371f-231">collection of the bound object.</span></span> <span data-ttu-id="2371f-232">Если свойство не пусто <xref:System.Windows.Controls.Validation.HasError%2A?displayProperty=nameWithType> , для `true`присоединенного свойства объекта устанавливается значение. <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="2371f-232">When the <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=nameWithType> property is not empty, the <xref:System.Windows.Controls.Validation.HasError%2A?displayProperty=nameWithType> attached property of the object is set to `true`.</span></span> <span data-ttu-id="2371f-233">Если свойство объекта имеет значение `true`, подсистема привязки вызывает <xref:System.Windows.Controls.Validation.Error?displayProperty=nameWithType> событие, присоединенное к объекту. <xref:System.Windows.Data.Binding> <xref:System.Windows.Data.Binding.NotifyOnValidationError%2A></span><span class="sxs-lookup"><span data-stu-id="2371f-233">If the <xref:System.Windows.Data.Binding.NotifyOnValidationError%2A> property of the <xref:System.Windows.Data.Binding> is set to `true`, then the binding engine raises the <xref:System.Windows.Controls.Validation.Error?displayProperty=nameWithType> attached event on the object.</span></span>  
  
 <span data-ttu-id="2371f-234">Подробное обсуждение процесса проверки см. в разделе "Проверка данных" в статье [Общие сведения о привязке данных](~/docs/framework/wpf/data/data-binding-overview.md).</span><span class="sxs-lookup"><span data-stu-id="2371f-234">For a detailed discussion of the validation process, see the Data Validation section in the [Data Binding Overview](~/docs/framework/wpf/data/data-binding-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public System.Windows.PropertyPath Path { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.PropertyPath Path" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.Path" />
      <MemberSignature Language="VB.NET" Value="Public Property Path As PropertyPath" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::PropertyPath ^ Path { System::Windows::PropertyPath ^ get(); void set(System::Windows::PropertyPath ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Path : System.Windows.PropertyPath with get, set" Usage="System.Windows.Data.Binding.Path" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.PropertyPath</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2371f-235">Возвращает или задает путь к свойству источника привязки.</span><span class="sxs-lookup"><span data-stu-id="2371f-235">Gets or sets the path to the binding source property.</span></span></summary>
        <value><span data-ttu-id="2371f-236">Путь к источнику привязки.</span><span class="sxs-lookup"><span data-stu-id="2371f-236">The path to the binding source.</span></span> <span data-ttu-id="2371f-237">Значение по умолчанию — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2371f-237">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2371f-238">Каждая привязка обычно содержит следующие четыре компонента: целевой объект привязки, целевое свойство, источник привязки и путь к значению в источнике привязки для использования.</span><span class="sxs-lookup"><span data-stu-id="2371f-238">Each binding typically has these four components: a binding target object, a target property, a binding source, and a path to the value in the binding source to use.</span></span> <span data-ttu-id="2371f-239">Дополнительные сведения об этих концепциях привязки данных см. в разделе [Общие сведения о привязке данных](~/docs/framework/wpf/data/data-binding-overview.md).</span><span class="sxs-lookup"><span data-stu-id="2371f-239">For more information about these data binding concepts, see [Data Binding Overview](~/docs/framework/wpf/data/data-binding-overview.md).</span></span>  
  
 <span data-ttu-id="2371f-240"><xref:System.Windows.Data.Binding.Path%2A> Используйте свойство, чтобы указать исходное значение, к которому необходимо выполнить привязку:</span><span class="sxs-lookup"><span data-stu-id="2371f-240">Use the <xref:System.Windows.Data.Binding.Path%2A> property to specify the source value you want to bind to:</span></span>  
  
-   <span data-ttu-id="2371f-241">В самом простом случае <xref:System.Windows.Data.Binding.Path%2A> значением свойства является имя свойства исходного объекта, используемого для привязки, `Path=PropertyName`например.</span><span class="sxs-lookup"><span data-stu-id="2371f-241">In the simplest case, the <xref:System.Windows.Data.Binding.Path%2A> property value is the name of the property of the source object to use for the binding, such as `Path=PropertyName`.</span></span>  
  
-   <span data-ttu-id="2371f-242">Вложенные свойства свойства могут быть заданы с помощью синтаксиса, аналогичного использованному в C#.</span><span class="sxs-lookup"><span data-stu-id="2371f-242">Subproperties of a property can be specified by a syntax similar to that used in C#.</span></span> <span data-ttu-id="2371f-243">Например, предложение `Path=ShoppingCart.Order` задает привязку к подсвойству `Order` объекта или свойства `ShoppingCart`.</span><span class="sxs-lookup"><span data-stu-id="2371f-243">For instance, the clause `Path=ShoppingCart.Order` sets the binding to the subproperty `Order` of the object or property `ShoppingCart`.</span></span>  
  
-   <span data-ttu-id="2371f-244">Для привязки присоединенного свойства заключите его в скобки.</span><span class="sxs-lookup"><span data-stu-id="2371f-244">To bind to an attached property, place parentheses around the attached property.</span></span> <span data-ttu-id="2371f-245">Например, для привязки к присоединенному свойству <xref:System.Windows.Controls.DockPanel.Dock%2A?displayProperty=nameWithType>используется `Path=(DockPanel.Dock)`синтаксис.</span><span class="sxs-lookup"><span data-stu-id="2371f-245">For example, to bind to the attached property <xref:System.Windows.Controls.DockPanel.Dock%2A?displayProperty=nameWithType>, the syntax is `Path=(DockPanel.Dock)`.</span></span>  
  
-   <span data-ttu-id="2371f-246">Индексаторы свойства можно указать в квадратных скобках после имени свойства, для которого применяется индексатор.</span><span class="sxs-lookup"><span data-stu-id="2371f-246">Indexers of a property can be specified within square brackets following the property name where the indexer is applied.</span></span> <span data-ttu-id="2371f-247">Например, предложение `Path=ShoppingCart[0]` задает привязку к индексу, который соответствует способу, который внутренняя индексация свойства использует для обработки символьной строки "0".</span><span class="sxs-lookup"><span data-stu-id="2371f-247">For instance, the clause `Path=ShoppingCart[0]` sets the binding to the index that corresponds to how your property's internal indexing handles the literal string "0".</span></span> <span data-ttu-id="2371f-248">Также поддерживаются несколько индексаторов.</span><span class="sxs-lookup"><span data-stu-id="2371f-248">Multiple indexers are also supported.</span></span>  
  
-   <span data-ttu-id="2371f-249">Индексаторы и вложенные свойства могут сочетаться в предложении `Path`, например, `Path=ShoppingCart.ShippingInfo[MailingAddress,Street].`</span><span class="sxs-lookup"><span data-stu-id="2371f-249">Indexers and subproperties can be mixed in a `Path` clause; for example, `Path=ShoppingCart.ShippingInfo[MailingAddress,Street].`</span></span>  
  
-   <span data-ttu-id="2371f-250">Индексаторы могут иметь несколько внутренних параметров, разделенных запятыми (,).</span><span class="sxs-lookup"><span data-stu-id="2371f-250">Inside indexers you can have multiple indexer parameters separated by commas (,).</span></span> <span data-ttu-id="2371f-251">Тип каждого параметра указывается в скобках.</span><span class="sxs-lookup"><span data-stu-id="2371f-251">The type of each parameter can be specified with parentheses.</span></span> <span data-ttu-id="2371f-252">Например, вы можете задать предложение `Path="[(sys:Int32)42,(sys:Int32)24]"`, где `sys` сопоставляется с пространством имен `System`.</span><span class="sxs-lookup"><span data-stu-id="2371f-252">For example, you can have `Path="[(sys:Int32)42,(sys:Int32)24]"`, where `sys` is mapped to the `System` namespace.</span></span>  
  
-   <span data-ttu-id="2371f-253">Если источником является представлением коллекции, текущий элемент можно указать с косой чертой (/).</span><span class="sxs-lookup"><span data-stu-id="2371f-253">When the source is a collection view, the current item can be specified with a slash (/).</span></span> <span data-ttu-id="2371f-254">Например, предложение `Path=/` задает привязку к текущему элементу в представлении.</span><span class="sxs-lookup"><span data-stu-id="2371f-254">For example, the clause `Path=/` sets the binding to the current item in the view.</span></span> <span data-ttu-id="2371f-255">Если источником является коллекция, этот синтаксис задает текущий элемент представления коллекции по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="2371f-255">When the source is a collection, this syntax specifies the current item of the default collection view.</span></span>  
  
-   <span data-ttu-id="2371f-256">Имена свойств и косые черты можно объединять для обхода свойств, которые являются коллекциями.</span><span class="sxs-lookup"><span data-stu-id="2371f-256">Property names and slashes can be combined to traverse properties that are collections.</span></span> <span data-ttu-id="2371f-257">Например, предложение `Path=/Offices/ManagerName` задает текущий элемент коллекции источников, где свойство `Offices` также является коллекцией.</span><span class="sxs-lookup"><span data-stu-id="2371f-257">For example, `Path=/Offices/ManagerName` specifies the current item of the source collection, which contains an `Offices` property that is also a collection.</span></span> <span data-ttu-id="2371f-258">Текущий элемент этой коллекции — объект, содержащий свойство `ManagerName`.</span><span class="sxs-lookup"><span data-stu-id="2371f-258">Its current item is an object that contains a `ManagerName` property.</span></span>  
  
-   <span data-ttu-id="2371f-259">При необходимости для привязки к текущему источнику можно использовать путь в виде точки (.).</span><span class="sxs-lookup"><span data-stu-id="2371f-259">Optionally, a period (.) path can be used to bind to the current source.</span></span> <span data-ttu-id="2371f-260">Например, предложение `Text="{Binding}"` эквивалентно предложению `Text="{Binding Path=.}"`.</span><span class="sxs-lookup"><span data-stu-id="2371f-260">For example, `Text="{Binding}"` is equivalent to `Text="{Binding Path=.}"`.</span></span>  
  
 <span data-ttu-id="2371f-261">Сведения о синтаксисе пути см. в разделе [Общие сведения об объявлениях привязки](~/docs/framework/wpf/data/binding-declarations-overview.md) или [синтаксисе PropertyPath XAML](~/docs/framework/wpf/advanced/propertypath-xaml-syntax.md).</span><span class="sxs-lookup"><span data-stu-id="2371f-261">For information about path syntax, see [Binding Declarations Overview](~/docs/framework/wpf/data/binding-declarations-overview.md) or [PropertyPath XAML Syntax](~/docs/framework/wpf/advanced/propertypath-xaml-syntax.md).</span></span>  
  
 <span data-ttu-id="2371f-262">Сведения [!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)] о привязках см. <xref:System.Windows.Data.Binding.XPath%2A> в описании свойства.</span><span class="sxs-lookup"><span data-stu-id="2371f-262">For [!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)] bindings, see the <xref:System.Windows.Data.Binding.XPath%2A> property.</span></span>  
  
 <span data-ttu-id="2371f-263">Для привязки ко всему объекту не нужно указывать <xref:System.Windows.Data.Binding.Path%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="2371f-263">To bind to an entire object, you do not need to specify the <xref:System.Windows.Data.Binding.Path%2A> property.</span></span> <span data-ttu-id="2371f-264">Дополнительные сведения см. в разделе "указание пути к значению" раздела [Общие сведения о привязке данных](~/docs/framework/wpf/data/data-binding-overview.md).</span><span class="sxs-lookup"><span data-stu-id="2371f-264">For more information, see "Specifying the Path to the Value" in [Data Binding Overview](~/docs/framework/wpf/data/data-binding-overview.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2371f-265">В следующем примере показан триггер стиля, который создает объект <xref:System.Windows.Controls.ToolTip> , который сообщает сообщение об ошибке проверки.</span><span class="sxs-lookup"><span data-stu-id="2371f-265">The following example shows a style trigger that creates a <xref:System.Windows.Controls.ToolTip> that reports a validation error message.</span></span> <span data-ttu-id="2371f-266">Значение метода задания привязывается к содержимому ошибки текущего <xref:System.Windows.Controls.TextBox> <xref:System.Windows.Controls.TextBox> (с использованием стиля) с помощью <xref:System.Windows.Data.Binding.RelativeSource%2A> свойства.</span><span class="sxs-lookup"><span data-stu-id="2371f-266">The value of the setter binds to the error content of the current <xref:System.Windows.Controls.TextBox> (the <xref:System.Windows.Controls.TextBox> using the style) using the <xref:System.Windows.Data.Binding.RelativeSource%2A> property.</span></span> <span data-ttu-id="2371f-267">Дополнительные сведения об этом примере см. в [разделе как Реализуйте проверку](~/docs/framework/wpf/data/how-to-implement-binding-validation.md)привязки.</span><span class="sxs-lookup"><span data-stu-id="2371f-267">For more information on this example, see [How to: Implement Binding Validation](~/docs/framework/wpf/data/how-to-implement-binding-validation.md).</span></span>  
  
 [!code-xaml[BindValidation#5](~/samples/snippets/csharp/VS_Snippets_Wpf/BindValidation/CSharp/Window1.xaml#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RelativeSource">
      <MemberSignature Language="C#" Value="public System.Windows.Data.RelativeSource RelativeSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Data.RelativeSource RelativeSource" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.RelativeSource" />
      <MemberSignature Language="VB.NET" Value="Public Property RelativeSource As RelativeSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Data::RelativeSource ^ RelativeSource { System::Windows::Data::RelativeSource ^ get(); void set(System::Windows::Data::RelativeSource ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RelativeSource : System.Windows.Data.RelativeSource with get, set" Usage="System.Windows.Data.Binding.RelativeSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Data.RelativeSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2371f-268">Получает или задает источник привязки, указывая его расположение относительно положения целевого объекта привязки.</span><span class="sxs-lookup"><span data-stu-id="2371f-268">Gets or sets the binding source by specifying its location relative to the position of the binding target.</span></span></summary>
        <value><span data-ttu-id="2371f-269">Объект <see cref="T:System.Windows.Data.RelativeSource" />, указывающий относительное расположение источника привязки, который требуется использовать.</span><span class="sxs-lookup"><span data-stu-id="2371f-269">A <see cref="T:System.Windows.Data.RelativeSource" /> object specifying the relative location of the binding source to use.</span></span> <span data-ttu-id="2371f-270">Значение по умолчанию — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2371f-270">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2371f-271">Это свойство обычно используется для привязки одного свойства объекта к другому свойству того же объекта или для определения привязки в стиле или шаблоне.</span><span class="sxs-lookup"><span data-stu-id="2371f-271">This property is commonly used to bind one property of an object to another property of the same object, or to define a binding in a style or template.</span></span>  
  
 <span data-ttu-id="2371f-272">По умолчанию привязки наследуют контекст данных, заданный `DataContext` свойством, если он задан.</span><span class="sxs-lookup"><span data-stu-id="2371f-272">By default, bindings inherit the data context specified by the `DataContext` property, if one has been set.</span></span> <span data-ttu-id="2371f-273">Однако свойство является одним из способов явного задания источника <xref:System.Windows.Data.Binding> и переопределения унаследованного контекста данных. <xref:System.Windows.Data.Binding.RelativeSource%2A></span><span class="sxs-lookup"><span data-stu-id="2371f-273">However, the <xref:System.Windows.Data.Binding.RelativeSource%2A> property is one of the ways you can explicitly set the source of a <xref:System.Windows.Data.Binding> and override the inherited data context.</span></span> <span data-ttu-id="2371f-274">Дополнительные сведения см. в разделе [Практическое руководство. Укажите источник](~/docs/framework/wpf/data/how-to-specify-the-binding-source.md)привязки.</span><span class="sxs-lookup"><span data-stu-id="2371f-274">For more information, see [How to: Specify the Binding Source](~/docs/framework/wpf/data/how-to-specify-the-binding-source.md).</span></span>  
  
 <span data-ttu-id="2371f-275">Свойства <xref:System.Windows.Data.Binding.ElementName%2A?displayProperty=nameWithType> и<xref:System.Windows.Data.Binding.Source%2A?displayProperty=nameWithType> также позволяют явно задать источник привязки.</span><span class="sxs-lookup"><span data-stu-id="2371f-275">The <xref:System.Windows.Data.Binding.ElementName%2A?displayProperty=nameWithType> and <xref:System.Windows.Data.Binding.Source%2A?displayProperty=nameWithType> properties also enable you to set the source of the binding explicitly.</span></span> <span data-ttu-id="2371f-276">Однако для каждой привязки должны быть установлены только одно <xref:System.Windows.Data.Binding.ElementName%2A>из <xref:System.Windows.Data.Binding.Source%2A>трех свойств <xref:System.Windows.Data.Binding.RelativeSource%2A>,, и, или может возникнуть конфликт.</span><span class="sxs-lookup"><span data-stu-id="2371f-276">However, only one of the three properties, <xref:System.Windows.Data.Binding.ElementName%2A>, <xref:System.Windows.Data.Binding.Source%2A>, and <xref:System.Windows.Data.Binding.RelativeSource%2A>, should be set for each binding, or a conflict can occur.</span></span> <span data-ttu-id="2371f-277">Это свойство создает исключение при конфликте источника привязки.</span><span class="sxs-lookup"><span data-stu-id="2371f-277">This property throws an exception if there is a binding source conflict.</span></span>  
  
 <span data-ttu-id="2371f-278">Дополнительные [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] сведения см. в разделе [RelativeSource MarkupExtension](~/docs/framework/wpf/advanced/relativesource-markupextension.md).</span><span class="sxs-lookup"><span data-stu-id="2371f-278">For [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] information, see [RelativeSource MarkupExtension](~/docs/framework/wpf/advanced/relativesource-markupextension.md).</span></span>  
    
## Examples  
 <span data-ttu-id="2371f-279">В следующем примере показан триггер стиля, который создает объект <xref:System.Windows.Controls.ToolTip> , который сообщает сообщение об ошибке проверки.</span><span class="sxs-lookup"><span data-stu-id="2371f-279">The following example shows a style trigger that creates a <xref:System.Windows.Controls.ToolTip> that reports a validation error message.</span></span> <span data-ttu-id="2371f-280">Значение метода задания привязывается к содержимому ошибки текущего <xref:System.Windows.Controls.TextBox> <xref:System.Windows.Controls.TextBox> (с использованием стиля) с помощью <xref:System.Windows.Data.Binding.RelativeSource%2A> свойства.</span><span class="sxs-lookup"><span data-stu-id="2371f-280">The value of the setter binds to the error content of the current <xref:System.Windows.Controls.TextBox> (the <xref:System.Windows.Controls.TextBox> using the style) using the <xref:System.Windows.Data.Binding.RelativeSource%2A> property.</span></span> <span data-ttu-id="2371f-281">Дополнительные сведения об этом примере см. в [разделе как Реализуйте проверку](~/docs/framework/wpf/data/how-to-implement-binding-validation.md)привязки.</span><span class="sxs-lookup"><span data-stu-id="2371f-281">For more information on this example, see [How to: Implement Binding Validation](~/docs/framework/wpf/data/how-to-implement-binding-validation.md).</span></span>  
  
 [!code-xaml[BindValidation#5](~/samples/snippets/csharp/VS_Snippets_Wpf/BindValidation/CSharp/Window1.xaml#5)]  
  
 <span data-ttu-id="2371f-282">Полный пример см. в разделе [Пример проверки привязки](https://go.microsoft.com/fwlink/?LinkID=159972).</span><span class="sxs-lookup"><span data-stu-id="2371f-282">To see the full example, see [Binding Validation Sample](https://go.microsoft.com/fwlink/?LinkID=159972).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Data.Binding.Source" />
      </Docs>
    </Member>
    <Member MemberName="RemoveSourceUpdatedHandler">
      <MemberSignature Language="C#" Value="public static void RemoveSourceUpdatedHandler (System.Windows.DependencyObject element, EventHandler&lt;System.Windows.Data.DataTransferEventArgs&gt; handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveSourceUpdatedHandler(class System.Windows.DependencyObject element, class System.EventHandler`1&lt;class System.Windows.Data.DataTransferEventArgs&gt; handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.Binding.RemoveSourceUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveSourceUpdatedHandler (element As DependencyObject, handler As EventHandler(Of DataTransferEventArgs))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveSourceUpdatedHandler(System::Windows::DependencyObject ^ element, EventHandler&lt;System::Windows::Data::DataTransferEventArgs ^&gt; ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveSourceUpdatedHandler : System.Windows.DependencyObject * EventHandler&lt;System.Windows.Data.DataTransferEventArgs&gt; -&gt; unit" Usage="System.Windows.Data.Binding.RemoveSourceUpdatedHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.EventHandler&lt;System.Windows.Data.DataTransferEventArgs&gt;" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="2371f-283">Объект <see cref="T:System.Windows.UIElement" /> или <see cref="T:System.Windows.ContentElement" />, прослушивающий событие.</span><span class="sxs-lookup"><span data-stu-id="2371f-283">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to the event.</span></span></param>
        <param name="handler"><span data-ttu-id="2371f-284">Удаляемый обработчик.</span><span class="sxs-lookup"><span data-stu-id="2371f-284">The handler to remove.</span></span></param>
        <summary><span data-ttu-id="2371f-285">Удаляет обработчик для вложенного события <see cref="E:System.Windows.Data.Binding.SourceUpdated" />.</span><span class="sxs-lookup"><span data-stu-id="2371f-285">Removes a handler for the <see cref="E:System.Windows.Data.Binding.SourceUpdated" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2371f-286">Этот метод поддерживает использование присоединенных событий [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]в.</span><span class="sxs-lookup"><span data-stu-id="2371f-286">This method supports attached event usage in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveTargetUpdatedHandler">
      <MemberSignature Language="C#" Value="public static void RemoveTargetUpdatedHandler (System.Windows.DependencyObject element, EventHandler&lt;System.Windows.Data.DataTransferEventArgs&gt; handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveTargetUpdatedHandler(class System.Windows.DependencyObject element, class System.EventHandler`1&lt;class System.Windows.Data.DataTransferEventArgs&gt; handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.Binding.RemoveTargetUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveTargetUpdatedHandler (element As DependencyObject, handler As EventHandler(Of DataTransferEventArgs))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveTargetUpdatedHandler(System::Windows::DependencyObject ^ element, EventHandler&lt;System::Windows::Data::DataTransferEventArgs ^&gt; ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveTargetUpdatedHandler : System.Windows.DependencyObject * EventHandler&lt;System.Windows.Data.DataTransferEventArgs&gt; -&gt; unit" Usage="System.Windows.Data.Binding.RemoveTargetUpdatedHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.EventHandler&lt;System.Windows.Data.DataTransferEventArgs&gt;" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="2371f-287">Объект <see cref="T:System.Windows.UIElement" /> или <see cref="T:System.Windows.ContentElement" />, прослушивающий событие.</span><span class="sxs-lookup"><span data-stu-id="2371f-287">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to the event.</span></span></param>
        <param name="handler"><span data-ttu-id="2371f-288">Удаляемый обработчик.</span><span class="sxs-lookup"><span data-stu-id="2371f-288">The handler to remove.</span></span></param>
        <summary><span data-ttu-id="2371f-289">Удаляет обработчик для вложенного события <see cref="E:System.Windows.Data.Binding.TargetUpdated" />.</span><span class="sxs-lookup"><span data-stu-id="2371f-289">Removes a handler for the <see cref="E:System.Windows.Data.Binding.TargetUpdated" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2371f-290">Этот метод поддерживает использование присоединенных событий [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]в.</span><span class="sxs-lookup"><span data-stu-id="2371f-290">This method supports attached event usage in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetXmlNamespaceManager">
      <MemberSignature Language="C#" Value="public static void SetXmlNamespaceManager (System.Windows.DependencyObject target, System.Xml.XmlNamespaceManager value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetXmlNamespaceManager(class System.Windows.DependencyObject target, class System.Xml.XmlNamespaceManager value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.Binding.SetXmlNamespaceManager(System.Windows.DependencyObject,System.Xml.XmlNamespaceManager)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetXmlNamespaceManager (target As DependencyObject, value As XmlNamespaceManager)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetXmlNamespaceManager(System::Windows::DependencyObject ^ target, System::Xml::XmlNamespaceManager ^ value);" />
      <MemberSignature Language="F#" Value="static member SetXmlNamespaceManager : System.Windows.DependencyObject * System.Xml.XmlNamespaceManager -&gt; unit" Usage="System.Windows.Data.Binding.SetXmlNamespaceManager (target, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Xml.XmlNamespaceManager" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="2371f-291">Объект, из которого требуется получить сведения о пространстве имен.</span><span class="sxs-lookup"><span data-stu-id="2371f-291">The object from which to get namespace information.</span></span></param>
        <param name="value"><span data-ttu-id="2371f-292">Тип <see cref="T:System.Xml.XmlNamespaceManager" /> для оценки пространства имен в переданном элементе.</span><span class="sxs-lookup"><span data-stu-id="2371f-292">The <see cref="T:System.Xml.XmlNamespaceManager" /> to use for namespace evaluation in the passed element.</span></span></param>
        <summary><span data-ttu-id="2371f-293">Задает объект диспетчера пространства имен, используемый привязкой, которая подсоединена к предоставленному элементу.</span><span class="sxs-lookup"><span data-stu-id="2371f-293">Sets a namespace manager object used by the binding attached to the provided element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2371f-294">Этот метод поддерживает использование присоединенного свойства для <xref:System.Windows.Data.Binding.XmlNamespaceManager%2A> присоединенного свойства.</span><span class="sxs-lookup"><span data-stu-id="2371f-294">This method supports attached property usage for the <xref:System.Windows.Data.Binding.XmlNamespaceManager%2A> attached property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2371f-295">Свойство <paramref name="target" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2371f-295"><paramref name="target" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializePath">
      <MemberSignature Language="C#" Value="public bool ShouldSerializePath ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializePath() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.Binding.ShouldSerializePath" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializePath () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializePath();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializePath : unit -&gt; bool" Usage="binding.ShouldSerializePath " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2371f-296">Определяет необходимость сохранения значения свойства <see cref="P:System.Windows.Data.Binding.Path" />.</span><span class="sxs-lookup"><span data-stu-id="2371f-296">Indicates whether the <see cref="P:System.Windows.Data.Binding.Path" /> property should be persisted.</span></span></summary>
        <returns><span data-ttu-id="2371f-297">Значение <see langword="true" />, если значение свойства было изменено (относительно значения по умолчанию); в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2371f-297"><see langword="true" /> if the property value has changed from its default; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2371f-298">Этот `ShouldSerialize` метод предоставляется, <xref:System.Windows.Data.Binding.Path%2A> поскольку свойство не имеет простого значения по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="2371f-298">This `ShouldSerialize` method is provided because the <xref:System.Windows.Data.Binding.Path%2A> property does not have a simple default value.</span></span> <span data-ttu-id="2371f-299">Этот метод указывает, изменилось ли свойство со значения по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="2371f-299">This method indicates whether the property has changed from its default value.</span></span> <span data-ttu-id="2371f-300">Этот метод обычно вызывается при разработке конструктора для <xref:System.Windows.Data.Binding> или разработки собственного элемента управления, включающего. <xref:System.Windows.Data.Binding></span><span class="sxs-lookup"><span data-stu-id="2371f-300">You typically invoke this method if you are either developing a designer for the <xref:System.Windows.Data.Binding> or developing your own control incorporating the <xref:System.Windows.Data.Binding>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeSource">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeSource ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeSource() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.Binding.ShouldSerializeSource" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeSource () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeSource();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeSource : unit -&gt; bool" Usage="binding.ShouldSerializeSource " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2371f-301">Определяет необходимость сохранения значения свойства <see cref="P:System.Windows.Data.Binding.Source" />.</span><span class="sxs-lookup"><span data-stu-id="2371f-301">Indicates whether the <see cref="P:System.Windows.Data.Binding.Source" /> property should be persisted.</span></span></summary>
        <returns><span data-ttu-id="2371f-302">Значение <see langword="true" />, если значение свойства было изменено (относительно значения по умолчанию); в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2371f-302"><see langword="true" /> if the property value has changed from its default; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2371f-303">Этот `ShouldSerialize` метод предоставляется, <xref:System.Windows.Data.Binding.Source%2A> поскольку свойство не имеет простого значения по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="2371f-303">This `ShouldSerialize` method is provided because the <xref:System.Windows.Data.Binding.Source%2A> property does not have a simple default value.</span></span> <span data-ttu-id="2371f-304">Этот метод указывает, изменилось ли свойство со значения по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="2371f-304">This method indicates whether the property has changed from its default value.</span></span> <span data-ttu-id="2371f-305">Этот метод обычно вызывается при разработке конструктора для <xref:System.Windows.Data.Binding> или разработки собственного элемента управления, включающего. <xref:System.Windows.Data.Binding></span><span class="sxs-lookup"><span data-stu-id="2371f-305">You typically invoke this method if you are either developing a designer for the <xref:System.Windows.Data.Binding> or developing your own control incorporating the <xref:System.Windows.Data.Binding>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeValidationRules">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeValidationRules ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeValidationRules() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.Binding.ShouldSerializeValidationRules" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeValidationRules () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeValidationRules();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeValidationRules : unit -&gt; bool" Usage="binding.ShouldSerializeValidationRules " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2371f-306">Определяет необходимость сохранения значения свойства <see cref="P:System.Windows.Data.Binding.ValidationRules" />.</span><span class="sxs-lookup"><span data-stu-id="2371f-306">Indicates whether the <see cref="P:System.Windows.Data.Binding.ValidationRules" /> property should be persisted.</span></span></summary>
        <returns><span data-ttu-id="2371f-307">Значение <see langword="true" />, если значение свойства было изменено (относительно значения по умолчанию); в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2371f-307"><see langword="true" /> if the property value has changed from its default; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2371f-308">Этот `ShouldSerialize` метод предоставляется, <xref:System.Windows.Data.Binding.ValidationRules%2A> поскольку свойство не имеет простого значения по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="2371f-308">This `ShouldSerialize` method is provided because the <xref:System.Windows.Data.Binding.ValidationRules%2A> property does not have a simple default value.</span></span> <span data-ttu-id="2371f-309">Этот метод указывает, изменилось ли свойство со значения по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="2371f-309">This method indicates whether the property has changed from its default value.</span></span> <span data-ttu-id="2371f-310">Этот метод обычно вызывается при разработке конструктора для <xref:System.Windows.Data.Binding> или разработки собственного элемента управления, включающего. <xref:System.Windows.Data.Binding></span><span class="sxs-lookup"><span data-stu-id="2371f-310">You typically invoke this method if you are either developing a designer for the <xref:System.Windows.Data.Binding> or developing your own control incorporating the <xref:System.Windows.Data.Binding>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Source">
      <MemberSignature Language="C#" Value="public object Source { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Source" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.Source" />
      <MemberSignature Language="VB.NET" Value="Public Property Source As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Source { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Source : obj with get, set" Usage="System.Windows.Data.Binding.Source" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2371f-311">Возвращает или задает объект, используемый как источник привязки.</span><span class="sxs-lookup"><span data-stu-id="2371f-311">Gets or sets the object to use as the binding source.</span></span></summary>
        <value><span data-ttu-id="2371f-312">Объект, используемый как источник привязки.</span><span class="sxs-lookup"><span data-stu-id="2371f-312">The object to use as the binding source.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2371f-313">По умолчанию привязки наследуют контекст данных, заданный `DataContext` свойством, если он задан.</span><span class="sxs-lookup"><span data-stu-id="2371f-313">By default, bindings inherit the data context specified by the `DataContext` property, if one has been set.</span></span> <span data-ttu-id="2371f-314">Однако свойство является одним из способов явного задания источника <xref:System.Windows.Data.Binding> и переопределения унаследованного контекста данных. <xref:System.Windows.Data.Binding.Source%2A></span><span class="sxs-lookup"><span data-stu-id="2371f-314">However, the <xref:System.Windows.Data.Binding.Source%2A> property is one of the ways you can explicitly set the source of a <xref:System.Windows.Data.Binding> and override the inherited data context.</span></span> <span data-ttu-id="2371f-315">Если не требуется функциональность установки области, в которой несколько свойств наследуют один и тот же контекст данных, можно использовать <xref:System.Windows.Data.Binding.Source%2A> свойство вместо `DataContext` свойства.</span><span class="sxs-lookup"><span data-stu-id="2371f-315">If you do not need the functionality of establishing a scope in which several properties inherit the same data context, you can use the <xref:System.Windows.Data.Binding.Source%2A> property instead of the `DataContext` property.</span></span>  
  
 <span data-ttu-id="2371f-316">Свойства <xref:System.Windows.Data.Binding.ElementName%2A?displayProperty=nameWithType> и<xref:System.Windows.Data.Binding.RelativeSource%2A?displayProperty=nameWithType> также позволяют явно задать источник привязки.</span><span class="sxs-lookup"><span data-stu-id="2371f-316">The <xref:System.Windows.Data.Binding.ElementName%2A?displayProperty=nameWithType> and <xref:System.Windows.Data.Binding.RelativeSource%2A?displayProperty=nameWithType> properties also enable you to set the source of the binding explicitly.</span></span> <span data-ttu-id="2371f-317">Однако для каждой привязки должны быть установлены только одно <xref:System.Windows.Data.Binding.ElementName%2A>из <xref:System.Windows.Data.Binding.Source%2A>трех свойств <xref:System.Windows.Data.Binding.RelativeSource%2A>,, и, или может возникнуть конфликт.</span><span class="sxs-lookup"><span data-stu-id="2371f-317">However, only one of the three properties, <xref:System.Windows.Data.Binding.ElementName%2A>, <xref:System.Windows.Data.Binding.Source%2A>, and <xref:System.Windows.Data.Binding.RelativeSource%2A>, should be set for each binding, or a conflict can occur.</span></span> <span data-ttu-id="2371f-318">Это свойство создает исключение при конфликте источника привязки.</span><span class="sxs-lookup"><span data-stu-id="2371f-318">This property throws an exception if there is a binding source conflict.</span></span>  
  
 <span data-ttu-id="2371f-319">Чтобы очистить это свойство, задайте для <xref:System.Windows.DependencyProperty.UnsetValue?displayProperty=nameWithType>него значение.</span><span class="sxs-lookup"><span data-stu-id="2371f-319">To clear this property, set it to <xref:System.Windows.DependencyProperty.UnsetValue?displayProperty=nameWithType>.</span></span>  
  
<a name="xamlAttributeUsage_Source"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="2371f-320">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="2371f-320">XAML Attribute Usage</span></span>  
  
```  
<object Source="object"/>  
```  
  
<a name="xamlValues_Source"></a>   
## <a name="xaml-values"></a><span data-ttu-id="2371f-321">Значения XAML</span><span class="sxs-lookup"><span data-stu-id="2371f-321">XAML Values</span></span>  
 <span data-ttu-id="2371f-322">*object*</span><span class="sxs-lookup"><span data-stu-id="2371f-322">*object*</span></span>  
 <span data-ttu-id="2371f-323">Существующий объект.</span><span class="sxs-lookup"><span data-stu-id="2371f-323">An existing object.</span></span> <span data-ttu-id="2371f-324">Для ссылки на существующий объект используйте [расширение разметки StaticResource](~/docs/framework/wpf/advanced/staticresource-markup-extension.md)</span><span class="sxs-lookup"><span data-stu-id="2371f-324">To refer to an existing object, use the [StaticResource Markup Extension](~/docs/framework/wpf/advanced/staticresource-markup-extension.md)</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2371f-325">В следующем примере используется `Person` объект со строковым свойством с именем `PersonName` `SDKSample` , определенным в пространстве имен, как первая выделенная строка показана.</span><span class="sxs-lookup"><span data-stu-id="2371f-325">The following example uses a `Person` object with a string property named `PersonName` that is defined in the `SDKSample` namespace, as the first highlighted line shows.</span></span> <span data-ttu-id="2371f-326">`<src>` В выделенной строке, содержащей элемент, создается экземпляр `Person` объекта `Joe`со `PersonName` значением свойства.</span><span class="sxs-lookup"><span data-stu-id="2371f-326">In the highlighted line that contains the `<src>` element, it instantiates the `Person` object with a `PersonName` property value of `Joe`.</span></span> <span data-ttu-id="2371f-327">Это делается в `Resources` разделе и `x:Key`назначено.</span><span class="sxs-lookup"><span data-stu-id="2371f-327">This is done in the `Resources` section and assigned an `x:Key`.</span></span>  
  
 [!code-xaml[BindingInstantiation](~/samples/snippets/csharp/VS_Snippets_Wpf/SimpleBinding/CSharp/Page1.xaml?highlight=4,9,37)]  
  
 <span data-ttu-id="2371f-328">Выделенная строка, содержащая `<TextBlock>` элементы, показывает, как выполнить привязку `PersonName` к свойству.</span><span class="sxs-lookup"><span data-stu-id="2371f-328">The highlighted line that contains the `<TextBlock>` elements shows how to bind to the `PersonName` property.</span></span> <span data-ttu-id="2371f-329">В результате <xref:System.Windows.Controls.TextBlock> элемент управления отображается со значением Joe.</span><span class="sxs-lookup"><span data-stu-id="2371f-329">As a result, the <xref:System.Windows.Controls.TextBlock> control appears with the value "Joe".</span></span>  
  
 <span data-ttu-id="2371f-330"><xref:System.Windows.Data.Binding.Source%2A> В следующем примере <xref:System.Windows.Application.Current%2A?displayProperty=nameWithType>значения <xref:System.Windows.Data.Binding> объектов задаются для свойства: `static`</span><span class="sxs-lookup"><span data-stu-id="2371f-330">In the following example, the <xref:System.Windows.Data.Binding.Source%2A> values of the <xref:System.Windows.Data.Binding> objects are set to the `static` property <xref:System.Windows.Application.Current%2A?displayProperty=nameWithType>:</span></span>  
  
 [!code-xaml[DataBindingLab#ComboBoxMultiBinding](~/samples/snippets/csharp/VS_Snippets_Wpf/DataBindingLab/CSharp/AddProductWindow.xaml#comboboxmultibinding)]  
  
 <span data-ttu-id="2371f-331">Полный пример см. в разделе [Демонстрация привязки данных](https://go.microsoft.com/fwlink/?LinkID=163703).</span><span class="sxs-lookup"><span data-stu-id="2371f-331">For the full example, see [Data Binding Demo](https://go.microsoft.com/fwlink/?LinkID=163703).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceUpdated">
      <MemberSignature Language="C#" Value="see AddSourceUpdatedHandler, and RemoveSourceUpdatedHandler" />
      <MemberSignature Language="ILAsm" Value="see AddSourceUpdatedHandler, and RemoveSourceUpdatedHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Data.Binding.SourceUpdated" />
      <MemberSignature Language="VB.NET" Value="see AddSourceUpdatedHandler, and RemoveSourceUpdatedHandler" />
      <MemberSignature Language="F#" Value="see AddSourceUpdatedHandler, and RemoveSourceUpdatedHandler" Usage="see AddSourceUpdatedHandler, and RemoveSourceUpdatedHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2371f-332">Возникает, когда значение передается от целевого объекта привязки к источнику привязки, но только для привязок, у которых значение <see cref="P:System.Windows.Data.Binding.NotifyOnSourceUpdated" /> равно <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="2371f-332">Occurs when a value is transferred from the binding target to the binding source, but only for bindings with the <see cref="P:System.Windows.Data.Binding.NotifyOnSourceUpdated" /> value set to <see langword="true" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_SourceUpdatedEvent"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="2371f-333">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="2371f-333">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="2371f-334">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="2371f-334">Identifier field</span></span>|<xref:System.Windows.Data.Binding.SourceUpdatedEvent>|  
|<span data-ttu-id="2371f-335">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="2371f-335">Routing strategy</span></span>|<span data-ttu-id="2371f-336">Восходящей маршрутизации</span><span class="sxs-lookup"><span data-stu-id="2371f-336">Bubbling</span></span>|  
|<span data-ttu-id="2371f-337">делегат</span><span class="sxs-lookup"><span data-stu-id="2371f-337">Delegate</span></span>|<span data-ttu-id="2371f-338"><xref:System.EventHandler%601>, ограничено <xref:System.Windows.Data.DataTransferEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="2371f-338"><xref:System.EventHandler%601>, constrained to <xref:System.Windows.Data.DataTransferEventArgs>.</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Data.BindingExpression.UpdateSource" />
        <altmember cref="E:System.Windows.Data.Binding.TargetUpdated" />
      </Docs>
    </Member>
    <Member MemberName="SourceUpdatedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent SourceUpdatedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent SourceUpdatedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Data.Binding.SourceUpdatedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SourceUpdatedEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ SourceUpdatedEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable SourceUpdatedEvent : System.Windows.RoutedEvent" Usage="System.Windows.Data.Binding.SourceUpdatedEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2371f-339">Идентифицирует присоединенное событие <see cref="E:System.Windows.Data.Binding.SourceUpdated" />.</span><span class="sxs-lookup"><span data-stu-id="2371f-339">Identifies the <see cref="E:System.Windows.Data.Binding.SourceUpdated" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetUpdated">
      <MemberSignature Language="C#" Value="see AddTargetUpdatedHandler, and RemoveTargetUpdatedHandler" />
      <MemberSignature Language="ILAsm" Value="see AddTargetUpdatedHandler, and RemoveTargetUpdatedHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Data.Binding.TargetUpdated" />
      <MemberSignature Language="VB.NET" Value="see AddTargetUpdatedHandler, and RemoveTargetUpdatedHandler" />
      <MemberSignature Language="F#" Value="see AddTargetUpdatedHandler, and RemoveTargetUpdatedHandler" Usage="see AddTargetUpdatedHandler, and RemoveTargetUpdatedHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2371f-340">Возникает, когда значение передается от источника привязки к целевому объекту привязки, но только для привязок, у которых значение <see cref="P:System.Windows.Data.Binding.NotifyOnTargetUpdated" /> равно <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="2371f-340">Occurs when a value is transferred from the binding source to the binding target, but only for bindings with the <see cref="P:System.Windows.Data.Binding.NotifyOnTargetUpdated" /> value set to <see langword="true" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_TargetUpdatedEvent"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="2371f-341">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="2371f-341">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="2371f-342">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="2371f-342">Identifier field</span></span>|<xref:System.Windows.Data.Binding.TargetUpdatedEvent>|  
|<span data-ttu-id="2371f-343">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="2371f-343">Routing strategy</span></span>|<span data-ttu-id="2371f-344">Восходящей маршрутизации</span><span class="sxs-lookup"><span data-stu-id="2371f-344">Bubbling</span></span>|  
|<span data-ttu-id="2371f-345">делегат</span><span class="sxs-lookup"><span data-stu-id="2371f-345">Delegate</span></span>|<span data-ttu-id="2371f-346"><xref:System.EventHandler%601>, ограничено <xref:System.Windows.Data.DataTransferEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="2371f-346"><xref:System.EventHandler%601>, constrained to <xref:System.Windows.Data.DataTransferEventArgs>.</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Data.BindingExpression.UpdateTarget" />
        <altmember cref="E:System.Windows.Data.Binding.SourceUpdated" />
      </Docs>
    </Member>
    <Member MemberName="TargetUpdatedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent TargetUpdatedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent TargetUpdatedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Data.Binding.TargetUpdatedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TargetUpdatedEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ TargetUpdatedEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable TargetUpdatedEvent : System.Windows.RoutedEvent" Usage="System.Windows.Data.Binding.TargetUpdatedEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2371f-347">Идентифицирует присоединенное событие <see cref="E:System.Windows.Data.Binding.TargetUpdated" />.</span><span class="sxs-lookup"><span data-stu-id="2371f-347">Identifies the <see cref="E:System.Windows.Data.Binding.TargetUpdated" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateSourceExceptionFilter">
      <MemberSignature Language="C#" Value="public System.Windows.Data.UpdateSourceExceptionFilterCallback UpdateSourceExceptionFilter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Data.UpdateSourceExceptionFilterCallback UpdateSourceExceptionFilter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.UpdateSourceExceptionFilter" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateSourceExceptionFilter As UpdateSourceExceptionFilterCallback" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Data::UpdateSourceExceptionFilterCallback ^ UpdateSourceExceptionFilter { System::Windows::Data::UpdateSourceExceptionFilterCallback ^ get(); void set(System::Windows::Data::UpdateSourceExceptionFilterCallback ^ value); };" />
      <MemberSignature Language="F#" Value="member this.UpdateSourceExceptionFilter : System.Windows.Data.UpdateSourceExceptionFilterCallback with get, set" Usage="System.Windows.Data.Binding.UpdateSourceExceptionFilter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Data.UpdateSourceExceptionFilterCallback</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2371f-348">Получает или задает обработчик, который можно использовать для предоставления пользовательской логики для обработки исключений, которые механизм привязки находит при обновлении значения источника привязки.</span><span class="sxs-lookup"><span data-stu-id="2371f-348">Gets or sets a handler you can use to provide custom logic for handling exceptions that the binding engine encounters during the update of the binding source value.</span></span> <span data-ttu-id="2371f-349">Это применимо, только если имеется правило <see cref="T:System.Windows.Controls.ExceptionValidationRule" />, связанное с привязкой.</span><span class="sxs-lookup"><span data-stu-id="2371f-349">This is only applicable if you have associated an <see cref="T:System.Windows.Controls.ExceptionValidationRule" /> with your binding.</span></span></summary>
        <value><span data-ttu-id="2371f-350">Метод, предоставляющий пользовательскую логику для обработки исключений, которые механизм привязки находит при обновлении значения источника привязки.</span><span class="sxs-lookup"><span data-stu-id="2371f-350">A method that provides custom logic for handling exceptions that the binding engine encounters during the update of the binding source value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2371f-351"><xref:System.Windows.Controls.ExceptionValidationRule> — Это встроенное правило проверки, которое проверяет наличие исключений, возникающих во время обновления свойства источника привязки.</span><span class="sxs-lookup"><span data-stu-id="2371f-351">The <xref:System.Windows.Controls.ExceptionValidationRule> is a built-in validation rule that checks for exceptions thrown during the update of the binding source property.</span></span> <span data-ttu-id="2371f-352">Если <xref:System.Windows.Controls.ExceptionValidationRule> <xref:System.Windows.Data.Binding> объект связан с объектом, можно использовать это свойство, чтобы задать для обработчика настраиваемую логику для обработки этих исключений.</span><span class="sxs-lookup"><span data-stu-id="2371f-352">If you have associated the <xref:System.Windows.Controls.ExceptionValidationRule> with your <xref:System.Windows.Data.Binding> object, you can use this property to set a handler to provide custom logic for handling these exceptions.</span></span> <span data-ttu-id="2371f-353">Если параметр не указан <xref:System.Windows.Data.Binding>в, подсистема привязки создает <xref:System.Windows.Controls.ValidationError> исключение и добавляет его в <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=nameWithType> коллекцию связанного элемента. <xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A></span><span class="sxs-lookup"><span data-stu-id="2371f-353">If an <xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A> is not specified on the <xref:System.Windows.Data.Binding>, the binding engine creates a <xref:System.Windows.Controls.ValidationError> with the exception and adds it to the <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=nameWithType> collection of the bound element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2371f-354">Свойство следующего <xref:System.Windows.Controls.TextBox> объекта привязано к данным свойства `Age3` источника, которое имеет тип `int`. <xref:System.Windows.Controls.TextBox.Text%2A></span><span class="sxs-lookup"><span data-stu-id="2371f-354">The <xref:System.Windows.Controls.TextBox.Text%2A> property of the following <xref:System.Windows.Controls.TextBox> is data-bound to a source property `Age3` that is of type `int`.</span></span> <span data-ttu-id="2371f-355"><xref:System.Windows.Controls.ExceptionValidationRule> Проверяет наличие исключений, возникающих во время обновления свойства источника (например, когда пользователь вводит значение, которое не может быть преобразовано в целое число).</span><span class="sxs-lookup"><span data-stu-id="2371f-355">The <xref:System.Windows.Controls.ExceptionValidationRule> checks for exceptions that are thrown during the update of the source property (such as when the user enters a value that cannot be converted to an integer).</span></span>  
  
 [!code-xaml[BindValidation#tbExceptionFilter](~/samples/snippets/csharp/VS_Snippets_Wpf/BindValidation/CSharp/Window1.xaml#tbexceptionfilter)]  
  
 <span data-ttu-id="2371f-356">Для обработки этих исключений можно указать пользовательскую логику.</span><span class="sxs-lookup"><span data-stu-id="2371f-356">You can provide custom logic to handle those exceptions.</span></span> <span data-ttu-id="2371f-357">В следующем примере показано, как использовать <xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A> свойство для <xref:System.Windows.Data.UpdateSourceExceptionFilterCallback>задания.</span><span class="sxs-lookup"><span data-stu-id="2371f-357">The following example shows how to use the <xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A> property to set an <xref:System.Windows.Data.UpdateSourceExceptionFilterCallback>.</span></span>  
  
 [!code-csharp[BindValidation#filtercallback](~/samples/snippets/csharp/VS_Snippets_Wpf/BindValidation/CSharp/Window1.xaml.cs#filtercallback)]  
  
 <span data-ttu-id="2371f-358">Ниже приведен пример реализации <xref:System.Windows.Data.UpdateSourceExceptionFilterCallback>.</span><span class="sxs-lookup"><span data-stu-id="2371f-358">The following is an example implementation of an <xref:System.Windows.Data.UpdateSourceExceptionFilterCallback>.</span></span>  
  
 [!code-csharp[BindValidation#Handler](~/samples/snippets/csharp/VS_Snippets_Wpf/BindValidation/CSharp/Window1.xaml.cs#handler)]  
  
 <span data-ttu-id="2371f-359">Может также возвращать `null`, само <xref:System.Windows.Controls.ValidationError>исключение или. <xref:System.Windows.Data.UpdateSourceExceptionFilterCallback></span><span class="sxs-lookup"><span data-stu-id="2371f-359">The <xref:System.Windows.Data.UpdateSourceExceptionFilterCallback> can also return `null`, the exception itself, or a <xref:System.Windows.Controls.ValidationError>.</span></span> <span data-ttu-id="2371f-360">Для получения дополнительной информации см. <xref:System.Windows.Data.UpdateSourceExceptionFilterCallback>.</span><span class="sxs-lookup"><span data-stu-id="2371f-360">For more information, see <xref:System.Windows.Data.UpdateSourceExceptionFilterCallback>.</span></span>  
  
 <span data-ttu-id="2371f-361">Полный пример см. в разделе [Пример проверки привязки](https://go.microsoft.com/fwlink/?LinkID=159972).</span><span class="sxs-lookup"><span data-stu-id="2371f-361">For the complete sample, see [Binding Validation Sample](https://go.microsoft.com/fwlink/?LinkID=159972).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateSourceTrigger">
      <MemberSignature Language="C#" Value="public System.Windows.Data.UpdateSourceTrigger UpdateSourceTrigger { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Data.UpdateSourceTrigger UpdateSourceTrigger" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.UpdateSourceTrigger" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateSourceTrigger As UpdateSourceTrigger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Data::UpdateSourceTrigger UpdateSourceTrigger { System::Windows::Data::UpdateSourceTrigger get(); void set(System::Windows::Data::UpdateSourceTrigger value); };" />
      <MemberSignature Language="F#" Value="member this.UpdateSourceTrigger : System.Windows.Data.UpdateSourceTrigger with get, set" Usage="System.Windows.Data.Binding.UpdateSourceTrigger" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Data.UpdateSourceTrigger</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2371f-362">Получает или задает значение, определяющее расписание обновлений источника привязки.</span><span class="sxs-lookup"><span data-stu-id="2371f-362">Gets or sets a value that determines the timing of binding source updates.</span></span></summary>
        <value><span data-ttu-id="2371f-363">Одно из значений перечисления <see cref="T:System.Windows.Data.UpdateSourceTrigger" />.</span><span class="sxs-lookup"><span data-stu-id="2371f-363">One of the <see cref="T:System.Windows.Data.UpdateSourceTrigger" /> values.</span></span> <span data-ttu-id="2371f-364">Значение по умолчанию — <see cref="F:System.Windows.Data.UpdateSourceTrigger.Default" />, которое возвращает значение по умолчанию <see cref="T:System.Windows.Data.UpdateSourceTrigger" /> целевого свойства зависимостей.</span><span class="sxs-lookup"><span data-stu-id="2371f-364">The default is <see cref="F:System.Windows.Data.UpdateSourceTrigger.Default" />, which returns the default <see cref="T:System.Windows.Data.UpdateSourceTrigger" /> value of the target dependency property.</span></span> <span data-ttu-id="2371f-365">Однако значение по умолчанию для большинства свойств зависимостей — <see cref="F:System.Windows.Data.UpdateSourceTrigger.PropertyChanged" />, а свойство <see cref="P:System.Windows.Controls.TextBox.Text" /> имеет значение по умолчанию <see cref="F:System.Windows.Data.UpdateSourceTrigger.LostFocus" />.</span><span class="sxs-lookup"><span data-stu-id="2371f-365">However, the default value for most dependency properties is <see cref="F:System.Windows.Data.UpdateSourceTrigger.PropertyChanged" />, while the <see cref="P:System.Windows.Controls.TextBox.Text" /> property has a default value of <see cref="F:System.Windows.Data.UpdateSourceTrigger.LostFocus" />.</span></span>  
  
<span data-ttu-id="2371f-366">Программный способ определения значения по умолчанию <see cref="P:System.Windows.Data.Binding.UpdateSourceTrigger" /> свойства зависимостей заключается в получении метаданных свойства с помощью <see cref="M:System.Windows.DependencyProperty.GetMetadata(System.Type)" /> и последующей проверке значения свойства <see cref="P:System.Windows.FrameworkPropertyMetadata.DefaultUpdateSourceTrigger" />.</span><span class="sxs-lookup"><span data-stu-id="2371f-366">A programmatic way to determine the default <see cref="P:System.Windows.Data.Binding.UpdateSourceTrigger" /> value of a dependency property is to get the property metadata of the property using <see cref="M:System.Windows.DependencyProperty.GetMetadata(System.Type)" /> and then check the value of the <see cref="P:System.Windows.FrameworkPropertyMetadata.DefaultUpdateSourceTrigger" /> property.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2371f-367">Привязки, которые <xref:System.Windows.Data.BindingMode.TwoWay> или <xref:System.Windows.Data.BindingMode.OneWayToSource> ожидают изменения в целевом свойстве, и распространяют их обратно в источник.</span><span class="sxs-lookup"><span data-stu-id="2371f-367">Bindings that are <xref:System.Windows.Data.BindingMode.TwoWay> or <xref:System.Windows.Data.BindingMode.OneWayToSource> listen for changes in the target property and propagate them back to the source.</span></span> <span data-ttu-id="2371f-368">Это называется обновлением источника.</span><span class="sxs-lookup"><span data-stu-id="2371f-368">This is known as updating the source.</span></span> <span data-ttu-id="2371f-369">Обычно эти обновления происходят при изменении целевого свойства.</span><span class="sxs-lookup"><span data-stu-id="2371f-369">Usually, these updates happen whenever the target property changes.</span></span> <span data-ttu-id="2371f-370">Это подходит для флажков и других простых элементов управления, но обычно он не подходит для текстовых полей.</span><span class="sxs-lookup"><span data-stu-id="2371f-370">This is fine for check boxes and other simple controls, but it is usually not appropriate for text fields.</span></span> <span data-ttu-id="2371f-371">Обновление после каждого нажатия клавиши может снизить производительность, и оно запрещает пользователю обычные возможности по возврату и исправлению ошибок ввода перед фиксацией нового значения.</span><span class="sxs-lookup"><span data-stu-id="2371f-371">Updating after every keystroke can diminish performance and it denies the user the usual opportunity to backspace and fix typing errors before committing to the new value.</span></span> <span data-ttu-id="2371f-372"><xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> Поэтому значение <xref:System.Windows.Controls.TextBox.Text%2A> свойства по умолчанию — <xref:System.Windows.Data.UpdateSourceTrigger.LostFocus> , а не <xref:System.Windows.Data.UpdateSourceTrigger.PropertyChanged>.</span><span class="sxs-lookup"><span data-stu-id="2371f-372">Therefore, the default <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> value of the <xref:System.Windows.Controls.TextBox.Text%2A> property is <xref:System.Windows.Data.UpdateSourceTrigger.LostFocus> and not <xref:System.Windows.Data.UpdateSourceTrigger.PropertyChanged>.</span></span>  
  
 <span data-ttu-id="2371f-373">Если задано <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> <xref:System.Windows.Data.UpdateSourceTrigger.Explicit>значение <xref:System.Windows.Data.BindingExpression.UpdateSource%2A> , необходимо вызвать метод, иначе изменения не будут переданы обратно в источник.</span><span class="sxs-lookup"><span data-stu-id="2371f-373">If you set the <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> value to <xref:System.Windows.Data.UpdateSourceTrigger.Explicit>, you must call the <xref:System.Windows.Data.BindingExpression.UpdateSource%2A> method or the changes will not propagate back to the source.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Data.Binding.Mode" />
      </Docs>
    </Member>
    <Member MemberName="ValidatesOnDataErrors">
      <MemberSignature Language="C#" Value="public bool ValidatesOnDataErrors { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ValidatesOnDataErrors" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.ValidatesOnDataErrors" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidatesOnDataErrors As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ValidatesOnDataErrors { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ValidatesOnDataErrors : bool with get, set" Usage="System.Windows.Data.Binding.ValidatesOnDataErrors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2371f-374">Получает или задает значение, указывающее, включать ли объект <see cref="T:System.Windows.Controls.DataErrorValidationRule" />.</span><span class="sxs-lookup"><span data-stu-id="2371f-374">Gets or sets a value that indicates whether to include the <see cref="T:System.Windows.Controls.DataErrorValidationRule" />.</span></span></summary>
        <value><span data-ttu-id="2371f-375"><see langword="true" /> для включения <see cref="T:System.Windows.Controls.DataErrorValidationRule" />; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2371f-375"><see langword="true" /> to include the <see cref="T:System.Windows.Controls.DataErrorValidationRule" />; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2371f-376">Задание этого свойства предоставляет альтернативу явному использованию <xref:System.Windows.Controls.DataErrorValidationRule> элемента.</span><span class="sxs-lookup"><span data-stu-id="2371f-376">Setting this property provides an alternative to using the <xref:System.Windows.Controls.DataErrorValidationRule> element explicitly.</span></span> <span data-ttu-id="2371f-377">— Это встроенное правило проверки, которое проверяет наличие ошибок, вызванных <xref:System.ComponentModel.IDataErrorInfo> реализацией исходного объекта. <xref:System.Windows.Controls.DataErrorValidationRule></span><span class="sxs-lookup"><span data-stu-id="2371f-377">The <xref:System.Windows.Controls.DataErrorValidationRule> is a built-in validation rule that checks for errors that are raised by the <xref:System.ComponentModel.IDataErrorInfo> implementation of the source object.</span></span> <span data-ttu-id="2371f-378">При возникновении ошибки обработчик привязки создает объект <xref:System.Windows.Controls.ValidationError> с ошибкой и добавляет его <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=nameWithType> в коллекцию связанного элемента.</span><span class="sxs-lookup"><span data-stu-id="2371f-378">If an error is raised, the binding engine creates a <xref:System.Windows.Controls.ValidationError> with the error and adds it to the <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=nameWithType> collection of the bound element.</span></span> <span data-ttu-id="2371f-379">Отсутствие ошибки очищает этот отзыв, если только другое правило не вызывает проверку.</span><span class="sxs-lookup"><span data-stu-id="2371f-379">The lack of an error clears this validation feedback, unless another rule raises a validation issue.</span></span>  
  
 <span data-ttu-id="2371f-380"><xref:System.Windows.Data.Binding.ValidatesOnDataErrors%2A>вводится в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="2371f-380"><xref:System.Windows.Data.Binding.ValidatesOnDataErrors%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="2371f-381">Дополнительные сведения см. в разделе [Платформа.NET Framework: версии и зависимости](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="2371f-381">For more information, see [.NET Framework Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2371f-382">В следующих примерах <xref:System.ComponentModel.IDataErrorInfo> используется <xref:System.Windows.Data.Binding.ValidatesOnDataErrors%2A> и для <xref:System.Windows.Controls.TextBox>проверки вводимых пользователем данных в.</span><span class="sxs-lookup"><span data-stu-id="2371f-382">The following examples uses <xref:System.ComponentModel.IDataErrorInfo> and <xref:System.Windows.Data.Binding.ValidatesOnDataErrors%2A> to validate user input in a <xref:System.Windows.Controls.TextBox>.</span></span> <span data-ttu-id="2371f-383">В первом примере создается тип данных, который реализуется <xref:System.ComponentModel.IDataErrorInfo> для отчетов об ошибках проверки.</span><span class="sxs-lookup"><span data-stu-id="2371f-383">The first example creates a data type that implements <xref:System.ComponentModel.IDataErrorInfo> to report validation errors.</span></span>  
  
 [!code-csharp[BindingValidationAttributesSnippets#IDataErrorInfoData](~/samples/snippets/csharp/VS_Snippets_Wpf/bindingvalidationattributessnippets/csharp/data.cs#idataerrorinfodata)]
 [!code-vb[BindingValidationAttributesSnippets#IDataErrorInfoData](~/samples/snippets/visualbasic/VS_Snippets_Wpf/bindingvalidationattributessnippets/visualbasic/window1.xaml.vb#idataerrorinfodata)]  
  
 <span data-ttu-id="2371f-384">В следующем `Age` примере свойство привязывается <xref:System.Windows.Data.Binding.ValidatesOnDataErrors%2A> <xref:System.Windows.Controls.TextBox> к свойству и устанавливается `true` в значение <xref:System.Windows.Data.Binding>в параметре.</span><span class="sxs-lookup"><span data-stu-id="2371f-384">The following example binds the `Age` property to the <xref:System.Windows.Controls.TextBox> and sets <xref:System.Windows.Data.Binding.ValidatesOnDataErrors%2A> to `true` on the <xref:System.Windows.Data.Binding>.</span></span>  <span data-ttu-id="2371f-385">Когда пользователь вводит недопустимое значение, в окне <xref:System.Windows.Controls.TextBox> появляется красная граница, а в <xref:System.Windows.Controls.ToolTip> сообщении отображается сообщение об ошибке.</span><span class="sxs-lookup"><span data-stu-id="2371f-385">When the user enters an invalid value, a red border appears in the <xref:System.Windows.Controls.TextBox> and the <xref:System.Windows.Controls.ToolTip> reports the error message.</span></span>  
  
 [!code-xaml[BindingValidationAttributesSnippets#IDataErrorInfoXaml](~/samples/snippets/csharp/VS_Snippets_Wpf/bindingvalidationattributessnippets/csharp/window1.xaml#idataerrorinfoxaml)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Data.Binding.ValidatesOnExceptions" />
      </Docs>
    </Member>
    <Member MemberName="ValidatesOnExceptions">
      <MemberSignature Language="C#" Value="public bool ValidatesOnExceptions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ValidatesOnExceptions" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.ValidatesOnExceptions" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidatesOnExceptions As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ValidatesOnExceptions { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ValidatesOnExceptions : bool with get, set" Usage="System.Windows.Data.Binding.ValidatesOnExceptions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2371f-386">Получает или задает значение, указывающее, включать ли объект <see cref="T:System.Windows.Controls.ExceptionValidationRule" />.</span><span class="sxs-lookup"><span data-stu-id="2371f-386">Gets or sets a value that indicates whether to include the <see cref="T:System.Windows.Controls.ExceptionValidationRule" />.</span></span></summary>
        <value><span data-ttu-id="2371f-387"><see langword="true" /> для включения <see cref="T:System.Windows.Controls.ExceptionValidationRule" />; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2371f-387"><see langword="true" /> to include the <see cref="T:System.Windows.Controls.ExceptionValidationRule" />; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2371f-388">Задание этого свойства предоставляет альтернативу явному использованию <xref:System.Windows.Controls.ExceptionValidationRule> элемента.</span><span class="sxs-lookup"><span data-stu-id="2371f-388">Setting this property provides an alternative to using the <xref:System.Windows.Controls.ExceptionValidationRule> element explicitly.</span></span> <span data-ttu-id="2371f-389"><xref:System.Windows.Controls.ExceptionValidationRule> — Это встроенное правило проверки, которое проверяет наличие исключений, возникающих во время обновления свойства Source.</span><span class="sxs-lookup"><span data-stu-id="2371f-389">The <xref:System.Windows.Controls.ExceptionValidationRule> is a built-in validation rule that checks for exceptions that are thrown during the update of the source property.</span></span> <span data-ttu-id="2371f-390">При возникновении исключения подсистема привязки создает <xref:System.Windows.Controls.ValidationError> исключение и добавляет его <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=nameWithType> в коллекцию связанного элемента.</span><span class="sxs-lookup"><span data-stu-id="2371f-390">If an exception is thrown, the binding engine creates a <xref:System.Windows.Controls.ValidationError> with the exception and adds it to the <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=nameWithType> collection of the bound element.</span></span> <span data-ttu-id="2371f-391">Отсутствие ошибки очищает этот отзыв, если только другое правило не вызывает проверку.</span><span class="sxs-lookup"><span data-stu-id="2371f-391">The lack of an error clears this validation feedback, unless another rule raises a validation issue.</span></span>  
  
 <span data-ttu-id="2371f-392"><xref:System.Windows.Data.Binding.ValidatesOnExceptions%2A>вводится в .NET Framework версии 3,5.</span><span class="sxs-lookup"><span data-stu-id="2371f-392"><xref:System.Windows.Data.Binding.ValidatesOnExceptions%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="2371f-393">Дополнительные сведения см. в разделе [Платформа.NET Framework: версии и зависимости](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="2371f-393">For more information, see [.NET Framework Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2371f-394">В следующих примерах <xref:System.Windows.Data.Binding.ValidatesOnExceptions%2A> используется для проверки вводимых пользователем данных <xref:System.Windows.Controls.TextBox>в.</span><span class="sxs-lookup"><span data-stu-id="2371f-394">The following examples use <xref:System.Windows.Data.Binding.ValidatesOnExceptions%2A> to validate user input in a <xref:System.Windows.Controls.TextBox>.</span></span> <span data-ttu-id="2371f-395">В первом примере создается тип данных, который создает исключение, если `Age` свойству задано недопустимое свойство.</span><span class="sxs-lookup"><span data-stu-id="2371f-395">The first example creates a data type that throws an exception when the `Age` property is set to an invalid property.</span></span>  
  
 [!code-csharp[BindingValidationAttributesSnippets#ThrowExceptionData](~/samples/snippets/csharp/VS_Snippets_Wpf/bindingvalidationattributessnippets/csharp/data.cs#throwexceptiondata)]
 [!code-vb[BindingValidationAttributesSnippets#ThrowExceptionData](~/samples/snippets/visualbasic/VS_Snippets_Wpf/bindingvalidationattributessnippets/visualbasic/window1.xaml.vb#throwexceptiondata)]  
  
 <span data-ttu-id="2371f-396">В следующем `Age` примере свойство привязывается <xref:System.Windows.Data.Binding.ValidatesOnExceptions%2A> <xref:System.Windows.Controls.TextBox> к свойству и устанавливается `true` в значение <xref:System.Windows.Data.Binding>в параметре.</span><span class="sxs-lookup"><span data-stu-id="2371f-396">The following example binds the `Age` property to the <xref:System.Windows.Controls.TextBox> and sets <xref:System.Windows.Data.Binding.ValidatesOnExceptions%2A> to `true` on the <xref:System.Windows.Data.Binding>.</span></span> <span data-ttu-id="2371f-397">Когда пользователь вводит недопустимое значение, в окне <xref:System.Windows.Controls.TextBox> появляется красная граница, а в <xref:System.Windows.Controls.ToolTip> сообщении отображается сообщение об ошибке.</span><span class="sxs-lookup"><span data-stu-id="2371f-397">When the user enters an invalid value, a red border appears in the <xref:System.Windows.Controls.TextBox> and the <xref:System.Windows.Controls.ToolTip> reports the error message.</span></span>  
  
 [!code-xaml[BindingValidationAttributesSnippets#ThrowExceptionXaml](~/samples/snippets/csharp/VS_Snippets_Wpf/bindingvalidationattributessnippets/csharp/window1.xaml#throwexceptionxaml)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Data.Binding.ValidatesOnDataErrors" />
      </Docs>
    </Member>
    <Member MemberName="ValidatesOnNotifyDataErrors">
      <MemberSignature Language="C#" Value="public bool ValidatesOnNotifyDataErrors { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ValidatesOnNotifyDataErrors" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.ValidatesOnNotifyDataErrors" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidatesOnNotifyDataErrors As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ValidatesOnNotifyDataErrors { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ValidatesOnNotifyDataErrors : bool with get, set" Usage="System.Windows.Data.Binding.ValidatesOnNotifyDataErrors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2371f-398">Получает или задает значение, указывающее, включать ли объект <see cref="T:System.Windows.Controls.NotifyDataErrorValidationRule" />.</span><span class="sxs-lookup"><span data-stu-id="2371f-398">Gets or sets a value that indicates whether to include the <see cref="T:System.Windows.Controls.NotifyDataErrorValidationRule" />.</span></span></summary>
        <value><span data-ttu-id="2371f-399"><see langword="true" /> для включения <see cref="T:System.Windows.Controls.NotifyDataErrorValidationRule" />; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2371f-399"><see langword="true" /> to include the <see cref="T:System.Windows.Controls.NotifyDataErrorValidationRule" />; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="2371f-400">Значение по умолчанию — <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="2371f-400">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2371f-401">Если <xref:System.Windows.Data.Binding.ValidatesOnNotifyDataErrors%2A> имеет `true`значение, то привязка проверяет и сообщает об ошибках, вызываемых источником данных, <xref:System.ComponentModel.INotifyDataErrorInfo>реализующим.</span><span class="sxs-lookup"><span data-stu-id="2371f-401">When <xref:System.Windows.Data.Binding.ValidatesOnNotifyDataErrors%2A> is `true`, the binding checks for and reports errors that are raised by a data source that implements <xref:System.ComponentModel.INotifyDataErrorInfo>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidationRules">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;System.Windows.Controls.ValidationRule&gt; ValidationRules { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;class System.Windows.Controls.ValidationRule&gt; ValidationRules" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.ValidationRules" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ValidationRules As Collection(Of ValidationRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::Collection&lt;System::Windows::Controls::ValidationRule ^&gt; ^ ValidationRules { System::Collections::ObjectModel::Collection&lt;System::Windows::Controls::ValidationRule ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ValidationRules : System.Collections.ObjectModel.Collection&lt;System.Windows.Controls.ValidationRule&gt;" Usage="System.Windows.Data.Binding.ValidationRules" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.Windows.Controls.ValidationRule&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2371f-402">Получает коллекцию правил, проверяющих правильность пользовательского ввода.</span><span class="sxs-lookup"><span data-stu-id="2371f-402">Gets a collection of rules that check the validity of the user input.</span></span></summary>
        <value><span data-ttu-id="2371f-403">Коллекция объектов <see cref="T:System.Windows.Controls.ValidationRule" />.</span><span class="sxs-lookup"><span data-stu-id="2371f-403">A collection of <see cref="T:System.Windows.Controls.ValidationRule" /> objects.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2371f-404">Модель привязки <xref:System.Windows.Data.Binding.ValidationRules%2A> <xref:System.Windows.Data.Binding> данных позволяет связываться с объектом или <xref:System.Windows.Data.MultiBinding>. [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</span><span class="sxs-lookup"><span data-stu-id="2371f-404">The [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] data binding model enables you to associate <xref:System.Windows.Data.Binding.ValidationRules%2A> with your <xref:System.Windows.Data.Binding> or <xref:System.Windows.Data.MultiBinding> object.</span></span> <span data-ttu-id="2371f-405">Можно создавать пользовательские правила, производные от <xref:System.Windows.Controls.ValidationRule> класса и <xref:System.Windows.Controls.ValidationRule.Validate%2A> реализуя метод, или можно <xref:System.Windows.Controls.ExceptionValidationRule>использовать встроенный объект, который делает недействительным значение, если во время обновлений источника возникли исключения.</span><span class="sxs-lookup"><span data-stu-id="2371f-405">You can create custom rules by deriving from the <xref:System.Windows.Controls.ValidationRule> class and implementing the <xref:System.Windows.Controls.ValidationRule.Validate%2A> method, or you can use the built-in <xref:System.Windows.Controls.ExceptionValidationRule>, which invalidates a value if there are exceptions during source updates.</span></span>  
  
 <span data-ttu-id="2371f-406">Механизм привязки проверяет каждый <xref:System.Windows.Controls.ValidationRule> связанный с привязкой, каждый раз, когда входное значение (значение свойства целевого объекта привязки) передается в свойство источника привязки.</span><span class="sxs-lookup"><span data-stu-id="2371f-406">The binding engine checks each <xref:System.Windows.Controls.ValidationRule> associated with a binding each time an input value (the binding target property value) is transferred to the binding source property.</span></span> <span data-ttu-id="2371f-407">Подробное обсуждение процесса проверки см. в разделе "Проверка данных" в статье [Общие сведения о привязке данных](~/docs/framework/wpf/data/data-binding-overview.md).</span><span class="sxs-lookup"><span data-stu-id="2371f-407">For a detailed discussion of the validation process, see the Data Validation section in the [Data Binding Overview](~/docs/framework/wpf/data/data-binding-overview.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2371f-408">Это свойство можно задать [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] только с помощью показанного синтаксиса коллекции или путем доступа к объекту коллекции и использования его различных методов, таких как. `Add`</span><span class="sxs-lookup"><span data-stu-id="2371f-408">This property can be set in [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] only by using the collection syntax shown, or by accessing the collection object and using its various methods, such as `Add`.</span></span> <span data-ttu-id="2371f-409">Свойство для доступа к объекту коллекции доступно только для чтения, в то время как сама коллекция доступна для чтения и записи.</span><span class="sxs-lookup"><span data-stu-id="2371f-409">The property to access the collection object is read-only, whereas the collection itself is read-write.</span></span>  
  
<a name="xamlPropertyElementUsage_ValidationRules"></a>   
## <a name="xaml-property-element-usage"></a><span data-ttu-id="2371f-410">Использование элемента свойства XAML</span><span class="sxs-lookup"><span data-stu-id="2371f-410">XAML Property Element Usage</span></span>  
  
```  
<object>  
  <object.ValidationRules>  
    oneOrMoreValidationRules  
  </object.ValidationRules>  
</object>  
  
```  
  
<a name="xamlValues_ValidationRules"></a>   
## <a name="xaml-values"></a><span data-ttu-id="2371f-411">Значения XAML</span><span class="sxs-lookup"><span data-stu-id="2371f-411">XAML Values</span></span>  
 <span data-ttu-id="2371f-412">*онеорморевалидатионрулес*</span><span class="sxs-lookup"><span data-stu-id="2371f-412">*oneOrMoreValidationRules*</span></span>  
 <span data-ttu-id="2371f-413">Один или несколько <xref:System.Windows.Controls.ValidationRule> объектов.</span><span class="sxs-lookup"><span data-stu-id="2371f-413">One or more <xref:System.Windows.Controls.ValidationRule> objects.</span></span> <span data-ttu-id="2371f-414">Можно использовать <xref:System.Windows.Controls.ExceptionValidationRule> класс или создать настраиваемые правила, подклассом которого <xref:System.Windows.Controls.ValidationRule> является класс.</span><span class="sxs-lookup"><span data-stu-id="2371f-414">You can use the <xref:System.Windows.Controls.ExceptionValidationRule> class or create custom rules by subclassing the <xref:System.Windows.Controls.ValidationRule> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.Validation" />
      </Docs>
    </Member>
    <Member MemberName="XmlNamespaceManager">
      <MemberSignature Language="C#" Value="see GetXmlNamespaceManager, and SetXmlNamespaceManager" />
      <MemberSignature Language="ILAsm" Value="see GetXmlNamespaceManager, and SetXmlNamespaceManager" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.XmlNamespaceManager" />
      <MemberSignature Language="VB.NET" Value="see GetXmlNamespaceManager, and SetXmlNamespaceManager" />
      <MemberSignature Language="F#" Value="see GetXmlNamespaceManager, and SetXmlNamespaceManager" Usage="see GetXmlNamespaceManager, and SetXmlNamespaceManager" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2371f-415">Получает или задает объект <see cref="T:System.Xml.XmlNamespaceManager" />, используемый для выполнения учитывающих пространство имен запросов <see langword="XPath" /> в привязках XML.</span><span class="sxs-lookup"><span data-stu-id="2371f-415">Gets or sets the <see cref="T:System.Xml.XmlNamespaceManager" /> used to perform namespace-aware <see langword="XPath" /> queries in XML bindings.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2371f-416">Это присоединенное свойство использует наследование значения свойства, которое воссоздает поведение наследования пространства имен, присутствующего [!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)]в.</span><span class="sxs-lookup"><span data-stu-id="2371f-416">This attached property uses property value inheritance, which reproduces the behavior of namespace inheritance that is present in [!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)].</span></span> <span data-ttu-id="2371f-417">Подробнее см. в разделе [Наследование значения свойства](~/docs/framework/wpf/advanced/property-value-inheritance.md).</span><span class="sxs-lookup"><span data-stu-id="2371f-417">For details, see [Property Value Inheritance](~/docs/framework/wpf/advanced/property-value-inheritance.md).</span></span>  
  
<a name="dependencyPropertyInfo_XmlNamespaceManager"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="2371f-418">Сведения о свойстве зависимостей</span><span class="sxs-lookup"><span data-stu-id="2371f-418">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="2371f-419">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="2371f-419">Identifier field</span></span>|<xref:System.Windows.Data.Binding.XmlNamespaceManagerProperty>|  
|<span data-ttu-id="2371f-420">Свойства метаданных, для которых задано значение`true`</span><span class="sxs-lookup"><span data-stu-id="2371f-420">Metadata properties set to `true`</span></span>|<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlNamespaceManagerProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty XmlNamespaceManagerProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty XmlNamespaceManagerProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Data.Binding.XmlNamespaceManagerProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly XmlNamespaceManagerProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ XmlNamespaceManagerProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable XmlNamespaceManagerProperty : System.Windows.DependencyProperty" Usage="System.Windows.Data.Binding.XmlNamespaceManagerProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2371f-421">Идентифицирует присоединенное свойство <see cref="P:System.Windows.Data.Binding.XmlNamespaceManager" />.</span><span class="sxs-lookup"><span data-stu-id="2371f-421">Identifies the <see cref="P:System.Windows.Data.Binding.XmlNamespaceManager" /> attached property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="XPath">
      <MemberSignature Language="C#" Value="public string XPath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string XPath" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.XPath" />
      <MemberSignature Language="VB.NET" Value="Public Property XPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ XPath { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.XPath : string with get, set" Usage="System.Windows.Data.Binding.XPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2371f-422">Возвращает или задает <see langword="XPath" /> запрос, возвращающий значение источника привязки [!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)], которое нужно использовать.</span><span class="sxs-lookup"><span data-stu-id="2371f-422">Gets or sets an <see langword="XPath" /> query that returns the value on the [!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)] binding source to use.</span></span></summary>
        <value><span data-ttu-id="2371f-423">Запрос <see langword="XPath" /> .</span><span class="sxs-lookup"><span data-stu-id="2371f-423">The <see langword="XPath" /> query.</span></span> <span data-ttu-id="2371f-424">Значение по умолчанию — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2371f-424">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2371f-425">[!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)] Если источником привязки являются данные, а [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] не объект, <xref:System.Windows.Data.Binding.XPath%2A> свойство используется вместо <xref:System.Windows.Data.Binding.Path%2A> свойства для указания пути к значению в источнике привязки для использования.</span><span class="sxs-lookup"><span data-stu-id="2371f-425">When the binding source is [!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)] data instead of a [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] object, the <xref:System.Windows.Data.Binding.XPath%2A> property is used instead of the <xref:System.Windows.Data.Binding.Path%2A> property to indicate the path to the value on the binding source to use.</span></span>  
  
 <span data-ttu-id="2371f-426">Настроив <xref:System.Windows.Data.Binding.XPath%2A> свойство, вы `XPath` создаете запрос для выбора узла или коллекции узлов (<xref:System.Xml.XmlElement?displayProperty=nameWithType> и <xref:System.Xml.XmlAttribute?displayProperty=nameWithType> оба являются производными от <xref:System.Xml.XmlNode?displayProperty=nameWithType>).</span><span class="sxs-lookup"><span data-stu-id="2371f-426">By setting the <xref:System.Windows.Data.Binding.XPath%2A> property, you are creating an `XPath` query to select a node or a collection of nodes (<xref:System.Xml.XmlElement?displayProperty=nameWithType> and <xref:System.Xml.XmlAttribute?displayProperty=nameWithType> both derive from <xref:System.Xml.XmlNode?displayProperty=nameWithType>).</span></span> <span data-ttu-id="2371f-427"><xref:System.Xml.XmlNode?displayProperty=nameWithType>— Это <xref:System.Windows.Data.Binding.Path%2A> объект, который означает, что можно выполнить привязку к его свойствам с помощью свойства. [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)]</span><span class="sxs-lookup"><span data-stu-id="2371f-427"><xref:System.Xml.XmlNode?displayProperty=nameWithType> is a [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] object, which means you can bind to its properties using the <xref:System.Windows.Data.Binding.Path%2A> property.</span></span>  
  
 <span data-ttu-id="2371f-428">Метод обрабатывает выражения из<xref:System.Windows.Data.Binding.XPath%2A>Свойства. `XPath` <xref:System.Xml.XmlNode.SelectNodes%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="2371f-428">The <xref:System.Xml.XmlNode.SelectNodes%2A?displayProperty=nameWithType> method handles the `XPath` expressions from the <xref:System.Windows.Data.Binding.XPath%2A> property.</span></span> <span data-ttu-id="2371f-429">`XPath`функции не поддерживаются.</span><span class="sxs-lookup"><span data-stu-id="2371f-429">`XPath` functions are not supported.</span></span> <span data-ttu-id="2371f-430">Сведения о <xref:System.Xml.XmlNode.SelectNodes%2A> выражениях см. в документации и некоторых примерах, приведенных в разделе "пример". `XPath`</span><span class="sxs-lookup"><span data-stu-id="2371f-430">For `XPath` expression information, see the <xref:System.Xml.XmlNode.SelectNodes%2A> documentation and some examples provided in the Example section.</span></span>  
  
 <span data-ttu-id="2371f-431">LINQ to XML объекты <xref:System.Xml.Linq.XDocument> и <xref:System.Xml.Linq.XElement> не используют `XPath`.</span><span class="sxs-lookup"><span data-stu-id="2371f-431">LINQ to XML objects <xref:System.Xml.Linq.XDocument> and <xref:System.Xml.Linq.XElement> do not use `XPath`.</span></span> <span data-ttu-id="2371f-432">Подробную информацию см. в разделе [Практическое руководство. Выполните привязку к результатам](~/docs/framework/wpf/data/how-to-bind-to-xdocument-xelement-or-linq-for-xml-query-results.md)запроса с кодом XDocument, XElement или LINQ.</span><span class="sxs-lookup"><span data-stu-id="2371f-432">For details, see [How to: Bind to XDocument, XElement, or LINQ for XML Query Results](~/docs/framework/wpf/data/how-to-bind-to-xdocument-xelement-or-linq-for-xml-query-results.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
