<Type Name="UpdateSourceExceptionFilterCallback" FullName="System.Windows.Data.UpdateSourceExceptionFilterCallback">
  <Metadata><Meta Name="ms.openlocfilehash" Value="eb3748d1025bc0144697ff3c93329365887cdb20" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70578965" /></Metadata><TypeSignature Language="C#" Value="public delegate object UpdateSourceExceptionFilterCallback(object bindExpression, Exception exception);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed UpdateSourceExceptionFilterCallback extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Data.UpdateSourceExceptionFilterCallback" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Function UpdateSourceExceptionFilterCallback(bindExpression As Object, exception As Exception) As Object " />
  <TypeSignature Language="C++ CLI" Value="public delegate System::Object ^ UpdateSourceExceptionFilterCallback(System::Object ^ bindExpression, Exception ^ exception);" />
  <TypeSignature Language="F#" Value="type UpdateSourceExceptionFilterCallback = delegate of obj * Exception -&gt; obj" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="bindExpression" Type="System.Object" />
    <Parameter Name="exception" Type="System.Exception" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Object</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="bindExpression">Объект с исключением.</param>
    <param name="exception">Возникло исключение.</param>
    <summary>Представляет метод, который обрабатывает исключения, вызываемые во время обновления значения источника привязки. Он должен использоваться с <see cref="T:System.Windows.Controls.ExceptionValidationRule" />.</summary>
    <returns>Объект, который обычно является одним из следующих. 
 <list type="table"><listheader><term> Значение 
 </term><description> Описание 
 </description></listheader><item><term><see langword="null" /></term><description> Для игнорирования любых исключений. Поведение по умолчанию (если нет <see cref="T:System.Windows.Data.UpdateSourceExceptionFilterCallback" />) — создать <see cref="T:System.Windows.Controls.ValidationError" /> с исключением и добавить его в коллекцию <see cref="P:System.Windows.Controls.Validation.Errors" /> привязанного элемента.  
  
 </description></item><item><term> Любой объект 
 </term><description> Для создания объекта <see cref="T:System.Windows.Controls.ValidationError" /> с установленным для этого объекта <see cref="P:System.Windows.Controls.ValidationError.ErrorContent" />.  
  
<see cref="T:System.Windows.Controls.ValidationError" /> объект добавлен в коллекцию <see cref="P:System.Windows.Controls.Validation.Errors" /> привязанного элемента.  
  
 </description></item><item><term> Объект <see cref="T:System.Windows.Controls.ValidationError" />. 
 </term><description> Чтобы установить объект <see cref="T:System.Windows.Data.BindingExpression" /> или <see cref="T:System.Windows.Data.MultiBindingExpression" /> как <see cref="P:System.Windows.Controls.ValidationError.BindingInError" />. <see cref="T:System.Windows.Controls.ValidationError" /> объект добавлен в коллекцию <see cref="P:System.Windows.Controls.Validation.Errors" /> привязанного элемента.  
  
 </description></item></list></returns>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если у вас есть связь <xref:System.Windows.Controls.ExceptionValidationRule> <xref:System.Windows.Data.Binding> с объектом, можно использовать <xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A> свойство, чтобы задать для этого обратного вызова настраиваемую логику обработки исключений. Этот обратный вызов вызывается всякий раз, когда возникает исключение, когда подсистема привязки обновляет значение источника привязки.  
  
 Если параметр не указан <xref:System.Windows.Data.Binding>в, подсистема привязки создает <xref:System.Windows.Controls.ValidationError> исключение и добавляет его в <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=nameWithType> коллекцию связанного элемента. <xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A>  
  
   
  
## Examples  
 Свойство следующего <xref:System.Windows.Controls.TextBox> объекта привязано к данным свойства `Age3` источника, которое имеет тип  `int` .  <xref:System.Windows.Controls.TextBox.Text%2A> <xref:System.Windows.Controls.ExceptionValidationRule> Проверяет наличие исключений, возникающих во время обновления свойства источника (например, когда пользователь вводит значение, которое не может быть преобразовано в целое число).  
  
 [!code-xaml[BindValidation#tbExceptionFilter](~/samples/snippets/csharp/VS_Snippets_Wpf/BindValidation/CSharp/Window1.xaml#tbexceptionfilter)]  
  
 Вы можете предоставить настраиваемую логику для обработки этих исключений. В следующем примере показано, как использовать <xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A> свойство для <xref:System.Windows.Data.UpdateSourceExceptionFilterCallback>установки:  
  
 [!code-csharp[BindValidation#filtercallback](~/samples/snippets/csharp/VS_Snippets_Wpf/BindValidation/CSharp/Window1.xaml.cs#filtercallback)]  
  
 Ниже приведен пример реализации <xref:System.Windows.Data.UpdateSourceExceptionFilterCallback>:  
  
 [!code-csharp[BindValidation#Handler](~/samples/snippets/csharp/VS_Snippets_Wpf/BindValidation/CSharp/Window1.xaml.cs#handler)]  
  
 Полный пример см. в разделе [Пример проверки привязки](https://go.microsoft.com/fwlink/?LinkID=159972).  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Windows.Data.MultiBinding.UpdateSourceExceptionFilter" />
  </Docs>
</Type>
