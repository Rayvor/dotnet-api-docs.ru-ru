<Type Name="BindingExpression" FullName="System.Windows.Data.BindingExpression">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6300e7cf3d76dc813b065e4a554061c3a2d5c179" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69211093" /></Metadata><TypeSignature Language="C#" Value="public sealed class BindingExpression : System.Windows.Data.BindingExpressionBase, System.Windows.IWeakEventListener" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit BindingExpression extends System.Windows.Data.BindingExpressionBase implements class System.Windows.IWeakEventListener" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Data.BindingExpression" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class BindingExpression&#xA;Inherits BindingExpressionBase&#xA;Implements IWeakEventListener" />
  <TypeSignature Language="C++ CLI" Value="public ref class BindingExpression sealed : System::Windows::Data::BindingExpressionBase, System::Windows::IWeakEventListener" />
  <TypeSignature Language="F#" Value="type BindingExpression = class&#xA;    inherit BindingExpressionBase&#xA;    interface IWeakEventListener" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Data.BindingExpressionBase</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.IWeakEventListener</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Содержит сведения об одном экземпляре <see cref="T:System.Windows.Data.Binding" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Data.Binding> Класс является классом высокого уровня для объявления привязки. <xref:System.Windows.Data.BindingExpression> Класс является базовым объектом, который поддерживает соединение между источником привязки и целевым объектом привязки. Содержит все сведения, которые можно совместно использовать в нескольких <xref:System.Windows.Data.BindingExpression> объектах. <xref:System.Windows.Data.Binding> Представляет собой выражение экземпляра, которое не может совместно использоваться и содержит все сведения <xref:System.Windows.Data.Binding>об экземпляре. <xref:System.Windows.Data.BindingExpression>  
  
 Например, рассмотрим следующее `myDataObject` , где — это экземпляр `MyData` класса, `myBinding` является исходным <xref:System.Windows.Data.Binding> объектом, а `MyData` класс — это определенный класс, содержащий строковое свойство с именем `MyDataProperty`. В этом примере выполняется привязка текстового содержимого `mytext`, которое является <xref:System.Windows.Controls.TextBlock>экземпляром, к `MyDataProperty`.  
  
 [!code-csharp[CodeOnlyBinding#1](~/samples/snippets/csharp/VS_Snippets_Wpf/CodeOnlyBinding/CSharp/binding.cs#1)]
 [!code-vb[CodeOnlyBinding#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CodeOnlyBinding/VisualBasic/App.vb#1)]  
  
 Для создания других привязок `myBinding` можно использовать один и тот же объект. Например, вы можете использовать `myBinding` объект для привязки текстового содержимого флажка к. `MyDataProperty` В этом случае будут существовать два экземпляра <xref:System.Windows.Data.BindingExpression> , которые `myBinding` совместно используют объект.  
  
 Получить <xref:System.Windows.Data.BindingExpression> объект можно с <xref:System.Windows.Data.BindingOperations.GetBindingExpression%2A> помощью метода или <xref:System.Windows.FrameworkElement.GetBindingExpression%2A> метода для привязанного к данным объекта.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="DataItem">
      <MemberSignature Language="C#" Value="public object DataItem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DataItem" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingExpression.DataItem" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataItem As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ DataItem { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DataItem : obj" Usage="System.Windows.Data.BindingExpression.DataItem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает объект источника привязки, который используется этим выражением <see cref="T:System.Windows.Data.BindingExpression" />.</summary>
        <value>Объект источника привязки, который используется этим выражением <see cref="T:System.Windows.Data.BindingExpression" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем <xref:System.Windows.Controls.Primitives.ButtonBase.Click> примере показана реализация обработчика событий, который <xref:System.Windows.Data.BindingOperations.GetBindingExpression%2A> использует метод для получения <xref:System.Windows.Data.BindingExpression.DataItem%2A> , <xref:System.Windows.Data.BindingExpression> а затем вызывает свойство для доступа к объекту источника привязки.  
  
 Объект является целевым объектом привязки, а его <xref:System.Windows.Controls.TextBlock.Text%2A> свойство является свойством цели привязки. `SavingsText` <xref:System.Windows.Controls.TextBlock>  
  
 [!code-csharp[DirectionalBinding#OnRentRaise](~/samples/snippets/csharp/VS_Snippets_Wpf/DirectionalBinding/CSharp/Page1.xaml.cs#onrentraise)]
 [!code-vb[DirectionalBinding#OnRentRaise](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DirectionalBinding/VisualBasic/DirectionalBinding.vb#onrentraise)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParentBinding">
      <MemberSignature Language="C#" Value="public System.Windows.Data.Binding ParentBinding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Data.Binding ParentBinding" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingExpression.ParentBinding" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ParentBinding As Binding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Data::Binding ^ ParentBinding { System::Windows::Data::Binding ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ParentBinding : System.Windows.Data.Binding" Usage="System.Windows.Data.BindingExpression.ParentBinding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Data.Binding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает объект <see cref="T:System.Windows.Data.Binding" /> текущего <see cref="T:System.Windows.Data.BindingExpression" />.</summary>
        <value>Объект <see cref="T:System.Windows.Data.Binding" /> текущего выражения привязки.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolvedSource">
      <MemberSignature Language="C#" Value="public object ResolvedSource { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ResolvedSource" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingExpression.ResolvedSource" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ResolvedSource As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ResolvedSource { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ResolvedSource : obj" Usage="System.Windows.Data.BindingExpression.ResolvedSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает объект источника привязки для данного объекта <see cref="T:System.Windows.Data.BindingExpression" />.</summary>
        <value>Объект источника привязки для данного объекта <see cref="T:System.Windows.Data.BindingExpression" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolvedSourcePropertyName">
      <MemberSignature Language="C#" Value="public string ResolvedSourcePropertyName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ResolvedSourcePropertyName" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingExpression.ResolvedSourcePropertyName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ResolvedSourcePropertyName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ResolvedSourcePropertyName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ResolvedSourcePropertyName : string" Usage="System.Windows.Data.BindingExpression.ResolvedSourcePropertyName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает имя свойства источника привязки для данного <see cref="T:System.Windows.Data.BindingExpression" />.</summary>
        <value>Имя свойства источника привязки для данного <see cref="T:System.Windows.Data.BindingExpression" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.IWeakEventListener.ReceiveWeakEvent">
      <MemberSignature Language="C#" Value="bool IWeakEventListener.ReceiveWeakEvent (Type managerType, object sender, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Windows.IWeakEventListener.ReceiveWeakEvent(class System.Type managerType, object sender, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingExpression.System#Windows#IWeakEventListener#ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Function ReceiveWeakEvent (managerType As Type, sender As Object, e As EventArgs) As Boolean Implements IWeakEventListener.ReceiveWeakEvent" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Windows.IWeakEventListener.ReceiveWeakEvent(Type ^ managerType, System::Object ^ sender, EventArgs ^ e) = System::Windows::IWeakEventListener::ReceiveWeakEvent;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IWeakEventListener.ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="managerType" Type="System.Type" />
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="managerType">Тип объекта <see cref="T:System.Windows.WeakEventManager" />, который вызывает этот метод. Распознаются только объекты диспетчера с типом <see cref="T:System.Collections.Specialized.CollectionChangedEventManager" />.</param>
        <param name="sender">Объект, в котором произошло событие.</param>
        <param name="e">Данные события.</param>
        <summary>Этот член поддерживает инфраструктуру [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] и не предназначен для непосредственного использования из кода.</summary>
        <returns>Значение <see langword="true" />, если событие было обработано слушателем; в противном случае — значение <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateSource">
      <MemberSignature Language="C#" Value="public override void UpdateSource ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void UpdateSource() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingExpression.UpdateSource" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub UpdateSource ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void UpdateSource();" />
      <MemberSignature Language="F#" Value="override this.UpdateSource : unit -&gt; unit" Usage="bindingExpression.UpdateSource " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Отправляет текущее значение целевого объекта привязки в свойство источника привязки в привязках <see cref="F:System.Windows.Data.BindingMode.TwoWay" /> или <see cref="F:System.Windows.Data.BindingMode.OneWayToSource" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод не выполняет никаких действий <xref:System.Windows.Data.Binding.Mode%2A> , если объект привязки не <xref:System.Windows.Data.BindingMode.TwoWay> имеет <xref:System.Windows.Data.BindingMode.OneWayToSource>значение или.  
  
 <xref:System.Windows.Data.BindingExpression.UpdateSource%2A> Если для <xref:System.Windows.Data.UpdateSourceTrigger.Explicit>привязки задано значение, необходимо вызвать метод, иначе изменения не будут переданы обратно в источник. <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Привязка была отсоединена от своей цели.</exception>
        <altmember cref="M:System.Windows.Data.BindingExpression.UpdateTarget" />
      </Docs>
    </Member>
    <Member MemberName="UpdateTarget">
      <MemberSignature Language="C#" Value="public override void UpdateTarget ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void UpdateTarget() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingExpression.UpdateTarget" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub UpdateTarget ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void UpdateTarget();" />
      <MemberSignature Language="F#" Value="override this.UpdateTarget : unit -&gt; unit" Usage="bindingExpression.UpdateTarget " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Принудительно вызывает передачу данных из свойства источника привязки в свойство цели привязки.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод позволяет принудительно передавать данные из свойства Source в целевое свойство. Если исходный объект реализует соответствующий механизм уведомления об изменении свойств, такой как <xref:System.ComponentModel.INotifyPropertyChanged>, целевые обновления происходят автоматически. Однако можно использовать этот метод для непосредственного обновления целевого свойства в случаях, когда исходный объект не предоставляет правильные уведомления об изменении свойств. Этот метод также можно использовать, если приложению необходимо периодически обновлять целевые свойства.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Привязка была отсоединена от своей цели.</exception>
        <altmember cref="M:System.Windows.Data.BindingExpression.UpdateSource" />
      </Docs>
    </Member>
  </Members>
</Type>
