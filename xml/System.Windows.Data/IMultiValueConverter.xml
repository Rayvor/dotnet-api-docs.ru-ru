<Type Name="IMultiValueConverter" FullName="System.Windows.Data.IMultiValueConverter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="cfe54d48669bdaa8b22abe86873e8ed50e1237c1" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70457100" /></Metadata><TypeSignature Language="C#" Value="public interface IMultiValueConverter" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IMultiValueConverter" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Data.IMultiValueConverter" />
  <TypeSignature Language="VB.NET" Value="Public Interface IMultiValueConverter" />
  <TypeSignature Language="C++ CLI" Value="public interface class IMultiValueConverter" />
  <TypeSignature Language="F#" Value="type IMultiValueConverter = interface" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Обеспечивает возможность реализации в <see cref="T:System.Windows.Data.MultiBinding" /> пользовательской логики.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Data.MultiBinding>Чтобы связать преобразователь с, создайте класс, <xref:System.Windows.Data.IMultiValueConverter> реализующий интерфейс <xref:System.Windows.Data.IMultiValueConverter.Convert%2A> , а затем реализуйте методы и <xref:System.Windows.Data.IMultiValueConverter.ConvertBack%2A> .  
  
 Отдельные привязки в коллекции могут иметь собственные преобразователи значений. Для получения дополнительной информации см. <xref:System.Windows.Data.IValueConverter>.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Convert">
      <MemberSignature Language="C#" Value="public object Convert (object[] values, Type targetType, object parameter, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Convert(object[] values, class System.Type targetType, object parameter, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.IMultiValueConverter.Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Function Convert (values As Object(), targetType As Type, parameter As Object, culture As CultureInfo) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Convert(cli::array &lt;System::Object ^&gt; ^ values, Type ^ targetType, System::Object ^ parameter, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="abstract member Convert : obj[] * Type * obj * System.Globalization.CultureInfo -&gt; obj" Usage="iMultiValueConverter.Convert (values, targetType, parameter, culture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Object[]" />
        <Parameter Name="targetType" Type="System.Type" />
        <Parameter Name="parameter" Type="System.Object" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="values">Массив значений, создаваемый исходными привязками в <see cref="T:System.Windows.Data.MultiBinding" />. Значение <see cref="F:System.Windows.DependencyProperty.UnsetValue" /> указывает, что исходная привязка не имеет значения для предоставления преобразования.</param>
        <param name="targetType">Тип целевого свойства привязки.</param>
        <param name="parameter">Используемый параметр преобразователя.</param>
        <param name="culture">Язык и региональные параметры, используемые в преобразователе.</param>
        <summary>Преобразует исходные значения в значение для целевого объекта привязки. Механизм привязки данных вызывает этот метод при распространении значений от исходных привязок в целевой объект привязки.</summary>
        <returns>Преобразованное значение.  
  
Если этот метод возвращает <see langword="null" />, используется допустимое значение <see langword="null" />.  
  
Возвращаемое значение <see cref="T:System.Windows.DependencyProperty" />.<see cref="F:System.Windows.DependencyProperty.UnsetValue" /> указывает, что преобразователь не создал значение и привязка будет использовать значение <see cref="P:System.Windows.Data.BindingBase.FallbackValue" />, если оно доступно. В противном случае будет использовано значение по умолчанию.  
  
Возвращаемое значение <see cref="T:System.Windows.Data.Binding" />.<see cref="F:System.Windows.Data.Binding.DoNothing" /> указывает, что привязка не передает значение либо используется значение <see cref="P:System.Windows.Data.BindingBase.FallbackValue" /> или значение по умолчанию.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Механизм привязки данных не перехватывает исключения, вызываемые предоставленным пользователем преобразователем. Любое исключение, вызванное <xref:System.Windows.Data.IMultiValueConverter.Convert%2A> методом, или любые неперехваченные исключения, вызываемые методами, <xref:System.Windows.Data.IMultiValueConverter.Convert%2A> которые вызываются методом, обрабатываются как ошибки времени выполнения. Обработка ожидаемых проблем путем возврата <xref:System.Windows.DependencyProperty>.<xref:System.Windows.DependencyProperty.UnsetValue>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Data.IValueConverter" />
      </Docs>
    </Member>
    <Member MemberName="ConvertBack">
      <MemberSignature Language="C#" Value="public object[] ConvertBack (object value, Type[] targetTypes, object parameter, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object[] ConvertBack(object value, class System.Type[] targetTypes, object parameter, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.IMultiValueConverter.ConvertBack(System.Object,System.Type[],System.Object,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertBack (value As Object, targetTypes As Type(), parameter As Object, culture As CultureInfo) As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Object ^&gt; ^ ConvertBack(System::Object ^ value, cli::array &lt;Type ^&gt; ^ targetTypes, System::Object ^ parameter, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="abstract member ConvertBack : obj * Type[] * obj * System.Globalization.CultureInfo -&gt; obj[]" Usage="iMultiValueConverter.ConvertBack (value, targetTypes, parameter, culture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="targetTypes" Type="System.Type[]" />
        <Parameter Name="parameter" Type="System.Object" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="value">Значение, произведенное целевым объектом привязки.</param>
        <param name="targetTypes">Целевой массив байтов преобразования. Длина массива указывает количество и типы значений, которые, как предполагается, метод будет возвращать.</param>
        <param name="parameter">Используемый параметр преобразователя.</param>
        <param name="culture">Язык и региональные параметры, используемые в преобразователе.</param>
        <summary>Преобразует значение целевого объекта привязки в значения привязки к источнику.</summary>
        <returns>Массив значений, преобразованных из целевых значений в исходные.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если количество возвращаемых значений превышает количество привязок в <xref:System.Windows.Data.MultiBinding>, лишние возвращаемые значения игнорируются. Если количество исходных привязок превышает число возвращаемых значений, для оставшихся исходных привязок не заданы значения. Типы возвращаемых значений не проверяются `targetTypes`; значения задаются непосредственно в исходных привязках.  
  
 Вернитесь <xref:System.Windows.Data.Binding.DoNothing> в позиции `i` , чтобы указать, что значение не должно быть задано для исходной привязки по `i`индексу.  
  
 Возвращает <xref:System.Windows.DependencyProperty>.<xref:System.Windows.DependencyProperty.UnsetValue> в позиции `i` , чтобы указать, что преобразователю не удается предоставить значение для исходной привязки по индексу `i`и что для него не должно быть установлено значение.  
  
 Вернитесь `null` к, чтобы указать, что преобразователь не может выполнить преобразование или не поддерживает преобразование в этом направлении.  
  
 Механизм привязки данных не перехватывает исключения, вызываемые предоставленным пользователем преобразователем. Любое исключение, которое <xref:System.Windows.Data.IMultiValueConverter.ConvertBack%2A> вызывается методом или любыми неперехваченными исключениями, вызванными методами <xref:System.Windows.Data.IMultiValueConverter.ConvertBack%2A> , которые вызываются методами, обрабатываются как ошибки времени выполнения. Обработка ожидаемых проблем путем возврата `null`.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Data.IValueConverter" />
      </Docs>
    </Member>
  </Members>
</Type>
