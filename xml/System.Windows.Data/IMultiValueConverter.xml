<Type Name="IMultiValueConverter" FullName="System.Windows.Data.IMultiValueConverter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ad8284f4f3501b38d0aa2982c3fa8bf5b1fa40d9" /><Meta Name="ms.sourcegitcommit" Value="f1d16425528e237257ca3b58eb49217a514849ea" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="04/24/2019" /><Meta Name="ms.locfileid" Value="64220619" /></Metadata><TypeSignature Language="C#" Value="public interface IMultiValueConverter" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IMultiValueConverter" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Data.IMultiValueConverter" />
  <TypeSignature Language="VB.NET" Value="Public Interface IMultiValueConverter" />
  <TypeSignature Language="C++ CLI" Value="public interface class IMultiValueConverter" />
  <TypeSignature Language="F#" Value="type IMultiValueConverter = interface" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Обеспечивает возможность реализации в <see cref="T:System.Windows.Data.MultiBinding" /> пользовательской логики.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Чтобы связать преобразователь с <xref:System.Windows.Data.MultiBinding>, создайте класс, реализующий <xref:System.Windows.Data.IMultiValueConverter> интерфейс, а затем реализуйте <xref:System.Windows.Data.IMultiValueConverter.Convert%2A> и <xref:System.Windows.Data.IMultiValueConverter.ConvertBack%2A> методы.  
  
 Отдельных привязок в коллекции могут иметь свои собственные преобразователи значений. Дополнительные сведения см. в разделе <xref:System.Windows.Data.IValueConverter>.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Convert">
      <MemberSignature Language="C#" Value="public object Convert (object[] values, Type targetType, object parameter, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Convert(object[] values, class System.Type targetType, object parameter, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.IMultiValueConverter.Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Function Convert (values As Object(), targetType As Type, parameter As Object, culture As CultureInfo) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Convert(cli::array &lt;System::Object ^&gt; ^ values, Type ^ targetType, System::Object ^ parameter, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="abstract member Convert : obj[] * Type * obj * System.Globalization.CultureInfo -&gt; obj" Usage="iMultiValueConverter.Convert (values, targetType, parameter, culture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Object[]" />
        <Parameter Name="targetType" Type="System.Type" />
        <Parameter Name="parameter" Type="System.Object" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="values">Массив значений, создаваемый исходными привязками в <see cref="T:System.Windows.Data.MultiBinding" />. Значение <see cref="F:System.Windows.DependencyProperty.UnsetValue" /> указывает, что исходная привязка не имеет значения для предоставления преобразования.</param>
        <param name="targetType">Тип целевого свойства привязки.</param>
        <param name="parameter">Используемый параметр преобразователя.</param>
        <param name="culture">Язык и региональные параметры, используемые в преобразователе.</param>
        <summary>Преобразует исходные значения в значение для целевого объекта привязки. Механизм привязки данных вызывает этот метод при распространении значений от исходных привязок в целевой объект привязки.</summary>
        <returns>Преобразованное значение.  
  
Если этот метод возвращает <see langword="null" />, используется допустимое значение <see langword="null" />.  
  
Возвращаемое значение <see cref="T:System.Windows.DependencyProperty" />.<see cref="F:System.Windows.DependencyProperty.UnsetValue" /> указывает, что преобразователь не создал значение и привязка будет использовать значение <see cref="P:System.Windows.Data.BindingBase.FallbackValue" />, если оно доступно. В противном случае будет использовано значение по умолчанию.  
  
Возвращаемое значение <see cref="T:System.Windows.Data.Binding" />.<see cref="F:System.Windows.Data.Binding.DoNothing" /> указывает, что привязка не передает значение либо используется значение <see cref="P:System.Windows.Data.BindingBase.FallbackValue" /> или значение по умолчанию.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Механизм привязки данных не перехватывает исключения, вызываемые по пользовательским преобразователем. Любое исключение, вызванное <xref:System.Windows.Data.IMultiValueConverter.Convert%2A> метода или неперехваченных исключений, которые вызываются методами, <xref:System.Windows.Data.IMultiValueConverter.Convert%2A> вызовы методов, обрабатываются как ошибки во время выполнения. Возможные проблемы следует обрабатывать, возвращая <xref:System.Windows.DependencyProperty>.<xref:System.Windows.DependencyProperty.UnsetValue>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Data.IValueConverter" />
      </Docs>
    </Member>
    <Member MemberName="ConvertBack">
      <MemberSignature Language="C#" Value="public object[] ConvertBack (object value, Type[] targetTypes, object parameter, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object[] ConvertBack(object value, class System.Type[] targetTypes, object parameter, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.IMultiValueConverter.ConvertBack(System.Object,System.Type[],System.Object,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertBack (value As Object, targetTypes As Type(), parameter As Object, culture As CultureInfo) As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Object ^&gt; ^ ConvertBack(System::Object ^ value, cli::array &lt;Type ^&gt; ^ targetTypes, System::Object ^ parameter, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="abstract member ConvertBack : obj * Type[] * obj * System.Globalization.CultureInfo -&gt; obj[]" Usage="iMultiValueConverter.ConvertBack (value, targetTypes, parameter, culture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="targetTypes" Type="System.Type[]" />
        <Parameter Name="parameter" Type="System.Object" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="value">Значение, произведенное целевым объектом привязки.</param>
        <param name="targetTypes">Целевой массив байтов преобразования. Длина массива указывает количество и типы значений, которые, как предполагается, метод будет возвращать.</param>
        <param name="parameter">Используемый параметр преобразователя.</param>
        <param name="culture">Язык и региональные параметры, используемые в преобразователе.</param>
        <summary>Преобразует значение целевого объекта привязки в значения привязки к источнику.</summary>
        <returns>Массив значений, преобразованных из целевых значений в исходные.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если существует несколько возвращаемых значений, чем количество привязок в <xref:System.Windows.Data.MultiBinding>, лишние возвращаемые значения учитываются. Если имеются дополнительные источника привязки, чем количество возвращаемых значений, оставшиеся привязки источника нет любые значения, заданные на них. Типы возвращаемых значений не проверяются в контексте `targetTypes`; значения устанавливаются в исходных привязках, напрямую.  
  
 Вернуть <xref:System.Windows.Data.Binding.DoNothing> позиции `i` , значение не является для привязки источника по индексу `i`.  
  
 Вернуть <xref:System.Windows.DependencyProperty>.<xref:System.Windows.DependencyProperty.UnsetValue> в позиции `i` для указания, что преобразователь не может предоставить значение для привязки источника по индексу `i`, и что значение не для установки на нем.  
  
 Вернуть `null` чтобы указать, что преобразователь не может выполнить преобразование, или что он не поддерживает преобразование в этом направлении.  
  
 Механизм привязки данных не перехватывает исключения, вызываемые по пользовательским преобразователем. Любое исключение, вызванное <xref:System.Windows.Data.IMultiValueConverter.ConvertBack%2A> метод или любые не перехваченные исключения, создаваемые методами, <xref:System.Windows.Data.IMultiValueConverter.ConvertBack%2A> вызовы методов, обрабатываются как ошибки во время выполнения. Возможные проблемы следует обрабатывать, возвращая `null`.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Data.IValueConverter" />
      </Docs>
    </Member>
  </Members>
</Type>