<Type Name="BindingBase" FullName="System.Windows.Data.BindingBase">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c525148f9f35484ee4da9f7efe5966eded238bd1" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75052311" /></Metadata><TypeSignature Language="C#" Value="public abstract class BindingBase : System.Windows.Markup.MarkupExtension" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract BindingBase extends System.Windows.Markup.MarkupExtension" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Data.BindingBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class BindingBase&#xA;Inherits MarkupExtension" />
  <TypeSignature Language="C++ CLI" Value="public ref class BindingBase abstract : System::Windows::Markup::MarkupExtension" />
  <TypeSignature Language="F#" Value="type BindingBase = class&#xA;    inherit MarkupExtension" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Markup.MarkupExtension</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.None, Modifiability=System.Windows.Modifiability.Unmodifiable, Readability=System.Windows.Readability.Unreadable)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Markup.MarkupExtensionReturnType(typeof(System.Object))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Определяет общие характеристики классов <see cref="T:System.Windows.Data.Binding" />, <see cref="T:System.Windows.Data.PriorityBinding" />и <see cref="T:System.Windows.Data.MultiBinding" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Так как метод <xref:System.Windows.Data.BindingBase.ProvideValue%2A?displayProperty=nameWithType> запечатан, Пользовательский класс привязки, производный от <xref:System.Windows.Data.BindingBase>, не будет правильно функционировать как расширение разметки [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)].  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="BindingGroupName">
      <MemberSignature Language="C#" Value="public string BindingGroupName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BindingGroupName" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingBase.BindingGroupName" />
      <MemberSignature Language="VB.NET" Value="Public Property BindingGroupName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ BindingGroupName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BindingGroupName : string with get, set" Usage="System.Windows.Data.BindingBase.BindingGroupName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает имя группы <see cref="T:System.Windows.Data.BindingGroup" />, к которой принадлежит данная привязка.</summary>
        <value>Имя группы <see cref="T:System.Windows.Data.BindingGroup" />, к которой принадлежит данная привязка.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если параметр <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> не задан, привязка относится к <xref:System.Windows.Data.BindingGroup> только в том случае, если источник привязки и <xref:System.Windows.FrameworkElement.DataContext%2A> родительского элемента, который имеет <xref:System.Windows.Data.BindingGroup>, являются одним и тем же объектом.  
  
 Если для <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> задано значение, то привязка относится к <xref:System.Windows.Data.BindingGroup>, если выполняются следующие условия.  
  
-   <xref:System.Windows.Data.BindingGroup.Name%2A> <xref:System.Windows.Data.BindingGroup> и <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> равны.  
  
-   <xref:System.Windows.Data.BindingGroup> принадлежит родительскому элементу целевого элемента привязки.  
  
 Если <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> имеет значение `null`, привязка никогда не является частью <xref:System.Windows.Data.BindingGroup>.  
  
 Можно включить привязки с источником, отличным от <xref:System.Windows.FrameworkElement.DataContext%2A> родительского элемента, имеющего <xref:System.Windows.Data.BindingGroup>, установив <xref:System.Windows.Data.BindingGroup.Name%2A> <xref:System.Windows.Data.BindingGroup> и свойство <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> привязки к тому же значению.  Можно исключить привязки, имеющие тот же источник, что и <xref:System.Windows.FrameworkElement.DataContext%2A> родительского элемента, имеющего <xref:System.Windows.Data.BindingGroup>, установив <xref:System.Windows.Data.BindingGroup.Name%2A> <xref:System.Windows.Data.BindingGroup> и свойство <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> привязки к различным значениям.  
  
   
  
## Examples  
 Следующие примеры являются частью приложения, которое проверяет, установил ли пользователь свойства двух объектов равными значениями. В первом примере создаются два элемента управления <xref:System.Windows.Controls.TextBox>, каждый из которых является данными, привязанными к другому источнику: привязка первого <xref:System.Windows.Controls.TextBox> является частью <xref:System.Windows.Data.BindingGroup>, так как <xref:System.Windows.Controls.TextBox> наследует <xref:System.Windows.FrameworkElement.DataContext%2A> и <xref:System.Windows.Data.BindingGroup> от родительского <xref:System.Windows.Controls.StackPanel>  
  
 Привязка второго <xref:System.Windows.Controls.TextBox> является частью <xref:System.Windows.Data.BindingGroup>, так как <xref:System.Windows.Data.BindingGroup.Name%2A> <xref:System.Windows.Data.BindingGroup> и <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> <xref:System.Windows.Data.Binding> установлены в `bindingGroup`.  
  
 [!code-xaml[BindingGroupSnippets#BindingGroupName](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window3.xaml#bindinggroupname)]  
[!code-xaml[BindingGroupSnippets#ValidationAdornerSite](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window3.xaml#validationadornersite)]  
  
 В следующем примере показаны <xref:System.Windows.Controls.ValidationRule>, используемые в предыдущем примере.  В методе <xref:System.Windows.Controls.ValidationRule.Validate%2A> пример получает каждый исходный объект из <xref:System.Windows.Data.BindingGroup> и проверяет, равны ли свойства объектов.  
  
 [!code-csharp[BindingGroupSnippets#BindingGroupNameValidationRule](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window3.xaml.cs#bindinggroupnamevalidationrule)]
 [!code-vb[BindingGroupSnippets#BindingGroupNameValidationRule](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/window3.xaml.vb#bindinggroupnamevalidationrule)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Delay">
      <MemberSignature Language="C#" Value="public int Delay { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Delay" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingBase.Delay" />
      <MemberSignature Language="VB.NET" Value="Public Property Delay As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Delay { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Delay : int with get, set" Usage="System.Windows.Data.BindingBase.Delay" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1">
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает время (в миллисекундах) ожидания перед обновлением источника привязки после изменения значения в целевом объекте.</summary>
        <value>Количество времени в миллисекундах для ожидания перед обновлением источника привязки.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При использовании привязки для обновления источника привязки всякий раз, когда изменяется значение свойства в целевом объекте, свойство <xref:System.Windows.Data.Binding.Mode%2A> устанавливается равным <xref:System.Windows.Data.BindingMode.TwoWay>, а <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> — <xref:System.Windows.Data.UpdateSourceTrigger.PropertyChanged>.  В этом случае можно использовать свойство <xref:System.Windows.Data.BindingBase.Delay%2A>, чтобы указать, должна ли задержка между изменением целевого объекта и моментом обновления источника.  Это полезно, если требуется разрешить пользователям изменять свойство исходного объекта, но вы не хотите, чтобы каждое изменение немедленно зафиксировалось в источнике.  Например, предположим, что имеется текстовое поле, которое является двусторонней привязкой к свойству объекта данных.  Когда пользователь изменяет значение в текстовом поле, источник обновляется.  Чтобы включить этот сценарий, задайте для свойства <xref:System.Windows.Data.Binding.Mode%2A> <xref:System.Windows.Data.Binding> значение <xref:System.Windows.Data.BindingMode.TwoWay> а <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> — <xref:System.Windows.Data.UpdateSourceTrigger.PropertyChanged>.  Чтобы избежать обновления исходного объекта при каждом нажатии клавиши, присвойте свойству <xref:System.Windows.Data.BindingBase.Delay%2A> разумное значение, чтобы привязка обновлялась только по истечении этого периода времени после того, как пользователь остановил ввод.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FallbackValue">
      <MemberSignature Language="C#" Value="public object FallbackValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object FallbackValue" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingBase.FallbackValue" />
      <MemberSignature Language="VB.NET" Value="Public Property FallbackValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ FallbackValue { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FallbackValue : obj with get, set" Usage="System.Windows.Data.BindingBase.FallbackValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает значение, которое следует использовать, когда привязка не может вернуть значение.</summary>
        <value>Значение по умолчанию — <see cref="F:System.Windows.DependencyProperty.UnsetValue" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Привязка возвращает значение успешно, если:  
  
1.  Путь к источнику привязки разрешается успешно.  
  
2.  Преобразователь значений, если таковой имеется, может преобразовать результирующее значение.  
  
3.  Полученное значение допустимо для целевого свойства привязки (целевого объекта).  
  
 Если 1 и 2 возвращают <xref:System.Windows.DependencyProperty.UnsetValue?displayProperty=nameWithType>, свойство Target устанавливается в значение <xref:System.Windows.Data.BindingBase.FallbackValue%2A>, если оно доступно. Если <xref:System.Windows.Data.BindingBase.FallbackValue%2A>нет, используется значение по умолчанию целевого свойства.  
  
 Значение <xref:System.Windows.DependencyProperty.UnsetValue?displayProperty=nameWithType> не считается успешным возвращаемым значением.  
  
<a name="xamlTextUsage_FallbackValue"></a>   
## <a name="xaml-text-usage"></a>Использование текста XAML  
  
```  
<object FallbackValue="fallbackValue" />  
```  
  
 **ни**  
  
```  
<object>  
  <object.FallbackValue>  
    fallbackValue  
    </object.FallbackValue>  
</object>  
```  
  
<a name="xamlValues_FallbackValue"></a>   
## <a name="xaml-values"></a>Значения XAML  
 *фаллбакквалуе*  
 Значение атрибута или элемента объекта того же типа, что и целевое свойство. Сведения об использовании XAML см. в документации по этому типу. Этот тип может не поддерживать синтаксис атрибутов для своих значений или может не поддерживать синтаксис элемента объекта (для которого требуется конструктор без параметров для этого типа). Таким образом, тип целевого свойства влияет на синтаксис, используемый для значения свойства <xref:System.Windows.Data.BindingBase.FallbackValue%2A>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Data.IValueConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)" />
      </Docs>
    </Member>
    <Member MemberName="ProvideValue">
      <MemberSignature Language="C#" Value="public override sealed object ProvideValue (IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ProvideValue(class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingBase.ProvideValue(System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Function ProvideValue (serviceProvider As IServiceProvider) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ProvideValue(IServiceProvider ^ serviceProvider);" />
      <MemberSignature Language="F#" Value="override this.ProvideValue : IServiceProvider -&gt; obj" Usage="bindingBase.ProvideValue serviceProvider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="serviceProvider">Объект, способный предоставлять службы для расширения разметки. Может иметь значение <see langword="null" />.</param>
        <summary>Возвращает объект, который следует задать для свойства, в котором применяются эта привязка и это расширение.</summary>
        <returns>Значение, задаваемое для целевого свойства привязки.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Эта реализация обеспечивает поддержку базового синтаксиса для привязки с помощью [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] для всех предоставленных практически производных классов (<xref:System.Windows.Data.Binding>, <xref:System.Windows.Data.PriorityBinding>и <xref:System.Windows.Data.MultiBinding>).  
  
 Реализация класса <xref:System.Windows.Data.BindingBase> этого метода должна возвращать объект выражения, являющийся результатом привязки. Привязка свойства выполняется путем нацеливания заданной <xref:System.Windows.DependencyProperty> на заданный <xref:System.Windows.DependencyObject>. Эти два фрагмента информации передаются с помощью запроса на <xref:System.Windows.Markup.IProvideValueTarget>ную реализацию на `serviceProvider`, [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] которая [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] становится доступной во время синтаксического анализа привязки. Эта реализация базового класса отвечает за проверку допустимого <xref:System.Windows.DependencyProperty> и <xref:System.Windows.DependencyObject>. Если они найдены, фактическая реализация возвращения выражения привязки к различным производным классам реализована в соответствии с тем, что базовый класс вызывает внутренний абстрактный метод. В противном случае расширение возвращает сам объект привязки. Возвращение самой привязки приводит к ошибке несоответствия типов, но это не должно происходить при нормальных обстоятельствах.  
  
> [!IMPORTANT]
>  Поскольку синтаксис привязки через [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], реализованный в этом методе, зависит от реализации внутреннего переопределения, а так как сам <xref:System.Windows.Data.BindingBase.ProvideValue%2A?displayProperty=nameWithType> является запечатанным, Пользовательский класс привязки, производный от <xref:System.Windows.Data.BindingBase>, не будет правильно функционировать как расширение разметки [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeFallbackValue">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeFallbackValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeFallbackValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingBase.ShouldSerializeFallbackValue" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeFallbackValue () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeFallbackValue();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeFallbackValue : unit -&gt; bool" Usage="bindingBase.ShouldSerializeFallbackValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает значение, определяющее, должны ли процессы сериализации выполнять сериализацию действующего значения свойства <see cref="P:System.Windows.Data.BindingBase.FallbackValue" /> по экземплярам данного класса.</summary>
        <returns>Значение <see langword="true" />, если значение свойства <see cref="P:System.Windows.Data.BindingBase.FallbackValue" /> подлежит сериализации, в противном случае — значение <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeTargetNullValue">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeTargetNullValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeTargetNullValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingBase.ShouldSerializeTargetNullValue" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeTargetNullValue () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeTargetNullValue();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeTargetNullValue : unit -&gt; bool" Usage="bindingBase.ShouldSerializeTargetNullValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает значение, которое указывает, должно ли свойство <see cref="P:System.Windows.Data.BindingBase.TargetNullValue" /> быть сериализовано.</summary>
        <returns>Значение <see langword="true" />, если свойство<see cref="P:System.Windows.Data.BindingBase.TargetNullValue" /> должно сериализоваться; в противном случае — значение <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StringFormat">
      <MemberSignature Language="C#" Value="public string StringFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StringFormat" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingBase.StringFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property StringFormat As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StringFormat { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.StringFormat : string with get, set" Usage="System.Windows.Data.BindingBase.StringFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает строку, указывающую способ форматирования привязки при отображении связанного значения в виде строки.</summary>
        <value>Строка, указывающая способ форматирования привязки при отображении связанного значения в виде строки.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Data.BindingBase.StringFormat%2A> может быть стандартным, составным или пользовательским строковым форматом. Дополнительные сведения о строковых форматах см. в разделе [Типы форматирования](~/docs/standard/base-types/formatting-types.md).  
  
 Если заданы свойства <xref:System.Windows.Data.Binding.Converter%2A> и <xref:System.Windows.Data.BindingBase.StringFormat%2A>, то преобразователь применяется сначала к значению данных, а затем к применению <xref:System.Windows.Data.BindingBase.StringFormat%2A>.  
  
 При задании <xref:System.Windows.Data.BindingBase.StringFormat%2A> для <xref:System.Windows.Data.Binding> в составной строковой формат можно указать только один параметр.  
  
 При использовании <xref:System.Windows.Data.MultiBinding>свойство <xref:System.Windows.Data.BindingBase.StringFormat%2A> применяется только в том случае, если оно задано в <xref:System.Windows.Data.MultiBinding>.  Значение <xref:System.Windows.Data.BindingBase.StringFormat%2A>, заданное для любого дочернего объекта <xref:System.Windows.Data.Binding>, игнорируется.  Число параметров в формате составной строки не может превышать число дочерних <xref:System.Windows.Data.Binding> объектов в <xref:System.Windows.Data.MultiBinding>.  
  
 При использовании <xref:System.Windows.Data.PriorityBinding>можно задать <xref:System.Windows.Data.BindingBase.StringFormat%2A> на <xref:System.Windows.Data.PriorityBinding>, в дочерних объектах привязки или в обоих случаях.  Если для примененной дочерней привязки задано <xref:System.Windows.Data.BindingBase.StringFormat%2A>, то используется это значение.  Если для применяемой дочерней привязки не задан <xref:System.Windows.Data.BindingBase.StringFormat%2A>, то <xref:System.Windows.Data.BindingBase.StringFormat%2A> <xref:System.Windows.Data.PriorityBinding> применяется, если он задан.  
  
   
  
## Examples  
 В следующем примере используется свойство <xref:System.Windows.Data.BindingBase.StringFormat%2A> для преобразования `Price`, которая является <xref:System.Double>, в строку, представляющую валюту.  
  
 [!code-xaml[ContentStringSnippets#Binding](~/samples/snippets/csharp/VS_Snippets_Wpf/ContentStringSnippets/CSharp/Window1.xaml#binding)]  
  
 В следующем примере используется свойство <xref:System.Windows.Data.BindingBase.StringFormat%2A> в <xref:System.Windows.Data.MultiBinding> для создания строки, содержащей `Description` и `Price` каждого элемента в <xref:System.Windows.Controls.ListBox>.  
  
 [!code-xaml[ContentStringSnippets#MultiBinding](~/samples/snippets/csharp/VS_Snippets_Wpf/ContentStringSnippets/CSharp/Window1.xaml#multibinding)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetNullValue">
      <MemberSignature Language="C#" Value="public object TargetNullValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object TargetNullValue" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingBase.TargetNullValue" />
      <MemberSignature Language="VB.NET" Value="Public Property TargetNullValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ TargetNullValue { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TargetNullValue : obj with get, set" Usage="System.Windows.Data.BindingBase.TargetNullValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, используемое в целевом элементе, если значение источника равно <see langword="null" />.</summary>
        <value>Значение, используемое в целевом элементе, если значение источника равно <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlTextUsage_TargetNullValue"></a>   
## <a name="xaml-text-usage"></a>Использование текста XAML  
  
```  
<object TargetNullValue="nullValue" />  
```  
  
 **ни**  
  
```  
<object>  
  <object.TargetNullValue>  
    nullValue  
    </object.TargetNullValue>  
</object>  
```  
  
<a name="xamlValues_TargetNullValue"></a>   
## <a name="xaml-values"></a>Значения XAML  
 *nullValue*  
 Значение атрибута или элемента объекта того же типа, что и целевое свойство. Сведения об использовании XAML см. в документации по этому типу. Этот тип может не поддерживать синтаксис атрибутов для своих значений или может не поддерживать синтаксис элемента объекта (для которого требуется конструктор без параметров для этого типа).  
  
   
  
## Examples  
 В следующем примере <xref:System.Windows.Controls.TextBox> привязывается к свойству объекта.  Если свойство имеет значение `null`, <xref:System.Windows.Controls.TextBox> выводит «введите строку».  
  
 [!code-xaml[BindingGroupSnippets#TargetNullValue](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window3.xaml#targetnullvalue)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
