<Type Name="BindingOperations" FullName="System.Windows.Data.BindingOperations">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1bad6668821ef647796427e9bd39113a4682be9d" /><Meta Name="ms.sourcegitcommit" Value="0084afad1b3b1cb2c8ad2c142ae3597d08bad4a7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="10/31/2019" /><Meta Name="ms.locfileid" Value="73398644" /></Metadata><TypeSignature Language="C#" Value="public static class BindingOperations" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit BindingOperations extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Data.BindingOperations" />
  <TypeSignature Language="VB.NET" Value="Public Class BindingOperations" />
  <TypeSignature Language="C++ CLI" Value="public ref class BindingOperations abstract sealed" />
  <TypeSignature Language="F#" Value="type BindingOperations = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="c303b-101">Предоставляет статические методы для работы с привязками, включая объекты <see cref="T:System.Windows.Data.Binding" />, <see cref="T:System.Windows.Data.MultiBinding" /> и <see cref="T:System.Windows.Data.PriorityBinding" />.</span><span class="sxs-lookup"><span data-stu-id="c303b-101">Provides static methods to manipulate bindings, including <see cref="T:System.Windows.Data.Binding" />, <see cref="T:System.Windows.Data.MultiBinding" />, and <see cref="T:System.Windows.Data.PriorityBinding" /> objects.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c303b-102">Этот класс предоставляет набор статических методов, которые служат вспомогательными операциями для привязок данных.</span><span class="sxs-lookup"><span data-stu-id="c303b-102">This class exposes a set of static methods that serve as helper operations for data bindings.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AccessCollection">
      <MemberSignature Language="C#" Value="public static void AccessCollection (System.Collections.IEnumerable collection, Action accessMethod, bool writeAccess);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AccessCollection(class System.Collections.IEnumerable collection, class System.Action accessMethod, bool writeAccess) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingOperations.AccessCollection(System.Collections.IEnumerable,System.Action,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AccessCollection (collection As IEnumerable, accessMethod As Action, writeAccess As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AccessCollection(System::Collections::IEnumerable ^ collection, Action ^ accessMethod, bool writeAccess);" />
      <MemberSignature Language="F#" Value="static member AccessCollection : System.Collections.IEnumerable * Action * bool -&gt; unit" Usage="System.Windows.Data.BindingOperations.AccessCollection (collection, accessMethod, writeAccess)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="System.Collections.IEnumerable" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="accessMethod" Type="System.Action" Index="1" FrameworkAlternate="netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="writeAccess" Type="System.Boolean" Index="2" FrameworkAlternate="netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="collection"><span data-ttu-id="c303b-103">Коллекция для доступа.</span><span class="sxs-lookup"><span data-stu-id="c303b-103">The collection to access.</span></span></param>
        <param name="accessMethod"><span data-ttu-id="c303b-104">Действие, выполняемое для коллекции.</span><span class="sxs-lookup"><span data-stu-id="c303b-104">The action to perform on the collection.</span></span></param>
        <param name="writeAccess"><span data-ttu-id="c303b-105">Значение <see langword="true" />, если метод <paramref name="accessMethod" /> будет производить запись в коллекцию; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c303b-105"><see langword="true" /> if <paramref name="accessMethod" /> will write to the collection; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="c303b-106">Предоставляет доступ к коллекции с помощью механизма синхронизации, заданного приложением при вызове EnableCollectionSynchronization.</span><span class="sxs-lookup"><span data-stu-id="c303b-106">Provides access to a collection by using the synchronization mechanism that the application specified when it called EnableCollectionSynchronization.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearAllBindings">
      <MemberSignature Language="C#" Value="public static void ClearAllBindings (System.Windows.DependencyObject target);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ClearAllBindings(class System.Windows.DependencyObject target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingOperations.ClearAllBindings(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ClearAllBindings (target As DependencyObject)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ClearAllBindings(System::Windows::DependencyObject ^ target);" />
      <MemberSignature Language="F#" Value="static member ClearAllBindings : System.Windows.DependencyObject -&gt; unit" Usage="System.Windows.Data.BindingOperations.ClearAllBindings target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="c303b-107">Объект, из которого следует удалить привязки.</span><span class="sxs-lookup"><span data-stu-id="c303b-107">The object from which to remove bindings.</span></span></param>
        <summary><span data-ttu-id="c303b-108">Удаляет все привязки, включая привязки типа <see cref="T:System.Windows.Data.Binding" />, <see cref="T:System.Windows.Data.MultiBinding" /> и <see cref="T:System.Windows.Data.PriorityBinding" />, из указанного объекта <see cref="T:System.Windows.DependencyObject" />.</span><span class="sxs-lookup"><span data-stu-id="c303b-108">Removes all bindings, including bindings of type <see cref="T:System.Windows.Data.Binding" />, <see cref="T:System.Windows.Data.MultiBinding" />, and <see cref="T:System.Windows.Data.PriorityBinding" />, from the specified <see cref="T:System.Windows.DependencyObject" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c303b-109">Если указанный объект не привязан к данным, этот метод не оказывает никакого влияния.</span><span class="sxs-lookup"><span data-stu-id="c303b-109">If the specified object is not data-bound, this method has no effect.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c303b-110">Если <paramref name="target" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c303b-110">If <paramref name="target" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ClearBinding">
      <MemberSignature Language="C#" Value="public static void ClearBinding (System.Windows.DependencyObject target, System.Windows.DependencyProperty dp);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ClearBinding(class System.Windows.DependencyObject target, class System.Windows.DependencyProperty dp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingOperations.ClearBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ClearBinding (target As DependencyObject, dp As DependencyProperty)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ClearBinding(System::Windows::DependencyObject ^ target, System::Windows::DependencyProperty ^ dp);" />
      <MemberSignature Language="F#" Value="static member ClearBinding : System.Windows.DependencyObject * System.Windows.DependencyProperty -&gt; unit" Usage="System.Windows.Data.BindingOperations.ClearBinding (target, dp)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="c303b-111">Объект, из которого нужно удалить привязку.</span><span class="sxs-lookup"><span data-stu-id="c303b-111">The object from which to remove the binding.</span></span></param>
        <param name="dp"><span data-ttu-id="c303b-112">Свойство зависимостей, из которого нужно удалить привязку.</span><span class="sxs-lookup"><span data-stu-id="c303b-112">The dependency property from which to remove the binding.</span></span></param>
        <summary><span data-ttu-id="c303b-113">Удаляет привязку из свойства, если она существует.</span><span class="sxs-lookup"><span data-stu-id="c303b-113">Removes the binding from a property if there is one.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c303b-114">Если заданное свойство привязано к данным с помощью <xref:System.Windows.Data.Binding>, <xref:System.Windows.Data.PriorityBinding>или <xref:System.Windows.Data.MultiBinding>, этот метод удаляет соответствующее выражение привязки и восстанавливает значение свойства до тех пор, пока не было задано локальное значение с помощью привязки.</span><span class="sxs-lookup"><span data-stu-id="c303b-114">If the given property is data-bound with a <xref:System.Windows.Data.Binding>, <xref:System.Windows.Data.PriorityBinding>, or <xref:System.Windows.Data.MultiBinding>, this method removes the corresponding binding expression and restores the value of the property to what it was before any local value was set through the binding.</span></span>  
  
 <span data-ttu-id="c303b-115">Если заданное свойство не привязано к данным, этот метод не оказывает никакого влияния.</span><span class="sxs-lookup"><span data-stu-id="c303b-115">If the given property is not data-bound, this method has no effect.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c303b-116">Параметры <paramref name="target" /> и <paramref name="dp" /> не могут иметь значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c303b-116">The <paramref name="target" /> and <paramref name="dp" /> parameters cannot be <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CollectionRegistering">
      <MemberSignature Language="C#" Value="public static event EventHandler&lt;System.Windows.Data.CollectionRegisteringEventArgs&gt; CollectionRegistering;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Data.CollectionRegisteringEventArgs&gt; CollectionRegistering" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Data.BindingOperations.CollectionRegistering" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event CollectionRegistering As EventHandler(Of CollectionRegisteringEventArgs) " FrameworkAlternate="netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event EventHandler&lt;System::Windows::Data::CollectionRegisteringEventArgs ^&gt; ^ CollectionRegistering;" />
      <MemberSignature Language="F#" Value="member this.CollectionRegistering : EventHandler&lt;System.Windows.Data.CollectionRegisteringEventArgs&gt; " Usage="member this.CollectionRegistering : System.EventHandler&lt;System.Windows.Data.CollectionRegisteringEventArgs&gt; " />
      <MemberSignature Language="VB.NET" Value="Public Shared Event CollectionRegistering As EventHandler(Of CollectionRegisteringEventArgs) " FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Data.CollectionRegisteringEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c303b-117">Возникает, когда система привязки данных замечает коллекцию.</span><span class="sxs-lookup"><span data-stu-id="c303b-117">Occurs when the data-binding system notices a collection.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CollectionViewRegistering">
      <MemberSignature Language="C#" Value="public static event EventHandler&lt;System.Windows.Data.CollectionViewRegisteringEventArgs&gt; CollectionViewRegistering;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Data.CollectionViewRegisteringEventArgs&gt; CollectionViewRegistering" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Data.BindingOperations.CollectionViewRegistering" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event CollectionViewRegistering As EventHandler(Of CollectionViewRegisteringEventArgs) " FrameworkAlternate="netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event EventHandler&lt;System::Windows::Data::CollectionViewRegisteringEventArgs ^&gt; ^ CollectionViewRegistering;" />
      <MemberSignature Language="F#" Value="member this.CollectionViewRegistering : EventHandler&lt;System.Windows.Data.CollectionViewRegisteringEventArgs&gt; " Usage="member this.CollectionViewRegistering : System.EventHandler&lt;System.Windows.Data.CollectionViewRegisteringEventArgs&gt; " />
      <MemberSignature Language="VB.NET" Value="Public Shared Event CollectionViewRegistering As EventHandler(Of CollectionViewRegisteringEventArgs) " FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Data.CollectionViewRegisteringEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c303b-118">Возникает, когда система привязки данных замечает представление коллекции.</span><span class="sxs-lookup"><span data-stu-id="c303b-118">Occurs when the data-binding system notices a collection view.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisableCollectionSynchronization">
      <MemberSignature Language="C#" Value="public static void DisableCollectionSynchronization (System.Collections.IEnumerable collection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DisableCollectionSynchronization(class System.Collections.IEnumerable collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingOperations.DisableCollectionSynchronization(System.Collections.IEnumerable)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub DisableCollectionSynchronization (collection As IEnumerable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DisableCollectionSynchronization(System::Collections::IEnumerable ^ collection);" />
      <MemberSignature Language="F#" Value="static member DisableCollectionSynchronization : System.Collections.IEnumerable -&gt; unit" Usage="System.Windows.Data.BindingOperations.DisableCollectionSynchronization collection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="System.Collections.IEnumerable" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="collection"><span data-ttu-id="c303b-119">Коллекция, у которой требуется удалить синхронизируемый доступ.</span><span class="sxs-lookup"><span data-stu-id="c303b-119">The collection to remove synchronized access from.</span></span></param>
        <summary><span data-ttu-id="c303b-120">Удаляет синхронизацию, зарегистрированную для указанной коллекции.</span><span class="sxs-lookup"><span data-stu-id="c303b-120">Remove the synchronization registered for the specified collection.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisconnectedSource">
      <MemberSignature Language="C#" Value="public static object DisconnectedSource { get; }" />
      <MemberSignature Language="ILAsm" Value=".property object DisconnectedSource" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingOperations.DisconnectedSource" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DisconnectedSource As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Object ^ DisconnectedSource { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DisconnectedSource : obj" Usage="System.Windows.Data.BindingOperations.DisconnectedSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c303b-121">Получает объект, заменяющий <see cref="P:System.Windows.FrameworkElement.DataContext" /> при удалении контейнера элементов из визуального дерева.</span><span class="sxs-lookup"><span data-stu-id="c303b-121">Gets an object that replaces the <see cref="P:System.Windows.FrameworkElement.DataContext" /> when an item container is removed from the visual tree.</span></span></summary>
        <value><span data-ttu-id="c303b-122">Объект, заменяющий <see cref="P:System.Windows.FrameworkElement.DataContext" /> при удалении контейнера элементов из визуального дерева.</span><span class="sxs-lookup"><span data-stu-id="c303b-122">An object that replaces the <see cref="P:System.Windows.FrameworkElement.DataContext" /> when an item container is removed from the visual tree.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c303b-123">Это свойство используется, если необходимо работать с <xref:System.Windows.FrameworkElement.DataContext%2A> контейнера элементов.</span><span class="sxs-lookup"><span data-stu-id="c303b-123">Use this property if you need to deal with the <xref:System.Windows.FrameworkElement.DataContext%2A> of an item container.</span></span>  <span data-ttu-id="c303b-124">Контейнер элемента — это элемент пользовательского интерфейса, который отображает элемент в <xref:System.Windows.Controls.ItemsControl>.</span><span class="sxs-lookup"><span data-stu-id="c303b-124">An item container is the UI element that displays an item in an <xref:System.Windows.Controls.ItemsControl>.</span></span>  <span data-ttu-id="c303b-125">Если <xref:System.Windows.Controls.ItemsControl> данные привязаны к коллекции, для каждого элемента создается контейнер элементов.</span><span class="sxs-lookup"><span data-stu-id="c303b-125">When an <xref:System.Windows.Controls.ItemsControl> is data bound to a collection, an item container is generated for each item.</span></span>  <span data-ttu-id="c303b-126">В некоторых случаях контейнеры элементов удаляются из визуального дерева.</span><span class="sxs-lookup"><span data-stu-id="c303b-126">In some cases, item containers are removed from the visual tree.</span></span>  <span data-ttu-id="c303b-127">Два типичных случая удаления контейнера элементов — при удалении элемента из базовой коллекции и при включении виртуализации на <xref:System.Windows.Controls.ItemsControl>.</span><span class="sxs-lookup"><span data-stu-id="c303b-127">Two typical cases where an item container is removed are when an item is removed from the underlying collection and when virtualization is enabled on the <xref:System.Windows.Controls.ItemsControl>.</span></span>  <span data-ttu-id="c303b-128">В этих случаях свойству <xref:System.Windows.FrameworkElement.DataContext%2A> контейнера элемента будет присвоено значение свойства <xref:System.Windows.Data.BindingOperations.DisconnectedSource%2A> необходимо проверить, равен ли <xref:System.Windows.FrameworkElement.DataContext%2A> <xref:System.Windows.Data.BindingOperations.DisconnectedSource%2A>, прежде чем обращаться к <xref:System.Windows.FrameworkElement.DataContext%2A> в событии <xref:System.Windows.FrameworkElement.DataContextChanged> для контейнеров элементов.</span><span class="sxs-lookup"><span data-stu-id="c303b-128">In these cases, the <xref:System.Windows.FrameworkElement.DataContext%2A> property of the item container will be set to the <xref:System.Windows.Data.BindingOperations.DisconnectedSource%2A> property  You should check whether the <xref:System.Windows.FrameworkElement.DataContext%2A> is equal to the <xref:System.Windows.Data.BindingOperations.DisconnectedSource%2A> before accessing the <xref:System.Windows.FrameworkElement.DataContext%2A> in the <xref:System.Windows.FrameworkElement.DataContextChanged> event for item containers.</span></span> <span data-ttu-id="c303b-129">Дополнительные сведения о контейнерах элементов и виртуализации см. в разделе Примечания в классе <xref:System.Windows.Controls.VirtualizingStackPanel>.</span><span class="sxs-lookup"><span data-stu-id="c303b-129">For more information about item containers and virtualization, see the remarks in the <xref:System.Windows.Controls.VirtualizingStackPanel> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="EnableCollectionSynchronization">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c303b-130">Позволяет объекту <see cref="T:System.Windows.Data.CollectionView" /> участвовать в синхронизированном доступе к коллекции, используемой в нескольких потоках.</span><span class="sxs-lookup"><span data-stu-id="c303b-130">Enables a <see cref="T:System.Windows.Data.CollectionView" /> object to participate in synchronized access to a collection that is used on multiple threads.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="c303b-131">Приложение WPF может отображать коллекцию данных с помощью <xref:System.Windows.Controls.ItemsControl> или одного из его подклассов (<xref:System.Windows.Controls.ListBox>, <xref:System.Windows.Controls.DataGrid>, <xref:System.Windows.Controls.TreeView>, <xref:System.Windows.Controls.ListView>и т. д.).</span><span class="sxs-lookup"><span data-stu-id="c303b-131">A WPF application can display a collection of data using an <xref:System.Windows.Controls.ItemsControl> or one of its subclasses (<xref:System.Windows.Controls.ListBox>, <xref:System.Windows.Controls.DataGrid>, <xref:System.Windows.Controls.TreeView>, <xref:System.Windows.Controls.ListView>, etc.).</span></span><span data-ttu-id="c303b-132"> WPF обращается к коллекции по каналу через подкласс <xref:System.Windows.Data.CollectionView>.</span><span class="sxs-lookup"><span data-stu-id="c303b-132"> WPF channels all its access to the collection through a subclass of <xref:System.Windows.Data.CollectionView>.</span></span><span data-ttu-id="c303b-133"> И <xref:System.Windows.Controls.ItemsControl>, и <xref:System.Windows.Data.CollectionView> имеют сходство с потоком, в котором была создана <xref:System.Windows.Controls.ItemsControl>, что означает, что их использование в другом потоке запрещено и создает исключение.</span><span class="sxs-lookup"><span data-stu-id="c303b-133"> Both the <xref:System.Windows.Controls.ItemsControl> and the <xref:System.Windows.Data.CollectionView> have affinity to the thread on which the <xref:System.Windows.Controls.ItemsControl> was created, meaning that using them on a different thread is forbidden and throws an exception.</span></span><span data-ttu-id="c303b-134"> В действительности это ограничение также применяется к коллекции.</span><span class="sxs-lookup"><span data-stu-id="c303b-134"> In effect, this restriction applies to the collection as well.</span></span>
 
<span data-ttu-id="c303b-135">Может потребоваться использовать коллекцию в нескольких потоках.</span><span class="sxs-lookup"><span data-stu-id="c303b-135">You may want to use the collection on multiple threads.</span></span><span data-ttu-id="c303b-136">   Например, необходимо обновить коллекцию (добавить или удалить элементы) в потоке сбора данных, отображая результаты в потоке пользовательского интерфейса, чтобы пользовательский интерфейс оставался в рабочем процессе во время сбора данных.</span><span class="sxs-lookup"><span data-stu-id="c303b-136">   For example, you want to update the collection (add or remove items) on a "data-gathering" thread, while displaying the results on a "user interface" thread, so that the UI remains responsive while data-gathering is happening.</span></span><span data-ttu-id="c303b-137"> В такой ситуации вы несете ответственность за обеспечение синхронизированного ("потокобезопасным") доступа к коллекции.</span><span class="sxs-lookup"><span data-stu-id="c303b-137"> In such a situation, you are responsible for ensuring synchronized ("thread-safe") access to the collection.</span></span><span data-ttu-id="c303b-138">   Обычно это делается с помощью простого механизма блокировки или более тщательного механизма синхронизации, такого как семафоры, события сброса и т. д.   хотя необходимо синхронизировать доступ приложения к коллекции, необходимо также гарантировать, что доступ из WPF (в частности <xref:System.Windows.Data.CollectionView>) участвуют в одном механизме синхронизации.</span><span class="sxs-lookup"><span data-stu-id="c303b-138">   This is typically done using either a simple lock mechanism or a more elaborate synchronization mechanism such as semaphores, reset events, etc.   While you must synchronize your application's access to the collection, you must also guarantee that access from WPF (specifically from <xref:System.Windows.Data.CollectionView>) participates in the same synchronization mechanism.</span></span><span data-ttu-id="c303b-139">  Это делается путем вызова метода <xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization%2A>.</span><span class="sxs-lookup"><span data-stu-id="c303b-139">  You do this by calling the <xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization%2A> method.</span></span>
 
<span data-ttu-id="c303b-140">Чтобы использовать коллекцию в нескольких потоках, одним из которых является поток пользовательского интерфейса, владеющий <xref:System.Windows.Controls.ItemsControl>, приложение имеет следующие обязанности:</span><span class="sxs-lookup"><span data-stu-id="c303b-140">To use a collection on multiple threads, one of which is the UI thread that owns the <xref:System.Windows.Controls.ItemsControl>, an application has the following responsibilities:</span></span>

1. <span data-ttu-id="c303b-141">Выберите механизм синхронизации.</span><span class="sxs-lookup"><span data-stu-id="c303b-141">Choose a synchronization mechanism.</span></span>

1. <span data-ttu-id="c303b-142">Синхронизировать весь доступ из приложения к коллекции с помощью этого механизма.</span><span class="sxs-lookup"><span data-stu-id="c303b-142">Synchronize all access from the application to the collection using that mechanism.</span></span>

1. <span data-ttu-id="c303b-143">Вызовите <xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization%2A>, чтобы сообщить платформе WPF о механизме.</span><span class="sxs-lookup"><span data-stu-id="c303b-143">Call <xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization%2A> to inform WPF of the mechanism.</span></span>

   - <span data-ttu-id="c303b-144">Вызов должен осуществляться в потоке пользовательского интерфейса.</span><span class="sxs-lookup"><span data-stu-id="c303b-144">The call must occur on the UI thread.</span></span>

   - <span data-ttu-id="c303b-145">Вызов должен осуществляться перед использованием коллекции в другом потоке или перед присоединением коллекции к <xref:System.Windows.Controls.ItemsControl>, в зависимости от того, какое значение будет позже.</span><span class="sxs-lookup"><span data-stu-id="c303b-145">The call must occur before using the collection on a different thread or before attaching the collection to the <xref:System.Windows.Controls.ItemsControl>, whichever is later.</span></span>

   - <span data-ttu-id="c303b-146">Вызовите перегрузку <xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)>, если используется простой механизм блокировки; вызовите перегрузку <xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)>, если используется более сложный механизм.</span><span class="sxs-lookup"><span data-stu-id="c303b-146">Call the <xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)> overload if using a simple lock mechanism; call the <xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)> overload if using a more elaborate mechanism.</span></span>

1. <span data-ttu-id="c303b-147">Убедитесь, что изменение в коллекции и уведомление об этом изменении (с помощью <xref:System.Collections.Specialized.INotifyCollectionChanged>) являются атомарными; нет доступа из других потоков.</span><span class="sxs-lookup"><span data-stu-id="c303b-147">Ensure that a change to the collection and the notification of that change (through <xref:System.Collections.Specialized.INotifyCollectionChanged>) are atomic; no access from other threads can intervene.</span></span><span data-ttu-id="c303b-148">  (Обычно это бесплатно.</span><span class="sxs-lookup"><span data-stu-id="c303b-148">  (This is usually free.</span></span> <span data-ttu-id="c303b-149">Например, <xref:System.Collections.ObjectModel.ObservableCollection%601> гарантирует это при условии, что все изменения защищены синхронизацией.)</span><span class="sxs-lookup"><span data-stu-id="c303b-149">For instance, <xref:System.Collections.ObjectModel.ObservableCollection%601> guarantees this, provided that all changes are protected by synchronization.)</span></span>

1. <span data-ttu-id="c303b-150">При вызове <xref:System.Windows.Data.BindingOperations.DisableCollectionSynchronization%2A>этот вызов также должен выполняться в потоке пользовательского интерфейса.</span><span class="sxs-lookup"><span data-stu-id="c303b-150">If you call <xref:System.Windows.Data.BindingOperations.DisableCollectionSynchronization%2A>, that call must also occur on the UI thread.</span></span>

1. <span data-ttu-id="c303b-151">Если вы хотите использовать одну и ту же коллекцию в нескольких потоках пользовательского интерфейса, необходимо по отдельности вызвать <xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization%2A> (и <xref:System.Windows.Data.BindingOperations.DisableCollectionSynchronization%2A>при необходимости) в каждом потоке пользовательского интерфейса.</span><span class="sxs-lookup"><span data-stu-id="c303b-151">If you want to use the same collection on multiple UI threads, you must call <xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization%2A> (and <xref:System.Windows.Data.BindingOperations.DisableCollectionSynchronization%2A>, if needed) separately on each UI thread.</span></span>

1. <span data-ttu-id="c303b-152">Избегайте взаимоблокировок.</span><span class="sxs-lookup"><span data-stu-id="c303b-152">Avoid deadlock.</span></span><span data-ttu-id="c303b-153">  Это уже является обязанностью приложения после того, как она выбрала синхронизацию, но также должна учитывать участие в синхронизации WPF, как описано в следующем абзаце.</span><span class="sxs-lookup"><span data-stu-id="c303b-153">  This is already the application's responsibility once it chooses to use synchronization, but it must also take into account WPF's participation in the synchronization, as discussed in the following paragraph.</span></span>

<span data-ttu-id="c303b-154">В случае возврата WPF обеспечивает следующее поведение:</span><span class="sxs-lookup"><span data-stu-id="c303b-154">In return, WPF provides the following behavior:</span></span>

- <span data-ttu-id="c303b-155"><xref:System.Windows.Data.CollectionView> обращается к коллекции, используя заданный механизм синхронизации.</span><span class="sxs-lookup"><span data-stu-id="c303b-155">The <xref:System.Windows.Data.CollectionView> accesses the collection using the given synchronization mechanism.</span></span>

- <span data-ttu-id="c303b-156"><xref:System.Windows.Data.CollectionView> поддерживает "теневую копию" коллекции для использования в потоке пользовательского интерфейса.</span><span class="sxs-lookup"><span data-stu-id="c303b-156">The <xref:System.Windows.Data.CollectionView> maintains a "shadow copy" of the collection for use on the UI thread.</span></span>

- <span data-ttu-id="c303b-157"><xref:System.Windows.Data.CollectionView.CollectionChanged> события помещаются в очередь по мере их прибытия (в любом потоке).</span><span class="sxs-lookup"><span data-stu-id="c303b-157"><xref:System.Windows.Data.CollectionView.CollectionChanged> events are queued up as they arrive (on any thread).</span></span>

- <span data-ttu-id="c303b-158">Ожидающие события применяются к теневому копированию асинхронно в потоке пользовательского интерфейса, когда у него есть возможность сделать это.</span><span class="sxs-lookup"><span data-stu-id="c303b-158">Pending events are applied to the shadow copy asynchronously on the UI thread when it has the opportunity to do so.</span></span>

- <span data-ttu-id="c303b-159"><xref:System.Windows.Data.CollectionView> не будет напрямую использовать любой другой механизм синхронизации, видимый для приложения.</span><span class="sxs-lookup"><span data-stu-id="c303b-159">The <xref:System.Windows.Data.CollectionView> won't directly use any other synchronization mechanism visible to the application.</span></span> <span data-ttu-id="c303b-160">Это способ предотвращения взаимоблокировок в WPF (см. предыдущий элемент 7).</span><span class="sxs-lookup"><span data-stu-id="c303b-160">This is WPF's way of helping to avoid deadlock (see the previous item 7).</span></span>   

<span data-ttu-id="c303b-161">В итоге вы можете изменить коллекцию в любом потоке, и эти изменения отобразятся в <xref:System.Windows.Controls.ItemsControl>, когда поток пользовательского интерфейса имеет время на «отследить».</span><span class="sxs-lookup"><span data-stu-id="c303b-161">The net effect is that you can change the collection on any thread, and those changes eventually appear in the <xref:System.Windows.Controls.ItemsControl> when the UI thread has time to "catch up".</span></span><span data-ttu-id="c303b-162">  Реализация была настроена для регулирования скорости передачи изменений в поток пользовательского интерфейса, чтобы обеспечить фоновый поток от насыщенного потока пользовательского интерфейса и избежать ответа на обычные входные данные пользователя.</span><span class="sxs-lookup"><span data-stu-id="c303b-162">  The implementation has been tuned to throttle the rate that changes flow into the UI thread to keep background threads from saturating the UI thread and starving the response to normal user input.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="EnableCollectionSynchronization">
      <MemberSignature Language="C#" Value="public static void EnableCollectionSynchronization (System.Collections.IEnumerable collection, object lockObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void EnableCollectionSynchronization(class System.Collections.IEnumerable collection, object lockObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub EnableCollectionSynchronization (collection As IEnumerable, lockObject As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void EnableCollectionSynchronization(System::Collections::IEnumerable ^ collection, System::Object ^ lockObject);" />
      <MemberSignature Language="F#" Value="static member EnableCollectionSynchronization : System.Collections.IEnumerable * obj -&gt; unit" Usage="System.Windows.Data.BindingOperations.EnableCollectionSynchronization (collection, lockObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="System.Collections.IEnumerable" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="lockObject" Type="System.Object" Index="1" FrameworkAlternate="netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="collection"><span data-ttu-id="c303b-163">Коллекция, которой требуется синхронизированный доступ.</span><span class="sxs-lookup"><span data-stu-id="c303b-163">The collection that needs synchronized access.</span></span></param>
        <param name="lockObject"><span data-ttu-id="c303b-164">Объект, который будет блокироваться при доступе к коллекции.</span><span class="sxs-lookup"><span data-stu-id="c303b-164">The object to lock when accessing the collection.</span></span></param>
        <summary><span data-ttu-id="c303b-165">Позволяет объекту <see cref="T:System.Windows.Data.CollectionView" /> участвовать в синхронизированном доступе к коллекции, используемой в нескольких потоках, с помощью простого механизма блокировки.</span><span class="sxs-lookup"><span data-stu-id="c303b-165">Enables a <see cref="T:System.Windows.Data.CollectionView" /> object to participate in synchronized access to a collection used on multiple threads by using a simple locking mechanism.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  

## Remarks

<span data-ttu-id="c303b-166">Приложение WPF может отображать коллекцию данных с помощью <xref:System.Windows.Controls.ItemsControl> или одного из его подклассов (<xref:System.Windows.Controls.ListBox>, <xref:System.Windows.Controls.DataGrid>, <xref:System.Windows.Controls.TreeView>, <xref:System.Windows.Controls.ListView>и т. д.).</span><span class="sxs-lookup"><span data-stu-id="c303b-166">A WPF application can display a collection of data using an <xref:System.Windows.Controls.ItemsControl> or one of its subclasses (<xref:System.Windows.Controls.ListBox>, <xref:System.Windows.Controls.DataGrid>, <xref:System.Windows.Controls.TreeView>, <xref:System.Windows.Controls.ListView>, etc.).</span></span><span data-ttu-id="c303b-167"> WPF обращается к коллекции по каналу через подкласс <xref:System.Windows.Data.CollectionView>.</span><span class="sxs-lookup"><span data-stu-id="c303b-167"> WPF channels all its access to the collection through a subclass of <xref:System.Windows.Data.CollectionView>.</span></span><span data-ttu-id="c303b-168"> И <xref:System.Windows.Controls.ItemsControl>, и <xref:System.Windows.Data.CollectionView> имеют сходство с потоком, в котором была создана <xref:System.Windows.Controls.ItemsControl>, что означает, что их использование в другом потоке запрещено и создает исключение.</span><span class="sxs-lookup"><span data-stu-id="c303b-168"> Both the <xref:System.Windows.Controls.ItemsControl> and the <xref:System.Windows.Data.CollectionView> have affinity to the thread on which the <xref:System.Windows.Controls.ItemsControl> was created, meaning that using them on a different thread is forbidden and throws an exception.</span></span><span data-ttu-id="c303b-169"> В действительности это ограничение также применяется к коллекции.</span><span class="sxs-lookup"><span data-stu-id="c303b-169"> In effect, this restriction applies to the collection as well.</span></span>
 
<span data-ttu-id="c303b-170">Может потребоваться использовать коллекцию в нескольких потоках.</span><span class="sxs-lookup"><span data-stu-id="c303b-170">You may want to use the collection on multiple threads.</span></span><span data-ttu-id="c303b-171">   Например, необходимо обновить коллекцию (добавить или удалить элементы) в потоке сбора данных, отображая результаты в потоке пользовательского интерфейса, чтобы пользовательский интерфейс оставался в рабочем процессе во время сбора данных.</span><span class="sxs-lookup"><span data-stu-id="c303b-171">   For example, you want to update the collection (add or remove items) on a "data-gathering" thread, while displaying the results on a "user interface" thread, so that the UI remains responsive while data-gathering is happening.</span></span><span data-ttu-id="c303b-172"> В такой ситуации вы несете ответственность за обеспечение синхронизированного ("потокобезопасным") доступа к коллекции и гарантирует, что доступ из WPF (в частности <xref:System.Windows.Data.CollectionView>) участвует в одном механизме синхронизации.</span><span class="sxs-lookup"><span data-stu-id="c303b-172"> In such a situation, you are responsible for ensuring synchronized ("thread-safe") access to the collection and for guaranteeing that access from WPF (specifically from <xref:System.Windows.Data.CollectionView>) participates in the same synchronization mechanism.</span></span><span data-ttu-id="c303b-173"> Вызвав метод <xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)>, можно сделать это с помощью простого механизма блокировки.</span><span class="sxs-lookup"><span data-stu-id="c303b-173"> By calling the <xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)> method, you can do this by using a simple lock mechanism.</span></span> 
 
<span data-ttu-id="c303b-174">Чтобы использовать коллекцию в нескольких потоках, одним из которых является поток пользовательского интерфейса, владеющий <xref:System.Windows.Controls.ItemsControl>, необходимо выполнить следующие действия.</span><span class="sxs-lookup"><span data-stu-id="c303b-174">To use a collection on multiple threads, one of which is the UI thread that owns the <xref:System.Windows.Controls.ItemsControl>, you must do the following:</span></span>

1. <span data-ttu-id="c303b-175">Создайте экземпляр объекта для блокировки при доступе к коллекции.</span><span class="sxs-lookup"><span data-stu-id="c303b-175">Instantiate an object to lock when accessing the collection.</span></span>

1. <span data-ttu-id="c303b-176">Синхронизировать весь доступ из приложения к коллекции, заключив этот объект.</span><span class="sxs-lookup"><span data-stu-id="c303b-176">Synchronize all access from the application to the collection by locking that object.</span></span>

1. <span data-ttu-id="c303b-177">Вызовите <xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)>, чтобы сообщить WPF, что вы используете простой механизм блокировки.</span><span class="sxs-lookup"><span data-stu-id="c303b-177">Call <xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)> to inform WPF that you are using a simple lock mechanism.</span></span>

   - <span data-ttu-id="c303b-178">Вызов должен осуществляться в потоке пользовательского интерфейса.</span><span class="sxs-lookup"><span data-stu-id="c303b-178">The call must occur on the UI thread.</span></span>

   - <span data-ttu-id="c303b-179">Вызов должен осуществляться перед использованием коллекции в другом потоке или перед присоединением коллекции к <xref:System.Windows.Controls.ItemsControl>, в зависимости от того, какое значение будет позже.</span><span class="sxs-lookup"><span data-stu-id="c303b-179">The call must occur before using the collection on a different thread or before attaching the collection to the <xref:System.Windows.Controls.ItemsControl>, whichever is later.</span></span>

1. <span data-ttu-id="c303b-180">Убедитесь, что изменение в коллекции и уведомление об этом изменении (с помощью <xref:System.Collections.Specialized.INotifyCollectionChanged>) являются атомарными; нет доступа из других потоков.</span><span class="sxs-lookup"><span data-stu-id="c303b-180">Ensure that a change to the collection and the notification of that change (through <xref:System.Collections.Specialized.INotifyCollectionChanged>) are atomic; no access from other threads can intervene.</span></span><span data-ttu-id="c303b-181">  (Обычно это бесплатно.</span><span class="sxs-lookup"><span data-stu-id="c303b-181">  (This is usually free.</span></span> <span data-ttu-id="c303b-182">Например, <xref:System.Collections.ObjectModel.ObservableCollection%601> гарантирует это при условии, что все изменения защищены синхронизацией.)</span><span class="sxs-lookup"><span data-stu-id="c303b-182">For instance, <xref:System.Collections.ObjectModel.ObservableCollection%601> guarantees this, provided that all changes are protected by synchronization.)</span></span>

1. <span data-ttu-id="c303b-183">При вызове <xref:System.Windows.Data.BindingOperations.DisableCollectionSynchronization%2A>этот вызов также должен выполняться в потоке пользовательского интерфейса.</span><span class="sxs-lookup"><span data-stu-id="c303b-183">If you call <xref:System.Windows.Data.BindingOperations.DisableCollectionSynchronization%2A>, that call must also occur on the UI thread.</span></span>

1. <span data-ttu-id="c303b-184">Если вы хотите использовать одну и ту же коллекцию в нескольких потоках пользовательского интерфейса, необходимо по отдельности вызвать <xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization%2A> (и <xref:System.Windows.Data.BindingOperations.DisableCollectionSynchronization%2A>при необходимости) в каждом потоке пользовательского интерфейса.</span><span class="sxs-lookup"><span data-stu-id="c303b-184">If you want to use the same collection on multiple UI threads, you must call <xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization%2A> (and <xref:System.Windows.Data.BindingOperations.DisableCollectionSynchronization%2A>, if needed) separately on each UI thread.</span></span>

1. <span data-ttu-id="c303b-185">Избегайте взаимоблокировок.</span><span class="sxs-lookup"><span data-stu-id="c303b-185">Avoid deadlock.</span></span><span data-ttu-id="c303b-186">  Это уже является обязанностью приложения после того, как она выбрала синхронизацию, но также должна учитывать участие WPF в синхронизации.</span><span class="sxs-lookup"><span data-stu-id="c303b-186">  This is already the application's responsibility once it chooses to use synchronization, but it must also take into account WPF's participation in the synchronization.</span></span><span data-ttu-id="c303b-187"> (Дополнительные сведения см. ниже.)</span><span class="sxs-lookup"><span data-stu-id="c303b-187"> (See more, below.)</span></span>

<span data-ttu-id="c303b-188">В случае возврата WPF обеспечивает следующее поведение:</span><span class="sxs-lookup"><span data-stu-id="c303b-188">In return, WPF provides the following behavior:</span></span>

- <span data-ttu-id="c303b-189"><xref:System.Windows.Data.CollectionView> обращается к коллекции с помощью механизма блокировки.</span><span class="sxs-lookup"><span data-stu-id="c303b-189">The <xref:System.Windows.Data.CollectionView> accesses the collection using the locking mechanism.</span></span>

- <span data-ttu-id="c303b-190"><xref:System.Windows.Data.CollectionView> поддерживает "теневую копию" коллекции для использования в потоке пользовательского интерфейса.</span><span class="sxs-lookup"><span data-stu-id="c303b-190">The <xref:System.Windows.Data.CollectionView> maintains a "shadow copy" of the collection for use on the UI thread.</span></span>

- <span data-ttu-id="c303b-191"><xref:System.Windows.Data.CollectionView.CollectionChanged> события помещаются в очередь по мере их прибытия (в любом потоке).</span><span class="sxs-lookup"><span data-stu-id="c303b-191"><xref:System.Windows.Data.CollectionView.CollectionChanged> events are queued up as they arrive (on any thread).</span></span>

- <span data-ttu-id="c303b-192">Ожидающие события применяются к теневому копированию асинхронно в потоке пользовательского интерфейса, когда у него есть возможность сделать это.</span><span class="sxs-lookup"><span data-stu-id="c303b-192">Pending events are applied to the shadow copy asynchronously on the UI thread when it has the opportunity to do so.</span></span>

- <span data-ttu-id="c303b-193"><xref:System.Windows.Data.CollectionView> не будет напрямую использовать какой бы то ни было другой механизм синхронизации, видимый для приложения.</span><span class="sxs-lookup"><span data-stu-id="c303b-193">The <xref:System.Windows.Data.CollectionView> will not directly use any other synchronization mechanism visible to the application.</span></span> <span data-ttu-id="c303b-194">Это способ предотвращения взаимоблокировок в WPF (см. предыдущий элемент 7).</span><span class="sxs-lookup"><span data-stu-id="c303b-194">This is WPF's way of helping to avoid deadlock (see the previous item 7).</span></span>   

<span data-ttu-id="c303b-195">В итоге вы можете изменить коллекцию в любом потоке, и эти изменения отобразятся в <xref:System.Windows.Controls.ItemsControl>, когда поток пользовательского интерфейса имеет время на «отследить».</span><span class="sxs-lookup"><span data-stu-id="c303b-195">The net effect is that you can change the collection on any thread, and those changes eventually appear in the <xref:System.Windows.Controls.ItemsControl> when the UI thread has time to "catch up".</span></span><span data-ttu-id="c303b-196">  Реализация была настроена для регулирования скорости передачи изменений в поток пользовательского интерфейса, чтобы обеспечить фоновый поток от насыщенного потока пользовательского интерфейса и избежать ответа на обычные входные данные пользователя.</span><span class="sxs-lookup"><span data-stu-id="c303b-196">  The implementation has been tuned to throttle the rate that changes flow into the UI thread to keep background threads from saturating the UI thread and starving the response to normal user input.</span></span>
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableCollectionSynchronization">
      <MemberSignature Language="C#" Value="public static void EnableCollectionSynchronization (System.Collections.IEnumerable collection, object context, System.Windows.Data.CollectionSynchronizationCallback synchronizationCallback);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void EnableCollectionSynchronization(class System.Collections.IEnumerable collection, object context, class System.Windows.Data.CollectionSynchronizationCallback synchronizationCallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub EnableCollectionSynchronization (collection As IEnumerable, context As Object, synchronizationCallback As CollectionSynchronizationCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void EnableCollectionSynchronization(System::Collections::IEnumerable ^ collection, System::Object ^ context, System::Windows::Data::CollectionSynchronizationCallback ^ synchronizationCallback);" />
      <MemberSignature Language="F#" Value="static member EnableCollectionSynchronization : System.Collections.IEnumerable * obj * System.Windows.Data.CollectionSynchronizationCallback -&gt; unit" Usage="System.Windows.Data.BindingOperations.EnableCollectionSynchronization (collection, context, synchronizationCallback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="System.Collections.IEnumerable" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="context" Type="System.Object" Index="1" FrameworkAlternate="netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="synchronizationCallback" Type="System.Windows.Data.CollectionSynchronizationCallback" Index="2" FrameworkAlternate="netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="collection"><span data-ttu-id="c303b-197">Коллекция, которой требуется синхронизированный доступ.</span><span class="sxs-lookup"><span data-stu-id="c303b-197">The collection that needs synchronized access.</span></span></param>
        <param name="context"><span data-ttu-id="c303b-198">Объект, который передается в функцию обратного вызова.</span><span class="sxs-lookup"><span data-stu-id="c303b-198">An object that is passed to the callback.</span></span></param>
        <param name="synchronizationCallback"><span data-ttu-id="c303b-199">Функция обратного вызова, которая вызывается каждый раз, когда запрашивается доступ к коллекции.</span><span class="sxs-lookup"><span data-stu-id="c303b-199">The callback that is invoked whenever access to the collection is required.</span></span> <span data-ttu-id="c303b-200">С его помощью можно проверить, осуществляет ли доступ к коллекции одновременно только один поток.</span><span class="sxs-lookup"><span data-stu-id="c303b-200">You can use it to ensure that the collection is accessed by one thread at a time.</span></span></param>
        <summary><span data-ttu-id="c303b-201">Позволяет объекту <see cref="T:System.Windows.Data.CollectionView" /> участвовать в синхронизированном доступе к коллекции, используемой в нескольких потоках, с помощью механизма, отличного от простой блокировки.</span><span class="sxs-lookup"><span data-stu-id="c303b-201">Enables a <see cref="T:System.Windows.Data.CollectionView" /> object to participate in synchronized access to a collection used on multiple threads by using a mechanism other than a simple lock.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="c303b-202">Приложение WPF может отображать коллекцию данных с помощью <xref:System.Windows.Controls.ItemsControl> или одного из его подклассов (<xref:System.Windows.Controls.ListBox>, <xref:System.Windows.Controls.DataGrid>, <xref:System.Windows.Controls.TreeView>, <xref:System.Windows.Controls.ListView>и т. д.).</span><span class="sxs-lookup"><span data-stu-id="c303b-202">A WPF application can display a collection of data using an <xref:System.Windows.Controls.ItemsControl> or one of its subclasses (<xref:System.Windows.Controls.ListBox>, <xref:System.Windows.Controls.DataGrid>, <xref:System.Windows.Controls.TreeView>, <xref:System.Windows.Controls.ListView>, etc.).</span></span><span data-ttu-id="c303b-203"> WPF обращается к коллекции по каналу через подкласс <xref:System.Windows.Data.CollectionView>.</span><span class="sxs-lookup"><span data-stu-id="c303b-203"> WPF channels all its access to the collection through a subclass of <xref:System.Windows.Data.CollectionView>.</span></span><span data-ttu-id="c303b-204"> И <xref:System.Windows.Controls.ItemsControl>, и <xref:System.Windows.Data.CollectionView> имеют сходство с потоком, в котором была создана <xref:System.Windows.Controls.ItemsControl>, что означает, что их использование в другом потоке запрещено и создает исключение.</span><span class="sxs-lookup"><span data-stu-id="c303b-204"> Both the <xref:System.Windows.Controls.ItemsControl> and the <xref:System.Windows.Data.CollectionView> have affinity to the thread on which the <xref:System.Windows.Controls.ItemsControl> was created, meaning that using them on a different thread is forbidden and throws an exception.</span></span><span data-ttu-id="c303b-205"> В действительности это ограничение также применяется к коллекции.</span><span class="sxs-lookup"><span data-stu-id="c303b-205"> In effect, this restriction applies to the collection as well.</span></span>
 
<span data-ttu-id="c303b-206">Может потребоваться использовать коллекцию в нескольких потоках.</span><span class="sxs-lookup"><span data-stu-id="c303b-206">You may want to use the collection on multiple threads.</span></span><span data-ttu-id="c303b-207">   Например, необходимо обновить коллекцию (добавить или удалить элементы) в потоке сбора данных, отображая результаты в потоке пользовательского интерфейса, чтобы пользовательский интерфейс оставался в рабочем процессе во время сбора данных.</span><span class="sxs-lookup"><span data-stu-id="c303b-207">   For example, you want to update the collection (add or remove items) on a "data-gathering" thread, while displaying the results on a "user interface" thread, so that the UI remains responsive while data-gathering is happening.</span></span><span data-ttu-id="c303b-208"> В такой ситуации вы несете ответственность за обеспечение синхронизированного ("потокобезопасным") доступа к коллекции и гарантирует, что доступ из WPF (в частности <xref:System.Windows.Data.CollectionView>) участвует в одном механизме синхронизации.</span><span class="sxs-lookup"><span data-stu-id="c303b-208"> In such a situation, you are responsible for ensuring synchronized ("thread-safe") access to the collection and for guaranteeing that access from WPF (specifically from <xref:System.Windows.Data.CollectionView>) participates in the same synchronization mechanism.</span></span> <span data-ttu-id="c303b-209">Вызывая метод <xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)>, это можно сделать с помощью механизма синхронизации, такого как семафоры, событие сброса и т. д.  , чтобы использовать коллекцию в нескольких потоках, один из которых является потоком пользовательского интерфейса, которому принадлежит <xref:System.Windows.Controls.ItemsControl>необходимо выполнить следующие действия.</span><span class="sxs-lookup"><span data-stu-id="c303b-209">By calling the <xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)> method, you can do this by using a synchronization mechanism such as a semaphores, a reset event, etc.   To use a collection on multiple threads, one of which is the UI thread that owns the <xref:System.Windows.Controls.ItemsControl>, you must do the following:</span></span>

1. <span data-ttu-id="c303b-210">Выберите механизм синхронизации.</span><span class="sxs-lookup"><span data-stu-id="c303b-210">Choose a synchronization mechanism.</span></span>

1. <span data-ttu-id="c303b-211">Синхронизировать весь доступ из приложения к коллекции с помощью этого механизма.</span><span class="sxs-lookup"><span data-stu-id="c303b-211">Synchronize all access from the application to the collection using that mechanism.</span></span>

1. <span data-ttu-id="c303b-212">Вызовите перегрузку <xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)>, чтобы сообщить WPF, что вы используете механизм, отличный от простой блокировки.</span><span class="sxs-lookup"><span data-stu-id="c303b-212">Call the <xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)> overload to inform WPF that you are using a mechanism other than simple locking.</span></span>

   - <span data-ttu-id="c303b-213">Вызов должен осуществляться в потоке пользовательского интерфейса.</span><span class="sxs-lookup"><span data-stu-id="c303b-213">The call must occur on the UI thread.</span></span>

   - <span data-ttu-id="c303b-214">Вызов должен осуществляться перед использованием коллекции в другом потоке или перед присоединением коллекции к <xref:System.Windows.Controls.ItemsControl>, в зависимости от того, какое значение будет позже.</span><span class="sxs-lookup"><span data-stu-id="c303b-214">The call must occur before using the collection on a different thread or before attaching the collection to the <xref:System.Windows.Controls.ItemsControl>, whichever is later.</span></span>

1. <span data-ttu-id="c303b-215">Убедитесь, что изменение в коллекции и уведомление об этом изменении (с помощью <xref:System.Collections.Specialized.INotifyCollectionChanged>) являются атомарными; нет доступа из других потоков.</span><span class="sxs-lookup"><span data-stu-id="c303b-215">Ensure that a change to the collection and the notification of that change (through <xref:System.Collections.Specialized.INotifyCollectionChanged>) are atomic; no access from other threads can intervene.</span></span><span data-ttu-id="c303b-216">  (Обычно это бесплатно.</span><span class="sxs-lookup"><span data-stu-id="c303b-216">  (This is usually free.</span></span> <span data-ttu-id="c303b-217">Например, <xref:System.Collections.ObjectModel.ObservableCollection%601> гарантирует это при условии, что все изменения защищены синхронизацией.)</span><span class="sxs-lookup"><span data-stu-id="c303b-217">For instance, <xref:System.Collections.ObjectModel.ObservableCollection%601> guarantees this, provided that all changes are protected by synchronization.)</span></span>

1. <span data-ttu-id="c303b-218">При вызове <xref:System.Windows.Data.BindingOperations.DisableCollectionSynchronization%2A>этот вызов также должен выполняться в потоке пользовательского интерфейса.</span><span class="sxs-lookup"><span data-stu-id="c303b-218">If you call <xref:System.Windows.Data.BindingOperations.DisableCollectionSynchronization%2A>, that call must also occur on the UI thread.</span></span>

1. <span data-ttu-id="c303b-219">Если вы хотите использовать одну и ту же коллекцию в нескольких потоках пользовательского интерфейса, необходимо по отдельности вызвать <xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization%2A> (и <xref:System.Windows.Data.BindingOperations.DisableCollectionSynchronization%2A>при необходимости) в каждом потоке пользовательского интерфейса.</span><span class="sxs-lookup"><span data-stu-id="c303b-219">If you want to use the same collection on multiple UI threads, you must call <xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization%2A> (and <xref:System.Windows.Data.BindingOperations.DisableCollectionSynchronization%2A>, if needed) separately on each UI thread.</span></span>

1. <span data-ttu-id="c303b-220">Избегайте взаимоблокировок.</span><span class="sxs-lookup"><span data-stu-id="c303b-220">Avoid deadlock.</span></span><span data-ttu-id="c303b-221">  Это уже является обязанностью приложения после того, как она выбрала синхронизацию, но также должна учитывать участие WPF в синхронизации.</span><span class="sxs-lookup"><span data-stu-id="c303b-221">  This is already the application's responsibility once it chooses to use synchronization, but it must also take into account WPF's participation in the synchronization.</span></span><span data-ttu-id="c303b-222"> (Дополнительные сведения см. ниже.)</span><span class="sxs-lookup"><span data-stu-id="c303b-222"> (See more, below.)</span></span>

<span data-ttu-id="c303b-223">В случае возврата WPF обеспечивает следующее поведение:</span><span class="sxs-lookup"><span data-stu-id="c303b-223">In return, WPF provides the following behavior:</span></span>

- <span data-ttu-id="c303b-224"><xref:System.Windows.Data.CollectionView> обращается к коллекции, вызывая зарегистрированный <xref:System.Windows.Data.CollectionSynchronizationCallback> со следующими аргументами:</span><span class="sxs-lookup"><span data-stu-id="c303b-224">The <xref:System.Windows.Data.CollectionView> accesses the collection by calling the registered <xref:System.Windows.Data.CollectionSynchronizationCallback> with the following arguments:</span></span>

   - <span data-ttu-id="c303b-225">`collection`: интересующая коллекция.</span><span class="sxs-lookup"><span data-stu-id="c303b-225">`collection`: the collection of interest.</span></span>
   - <span data-ttu-id="c303b-226">`context`: зарегистрированный объект context.</span><span class="sxs-lookup"><span data-stu-id="c303b-226">`context`: the registered context object.</span></span>
   - <span data-ttu-id="c303b-227">`accessMethod`: делегат, который выполняет фактический доступ.</span><span class="sxs-lookup"><span data-stu-id="c303b-227">`accessMethod`: a delegate that performs the actual access.</span></span>
   - <span data-ttu-id="c303b-228">`writeAccess`: `true`, если делегат будет изменять коллекцию; в противном случае `false`.</span><span class="sxs-lookup"><span data-stu-id="c303b-228">`writeAccess`: `true` if the delegate will modify the collection; `false` otherwise.</span></span>

   <span data-ttu-id="c303b-229"><xref:System.Windows.Data.CollectionSynchronizationCallback> должны установить синхронизацию в коллекции (используя объект `context` и `writeAccess` значение соответственно), вызвать `accessMethod`, а затем отпустить синхронизацию.</span><span class="sxs-lookup"><span data-stu-id="c303b-229">Your <xref:System.Windows.Data.CollectionSynchronizationCallback> should establish synchronization on the collection (using the `context` object and the `writeAccess` value, as appropriate), call the `accessMethod`, then release synchronization.</span></span>

- <span data-ttu-id="c303b-230"><xref:System.Windows.Data.CollectionView> поддерживает "теневую копию" коллекции для использования в потоке пользовательского интерфейса.</span><span class="sxs-lookup"><span data-stu-id="c303b-230">The <xref:System.Windows.Data.CollectionView> maintains a "shadow copy" of the collection for use on the UI thread.</span></span>

- <span data-ttu-id="c303b-231"><xref:System.Windows.Data.CollectionView.CollectionChanged> события помещаются в очередь по мере их прибытия (в любом потоке).</span><span class="sxs-lookup"><span data-stu-id="c303b-231"><xref:System.Windows.Data.CollectionView.CollectionChanged> events are queued up as they arrive (on any thread).</span></span>

- <span data-ttu-id="c303b-232">Ожидающие события применяются к теневому копированию асинхронно в потоке пользовательского интерфейса, когда у него есть возможность сделать это.</span><span class="sxs-lookup"><span data-stu-id="c303b-232">Pending events are applied to the shadow copy asynchronously on the UI thread when it has the opportunity to do so.</span></span>

- <span data-ttu-id="c303b-233"><xref:System.Windows.Data.CollectionView> не будет напрямую использовать какой бы то ни было другой механизм синхронизации, видимый для приложения.</span><span class="sxs-lookup"><span data-stu-id="c303b-233">The <xref:System.Windows.Data.CollectionView> will not directly use any other synchronization mechanism visible to the application.</span></span> <span data-ttu-id="c303b-234">Это способ предотвращения взаимоблокировок в WPF (см. предыдущий элемент 7).</span><span class="sxs-lookup"><span data-stu-id="c303b-234">This is WPF's way of helping to avoid deadlock (see the previous item 7).</span></span>   

<span data-ttu-id="c303b-235">В итоге вы можете изменить коллекцию в любом потоке, и эти изменения отобразятся в <xref:System.Windows.Controls.ItemsControl>, когда поток пользовательского интерфейса имеет время на «отследить».</span><span class="sxs-lookup"><span data-stu-id="c303b-235">The net effect is that you can change the collection on any thread, and those changes eventually appear in the <xref:System.Windows.Controls.ItemsControl> when the UI thread has time to "catch up".</span></span><span data-ttu-id="c303b-236">  Реализация была настроена для регулирования скорости передачи изменений в поток пользовательского интерфейса, чтобы обеспечить фоновый поток от насыщенного потока пользовательского интерфейса и избежать ответа на обычные входные данные пользователя.</span><span class="sxs-lookup"><span data-stu-id="c303b-236">  The implementation has been tuned to throttle the rate that changes flow into the UI thread to keep background threads from saturating the UI thread and starving the response to normal user input.</span></span>

 <span data-ttu-id="c303b-237">Параметр `context` — это произвольный объект, который передается `callback`.</span><span class="sxs-lookup"><span data-stu-id="c303b-237">The `context` parameter is an arbitrary object that is passed to the `callback`.</span></span> <span data-ttu-id="c303b-238">Его можно использовать для определения механизма синхронизации, используемого для управления доступом к `collection`.</span><span class="sxs-lookup"><span data-stu-id="c303b-238">You can use it to determine the synchronization mechanism used to control access to `collection`.</span></span> <span data-ttu-id="c303b-239">`Context` можно `null`.</span><span class="sxs-lookup"><span data-stu-id="c303b-239">`Context` can be `null`.</span></span>  
 
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBinding">
      <MemberSignature Language="C#" Value="public static System.Windows.Data.Binding GetBinding (System.Windows.DependencyObject target, System.Windows.DependencyProperty dp);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Data.Binding GetBinding(class System.Windows.DependencyObject target, class System.Windows.DependencyProperty dp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingOperations.GetBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetBinding (target As DependencyObject, dp As DependencyProperty) As Binding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Data::Binding ^ GetBinding(System::Windows::DependencyObject ^ target, System::Windows::DependencyProperty ^ dp);" />
      <MemberSignature Language="F#" Value="static member GetBinding : System.Windows.DependencyObject * System.Windows.DependencyProperty -&gt; System.Windows.Data.Binding" Usage="System.Windows.Data.BindingOperations.GetBinding (target, dp)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Data.Binding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="c303b-240">Объект, в котором находится <paramref name="dp" />.</span><span class="sxs-lookup"><span data-stu-id="c303b-240">The object where <paramref name="dp" /> is.</span></span></param>
        <param name="dp"><span data-ttu-id="c303b-241">Свойство цели привязки, из которого извлекается привязка.</span><span class="sxs-lookup"><span data-stu-id="c303b-241">The binding target property from which to retrieve the binding.</span></span></param>
        <summary><span data-ttu-id="c303b-242">Возвращает объект <see cref="T:System.Windows.Data.Binding" />, установленный на указанное свойство.</span><span class="sxs-lookup"><span data-stu-id="c303b-242">Retrieves the <see cref="T:System.Windows.Data.Binding" /> object that is set on the specified property.</span></span></summary>
        <returns><span data-ttu-id="c303b-243">Объект <see cref="T:System.Windows.Data.Binding" />, установленный для заданного свойства, или <see langword="null" />, если объект <see cref="T:System.Windows.Data.Binding" /> не установлен.</span><span class="sxs-lookup"><span data-stu-id="c303b-243">The <see cref="T:System.Windows.Data.Binding" /> object set on the given property or <see langword="null" /> if no <see cref="T:System.Windows.Data.Binding" /> object has been set.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c303b-244">Параметры <paramref name="target" /> и <paramref name="dp" /> не могут иметь значение null.</span><span class="sxs-lookup"><span data-stu-id="c303b-244">The <paramref name="target" /> and <paramref name="dp" /> parameters cannot be null.</span></span></exception>
        <altmember cref="M:System.Windows.Data.BindingOperations.GetBindingBase(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
        <altmember cref="M:System.Windows.Data.BindingOperations.GetBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
        <altmember cref="M:System.Windows.Data.BindingOperations.GetMultiBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
        <altmember cref="M:System.Windows.Data.BindingOperations.GetPriorityBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      </Docs>
    </Member>
    <Member MemberName="GetBindingBase">
      <MemberSignature Language="C#" Value="public static System.Windows.Data.BindingBase GetBindingBase (System.Windows.DependencyObject target, System.Windows.DependencyProperty dp);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Data.BindingBase GetBindingBase(class System.Windows.DependencyObject target, class System.Windows.DependencyProperty dp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingOperations.GetBindingBase(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetBindingBase (target As DependencyObject, dp As DependencyProperty) As BindingBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Data::BindingBase ^ GetBindingBase(System::Windows::DependencyObject ^ target, System::Windows::DependencyProperty ^ dp);" />
      <MemberSignature Language="F#" Value="static member GetBindingBase : System.Windows.DependencyObject * System.Windows.DependencyProperty -&gt; System.Windows.Data.BindingBase" Usage="System.Windows.Data.BindingOperations.GetBindingBase (target, dp)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Data.BindingBase</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="c303b-245">Объект, в котором находится <paramref name="dp" />.</span><span class="sxs-lookup"><span data-stu-id="c303b-245">The object where <paramref name="dp" /> is.</span></span></param>
        <param name="dp"><span data-ttu-id="c303b-246">Целевое свойство привязки, из которого извлекается объект <see cref="T:System.Windows.Data.BindingBase" />.</span><span class="sxs-lookup"><span data-stu-id="c303b-246">The binding target property from which to retrieve the <see cref="T:System.Windows.Data.BindingBase" /> object.</span></span></param>
        <summary><span data-ttu-id="c303b-247">Возвращает объект <see cref="T:System.Windows.Data.BindingBase" />, установленный на указанное свойство.</span><span class="sxs-lookup"><span data-stu-id="c303b-247">Retrieves the <see cref="T:System.Windows.Data.BindingBase" /> object that is set on the specified property.</span></span></summary>
        <returns><span data-ttu-id="c303b-248">Объект <see cref="T:System.Windows.Data.BindingBase" />, установленный для заданного свойства, или <see langword="null" />, если объект привязки не установлен.</span><span class="sxs-lookup"><span data-stu-id="c303b-248">The <see cref="T:System.Windows.Data.BindingBase" /> object that is set on the given property or <see langword="null" /> if no binding object has been set.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c303b-249">Класс <xref:System.Windows.Data.BindingBase> является общим базовым классом для классов <xref:System.Windows.Data.Binding>, <xref:System.Windows.Data.PriorityBinding>и <xref:System.Windows.Data.MultiBinding>.</span><span class="sxs-lookup"><span data-stu-id="c303b-249">The <xref:System.Windows.Data.BindingBase> class is the common base class for the <xref:System.Windows.Data.Binding>, <xref:System.Windows.Data.PriorityBinding>, and <xref:System.Windows.Data.MultiBinding> classes.</span></span> <span data-ttu-id="c303b-250">Можно использовать методы <xref:System.Windows.Data.BindingOperations.GetBinding%2A>, <xref:System.Windows.Data.BindingOperations.GetPriorityBinding%2A>и <xref:System.Windows.Data.BindingOperations.GetMultiBinding%2A>, если заранее известно, что тип привязки задан для свойства.</span><span class="sxs-lookup"><span data-stu-id="c303b-250">You can use the <xref:System.Windows.Data.BindingOperations.GetBinding%2A>, <xref:System.Windows.Data.BindingOperations.GetPriorityBinding%2A>, and <xref:System.Windows.Data.BindingOperations.GetMultiBinding%2A> methods if you know in advance the type of binding that is set on the property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c303b-251">Параметры <paramref name="target" /> и <paramref name="dp" /> не могут иметь значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c303b-251">The <paramref name="target" /> and <paramref name="dp" /> parameters cannot be <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Windows.Data.BindingOperations.GetBindingExpressionBase(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      </Docs>
    </Member>
    <Member MemberName="GetBindingExpression">
      <MemberSignature Language="C#" Value="public static System.Windows.Data.BindingExpression GetBindingExpression (System.Windows.DependencyObject target, System.Windows.DependencyProperty dp);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Data.BindingExpression GetBindingExpression(class System.Windows.DependencyObject target, class System.Windows.DependencyProperty dp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingOperations.GetBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetBindingExpression (target As DependencyObject, dp As DependencyProperty) As BindingExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Data::BindingExpression ^ GetBindingExpression(System::Windows::DependencyObject ^ target, System::Windows::DependencyProperty ^ dp);" />
      <MemberSignature Language="F#" Value="static member GetBindingExpression : System.Windows.DependencyObject * System.Windows.DependencyProperty -&gt; System.Windows.Data.BindingExpression" Usage="System.Windows.Data.BindingOperations.GetBindingExpression (target, dp)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Data.BindingExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="c303b-252">Целевой объект привязки, где находится <paramref name="dp" />.</span><span class="sxs-lookup"><span data-stu-id="c303b-252">The binding target object where <paramref name="dp" /> is.</span></span></param>
        <param name="dp"><span data-ttu-id="c303b-253">Свойство цели привязки, из которого извлекается объект <see cref="T:System.Windows.Data.BindingExpression" />.</span><span class="sxs-lookup"><span data-stu-id="c303b-253">The binding target property from which to retrieve the <see cref="T:System.Windows.Data.BindingExpression" /> object.</span></span></param>
        <summary><span data-ttu-id="c303b-254">Возвращает объект <see cref="T:System.Windows.Data.BindingExpression" />, связанный с указанным свойством целевого объекта привязки заданного объекта.</span><span class="sxs-lookup"><span data-stu-id="c303b-254">Returns the <see cref="T:System.Windows.Data.BindingExpression" /> object associated with the specified binding target property on the specified object.</span></span></summary>
        <returns><span data-ttu-id="c303b-255">Объект <see cref="T:System.Windows.Data.BindingExpression" />, связанный с указанным свойством, или <see langword="null" />, если его не существует.</span><span class="sxs-lookup"><span data-stu-id="c303b-255">The <see cref="T:System.Windows.Data.BindingExpression" /> object associated with the given property or <see langword="null" /> if none exists.</span></span> <span data-ttu-id="c303b-256">Если в свойстве задается объект <see cref="T:System.Windows.Data.PriorityBindingExpression" />, возвращается <see cref="P:System.Windows.Data.PriorityBindingExpression.ActiveBindingExpression" />.</span><span class="sxs-lookup"><span data-stu-id="c303b-256">If a <see cref="T:System.Windows.Data.PriorityBindingExpression" /> object is set on the property, the <see cref="P:System.Windows.Data.PriorityBindingExpression.ActiveBindingExpression" /> is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c303b-257">Объект <xref:System.Windows.Data.BindingExpression> поддерживает соединение между источником привязки и целевым объектом привязки.</span><span class="sxs-lookup"><span data-stu-id="c303b-257">The <xref:System.Windows.Data.BindingExpression> object maintains the connection between the binding source and the binding target.</span></span> <span data-ttu-id="c303b-258">Объект <xref:System.Windows.Data.BindingExpression> можно получить, вызвав этот статический метод или вызвав метод <xref:System.Windows.FrameworkElement.GetBindingExpression%2A> для привязанного к данным <xref:System.Windows.FrameworkElement> или объекта <xref:System.Windows.FrameworkContentElement>.</span><span class="sxs-lookup"><span data-stu-id="c303b-258">You can obtain the <xref:System.Windows.Data.BindingExpression> object by calling this static method or by calling the <xref:System.Windows.FrameworkElement.GetBindingExpression%2A> method on a data-bound <xref:System.Windows.FrameworkElement> or <xref:System.Windows.FrameworkContentElement> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c303b-259">В следующем примере показана реализация обработчика <xref:System.Windows.Controls.Primitives.ButtonBase.Click> событий, который использует метод <xref:System.Windows.Data.BindingOperations.GetBindingExpression%2A> для получения <xref:System.Windows.Data.BindingExpression>, а затем вызывает свойство <xref:System.Windows.Data.BindingExpression.DataItem%2A> для доступа к объекту источника привязки.</span><span class="sxs-lookup"><span data-stu-id="c303b-259">The following example shows the implementation of a <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event handler that uses the <xref:System.Windows.Data.BindingOperations.GetBindingExpression%2A> method to obtain the <xref:System.Windows.Data.BindingExpression> and then calls the <xref:System.Windows.Data.BindingExpression.DataItem%2A> property to access the binding source object.</span></span>  
  
 <span data-ttu-id="c303b-260"><xref:System.Windows.Controls.TextBlock>`SavingsText` является целевым объектом привязки, а <xref:System.Windows.Controls.TextBlock.Text%2A> является свойством цели привязки.</span><span class="sxs-lookup"><span data-stu-id="c303b-260">The <xref:System.Windows.Controls.TextBlock>`SavingsText` is the binding target object and <xref:System.Windows.Controls.TextBlock.Text%2A> is the binding target property.</span></span>  
  
 [!code-csharp[DirectionalBinding#OnRentRaise](~/samples/snippets/csharp/VS_Snippets_Wpf/DirectionalBinding/CSharp/Page1.xaml.cs#onrentraise)]
 [!code-vb[DirectionalBinding#OnRentRaise](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DirectionalBinding/VisualBasic/DirectionalBinding.vb#onrentraise)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c303b-261">Параметры <paramref name="target" /> и <paramref name="dp" /> не могут иметь значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c303b-261">The <paramref name="target" /> and <paramref name="dp" /> parameters cannot be <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Windows.Data.BindingOperations.GetMultiBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
        <altmember cref="M:System.Windows.Data.BindingOperations.GetPriorityBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
        <altmember cref="M:System.Windows.Data.BindingOperations.GetBindingExpressionBase(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      </Docs>
    </Member>
    <Member MemberName="GetBindingExpressionBase">
      <MemberSignature Language="C#" Value="public static System.Windows.Data.BindingExpressionBase GetBindingExpressionBase (System.Windows.DependencyObject target, System.Windows.DependencyProperty dp);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Data.BindingExpressionBase GetBindingExpressionBase(class System.Windows.DependencyObject target, class System.Windows.DependencyProperty dp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingOperations.GetBindingExpressionBase(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetBindingExpressionBase (target As DependencyObject, dp As DependencyProperty) As BindingExpressionBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Data::BindingExpressionBase ^ GetBindingExpressionBase(System::Windows::DependencyObject ^ target, System::Windows::DependencyProperty ^ dp);" />
      <MemberSignature Language="F#" Value="static member GetBindingExpressionBase : System.Windows.DependencyObject * System.Windows.DependencyProperty -&gt; System.Windows.Data.BindingExpressionBase" Usage="System.Windows.Data.BindingOperations.GetBindingExpressionBase (target, dp)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Data.BindingExpressionBase</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="c303b-262">Объект, в котором находится <paramref name="dp" />.</span><span class="sxs-lookup"><span data-stu-id="c303b-262">The object where <paramref name="dp" /> is.</span></span></param>
        <param name="dp"><span data-ttu-id="c303b-263">Целевое свойство привязки, из которого извлекается объект <see cref="T:System.Windows.Data.BindingExpressionBase" />.</span><span class="sxs-lookup"><span data-stu-id="c303b-263">The binding target property from which to retrieve the <see cref="T:System.Windows.Data.BindingExpressionBase" /> object.</span></span></param>
        <summary><span data-ttu-id="c303b-264">Возвращает объект <see cref="T:System.Windows.Data.BindingExpressionBase" />, установленный на указанное свойство.</span><span class="sxs-lookup"><span data-stu-id="c303b-264">Retrieves the <see cref="T:System.Windows.Data.BindingExpressionBase" /> object that is set on the specified property.</span></span></summary>
        <returns><span data-ttu-id="c303b-265">Объект <see cref="T:System.Windows.Data.BindingExpressionBase" />, установленный для заданного свойства, или <see langword="null" />, если объект привязки не установлен.</span><span class="sxs-lookup"><span data-stu-id="c303b-265">The <see cref="T:System.Windows.Data.BindingExpressionBase" /> object that is set on the given property or <see langword="null" /> if no binding object has been set.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c303b-266">Класс <xref:System.Windows.Data.BindingExpressionBase> является общим базовым классом для классов <xref:System.Windows.Data.BindingExpression>, <xref:System.Windows.Data.PriorityBindingExpression>и <xref:System.Windows.Data.MultiBindingExpression>.</span><span class="sxs-lookup"><span data-stu-id="c303b-266">The <xref:System.Windows.Data.BindingExpressionBase> class is the common base class for the <xref:System.Windows.Data.BindingExpression>, <xref:System.Windows.Data.PriorityBindingExpression>, and <xref:System.Windows.Data.MultiBindingExpression> classes.</span></span> <span data-ttu-id="c303b-267">Можно использовать методы <xref:System.Windows.Data.BindingOperations.GetBindingExpression%2A>, <xref:System.Windows.Data.BindingOperations.GetPriorityBindingExpression%2A>и <xref:System.Windows.Data.BindingOperations.GetMultiBindingExpression%2A>, если известно, что для свойства задан тип привязки "предварительный".</span><span class="sxs-lookup"><span data-stu-id="c303b-267">You can use the <xref:System.Windows.Data.BindingOperations.GetBindingExpression%2A>, <xref:System.Windows.Data.BindingOperations.GetPriorityBindingExpression%2A>, and <xref:System.Windows.Data.BindingOperations.GetMultiBindingExpression%2A> methods if you know in advance type of binding that is set on the property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c303b-268">Параметры <paramref name="target" /> и <paramref name="dp" /> не могут иметь значение null.</span><span class="sxs-lookup"><span data-stu-id="c303b-268">The <paramref name="target" /> and <paramref name="dp" /> parameters cannot be null.</span></span></exception>
        <altmember cref="M:System.Windows.Data.BindingOperations.GetBindingBase(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      </Docs>
    </Member>
    <Member MemberName="GetMultiBinding">
      <MemberSignature Language="C#" Value="public static System.Windows.Data.MultiBinding GetMultiBinding (System.Windows.DependencyObject target, System.Windows.DependencyProperty dp);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Data.MultiBinding GetMultiBinding(class System.Windows.DependencyObject target, class System.Windows.DependencyProperty dp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingOperations.GetMultiBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetMultiBinding (target As DependencyObject, dp As DependencyProperty) As MultiBinding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Data::MultiBinding ^ GetMultiBinding(System::Windows::DependencyObject ^ target, System::Windows::DependencyProperty ^ dp);" />
      <MemberSignature Language="F#" Value="static member GetMultiBinding : System.Windows.DependencyObject * System.Windows.DependencyProperty -&gt; System.Windows.Data.MultiBinding" Usage="System.Windows.Data.BindingOperations.GetMultiBinding (target, dp)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Data.MultiBinding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="c303b-269">Объект, в котором находится <paramref name="dp" />.</span><span class="sxs-lookup"><span data-stu-id="c303b-269">The object where <paramref name="dp" /> is.</span></span></param>
        <param name="dp"><span data-ttu-id="c303b-270">Свойство цели привязки, из которого извлекается привязка.</span><span class="sxs-lookup"><span data-stu-id="c303b-270">The binding target property from which to retrieve the binding.</span></span></param>
        <summary><span data-ttu-id="c303b-271">Возвращает объект <see cref="T:System.Windows.Data.MultiBinding" />, установленный на указанное свойство.</span><span class="sxs-lookup"><span data-stu-id="c303b-271">Retrieves the <see cref="T:System.Windows.Data.MultiBinding" /> object that is set on the specified property.</span></span></summary>
        <returns><span data-ttu-id="c303b-272">Объект <see cref="T:System.Windows.Data.MultiBinding" />, установленный для заданного свойства, или <see langword="null" />, если объект <see cref="T:System.Windows.Data.MultiBinding" /> не установлен.</span><span class="sxs-lookup"><span data-stu-id="c303b-272">The <see cref="T:System.Windows.Data.MultiBinding" /> object set on the given property or <see langword="null" /> if no <see cref="T:System.Windows.Data.MultiBinding" /> object has been set.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c303b-273">Параметры <paramref name="target" /> и <paramref name="dp" /> не могут иметь значение null.</span><span class="sxs-lookup"><span data-stu-id="c303b-273">The <paramref name="target" /> and <paramref name="dp" /> parameters cannot be null.</span></span></exception>
        <altmember cref="M:System.Windows.Data.BindingOperations.GetBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
        <altmember cref="M:System.Windows.Data.BindingOperations.GetBindingBase(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      </Docs>
    </Member>
    <Member MemberName="GetMultiBindingExpression">
      <MemberSignature Language="C#" Value="public static System.Windows.Data.MultiBindingExpression GetMultiBindingExpression (System.Windows.DependencyObject target, System.Windows.DependencyProperty dp);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Data.MultiBindingExpression GetMultiBindingExpression(class System.Windows.DependencyObject target, class System.Windows.DependencyProperty dp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingOperations.GetMultiBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetMultiBindingExpression (target As DependencyObject, dp As DependencyProperty) As MultiBindingExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Data::MultiBindingExpression ^ GetMultiBindingExpression(System::Windows::DependencyObject ^ target, System::Windows::DependencyProperty ^ dp);" />
      <MemberSignature Language="F#" Value="static member GetMultiBindingExpression : System.Windows.DependencyObject * System.Windows.DependencyProperty -&gt; System.Windows.Data.MultiBindingExpression" Usage="System.Windows.Data.BindingOperations.GetMultiBindingExpression (target, dp)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Data.MultiBindingExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="c303b-274">Целевой объект привязки, в котором находится <paramref name="dp" />.</span><span class="sxs-lookup"><span data-stu-id="c303b-274">The binding target object where <paramref name="dp" /> is.</span></span></param>
        <param name="dp"><span data-ttu-id="c303b-275">Свойство цели привязки, из которого извлекается объект <see cref="T:System.Windows.Data.MultiBindingExpression" />.</span><span class="sxs-lookup"><span data-stu-id="c303b-275">The binding target property from which to retrieve the <see cref="T:System.Windows.Data.MultiBindingExpression" /> object.</span></span></param>
        <summary><span data-ttu-id="c303b-276">Возвращает объект <see cref="T:System.Windows.Data.MultiBindingExpression" />, связанный с указанным свойством целевого объекта привязки заданного объекта.</span><span class="sxs-lookup"><span data-stu-id="c303b-276">Returns the <see cref="T:System.Windows.Data.MultiBindingExpression" /> object associated with the specified binding target property on the specified object.</span></span></summary>
        <returns><span data-ttu-id="c303b-277">Объект <see cref="T:System.Windows.Data.MultiBindingExpression" />, связанный с указанным свойством, или <see langword="null" />, если его не существует.</span><span class="sxs-lookup"><span data-stu-id="c303b-277">The <see cref="T:System.Windows.Data.MultiBindingExpression" /> object associated with the given property or <see langword="null" /> if none exists.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c303b-278">Объект <xref:System.Windows.Data.MultiBindingExpression>, связанный с заданным свойством, или `null`, если он отсутствует.</span><span class="sxs-lookup"><span data-stu-id="c303b-278">The <xref:System.Windows.Data.MultiBindingExpression> object associated with the given property or `null` if none exists.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c303b-279">Параметры <paramref name="target" /> и <paramref name="dp" /> не могут иметь значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c303b-279">The <paramref name="target" /> and <paramref name="dp" /> parameters cannot be <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Windows.Data.BindingOperations.GetBindingExpressionBase(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
        <altmember cref="M:System.Windows.Data.BindingOperations.GetBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
        <altmember cref="M:System.Windows.Data.BindingOperations.GetMultiBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      </Docs>
    </Member>
    <Member MemberName="GetPriorityBinding">
      <MemberSignature Language="C#" Value="public static System.Windows.Data.PriorityBinding GetPriorityBinding (System.Windows.DependencyObject target, System.Windows.DependencyProperty dp);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Data.PriorityBinding GetPriorityBinding(class System.Windows.DependencyObject target, class System.Windows.DependencyProperty dp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingOperations.GetPriorityBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetPriorityBinding (target As DependencyObject, dp As DependencyProperty) As PriorityBinding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Data::PriorityBinding ^ GetPriorityBinding(System::Windows::DependencyObject ^ target, System::Windows::DependencyProperty ^ dp);" />
      <MemberSignature Language="F#" Value="static member GetPriorityBinding : System.Windows.DependencyObject * System.Windows.DependencyProperty -&gt; System.Windows.Data.PriorityBinding" Usage="System.Windows.Data.BindingOperations.GetPriorityBinding (target, dp)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Data.PriorityBinding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="c303b-280">Объект, в котором находится <paramref name="dp" />.</span><span class="sxs-lookup"><span data-stu-id="c303b-280">The object where <paramref name="dp" /> is.</span></span></param>
        <param name="dp"><span data-ttu-id="c303b-281">Свойство цели привязки, из которого извлекается привязка.</span><span class="sxs-lookup"><span data-stu-id="c303b-281">The binding target property from which to retrieve the binding.</span></span></param>
        <summary><span data-ttu-id="c303b-282">Возвращает объект <see cref="T:System.Windows.Data.PriorityBinding" />, установленный на указанное свойство.</span><span class="sxs-lookup"><span data-stu-id="c303b-282">Retrieves the <see cref="T:System.Windows.Data.PriorityBinding" /> object that is set on the specified property.</span></span></summary>
        <returns><span data-ttu-id="c303b-283">Объект <see cref="T:System.Windows.Data.PriorityBinding" />, установленный для заданного свойства, или <see langword="null" />, если объект <see cref="T:System.Windows.Data.PriorityBinding" /> не установлен.</span><span class="sxs-lookup"><span data-stu-id="c303b-283">The <see cref="T:System.Windows.Data.PriorityBinding" /> object set on the given property or <see langword="null" /> if no <see cref="T:System.Windows.Data.PriorityBinding" /> object has been set.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c303b-284">Параметры <paramref name="target" /> и <paramref name="dp" /> не могут иметь значение null.</span><span class="sxs-lookup"><span data-stu-id="c303b-284">The <paramref name="target" /> and <paramref name="dp" /> parameters cannot be null.</span></span></exception>
        <altmember cref="M:System.Windows.Data.BindingOperations.GetBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
        <altmember cref="M:System.Windows.Data.BindingOperations.GetBindingBase(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      </Docs>
    </Member>
    <Member MemberName="GetPriorityBindingExpression">
      <MemberSignature Language="C#" Value="public static System.Windows.Data.PriorityBindingExpression GetPriorityBindingExpression (System.Windows.DependencyObject target, System.Windows.DependencyProperty dp);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Data.PriorityBindingExpression GetPriorityBindingExpression(class System.Windows.DependencyObject target, class System.Windows.DependencyProperty dp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingOperations.GetPriorityBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetPriorityBindingExpression (target As DependencyObject, dp As DependencyProperty) As PriorityBindingExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Data::PriorityBindingExpression ^ GetPriorityBindingExpression(System::Windows::DependencyObject ^ target, System::Windows::DependencyProperty ^ dp);" />
      <MemberSignature Language="F#" Value="static member GetPriorityBindingExpression : System.Windows.DependencyObject * System.Windows.DependencyProperty -&gt; System.Windows.Data.PriorityBindingExpression" Usage="System.Windows.Data.BindingOperations.GetPriorityBindingExpression (target, dp)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Data.PriorityBindingExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="c303b-285">Целевой объект привязки, в котором находится <paramref name="dp" />.</span><span class="sxs-lookup"><span data-stu-id="c303b-285">The binding target object where <paramref name="dp" /> is.</span></span></param>
        <param name="dp"><span data-ttu-id="c303b-286">Свойство цели привязки, из которого извлекается объект <see cref="T:System.Windows.Data.PriorityBindingExpression" />.</span><span class="sxs-lookup"><span data-stu-id="c303b-286">The binding target property from which to retrieve the <see cref="T:System.Windows.Data.PriorityBindingExpression" /> object.</span></span></param>
        <summary><span data-ttu-id="c303b-287">Возвращает объект <see cref="T:System.Windows.Data.PriorityBindingExpression" />, связанный с указанным свойством целевого объекта привязки заданного объекта.</span><span class="sxs-lookup"><span data-stu-id="c303b-287">Returns the <see cref="T:System.Windows.Data.PriorityBindingExpression" /> object associated with the specified binding target property on the specified object.</span></span></summary>
        <returns><span data-ttu-id="c303b-288">Объект <see cref="T:System.Windows.Data.PriorityBindingExpression" />, связанный с указанным свойством, или <see langword="null" />, если его не существует.</span><span class="sxs-lookup"><span data-stu-id="c303b-288">The <see cref="T:System.Windows.Data.PriorityBindingExpression" /> object associated with the given property or <see langword="null" /> if none exists.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c303b-289">Параметры <paramref name="target" /> и <paramref name="dp" /> не могут иметь значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c303b-289">The <paramref name="target" /> and <paramref name="dp" /> parameters cannot be <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Windows.Data.BindingOperations.GetBindingExpressionBase(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
        <altmember cref="M:System.Windows.Data.BindingOperations.GetBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
        <altmember cref="M:System.Windows.Data.BindingOperations.GetPriorityBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      </Docs>
    </Member>
    <Member MemberName="GetSourceUpdatingBindingGroups">
      <MemberSignature Language="C#" Value="public static System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Windows.Data.BindingGroup&gt; GetSourceUpdatingBindingGroups (System.Windows.DependencyObject root);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Windows.Data.BindingGroup&gt; GetSourceUpdatingBindingGroups(class System.Windows.DependencyObject root) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingOperations.GetSourceUpdatingBindingGroups(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetSourceUpdatingBindingGroups (root As DependencyObject) As ReadOnlyCollection(Of BindingGroup)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Windows::Data::BindingGroup ^&gt; ^ GetSourceUpdatingBindingGroups(System::Windows::DependencyObject ^ root);" />
      <MemberSignature Language="F#" Value="static member GetSourceUpdatingBindingGroups : System.Windows.DependencyObject -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Windows.Data.BindingGroup&gt;" Usage="System.Windows.Data.BindingOperations.GetSourceUpdatingBindingGroups root" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Windows.Data.BindingGroup&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="root" Type="System.Windows.DependencyObject" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="root"><span data-ttu-id="c303b-290">Корневой элемент <see cref="T:System.Windows.UIElement" />, для которого требуется получить группы привязки.</span><span class="sxs-lookup"><span data-stu-id="c303b-290">The root <see cref="T:System.Windows.UIElement" /> to get binding groups for.</span></span>  <span data-ttu-id="c303b-291">Этот метод возвращает объекты <see cref="T:System.Windows.Data.BindingGroup" />, связанные с данным элементом или его элементами-потомками.</span><span class="sxs-lookup"><span data-stu-id="c303b-291">This method returns <see cref="T:System.Windows.Data.BindingGroup" /> objects that are associated with this element or its descendant elements.</span></span></param>
        <summary><span data-ttu-id="c303b-292">Получает все объекты <see cref="T:System.Windows.Data.BindingGroup" />, которые содержат недопустимые значения или целевые значения и не прошедших обновление источника.</span><span class="sxs-lookup"><span data-stu-id="c303b-292">Gets all <see cref="T:System.Windows.Data.BindingGroup" /> objects that have invalid values or target values have not been updated the source.</span></span></summary>
        <returns><span data-ttu-id="c303b-293">Коллекция объектов <see cref="T:System.Windows.Data.BindingGroup" />, связанных с заданным элементом, имеющих недопустимые значения или целевые значения и не прошедших обновление источника.</span><span class="sxs-lookup"><span data-stu-id="c303b-293">A collection of <see cref="T:System.Windows.Data.BindingGroup" /> objects that are associated with the specified element and have invalid values or target values have not been updated the source.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c303b-294">Если `root` `null`, <xref:System.Windows.Data.BindingOperations.GetSourceUpdatingBindingGroups%2A> возвращает все недопустимые или не обновленные объекты <xref:System.Windows.Data.BindingGroup>.</span><span class="sxs-lookup"><span data-stu-id="c303b-294">If `root` is `null`, <xref:System.Windows.Data.BindingOperations.GetSourceUpdatingBindingGroups%2A> returns all <xref:System.Windows.Data.BindingGroup> objects that are invalid or have not been updated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSourceUpdatingBindings">
      <MemberSignature Language="C#" Value="public static System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Windows.Data.BindingExpressionBase&gt; GetSourceUpdatingBindings (System.Windows.DependencyObject root);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Windows.Data.BindingExpressionBase&gt; GetSourceUpdatingBindings(class System.Windows.DependencyObject root) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingOperations.GetSourceUpdatingBindings(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetSourceUpdatingBindings (root As DependencyObject) As ReadOnlyCollection(Of BindingExpressionBase)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Windows::Data::BindingExpressionBase ^&gt; ^ GetSourceUpdatingBindings(System::Windows::DependencyObject ^ root);" />
      <MemberSignature Language="F#" Value="static member GetSourceUpdatingBindings : System.Windows.DependencyObject -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Windows.Data.BindingExpressionBase&gt;" Usage="System.Windows.Data.BindingOperations.GetSourceUpdatingBindings root" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Windows.Data.BindingExpressionBase&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="root" Type="System.Windows.DependencyObject" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="root"><span data-ttu-id="c303b-295">Корневой элемент <see cref="T:System.Windows.UIElement" />, для которого требуется получить группы привязки.</span><span class="sxs-lookup"><span data-stu-id="c303b-295">The root <see cref="T:System.Windows.UIElement" /> to get binding groups for.</span></span>  <span data-ttu-id="c303b-296">Этот метод возвращает объекты <see cref="T:System.Windows.Data.BindingExpressionBase" />, связанные с данным элементом или его элементами-потомками.</span><span class="sxs-lookup"><span data-stu-id="c303b-296">This method returns <see cref="T:System.Windows.Data.BindingExpressionBase" /> objects that are associated with this element or its descendant elements.</span></span></param>
        <summary><span data-ttu-id="c303b-297">Получает все объекты <see cref="T:System.Windows.Data.BindingExpressionBase" />, которые содержат недопустимые значения или целевые значения и не прошедших обновление источника.</span><span class="sxs-lookup"><span data-stu-id="c303b-297">Gets all <see cref="T:System.Windows.Data.BindingExpressionBase" /> objects that have invalid values or target values have not been updated the source.</span></span></summary>
        <returns><span data-ttu-id="c303b-298">Коллекция объектов <see cref="T:System.Windows.Data.BindingExpressionBase" />, связанных с заданным элементом, имеющих недопустимые значения или целевые значения и не прошедших обновление источника.</span><span class="sxs-lookup"><span data-stu-id="c303b-298">A collection of <see cref="T:System.Windows.Data.BindingExpressionBase" /> objects that are associated with the specified element and have invalid values or target values have not been updated the source.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c303b-299">Если `root` `null`, <xref:System.Windows.Data.BindingOperations.GetSourceUpdatingBindings%2A> возвращает все недопустимые или не обновленные объекты <xref:System.Windows.Data.BindingExpressionBase>.</span><span class="sxs-lookup"><span data-stu-id="c303b-299">If `root` is `null`, <xref:System.Windows.Data.BindingOperations.GetSourceUpdatingBindings%2A> returns all <xref:System.Windows.Data.BindingExpressionBase> objects that are invalid or have not been updated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDataBound">
      <MemberSignature Language="C#" Value="public static bool IsDataBound (System.Windows.DependencyObject target, System.Windows.DependencyProperty dp);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDataBound(class System.Windows.DependencyObject target, class System.Windows.DependencyProperty dp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingOperations.IsDataBound(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsDataBound (target As DependencyObject, dp As DependencyProperty) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsDataBound(System::Windows::DependencyObject ^ target, System::Windows::DependencyProperty ^ dp);" />
      <MemberSignature Language="F#" Value="static member IsDataBound : System.Windows.DependencyObject * System.Windows.DependencyProperty -&gt; bool" Usage="System.Windows.Data.BindingOperations.IsDataBound (target, dp)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="c303b-300">Объект, в котором находится <paramref name="dp" />.</span><span class="sxs-lookup"><span data-stu-id="c303b-300">The object where <paramref name="dp" /> is.</span></span></param>
        <param name="dp"><span data-ttu-id="c303b-301">Проверяемое свойство зависимости.</span><span class="sxs-lookup"><span data-stu-id="c303b-301">The dependency property to check.</span></span></param>
        <summary><span data-ttu-id="c303b-302">Возвращает значение, указывающее, является ли заданное свойство на текущий момент привязанным к данным.</span><span class="sxs-lookup"><span data-stu-id="c303b-302">Returns a value that indicates whether the specified property is currently data-bound.</span></span></summary>
        <returns><span data-ttu-id="c303b-303"><see langword="true" />, если указанное свойство является привязанным к данным, иначе <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c303b-303"><see langword="true" /> if the specified property is data-bound; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c303b-304">Если <paramref name="target" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c303b-304">If <paramref name="target" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetBinding">
      <MemberSignature Language="C#" Value="public static System.Windows.Data.BindingExpressionBase SetBinding (System.Windows.DependencyObject target, System.Windows.DependencyProperty dp, System.Windows.Data.BindingBase binding);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Data.BindingExpressionBase SetBinding(class System.Windows.DependencyObject target, class System.Windows.DependencyProperty dp, class System.Windows.Data.BindingBase binding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingOperations.SetBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty,System.Windows.Data.BindingBase)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SetBinding (target As DependencyObject, dp As DependencyProperty, binding As BindingBase) As BindingExpressionBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Data::BindingExpressionBase ^ SetBinding(System::Windows::DependencyObject ^ target, System::Windows::DependencyProperty ^ dp, System::Windows::Data::BindingBase ^ binding);" />
      <MemberSignature Language="F#" Value="static member SetBinding : System.Windows.DependencyObject * System.Windows.DependencyProperty * System.Windows.Data.BindingBase -&gt; System.Windows.Data.BindingExpressionBase" Usage="System.Windows.Data.BindingOperations.SetBinding (target, dp, binding)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Data.BindingExpressionBase</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
        <Parameter Name="binding" Type="System.Windows.Data.BindingBase" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="c303b-305">цель привязки отношения привязки.</span><span class="sxs-lookup"><span data-stu-id="c303b-305">The binding target of the binding.</span></span></param>
        <param name="dp"><span data-ttu-id="c303b-306">Целевое свойство привязки.</span><span class="sxs-lookup"><span data-stu-id="c303b-306">The target property of the binding.</span></span></param>
        <param name="binding"><span data-ttu-id="c303b-307">Объект <see cref="T:System.Windows.Data.BindingBase" />, описывающий привязку.</span><span class="sxs-lookup"><span data-stu-id="c303b-307">The <see cref="T:System.Windows.Data.BindingBase" /> object that describes the binding.</span></span></param>
        <summary><span data-ttu-id="c303b-308">Создает экземпляр <see cref="T:System.Windows.Data.BindingExpressionBase" /> и связывает его с заданным свойством целевого объекта привязки.</span><span class="sxs-lookup"><span data-stu-id="c303b-308">Creates and associates a new instance of <see cref="T:System.Windows.Data.BindingExpressionBase" /> with the specified binding target property.</span></span></summary>
        <returns><span data-ttu-id="c303b-309">Экземпляр <see cref="T:System.Windows.Data.BindingExpressionBase" />, созданный для заданного свойства и связанный с ним.</span><span class="sxs-lookup"><span data-stu-id="c303b-309">The instance of <see cref="T:System.Windows.Data.BindingExpressionBase" /> created for and associated with the specified property.</span></span> <span data-ttu-id="c303b-310">Класс <see cref="T:System.Windows.Data.BindingExpressionBase" /> является базовым классом для <see cref="T:System.Windows.Data.BindingExpression" />, <see cref="T:System.Windows.Data.MultiBindingExpression" /> и <see cref="T:System.Windows.Data.PriorityBindingExpression" />.</span><span class="sxs-lookup"><span data-stu-id="c303b-310">The <see cref="T:System.Windows.Data.BindingExpressionBase" /> class is the base class of <see cref="T:System.Windows.Data.BindingExpression" />, <see cref="T:System.Windows.Data.MultiBindingExpression" />, and <see cref="T:System.Windows.Data.PriorityBindingExpression" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c303b-311">Этот метод создает новый экземпляр <xref:System.Windows.Data.BindingExpressionBase> и связывает с ним экземпляр с заданным свойством зависимости данного объекта.</span><span class="sxs-lookup"><span data-stu-id="c303b-311">This method creates a new instance of a <xref:System.Windows.Data.BindingExpressionBase> and associates the instance with the given dependency property of the given object.</span></span> <span data-ttu-id="c303b-312">Этот метод является способом присоединения привязки к произвольному <xref:System.Windows.DependencyObject>, который может не предоставлять собственный метод SetBinding.</span><span class="sxs-lookup"><span data-stu-id="c303b-312">This method is the way to attach a binding to an arbitrary <xref:System.Windows.DependencyObject> that may not expose its own SetBinding method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c303b-313">В следующем примере показано, как использовать этот метод для установки привязки.</span><span class="sxs-lookup"><span data-stu-id="c303b-313">The following example shows how to use this method to set a binding.</span></span> <span data-ttu-id="c303b-314">В этом примере `myNewBindDef` является объектом <xref:System.Windows.Data.Binding>, описывающим привязку.</span><span class="sxs-lookup"><span data-stu-id="c303b-314">In this example, `myNewBindDef` is a <xref:System.Windows.Data.Binding> object that describes the binding.</span></span> <span data-ttu-id="c303b-315">Целью привязки является `myDateText`, экземпляр класса <xref:System.Windows.Controls.TextBlock>.</span><span class="sxs-lookup"><span data-stu-id="c303b-315">The binding target is `myDateText`, an instance of the <xref:System.Windows.Controls.TextBlock> class.</span></span>  
  
 [!code-csharp[BindConversion#BOSetBinding](~/samples/snippets/csharp/VS_Snippets_Wpf/BindConversion/CSharp/Window1.xaml.cs#bosetbinding)]
 [!code-vb[BindConversion#BOSetBinding](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindConversion/visualbasic/window1.xaml.vb#bosetbinding)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c303b-316">Параметр <paramref name="binding" /> не может иметь значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c303b-316">The <paramref name="binding" /> parameter cannot be <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
