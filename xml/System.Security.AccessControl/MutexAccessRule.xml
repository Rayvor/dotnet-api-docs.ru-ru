<Type Name="MutexAccessRule" FullName="System.Security.AccessControl.MutexAccessRule">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d97a7865001aaa964656915adb9a8d05adaf8869" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70673076" /></Metadata><TypeSignature Language="C#" Value="public sealed class MutexAccessRule : System.Security.AccessControl.AccessRule" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit MutexAccessRule extends System.Security.AccessControl.AccessRule" />
  <TypeSignature Language="DocId" Value="T:System.Security.AccessControl.MutexAccessRule" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class MutexAccessRule&#xA;Inherits AccessRule" />
  <TypeSignature Language="C++ CLI" Value="public ref class MutexAccessRule sealed : System::Security::AccessControl::AccessRule" />
  <TypeSignature Language="F#" Value="type MutexAccessRule = class&#xA;    inherit AccessRule" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.AccessControl</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
    <AssemblyVersion>4.0.4.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.AccessControl.AccessRule</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1">
      <AttributeName>System.Security.SecurityCritical</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Представляет набор прав доступа, разрешенных или запрещенных пользователю или группе. Этот класс не наследуется.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.AccessControl.MutexAccessRule> Класс является одним из набора классов, предоставляемых .NET Framework для управления безопасностью управления доступом Windows на именованных системных мьютексах. Общие сведения об этих классах и их связи с базовыми структурами управления доступом Windows см. <xref:System.Security.AccessControl.MutexSecurity>в разделе.  
  
> [!NOTE]
>  Безопасность управления доступом Windows имеет смысл только для именованных системных мьютексов. <xref:System.Threading.Mutex> Если объект представляет локальный мьютекс, управление доступом не имеет значения.  
  
 Чтобы получить список правил, применяемых в данный момент к именованному мьютексу, <xref:System.Threading.Mutex.GetAccessControl%2A?displayProperty=nameWithType> используйте метод для <xref:System.Security.AccessControl.MutexSecurity> получения объекта, а затем используйте его <xref:System.Security.AccessControl.CommonObjectSecurity.GetAccessRules%2A> метод для получения коллекции <xref:System.Security.AccessControl.MutexAccessRule> объектов.  
  
 <xref:System.Security.AccessControl.MutexAccessRule>объекты не сопоставляются с записями управления доступом "один к одному" в базовом списке управления доступом на уровне пользователей (DACL). При получении набора всех правил доступа для мьютекса набор содержит минимальное число правил, необходимых для выражения всех записей управления доступом.  
  
> [!NOTE]
>  Базовые элементы управления доступом изменяются по мере применения и удаления правил. Сведения в правилах объединяются, если это возможно, для сохранения минимального количества записей контроля доступа. Таким образом, при чтении текущего списка правил он может выглядеть не так, как список всех добавленных правил.  
  
 Используйте <xref:System.Security.AccessControl.MutexAccessRule> объекты, чтобы указать права доступа, которые следует разрешить или запретить пользователю или группе. <xref:System.Security.AccessControl.MutexAccessRule> Объект всегда представляет либо разрешенный доступ, либо запрещенный доступ, ни то, ни другое.  
  
 Чтобы применить правило к именованному системному мьютексу, используйте <xref:System.Threading.Mutex.GetAccessControl%2A?displayProperty=nameWithType> метод для <xref:System.Security.AccessControl.MutexSecurity> получения объекта. Измените объект, используя его методы, чтобы добавить правило, а затем <xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType> используйте метод для повторного присоединения объекта безопасности. <xref:System.Security.AccessControl.MutexSecurity>  
  
> [!IMPORTANT]
>  Изменения, вносимые в <xref:System.Security.AccessControl.MutexSecurity> объект, не влияют на уровни доступа именованного мьютекса до тех пор, пока не будет <xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType> вызван метод назначения измененного объекта безопасности именованному мьютексу.  
  
 <xref:System.Security.AccessControl.MutexAccessRule>объекты являются неизменяемыми. Безопасность мьютекса изменяется с помощью методов <xref:System.Security.AccessControl.MutexSecurity> класса для добавления или удаления правил. по этой же мере изменяются базовые записи контроля доступа.  
  
> [!NOTE]
>  Безопасность объектов синхронизации не поддерживается для Windows 98 или Windows Millennium Edition.  
  
   
  
## Examples  
 В следующем примере кода показано создание и использование <xref:System.Security.AccessControl.MutexAccessRule> объектов. В примере создается <xref:System.Security.AccessControl.MutexSecurity> объект, добавляются правила, которые разрешают и отклоняют различные права для текущего пользователя, а также выводятся полученные пары правил. Затем этот пример разрешает новые права для текущего пользователя и отображает результат, показывая, что новые права объединяются с существующим <xref:System.Security.AccessControl.AccessControlType.Allow> правилом.  
  
> [!NOTE]
>  В этом примере объект безопасности не подключается к <xref:System.Threading.Mutex> объекту. Примеры, в которых присоединяются объекты безопасности, <xref:System.Threading.Mutex.GetAccessControl%2A?displayProperty=nameWithType> можно <xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType>найти в и.  
  
 [!code-csharp[System.Security.AccessControl.MutexSecurity.AddAccessRule#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.AccessControl.MutexSecurity.AddAccessRule/CS/source.cs#1)]
 [!code-vb[System.Security.AccessControl.MutexSecurity.AddAccessRule#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.AccessControl.MutexSecurity.AddAccessRule/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Security.AccessControl.MutexSecurity" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Security.AccessControl.MutexAccessRule" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MutexAccessRule (System.Security.Principal.IdentityReference identity, System.Security.AccessControl.MutexRights eventRights, System.Security.AccessControl.AccessControlType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Principal.IdentityReference identity, valuetype System.Security.AccessControl.MutexRights eventRights, valuetype System.Security.AccessControl.AccessControlType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.MutexAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.MutexRights,System.Security.AccessControl.AccessControlType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (identity As IdentityReference, eventRights As MutexRights, type As AccessControlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MutexAccessRule(System::Security::Principal::IdentityReference ^ identity, System::Security::AccessControl::MutexRights eventRights, System::Security::AccessControl::AccessControlType type);" />
      <MemberSignature Language="F#" Value="new System.Security.AccessControl.MutexAccessRule : System.Security.Principal.IdentityReference * System.Security.AccessControl.MutexRights * System.Security.AccessControl.AccessControlType -&gt; System.Security.AccessControl.MutexAccessRule" Usage="new System.Security.AccessControl.MutexAccessRule (identity, eventRights, type)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identity" Type="System.Security.Principal.IdentityReference" />
        <Parameter Name="eventRights" Type="System.Security.AccessControl.MutexRights" />
        <Parameter Name="type" Type="System.Security.AccessControl.AccessControlType" />
      </Parameters>
      <Docs>
        <param name="identity">Пользователь или группа, к которым относится данное правило. Должен обладать типом <see cref="T:System.Security.Principal.SecurityIdentifier" /> или таким типом, как <see cref="T:System.Security.Principal.NTAccount" />, чтобы его можно было преобразовать в тип <see cref="T:System.Security.Principal.SecurityIdentifier" />.</param>
        <param name="eventRights">Побитовое сочетание значений <see cref="T:System.Security.AccessControl.MutexRights" />, определяющее права, которые разрешаются или запрещаются.</param>
        <param name="type">Одно из значений <see cref="T:System.Security.AccessControl.AccessControlType" />, определяющее тип правила ("разрешить" или "запретить").</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Security.AccessControl.MutexAccessRule" />, определяющий пользователя или группу, к которым применяются правило, права доступа, а также тип правила ("разрешить" или "запретить").</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Для <xref:System.Threading.Mutex> ожидания (путем <xref:System.Threading.WaitHandle.WaitAny%2A> <xref:System.Threading.WaitHandle.WaitOne%2A>вызова метода или <xref:System.Threading.WaitHandle.WaitAll%2A> ) пользователь должен иметь <xref:System.Security.AccessControl.MutexRights.Synchronize?displayProperty=nameWithType> доступ. Чтобы освободить мьютекс, вызвав <xref:System.Threading.Mutex.ReleaseMutex%2A> метод, пользователь должен иметь <xref:System.Security.AccessControl.MutexRights.Modify?displayProperty=nameWithType> доступ.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Параметр <paramref name="eventRights" /> содержит недопустимое значение.  
  
- или - 
 Параметр <paramref name="type" /> содержит недопустимое значение.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="identity" /> — <see langword="null" />.  
  
- или - 
 <paramref name="eventRights" /> равен нулю.</exception>
        <exception cref="T:System.ArgumentException">Параметр <paramref name="identity" /> не относится к типу <see cref="T:System.Security.Principal.SecurityIdentifier" /> и к такому типу, как <see cref="T:System.Security.Principal.NTAccount" />, который можно преобразовать в тип <see cref="T:System.Security.Principal.SecurityIdentifier" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MutexAccessRule (string identity, System.Security.AccessControl.MutexRights eventRights, System.Security.AccessControl.AccessControlType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string identity, valuetype System.Security.AccessControl.MutexRights eventRights, valuetype System.Security.AccessControl.AccessControlType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.MutexAccessRule.#ctor(System.String,System.Security.AccessControl.MutexRights,System.Security.AccessControl.AccessControlType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (identity As String, eventRights As MutexRights, type As AccessControlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MutexAccessRule(System::String ^ identity, System::Security::AccessControl::MutexRights eventRights, System::Security::AccessControl::AccessControlType type);" />
      <MemberSignature Language="F#" Value="new System.Security.AccessControl.MutexAccessRule : string * System.Security.AccessControl.MutexRights * System.Security.AccessControl.AccessControlType -&gt; System.Security.AccessControl.MutexAccessRule" Usage="new System.Security.AccessControl.MutexAccessRule (identity, eventRights, type)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identity" Type="System.String" />
        <Parameter Name="eventRights" Type="System.Security.AccessControl.MutexRights" />
        <Parameter Name="type" Type="System.Security.AccessControl.AccessControlType" />
      </Parameters>
      <Docs>
        <param name="identity">Имя пользователя или группы, к которым относится данное правило.</param>
        <param name="eventRights">Побитовое сочетание значений <see cref="T:System.Security.AccessControl.MutexRights" />, определяющее права, которые разрешаются или запрещаются.</param>
        <param name="type">Одно из значений <see cref="T:System.Security.AccessControl.AccessControlType" />, определяющее тип правила ("разрешить" или "запретить").</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Security.AccessControl.MutexAccessRule" />, определяющий имя пользователя или группы, к которым применяются правило, права доступа, а также тип правила ("разрешить" или "запретить").</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Для <xref:System.Threading.Mutex> ожидания (путем <xref:System.Threading.WaitHandle.WaitAny%2A> <xref:System.Threading.WaitHandle.WaitOne%2A>вызова метода или <xref:System.Threading.WaitHandle.WaitAll%2A> ) пользователь должен иметь <xref:System.Security.AccessControl.MutexRights.Synchronize?displayProperty=nameWithType> доступ. Чтобы освободить мьютекс, вызвав <xref:System.Threading.Mutex.ReleaseMutex%2A> методы, пользователь должен иметь <xref:System.Security.AccessControl.MutexRights.Modify?displayProperty=nameWithType> доступ.  
  
 Этот конструктор эквивалентен <xref:System.Security.Principal.NTAccount> созданию объекта путем передачи `identity` в <xref:System.Security.Principal.NTAccount.%23ctor%28System.String%29?displayProperty=nameWithType> конструктор <xref:System.Security.AccessControl.MutexAccessRule.%23ctor%28System.Security.Principal.IdentityReference%2CSystem.Security.AccessControl.MutexRights%2CSystem.Security.AccessControl.AccessControlType%29> и передачи только что созданного <xref:System.Security.Principal.NTAccount> объекта в конструктор.  
  
   
  
## Examples  
 В следующем примере кода показано использование этого конструктора для создания <xref:System.Security.AccessControl.MutexAccessRule> объектов. В примере создается <xref:System.Security.AccessControl.MutexSecurity> объект, добавляются правила, которые разрешают и отклоняют различные права для текущего пользователя, а также выводятся полученные пары правил. Затем этот пример разрешает новые права для текущего пользователя и отображает результат, показывая, что новые права объединяются с существующим <xref:System.Security.AccessControl.AccessControlType.Allow> правилом.  
  
> [!NOTE]
>  В этом примере объект безопасности не подключается к <xref:System.Threading.Mutex> объекту. Примеры, в которых присоединяются объекты безопасности, <xref:System.Threading.Mutex.GetAccessControl%2A?displayProperty=nameWithType> можно <xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType>найти в и.  
  
 [!code-csharp[System.Security.AccessControl.MutexSecurity.AddAccessRule#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.AccessControl.MutexSecurity.AddAccessRule/CS/source.cs#1)]
 [!code-vb[System.Security.AccessControl.MutexSecurity.AddAccessRule#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.AccessControl.MutexSecurity.AddAccessRule/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Параметр <paramref name="eventRights" /> содержит недопустимое значение.  
  
-или- 
 Параметр <paramref name="type" /> содержит недопустимое значение.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="eventRights" /> равен нулю.</exception>
        <exception cref="T:System.ArgumentException">Свойство <paramref name="identity" /> имеет значение <see langword="null" />.  
  
- или - 
 <paramref name="identity" /> представляет собой строку нулевой длины.  
  
- или - 
 Длина значения параметра <paramref name="identity" /> превышает 512 символов.</exception>
      </Docs>
    </Member>
    <Member MemberName="MutexRights">
      <MemberSignature Language="C#" Value="public System.Security.AccessControl.MutexRights MutexRights { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.AccessControl.MutexRights MutexRights" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.MutexAccessRule.MutexRights" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MutexRights As MutexRights" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::AccessControl::MutexRights MutexRights { System::Security::AccessControl::MutexRights get(); };" />
      <MemberSignature Language="F#" Value="member this.MutexRights : System.Security.AccessControl.MutexRights" Usage="System.Security.AccessControl.MutexAccessRule.MutexRights" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.MutexRights</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает права, разрешаемые или запрещаемые правилом доступа.</summary>
        <value>Побитовое сочетание значений <see cref="T:System.Security.AccessControl.MutexRights" />, определяющее права, которые разрешаются или запрещаются правилом доступа.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.AccessControl.MutexAccessRule>объекты являются неизменяемыми. Можно создать новое правило доступа, представляющее другого пользователя, другие права или другое <xref:System.Security.AccessControl.AccessControlType>, но нельзя изменить существующее правило доступа.  
  
   
  
## Examples  
 В следующем примере кода показано использование <xref:System.Security.AccessControl.MutexAccessRule.MutexRights%2A> свойства для вывода прав в наборе правил, содержащихся <xref:System.Security.AccessControl.MutexSecurity> в объекте. В примере создается <xref:System.Security.AccessControl.MutexSecurity> объект, добавляются правила, которые разрешают и отклоняют различные права для текущего пользователя, а также выводятся полученные пары правил. Затем этот пример разрешает новые права для текущего пользователя и отображает результат, показывая, что новые права объединяются с существующим <xref:System.Security.AccessControl.AccessControlType.Allow> правилом.  
  
> [!NOTE]
>  В этом примере объект безопасности не подключается к <xref:System.Threading.Mutex> объекту. Примеры, в которых присоединяются объекты безопасности, <xref:System.Threading.Mutex.GetAccessControl%2A?displayProperty=nameWithType> можно <xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType>найти в и.  
  
 [!code-csharp[System.Security.AccessControl.MutexSecurity.AddAccessRule#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.AccessControl.MutexSecurity.AddAccessRule/CS/source.cs#1)]
 [!code-vb[System.Security.AccessControl.MutexSecurity.AddAccessRule#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.AccessControl.MutexSecurity.AddAccessRule/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
