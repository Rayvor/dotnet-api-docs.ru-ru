<Type Name="SemaphoreAuditRule" FullName="System.Security.AccessControl.SemaphoreAuditRule">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ebe8af43c0d153b583cfe0c030605223809e175d" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70414930" /></Metadata><TypeSignature Language="C#" Value="public sealed class SemaphoreAuditRule : System.Security.AccessControl.AuditRule" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SemaphoreAuditRule extends System.Security.AccessControl.AuditRule" />
  <TypeSignature Language="DocId" Value="T:System.Security.AccessControl.SemaphoreAuditRule" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SemaphoreAuditRule&#xA;Inherits AuditRule" />
  <TypeSignature Language="C++ CLI" Value="public ref class SemaphoreAuditRule sealed : System::Security::AccessControl::AuditRule" />
  <TypeSignature Language="F#" Value="type SemaphoreAuditRule = class&#xA;    inherit AuditRule" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.AccessControl</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
    <AssemblyVersion>4.0.4.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.AccessControl.AuditRule</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1">
      <AttributeName>System.Security.SecurityCritical</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Представляет набор прав доступа, подлежащих аудиту для пользователя или группы. Этот класс не наследуется.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.AccessControl.SemaphoreAuditRule> Класс является одним из набора классов, предоставляемых .NET Framework для управления безопасностью управления доступом Windows в именованных системных семафорах. Общие сведения об этих классах и их взаимоотношениях с базовыми структурами управления доступом <xref:System.Security.AccessControl.SemaphoreSecurity>Windows см. в разделе.  
  
> [!NOTE]
>  Безопасность управления доступом Windows имеет смысл только для именованных системных семафоров. <xref:System.Threading.Semaphore> Если объект представляет локальный семафор, управление доступом не имеет значения.  
  
 Чтобы получить список правил аудита, примененных в данный момент к именованному семафору, <xref:System.Threading.Semaphore.GetAccessControl%2A?displayProperty=nameWithType> используйте метод для <xref:System.Security.AccessControl.SemaphoreSecurity> получения объекта, а затем используйте его <xref:System.Security.AccessControl.CommonObjectSecurity.GetAuditRules%2A> метод для получения коллекции <xref:System.Security.AccessControl.SemaphoreAuditRule> объектов.  
  
 <xref:System.Security.AccessControl.SemaphoreAuditRule>объекты не сопоставляются с записями управления доступом "один к одному" в базовом списке управления доступом на уровне пользователей (DACL). При получении набора всех правил аудита для семафора набор содержит минимальное число правил, необходимых для выражения всех записей управления доступом.  
  
> [!NOTE]
>  Базовые элементы управления доступом изменяются по мере применения и удаления правил. Сведения в правилах объединяются, если это возможно, для сохранения минимального количества записей контроля доступа. Таким образом, при чтении текущего списка правил он может выглядеть не так, как список всех добавленных правил.  
  
 Используйте <xref:System.Security.AccessControl.SemaphoreAuditRule> объекты, чтобы указать права доступа для аудита для пользователя или группы. Чтобы применить правило к именованному системному семафору, используйте <xref:System.Threading.Semaphore.GetAccessControl%2A?displayProperty=nameWithType> метод для <xref:System.Security.AccessControl.SemaphoreSecurity> получения объекта. Измените объект, используя его методы, чтобы добавить правило, а затем <xref:System.Threading.Semaphore.SetAccessControl%2A?displayProperty=nameWithType> используйте метод для повторного присоединения объекта безопасности. <xref:System.Security.AccessControl.SemaphoreSecurity>  
  
> [!IMPORTANT]
>  Изменения, вносимые в <xref:System.Security.AccessControl.SemaphoreSecurity> объект, не влияют на уровни доступа именованного семафора до тех пор, пока не будет <xref:System.Threading.Semaphore.SetAccessControl%2A?displayProperty=nameWithType> вызван метод назначения измененного объекта безопасности именованному семафору.  
  
 <xref:System.Security.AccessControl.SemaphoreAuditRule>объекты являются неизменяемыми. Безопасность для семафора изменяется с помощью методов <xref:System.Security.AccessControl.SemaphoreSecurity> класса для добавления или удаления правил. по этой же мере изменяются базовые записи контроля доступа.  
  
> [!NOTE]
>  Безопасность объектов синхронизации не поддерживается для Windows 98 или Windows Millennium Edition.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SemaphoreAuditRule (System.Security.Principal.IdentityReference identity, System.Security.AccessControl.SemaphoreRights eventRights, System.Security.AccessControl.AuditFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Principal.IdentityReference identity, valuetype System.Security.AccessControl.SemaphoreRights eventRights, valuetype System.Security.AccessControl.AuditFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.SemaphoreAuditRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.SemaphoreRights,System.Security.AccessControl.AuditFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (identity As IdentityReference, eventRights As SemaphoreRights, flags As AuditFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SemaphoreAuditRule(System::Security::Principal::IdentityReference ^ identity, System::Security::AccessControl::SemaphoreRights eventRights, System::Security::AccessControl::AuditFlags flags);" />
      <MemberSignature Language="F#" Value="new System.Security.AccessControl.SemaphoreAuditRule : System.Security.Principal.IdentityReference * System.Security.AccessControl.SemaphoreRights * System.Security.AccessControl.AuditFlags -&gt; System.Security.AccessControl.SemaphoreAuditRule" Usage="new System.Security.AccessControl.SemaphoreAuditRule (identity, eventRights, flags)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="identity" Type="System.Security.Principal.IdentityReference" />
        <Parameter Name="eventRights" Type="System.Security.AccessControl.SemaphoreRights" />
        <Parameter Name="flags" Type="System.Security.AccessControl.AuditFlags" />
      </Parameters>
      <Docs>
        <param name="identity">Пользователь или группа, к которым относится данное правило. Должен обладать типом <see cref="T:System.Security.Principal.SecurityIdentifier" /> или таким типом, как <see cref="T:System.Security.Principal.NTAccount" />, чтобы его можно было преобразовать в тип <see cref="T:System.Security.Principal.SecurityIdentifier" />.</param>
        <param name="eventRights">Побитовое сочетание значений <see cref="T:System.Security.AccessControl.SemaphoreRights" />, определяющее подлежащие аудиту права доступа.</param>
        <param name="flags">Побитовое сочетание значений <see cref="T:System.Security.AccessControl.AuditFlags" />, определяющее предмет аудита — успешные попытки доступа, неудачные попытки доступа или все попытки доступа.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Security.AccessControl.SemaphoreAuditRule" /> с указанием пользователя или группы для аудита, прав для аудита и подлежащих аудиту операций (успешных попыток доступа, неудачных попыток доступа или всех попыток доступа).</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Чтобы создать <xref:System.Security.Principal.NTAccount> объект из строки, представляющей имя пользователя или группы, <xref:System.Security.Principal.NTAccount.%23ctor%28System.String%29?displayProperty=nameWithType> используйте конструктор.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Параметр <paramref name="eventRights" /> содержит недопустимое значение.  
  
-или- 
 Параметр <paramref name="flags" /> содержит недопустимое значение.</exception>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="identity" /> имеет значение <see langword="null" />.  
  
- или - 
 <paramref name="eventRights" /> равен нулю.</exception>
        <exception cref="T:System.ArgumentException">Параметр <paramref name="identity" /> не относится к типу <see cref="T:System.Security.Principal.SecurityIdentifier" /> и к такому типу, как <see cref="T:System.Security.Principal.NTAccount" />, который можно преобразовать в тип <see cref="T:System.Security.Principal.SecurityIdentifier" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="SemaphoreRights">
      <MemberSignature Language="C#" Value="public System.Security.AccessControl.SemaphoreRights SemaphoreRights { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.AccessControl.SemaphoreRights SemaphoreRights" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.SemaphoreAuditRule.SemaphoreRights" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SemaphoreRights As SemaphoreRights" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::AccessControl::SemaphoreRights SemaphoreRights { System::Security::AccessControl::SemaphoreRights get(); };" />
      <MemberSignature Language="F#" Value="member this.SemaphoreRights : System.Security.AccessControl.SemaphoreRights" Usage="System.Security.AccessControl.SemaphoreAuditRule.SemaphoreRights" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.SemaphoreRights</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает права доступа, на которые распространяется действие этого правила аудита.</summary>
        <value>Побитовое сочетание значений <see cref="T:System.Security.AccessControl.SemaphoreRights" />, определяющее права, на которые распространяется действие этого правила аудита.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.AccessControl.SemaphoreAuditRule>объекты являются неизменяемыми. Можно создать новое правило аудита, представляющее другого пользователя, другие права или другую комбинацию <xref:System.Security.AccessControl.AuditFlags> значений, но нельзя изменить существующее правило аудита.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
