<Type Name="EventWaitHandleAccessRule" FullName="System.Security.AccessControl.EventWaitHandleAccessRule">
  <Metadata><Meta Name="ms.openlocfilehash" Value="cf4aec695e84ea5f5c8c6d54683cd77ee52fbc4a" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75081717" /></Metadata><TypeSignature Language="C#" Value="public sealed class EventWaitHandleAccessRule : System.Security.AccessControl.AccessRule" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit EventWaitHandleAccessRule extends System.Security.AccessControl.AccessRule" />
  <TypeSignature Language="DocId" Value="T:System.Security.AccessControl.EventWaitHandleAccessRule" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class EventWaitHandleAccessRule&#xA;Inherits AccessRule" />
  <TypeSignature Language="C++ CLI" Value="public ref class EventWaitHandleAccessRule sealed : System::Security::AccessControl::AccessRule" />
  <TypeSignature Language="F#" Value="type EventWaitHandleAccessRule = class&#xA;    inherit AccessRule" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.AccessControl</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
    <AssemblyVersion>4.0.4.0</AssemblyVersion>
    <AssemblyVersion>4.0.5.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.AccessControl.AccessRule</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1">
      <AttributeName>System.Security.SecurityCritical</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="6ecd2-101">Представляет набор прав доступа, разрешенных или запрещенных пользователю или группе.</span><span class="sxs-lookup"><span data-stu-id="6ecd2-101">Represents a set of access rights allowed or denied for a user or group.</span></span> <span data-ttu-id="6ecd2-102">Этот класс не наследуется.</span><span class="sxs-lookup"><span data-stu-id="6ecd2-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6ecd2-103">Класс <xref:System.Security.AccessControl.EventWaitHandleAccessRule> является одним из набора классов, предоставляемых .NET Framework для управления безопасностью управления доступом Windows на именованных системных событиях.</span><span class="sxs-lookup"><span data-stu-id="6ecd2-103">The <xref:System.Security.AccessControl.EventWaitHandleAccessRule> class is one of a set of classes that the .NET Framework provides for managing Windows access control security on named system events.</span></span> <span data-ttu-id="6ecd2-104">Общие сведения об этих классах и их связи с базовыми структурами управления доступом Windows см. в разделе <xref:System.Security.AccessControl.EventWaitHandleSecurity>.</span><span class="sxs-lookup"><span data-stu-id="6ecd2-104">For an overview of these classes, and their relationship to the underlying Windows access control structures, see <xref:System.Security.AccessControl.EventWaitHandleSecurity>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6ecd2-105">Безопасность управления доступом Windows имеет смысл только для именованных системных событий.</span><span class="sxs-lookup"><span data-stu-id="6ecd2-105">Windows access control security is meaningful only for named system events.</span></span> <span data-ttu-id="6ecd2-106">Если объект <xref:System.Threading.EventWaitHandle> представляет локальное событие, управление доступом не имеет значения.</span><span class="sxs-lookup"><span data-stu-id="6ecd2-106">If an <xref:System.Threading.EventWaitHandle> object represents a local event, access control is irrelevant.</span></span>  
  
 <span data-ttu-id="6ecd2-107">Чтобы получить список правил, примененных в данный момент к именованному событию, используйте метод <xref:System.Threading.EventWaitHandle.GetAccessControl%2A?displayProperty=nameWithType>, чтобы получить <xref:System.Security.AccessControl.EventWaitHandleSecurity> объект, а затем используйте его метод <xref:System.Security.AccessControl.CommonObjectSecurity.GetAccessRules%2A> для получения коллекции объектов <xref:System.Security.AccessControl.EventWaitHandleAccessRule>.</span><span class="sxs-lookup"><span data-stu-id="6ecd2-107">To get a list of the rules currently applied to a named event, use the <xref:System.Threading.EventWaitHandle.GetAccessControl%2A?displayProperty=nameWithType> method to get an <xref:System.Security.AccessControl.EventWaitHandleSecurity> object, and then use its <xref:System.Security.AccessControl.CommonObjectSecurity.GetAccessRules%2A> method to obtain a collection of <xref:System.Security.AccessControl.EventWaitHandleAccessRule> objects.</span></span>  
  
 <span data-ttu-id="6ecd2-108"><xref:System.Security.AccessControl.EventWaitHandleAccessRule> объекты не сопоставляются с записями управления доступом "один к одному" в базовом списке управления доступом на уровне пользователей (DACL).</span><span class="sxs-lookup"><span data-stu-id="6ecd2-108"><xref:System.Security.AccessControl.EventWaitHandleAccessRule> objects do not map one-to-one with access control entries in the underlying discretionary access control list (DACL).</span></span> <span data-ttu-id="6ecd2-109">При получении набора всех правил доступа для события набор содержит минимальное число правил, которые в настоящее время необходимы для выражения всех записей управления доступом.</span><span class="sxs-lookup"><span data-stu-id="6ecd2-109">When you get the set of all access rules for an event, the set contains the minimum number of rules currently required to express all the access control entries.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6ecd2-110">Базовые элементы управления доступом изменяются по мере применения и удаления правил.</span><span class="sxs-lookup"><span data-stu-id="6ecd2-110">The underlying access control entries change as you apply and remove rules.</span></span> <span data-ttu-id="6ecd2-111">Сведения в правилах объединяются, если это возможно, для сохранения минимального количества записей контроля доступа.</span><span class="sxs-lookup"><span data-stu-id="6ecd2-111">The information in rules is merged if possible, to maintain the smallest number of access control entries.</span></span> <span data-ttu-id="6ecd2-112">Таким образом, при получении текущего списка правил он может выглядеть не так, как список всех добавленных правил.</span><span class="sxs-lookup"><span data-stu-id="6ecd2-112">Thus, when you get the current list of rules, it might not look exactly like the list of all the rules you have added.</span></span>  
  
 <span data-ttu-id="6ecd2-113">Используйте <xref:System.Security.AccessControl.EventWaitHandleAccessRule> объекты, чтобы указать права доступа, которые следует разрешить или запретить пользователю или группе.</span><span class="sxs-lookup"><span data-stu-id="6ecd2-113">Use <xref:System.Security.AccessControl.EventWaitHandleAccessRule> objects to specify the access rights to allow or deny to a user or group.</span></span> <span data-ttu-id="6ecd2-114">Объект <xref:System.Security.AccessControl.EventWaitHandleAccessRule> всегда представляет либо разрешенный доступ, либо запрещенный доступ, ни то, ни другое.</span><span class="sxs-lookup"><span data-stu-id="6ecd2-114">An <xref:System.Security.AccessControl.EventWaitHandleAccessRule> object always represents either allowed access or denied access, never both.</span></span>  
  
 <span data-ttu-id="6ecd2-115">Чтобы применить правило к именованному системному событию, используйте метод <xref:System.Threading.EventWaitHandle.GetAccessControl%2A?displayProperty=nameWithType> для получения объекта <xref:System.Security.AccessControl.EventWaitHandleSecurity>.</span><span class="sxs-lookup"><span data-stu-id="6ecd2-115">To apply a rule to a named system event, use the <xref:System.Threading.EventWaitHandle.GetAccessControl%2A?displayProperty=nameWithType> method to get the <xref:System.Security.AccessControl.EventWaitHandleSecurity> object.</span></span> <span data-ttu-id="6ecd2-116">Измените объект <xref:System.Security.AccessControl.EventWaitHandleSecurity>, используя его методы, чтобы добавить правило, а затем используйте метод <xref:System.Threading.EventWaitHandle.SetAccessControl%2A?displayProperty=nameWithType> для повторного присоединения объекта безопасности.</span><span class="sxs-lookup"><span data-stu-id="6ecd2-116">Modify the <xref:System.Security.AccessControl.EventWaitHandleSecurity> object by using its methods to add the rule, and then use the <xref:System.Threading.EventWaitHandle.SetAccessControl%2A?displayProperty=nameWithType> method to reattach the security object.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="6ecd2-117">Изменения, вносимые в объект <xref:System.Security.AccessControl.EventWaitHandleSecurity>, не влияют на уровни доступа именованного события до тех пор, пока не будет вызван метод <xref:System.Threading.EventWaitHandle.SetAccessControl%2A?displayProperty=nameWithType> для назначения измененного объекта безопасности именованному событию.</span><span class="sxs-lookup"><span data-stu-id="6ecd2-117">Changes you make to an <xref:System.Security.AccessControl.EventWaitHandleSecurity> object do not affect the access levels of the named event until you call the <xref:System.Threading.EventWaitHandle.SetAccessControl%2A?displayProperty=nameWithType> method to assign the altered security object to the named event.</span></span>  
  
 <span data-ttu-id="6ecd2-118"><xref:System.Security.AccessControl.EventWaitHandleAccessRule> объекты являются неизменяемыми.</span><span class="sxs-lookup"><span data-stu-id="6ecd2-118"><xref:System.Security.AccessControl.EventWaitHandleAccessRule> objects are immutable.</span></span> <span data-ttu-id="6ecd2-119">Безопасность для события изменяется с помощью методов класса <xref:System.Security.AccessControl.EventWaitHandleSecurity> для добавления или удаления правил; При этом изменяются базовые записи контроля доступа.</span><span class="sxs-lookup"><span data-stu-id="6ecd2-119">Security for an event is modified using the methods of the <xref:System.Security.AccessControl.EventWaitHandleSecurity> class to add or remove rules; as you do this, the underlying access control entries are modified.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6ecd2-120">Безопасность объектов синхронизации не поддерживается для Windows 98 или Windows Millennium Edition.</span><span class="sxs-lookup"><span data-stu-id="6ecd2-120">Security on synchronization objects is not supported for Windows 98 or Windows Millennium Edition.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6ecd2-121">В следующем примере кода показано создание и использование объектов <xref:System.Security.AccessControl.EventWaitHandleAccessRule>.</span><span class="sxs-lookup"><span data-stu-id="6ecd2-121">The following code example demonstrates the creation and use of <xref:System.Security.AccessControl.EventWaitHandleAccessRule> objects.</span></span> <span data-ttu-id="6ecd2-122">В примере создается объект <xref:System.Security.AccessControl.EventWaitHandleSecurity>, добавляются правила, разрешающие и отклоняющие различные права для текущего пользователя, и выводится результирующая пара правил.</span><span class="sxs-lookup"><span data-stu-id="6ecd2-122">The example creates an <xref:System.Security.AccessControl.EventWaitHandleSecurity> object, adds rules that allow and deny various rights for the current user, and displays the resulting pair of rules.</span></span> <span data-ttu-id="6ecd2-123">Затем этот пример разрешает новые права для текущего пользователя и отображает результат, показывая, что новые права объединяются с существующим правилом <xref:System.Security.AccessControl.AccessControlType.Allow>.</span><span class="sxs-lookup"><span data-stu-id="6ecd2-123">The example then allows new rights for the current user and displays the result, showing that the new rights are merged with the existing <xref:System.Security.AccessControl.AccessControlType.Allow> rule.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6ecd2-124">В этом примере объект безопасности не подключается к объекту <xref:System.Threading.EventWaitHandle>.</span><span class="sxs-lookup"><span data-stu-id="6ecd2-124">This example does not attach the security object to a <xref:System.Threading.EventWaitHandle> object.</span></span> <span data-ttu-id="6ecd2-125">Примеры, в которых присоединяются объекты безопасности, можно найти в <xref:System.Threading.EventWaitHandle.GetAccessControl%2A?displayProperty=nameWithType> и <xref:System.Threading.EventWaitHandle.SetAccessControl%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="6ecd2-125">Examples that attach security objects can be found in <xref:System.Threading.EventWaitHandle.GetAccessControl%2A?displayProperty=nameWithType> and <xref:System.Threading.EventWaitHandle.SetAccessControl%2A?displayProperty=nameWithType>.</span></span>  
  
 [!code-csharp[System.Security.AccessControl.EventWaitHandleSecurity.AddAccessRule#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.AccessControl.EventWaitHandleSecurity.AddAccessRule/CS/source.cs#1)]
 [!code-vb[System.Security.AccessControl.EventWaitHandleSecurity.AddAccessRule#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.AccessControl.EventWaitHandleSecurity.AddAccessRule/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Security.AccessControl.EventWaitHandleSecurity" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="6ecd2-126">Инициализирует новый экземпляр класса <see cref="T:System.Security.AccessControl.EventWaitHandleAccessRule" />.</span><span class="sxs-lookup"><span data-stu-id="6ecd2-126">Initializes a new instance of the <see cref="T:System.Security.AccessControl.EventWaitHandleAccessRule" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventWaitHandleAccessRule (System.Security.Principal.IdentityReference identity, System.Security.AccessControl.EventWaitHandleRights eventRights, System.Security.AccessControl.AccessControlType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Principal.IdentityReference identity, valuetype System.Security.AccessControl.EventWaitHandleRights eventRights, valuetype System.Security.AccessControl.AccessControlType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.EventWaitHandleAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.EventWaitHandleRights,System.Security.AccessControl.AccessControlType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (identity As IdentityReference, eventRights As EventWaitHandleRights, type As AccessControlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventWaitHandleAccessRule(System::Security::Principal::IdentityReference ^ identity, System::Security::AccessControl::EventWaitHandleRights eventRights, System::Security::AccessControl::AccessControlType type);" />
      <MemberSignature Language="F#" Value="new System.Security.AccessControl.EventWaitHandleAccessRule : System.Security.Principal.IdentityReference * System.Security.AccessControl.EventWaitHandleRights * System.Security.AccessControl.AccessControlType -&gt; System.Security.AccessControl.EventWaitHandleAccessRule" Usage="new System.Security.AccessControl.EventWaitHandleAccessRule (identity, eventRights, type)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identity" Type="System.Security.Principal.IdentityReference" />
        <Parameter Name="eventRights" Type="System.Security.AccessControl.EventWaitHandleRights" />
        <Parameter Name="type" Type="System.Security.AccessControl.AccessControlType" />
      </Parameters>
      <Docs>
        <param name="identity"><span data-ttu-id="6ecd2-127">Пользователь или группа, к которым относится данное правило.</span><span class="sxs-lookup"><span data-stu-id="6ecd2-127">The user or group the rule applies to.</span></span> <span data-ttu-id="6ecd2-128">Должен обладать типом <see cref="T:System.Security.Principal.SecurityIdentifier" /> или таким типом, как <see cref="T:System.Security.Principal.NTAccount" />, чтобы его можно было преобразовать в тип <see cref="T:System.Security.Principal.SecurityIdentifier" />.</span><span class="sxs-lookup"><span data-stu-id="6ecd2-128">Must be of type <see cref="T:System.Security.Principal.SecurityIdentifier" /> or a type such as <see cref="T:System.Security.Principal.NTAccount" /> that can be converted to type <see cref="T:System.Security.Principal.SecurityIdentifier" />.</span></span></param>
        <param name="eventRights"><span data-ttu-id="6ecd2-129">Побитовое сочетание значений <see cref="T:System.Security.AccessControl.EventWaitHandleRights" />, определяющее права, которые разрешаются или запрещаются.</span><span class="sxs-lookup"><span data-stu-id="6ecd2-129">A bitwise combination of <see cref="T:System.Security.AccessControl.EventWaitHandleRights" /> values specifying the rights allowed or denied.</span></span></param>
        <param name="type"><span data-ttu-id="6ecd2-130">Одно из значений <see cref="T:System.Security.AccessControl.AccessControlType" />, определяющее тип правила ("разрешить" или "запретить").</span><span class="sxs-lookup"><span data-stu-id="6ecd2-130">One of the <see cref="T:System.Security.AccessControl.AccessControlType" /> values specifying whether the rights are allowed or denied.</span></span></param>
        <summary><span data-ttu-id="6ecd2-131">Инициализирует новый экземпляр класса <see cref="T:System.Security.AccessControl.EventWaitHandleAccessRule" />, определяющий пользователя или группу, к которым применяются правило, права доступа, а также тип правила ("разрешить" или "запретить").</span><span class="sxs-lookup"><span data-stu-id="6ecd2-131">Initializes a new instance of the <see cref="T:System.Security.AccessControl.EventWaitHandleAccessRule" /> class, specifying the user or group the rule applies to, the access rights, and whether the specified access rights are allowed or denied.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6ecd2-132">Для ожидания <xref:System.Threading.EventWaitHandle> (путем вызова метода <xref:System.Threading.WaitHandle.WaitOne%2A>, <xref:System.Threading.WaitHandle.WaitAny%2A> или <xref:System.Threading.WaitHandle.WaitAll%2A>) пользователь должен иметь <xref:System.Security.AccessControl.EventWaitHandleRights.Synchronize?displayProperty=nameWithType> доступ.</span><span class="sxs-lookup"><span data-stu-id="6ecd2-132">To wait on an <xref:System.Threading.EventWaitHandle> (by calling the <xref:System.Threading.WaitHandle.WaitOne%2A>, <xref:System.Threading.WaitHandle.WaitAny%2A> or <xref:System.Threading.WaitHandle.WaitAll%2A> method), a user must have <xref:System.Security.AccessControl.EventWaitHandleRights.Synchronize?displayProperty=nameWithType> access.</span></span> <span data-ttu-id="6ecd2-133">Чтобы сообщить о событии путем вызова метода <xref:System.Threading.EventWaitHandle.Set%2A> или сброса его в несигнальное состояние путем вызова метода <xref:System.Threading.EventWaitHandle.Reset%2A>, пользователь должен иметь <xref:System.Security.AccessControl.EventWaitHandleRights.Modify?displayProperty=nameWithType> доступ.</span><span class="sxs-lookup"><span data-stu-id="6ecd2-133">To signal an event by calling the <xref:System.Threading.EventWaitHandle.Set%2A> method, or to reset it to the unsignaled state by calling the <xref:System.Threading.EventWaitHandle.Reset%2A> method, a user must have <xref:System.Security.AccessControl.EventWaitHandleRights.Modify?displayProperty=nameWithType> access.</span></span> <span data-ttu-id="6ecd2-134">Чтобы сообщить объекту <xref:System.Threading.EventWaitHandle> и подождать его, вызвав метод <xref:System.Threading.WaitHandle.SignalAndWait%2A>, пользователь должен иметь доступ к <xref:System.Security.AccessControl.EventWaitHandleRights.Synchronize> и <xref:System.Security.AccessControl.EventWaitHandleRights.Modify>.</span><span class="sxs-lookup"><span data-stu-id="6ecd2-134">To signal an <xref:System.Threading.EventWaitHandle> object and then wait on it by calling the <xref:System.Threading.WaitHandle.SignalAndWait%2A> method, a user must have <xref:System.Security.AccessControl.EventWaitHandleRights.Synchronize> and <xref:System.Security.AccessControl.EventWaitHandleRights.Modify> access.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="6ecd2-135">Параметр <paramref name="eventRights" /> содержит недопустимое значение.</span><span class="sxs-lookup"><span data-stu-id="6ecd2-135"><paramref name="eventRights" /> specifies an invalid value.</span></span>  
  
<span data-ttu-id="6ecd2-136">-или-</span><span class="sxs-lookup"><span data-stu-id="6ecd2-136">-or-</span></span> 
 <span data-ttu-id="6ecd2-137">Параметр <paramref name="type" /> содержит недопустимое значение.</span><span class="sxs-lookup"><span data-stu-id="6ecd2-137"><paramref name="type" /> specifies an invalid value.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6ecd2-138"><paramref name="identity" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6ecd2-138"><paramref name="identity" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="6ecd2-139">-или-</span><span class="sxs-lookup"><span data-stu-id="6ecd2-139">-or-</span></span> 
 <span data-ttu-id="6ecd2-140"><paramref name="eventRights" /> равен нулю.</span><span class="sxs-lookup"><span data-stu-id="6ecd2-140"><paramref name="eventRights" /> is zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6ecd2-141">Параметр <paramref name="identity" /> не относится к типу <see cref="T:System.Security.Principal.SecurityIdentifier" /> и к такому типу, как <see cref="T:System.Security.Principal.NTAccount" />, который можно преобразовать в тип <see cref="T:System.Security.Principal.SecurityIdentifier" />.</span><span class="sxs-lookup"><span data-stu-id="6ecd2-141"><paramref name="identity" /> is neither of type <see cref="T:System.Security.Principal.SecurityIdentifier" /> nor of a type such as <see cref="T:System.Security.Principal.NTAccount" /> that can be converted to type <see cref="T:System.Security.Principal.SecurityIdentifier" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventWaitHandleAccessRule (string identity, System.Security.AccessControl.EventWaitHandleRights eventRights, System.Security.AccessControl.AccessControlType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string identity, valuetype System.Security.AccessControl.EventWaitHandleRights eventRights, valuetype System.Security.AccessControl.AccessControlType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.EventWaitHandleAccessRule.#ctor(System.String,System.Security.AccessControl.EventWaitHandleRights,System.Security.AccessControl.AccessControlType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (identity As String, eventRights As EventWaitHandleRights, type As AccessControlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventWaitHandleAccessRule(System::String ^ identity, System::Security::AccessControl::EventWaitHandleRights eventRights, System::Security::AccessControl::AccessControlType type);" />
      <MemberSignature Language="F#" Value="new System.Security.AccessControl.EventWaitHandleAccessRule : string * System.Security.AccessControl.EventWaitHandleRights * System.Security.AccessControl.AccessControlType -&gt; System.Security.AccessControl.EventWaitHandleAccessRule" Usage="new System.Security.AccessControl.EventWaitHandleAccessRule (identity, eventRights, type)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identity" Type="System.String" />
        <Parameter Name="eventRights" Type="System.Security.AccessControl.EventWaitHandleRights" />
        <Parameter Name="type" Type="System.Security.AccessControl.AccessControlType" />
      </Parameters>
      <Docs>
        <param name="identity"><span data-ttu-id="6ecd2-142">Имя пользователя или группы, к которым относится данное правило.</span><span class="sxs-lookup"><span data-stu-id="6ecd2-142">The name of the user or group the rule applies to.</span></span></param>
        <param name="eventRights"><span data-ttu-id="6ecd2-143">Побитовое сочетание значений <see cref="T:System.Security.AccessControl.EventWaitHandleRights" />, определяющее права, которые разрешаются или запрещаются.</span><span class="sxs-lookup"><span data-stu-id="6ecd2-143">A bitwise combination of <see cref="T:System.Security.AccessControl.EventWaitHandleRights" /> values specifying the rights allowed or denied.</span></span></param>
        <param name="type"><span data-ttu-id="6ecd2-144">Одно из значений <see cref="T:System.Security.AccessControl.AccessControlType" />, определяющее тип правила ("разрешить" или "запретить").</span><span class="sxs-lookup"><span data-stu-id="6ecd2-144">One of the <see cref="T:System.Security.AccessControl.AccessControlType" /> values specifying whether the rights are allowed or denied.</span></span></param>
        <summary><span data-ttu-id="6ecd2-145">Инициализирует новый экземпляр класса <see cref="T:System.Security.AccessControl.EventWaitHandleAccessRule" />, определяющий имя пользователя или группы, к которым применяются правило, права доступа, а также тип правила ("разрешить" или "запретить").</span><span class="sxs-lookup"><span data-stu-id="6ecd2-145">Initializes a new instance of the <see cref="T:System.Security.AccessControl.EventWaitHandleAccessRule" /> class, specifying the name of the user or group the rule applies to, the access rights, and whether the specified access rights are allowed or denied.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6ecd2-146">Для ожидания <xref:System.Threading.EventWaitHandle> (путем вызова метода <xref:System.Threading.WaitHandle.WaitOne%2A>, <xref:System.Threading.WaitHandle.WaitAny%2A> или <xref:System.Threading.WaitHandle.WaitAll%2A>) пользователь должен иметь <xref:System.Security.AccessControl.EventWaitHandleRights.Synchronize?displayProperty=nameWithType> доступ.</span><span class="sxs-lookup"><span data-stu-id="6ecd2-146">To wait on an <xref:System.Threading.EventWaitHandle> (by calling the <xref:System.Threading.WaitHandle.WaitOne%2A>, <xref:System.Threading.WaitHandle.WaitAny%2A> or <xref:System.Threading.WaitHandle.WaitAll%2A> method), a user must have <xref:System.Security.AccessControl.EventWaitHandleRights.Synchronize?displayProperty=nameWithType> access.</span></span> <span data-ttu-id="6ecd2-147">Чтобы сообщить о событии путем вызова метода <xref:System.Threading.EventWaitHandle.Set%2A> или сброса его в несигнальное состояние путем вызова метода <xref:System.Threading.EventWaitHandle.Reset%2A>, пользователь должен иметь <xref:System.Security.AccessControl.EventWaitHandleRights.Modify?displayProperty=nameWithType> доступ.</span><span class="sxs-lookup"><span data-stu-id="6ecd2-147">To signal an event by calling the <xref:System.Threading.EventWaitHandle.Set%2A> method, or to reset it to the unsignaled state by calling the <xref:System.Threading.EventWaitHandle.Reset%2A> method, a user must have <xref:System.Security.AccessControl.EventWaitHandleRights.Modify?displayProperty=nameWithType> access.</span></span> <span data-ttu-id="6ecd2-148">Чтобы сообщить объекту <xref:System.Threading.EventWaitHandle> и подождать его, вызвав метод <xref:System.Threading.WaitHandle.SignalAndWait%2A>, пользователь должен иметь доступ к <xref:System.Security.AccessControl.EventWaitHandleRights.Synchronize> и <xref:System.Security.AccessControl.EventWaitHandleRights.Modify>.</span><span class="sxs-lookup"><span data-stu-id="6ecd2-148">To signal an <xref:System.Threading.EventWaitHandle> object and then wait on it by calling the <xref:System.Threading.WaitHandle.SignalAndWait%2A> method, a user must have <xref:System.Security.AccessControl.EventWaitHandleRights.Synchronize> and <xref:System.Security.AccessControl.EventWaitHandleRights.Modify> access.</span></span>  
  
 <span data-ttu-id="6ecd2-149">Этот конструктор эквивалентен созданию <xref:System.Security.Principal.NTAccount> объекта путем передачи `identity` конструктору <xref:System.Security.Principal.NTAccount.%23ctor%28System.String%29?displayProperty=nameWithType> и передачи вновь созданного объекта <xref:System.Security.Principal.NTAccount> в конструктор <xref:System.Security.AccessControl.EventWaitHandleAccessRule.%23ctor%28System.Security.Principal.IdentityReference%2CSystem.Security.AccessControl.EventWaitHandleRights%2CSystem.Security.AccessControl.AccessControlType%29>.</span><span class="sxs-lookup"><span data-stu-id="6ecd2-149">This constructor is equivalent to creating an <xref:System.Security.Principal.NTAccount> object, by passing `identity` to the <xref:System.Security.Principal.NTAccount.%23ctor%28System.String%29?displayProperty=nameWithType> constructor, and passing the newly created <xref:System.Security.Principal.NTAccount> object to the <xref:System.Security.AccessControl.EventWaitHandleAccessRule.%23ctor%28System.Security.Principal.IdentityReference%2CSystem.Security.AccessControl.EventWaitHandleRights%2CSystem.Security.AccessControl.AccessControlType%29> constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6ecd2-150">В следующем примере кода демонстрируется использование этого конструктора для создания объектов <xref:System.Security.AccessControl.EventWaitHandleAccessRule>.</span><span class="sxs-lookup"><span data-stu-id="6ecd2-150">The following code example demonstrates the use of this constructor to create <xref:System.Security.AccessControl.EventWaitHandleAccessRule> objects.</span></span> <span data-ttu-id="6ecd2-151">В примере создается объект <xref:System.Security.AccessControl.EventWaitHandleSecurity>, добавляются правила, разрешающие и отклоняющие различные права для текущего пользователя, и выводится результирующая пара правил.</span><span class="sxs-lookup"><span data-stu-id="6ecd2-151">The example creates an <xref:System.Security.AccessControl.EventWaitHandleSecurity> object, adds rules that allow and deny various rights for the current user, and displays the resulting pair of rules.</span></span> <span data-ttu-id="6ecd2-152">Затем этот пример разрешает новые права для текущего пользователя и отображает результат, показывая, что новые права объединяются с существующим правилом <xref:System.Security.AccessControl.AccessControlType.Allow>.</span><span class="sxs-lookup"><span data-stu-id="6ecd2-152">The example then allows new rights for the current user and displays the result, showing that the new rights are merged with the existing <xref:System.Security.AccessControl.AccessControlType.Allow> rule.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6ecd2-153">В этом примере объект безопасности не подключается к объекту <xref:System.Threading.EventWaitHandle>.</span><span class="sxs-lookup"><span data-stu-id="6ecd2-153">This example does not attach the security object to a <xref:System.Threading.EventWaitHandle> object.</span></span> <span data-ttu-id="6ecd2-154">Примеры, в которых присоединяются объекты безопасности, можно найти в <xref:System.Threading.EventWaitHandle.GetAccessControl%2A?displayProperty=nameWithType> и <xref:System.Threading.EventWaitHandle.SetAccessControl%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="6ecd2-154">Examples that attach security objects can be found in <xref:System.Threading.EventWaitHandle.GetAccessControl%2A?displayProperty=nameWithType> and <xref:System.Threading.EventWaitHandle.SetAccessControl%2A?displayProperty=nameWithType>.</span></span>  
  
 [!code-csharp[System.Security.AccessControl.EventWaitHandleSecurity.AddAccessRule#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.AccessControl.EventWaitHandleSecurity.AddAccessRule/CS/source.cs#1)]
 [!code-vb[System.Security.AccessControl.EventWaitHandleSecurity.AddAccessRule#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.AccessControl.EventWaitHandleSecurity.AddAccessRule/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="6ecd2-155">Параметр <paramref name="eventRights" /> содержит недопустимое значение.</span><span class="sxs-lookup"><span data-stu-id="6ecd2-155"><paramref name="eventRights" /> specifies an invalid value.</span></span>  
  
<span data-ttu-id="6ecd2-156">-или-</span><span class="sxs-lookup"><span data-stu-id="6ecd2-156">-or-</span></span> 
 <span data-ttu-id="6ecd2-157">Параметр <paramref name="type" /> содержит недопустимое значение.</span><span class="sxs-lookup"><span data-stu-id="6ecd2-157"><paramref name="type" /> specifies an invalid value.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6ecd2-158"><paramref name="eventRights" /> равен нулю.</span><span class="sxs-lookup"><span data-stu-id="6ecd2-158"><paramref name="eventRights" /> is zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6ecd2-159"><paramref name="identity" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6ecd2-159"><paramref name="identity" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="6ecd2-160">-или-</span><span class="sxs-lookup"><span data-stu-id="6ecd2-160">-or-</span></span> 
 <span data-ttu-id="6ecd2-161"><paramref name="identity" /> представляет собой строку нулевой длины.</span><span class="sxs-lookup"><span data-stu-id="6ecd2-161"><paramref name="identity" /> is a zero-length string.</span></span>  
  
<span data-ttu-id="6ecd2-162">-или-</span><span class="sxs-lookup"><span data-stu-id="6ecd2-162">-or-</span></span> 
 <span data-ttu-id="6ecd2-163">Длина значения параметра <paramref name="identity" /> превышает 512 символов.</span><span class="sxs-lookup"><span data-stu-id="6ecd2-163"><paramref name="identity" /> is longer than 512 characters.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EventWaitHandleRights">
      <MemberSignature Language="C#" Value="public System.Security.AccessControl.EventWaitHandleRights EventWaitHandleRights { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.AccessControl.EventWaitHandleRights EventWaitHandleRights" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.EventWaitHandleAccessRule.EventWaitHandleRights" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EventWaitHandleRights As EventWaitHandleRights" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::AccessControl::EventWaitHandleRights EventWaitHandleRights { System::Security::AccessControl::EventWaitHandleRights get(); };" />
      <MemberSignature Language="F#" Value="member this.EventWaitHandleRights : System.Security.AccessControl.EventWaitHandleRights" Usage="System.Security.AccessControl.EventWaitHandleAccessRule.EventWaitHandleRights" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.EventWaitHandleRights</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6ecd2-164">Получает права, разрешаемые или запрещаемые правилом доступа.</span><span class="sxs-lookup"><span data-stu-id="6ecd2-164">Gets the rights allowed or denied by the access rule.</span></span></summary>
        <value><span data-ttu-id="6ecd2-165">Побитовое сочетание значений <see cref="T:System.Security.AccessControl.EventWaitHandleRights" />, определяющее права, которые разрешаются или запрещаются правилом доступа.</span><span class="sxs-lookup"><span data-stu-id="6ecd2-165">A bitwise combination of <see cref="T:System.Security.AccessControl.EventWaitHandleRights" /> values indicating the rights allowed or denied by the access rule.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6ecd2-166"><xref:System.Security.AccessControl.EventWaitHandleAccessRule> объекты являются неизменяемыми.</span><span class="sxs-lookup"><span data-stu-id="6ecd2-166"><xref:System.Security.AccessControl.EventWaitHandleAccessRule> objects are immutable.</span></span> <span data-ttu-id="6ecd2-167">Можно создать новое правило доступа, представляющее другого пользователя, другие права или другие <xref:System.Security.AccessControl.AccessControlType>, но нельзя изменить существующее правило доступа.</span><span class="sxs-lookup"><span data-stu-id="6ecd2-167">You can create a new access rule representing a different user, different rights, or a different <xref:System.Security.AccessControl.AccessControlType>, but you cannot modify an existing access rule.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6ecd2-168">В следующем примере кода показано использование свойства <xref:System.Security.AccessControl.EventWaitHandleAccessRule.EventWaitHandleRights%2A> для вывода прав в наборе правил, содержащихся в объекте <xref:System.Security.AccessControl.EventWaitHandleSecurity>.</span><span class="sxs-lookup"><span data-stu-id="6ecd2-168">The following code example demonstrates the use of the <xref:System.Security.AccessControl.EventWaitHandleAccessRule.EventWaitHandleRights%2A> property to display the rights in the set of rules contained in an <xref:System.Security.AccessControl.EventWaitHandleSecurity> object.</span></span> <span data-ttu-id="6ecd2-169">В примере создается объект <xref:System.Security.AccessControl.EventWaitHandleSecurity>, добавляются правила, разрешающие и отклоняющие различные права для текущего пользователя, и выводится результирующая пара правил.</span><span class="sxs-lookup"><span data-stu-id="6ecd2-169">The example creates an <xref:System.Security.AccessControl.EventWaitHandleSecurity> object, adds rules that allow and deny various rights for the current user, and displays the resulting pair of rules.</span></span> <span data-ttu-id="6ecd2-170">Затем этот пример разрешает новые права для текущего пользователя и отображает результат, показывая, что новые права объединяются с существующим правилом <xref:System.Security.AccessControl.AccessControlType.Allow>.</span><span class="sxs-lookup"><span data-stu-id="6ecd2-170">The example then allows new rights for the current user and displays the result, showing that the new rights are merged with the existing <xref:System.Security.AccessControl.AccessControlType.Allow> rule.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6ecd2-171">В этом примере объект безопасности не подключается к объекту <xref:System.Threading.EventWaitHandle>.</span><span class="sxs-lookup"><span data-stu-id="6ecd2-171">This example does not attach the security object to a <xref:System.Threading.EventWaitHandle> object.</span></span> <span data-ttu-id="6ecd2-172">Примеры, в которых присоединяются объекты безопасности, можно найти в <xref:System.Threading.EventWaitHandle.GetAccessControl%2A?displayProperty=nameWithType> и <xref:System.Threading.EventWaitHandle.SetAccessControl%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="6ecd2-172">Examples that attach security objects can be found in <xref:System.Threading.EventWaitHandle.GetAccessControl%2A?displayProperty=nameWithType> and <xref:System.Threading.EventWaitHandle.SetAccessControl%2A?displayProperty=nameWithType>.</span></span>  
  
 [!code-csharp[System.Security.AccessControl.EventWaitHandleSecurity.AddAccessRule#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.AccessControl.EventWaitHandleSecurity.AddAccessRule/CS/source.cs#1)]
 [!code-vb[System.Security.AccessControl.EventWaitHandleSecurity.AddAccessRule#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.AccessControl.EventWaitHandleSecurity.AddAccessRule/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
