<Type Name="RegistryAuditRule" FullName="System.Security.AccessControl.RegistryAuditRule">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9d3838065c4af36eb67c8530a5fac0850ce3cfbd" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70515515" /></Metadata><TypeSignature Language="C#" Value="public sealed class RegistryAuditRule : System.Security.AccessControl.AuditRule" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit RegistryAuditRule extends System.Security.AccessControl.AuditRule" />
  <TypeSignature Language="DocId" Value="T:System.Security.AccessControl.RegistryAuditRule" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class RegistryAuditRule&#xA;Inherits AuditRule" />
  <TypeSignature Language="C++ CLI" Value="public ref class RegistryAuditRule sealed : System::Security::AccessControl::AuditRule" />
  <TypeSignature Language="F#" Value="type RegistryAuditRule = class&#xA;    inherit AuditRule" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.AccessControl.AuditRule</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1">
      <AttributeName>System.Security.SecurityCritical</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Представляет набор прав доступа, подлежащих аудиту для пользователя или группы. Этот класс не наследуется.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.AccessControl.RegistryAuditRule> Класс является одним из набора классов, предоставляемых .NET Framework для управления безопасностью управления доступом Windows в разделах реестра. Общие сведения об этих классах и их взаимоотношениях с базовыми структурами управления доступом <xref:System.Security.AccessControl.RegistrySecurity>Windows см. в разделе.  
  
> [!NOTE]
>  Безопасность управления доступом Windows может применяться только к разделам реестра. Его нельзя применить к отдельным парам "ключ-значение", хранящимся в ключе.  
  
 Чтобы получить список правил аудита, примененных в данный момент к разделу реестра, используйте <xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A?displayProperty=nameWithType> метод для <xref:System.Security.AccessControl.RegistrySecurity> получения объекта, а затем используйте его <xref:System.Security.AccessControl.CommonObjectSecurity.GetAuditRules%2A> метод для получения коллекции <xref:System.Security.AccessControl.RegistryAuditRule> объектов.  
  
 <xref:System.Security.AccessControl.RegistryAuditRule>объекты не сопоставляются с записями управления доступом "один к одному" в базовом списке управления доступом на уровне пользователей (DACL). При получении набора всех правил аудита для раздела реестра набор содержит минимальное число правил, необходимых для выражения всех записей управления доступом.  
  
> [!NOTE]
>  Базовые элементы управления доступом изменяются по мере применения и удаления правил. Сведения в правилах объединяются, если это возможно, для сохранения минимального количества записей контроля доступа. Таким образом, при чтении текущего списка правил он может выглядеть не так, как список всех добавленных правил.  
  
 Используйте <xref:System.Security.AccessControl.RegistryAuditRule> объекты, чтобы указать права доступа для аудита для пользователя или группы. Чтобы применить правило к разделу реестра, используйте <xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A?displayProperty=nameWithType> метод для <xref:System.Security.AccessControl.RegistrySecurity> получения объекта. Измените объект, используя его методы, чтобы добавить правило, а затем <xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=nameWithType> используйте метод для повторного присоединения объекта безопасности. <xref:System.Security.AccessControl.RegistrySecurity>  
  
> [!IMPORTANT]
>  Изменения, вносимые в <xref:System.Security.AccessControl.RegistrySecurity> объект, не влияют на уровни доступа к разделу реестра до тех пор, пока не будет <xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=nameWithType> вызван метод назначения измененного объекта безопасности разделу реестра.  
  
 <xref:System.Security.AccessControl.RegistryAuditRule>объекты являются неизменяемыми. Безопасность для раздела реестра изменяется с помощью методов <xref:System.Security.AccessControl.RegistrySecurity> класса для добавления или удаления правил. по этой же мере изменяются базовые записи контроля доступа.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Security.AccessControl.RegistryAuditRule" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RegistryAuditRule (System.Security.Principal.IdentityReference identity, System.Security.AccessControl.RegistryRights registryRights, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AuditFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Principal.IdentityReference identity, valuetype System.Security.AccessControl.RegistryRights registryRights, valuetype System.Security.AccessControl.InheritanceFlags inheritanceFlags, valuetype System.Security.AccessControl.PropagationFlags propagationFlags, valuetype System.Security.AccessControl.AuditFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.RegistryAuditRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.RegistryRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RegistryAuditRule(System::Security::Principal::IdentityReference ^ identity, System::Security::AccessControl::RegistryRights registryRights, System::Security::AccessControl::InheritanceFlags inheritanceFlags, System::Security::AccessControl::PropagationFlags propagationFlags, System::Security::AccessControl::AuditFlags flags);" />
      <MemberSignature Language="F#" Value="new System.Security.AccessControl.RegistryAuditRule : System.Security.Principal.IdentityReference * System.Security.AccessControl.RegistryRights * System.Security.AccessControl.InheritanceFlags * System.Security.AccessControl.PropagationFlags * System.Security.AccessControl.AuditFlags -&gt; System.Security.AccessControl.RegistryAuditRule" Usage="new System.Security.AccessControl.RegistryAuditRule (identity, registryRights, inheritanceFlags, propagationFlags, flags)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identity" Type="System.Security.Principal.IdentityReference" />
        <Parameter Name="registryRights" Type="System.Security.AccessControl.RegistryRights" />
        <Parameter Name="inheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
        <Parameter Name="propagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
        <Parameter Name="flags" Type="System.Security.AccessControl.AuditFlags" />
      </Parameters>
      <Docs>
        <param name="identity">Пользователь или группа, к которым относится данное правило. Должен обладать типом <see cref="T:System.Security.Principal.SecurityIdentifier" /> или таким типом, как <see cref="T:System.Security.Principal.NTAccount" />, чтобы его можно было преобразовать в тип <see cref="T:System.Security.Principal.SecurityIdentifier" />.</param>
        <param name="registryRights">Побитовое сочетание значений <see cref="T:System.Security.AccessControl.RegistryRights" />, определяющее подлежащие аудиту права доступа.</param>
        <param name="inheritanceFlags">Побитовое сочетание значений <see cref="T:System.Security.AccessControl.InheritanceFlags" />, которое определяет, должно ли правило аудита применяться к подразделам текущего раздела.</param>
        <param name="propagationFlags">Побитовое сочетание значений <see cref="T:System.Security.AccessControl.PropagationFlags" />, влияющее на способ распространения наследования правила аудита на подразделы текущего раздела.</param>
        <param name="flags">Побитовое сочетание значений <see cref="T:System.Security.AccessControl.AuditFlags" />, определяющее предмет аудита — успешные попытки доступа, неудачные попытки доступа или все попытки доступа.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Security.AccessControl.RegistryAuditRule" /> с указанием пользователя или группы для аудита, прав для аудита, необходимости учитывать наследование и подлежащих аудиту операций (успешных попыток доступа, неудачных попыток доступа или всех попыток доступа).</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Все разделы реестра являются контейнерами, поэтому <xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit?displayProperty=nameWithType> флагом является единственный флаг наследования, который является значимым для разделов реестра. Если этот флаг не указан, флаги распространения не учитываются и затрагивается только непосредственный ключ. Если флаг имеется, правило распространяется, как показано в следующей таблице. В таблице предполагается наличие подраздела с вложенным подразделом CS и внучатый подраздела GS. То есть путь к подразделу внучатый — С\КС\ГС.  
  
|Флаги распространения|S|СЛОЖНЫХ|GS|  
|-----------------------|-------|--------|--------|  
|<xref:System.Security.AccessControl.PropagationFlags.None>|X|X|X|  
|<xref:System.Security.AccessControl.PropagationFlags.NoPropagateInherit>|X|X||  
|<xref:System.Security.AccessControl.PropagationFlags.InheritOnly>||X|X|  
|<xref:System.Security.AccessControl.PropagationFlags.NoPropagateInherit>, <xref:System.Security.AccessControl.PropagationFlags.InheritOnly>||X||  
  
 Шаблон для подраздела внучатый управляет всеми подразделами, содержащимися в подразделе внучатый.  
  
 Например, если <xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit> флаг указан для параметра `inheritanceFlags` и <xref:System.Security.AccessControl.PropagationFlags.InheritOnly> для `propagationFlags`параметра задан флаг распространения, это правило не применяется к непосредственному подразделу, но применяется ко всем его непосредственным дочерним подразделам и ко всем подразделам. они содержат.  
  
> [!NOTE]
>  Хотя можно указать <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit?displayProperty=nameWithType> флаг для `inheritanceFlags`, нет никакой точки. В целях контроля доступа пары "имя-значение" в подразделе не являются отдельными объектами. Права доступа к парам "имя-значение" контролируются правами подраздела. Более того, поскольку все подразделы являются контейнерами (то есть они могут содержать другие подразделы), они не затрагиваются <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit> флагом. Наконец, указание <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit> флага затрудняет обслуживание правил, так как оно влияет на нормальную комбинацию совместимых правил.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Параметр <paramref name="eventRights" /> содержит недопустимое значение.  
  
- или - 
 Параметр <paramref name="flags" /> содержит недопустимое значение.  
  
-или- 
 Параметр <paramref name="inheritanceFlags" /> содержит недопустимое значение.  
  
-или- 
 Параметр <paramref name="propagationFlags" /> содержит недопустимое значение.</exception>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="identity" /> имеет значение <see langword="null" />.  
  
- или - 
 <paramref name="registryRights" /> равен нулю.</exception>
        <exception cref="T:System.ArgumentException">Параметр <paramref name="identity" /> не относится к типу <see cref="T:System.Security.Principal.SecurityIdentifier" /> и к такому типу, как <see cref="T:System.Security.Principal.NTAccount" />, который можно преобразовать в тип <see cref="T:System.Security.Principal.SecurityIdentifier" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RegistryAuditRule (string identity, System.Security.AccessControl.RegistryRights registryRights, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AuditFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string identity, valuetype System.Security.AccessControl.RegistryRights registryRights, valuetype System.Security.AccessControl.InheritanceFlags inheritanceFlags, valuetype System.Security.AccessControl.PropagationFlags propagationFlags, valuetype System.Security.AccessControl.AuditFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.RegistryAuditRule.#ctor(System.String,System.Security.AccessControl.RegistryRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RegistryAuditRule(System::String ^ identity, System::Security::AccessControl::RegistryRights registryRights, System::Security::AccessControl::InheritanceFlags inheritanceFlags, System::Security::AccessControl::PropagationFlags propagationFlags, System::Security::AccessControl::AuditFlags flags);" />
      <MemberSignature Language="F#" Value="new System.Security.AccessControl.RegistryAuditRule : string * System.Security.AccessControl.RegistryRights * System.Security.AccessControl.InheritanceFlags * System.Security.AccessControl.PropagationFlags * System.Security.AccessControl.AuditFlags -&gt; System.Security.AccessControl.RegistryAuditRule" Usage="new System.Security.AccessControl.RegistryAuditRule (identity, registryRights, inheritanceFlags, propagationFlags, flags)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identity" Type="System.String" />
        <Parameter Name="registryRights" Type="System.Security.AccessControl.RegistryRights" />
        <Parameter Name="inheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
        <Parameter Name="propagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
        <Parameter Name="flags" Type="System.Security.AccessControl.AuditFlags" />
      </Parameters>
      <Docs>
        <param name="identity">Имя пользователя или группы, к которым относится данное правило.</param>
        <param name="registryRights">Побитовое сочетание значений <see cref="T:System.Security.AccessControl.RegistryRights" />, определяющее подлежащие аудиту права доступа.</param>
        <param name="inheritanceFlags">Побитовое сочетание флагов <see cref="T:System.Security.AccessControl.InheritanceFlags" />, которое определяет, должно ли правило аудита применяться к подразделам текущего раздела.</param>
        <param name="propagationFlags">Побитовое сочетание флагов <see cref="T:System.Security.AccessControl.PropagationFlags" />, влияющее на способ распространения наследования правила аудита на подразделы текущего раздела.</param>
        <param name="flags">Побитовое сочетание значений <see cref="T:System.Security.AccessControl.AuditFlags" />, определяющее предмет аудита — успешные попытки доступа, неудачные попытки доступа или все попытки доступа.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Security.AccessControl.RegistryAuditRule" /> с указанием имени пользователя или группы для аудита, прав для аудита, необходимости учитывать наследование, и подлежащих аудиту операций (успешных попыток доступа, неудачных попыток доступа или всех попыток доступа).</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Все разделы реестра являются контейнерами, поэтому <xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit?displayProperty=nameWithType> флагом является единственный флаг наследования, который является значимым для разделов реестра. Если этот флаг не указан, флаги распространения не учитываются и затрагивается только непосредственный ключ. Если флаг имеется, правило распространяется, как показано в следующей таблице. В таблице предполагается наличие подраздела с вложенным подразделом CS и внучатый подраздела GS. То есть путь к подразделу внучатый — С\КС\ГС.  
  
|Флаги распространения|S|СЛОЖНЫХ|GS|  
|-----------------------|-------|--------|--------|  
|<xref:System.Security.AccessControl.PropagationFlags.None>|X|X|X|  
|<xref:System.Security.AccessControl.PropagationFlags.NoPropagateInherit>|X|X||  
|<xref:System.Security.AccessControl.PropagationFlags.InheritOnly>||X|X|  
|<xref:System.Security.AccessControl.PropagationFlags.NoPropagateInherit>, <xref:System.Security.AccessControl.PropagationFlags.InheritOnly>||X||  
  
 Шаблон для подраздела внучатый управляет всеми подразделами, содержащимися в подразделе внучатый.  
  
 Например, если <xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit> флаг указан для параметра `inheritanceFlags` и <xref:System.Security.AccessControl.PropagationFlags.InheritOnly> для `propagationFlags`параметра задан флаг распространения, это правило не применяется к непосредственному подразделу, но применяется ко всем его непосредственным дочерним подразделам и ко всем подразделам. они содержат.  
  
> [!NOTE]
>  Хотя можно указать <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit?displayProperty=nameWithType> флаг для `inheritanceFlags`, нет никакой точки. В целях контроля доступа пары "имя-значение" в подразделе не являются отдельными объектами. Права доступа к парам "имя-значение" контролируются правами подраздела. Более того, поскольку все подразделы являются контейнерами (то есть они могут содержать другие подразделы), они не затрагиваются <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit> флагом. Наконец, указание <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit> флага затрудняет обслуживание правил, так как оно влияет на нормальную комбинацию совместимых правил.  
  
 Этот конструктор эквивалентен <xref:System.Security.Principal.NTAccount> созданию объекта путем передачи `identity` в <xref:System.Security.Principal.NTAccount.%23ctor%28System.String%29?displayProperty=nameWithType> конструктор <xref:System.Security.AccessControl.RegistryAuditRule.%23ctor%28System.Security.Principal.IdentityReference%2CSystem.Security.AccessControl.RegistryRights%2CSystem.Security.AccessControl.InheritanceFlags%2CSystem.Security.AccessControl.PropagationFlags%2CSystem.Security.AccessControl.AuditFlags%29> и передачи только что созданного <xref:System.Security.Principal.NTAccount> объекта в конструктор.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Параметр <paramref name="eventRights" /> содержит недопустимое значение.  
  
-или- 
 Параметр <paramref name="flags" /> содержит недопустимое значение.  
  
- или - 
 Параметр <paramref name="inheritanceFlags" /> содержит недопустимое значение.  
  
-или- 
 Параметр <paramref name="propagationFlags" /> содержит недопустимое значение.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="registryRights" /> равен нулю.</exception>
        <exception cref="T:System.ArgumentException">Свойство <paramref name="identity" /> имеет значение <see langword="null" />.  
  
- или - 
 <paramref name="identity" /> представляет собой строку нулевой длины.  
  
- или - 
 Длина значения параметра <paramref name="identity" /> превышает 512 символов.</exception>
      </Docs>
    </Member>
    <Member MemberName="RegistryRights">
      <MemberSignature Language="C#" Value="public System.Security.AccessControl.RegistryRights RegistryRights { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.AccessControl.RegistryRights RegistryRights" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.RegistryAuditRule.RegistryRights" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RegistryRights As RegistryRights" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::AccessControl::RegistryRights RegistryRights { System::Security::AccessControl::RegistryRights get(); };" />
      <MemberSignature Language="F#" Value="member this.RegistryRights : System.Security.AccessControl.RegistryRights" Usage="System.Security.AccessControl.RegistryAuditRule.RegistryRights" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.RegistryRights</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает права доступа, на которые распространяется действие этого правила аудита.</summary>
        <value>Побитовое сочетание значений <see cref="T:System.Security.AccessControl.RegistryRights" />, определяющее права, на которые распространяется действие этого правила аудита.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.AccessControl.RegistryAuditRule>объекты являются неизменяемыми. Можно создать новое правило аудита, представляющее другого пользователя, другие права или другое сочетание <xref:System.Security.AccessControl.AuditFlags> флагов, но нельзя изменить существующее правило аудита.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
