<Type Name="RegistrySecurity" FullName="System.Security.AccessControl.RegistrySecurity">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a1e573054d899d9ece24be60d9cd1af96043f0b2" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69085984" /></Metadata><TypeSignature Language="C#" Value="public sealed class RegistrySecurity : System.Security.AccessControl.NativeObjectSecurity" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit RegistrySecurity extends System.Security.AccessControl.NativeObjectSecurity" />
  <TypeSignature Language="DocId" Value="T:System.Security.AccessControl.RegistrySecurity" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class RegistrySecurity&#xA;Inherits NativeObjectSecurity" />
  <TypeSignature Language="C++ CLI" Value="public ref class RegistrySecurity sealed : System::Security::AccessControl::NativeObjectSecurity" />
  <TypeSignature Language="F#" Value="type RegistrySecurity = class&#xA;    inherit NativeObjectSecurity" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.AccessControl.NativeObjectSecurity</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1">
      <AttributeName>System.Security.SecurityCritical</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="60c3c-101">Обеспечивает безопасность управления доступом Windows для раздела реестра.</span><span class="sxs-lookup"><span data-stu-id="60c3c-101">Represents the Windows access control security for a registry key.</span></span> <span data-ttu-id="60c3c-102">Этот класс не наследуется.</span><span class="sxs-lookup"><span data-stu-id="60c3c-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="60c3c-103"><xref:System.Security.AccessControl.RegistrySecurity> Объект указывает права доступа для раздела реестра, а также указывает способ аудита попыток доступа.</span><span class="sxs-lookup"><span data-stu-id="60c3c-103">A <xref:System.Security.AccessControl.RegistrySecurity> object specifies access rights for a registry key, and also specifies how access attempts are audited.</span></span> <span data-ttu-id="60c3c-104">Права доступа к разделу реестра выражаются в виде правил с каждым правилом доступа, <xref:System.Security.AccessControl.RegistryAccessRule> представленным объектом.</span><span class="sxs-lookup"><span data-stu-id="60c3c-104">Access rights to the registry key are expressed as rules, with each access rule represented by a <xref:System.Security.AccessControl.RegistryAccessRule> object.</span></span> <span data-ttu-id="60c3c-105">Каждое правило аудита представлено <xref:System.Security.AccessControl.RegistryAuditRule> объектом.</span><span class="sxs-lookup"><span data-stu-id="60c3c-105">Each auditing rule is represented by a <xref:System.Security.AccessControl.RegistryAuditRule> object.</span></span>  
  
 <span data-ttu-id="60c3c-106">Это отражает базовую систему безопасности Windows, в которой каждый защищаемый объект имеет по крайней мере один избирательный список управления доступом (DACL), управляющий доступом к защищенному объекту, и не более одного системного списка управления доступом (SACL), который указывает, какой доступ попытки аудита.</span><span class="sxs-lookup"><span data-stu-id="60c3c-106">This mirrors the underlying Windows security system, in which each securable object has at most one discretionary access control list (DACL) that controls access to the secured object, and at most one system access control list (SACL) that specifies which access attempts are audited.</span></span> <span data-ttu-id="60c3c-107">Списки DACL и SACL представляют собой упорядоченные списки записей управления доступом (ACE), которые определяют доступ и аудит для пользователей и групп.</span><span class="sxs-lookup"><span data-stu-id="60c3c-107">The DACL and SACL are ordered lists of access control entries (ACE) that specify access and auditing for users and groups.</span></span> <span data-ttu-id="60c3c-108">Объект <xref:System.Security.AccessControl.RegistryAccessRule> или<xref:System.Security.AccessControl.RegistryAuditRule> может представлять более одной записи ACE.</span><span class="sxs-lookup"><span data-stu-id="60c3c-108">A <xref:System.Security.AccessControl.RegistryAccessRule> or <xref:System.Security.AccessControl.RegistryAuditRule> object might represent more than one ACE.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="60c3c-109">Безопасность управления доступом Windows может применяться только к разделам реестра.</span><span class="sxs-lookup"><span data-stu-id="60c3c-109">Windows access control security can only be applied to registry keys.</span></span> <span data-ttu-id="60c3c-110">Его нельзя применить к отдельным парам "ключ-значение", хранящимся в ключе.</span><span class="sxs-lookup"><span data-stu-id="60c3c-110">It cannot be applied to individual key/value pairs stored in a key.</span></span>  
  
 <span data-ttu-id="60c3c-111">Классы <xref:System.Security.AccessControl.RegistrySecurity>, <xref:System.Security.AccessControl.RegistryAccessRule> и<xref:System.Security.AccessControl.RegistryAuditRule> скрывают сведения о реализации списков управления доступом и ACE.</span><span class="sxs-lookup"><span data-stu-id="60c3c-111">The <xref:System.Security.AccessControl.RegistrySecurity>, <xref:System.Security.AccessControl.RegistryAccessRule>, and <xref:System.Security.AccessControl.RegistryAuditRule> classes hide the implementation details of ACLs and ACEs.</span></span> <span data-ttu-id="60c3c-112">Они позволяют игнорировать Севентин различные типы ACE и сложность правильного поддержания наследования и распространения прав доступа.</span><span class="sxs-lookup"><span data-stu-id="60c3c-112">They allow you to ignore the seventeen different ACE types and the complexity of correctly maintaining inheritance and propagation of access rights.</span></span> <span data-ttu-id="60c3c-113">Эти объекты также предназначены для предотвращения следующих распространенных ошибок управления доступом:</span><span class="sxs-lookup"><span data-stu-id="60c3c-113">These objects are also designed to prevent the following common access control errors:</span></span>  
  
-   <span data-ttu-id="60c3c-114">Создание дескриптора безопасности с пустым списком DACL.</span><span class="sxs-lookup"><span data-stu-id="60c3c-114">Creating a security descriptor with a null DACL.</span></span> <span data-ttu-id="60c3c-115">Пустая ссылка на DACL позволяет любому пользователю добавлять правила доступа к объекту, потенциально создавая атаку типа "отказ в обслуживании".</span><span class="sxs-lookup"><span data-stu-id="60c3c-115">A null reference to a DACL allows any user to add access rules to an object, potentially creating a denial-of-service attack.</span></span> <span data-ttu-id="60c3c-116">Новый <xref:System.Security.AccessControl.RegistrySecurity> объект всегда начинается с пустого списка DACL, который запрещает доступ всем пользователям.</span><span class="sxs-lookup"><span data-stu-id="60c3c-116">A new <xref:System.Security.AccessControl.RegistrySecurity> object always starts with an empty DACL, which denies all access for all users.</span></span>  
  
-   <span data-ttu-id="60c3c-117">Нарушение канонического порядка записей ACE.</span><span class="sxs-lookup"><span data-stu-id="60c3c-117">Violating the canonical ordering of ACEs.</span></span> <span data-ttu-id="60c3c-118">Если список ACE в списке DACL не хранится в каноническом порядке, пользователям может быть непреднамеренно предоставлен доступ к защищенному объекту.</span><span class="sxs-lookup"><span data-stu-id="60c3c-118">If the ACE list in the DACL is not kept in the canonical order, users might inadvertently be given access to the secured object.</span></span> <span data-ttu-id="60c3c-119">Например, запрещенные права доступа всегда должны отображаться до разрешения доступа.</span><span class="sxs-lookup"><span data-stu-id="60c3c-119">For example, denied access rights must always appear before allowed access rights.</span></span> <span data-ttu-id="60c3c-120"><xref:System.Security.AccessControl.RegistrySecurity>объекты обслуживают правильный порядок внутри.</span><span class="sxs-lookup"><span data-stu-id="60c3c-120"><xref:System.Security.AccessControl.RegistrySecurity> objects maintain the correct order internally.</span></span>  
  
-   <span data-ttu-id="60c3c-121">Управление флагами дескриптора безопасности, которые должны быть только в управлении Resource Manager.</span><span class="sxs-lookup"><span data-stu-id="60c3c-121">Manipulating security descriptor flags, which should be under resource manager control only.</span></span>  
  
-   <span data-ttu-id="60c3c-122">Создание недопустимых сочетаний флагов ACE.</span><span class="sxs-lookup"><span data-stu-id="60c3c-122">Creating invalid combinations of ACE flags.</span></span>  
  
-   <span data-ttu-id="60c3c-123">Управление унаследованными элементами ACE.</span><span class="sxs-lookup"><span data-stu-id="60c3c-123">Manipulating inherited ACEs.</span></span> <span data-ttu-id="60c3c-124">Наследование и распространение обрабатываются диспетчером ресурсов в ответ на изменения, вносимые в правила доступа и аудита.</span><span class="sxs-lookup"><span data-stu-id="60c3c-124">Inheritance and propagation are handled by the resource manager, in response to changes you make to access and audit rules.</span></span>  
  
-   <span data-ttu-id="60c3c-125">Вставка бессмысленных элементов ACE в списки управления доступом.</span><span class="sxs-lookup"><span data-stu-id="60c3c-125">Inserting meaningless ACEs into ACLs.</span></span>  
  
 <span data-ttu-id="60c3c-126">Единственными возможностями, которые не поддерживаются объектами безопасности .NET, являются опасные действия, которые следует избегать большинству разработчиков приложений, в том числе следующие:</span><span class="sxs-lookup"><span data-stu-id="60c3c-126">The only capabilities not supported by the .NET security objects are dangerous activities that should be avoided by the majority of application developers, such as the following:</span></span>  
  
-   <span data-ttu-id="60c3c-127">Низкоуровневые задачи, которые обычно выполняются диспетчером ресурсов.</span><span class="sxs-lookup"><span data-stu-id="60c3c-127">Low-level tasks that are normally performed by the resource manager.</span></span>  
  
-   <span data-ttu-id="60c3c-128">Добавление или удаление записей контроля доступа таким образом, чтобы не поддерживать каноническое упорядочение.</span><span class="sxs-lookup"><span data-stu-id="60c3c-128">Adding or removing access control entries in ways that do not maintain the canonical ordering.</span></span>  
  
 <span data-ttu-id="60c3c-129">Чтобы изменить параметры безопасности управления доступом Windows для раздела реестра, используйте <xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A?displayProperty=nameWithType> метод для <xref:System.Security.AccessControl.RegistrySecurity> получения объекта.</span><span class="sxs-lookup"><span data-stu-id="60c3c-129">To modify Windows access control security for a registry key, use the <xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A?displayProperty=nameWithType> method to get the <xref:System.Security.AccessControl.RegistrySecurity> object.</span></span> <span data-ttu-id="60c3c-130">Измените объект безопасности, добавив и удалив правила, а затем повторно подключите <xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=nameWithType> его с помощью метода.</span><span class="sxs-lookup"><span data-stu-id="60c3c-130">Modify the security object by adding and removing rules, and then use the <xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=nameWithType> method to reattach it.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="60c3c-131">Изменения, вносимые в <xref:System.Security.AccessControl.RegistrySecurity> объект, не влияют на уровни доступа к разделу реестра до тех пор, пока не будет <xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=nameWithType> вызван метод назначения измененного объекта безопасности разделу реестра.</span><span class="sxs-lookup"><span data-stu-id="60c3c-131">Changes you make to a <xref:System.Security.AccessControl.RegistrySecurity> object do not affect the access levels of the registry key until you call the <xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=nameWithType> method to assign the altered security object to the registry key.</span></span>  
  
 <span data-ttu-id="60c3c-132">Чтобы скопировать параметры безопасности контроля доступа из одного раздела реестра в другой, используйте <xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A?displayProperty=nameWithType> метод для <xref:System.Security.AccessControl.RegistrySecurity> получения объекта, представляющего правила доступа и аудита для первого раздела реестра <xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=nameWithType> , а затем используйте метод, чтобы назначить эти правила для элемента управления Второй раздел реестра.</span><span class="sxs-lookup"><span data-stu-id="60c3c-132">To copy access control security from one registry key to another, use the <xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A?displayProperty=nameWithType> method to get a <xref:System.Security.AccessControl.RegistrySecurity> object representing the access and audit rules for the first registry key, and then use the <xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=nameWithType> method to assign those rules to the second registry key.</span></span> <span data-ttu-id="60c3c-133">Можно также назначить правила второму разделу реестра с помощью <xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A?displayProperty=nameWithType> метода или <xref:Microsoft.Win32.RegistryKey.CreateSubKey%2A?displayProperty=nameWithType> , принимающего <xref:System.Security.AccessControl.RegistrySecurity> параметр объекта.</span><span class="sxs-lookup"><span data-stu-id="60c3c-133">You can also assign the rules to a second registry key with an <xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A?displayProperty=nameWithType> or <xref:Microsoft.Win32.RegistryKey.CreateSubKey%2A?displayProperty=nameWithType> method that takes a <xref:System.Security.AccessControl.RegistrySecurity> object parameter.</span></span>  
  
 <span data-ttu-id="60c3c-134">Пользователи с вложениями в языке определения дескрипторов безопасности (SDDL) могут использовать <xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm%2A> метод для задания правил доступа для раздела реестра, <xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm%2A> а метод — для получения строки, представляющей правила доступа в формате SDDL.</span><span class="sxs-lookup"><span data-stu-id="60c3c-134">Users with an investment in the security descriptor definition language (SDDL) can use the <xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm%2A> method to set access rules for a registry key, and the <xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm%2A> method to obtain a string that represents the access rules in SDDL format.</span></span> <span data-ttu-id="60c3c-135">Это не рекомендуется для новых разработок.</span><span class="sxs-lookup"><span data-stu-id="60c3c-135">This is not recommended for new development.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="60c3c-136">Этот раздел содержит два примера кода.</span><span class="sxs-lookup"><span data-stu-id="60c3c-136">This section contains two code examples.</span></span> <span data-ttu-id="60c3c-137">В первом примере показано, как совместимые правила объединяются при добавлении и удалении, а второй показывает, как флаги наследования и распространения влияют на добавление и удаление правил.</span><span class="sxs-lookup"><span data-stu-id="60c3c-137">The first example shows how compatible rules merge when added and removed, and the second shows how inheritance and propagation flags affect the addition and deletion of rules.</span></span>  
  
 <span data-ttu-id="60c3c-138">Пример 1</span><span class="sxs-lookup"><span data-stu-id="60c3c-138">Example 1</span></span>  
  
 <span data-ttu-id="60c3c-139">В следующем примере кода показано, как <xref:System.Security.AccessControl.RegistrySecurity.RemoveAccessRule%2A> метод удаляет права из совместимого правила и <xref:System.Security.AccessControl.RegistrySecurity.AddAccessRule%2A> как метод объединяет права с совместимыми правилами.</span><span class="sxs-lookup"><span data-stu-id="60c3c-139">The following code example shows how the <xref:System.Security.AccessControl.RegistrySecurity.RemoveAccessRule%2A> method removes rights from a compatible rule, and how the <xref:System.Security.AccessControl.RegistrySecurity.AddAccessRule%2A> method merges rights with compatible rules.</span></span>  
  
 <span data-ttu-id="60c3c-140">В примере создается <xref:System.Security.AccessControl.RegistrySecurity> объект и добавляется правило, которое разрешает права текущего пользователя <xref:System.Security.AccessControl.RegistryRights.ReadKey?displayProperty=nameWithType> .</span><span class="sxs-lookup"><span data-stu-id="60c3c-140">The example creates a <xref:System.Security.AccessControl.RegistrySecurity> object and adds a rule that allows the current user <xref:System.Security.AccessControl.RegistryRights.ReadKey?displayProperty=nameWithType> rights.</span></span> <span data-ttu-id="60c3c-141">Затем в примере создается правило, которое предоставляет пользователю <xref:System.Security.AccessControl.RegistryRights.SetValue?displayProperty=nameWithType>те же права наследования и распространения, что и в первом правиле, и <xref:System.Security.AccessControl.RegistrySecurity.RemoveAccessRule%2A> использует метод для удаления <xref:System.Security.AccessControl.RegistrySecurity> этого нового правила из объекта.</span><span class="sxs-lookup"><span data-stu-id="60c3c-141">The example then creates a rule that grants the user <xref:System.Security.AccessControl.RegistryRights.SetValue?displayProperty=nameWithType>, with the same inheritance and propagation rights as the first rule, and uses the <xref:System.Security.AccessControl.RegistrySecurity.RemoveAccessRule%2A> method to remove this new rule from the <xref:System.Security.AccessControl.RegistrySecurity> object.</span></span> <span data-ttu-id="60c3c-142"><xref:System.Security.AccessControl.RegistryRights.SetValue>является составляющим <xref:System.Security.AccessControl.RegistryRights.ReadKey>, поэтому удаляется из совместимого правила.</span><span class="sxs-lookup"><span data-stu-id="60c3c-142"><xref:System.Security.AccessControl.RegistryRights.SetValue> is a constituent of <xref:System.Security.AccessControl.RegistryRights.ReadKey>, so it is removed from the compatible rule.</span></span> <span data-ttu-id="60c3c-143">Отобразятся правила в <xref:System.Security.AccessControl.RegistrySecurity> объекте, в которых отображаются оставшиеся составляющие. <xref:System.Security.AccessControl.RegistryRights.ReadKey></span><span class="sxs-lookup"><span data-stu-id="60c3c-143">The rules in the <xref:System.Security.AccessControl.RegistrySecurity> object are displayed, showing the remaining constituents of <xref:System.Security.AccessControl.RegistryRights.ReadKey>.</span></span>  
  
 <span data-ttu-id="60c3c-144">Затем в примере кода вызывается <xref:System.Security.AccessControl.RegistrySecurity.AddAccessRule%2A> метод для <xref:System.Security.AccessControl.RegistryRights.SetValue> слияния обратно в правило в <xref:System.Security.AccessControl.RegistrySecurity> объекте.</span><span class="sxs-lookup"><span data-stu-id="60c3c-144">The example code then calls the <xref:System.Security.AccessControl.RegistrySecurity.AddAccessRule%2A> method to merge the <xref:System.Security.AccessControl.RegistryRights.SetValue> right back into the rule in the <xref:System.Security.AccessControl.RegistrySecurity> object.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="60c3c-145">В этом примере объект безопасности не подключается к <xref:Microsoft.Win32.RegistryKey> объекту.</span><span class="sxs-lookup"><span data-stu-id="60c3c-145">This example does not attach the security object to a <xref:Microsoft.Win32.RegistryKey> object.</span></span> <span data-ttu-id="60c3c-146">Во втором примере в этом разделе прикрепляется объект безопасности, а также примеры в <xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A?displayProperty=nameWithType> и. <xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="60c3c-146">The second example in this section attaches a security object, and so do the examples in <xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A?displayProperty=nameWithType> and <xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=nameWithType>.</span></span>  
  
 [!code-csharp[System.Security.AccessControl.RegistrySecurity.RemoveAccessRule#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.AccessControl.RegistrySecurity.RemoveAccessRule/CS/source.cs#1)]
 [!code-vb[System.Security.AccessControl.RegistrySecurity.RemoveAccessRule#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.AccessControl.RegistrySecurity.RemoveAccessRule/VB/source.vb#1)]  
  
 <span data-ttu-id="60c3c-147">Пример 2</span><span class="sxs-lookup"><span data-stu-id="60c3c-147">Example 2</span></span>  
  
 <span data-ttu-id="60c3c-148">В следующем примере кода демонстрируются правила доступа с наследованием и распространением.</span><span class="sxs-lookup"><span data-stu-id="60c3c-148">The following code example demonstrates access rules with inheritance and propagation.</span></span> <span data-ttu-id="60c3c-149">В примере создается <xref:System.Security.AccessControl.RegistrySecurity> объект, затем создается и добавляются два правила с <xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit> флагом.</span><span class="sxs-lookup"><span data-stu-id="60c3c-149">The example creates a <xref:System.Security.AccessControl.RegistrySecurity> object, then creates and adds two rules that have the <xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit> flag.</span></span> <span data-ttu-id="60c3c-150">Первое правило не имеет флагов распространения, а второй имеет <xref:System.Security.AccessControl.PropagationFlags.NoPropagateInherit> и. <xref:System.Security.AccessControl.PropagationFlags.InheritOnly></span><span class="sxs-lookup"><span data-stu-id="60c3c-150">The first rule has no propagation flags, while the second has <xref:System.Security.AccessControl.PropagationFlags.NoPropagateInherit> and <xref:System.Security.AccessControl.PropagationFlags.InheritOnly>.</span></span>  
  
 <span data-ttu-id="60c3c-151">Программа отображает правила в <xref:System.Security.AccessControl.RegistrySecurity> объекте, а затем <xref:System.Security.AccessControl.RegistrySecurity> использует объект для создания подраздела.</span><span class="sxs-lookup"><span data-stu-id="60c3c-151">The program displays the rules in the <xref:System.Security.AccessControl.RegistrySecurity> object, and then uses the <xref:System.Security.AccessControl.RegistrySecurity> object to create a subkey.</span></span> <span data-ttu-id="60c3c-152">Программа создает дочерний подраздел и подраздел внучатый, а затем отображает сведения о безопасности для каждого подраздела.</span><span class="sxs-lookup"><span data-stu-id="60c3c-152">The program creates a child subkey and a grandchild subkey, then displays the security for each subkey.</span></span> <span data-ttu-id="60c3c-153">Наконец, программа удаляет тестовые ключи.</span><span class="sxs-lookup"><span data-stu-id="60c3c-153">Finally, the program deletes the test keys.</span></span>  
  
 [!code-csharp[System.Security.AccessControl.RegistryAccessRule.ctor2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.AccessControl.RegistryAccessRule.ctor2/CS/source.cs#1)]
 [!code-vb[System.Security.AccessControl.RegistryAccessRule.ctor2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.AccessControl.RegistryAccessRule.ctor2/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RegistrySecurity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.RegistrySecurity.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RegistrySecurity();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="60c3c-154">Инициализирует новый экземпляр класса <see cref="T:System.Security.AccessControl.RegistrySecurity" /> со значениями по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="60c3c-154">Initializes a new instance of the <see cref="T:System.Security.AccessControl.RegistrySecurity" /> class with default values.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="60c3c-155">Новый <xref:System.Security.AccessControl.RegistrySecurity> объект всегда начинается с пустого списка доступа на уровне пользователей (DACL), который запрещает доступ всем пользователям.</span><span class="sxs-lookup"><span data-stu-id="60c3c-155">A new <xref:System.Security.AccessControl.RegistrySecurity> object always starts with an empty discretionary access list (DACL), which denies all access for all users.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AccessRightType">
      <MemberSignature Language="C#" Value="public override Type AccessRightType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type AccessRightType" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.RegistrySecurity.AccessRightType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property AccessRightType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ AccessRightType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AccessRightType : Type" Usage="System.Security.AccessControl.RegistrySecurity.AccessRightType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="60c3c-156">Получает значение перечисления, используемое классом <see cref="T:System.Security.AccessControl.RegistrySecurity" /> для обозначения прав доступа.</span><span class="sxs-lookup"><span data-stu-id="60c3c-156">Gets the enumeration type that the <see cref="T:System.Security.AccessControl.RegistrySecurity" /> class uses to represent access rights.</span></span></summary>
        <value><span data-ttu-id="60c3c-157">Объект <see cref="T:System.Type" />, представляющий перечисление <see cref="T:System.Security.AccessControl.RegistryRights" />.</span><span class="sxs-lookup"><span data-stu-id="60c3c-157">A <see cref="T:System.Type" /> object representing the <see cref="T:System.Security.AccessControl.RegistryRights" /> enumeration.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="60c3c-158">Классы, производные от <xref:System.Security.AccessControl.ObjectSecurity> класса переопределение <xref:System.Security.AccessControl.ObjectSecurity.AccessRightType%2A> свойства и возвращаемые типа, они используют для обозначения прав доступа.</span><span class="sxs-lookup"><span data-stu-id="60c3c-158">Classes that derive from the <xref:System.Security.AccessControl.ObjectSecurity> class override the <xref:System.Security.AccessControl.ObjectSecurity.AccessRightType%2A> property and return the type they use to represent access rights.</span></span> <span data-ttu-id="60c3c-159">При работе с массивами или коллекциями, содержащими объекты безопасности нескольких типов, используйте это свойство, чтобы определить правильный тип перечисления для использования с каждым объектом безопасности.</span><span class="sxs-lookup"><span data-stu-id="60c3c-159">When you work with arrays or collections that contain multiple types of security objects, use this property to determine the correct enumeration type to use with each security object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AccessRuleFactory">
      <MemberSignature Language="C#" Value="public override System.Security.AccessControl.AccessRule AccessRuleFactory (System.Security.Principal.IdentityReference identityReference, int accessMask, bool isInherited, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AccessControlType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.AccessControl.AccessRule AccessRuleFactory(class System.Security.Principal.IdentityReference identityReference, int32 accessMask, bool isInherited, valuetype System.Security.AccessControl.InheritanceFlags inheritanceFlags, valuetype System.Security.AccessControl.PropagationFlags propagationFlags, valuetype System.Security.AccessControl.AccessControlType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.RegistrySecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::AccessControl::AccessRule ^ AccessRuleFactory(System::Security::Principal::IdentityReference ^ identityReference, int accessMask, bool isInherited, System::Security::AccessControl::InheritanceFlags inheritanceFlags, System::Security::AccessControl::PropagationFlags propagationFlags, System::Security::AccessControl::AccessControlType type);" />
      <MemberSignature Language="F#" Value="override this.AccessRuleFactory : System.Security.Principal.IdentityReference * int * bool * System.Security.AccessControl.InheritanceFlags * System.Security.AccessControl.PropagationFlags * System.Security.AccessControl.AccessControlType -&gt; System.Security.AccessControl.AccessRule" Usage="registrySecurity.AccessRuleFactory (identityReference, accessMask, isInherited, inheritanceFlags, propagationFlags, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.AccessRule</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identityReference" Type="System.Security.Principal.IdentityReference" />
        <Parameter Name="accessMask" Type="System.Int32" />
        <Parameter Name="isInherited" Type="System.Boolean" />
        <Parameter Name="inheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
        <Parameter Name="propagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
        <Parameter Name="type" Type="System.Security.AccessControl.AccessControlType" />
      </Parameters>
      <Docs>
        <param name="identityReference"><span data-ttu-id="60c3c-160">Объект <see cref="T:System.Security.Principal.IdentityReference" />, идентифицирующий пользователя или группу, к которым относится данное правило.</span><span class="sxs-lookup"><span data-stu-id="60c3c-160">An <see cref="T:System.Security.Principal.IdentityReference" /> that identifies the user or group the rule applies to.</span></span></param>
        <param name="accessMask"><span data-ttu-id="60c3c-161">Побитовое сочетание значений <see cref="T:System.Security.AccessControl.RegistryRights" />, определяющее разрешаемые или запрещаемые права доступа, приведенное к целочисленному типу.</span><span class="sxs-lookup"><span data-stu-id="60c3c-161">A bitwise combination of <see cref="T:System.Security.AccessControl.RegistryRights" /> values specifying the access rights to allow or deny, cast to an integer.</span></span></param>
        <param name="isInherited"><span data-ttu-id="60c3c-162">Логическое значение, которое определяет, наследуется ли правило.</span><span class="sxs-lookup"><span data-stu-id="60c3c-162">A Boolean value specifying whether the rule is inherited.</span></span></param>
        <param name="inheritanceFlags"><span data-ttu-id="60c3c-163">Побитовое сочетание значений <see cref="T:System.Security.AccessControl.InheritanceFlags" />, определяющее порядок наследования правила подразделами.</span><span class="sxs-lookup"><span data-stu-id="60c3c-163">A bitwise combination of <see cref="T:System.Security.AccessControl.InheritanceFlags" /> values specifying how the rule is inherited by subkeys.</span></span></param>
        <param name="propagationFlags"><span data-ttu-id="60c3c-164">Побитовое сочетание значений <see cref="T:System.Security.AccessControl.PropagationFlags" />, изменяющее порядок наследования правила подразделами.</span><span class="sxs-lookup"><span data-stu-id="60c3c-164">A bitwise combination of <see cref="T:System.Security.AccessControl.PropagationFlags" /> values that modify the way the rule is inherited by subkeys.</span></span> <span data-ttu-id="60c3c-165">Не имеет смысла, если свойство <paramref name="inheritanceFlags" /> имеет значение <see cref="F:System.Security.AccessControl.InheritanceFlags.None" />.</span><span class="sxs-lookup"><span data-stu-id="60c3c-165">Meaningless if the value of <paramref name="inheritanceFlags" /> is <see cref="F:System.Security.AccessControl.InheritanceFlags.None" />.</span></span></param>
        <param name="type"><span data-ttu-id="60c3c-166">Одно из значений <see cref="T:System.Security.AccessControl.AccessControlType" />, определяющее тип правила ("разрешить" или "запретить").</span><span class="sxs-lookup"><span data-stu-id="60c3c-166">One of the <see cref="T:System.Security.AccessControl.AccessControlType" /> values specifying whether the rights are allowed or denied.</span></span></param>
        <summary><span data-ttu-id="60c3c-167">Создает новое правило управления доступом для указанного пользователя с указанными правами, типом управления доступом и флагами.</span><span class="sxs-lookup"><span data-stu-id="60c3c-167">Creates a new access control rule for the specified user, with the specified access rights, access control, and flags.</span></span></summary>
        <returns><span data-ttu-id="60c3c-168">Объект <see cref="T:System.Security.AccessControl.RegistryAccessRule" />, представляющий указанные права для указанного пользователя.</span><span class="sxs-lookup"><span data-stu-id="60c3c-168">A <see cref="T:System.Security.AccessControl.RegistryAccessRule" /> object representing the specified rights for the specified user.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="60c3c-169">Для создания правил управления доступом рекомендуется использовать конструкторы <xref:System.Security.AccessControl.RegistryAccessRule> класса.</span><span class="sxs-lookup"><span data-stu-id="60c3c-169">The recommended way to create access control rules is to use the constructors of the <xref:System.Security.AccessControl.RegistryAccessRule> class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="60c3c-170">Хотя можно указать <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit?displayProperty=nameWithType> флаг, нет никакой точки.</span><span class="sxs-lookup"><span data-stu-id="60c3c-170">Although you can specify the <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit?displayProperty=nameWithType> flag, there is no point in doing so.</span></span> <span data-ttu-id="60c3c-171">В целях контроля доступа пары "имя-значение" в подразделе не являются отдельными объектами.</span><span class="sxs-lookup"><span data-stu-id="60c3c-171">For the purposes of access control, the name/value pairs in a subkey are not separate objects.</span></span> <span data-ttu-id="60c3c-172">Права доступа к парам "имя-значение" контролируются правами подраздела.</span><span class="sxs-lookup"><span data-stu-id="60c3c-172">The access rights to name/value pairs are controlled by the rights of the subkey.</span></span> <span data-ttu-id="60c3c-173">Более того, поскольку все подразделы являются контейнерами (то есть они могут содержать другие подразделы), они не затрагиваются <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit> флагом.</span><span class="sxs-lookup"><span data-stu-id="60c3c-173">Furthermore, since all subkeys are containers (that is, they can contain other subkeys), they are not affected by the <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit> flag.</span></span> <span data-ttu-id="60c3c-174">Наконец, указание <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit> флага затрудняет обслуживание правил, так как оно влияет на нормальную комбинацию совместимых правил.</span><span class="sxs-lookup"><span data-stu-id="60c3c-174">Finally, specifying the <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit> flag needlessly complicates the maintenance of rules, because it interferes with the normal combination of compatible rules.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="60c3c-175">Параметр <paramref name="accessMask" />, <paramref name="inheritanceFlags" />, <paramref name="propagationFlags" /> или <paramref name="type" /> имеет недопустимое значение.</span><span class="sxs-lookup"><span data-stu-id="60c3c-175"><paramref name="accessMask" />, <paramref name="inheritanceFlags" />, <paramref name="propagationFlags" />, or <paramref name="type" /> specifies an invalid value.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="60c3c-176">Свойство <paramref name="identityReference" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="60c3c-176"><paramref name="identityReference" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="60c3c-177">- или -</span><span class="sxs-lookup"><span data-stu-id="60c3c-177">-or-</span></span> 
 <span data-ttu-id="60c3c-178"><paramref name="accessMask" /> равен нулю.</span><span class="sxs-lookup"><span data-stu-id="60c3c-178"><paramref name="accessMask" /> is zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="60c3c-179">Параметр <paramref name="identityReference" /> не относится к типу <see cref="T:System.Security.Principal.SecurityIdentifier" /> и к такому типу, как <see cref="T:System.Security.Principal.NTAccount" />, который можно преобразовать в тип <see cref="T:System.Security.Principal.SecurityIdentifier" />.</span><span class="sxs-lookup"><span data-stu-id="60c3c-179"><paramref name="identityReference" /> is neither of type <see cref="T:System.Security.Principal.SecurityIdentifier" />, nor of a type such as <see cref="T:System.Security.Principal.NTAccount" /> that can be converted to type <see cref="T:System.Security.Principal.SecurityIdentifier" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AccessRuleType">
      <MemberSignature Language="C#" Value="public override Type AccessRuleType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type AccessRuleType" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.RegistrySecurity.AccessRuleType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property AccessRuleType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ AccessRuleType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AccessRuleType : Type" Usage="System.Security.AccessControl.RegistrySecurity.AccessRuleType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="60c3c-180">Получает тип, используемый классом <see cref="T:System.Security.AccessControl.RegistrySecurity" /> для обозначения правил доступа.</span><span class="sxs-lookup"><span data-stu-id="60c3c-180">Gets the type that the <see cref="T:System.Security.AccessControl.RegistrySecurity" /> class uses to represent access rules.</span></span></summary>
        <value><span data-ttu-id="60c3c-181">Объект <see cref="T:System.Type" />, представляющий класс <see cref="T:System.Security.AccessControl.RegistryAccessRule" />.</span><span class="sxs-lookup"><span data-stu-id="60c3c-181">A <see cref="T:System.Type" /> object representing the <see cref="T:System.Security.AccessControl.RegistryAccessRule" /> class.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="60c3c-182">Классы, производные от <xref:System.Security.AccessControl.ObjectSecurity> класса, <xref:System.Security.AccessControl.ObjectSecurity.AccessRuleType%2A> переопределяют свойство и возвращают тип, который они используют для представления правил доступа.</span><span class="sxs-lookup"><span data-stu-id="60c3c-182">Classes that derive from the <xref:System.Security.AccessControl.ObjectSecurity> class override the <xref:System.Security.AccessControl.ObjectSecurity.AccessRuleType%2A> property and return the type they use to represent access rules.</span></span> <span data-ttu-id="60c3c-183">При работе с массивами или коллекциями, содержащими объекты безопасности нескольких типов, используйте это свойство, чтобы определить правильный тип правила доступа для использования с каждым объектом безопасности.</span><span class="sxs-lookup"><span data-stu-id="60c3c-183">When you work with arrays or collections that contain multiple types of security objects, use this property to determine the correct access rule type to use with each security object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddAccessRule">
      <MemberSignature Language="C#" Value="public void AddAccessRule (System.Security.AccessControl.RegistryAccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddAccessRule(class System.Security.AccessControl.RegistryAccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.RegistrySecurity.AddAccessRule(System.Security.AccessControl.RegistryAccessRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddAccessRule (rule As RegistryAccessRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddAccessRule(System::Security::AccessControl::RegistryAccessRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.AddAccessRule : System.Security.AccessControl.RegistryAccessRule -&gt; unit" Usage="registrySecurity.AddAccessRule rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.RegistryAccessRule" />
      </Parameters>
      <Docs>
        <param name="rule"><span data-ttu-id="60c3c-184">Добавляемое правило управления доступом.</span><span class="sxs-lookup"><span data-stu-id="60c3c-184">The access control rule to add.</span></span></param>
        <summary><span data-ttu-id="60c3c-185">Выполняет поиск подходящего элемента управления доступом, с которым можно объединить новое правило.</span><span class="sxs-lookup"><span data-stu-id="60c3c-185">Searches for a matching access control with which the new rule can be merged.</span></span> <span data-ttu-id="60c3c-186">Если поиск не дал результатов, добавляется новое правило.</span><span class="sxs-lookup"><span data-stu-id="60c3c-186">If none are found, adds the new rule.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="60c3c-187"><xref:System.Security.AccessControl.RegistrySecurity.AddAccessRule%2A> Метод осуществляет поиск правила с тем же именем пользователя или группу и же <xref:System.Security.AccessControl.AccessControlType> как `rule`.</span><span class="sxs-lookup"><span data-stu-id="60c3c-187">The <xref:System.Security.AccessControl.RegistrySecurity.AddAccessRule%2A> method searches for rules with the same user or group and the same <xref:System.Security.AccessControl.AccessControlType> as `rule`.</span></span> <span data-ttu-id="60c3c-188">Если ничего не найдено, `rule` добавляется.</span><span class="sxs-lookup"><span data-stu-id="60c3c-188">If none are found, `rule` is added.</span></span> <span data-ttu-id="60c3c-189">Если правило сопоставления найдено, права в `rule` объединяются с существующим правилом.</span><span class="sxs-lookup"><span data-stu-id="60c3c-189">If a matching rule is found, the rights in `rule` are merged with the existing rule.</span></span>  
  
 <span data-ttu-id="60c3c-190">Правила не могут быть объединены, если они имеют разные флаги наследования.</span><span class="sxs-lookup"><span data-stu-id="60c3c-190">Rules cannot be merged if they have different inheritance flags.</span></span> <span data-ttu-id="60c3c-191">Например, если пользователю разрешен доступ на чтение без флагов наследования и <xref:System.Security.AccessControl.RegistrySecurity.AddAccessRule%2A> он используется для добавления правила, предоставляющего пользователю права на запись с помощью наследования для подразделов (<xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit?displayProperty=nameWithType>), то эти два правила не могут быть объединены.</span><span class="sxs-lookup"><span data-stu-id="60c3c-191">For example, if a user is allowed read access with no inheritance flags, and <xref:System.Security.AccessControl.RegistrySecurity.AddAccessRule%2A> is used to add a rule giving the user write access with inheritance for subkeys (<xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit?displayProperty=nameWithType>), the two rules cannot be merged.</span></span>  
  
 <span data-ttu-id="60c3c-192">Правила с разными <xref:System.Security.AccessControl.AccessControlType> значениями никогда не объединяются.</span><span class="sxs-lookup"><span data-stu-id="60c3c-192">Rules with different <xref:System.Security.AccessControl.AccessControlType> values are never merged.</span></span>  
  
 <span data-ttu-id="60c3c-193">Правила Express имеют наиболее экономичный способ.</span><span class="sxs-lookup"><span data-stu-id="60c3c-193">Rules express rights in the most economical way.</span></span> <span data-ttu-id="60c3c-194">Например, если <xref:System.Security.AccessControl.RegistryRights.QueryValues>пользователь имеет <xref:System.Security.AccessControl.RegistryRights.Notify> <xref:System.Security.AccessControl.RegistryRights.ReadPermissions> права и вы добавляете правило, разрешающее <xref:System.Security.AccessControl.RegistryRights.EnumerateSubKeys> права, то у пользователя есть все составные части <xref:System.Security.AccessControl.RegistryRights.ReadKey> прав.</span><span class="sxs-lookup"><span data-stu-id="60c3c-194">For example, if a user has <xref:System.Security.AccessControl.RegistryRights.QueryValues>, <xref:System.Security.AccessControl.RegistryRights.Notify> and <xref:System.Security.AccessControl.RegistryRights.ReadPermissions> rights, and you add a rule allowing <xref:System.Security.AccessControl.RegistryRights.EnumerateSubKeys> rights, the user has all the constituent parts of <xref:System.Security.AccessControl.RegistryRights.ReadKey> rights.</span></span> <span data-ttu-id="60c3c-195">Если вы запрашиваете права пользователя, вы увидите правило, содержащее <xref:System.Security.AccessControl.RegistryRights.ReadKey> права.</span><span class="sxs-lookup"><span data-stu-id="60c3c-195">If you query the user's rights, you will see a rule containing <xref:System.Security.AccessControl.RegistryRights.ReadKey> rights.</span></span> <span data-ttu-id="60c3c-196">Аналогичным образом, если <xref:System.Security.AccessControl.RegistryRights.EnumerateSubKeys> удалить права, другие составляющие <xref:System.Security.AccessControl.RegistryRights.ReadKey> прав будут отображаться снова.</span><span class="sxs-lookup"><span data-stu-id="60c3c-196">Similarly, if you remove <xref:System.Security.AccessControl.RegistryRights.EnumerateSubKeys> rights, the other constituents of <xref:System.Security.AccessControl.RegistryRights.ReadKey> rights will reappear.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="60c3c-197">Следующий пример кода создает правила доступа к реестру и добавляет их к <xref:System.Security.AccessControl.RegistrySecurity> объекту, показывая, как правила, разрешающие и отклоняющие права, остаются отдельными, в то время как совместимые правила одного и того же типа объединяются.</span><span class="sxs-lookup"><span data-stu-id="60c3c-197">The following code example creates registry access rules and adds them to a <xref:System.Security.AccessControl.RegistrySecurity> object, showing how rules that allow and deny rights remain separate, while compatible rules of the same kind are merged.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="60c3c-198">В этом примере объект безопасности не подключается к <xref:Microsoft.Win32.RegistryKey> объекту.</span><span class="sxs-lookup"><span data-stu-id="60c3c-198">This example does not attach the security object to a <xref:Microsoft.Win32.RegistryKey> object.</span></span> <span data-ttu-id="60c3c-199">Примеры, в которых присоединяются объекты безопасности, <xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A?displayProperty=nameWithType> можно <xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=nameWithType>найти в и.</span><span class="sxs-lookup"><span data-stu-id="60c3c-199">Examples that attach security objects can be found in <xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A?displayProperty=nameWithType> and <xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="60c3c-200">Пример кода, демонстрирующий флаги наследования и распространения, можно найти в <xref:System.Security.AccessControl.RegistryAccessRule> классе.</span><span class="sxs-lookup"><span data-stu-id="60c3c-200">A code example that demonstrates inheritance and propagation flags can be found in the <xref:System.Security.AccessControl.RegistryAccessRule> class.</span></span>  
  
 [!code-csharp[System.Security.AccessControl.RegistrySecurity.AddAccessRule#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.AccessControl.RegistrySecurity.AddAccessRule/CS/source.cs#1)]
 [!code-vb[System.Security.AccessControl.RegistrySecurity.AddAccessRule#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.AccessControl.RegistrySecurity.AddAccessRule/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="60c3c-201">Свойство <paramref name="rule" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="60c3c-201"><paramref name="rule" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddAuditRule">
      <MemberSignature Language="C#" Value="public void AddAuditRule (System.Security.AccessControl.RegistryAuditRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddAuditRule(class System.Security.AccessControl.RegistryAuditRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.RegistrySecurity.AddAuditRule(System.Security.AccessControl.RegistryAuditRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddAuditRule (rule As RegistryAuditRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddAuditRule(System::Security::AccessControl::RegistryAuditRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.AddAuditRule : System.Security.AccessControl.RegistryAuditRule -&gt; unit" Usage="registrySecurity.AddAuditRule rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.RegistryAuditRule" />
      </Parameters>
      <Docs>
        <param name="rule"><span data-ttu-id="60c3c-202">Добавляемое правило аудита.</span><span class="sxs-lookup"><span data-stu-id="60c3c-202">The audit rule to add.</span></span> <span data-ttu-id="60c3c-203">Поиск ведется по имени пользователя, указанному в этом правиле.</span><span class="sxs-lookup"><span data-stu-id="60c3c-203">The user specified by this rule determines the search.</span></span></param>
        <summary><span data-ttu-id="60c3c-204">Осуществляет поиск правила аудита, с которым можно объединить новое правило.</span><span class="sxs-lookup"><span data-stu-id="60c3c-204">Searches for an audit rule with which the new rule can be merged.</span></span> <span data-ttu-id="60c3c-205">Если поиск не дал результатов, добавляется новое правило.</span><span class="sxs-lookup"><span data-stu-id="60c3c-205">If none are found, adds the new rule.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="60c3c-206">Метод выполняет поиск правил с тем же пользователем или группой, что `rule`и. <xref:System.Security.AccessControl.RegistrySecurity.AddAuditRule%2A></span><span class="sxs-lookup"><span data-stu-id="60c3c-206">The <xref:System.Security.AccessControl.RegistrySecurity.AddAuditRule%2A> method searches for rules with the same user or group as `rule`.</span></span> <span data-ttu-id="60c3c-207">Если ничего не найдено, `rule` добавляется.</span><span class="sxs-lookup"><span data-stu-id="60c3c-207">If none are found, `rule` is added.</span></span> <span data-ttu-id="60c3c-208">Если правило сопоставления найдено, то флаги в `rule` объединяются в существующее правило.</span><span class="sxs-lookup"><span data-stu-id="60c3c-208">If a matching rule is found, the flags in `rule` are merged into the existing rule.</span></span>  
  
 <span data-ttu-id="60c3c-209">Правила не могут быть объединены, если они имеют разные флаги наследования.</span><span class="sxs-lookup"><span data-stu-id="60c3c-209">Rules cannot be merged if they have different inheritance flags.</span></span> <span data-ttu-id="60c3c-210">Например, если неудачные попытки записи в ключ аудита выполняются для конкретного пользователя, без флагов наследования, и <xref:System.Security.AccessControl.RegistrySecurity.AddAuditRule%2A> используется для добавления правила, указывающего, что неудачные попытки изменения разрешений должны проводиться для одного и того же пользователя, но с наследованием для подразделы<xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit?displayProperty=nameWithType>(), эти два правила не могут быть объединены.</span><span class="sxs-lookup"><span data-stu-id="60c3c-210">For example, if failed attempts to write to a key are audited for a particular user, with no inheritance flags, and <xref:System.Security.AccessControl.RegistrySecurity.AddAuditRule%2A> is used to add a rule specifying that failed attempts to change permissions are to be audited for the same user, but with inheritance for subkeys (<xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit?displayProperty=nameWithType>), the two rules cannot be merged.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AuditRuleFactory">
      <MemberSignature Language="C#" Value="public override System.Security.AccessControl.AuditRule AuditRuleFactory (System.Security.Principal.IdentityReference identityReference, int accessMask, bool isInherited, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AuditFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.AccessControl.AuditRule AuditRuleFactory(class System.Security.Principal.IdentityReference identityReference, int32 accessMask, bool isInherited, valuetype System.Security.AccessControl.InheritanceFlags inheritanceFlags, valuetype System.Security.AccessControl.PropagationFlags propagationFlags, valuetype System.Security.AccessControl.AuditFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.RegistrySecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::AccessControl::AuditRule ^ AuditRuleFactory(System::Security::Principal::IdentityReference ^ identityReference, int accessMask, bool isInherited, System::Security::AccessControl::InheritanceFlags inheritanceFlags, System::Security::AccessControl::PropagationFlags propagationFlags, System::Security::AccessControl::AuditFlags flags);" />
      <MemberSignature Language="F#" Value="override this.AuditRuleFactory : System.Security.Principal.IdentityReference * int * bool * System.Security.AccessControl.InheritanceFlags * System.Security.AccessControl.PropagationFlags * System.Security.AccessControl.AuditFlags -&gt; System.Security.AccessControl.AuditRule" Usage="registrySecurity.AuditRuleFactory (identityReference, accessMask, isInherited, inheritanceFlags, propagationFlags, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.AuditRule</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identityReference" Type="System.Security.Principal.IdentityReference" />
        <Parameter Name="accessMask" Type="System.Int32" />
        <Parameter Name="isInherited" Type="System.Boolean" />
        <Parameter Name="inheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
        <Parameter Name="propagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
        <Parameter Name="flags" Type="System.Security.AccessControl.AuditFlags" />
      </Parameters>
      <Docs>
        <param name="identityReference"><span data-ttu-id="60c3c-211">Объект <see cref="T:System.Security.Principal.IdentityReference" />, идентифицирующий пользователя или группу, к которым относится данное правило.</span><span class="sxs-lookup"><span data-stu-id="60c3c-211">An <see cref="T:System.Security.Principal.IdentityReference" /> that identifies the user or group the rule applies to.</span></span></param>
        <param name="accessMask"><span data-ttu-id="60c3c-212">Побитовое сочетание значений <see cref="T:System.Security.AccessControl.RegistryRights" />, определяющее права доступа для аудита, приведенное к целочисленному типу.</span><span class="sxs-lookup"><span data-stu-id="60c3c-212">A bitwise combination of <see cref="T:System.Security.AccessControl.RegistryRights" /> values specifying the access rights to audit, cast to an integer.</span></span></param>
        <param name="isInherited"><span data-ttu-id="60c3c-213">Логическое значение, которое определяет, наследуется ли правило.</span><span class="sxs-lookup"><span data-stu-id="60c3c-213">A Boolean value specifying whether the rule is inherited.</span></span></param>
        <param name="inheritanceFlags"><span data-ttu-id="60c3c-214">Побитовое сочетание значений <see cref="T:System.Security.AccessControl.InheritanceFlags" />, определяющее порядок наследования правила подразделами.</span><span class="sxs-lookup"><span data-stu-id="60c3c-214">A bitwise combination of <see cref="T:System.Security.AccessControl.InheritanceFlags" /> values specifying how the rule is inherited by subkeys.</span></span></param>
        <param name="propagationFlags"><span data-ttu-id="60c3c-215">Побитовое сочетание значений <see cref="T:System.Security.AccessControl.PropagationFlags" />, изменяющее порядок наследования правила подразделами.</span><span class="sxs-lookup"><span data-stu-id="60c3c-215">A bitwise combination of <see cref="T:System.Security.AccessControl.PropagationFlags" /> values that modify the way the rule is inherited by subkeys.</span></span> <span data-ttu-id="60c3c-216">Не имеет смысла, если свойство <paramref name="inheritanceFlags" /> имеет значение <see cref="F:System.Security.AccessControl.InheritanceFlags.None" />.</span><span class="sxs-lookup"><span data-stu-id="60c3c-216">Meaningless if the value of <paramref name="inheritanceFlags" /> is <see cref="F:System.Security.AccessControl.InheritanceFlags.None" />.</span></span></param>
        <param name="flags"><span data-ttu-id="60c3c-217">Побитовое сочетание значений <see cref="T:System.Security.AccessControl.AuditFlags" />, определяющее предмет аудита — успешные попытки доступа, неудачные попытки доступа или все попытки доступа.</span><span class="sxs-lookup"><span data-stu-id="60c3c-217">A bitwise combination of <see cref="T:System.Security.AccessControl.AuditFlags" /> values specifying whether to audit successful access, failed access, or both.</span></span></param>
        <summary><span data-ttu-id="60c3c-218">Создает новое правило аудита, в котором указывается пользователь, к которому относится правило, права доступа для аудита, параметры наследования и распространения правила, а также событие, вызывающее срабатывание правила.</span><span class="sxs-lookup"><span data-stu-id="60c3c-218">Creates a new audit rule, specifying the user the rule applies to, the access rights to audit, the inheritance and propagation of the rule, and the outcome that triggers the rule.</span></span></summary>
        <returns><span data-ttu-id="60c3c-219">Объект <see cref="T:System.Security.AccessControl.RegistryAuditRule" />, представляющий указанное правило аудита для заданного пользователя с заданными флагами.</span><span class="sxs-lookup"><span data-stu-id="60c3c-219">A <see cref="T:System.Security.AccessControl.RegistryAuditRule" /> object representing the specified audit rule for the specified user, with the specified flags.</span></span> <span data-ttu-id="60c3c-220">Метод возвращает объект базового класса (<see cref="T:System.Security.AccessControl.AuditRule" />), но возвращаемое значение можно безопасно привести к производному классу.</span><span class="sxs-lookup"><span data-stu-id="60c3c-220">The return type of the method is the base class, <see cref="T:System.Security.AccessControl.AuditRule" />, but the return value can be cast safely to the derived class.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="60c3c-221">Для создания правил аудита рекомендуется использовать конструкторы <xref:System.Security.AccessControl.RegistryAuditRule> класса.</span><span class="sxs-lookup"><span data-stu-id="60c3c-221">The recommended way to create audit rules is to use the constructors of the <xref:System.Security.AccessControl.RegistryAuditRule> class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="60c3c-222">Хотя можно указать <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit?displayProperty=nameWithType> флаг, нет никакой точки.</span><span class="sxs-lookup"><span data-stu-id="60c3c-222">Although you can specify the <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit?displayProperty=nameWithType> flag, there is no point in doing so.</span></span> <span data-ttu-id="60c3c-223">В целях контроля аудита пары "имя-значение" в подразделе не являются отдельными объектами.</span><span class="sxs-lookup"><span data-stu-id="60c3c-223">For the purposes of audit control, the name/value pairs in a subkey are not separate objects.</span></span> <span data-ttu-id="60c3c-224">Права аудита для пар "имя-значение" контролируются правами подраздела.</span><span class="sxs-lookup"><span data-stu-id="60c3c-224">The audit rights to name/value pairs are controlled by the rights of the subkey.</span></span> <span data-ttu-id="60c3c-225">Более того, поскольку все подразделы являются контейнерами (то есть они могут содержать другие подразделы), они не затрагиваются <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit> флагом.</span><span class="sxs-lookup"><span data-stu-id="60c3c-225">Furthermore, since all subkeys are containers (that is, they can contain other subkeys), they are not affected by the <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit> flag.</span></span> <span data-ttu-id="60c3c-226">Наконец, указание <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit> флага затрудняет обслуживание правил, так как оно влияет на нормальную комбинацию совместимых правил.</span><span class="sxs-lookup"><span data-stu-id="60c3c-226">Finally, specifying the <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit> flag needlessly complicates the maintenance of rules, because it interferes with the normal combination of compatible rules.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="60c3c-227">Параметр <paramref name="accessMask" />, <paramref name="inheritanceFlags" />, <paramref name="propagationFlags" /> или <paramref name="flags" /> имеет недопустимое значение.</span><span class="sxs-lookup"><span data-stu-id="60c3c-227"><paramref name="accessMask" />, <paramref name="inheritanceFlags" />, <paramref name="propagationFlags" />, or <paramref name="flags" /> specifies an invalid value.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="60c3c-228">Свойство <paramref name="identityReference" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="60c3c-228"><paramref name="identityReference" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="60c3c-229">- или -</span><span class="sxs-lookup"><span data-stu-id="60c3c-229">-or-</span></span> 
 <span data-ttu-id="60c3c-230"><paramref name="accessMask" /> равен нулю.</span><span class="sxs-lookup"><span data-stu-id="60c3c-230"><paramref name="accessMask" /> is zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="60c3c-231">Параметр <paramref name="identityReference" /> не относится к типу <see cref="T:System.Security.Principal.SecurityIdentifier" /> и к такому типу, как <see cref="T:System.Security.Principal.NTAccount" />, который можно преобразовать в тип <see cref="T:System.Security.Principal.SecurityIdentifier" />.</span><span class="sxs-lookup"><span data-stu-id="60c3c-231"><paramref name="identityReference" /> is neither of type <see cref="T:System.Security.Principal.SecurityIdentifier" />, nor of a type such as <see cref="T:System.Security.Principal.NTAccount" /> that can be converted to type <see cref="T:System.Security.Principal.SecurityIdentifier" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AuditRuleType">
      <MemberSignature Language="C#" Value="public override Type AuditRuleType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type AuditRuleType" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.RegistrySecurity.AuditRuleType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property AuditRuleType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ AuditRuleType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AuditRuleType : Type" Usage="System.Security.AccessControl.RegistrySecurity.AuditRuleType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="60c3c-232">Получает тип, используемый классом <see cref="T:System.Security.AccessControl.RegistrySecurity" /> для обозначения правил аудита.</span><span class="sxs-lookup"><span data-stu-id="60c3c-232">Gets the type that the <see cref="T:System.Security.AccessControl.RegistrySecurity" /> class uses to represent audit rules.</span></span></summary>
        <value><span data-ttu-id="60c3c-233">Объект <see cref="T:System.Type" />, представляющий класс <see cref="T:System.Security.AccessControl.RegistryAuditRule" />.</span><span class="sxs-lookup"><span data-stu-id="60c3c-233">A <see cref="T:System.Type" /> object representing the <see cref="T:System.Security.AccessControl.RegistryAuditRule" /> class.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="60c3c-234">Классы, производные от <xref:System.Security.AccessControl.ObjectSecurity> класса переопределение <xref:System.Security.AccessControl.ObjectSecurity.AuditRuleType%2A> свойства и возвращаемые типа, они используют для обозначения прав аудита.</span><span class="sxs-lookup"><span data-stu-id="60c3c-234">Classes that derive from the <xref:System.Security.AccessControl.ObjectSecurity> class override the <xref:System.Security.AccessControl.ObjectSecurity.AuditRuleType%2A> property and return the type they use to represent audit rights.</span></span> <span data-ttu-id="60c3c-235">При работе с массивами или коллекциями, содержащими объекты безопасности нескольких типов, используйте это свойство, чтобы определить правильный тип правила аудита для использования с каждым объектом безопасности.</span><span class="sxs-lookup"><span data-stu-id="60c3c-235">When you work with arrays or collections that contain multiple types of security objects, use this property to determine the correct audit rule type to use with each security object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAccessRule">
      <MemberSignature Language="C#" Value="public bool RemoveAccessRule (System.Security.AccessControl.RegistryAccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveAccessRule(class System.Security.AccessControl.RegistryAccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.RegistrySecurity.RemoveAccessRule(System.Security.AccessControl.RegistryAccessRule)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveAccessRule (rule As RegistryAccessRule) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveAccessRule(System::Security::AccessControl::RegistryAccessRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.RemoveAccessRule : System.Security.AccessControl.RegistryAccessRule -&gt; bool" Usage="registrySecurity.RemoveAccessRule rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.RegistryAccessRule" />
      </Parameters>
      <Docs>
        <param name="rule"><span data-ttu-id="60c3c-236">Объект <see cref="T:System.Security.AccessControl.RegistryAccessRule" />, определяющий пользователя и тип <see cref="T:System.Security.AccessControl.AccessControlType" /> для поиска, а также набор флагов наследования и распространения, с которыми должно быть совместимо найденное правило.</span><span class="sxs-lookup"><span data-stu-id="60c3c-236">A <see cref="T:System.Security.AccessControl.RegistryAccessRule" /> that specifies the user and <see cref="T:System.Security.AccessControl.AccessControlType" /> to search for, and a set of inheritance and propagation flags that a matching rule, if found, must be compatible with.</span></span> <span data-ttu-id="60c3c-237">Задает права, которые требуется удалить из совместимого правила, если оно будет найдено.</span><span class="sxs-lookup"><span data-stu-id="60c3c-237">Specifies the rights to remove from the compatible rule, if found.</span></span></param>
        <summary><span data-ttu-id="60c3c-238">Осуществляет поиск правила управления доступом с тем же именем пользователя и значением <see cref="T:System.Security.AccessControl.AccessControlType" /> ("разрешить" или "запретить"), что и указанного правила доступа, а также с совместимыми флагами наследования и распространения; если правило найдено, содержащиеся в указанном правиле доступа права удаляются.</span><span class="sxs-lookup"><span data-stu-id="60c3c-238">Searches for an access control rule with the same user and <see cref="T:System.Security.AccessControl.AccessControlType" /> (allow or deny) as the specified access rule, and with compatible inheritance and propagation flags; if such a rule is found, the rights contained in the specified access rule are removed from it.</span></span></summary>
        <returns><span data-ttu-id="60c3c-239">Значение <see langword="true" />, если совместимое правило найдено; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="60c3c-239"><see langword="true" /> if a compatible rule is found; otherwise <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="60c3c-240">Текущий <xref:System.Security.AccessControl.RegistrySecurity> ищется правило, которое имеет тот же пользователь и имеет одинаковые <xref:System.Security.AccessControl.AccessControlType> значение как `rule`.</span><span class="sxs-lookup"><span data-stu-id="60c3c-240">The current <xref:System.Security.AccessControl.RegistrySecurity> is searched for a rule that has the same user and the same <xref:System.Security.AccessControl.AccessControlType> value as `rule`.</span></span> <span data-ttu-id="60c3c-241">Если такое правило не найдено, никакие действия не выполняются и метод возвращает `false`значение.</span><span class="sxs-lookup"><span data-stu-id="60c3c-241">If no such rule is found, no action is taken, and the method returns `false`.</span></span> <span data-ttu-id="60c3c-242">Если правила сопоставления найдены, их флагов наследования и совместимости проверка на совместимость с флагов, указанных в `rule`.</span><span class="sxs-lookup"><span data-stu-id="60c3c-242">If matching rules are found, their inheritance and compatibility flags are checked for compatibility with the flags specified in `rule`.</span></span> <span data-ttu-id="60c3c-243">Если не совместимое правило найдено, никакие действия не выполняются, и метод возвращает `false`.</span><span class="sxs-lookup"><span data-stu-id="60c3c-243">If no compatible rule is found, no action is taken, and the method returns `false`.</span></span> <span data-ttu-id="60c3c-244">Если обнаруживается правило с совместимыми флагами, права, указанные в `rule` удаляются из совместимого правила, а метод возвращает `true`.</span><span class="sxs-lookup"><span data-stu-id="60c3c-244">If a rule with compatible flags is found, the rights specified in `rule` are removed from the compatible rule, and the method returns `true`.</span></span> <span data-ttu-id="60c3c-245">Если `rule` задает права, не содержится в совместимого правила, никакие действия не выполняются по отношению к эти права.</span><span class="sxs-lookup"><span data-stu-id="60c3c-245">If `rule` specifies rights not contained in the compatible rule, no action is taken with respect to those rights.</span></span> <span data-ttu-id="60c3c-246">Если все права удаляются из совместимого правила, правило целиком удаляется из текущей <xref:System.Security.AccessControl.RegistrySecurity> объекта.</span><span class="sxs-lookup"><span data-stu-id="60c3c-246">If all rights are removed from the compatible rule, the entire rule is removed from the current <xref:System.Security.AccessControl.RegistrySecurity> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="60c3c-247">В следующем примере кода показано, как <xref:System.Security.AccessControl.RegistrySecurity.RemoveAccessRule%2A> метод удаляет права из совместимого правила и <xref:System.Security.AccessControl.RegistrySecurity.AddAccessRule%2A> как метод объединяет права с совместимыми правилами.</span><span class="sxs-lookup"><span data-stu-id="60c3c-247">The following code example shows how the <xref:System.Security.AccessControl.RegistrySecurity.RemoveAccessRule%2A> method removes rights from a compatible rule, and how the <xref:System.Security.AccessControl.RegistrySecurity.AddAccessRule%2A> method merges rights with compatible rules.</span></span>  
  
 <span data-ttu-id="60c3c-248">В примере создается <xref:System.Security.AccessControl.RegistrySecurity> объект и добавляется правило, которое разрешает права текущего пользователя <xref:System.Security.AccessControl.RegistryRights.ReadKey?displayProperty=nameWithType> .</span><span class="sxs-lookup"><span data-stu-id="60c3c-248">The example creates a <xref:System.Security.AccessControl.RegistrySecurity> object and adds a rule that allows the current user <xref:System.Security.AccessControl.RegistryRights.ReadKey?displayProperty=nameWithType> rights.</span></span> <span data-ttu-id="60c3c-249">Затем в примере создается правило, которое предоставляет пользователю <xref:System.Security.AccessControl.RegistryRights.SetValue?displayProperty=nameWithType>те же права наследования и распространения, что и в первом правиле, и <xref:System.Security.AccessControl.RegistrySecurity.RemoveAccessRule%2A> использует метод для удаления <xref:System.Security.AccessControl.RegistrySecurity> этого нового правила из объекта.</span><span class="sxs-lookup"><span data-stu-id="60c3c-249">The example then creates a rule that grants the user <xref:System.Security.AccessControl.RegistryRights.SetValue?displayProperty=nameWithType>, with the same inheritance and propagation rights as the first rule, and uses the <xref:System.Security.AccessControl.RegistrySecurity.RemoveAccessRule%2A> method to remove this new rule from the <xref:System.Security.AccessControl.RegistrySecurity> object.</span></span> <span data-ttu-id="60c3c-250"><xref:System.Security.AccessControl.RegistryRights.SetValue>является составляющим <xref:System.Security.AccessControl.RegistryRights.ReadKey>, поэтому удаляется из совместимого правила.</span><span class="sxs-lookup"><span data-stu-id="60c3c-250"><xref:System.Security.AccessControl.RegistryRights.SetValue> is a constituent of <xref:System.Security.AccessControl.RegistryRights.ReadKey>, so it is removed from the compatible rule.</span></span> <span data-ttu-id="60c3c-251">Отобразятся правила в <xref:System.Security.AccessControl.RegistrySecurity> объекте, в которых отображаются оставшиеся составляющие. <xref:System.Security.AccessControl.RegistryRights.ReadKey></span><span class="sxs-lookup"><span data-stu-id="60c3c-251">The rules in the <xref:System.Security.AccessControl.RegistrySecurity> object are displayed, showing the remaining constituents of <xref:System.Security.AccessControl.RegistryRights.ReadKey>.</span></span>  
  
 <span data-ttu-id="60c3c-252">Затем в примере кода вызывается <xref:System.Security.AccessControl.RegistrySecurity.RemoveAccessRule%2A> метод для <xref:System.Security.AccessControl.RegistryRights.SetValue> слияния обратно в правило в <xref:System.Security.AccessControl.RegistrySecurity> объекте.</span><span class="sxs-lookup"><span data-stu-id="60c3c-252">The example code then calls the <xref:System.Security.AccessControl.RegistrySecurity.RemoveAccessRule%2A> method to merge the <xref:System.Security.AccessControl.RegistryRights.SetValue> right back into the rule in the <xref:System.Security.AccessControl.RegistrySecurity> object.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="60c3c-253">В этом примере объект безопасности не подключается к <xref:Microsoft.Win32.RegistryKey> объекту.</span><span class="sxs-lookup"><span data-stu-id="60c3c-253">This example does not attach the security object to a <xref:Microsoft.Win32.RegistryKey> object.</span></span> <span data-ttu-id="60c3c-254">Во втором примере в этом разделе прикрепляется объект безопасности, а также примеры в <xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A?displayProperty=nameWithType>. <xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="60c3c-254">The second example in this section attaches a security object, and so do the examples in <xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A?displayProperty=nameWithType><xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=nameWithType>.</span></span>  
  
 [!code-csharp[System.Security.AccessControl.RegistrySecurity.RemoveAccessRule#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.AccessControl.RegistrySecurity.RemoveAccessRule/CS/source.cs#1)]
 [!code-vb[System.Security.AccessControl.RegistrySecurity.RemoveAccessRule#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.AccessControl.RegistrySecurity.RemoveAccessRule/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="60c3c-255"><paramref name="rule" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="60c3c-255"><paramref name="rule" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAccessRuleAll">
      <MemberSignature Language="C#" Value="public void RemoveAccessRuleAll (System.Security.AccessControl.RegistryAccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAccessRuleAll(class System.Security.AccessControl.RegistryAccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.RegistrySecurity.RemoveAccessRuleAll(System.Security.AccessControl.RegistryAccessRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAccessRuleAll (rule As RegistryAccessRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAccessRuleAll(System::Security::AccessControl::RegistryAccessRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.RemoveAccessRuleAll : System.Security.AccessControl.RegistryAccessRule -&gt; unit" Usage="registrySecurity.RemoveAccessRuleAll rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.RegistryAccessRule" />
      </Parameters>
      <Docs>
        <param name="rule"><span data-ttu-id="60c3c-256">Объект <see cref="T:System.Security.AccessControl.RegistryAccessRule" />, определяющий пользователя и значение <see cref="T:System.Security.AccessControl.AccessControlType" /> для поиска.</span><span class="sxs-lookup"><span data-stu-id="60c3c-256">A <see cref="T:System.Security.AccessControl.RegistryAccessRule" /> that specifies the user and <see cref="T:System.Security.AccessControl.AccessControlType" /> to search for.</span></span> <span data-ttu-id="60c3c-257">Никакие указанные в этом правиле права, флаги наследования и распространения не учитываются.</span><span class="sxs-lookup"><span data-stu-id="60c3c-257">Any rights, inheritance flags, or propagation flags specified by this rule are ignored.</span></span></param>
        <summary><span data-ttu-id="60c3c-258">Осуществляет поиск всех правил управления доступом с тем же именем пользователя и значением свойства <see cref="T:System.Security.AccessControl.AccessControlType" /> ("разрешить" или "запретить"), что и у указанного правила, и удаляет найденные правила.</span><span class="sxs-lookup"><span data-stu-id="60c3c-258">Searches for all access control rules with the same user and <see cref="T:System.Security.AccessControl.AccessControlType" /> (allow or deny) as the specified rule and, if found, removes them.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="60c3c-259">Текущий <xref:System.Security.AccessControl.RegistrySecurity> Поиск выполняется для правил, имеющих одного и того же пользователя и то <xref:System.Security.AccessControl.AccessControlType> же значение `rule`, что и.</span><span class="sxs-lookup"><span data-stu-id="60c3c-259">The current <xref:System.Security.AccessControl.RegistrySecurity> is searched for rules that have the same user and the same <xref:System.Security.AccessControl.AccessControlType> value as `rule`.</span></span> <span data-ttu-id="60c3c-260">Все права, флаги наследования или флаги распространения, `rule` заданные параметром, игнорируются при выполнении этого поиска.</span><span class="sxs-lookup"><span data-stu-id="60c3c-260">Any rights, inheritance flags, or propagation flags specified by `rule` are ignored when performing this search.</span></span> <span data-ttu-id="60c3c-261">Если соответствующие правила не найдены, никакие действия не выполняются.</span><span class="sxs-lookup"><span data-stu-id="60c3c-261">If no matching rules are found, no action is taken.</span></span>  
  
 <span data-ttu-id="60c3c-262">Например, если пользователь имеет несколько правил, которые позволяют использовать различные права с разными флагами наследования и распространения, можно удалить все эти правила, создав <xref:System.Security.AccessControl.RegistryAccessRule> объект, указывающий пользователя, и <xref:System.Security.AccessControl.AccessControlType.Allow?displayProperty=nameWithType>любые произвольные права и флаги. и передать это правило <xref:System.Security.AccessControl.RegistrySecurity.RemoveAccessRuleAll%2A> методу.</span><span class="sxs-lookup"><span data-stu-id="60c3c-262">For example, if a user has multiple rules that allow various rights with different inheritance and propagation flags, you can remove all those rules by creating a <xref:System.Security.AccessControl.RegistryAccessRule> object that specifies the user and <xref:System.Security.AccessControl.AccessControlType.Allow?displayProperty=nameWithType>, with any arbitrary rights and flags, and passing that rule to the <xref:System.Security.AccessControl.RegistrySecurity.RemoveAccessRuleAll%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="60c3c-263">В следующем примере кода показано, что <xref:System.Security.AccessControl.RegistrySecurity.RemoveAccessRuleAll%2A> метод удаляет все правила, соответствующие пользователю, <xref:System.Security.AccessControl.AccessControlType>и, игнорируя права и флаги.</span><span class="sxs-lookup"><span data-stu-id="60c3c-263">The following code example shows that the <xref:System.Security.AccessControl.RegistrySecurity.RemoveAccessRuleAll%2A> method removes all rules that match user and <xref:System.Security.AccessControl.AccessControlType>, ignoring rights and flags.</span></span>  
  
 <span data-ttu-id="60c3c-264">В примере создается <xref:System.Security.AccessControl.RegistrySecurity> объект и добавляются правила, разрешающие и отклоняющие различные права для текущего пользователя с разными флагами наследования и распространения.</span><span class="sxs-lookup"><span data-stu-id="60c3c-264">The example creates a <xref:System.Security.AccessControl.RegistrySecurity> object and adds rules that allow and deny various rights for the current user, with different inheritance and propagation flags.</span></span> <span data-ttu-id="60c3c-265">Затем в примере создается новое правило, которое позволяет текущему пользователю стать владельцем, и передает это правило <xref:System.Security.AccessControl.RegistrySecurity.RemoveAccessRuleAll%2A> методу, чтобы удалить два правила, разрешающие доступ.</span><span class="sxs-lookup"><span data-stu-id="60c3c-265">The example then creates a new rule that allows the current user to take ownership, and passes that rule to the <xref:System.Security.AccessControl.RegistrySecurity.RemoveAccessRuleAll%2A> method to remove the two rules that allow access.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="60c3c-266">В этом примере объект безопасности не подключается к <xref:Microsoft.Win32.RegistryKey> объекту.</span><span class="sxs-lookup"><span data-stu-id="60c3c-266">This example does not attach the security object to a <xref:Microsoft.Win32.RegistryKey> object.</span></span> <span data-ttu-id="60c3c-267">См. <xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=nameWithType> метод и метод. <xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="60c3c-267">See the <xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A?displayProperty=nameWithType> method and the <xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=nameWithType> method.</span></span>  
  
 [!code-csharp[System.Security.AccessControl.RegistrySecurity.RemoveAccessRuleAll#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.AccessControl.RegistrySecurity.RemoveAccessRuleAll/CS/source.cs#1)]
 [!code-vb[System.Security.AccessControl.RegistrySecurity.RemoveAccessRuleAll#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.AccessControl.RegistrySecurity.RemoveAccessRuleAll/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="60c3c-268">Свойство <paramref name="rule" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="60c3c-268"><paramref name="rule" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAccessRuleSpecific">
      <MemberSignature Language="C#" Value="public void RemoveAccessRuleSpecific (System.Security.AccessControl.RegistryAccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAccessRuleSpecific(class System.Security.AccessControl.RegistryAccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.RegistrySecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.RegistryAccessRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAccessRuleSpecific (rule As RegistryAccessRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAccessRuleSpecific(System::Security::AccessControl::RegistryAccessRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.RemoveAccessRuleSpecific : System.Security.AccessControl.RegistryAccessRule -&gt; unit" Usage="registrySecurity.RemoveAccessRuleSpecific rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.RegistryAccessRule" />
      </Parameters>
      <Docs>
        <param name="rule"><span data-ttu-id="60c3c-269">Объект <see cref="T:System.Security.AccessControl.RegistryAccessRule" /> для удаления.</span><span class="sxs-lookup"><span data-stu-id="60c3c-269">The <see cref="T:System.Security.AccessControl.RegistryAccessRule" /> to remove.</span></span></param>
        <summary><span data-ttu-id="60c3c-270">Осуществляет поиск правила управления доступом, в точности соответствующего указанному правилу, и удаляет найденное правило.</span><span class="sxs-lookup"><span data-stu-id="60c3c-270">Searches for an access control rule that exactly matches the specified rule and, if found, removes it.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="60c3c-271">Правило удаляется только в том случае, если `rule` оно точно совпадает со всеми сведениями, включая флаги.</span><span class="sxs-lookup"><span data-stu-id="60c3c-271">The rule is removed only if it exactly matches `rule` in all details, including flags.</span></span> <span data-ttu-id="60c3c-272">Другие правила с тем же пользователем и <xref:System.Security.AccessControl.AccessControlType> не затрагиваются.</span><span class="sxs-lookup"><span data-stu-id="60c3c-272">Other rules with the same user and <xref:System.Security.AccessControl.AccessControlType> are not affected.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="60c3c-273">Правило представляет одну или несколько базовых записей контроля доступа (ACE), и эти записи при необходимости разбиваются или объединяются при изменении правил безопасности доступа для пользователя.</span><span class="sxs-lookup"><span data-stu-id="60c3c-273">A rule represents one or more underlying access control entries (ACE), and these entries are split or combined as necessary when you modify the access security rules for a user.</span></span> <span data-ttu-id="60c3c-274">Таким <xref:System.Security.AccessControl.RegistrySecurity.RemoveAccessRuleSpecific%2A> способом, правило может больше не существовать в конкретной форме, когда оно было добавлено, и в этом случае метод не может удалить его.</span><span class="sxs-lookup"><span data-stu-id="60c3c-274">Thus, a rule might no longer exist in the specific form it had when it was added, and in that case the <xref:System.Security.AccessControl.RegistrySecurity.RemoveAccessRuleSpecific%2A> method cannot remove it.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="60c3c-275">В следующем примере кода показано, что <xref:System.Security.AccessControl.RegistrySecurity.RemoveAccessRuleSpecific%2A> метод удаляет правило только в том случае, если оно точно соответствует.</span><span class="sxs-lookup"><span data-stu-id="60c3c-275">The following code example shows that the <xref:System.Security.AccessControl.RegistrySecurity.RemoveAccessRuleSpecific%2A> method removes a rule only if it matches exactly.</span></span>  
  
 <span data-ttu-id="60c3c-276">В этом примере создаются два правила, которые позволяют использовать разные права.</span><span class="sxs-lookup"><span data-stu-id="60c3c-276">The example creates two rules that allow different rights.</span></span> <span data-ttu-id="60c3c-277">Правила имеют совместимые флаги наследования и распространения, поэтому при добавлении второго правила оно объединяется с первым.</span><span class="sxs-lookup"><span data-stu-id="60c3c-277">The rules have compatible inheritance and propagation flags, so when the second rule is added it merges with the first.</span></span> <span data-ttu-id="60c3c-278">В примере вызывается <xref:System.Security.AccessControl.RegistrySecurity.RemoveAccessRuleSpecific%2A> метод, указывающий первое правило, но поскольку правила объединяются, то правило, соответствующее.</span><span class="sxs-lookup"><span data-stu-id="60c3c-278">The example calls the <xref:System.Security.AccessControl.RegistrySecurity.RemoveAccessRuleSpecific%2A> method, specifying the first rule, but because the rules are merged there is no rule that matches.</span></span> <span data-ttu-id="60c3c-279">Затем в примере вызывается <xref:System.Security.AccessControl.RegistrySecurity.RemoveAccessRule%2A> метод для удаления второго правила из Объединенного правила, а затем <xref:System.Security.AccessControl.RegistrySecurity.RemoveAccessRuleSpecific%2A> вызывается метод для удаления первого правила.</span><span class="sxs-lookup"><span data-stu-id="60c3c-279">The example then calls the <xref:System.Security.AccessControl.RegistrySecurity.RemoveAccessRule%2A> method to the remove the second rule from the merged rule, and finally calls the <xref:System.Security.AccessControl.RegistrySecurity.RemoveAccessRuleSpecific%2A> method to remove the first rule.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="60c3c-280">В этом примере объект безопасности не подключается к <xref:Microsoft.Win32.RegistryKey> объекту.</span><span class="sxs-lookup"><span data-stu-id="60c3c-280">This example does not attach the security object to a <xref:Microsoft.Win32.RegistryKey> object.</span></span> <span data-ttu-id="60c3c-281">См. <xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=nameWithType> метод и метод. <xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="60c3c-281">See the <xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A?displayProperty=nameWithType> method and the <xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=nameWithType> method.</span></span>  
  
 [!code-csharp[System.Security.AccessControl.RegistrySecurity.RemoveAccessRuleSpecific#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.AccessControl.RegistrySecurity.RemoveAccessRuleSpecific/CS/source.cs#1)]
 [!code-vb[System.Security.AccessControl.RegistrySecurity.RemoveAccessRuleSpecific#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.AccessControl.RegistrySecurity.RemoveAccessRuleSpecific/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="60c3c-282"><paramref name="rule" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="60c3c-282"><paramref name="rule" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAuditRule">
      <MemberSignature Language="C#" Value="public bool RemoveAuditRule (System.Security.AccessControl.RegistryAuditRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveAuditRule(class System.Security.AccessControl.RegistryAuditRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.RegistrySecurity.RemoveAuditRule(System.Security.AccessControl.RegistryAuditRule)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveAuditRule (rule As RegistryAuditRule) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveAuditRule(System::Security::AccessControl::RegistryAuditRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.RemoveAuditRule : System.Security.AccessControl.RegistryAuditRule -&gt; bool" Usage="registrySecurity.RemoveAuditRule rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.RegistryAuditRule" />
      </Parameters>
      <Docs>
        <param name="rule"><span data-ttu-id="60c3c-283">Объект <see cref="T:System.Security.AccessControl.RegistryAuditRule" />, определяющий пользователя для поиска, а также набор флагов наследования и распространения, с которыми должно быть совместимо найденное правило.</span><span class="sxs-lookup"><span data-stu-id="60c3c-283">A <see cref="T:System.Security.AccessControl.RegistryAuditRule" /> that specifies the user to search for, and a set of inheritance and propagation flags that a matching rule, if found, must be compatible with.</span></span> <span data-ttu-id="60c3c-284">Задает права, которые требуется удалить из совместимого правила, если оно будет найдено.</span><span class="sxs-lookup"><span data-stu-id="60c3c-284">Specifies the rights to remove from the compatible rule, if found.</span></span></param>
        <summary><span data-ttu-id="60c3c-285">Осуществляет поиск правила управления аудитом с тем же именем пользователя, что и указанного правила доступа, а также с совместимыми флагами наследования и распространения; если совместимое правило найдено, содержащиеся в указанном правиле права удаляются.</span><span class="sxs-lookup"><span data-stu-id="60c3c-285">Searches for an audit control rule with the same user as the specified rule, and with compatible inheritance and propagation flags; if a compatible rule is found, the rights contained in the specified rule are removed from it.</span></span></summary>
        <returns><span data-ttu-id="60c3c-286">Значение <see langword="true" />, если совместимое правило найдено; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="60c3c-286"><see langword="true" /> if a compatible rule is found; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="60c3c-287">В текущем <xref:System.Security.AccessControl.RegistrySecurity> поиске выполняется поиск правила аудита с тем же пользователем, что `rule`и.</span><span class="sxs-lookup"><span data-stu-id="60c3c-287">The current <xref:System.Security.AccessControl.RegistrySecurity> is searched for an audit rule that has the same user as `rule`.</span></span> <span data-ttu-id="60c3c-288">Если такое правило не найдено, никакие действия не выполняются и метод возвращает `false`значение.</span><span class="sxs-lookup"><span data-stu-id="60c3c-288">If no such rule is found, no action is taken, and the method returns `false`.</span></span> <span data-ttu-id="60c3c-289">Если правила сопоставления найдены, их флагов наследования и совместимости проверка на совместимость с флагов, указанных в `rule`.</span><span class="sxs-lookup"><span data-stu-id="60c3c-289">If matching rules are found, their inheritance and compatibility flags are checked for compatibility with the flags specified in `rule`.</span></span> <span data-ttu-id="60c3c-290">Если не совместимое правило найдено, никакие действия не выполняются, и метод возвращает `false`.</span><span class="sxs-lookup"><span data-stu-id="60c3c-290">If no compatible rule is found, no action is taken, and the method returns `false`.</span></span> <span data-ttu-id="60c3c-291">Если обнаруживается правило с совместимыми флагами, права, указанные в `rule` удаляются из совместимого правила, а метод возвращает `true`.</span><span class="sxs-lookup"><span data-stu-id="60c3c-291">If a rule with compatible flags is found, the rights specified in `rule` are removed from the compatible rule, and the method returns `true`.</span></span> <span data-ttu-id="60c3c-292">Если `rule` задает права, не содержится в совместимого правила, никакие действия не выполняются по отношению к эти права.</span><span class="sxs-lookup"><span data-stu-id="60c3c-292">If `rule` specifies rights not contained in the compatible rule, no action is taken with respect to those rights.</span></span> <span data-ttu-id="60c3c-293">Если все права удаляются из совместимого правила, правило целиком удаляется из текущей <xref:System.Security.AccessControl.RegistrySecurity> объекта.</span><span class="sxs-lookup"><span data-stu-id="60c3c-293">If all rights are removed from the compatible rule, the entire rule is removed from the current <xref:System.Security.AccessControl.RegistrySecurity> object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="60c3c-294">Свойство <paramref name="rule" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="60c3c-294"><paramref name="rule" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAuditRuleAll">
      <MemberSignature Language="C#" Value="public void RemoveAuditRuleAll (System.Security.AccessControl.RegistryAuditRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAuditRuleAll(class System.Security.AccessControl.RegistryAuditRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.RegistrySecurity.RemoveAuditRuleAll(System.Security.AccessControl.RegistryAuditRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAuditRuleAll (rule As RegistryAuditRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAuditRuleAll(System::Security::AccessControl::RegistryAuditRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.RemoveAuditRuleAll : System.Security.AccessControl.RegistryAuditRule -&gt; unit" Usage="registrySecurity.RemoveAuditRuleAll rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.RegistryAuditRule" />
      </Parameters>
      <Docs>
        <param name="rule"><span data-ttu-id="60c3c-295">Объект <see cref="T:System.Security.AccessControl.RegistryAuditRule" />, определяющий пользователя для поиска.</span><span class="sxs-lookup"><span data-stu-id="60c3c-295">A <see cref="T:System.Security.AccessControl.RegistryAuditRule" /> that specifies the user to search for.</span></span> <span data-ttu-id="60c3c-296">Никакие указанные в этом правиле права, флаги наследования и распространения не учитываются.</span><span class="sxs-lookup"><span data-stu-id="60c3c-296">Any rights, inheritance flags, or propagation flags specified by this rule are ignored.</span></span></param>
        <summary><span data-ttu-id="60c3c-297">Производит поиск всех правил аудита с тем же пользователем, что и у указанного правила, и удаляет найденные правила.</span><span class="sxs-lookup"><span data-stu-id="60c3c-297">Searches for all audit rules with the same user as the specified rule and, if found, removes them.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="60c3c-298">В текущем <xref:System.Security.AccessControl.RegistrySecurity> поиске выполняется поиск правил аудита, имеющих того же пользователя, `rule`что и.</span><span class="sxs-lookup"><span data-stu-id="60c3c-298">The current <xref:System.Security.AccessControl.RegistrySecurity> is searched for audit rules that have the same user as `rule`.</span></span> <span data-ttu-id="60c3c-299">Все права, флаги наследования или флаги распространения, `rule` заданные параметром, игнорируются при выполнении этого поиска.</span><span class="sxs-lookup"><span data-stu-id="60c3c-299">Any rights, inheritance flags, or propagation flags specified by `rule` are ignored when performing this search.</span></span> <span data-ttu-id="60c3c-300">Если соответствующие правила не найдены, никакие действия не выполняются.</span><span class="sxs-lookup"><span data-stu-id="60c3c-300">If no matching rules are found, no action is taken.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="60c3c-301">Свойство <paramref name="rule" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="60c3c-301"><paramref name="rule" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAuditRuleSpecific">
      <MemberSignature Language="C#" Value="public void RemoveAuditRuleSpecific (System.Security.AccessControl.RegistryAuditRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAuditRuleSpecific(class System.Security.AccessControl.RegistryAuditRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.RegistrySecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.RegistryAuditRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAuditRuleSpecific (rule As RegistryAuditRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAuditRuleSpecific(System::Security::AccessControl::RegistryAuditRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.RemoveAuditRuleSpecific : System.Security.AccessControl.RegistryAuditRule -&gt; unit" Usage="registrySecurity.RemoveAuditRuleSpecific rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.RegistryAuditRule" />
      </Parameters>
      <Docs>
        <param name="rule"><span data-ttu-id="60c3c-302">Удаляемый объект <see cref="T:System.Security.AccessControl.RegistryAuditRule" />.</span><span class="sxs-lookup"><span data-stu-id="60c3c-302">The <see cref="T:System.Security.AccessControl.RegistryAuditRule" /> to be removed.</span></span></param>
        <summary><span data-ttu-id="60c3c-303">Осуществляет поиск правила аудита, в точности соответствующего указанному правилу, и удаляет найденное правило.</span><span class="sxs-lookup"><span data-stu-id="60c3c-303">Searches for an audit rule that exactly matches the specified rule and, if found, removes it.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="60c3c-304">Правило удаляется только в том случае, если `rule` оно точно совпадает со всеми сведениями, включая флаги.</span><span class="sxs-lookup"><span data-stu-id="60c3c-304">The rule is removed only if it exactly matches `rule` in all details, including flags.</span></span> <span data-ttu-id="60c3c-305">Другие правила аудита для этого же пользователя не затрагиваются.</span><span class="sxs-lookup"><span data-stu-id="60c3c-305">Other audit rules for the same user are not affected.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="60c3c-306">Правило представляет одну или несколько базовых записей контроля доступа (ACE), и эти записи при необходимости разбиваются или объединяются при изменении правил безопасности аудита для пользователя.</span><span class="sxs-lookup"><span data-stu-id="60c3c-306">A rule represents one or more underlying access control entries (ACE), and these entries are split or combined as necessary when you modify the audit security rules for a user.</span></span> <span data-ttu-id="60c3c-307">Таким <xref:System.Security.AccessControl.RegistrySecurity.RemoveAuditRuleSpecific%2A> способом, правило может больше не существовать в конкретной форме, когда оно было добавлено, и в этом случае метод не может удалить его.</span><span class="sxs-lookup"><span data-stu-id="60c3c-307">Thus, a rule might no longer exist in the specific form it had when it was added, and in that case the <xref:System.Security.AccessControl.RegistrySecurity.RemoveAuditRuleSpecific%2A> method cannot remove it.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="60c3c-308">Свойство <paramref name="rule" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="60c3c-308"><paramref name="rule" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ResetAccessRule">
      <MemberSignature Language="C#" Value="public void ResetAccessRule (System.Security.AccessControl.RegistryAccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetAccessRule(class System.Security.AccessControl.RegistryAccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.RegistrySecurity.ResetAccessRule(System.Security.AccessControl.RegistryAccessRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetAccessRule (rule As RegistryAccessRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetAccessRule(System::Security::AccessControl::RegistryAccessRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.ResetAccessRule : System.Security.AccessControl.RegistryAccessRule -&gt; unit" Usage="registrySecurity.ResetAccessRule rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.RegistryAccessRule" />
      </Parameters>
      <Docs>
        <param name="rule"><span data-ttu-id="60c3c-309">Добавляемый объект <see cref="T:System.Security.AccessControl.RegistryAccessRule" />.</span><span class="sxs-lookup"><span data-stu-id="60c3c-309">The <see cref="T:System.Security.AccessControl.RegistryAccessRule" /> to add.</span></span> <span data-ttu-id="60c3c-310">Имя пользователя, заданное в этом правиле, определяет правила, которые необходимо удалить перед добавлением данного правила.</span><span class="sxs-lookup"><span data-stu-id="60c3c-310">The user specified by this rule determines the rules to remove before this rule is added.</span></span></param>
        <summary><span data-ttu-id="60c3c-311">Удаляет все правила управления доступом с тем же именем пользователя, что и у указанного правила, вне зависимости от значения свойства <see cref="T:System.Security.AccessControl.AccessControlType" />, после чего добавляет указанное правило.</span><span class="sxs-lookup"><span data-stu-id="60c3c-311">Removes all access control rules with the same user as the specified rule, regardless of <see cref="T:System.Security.AccessControl.AccessControlType" />, and then adds the specified rule.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="60c3c-312">Если нет правил доступа, для которых пользователь соответствует указанному правилу `rule` , добавляется.</span><span class="sxs-lookup"><span data-stu-id="60c3c-312">If there are no access rules whose user matches the specified rule, `rule` is added.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="60c3c-313">В следующем примере кода показано, <xref:System.Security.AccessControl.RegistrySecurity.ResetAccessRule%2A> как метод заменяет все правила для соответствующего пользователя правилом, указанным для сопоставления.</span><span class="sxs-lookup"><span data-stu-id="60c3c-313">The following code example shows how the <xref:System.Security.AccessControl.RegistrySecurity.ResetAccessRule%2A> method replaces all rules for the matching user with the rule specified for the match.</span></span>  
  
 <span data-ttu-id="60c3c-314">В примере создается <xref:System.Security.AccessControl.RegistrySecurity> объект и добавляются правила, разрешающие и отклоняющие различные права для текущего пользователя с разными флагами наследования и распространения.</span><span class="sxs-lookup"><span data-stu-id="60c3c-314">The example creates a <xref:System.Security.AccessControl.RegistrySecurity> object and adds rules that allow and deny various rights for the current user, with different inheritance and propagation flags.</span></span> <span data-ttu-id="60c3c-315">Затем в примере создается новое правило, которое разрешает текущему пользователю только чтение ключа, и использует <xref:System.Security.AccessControl.RegistrySecurity.ResetAccessRule%2A> метод для удаления всех правил для пользователя и замены его новым правилом.</span><span class="sxs-lookup"><span data-stu-id="60c3c-315">The example then creates a new rule that allows the current user only to read the key, and uses the <xref:System.Security.AccessControl.RegistrySecurity.ResetAccessRule%2A> method to remove the all rules for the user and replace them with the new rule.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="60c3c-316">В этом примере объект безопасности не подключается к <xref:Microsoft.Win32.RegistryKey> объекту.</span><span class="sxs-lookup"><span data-stu-id="60c3c-316">This example does not attach the security object to a <xref:Microsoft.Win32.RegistryKey> object.</span></span> <span data-ttu-id="60c3c-317">См. <xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=nameWithType> метод и метод. <xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="60c3c-317">See the <xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A?displayProperty=nameWithType> method and the <xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=nameWithType> method.</span></span>  
  
 [!code-csharp[System.Security.AccessControl.RegistrySecurity.ResetAccessRule#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.AccessControl.RegistrySecurity.ResetAccessRule/CS/source.cs#1)]
 [!code-vb[System.Security.AccessControl.RegistrySecurity.ResetAccessRule#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.AccessControl.RegistrySecurity.ResetAccessRule/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetAccessRule">
      <MemberSignature Language="C#" Value="public void SetAccessRule (System.Security.AccessControl.RegistryAccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAccessRule(class System.Security.AccessControl.RegistryAccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.RegistrySecurity.SetAccessRule(System.Security.AccessControl.RegistryAccessRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetAccessRule (rule As RegistryAccessRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAccessRule(System::Security::AccessControl::RegistryAccessRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.SetAccessRule : System.Security.AccessControl.RegistryAccessRule -&gt; unit" Usage="registrySecurity.SetAccessRule rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.RegistryAccessRule" />
      </Parameters>
      <Docs>
        <param name="rule"><span data-ttu-id="60c3c-318">Добавляемый объект <see cref="T:System.Security.AccessControl.RegistryAccessRule" />.</span><span class="sxs-lookup"><span data-stu-id="60c3c-318">The <see cref="T:System.Security.AccessControl.RegistryAccessRule" /> to add.</span></span> <span data-ttu-id="60c3c-319">Имя пользователя и значение <see cref="T:System.Security.AccessControl.AccessControlType" /> определяют правила, которые необходимо удалить перед добавлением этого правила.</span><span class="sxs-lookup"><span data-stu-id="60c3c-319">The user and <see cref="T:System.Security.AccessControl.AccessControlType" /> of this rule determine the rules to remove before this rule is added.</span></span></param>
        <summary><span data-ttu-id="60c3c-320">Удаляет все правила управления доступом с тем же именем пользователя и значением свойства <see cref="T:System.Security.AccessControl.AccessControlType" /> ("разрешить" или "запретить"), что и у указанного правила, после чего добавляет указанное правило.</span><span class="sxs-lookup"><span data-stu-id="60c3c-320">Removes all access control rules with the same user and <see cref="T:System.Security.AccessControl.AccessControlType" /> (allow or deny) as the specified rule, and then adds the specified rule.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="60c3c-321">Если указанное правило имеет <xref:System.Security.AccessControl.AccessControlType.Allow>значение, результатом этого метода будет удалить все <xref:System.Security.AccessControl.AccessControlType.Allow> правила для указанного пользователя, заменив их указанным правилом.</span><span class="sxs-lookup"><span data-stu-id="60c3c-321">If the specified rule has <xref:System.Security.AccessControl.AccessControlType.Allow>, the effect of this method is to remove all <xref:System.Security.AccessControl.AccessControlType.Allow> rules for the specified user, replacing them with the specified rule.</span></span> <span data-ttu-id="60c3c-322">Если указанное правило имеет <xref:System.Security.AccessControl.AccessControlType.Deny>значение, все <xref:System.Security.AccessControl.AccessControlType.Deny> правила для указанного пользователя заменяются указанным правилом.</span><span class="sxs-lookup"><span data-stu-id="60c3c-322">If the specified rule has <xref:System.Security.AccessControl.AccessControlType.Deny>, all <xref:System.Security.AccessControl.AccessControlType.Deny> rules for the specified user are replaced with the specified rule.</span></span>  
  
 <span data-ttu-id="60c3c-323">Если правила, для которых пользователь <xref:System.Security.AccessControl.AccessControlType> соответствует указанному правилу, не существует, `rule` добавляется.</span><span class="sxs-lookup"><span data-stu-id="60c3c-323">If there are no rules whose user and <xref:System.Security.AccessControl.AccessControlType> match the specified rule, `rule` is added.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="60c3c-324">В следующем примере кода показано, что <xref:System.Security.AccessControl.RegistrySecurity.SetAccessRule%2A> метод удаляет все правила, совпадающие как с пользователем `rule`, <xref:System.Security.AccessControl.AccessControlType> так и с, игнорируя права и флаги и заменяет `rule`их на.</span><span class="sxs-lookup"><span data-stu-id="60c3c-324">The following code example shows that the <xref:System.Security.AccessControl.RegistrySecurity.SetAccessRule%2A> method removes all rules that match both the user and the <xref:System.Security.AccessControl.AccessControlType> of `rule`, ignoring rights and flags, and replaces them with `rule`.</span></span>  
  
 <span data-ttu-id="60c3c-325">В примере создается <xref:System.Security.AccessControl.RegistrySecurity> объект и добавляются правила, разрешающие и отклоняющие различные права для текущего пользователя с разными флагами наследования и распространения.</span><span class="sxs-lookup"><span data-stu-id="60c3c-325">The example creates a <xref:System.Security.AccessControl.RegistrySecurity> object and adds rules that allow and deny various rights for the current user, with different inheritance and propagation flags.</span></span> <span data-ttu-id="60c3c-326">Затем в примере создается новое правило, которое разрешает текущему пользователю только чтение ключа, и использует <xref:System.Security.AccessControl.RegistrySecurity.SetAccessRule%2A> метод для удаления двух правил, разрешающих доступ и заменяющих их новым правилом.</span><span class="sxs-lookup"><span data-stu-id="60c3c-326">The example then creates a new rule that allows the current user only to read the key, and uses the <xref:System.Security.AccessControl.RegistrySecurity.SetAccessRule%2A> method to remove the two rules that allow access and to replace them with the new rule.</span></span> <span data-ttu-id="60c3c-327">Правило, запрещающее доступ, не затрагивается.</span><span class="sxs-lookup"><span data-stu-id="60c3c-327">The rule that denies access is not affected.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="60c3c-328">В этом примере объект безопасности не подключается к <xref:Microsoft.Win32.RegistryKey> объекту.</span><span class="sxs-lookup"><span data-stu-id="60c3c-328">This example does not attach the security object to a <xref:Microsoft.Win32.RegistryKey> object.</span></span> <span data-ttu-id="60c3c-329">См. <xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=nameWithType> метод и метод. <xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="60c3c-329">See the <xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A?displayProperty=nameWithType> method and the <xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=nameWithType> method.</span></span>  
  
 [!code-csharp[System.Security.AccessControl.RegistrySecurity.SetAccessRule#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.AccessControl.RegistrySecurity.SetAccessRule/CS/source.cs#1)]
 [!code-vb[System.Security.AccessControl.RegistrySecurity.SetAccessRule#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.AccessControl.RegistrySecurity.SetAccessRule/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="60c3c-330">Свойство <paramref name="rule" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="60c3c-330"><paramref name="rule" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetAuditRule">
      <MemberSignature Language="C#" Value="public void SetAuditRule (System.Security.AccessControl.RegistryAuditRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAuditRule(class System.Security.AccessControl.RegistryAuditRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.RegistrySecurity.SetAuditRule(System.Security.AccessControl.RegistryAuditRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetAuditRule (rule As RegistryAuditRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAuditRule(System::Security::AccessControl::RegistryAuditRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.SetAuditRule : System.Security.AccessControl.RegistryAuditRule -&gt; unit" Usage="registrySecurity.SetAuditRule rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.RegistryAuditRule" />
      </Parameters>
      <Docs>
        <param name="rule"><span data-ttu-id="60c3c-331">Добавляемый объект <see cref="T:System.Security.AccessControl.RegistryAuditRule" />.</span><span class="sxs-lookup"><span data-stu-id="60c3c-331">The <see cref="T:System.Security.AccessControl.RegistryAuditRule" /> to add.</span></span> <span data-ttu-id="60c3c-332">Имя пользователя, заданное в этом правиле, определяет правила, которые необходимо удалить перед добавлением данного правила.</span><span class="sxs-lookup"><span data-stu-id="60c3c-332">The user specified by this rule determines the rules to remove before this rule is added.</span></span></param>
        <summary><span data-ttu-id="60c3c-333">Удаляет все правила аудита с тем же именем пользователя, что и у указанного правила, вне зависимости от значения свойства <see cref="T:System.Security.AccessControl.AuditFlags" />, после чего добавляет указанное правило.</span><span class="sxs-lookup"><span data-stu-id="60c3c-333">Removes all audit rules with the same user as the specified rule, regardless of the <see cref="T:System.Security.AccessControl.AuditFlags" /> value, and then adds the specified rule.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="60c3c-334">Если правила аудита, для которых пользователь соответствует указанному правилу, `rule` не существует, добавляется.</span><span class="sxs-lookup"><span data-stu-id="60c3c-334">If there are no audit rules whose user matches the specified rule, `rule` is added.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="60c3c-335">Свойство <paramref name="rule" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="60c3c-335"><paramref name="rule" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
