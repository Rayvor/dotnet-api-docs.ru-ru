<Type Name="FileSystemSecurity" FullName="System.Security.AccessControl.FileSystemSecurity">
  <Metadata><Meta Name="ms.openlocfilehash" Value="54cc7e7155d6489aed8bc8132962d577f1707973" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75081691" /></Metadata><TypeSignature Language="C#" Value="public abstract class FileSystemSecurity : System.Security.AccessControl.NativeObjectSecurity" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit FileSystemSecurity extends System.Security.AccessControl.NativeObjectSecurity" />
  <TypeSignature Language="DocId" Value="T:System.Security.AccessControl.FileSystemSecurity" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class FileSystemSecurity&#xA;Inherits NativeObjectSecurity" />
  <TypeSignature Language="C++ CLI" Value="public ref class FileSystemSecurity abstract : System::Security::AccessControl::NativeObjectSecurity" />
  <TypeSignature Language="F#" Value="type FileSystemSecurity = class&#xA;    inherit NativeObjectSecurity" />
  <AssemblyInfo>
    <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
    <AssemblyVersion>4.0.4.0</AssemblyVersion>
    <AssemblyVersion>4.0.5.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.AccessControl.NativeObjectSecurity</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1">
      <AttributeName>System.Security.SecurityCritical</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Представляет возможности управления доступом и аудита безопасности для файла или каталога.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Класс <xref:System.Security.AccessControl.FileSystemSecurity> является базовым классом для классов <xref:System.Security.AccessControl.FileSecurity> и <xref:System.Security.AccessControl.DirectorySecurity>.  Эти классы представляют все права доступа к системному файлу или каталогу и определяют, как осуществляется аудит попыток доступа.  
  
 Класс <xref:System.Security.AccessControl.FileSystemSecurity> представляет права доступа и аудита в виде набора правил. Каждое правило доступа представляется объектом <xref:System.Security.AccessControl.FileSystemAccessRule>, а каждое правило аудита представляется объектом <xref:System.Security.AccessControl.FileSystemAuditRule>.  
  
 Класс <xref:System.Security.AccessControl.FileSystemSecurity> является абстракцией базовой системы безопасности файлов Microsoft Windows. В этой системе каждый файл или каталог имеет список управления доступом на уровне пользователей (DACL), который управляет доступом к файлу или каталогу, и системный список управления доступом (SACL), указывающий попытки контроля доступа, которые подлежат аудиту.  Классы <xref:System.Security.AccessControl.FileSystemAccessRule> и <xref:System.Security.AccessControl.FileSystemAuditRule> являются абстракциями записей контроля доступа (ACE), составляющих списки DACL и SACL.  
  
 Класс <xref:System.Security.AccessControl.FileSystemSecurity> скрывает многие сведения об DACL и SACL. не нужно беспокоиться о сортировке ACE или пустых DACL.  
  
 Чтобы сохранить новые или измененные данные списка управления доступом (ACL) в файле, используйте метод <xref:System.IO.File.SetAccessControl%2A> или <xref:System.IO.FileInfo.SetAccessControl%2A>.  Чтобы сохранить новые или измененные данные ACL в каталоге, используйте метод <xref:System.IO.Directory.SetAccessControl%2A> или <xref:System.IO.FileInfo.SetAccessControl%2A>.  
  
 Чтобы получить данные ACL из файла, используйте метод <xref:System.IO.File.GetAccessControl%2A> или <xref:System.IO.FileInfo.GetAccessControl%2A>.  Чтобы получить данные ACL из каталога, используйте метод <xref:System.IO.Directory.GetAccessControl%2A> или <xref:System.IO.DirectoryInfo.GetAccessControl%2A>.  
  
   
  
## Examples  
 В следующем примере кода используется класс <xref:System.Security.AccessControl.FileSecurity> для добавления и удаления записи списка управления доступом (ACL) из файла.  Для выполнения этого примера необходимо указать допустимую учетную запись пользователя или группы.  
  
 [!code-cpp[IO.File.GetAccessControl-SetAccessControl#1](~/samples/snippets/cpp/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/cpp/sample.cpp#1)]
 [!code-csharp[IO.File.GetAccessControl-SetAccessControl#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/CS/sample.cs#1)]
 [!code-vb[IO.File.GetAccessControl-SetAccessControl#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/VB/sample.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AccessRightType">
      <MemberSignature Language="C#" Value="public override Type AccessRightType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type AccessRightType" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.FileSystemSecurity.AccessRightType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property AccessRightType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ AccessRightType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AccessRightType : Type" Usage="System.Security.AccessControl.FileSystemSecurity.AccessRightType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает значение перечисления, используемое классом <see cref="T:System.Security.AccessControl.FileSystemSecurity" /> для обозначения прав доступа.</summary>
        <value>Объект <see cref="T:System.Type" />, представляющий перечисление <see cref="T:System.Security.AccessControl.FileSystemRights" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Классы, производные от <xref:System.Security.AccessControl.FileSystemSecurity> класса переопределение <xref:System.Security.AccessControl.FileSystemSecurity.AccessRightType%2A> свойства и возвращаемые типа, они используют для обозначения прав доступа. При работе с массивами или коллекциями, содержащими объекты безопасности нескольких типов, используйте это свойство, чтобы определить правильный тип перечисления для использования с каждым объектом безопасности.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AccessRuleFactory">
      <MemberSignature Language="C#" Value="public override sealed System.Security.AccessControl.AccessRule AccessRuleFactory (System.Security.Principal.IdentityReference identityReference, int accessMask, bool isInherited, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AccessControlType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.AccessControl.AccessRule AccessRuleFactory(class System.Security.Principal.IdentityReference identityReference, int32 accessMask, bool isInherited, valuetype System.Security.AccessControl.InheritanceFlags inheritanceFlags, valuetype System.Security.AccessControl.PropagationFlags propagationFlags, valuetype System.Security.AccessControl.AccessControlType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::AccessControl::AccessRule ^ AccessRuleFactory(System::Security::Principal::IdentityReference ^ identityReference, int accessMask, bool isInherited, System::Security::AccessControl::InheritanceFlags inheritanceFlags, System::Security::AccessControl::PropagationFlags propagationFlags, System::Security::AccessControl::AccessControlType type);" />
      <MemberSignature Language="F#" Value="override this.AccessRuleFactory : System.Security.Principal.IdentityReference * int * bool * System.Security.AccessControl.InheritanceFlags * System.Security.AccessControl.PropagationFlags * System.Security.AccessControl.AccessControlType -&gt; System.Security.AccessControl.AccessRule" Usage="fileSystemSecurity.AccessRuleFactory (identityReference, accessMask, isInherited, inheritanceFlags, propagationFlags, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.AccessRule</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identityReference" Type="System.Security.Principal.IdentityReference" />
        <Parameter Name="accessMask" Type="System.Int32" />
        <Parameter Name="isInherited" Type="System.Boolean" />
        <Parameter Name="inheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
        <Parameter Name="propagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
        <Parameter Name="type" Type="System.Security.AccessControl.AccessControlType" />
      </Parameters>
      <Docs>
        <param name="identityReference">Объект <see cref="T:System.Security.Principal.IdentityReference" />, представляющий учетную запись пользователя.</param>
        <param name="accessMask">Целочисленное значение, задающее тип доступа.</param>
        <param name="isInherited">Значение <see langword="true" />, если правило доступа наследуется; в противном случае — значение <see langword="false" />.</param>
        <param name="inheritanceFlags">Одно из значений <see cref="T:System.Security.AccessControl.InheritanceFlags" />, определяющее порядок распространения масок доступа на дочерние объекты.</param>
        <param name="propagationFlags">Одно из значений <see cref="T:System.Security.AccessControl.PropagationFlags" />, определяющее порядок распространения элементов управления доступом на дочерние объекты.</param>
        <param name="type">Одно из значений <see cref="T:System.Security.AccessControl.AccessControlType" />, определяющее тип правила ("разрешить" или "запретить").</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Security.AccessControl.FileSystemAccessRule" />, представляющий новое правило управления доступом для указанного пользователя с указанными правами доступа, типом доступа и флагами.</summary>
        <returns>Новый объект <see cref="T:System.Security.AccessControl.FileSystemAccessRule" />, представляющий новое правило управления доступом для указанного пользователя с указанными правами доступа, типом доступа и флагами.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Для создания правил управления доступом рекомендуется использовать конструкторы класса <xref:System.Security.AccessControl.FileSystemAccessRule>.  
  
 Тип возвращаемого значения метода <xref:System.Security.AccessControl.FileSystemSecurity.AccessRuleFactory%2A> является базовым классом <xref:System.Security.AccessControl.AccessRule>, но возвращаемое значение может быть безопасно приведено к производному классу.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Параметр <paramref name="accessMask" />, <paramref name="inheritanceFlags" />, <paramref name="propagationFlags" /> или <paramref name="type" /> содержит недопустимое значение.</exception>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="identityReference" /> имеет значение <see langword="null" />.  
  
-или- 
Значение параметра <paramref name="accessMask" /> равно нулю.</exception>
        <exception cref="T:System.ArgumentException">Параметр <paramref name="identityReference" /> не принадлежит к типу <see cref="T:System.Security.Principal.SecurityIdentifier" /> или к типу (такому, как <see cref="T:System.Security.Principal.NTAccount" />), допускающему преобразование в тип <see cref="T:System.Security.Principal.SecurityIdentifier" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AccessRuleType">
      <MemberSignature Language="C#" Value="public override Type AccessRuleType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type AccessRuleType" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.FileSystemSecurity.AccessRuleType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property AccessRuleType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ AccessRuleType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AccessRuleType : Type" Usage="System.Security.AccessControl.FileSystemSecurity.AccessRuleType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает перечисление, используемое классом <see cref="T:System.Security.AccessControl.FileSystemSecurity" /> для обозначения правил доступа.</summary>
        <value>Объект <see cref="T:System.Type" />, представляющий класс <see cref="T:System.Security.AccessControl.FileSystemAccessRule" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Классы, производные от класса <xref:System.Security.AccessControl.FileSystemSecurity>, переопределяют свойство <xref:System.Security.AccessControl.FileSystemSecurity.AccessRuleType%2A> и возвращают тип, который они используют для представления правил доступа. При работе с массивами или коллекциями, содержащими объекты безопасности нескольких типов, используйте это свойство, чтобы определить правильный тип правила доступа для использования с каждым объектом безопасности.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddAccessRule">
      <MemberSignature Language="C#" Value="public void AddAccessRule (System.Security.AccessControl.FileSystemAccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddAccessRule(class System.Security.AccessControl.FileSystemAccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemSecurity.AddAccessRule(System.Security.AccessControl.FileSystemAccessRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddAccessRule (rule As FileSystemAccessRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddAccessRule(System::Security::AccessControl::FileSystemAccessRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.AddAccessRule : System.Security.AccessControl.FileSystemAccessRule -&gt; unit" Usage="fileSystemSecurity.AddAccessRule rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.FileSystemAccessRule" />
      </Parameters>
      <Docs>
        <param name="rule">Объект <see cref="T:System.Security.AccessControl.FileSystemAccessRule" />, представляющий разрешение списка управления доступом, которое необходимо добавить к файлу или каталогу.</param>
        <summary>Добавляет указанное разрешение списка управления доступом к текущему файлу или каталогу.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод <xref:System.Security.AccessControl.FileSystemSecurity.AddAccessRule%2A> добавляет новое правило в список правил, содержащихся в объекте <xref:System.Security.AccessControl.FileSystemSecurity>.  
  
 Если список управления доступом (ACL) уже существует для указанного правила, метод <xref:System.Security.AccessControl.FileSystemSecurity.AddAccessRule%2A> по-прежнему будет добавлять правило с одним исключением: объект <xref:System.Security.AccessControl.FileSystemAccessRule>, созданный с помощью значения перечисления <xref:System.Security.AccessControl.AccessControlType.Deny>, заменяет объект, созданный с помощью значения перечисления <xref:System.Security.AccessControl.AccessControlType.Allow>.  
  
 Чтобы сохранить новые или измененные данные ACL в файле, используйте метод <xref:System.IO.File.SetAccessControl%2A> или <xref:System.IO.FileInfo.SetAccessControl%2A>.  Чтобы сохранить новые или измененные данные ACL в каталоге, используйте метод <xref:System.IO.Directory.SetAccessControl%2A> или <xref:System.IO.FileInfo.SetAccessControl%2A>.  
  
 Чтобы получить данные ACL из файла, используйте метод <xref:System.IO.File.GetAccessControl%2A> или <xref:System.IO.FileInfo.GetAccessControl%2A>.  Чтобы получить данные ACL из каталога, используйте метод <xref:System.IO.Directory.GetAccessControl%2A> или <xref:System.IO.DirectoryInfo.GetAccessControl%2A>.  
  
 При добавлении правила доступа без установки флага <xref:System.Security.AccessControl.FileSystemRights.Synchronize> флаг <xref:System.Security.AccessControl.FileSystemRights.Synchronize> будет автоматически добавлен в правило.  Если правило будет удалено позже без указания флага <xref:System.Security.AccessControl.FileSystemRights.Synchronize>, то флаг автоматически удаляется.  
  
   
  
## Examples  
 В следующем примере кода используется класс <xref:System.Security.AccessControl.FileSecurity> для добавления и удаления записи списка управления доступом (ACL) из файла.  Для выполнения этого примера необходимо указать допустимую учетную запись пользователя или группы.  
  
 [!code-cpp[IO.File.GetAccessControl-SetAccessControl#1](~/samples/snippets/cpp/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/cpp/sample.cpp#1)]
 [!code-csharp[IO.File.GetAccessControl-SetAccessControl#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/CS/sample.cs#1)]
 [!code-vb[IO.File.GetAccessControl-SetAccessControl#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="rule" /> имеет значение <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddAuditRule">
      <MemberSignature Language="C#" Value="public void AddAuditRule (System.Security.AccessControl.FileSystemAuditRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddAuditRule(class System.Security.AccessControl.FileSystemAuditRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemSecurity.AddAuditRule(System.Security.AccessControl.FileSystemAuditRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddAuditRule (rule As FileSystemAuditRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddAuditRule(System::Security::AccessControl::FileSystemAuditRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.AddAuditRule : System.Security.AccessControl.FileSystemAuditRule -&gt; unit" Usage="fileSystemSecurity.AddAuditRule rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.FileSystemAuditRule" />
      </Parameters>
      <Docs>
        <param name="rule">Объект <see cref="T:System.Security.AccessControl.FileSystemAuditRule" />, представляющий правило аудита, которое необходимо добавить к файлу или каталогу.</param>
        <summary>Добавляет указанное правило аудита к текущему файлу или каталогу.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод <xref:System.Security.AccessControl.FileSystemSecurity.AddAuditRule%2A> добавляет новое правило аудита в список правил, содержащихся в объекте <xref:System.Security.AccessControl.FileSystemSecurity>.  
  
 Если правило аудита для указанного правила уже существует, то метод <xref:System.Security.AccessControl.FileSystemSecurity.AddAuditRule%2A> по-прежнему будет добавлять правило.  
  
   
  
## Examples  
 В следующем примере кода метод <xref:System.Security.AccessControl.FileSystemSecurity.AddAuditRule%2A> используется для добавления правила аудита в файл и использует метод <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAuditRule%2A> для удаления правила аудита из файла.  Для выполнения этого примера необходимо указать допустимую учетную запись пользователя или группы.  
  
 [!code-csharp[AccessControl.FileSystemAuditRule#1](~/samples/snippets/csharp/VS_Snippets_CLR/AccessControl.FileSystemAuditRule/cs/sample.cs#1)]
 [!code-vb[AccessControl.FileSystemAuditRule#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AccessControl.FileSystemAuditRule/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="rule" /> имеет значение <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AuditRuleFactory">
      <MemberSignature Language="C#" Value="public override sealed System.Security.AccessControl.AuditRule AuditRuleFactory (System.Security.Principal.IdentityReference identityReference, int accessMask, bool isInherited, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AuditFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.AccessControl.AuditRule AuditRuleFactory(class System.Security.Principal.IdentityReference identityReference, int32 accessMask, bool isInherited, valuetype System.Security.AccessControl.InheritanceFlags inheritanceFlags, valuetype System.Security.AccessControl.PropagationFlags propagationFlags, valuetype System.Security.AccessControl.AuditFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::AccessControl::AuditRule ^ AuditRuleFactory(System::Security::Principal::IdentityReference ^ identityReference, int accessMask, bool isInherited, System::Security::AccessControl::InheritanceFlags inheritanceFlags, System::Security::AccessControl::PropagationFlags propagationFlags, System::Security::AccessControl::AuditFlags flags);" />
      <MemberSignature Language="F#" Value="override this.AuditRuleFactory : System.Security.Principal.IdentityReference * int * bool * System.Security.AccessControl.InheritanceFlags * System.Security.AccessControl.PropagationFlags * System.Security.AccessControl.AuditFlags -&gt; System.Security.AccessControl.AuditRule" Usage="fileSystemSecurity.AuditRuleFactory (identityReference, accessMask, isInherited, inheritanceFlags, propagationFlags, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.AuditRule</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identityReference" Type="System.Security.Principal.IdentityReference" />
        <Parameter Name="accessMask" Type="System.Int32" />
        <Parameter Name="isInherited" Type="System.Boolean" />
        <Parameter Name="inheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
        <Parameter Name="propagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
        <Parameter Name="flags" Type="System.Security.AccessControl.AuditFlags" />
      </Parameters>
      <Docs>
        <param name="identityReference">Объект <see cref="T:System.Security.Principal.IdentityReference" />, представляющий учетную запись пользователя.</param>
        <param name="accessMask">Целочисленное значение, задающее тип доступа.</param>
        <param name="isInherited">Значение <see langword="true" />, если правило доступа наследуется; в противном случае — значение <see langword="false" />.</param>
        <param name="inheritanceFlags">Одно из значений <see cref="T:System.Security.AccessControl.InheritanceFlags" />, определяющее порядок распространения масок доступа на дочерние объекты.</param>
        <param name="propagationFlags">Одно из значений <see cref="T:System.Security.AccessControl.PropagationFlags" />, определяющее порядок распространения элементов управления доступом на дочерние объекты.</param>
        <param name="flags">Одно из значений <see cref="T:System.Security.AccessControl.AuditFlags" />, определяющее тип проводимого аудита.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Security.AccessControl.FileSystemAuditRule" />, который представляет указанное правило аудита для указанного пользователя.</summary>
        <returns>Новый объект <see cref="T:System.Security.AccessControl.FileSystemAuditRule" />, представляющий указанное правило аудита для указанного пользователя.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Для создания правил аудита рекомендуется использовать конструкторы класса <xref:System.Security.AccessControl.FileSystemAuditRule>.  
  
 Тип возвращаемого значения метода <xref:System.Security.AccessControl.FileSystemSecurity.AuditRuleFactory%2A> является базовым классом <xref:System.Security.AccessControl.AuditRule>, но возвращаемое значение может быть безопасно приведено к производному классу.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Свойство <paramref name="accessMask" />, <paramref name="inheritanceFlags" />, <paramref name="propagationFlags" /> или <paramref name="flags" /> задает недопустимое значение.</exception>
        <exception cref="T:System.ArgumentNullException">Значение свойства <paramref name="identityReference" /> — <see langword="null" />.  
  
-или- 
Значение свойства <paramref name="accessMask" /> равно нулю.</exception>
        <exception cref="T:System.ArgumentException">Свойство <paramref name="identityReference" /> не принадлежит к типу <see cref="T:System.Security.Principal.SecurityIdentifier" /> или к типу (такому, как <see cref="T:System.Security.Principal.NTAccount" />), допускающему преобразование в тип <see cref="T:System.Security.Principal.SecurityIdentifier" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AuditRuleType">
      <MemberSignature Language="C#" Value="public override Type AuditRuleType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type AuditRuleType" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.FileSystemSecurity.AuditRuleType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property AuditRuleType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ AuditRuleType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AuditRuleType : Type" Usage="System.Security.AccessControl.FileSystemSecurity.AuditRuleType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает тип, используемый классом <see cref="T:System.Security.AccessControl.FileSystemSecurity" /> для обозначения правил аудита.</summary>
        <value>Объект <see cref="T:System.Type" />, представляющий класс <see cref="T:System.Security.AccessControl.FileSystemAuditRule" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Классы, производные от <xref:System.Security.AccessControl.FileSystemSecurity> класса переопределение <xref:System.Security.AccessControl.FileSystemSecurity.AuditRuleType%2A> свойства и возвращаемые типа, они используют для обозначения прав аудита. При работе с массивами или коллекциями, содержащими объекты безопасности нескольких типов, используйте это свойство, чтобы определить правильный тип правила аудита для использования с каждым объектом безопасности.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAccessRule">
      <MemberSignature Language="C#" Value="public bool RemoveAccessRule (System.Security.AccessControl.FileSystemAccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveAccessRule(class System.Security.AccessControl.FileSystemAccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemSecurity.RemoveAccessRule(System.Security.AccessControl.FileSystemAccessRule)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveAccessRule (rule As FileSystemAccessRule) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveAccessRule(System::Security::AccessControl::FileSystemAccessRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.RemoveAccessRule : System.Security.AccessControl.FileSystemAccessRule -&gt; bool" Usage="fileSystemSecurity.RemoveAccessRule rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.FileSystemAccessRule" />
      </Parameters>
      <Docs>
        <param name="rule">Объект <see cref="T:System.Security.AccessControl.FileSystemAccessRule" />, представляющий разрешение списка управления доступом, которое необходимо удалить из файла или каталога.</param>
        <summary>Удаляет все подходящие разрешения и запреты списка управления доступом из текущего файла или каталога.</summary>
        <returns>Значение <see langword="true" />, если правило доступа удалено; в противном случае — значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAccessRule%2A> удаляет все соответствующие правила доступа <xref:System.Security.AccessControl.AccessControlType.Deny> или все соответствующие <xref:System.Security.AccessControl.AccessControlType.Allow> правила доступа из текущего объекта <xref:System.Security.AccessControl.FileSystemSecurity>.  Например, этот метод можно использовать для удаления всех правил доступа <xref:System.Security.AccessControl.AccessControlType.Deny> для пользователя путем передачи объекта <xref:System.Security.AccessControl.FileSystemAccessRule>, созданного с помощью значения <xref:System.Security.AccessControl.AccessControlType.Deny>, <xref:System.Security.AccessControl.FileSystemRights.Read> значения и учетной записи пользователя.  После этого метод <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAccessRule%2A> удаляет все правила запрета, которые задают значение <xref:System.Security.AccessControl.FileSystemRights.Read> или значение <xref:System.Security.AccessControl.FileSystemRights.Write>.  
  
 Чтобы сохранить новые или измененные данные списка управления доступом (ACL) в файле, используйте метод <xref:System.IO.File.SetAccessControl%2A> или <xref:System.IO.FileInfo.SetAccessControl%2A>.  Чтобы сохранить новые или измененные данные ACL в каталоге, используйте метод <xref:System.IO.Directory.SetAccessControl%2A> или <xref:System.IO.FileInfo.SetAccessControl%2A>.  
  
 Чтобы получить данные ACL из файла, используйте метод <xref:System.IO.File.GetAccessControl%2A> или <xref:System.IO.FileInfo.GetAccessControl%2A>.  Чтобы получить данные ACL из каталога, используйте метод <xref:System.IO.Directory.GetAccessControl%2A> или <xref:System.IO.DirectoryInfo.GetAccessControl%2A>.  
  
 При добавлении правила доступа без установки флага <xref:System.Security.AccessControl.FileSystemRights.Synchronize> флаг <xref:System.Security.AccessControl.FileSystemRights.Synchronize> будет автоматически добавлен в правило.  Если правило будет удалено позже без указания флага <xref:System.Security.AccessControl.FileSystemRights.Synchronize>, то флаг автоматически удаляется.  
  
   
  
## Examples  
 В следующем примере кода используется класс <xref:System.Security.AccessControl.FileSecurity> для добавления и удаления записи списка управления доступом (ACL) из файла.  Для выполнения этого примера необходимо указать допустимую учетную запись пользователя или группы.  
  
 [!code-cpp[IO.File.GetAccessControl-SetAccessControl#1](~/samples/snippets/cpp/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/cpp/sample.cpp#1)]
 [!code-csharp[IO.File.GetAccessControl-SetAccessControl#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/CS/sample.cs#1)]
 [!code-vb[IO.File.GetAccessControl-SetAccessControl#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="rule" /> имеет значение <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAccessRuleAll">
      <MemberSignature Language="C#" Value="public void RemoveAccessRuleAll (System.Security.AccessControl.FileSystemAccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAccessRuleAll(class System.Security.AccessControl.FileSystemAccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleAll(System.Security.AccessControl.FileSystemAccessRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAccessRuleAll (rule As FileSystemAccessRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAccessRuleAll(System::Security::AccessControl::FileSystemAccessRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.RemoveAccessRuleAll : System.Security.AccessControl.FileSystemAccessRule -&gt; unit" Usage="fileSystemSecurity.RemoveAccessRuleAll rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.FileSystemAccessRule" />
      </Parameters>
      <Docs>
        <param name="rule">Объект <see cref="T:System.Security.AccessControl.FileSystemAccessRule" />, задающий пользователя, разрешения списка управления доступом которого необходимо удалить из файла или каталога.</param>
        <summary>Удаляет все разрешения списка управления доступом для указанного пользователя из текущего файла или каталога.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleAll%2A> удаляет все разрешения списка управления доступом (ACL) для указанного пользователя.  Метод игнорирует все значения в объекте <xref:System.Security.AccessControl.FileSystemAccessRule>, за исключением учетной записи пользователя.  
  
 Чтобы сохранить новые или измененные данные ACL в файле, используйте метод <xref:System.IO.File.SetAccessControl%2A> или <xref:System.IO.FileInfo.SetAccessControl%2A>.  Чтобы сохранить новые или измененные данные ACL в каталоге, используйте метод <xref:System.IO.Directory.SetAccessControl%2A> или <xref:System.IO.FileInfo.SetAccessControl%2A>.  
  
 Чтобы получить данные ACL из файла, используйте метод <xref:System.IO.File.GetAccessControl%2A> или <xref:System.IO.FileInfo.GetAccessControl%2A>.  Чтобы получить данные ACL из каталога, используйте метод <xref:System.IO.Directory.GetAccessControl%2A> или <xref:System.IO.DirectoryInfo.GetAccessControl%2A>.  
  
 При добавлении правила доступа без установки флага <xref:System.Security.AccessControl.FileSystemRights.Synchronize> флаг <xref:System.Security.AccessControl.FileSystemRights.Synchronize> будет автоматически добавлен в правило.  Если правило будет удалено позже без указания флага <xref:System.Security.AccessControl.FileSystemRights.Synchronize>, то флаг автоматически удаляется.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="rule" /> имеет значение <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAccessRuleSpecific">
      <MemberSignature Language="C#" Value="public void RemoveAccessRuleSpecific (System.Security.AccessControl.FileSystemAccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAccessRuleSpecific(class System.Security.AccessControl.FileSystemAccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.FileSystemAccessRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAccessRuleSpecific (rule As FileSystemAccessRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAccessRuleSpecific(System::Security::AccessControl::FileSystemAccessRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.RemoveAccessRuleSpecific : System.Security.AccessControl.FileSystemAccessRule -&gt; unit" Usage="fileSystemSecurity.RemoveAccessRuleSpecific rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.FileSystemAccessRule" />
      </Parameters>
      <Docs>
        <param name="rule">Объект <see cref="T:System.Security.AccessControl.FileSystemAccessRule" />, задающий пользователя, разрешения списка управления доступом которого необходимо удалить из файла или каталога.</param>
        <summary>Удаляет одно подходящее разрешение или один запрет списка управления доступом из текущего файла или каталога.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleSpecific%2A> удаляет указанное правило доступа <xref:System.Security.AccessControl.AccessControlType.Deny> или указанное соответствие <xref:System.Security.AccessControl.AccessControlType.Allow> правилу доступа из текущего объекта <xref:System.Security.AccessControl.FileSystemSecurity>.  Например, этот метод можно использовать для удаления указанного правила доступа <xref:System.Security.AccessControl.AccessControlType.Deny> для пользователя путем передачи объекта <xref:System.Security.AccessControl.FileSystemAccessRule>, созданного с помощью значения <xref:System.Security.AccessControl.AccessControlType.Deny>, <xref:System.Security.AccessControl.FileSystemRights.Read> значения и учетной записи пользователя.  После этого метод <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleSpecific%2A> удаляет только правило Deny, которое задает значение <xref:System.Security.AccessControl.FileSystemRights.Read>.  При этом не удаляются правила запрета, указывающие значение <xref:System.Security.AccessControl.FileSystemRights.Write>.  
  
 Чтобы сохранить новые или измененные данные списка управления доступом (ACL) в файле, используйте метод <xref:System.IO.File.SetAccessControl%2A> или <xref:System.IO.FileInfo.SetAccessControl%2A>.  Чтобы сохранить новые или измененные данные ACL в каталоге, используйте метод <xref:System.IO.Directory.SetAccessControl%2A> или <xref:System.IO.FileInfo.SetAccessControl%2A>.  
  
 Чтобы получить данные ACL из файла, используйте метод <xref:System.IO.File.GetAccessControl%2A> или <xref:System.IO.FileInfo.GetAccessControl%2A>.  Чтобы получить данные ACL из каталога, используйте метод <xref:System.IO.Directory.GetAccessControl%2A> или <xref:System.IO.DirectoryInfo.GetAccessControl%2A>.  
  
 При добавлении правила доступа без установки флага <xref:System.Security.AccessControl.FileSystemRights.Synchronize> флаг <xref:System.Security.AccessControl.FileSystemRights.Synchronize> будет автоматически добавлен в правило.  Если правило будет удалено позже без указания флага <xref:System.Security.AccessControl.FileSystemRights.Synchronize>, то флаг автоматически удаляется.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="rule" /> имеет значение <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAuditRule">
      <MemberSignature Language="C#" Value="public bool RemoveAuditRule (System.Security.AccessControl.FileSystemAuditRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveAuditRule(class System.Security.AccessControl.FileSystemAuditRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemSecurity.RemoveAuditRule(System.Security.AccessControl.FileSystemAuditRule)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveAuditRule (rule As FileSystemAuditRule) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveAuditRule(System::Security::AccessControl::FileSystemAuditRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.RemoveAuditRule : System.Security.AccessControl.FileSystemAuditRule -&gt; bool" Usage="fileSystemSecurity.RemoveAuditRule rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.FileSystemAuditRule" />
      </Parameters>
      <Docs>
        <param name="rule">Объект <see cref="T:System.Security.AccessControl.FileSystemAuditRule" />, представляющий правило аудита, которое необходимо удалить из файла или каталога.</param>
        <summary>Удаляет все подходящие разрешающие или запрещающие правила аудита из текущего файла или каталога.</summary>
        <returns>Значение <see langword="true" />, если правило аудита удалено, в противном случае — значение <see langword="false" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAuditRule%2A> удаляет все соответствующие правила аудита <xref:System.Security.AccessControl.AccessControlType.Deny> или все соответствующие <xref:System.Security.AccessControl.AccessControlType.Allow> правила аудита из текущего объекта <xref:System.Security.AccessControl.FileSystemSecurity>.  Например, этот метод можно использовать для удаления всех правил аудита <xref:System.Security.AccessControl.AccessControlType.Deny> для пользователя путем передачи объекта <xref:System.Security.AccessControl.FileSystemAuditRule>, созданного с помощью значения <xref:System.Security.AccessControl.AccessControlType.Deny>, <xref:System.Security.AccessControl.AuditFlags.Failure> значения и учетной записи пользователя.  После этого метод <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAuditRule%2A> удаляет все правила запрета, которые задают значение <xref:System.Security.AccessControl.AuditFlags.Failure> или значение <xref:System.Security.AccessControl.AuditFlags.Success>.  
  
   
  
## Examples  
 В следующем примере кода метод <xref:System.Security.AccessControl.FileSystemSecurity.AddAuditRule%2A> используется для добавления правила аудита в файл и использует метод <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAuditRule%2A> для удаления правила аудита из файла.  Для выполнения этого примера необходимо указать допустимую учетную запись пользователя или группы.  
  
 [!code-csharp[AccessControl.FileSystemAuditRule#1](~/samples/snippets/csharp/VS_Snippets_CLR/AccessControl.FileSystemAuditRule/cs/sample.cs#1)]
 [!code-vb[AccessControl.FileSystemAuditRule#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AccessControl.FileSystemAuditRule/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="rule" /> имеет значение <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAuditRuleAll">
      <MemberSignature Language="C#" Value="public void RemoveAuditRuleAll (System.Security.AccessControl.FileSystemAuditRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAuditRuleAll(class System.Security.AccessControl.FileSystemAuditRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleAll(System.Security.AccessControl.FileSystemAuditRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAuditRuleAll (rule As FileSystemAuditRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAuditRuleAll(System::Security::AccessControl::FileSystemAuditRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.RemoveAuditRuleAll : System.Security.AccessControl.FileSystemAuditRule -&gt; unit" Usage="fileSystemSecurity.RemoveAuditRuleAll rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.FileSystemAuditRule" />
      </Parameters>
      <Docs>
        <param name="rule">Объект <see cref="T:System.Security.AccessControl.FileSystemAuditRule" />, задающий пользователя, правила аудита которого необходимо удалить из файла или каталога.</param>
        <summary>Удаляет все правила аудита для указанного пользователя из текущего файла или каталога.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleAll%2A> удаляет все правила аудита для указанного пользователя.  Он игнорирует все значения в объекте <xref:System.Security.AccessControl.FileSystemAuditRule>, за исключением учетной записи пользователя.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="rule" /> имеет значение <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAuditRuleSpecific">
      <MemberSignature Language="C#" Value="public void RemoveAuditRuleSpecific (System.Security.AccessControl.FileSystemAuditRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAuditRuleSpecific(class System.Security.AccessControl.FileSystemAuditRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.FileSystemAuditRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAuditRuleSpecific (rule As FileSystemAuditRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAuditRuleSpecific(System::Security::AccessControl::FileSystemAuditRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.RemoveAuditRuleSpecific : System.Security.AccessControl.FileSystemAuditRule -&gt; unit" Usage="fileSystemSecurity.RemoveAuditRuleSpecific rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.FileSystemAuditRule" />
      </Parameters>
      <Docs>
        <param name="rule">Объект <see cref="T:System.Security.AccessControl.FileSystemAuditRule" />, представляющий правило аудита, которое необходимо удалить из файла или каталога.</param>
        <summary>Удаляет одно подходящее разрешающее или запрещающее правило аудита из текущего файла или каталога.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleSpecific%2A> удаляет указанное совпадающее правило аудита <xref:System.Security.AccessControl.AccessControlType.Deny> или указанное сопоставление <xref:System.Security.AccessControl.AccessControlType.Allow> правило аудита из текущего объекта <xref:System.Security.AccessControl.FileSystemSecurity>.  Например, этот метод можно использовать для удаления указанного правила аудита <xref:System.Security.AccessControl.AccessControlType.Deny> для пользователя путем передачи объекта <xref:System.Security.AccessControl.FileSystemAuditRule>, созданного с помощью значения <xref:System.Security.AccessControl.AccessControlType.Deny>, <xref:System.Security.AccessControl.AuditFlags.Failure> значения и учетной записи пользователя.  После этого метод <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleSpecific%2A> удаляет только правило Deny, которое задает значение <xref:System.Security.AccessControl.AuditFlags.Failure>.  При этом не удаляются правила запрета, указывающие значение <xref:System.Security.AccessControl.AuditFlags.Success>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="rule" /> имеет значение <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ResetAccessRule">
      <MemberSignature Language="C#" Value="public void ResetAccessRule (System.Security.AccessControl.FileSystemAccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetAccessRule(class System.Security.AccessControl.FileSystemAccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemSecurity.ResetAccessRule(System.Security.AccessControl.FileSystemAccessRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetAccessRule (rule As FileSystemAccessRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetAccessRule(System::Security::AccessControl::FileSystemAccessRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.ResetAccessRule : System.Security.AccessControl.FileSystemAccessRule -&gt; unit" Usage="fileSystemSecurity.ResetAccessRule rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.FileSystemAccessRule" />
      </Parameters>
      <Docs>
        <param name="rule">Объект <see cref="T:System.Security.AccessControl.FileSystemAccessRule" />, представляющий разрешение списка управления доступом, которое необходимо добавить к файлу или каталогу.</param>
        <summary>Добавляет указанное разрешение списка управления доступом к текущему файлу или каталогу и удаляет все совпадающие разрешения списка управления доступом.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод <xref:System.Security.AccessControl.FileSystemSecurity.ResetAccessRule%2A> добавляет указанное правило списка управления доступом (ACL) или перезаписывает все идентичные правила ACL, соответствующие параметру `rule`.  Например, если параметр `rule` задает <xref:System.Security.AccessControl.FileSystemRights.Read> значение, а метод <xref:System.Security.AccessControl.FileSystemSecurity.ResetAccessRule%2A> находит идентичное правило ACL, определяющее значение <xref:System.Security.AccessControl.FileSystemRights.Read>, то идентичное правило будет перезаписано.  Если метод <xref:System.Security.AccessControl.FileSystemSecurity.ResetAccessRule%2A> находит идентичное правило ACL, определяющее значение <xref:System.Security.AccessControl.FileSystemRights.Write>, то идентичное правило также будет перезаписано.  
  
 Чтобы сохранить новые или измененные данные ACL в файле, используйте метод <xref:System.IO.File.SetAccessControl%2A> или <xref:System.IO.FileInfo.SetAccessControl%2A>.  Чтобы сохранить новые или измененные данные ACL в каталоге, используйте метод <xref:System.IO.Directory.SetAccessControl%2A> или <xref:System.IO.FileInfo.SetAccessControl%2A>.  
  
 Чтобы получить данные ACL из файла, используйте метод <xref:System.IO.File.GetAccessControl%2A> или <xref:System.IO.FileInfo.GetAccessControl%2A>.  Чтобы получить данные ACL из каталога, используйте метод <xref:System.IO.Directory.GetAccessControl%2A> или <xref:System.IO.DirectoryInfo.GetAccessControl%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="rule" /> имеет значение <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="SetAccessRule">
      <MemberSignature Language="C#" Value="public void SetAccessRule (System.Security.AccessControl.FileSystemAccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAccessRule(class System.Security.AccessControl.FileSystemAccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemSecurity.SetAccessRule(System.Security.AccessControl.FileSystemAccessRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetAccessRule (rule As FileSystemAccessRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAccessRule(System::Security::AccessControl::FileSystemAccessRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.SetAccessRule : System.Security.AccessControl.FileSystemAccessRule -&gt; unit" Usage="fileSystemSecurity.SetAccessRule rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.FileSystemAccessRule" />
      </Parameters>
      <Docs>
        <param name="rule">Объект <see cref="T:System.Security.AccessControl.FileSystemAccessRule" />, представляющий разрешение списка управления доступом, которое необходимо установить для файла или каталога.</param>
        <summary>Устанавливает указанное разрешение списка управления доступом для текущего файла или каталога.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод <xref:System.Security.AccessControl.FileSystemSecurity.SetAccessRule%2A> добавляет указанное правило списка управления доступом (ACL) или перезаписывает все идентичные правила ACL, соответствующие <xref:System.Security.AccessControl.FileSystemRights>ному значению параметра `rule`.  Например, если параметр `rule` задает <xref:System.Security.AccessControl.FileSystemRights.Read> значение, а метод <xref:System.Security.AccessControl.FileSystemSecurity.SetAccessRule%2A> находит идентичное правило ACL, определяющее значение <xref:System.Security.AccessControl.FileSystemRights.Read>, то идентичное правило будет перезаписано.  Если метод <xref:System.Security.AccessControl.FileSystemSecurity.SetAccessRule%2A> находит идентичное правило ACL, определяющее значение <xref:System.Security.AccessControl.FileSystemRights.Write>, то идентичное правило не будет перезаписано.  
  
 Чтобы сохранить новые или измененные данные ACL в файле, используйте метод <xref:System.IO.File.SetAccessControl%2A> или <xref:System.IO.FileInfo.SetAccessControl%2A>.  Чтобы сохранить новые или измененные данные ACL в каталоге, используйте метод <xref:System.IO.Directory.SetAccessControl%2A> или <xref:System.IO.FileInfo.SetAccessControl%2A>.  
  
 Чтобы получить данные ACL из файла, используйте метод <xref:System.IO.File.GetAccessControl%2A> или <xref:System.IO.FileInfo.GetAccessControl%2A>.  Чтобы получить данные ACL из каталога, используйте метод <xref:System.IO.Directory.GetAccessControl%2A> или <xref:System.IO.DirectoryInfo.GetAccessControl%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="rule" /> имеет значение <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="SetAuditRule">
      <MemberSignature Language="C#" Value="public void SetAuditRule (System.Security.AccessControl.FileSystemAuditRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAuditRule(class System.Security.AccessControl.FileSystemAuditRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSystemSecurity.SetAuditRule(System.Security.AccessControl.FileSystemAuditRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetAuditRule (rule As FileSystemAuditRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAuditRule(System::Security::AccessControl::FileSystemAuditRule ^ rule);" />
      <MemberSignature Language="F#" Value="override this.SetAuditRule : System.Security.AccessControl.FileSystemAuditRule -&gt; unit" Usage="fileSystemSecurity.SetAuditRule rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.Security.AccessControl.FileSystemAuditRule" />
      </Parameters>
      <Docs>
        <param name="rule">Объект <see cref="T:System.Security.AccessControl.FileSystemAuditRule" />, представляющий правило аудита, которое необходимо установить для файла или каталога.</param>
        <summary>Устанавливает указанное правило аудита для текущего файла или каталога.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод <xref:System.Security.AccessControl.FileSystemSecurity.SetAuditRule%2A> добавляет указанное правило аудита или перезаписывает все идентичные правила аудита, соответствующие <xref:System.Security.AccessControl.FileSystemRights>ному значению параметра `rule`.  Например, если параметр `rule` задает <xref:System.Security.AccessControl.FileSystemRights.Read> значение, а метод <xref:System.Security.AccessControl.FileSystemSecurity.SetAuditRule%2A> находит идентичное правило аудита, определяющее значение <xref:System.Security.AccessControl.FileSystemRights.Read>, то идентичное правило будет перезаписано.  Если метод <xref:System.Security.AccessControl.FileSystemSecurity.SetAuditRule%2A> находит идентичное правило аудита, определяющее значение <xref:System.Security.AccessControl.FileSystemRights.Write>, то идентичное правило не будет перезаписано.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="rule" /> имеет значение <see langword="null" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
