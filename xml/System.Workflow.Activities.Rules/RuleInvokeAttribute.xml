<Type Name="RuleInvokeAttribute" FullName="System.Workflow.Activities.Rules.RuleInvokeAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3aff4cf66403fc5e534ff6c897a276dc1bd6a8a3" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70517015" /></Metadata><TypeSignature Language="C#" Value="public sealed class RuleInvokeAttribute : System.Workflow.Activities.Rules.RuleAttribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit RuleInvokeAttribute extends System.Workflow.Activities.Rules.RuleAttribute" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.Activities.Rules.RuleInvokeAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class RuleInvokeAttribute&#xA;Inherits RuleAttribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class RuleInvokeAttribute sealed : System::Workflow::Activities::Rules::RuleAttribute" />
  <TypeSignature Language="F#" Value="type RuleInvokeAttribute = class&#xA;    inherit RuleAttribute" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.Activities</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Workflow.Activities.Rules.RuleAttribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Method | System.AttributeTargets.Property, AllowMultiple=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="80b65-101">Указывает, что метод вызван с помощью условия.</span><span class="sxs-lookup"><span data-stu-id="80b65-101">Indicates that a method is invoked by a condition.</span></span> <span data-ttu-id="80b65-102">Этот класс не наследуется.</span><span class="sxs-lookup"><span data-stu-id="80b65-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80b65-103">Этот атрибут служит для поддержки модели прямой логической цепочки, которая вызовет повторное вычисление правил на основе изменения состояния.</span><span class="sxs-lookup"><span data-stu-id="80b65-103">This attribute is used to support a forward chaining model that will cause the reevaluation of rules based on state change.</span></span> <span data-ttu-id="80b65-104">Классы <xref:System.Workflow.Activities.Rules.RuleReadAttribute>, <xref:System.Workflow.Activities.Rules.RuleInvokeAttribute> и <xref:System.Workflow.Activities.Rules.RuleWriteAttribute> определяют свойства, используемые для чтения условия, записи действия и вызова метода.</span><span class="sxs-lookup"><span data-stu-id="80b65-104">The <xref:System.Workflow.Activities.Rules.RuleReadAttribute>, <xref:System.Workflow.Activities.Rules.RuleInvokeAttribute>, and <xref:System.Workflow.Activities.Rules.RuleWriteAttribute> classes each indicate the properties used to read a condition, write an action, and invoke a method.</span></span> <span data-ttu-id="80b65-105">Эти атрибуты позволяют рабочему процессу заново вычислять только те правила, которые вызовут изменение конечного результата.</span><span class="sxs-lookup"><span data-stu-id="80b65-105">These attributes enable the workflow to only reevaluate rules that will change the final output.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="80b65-106">В следующем примере кода демонстрируется правильное использование объекта <xref:System.Workflow.Activities.Rules.RuleInvokeAttribute>.</span><span class="sxs-lookup"><span data-stu-id="80b65-106">The following code example demonstrates proper usage of the <xref:System.Workflow.Activities.Rules.RuleInvokeAttribute>.</span></span>  
  
```csharp  
[RuleInvokeAttribute("UpdateAttributeValue")]  
  
bool DoSomething()  
{  
    return attributevalue();  
}  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RuleInvokeAttribute (string methodInvoked);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string methodInvoked) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.Rules.RuleInvokeAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (methodInvoked As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RuleInvokeAttribute(System::String ^ methodInvoked);" />
      <MemberSignature Language="F#" Value="new System.Workflow.Activities.Rules.RuleInvokeAttribute : string -&gt; System.Workflow.Activities.Rules.RuleInvokeAttribute" Usage="new System.Workflow.Activities.Rules.RuleInvokeAttribute methodInvoked" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="methodInvoked" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="methodInvoked"><span data-ttu-id="80b65-107">Метод, вызываемый правилом.</span><span class="sxs-lookup"><span data-stu-id="80b65-107">The method invoked by the rule.</span></span></param>
        <summary><span data-ttu-id="80b65-108">Инициализирует новый экземпляр класса <see cref="T:System.Workflow.Activities.Rules.RuleInvokeAttribute" />.</span><span class="sxs-lookup"><span data-stu-id="80b65-108">Initializes a new instance of the <see cref="T:System.Workflow.Activities.Rules.RuleInvokeAttribute" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MethodInvoked">
      <MemberSignature Language="C#" Value="public string MethodInvoked { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MethodInvoked" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Activities.Rules.RuleInvokeAttribute.MethodInvoked" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MethodInvoked As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MethodInvoked { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MethodInvoked : string" Usage="System.Workflow.Activities.Rules.RuleInvokeAttribute.MethodInvoked" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Activities</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="80b65-109">Возвращает метод, вызываемый условием.</span><span class="sxs-lookup"><span data-stu-id="80b65-109">Gets the method invoked by the condition.</span></span></summary>
        <value><span data-ttu-id="80b65-110">Метод, вызываемый условием.</span><span class="sxs-lookup"><span data-stu-id="80b65-110">The method invoked by the condition.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
