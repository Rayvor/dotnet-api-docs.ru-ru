<Type Name="SymmetricSecurityKey" FullName="System.IdentityModel.Tokens.SymmetricSecurityKey">
  <Metadata><Meta Name="ms.openlocfilehash" Value="04edba8af4da50cb60cdd86ecc878435e4eb8aa5" /><Meta Name="ms.sourcegitcommit" Value="f1d16425528e237257ca3b58eb49217a514849ea" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="04/24/2019" /><Meta Name="ms.locfileid" Value="64013960" /></Metadata><TypeSignature Language="C#" Value="public abstract class SymmetricSecurityKey : System.IdentityModel.Tokens.SecurityKey" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SymmetricSecurityKey extends System.IdentityModel.Tokens.SecurityKey" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Tokens.SymmetricSecurityKey" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SymmetricSecurityKey&#xA;Inherits SecurityKey" />
  <TypeSignature Language="C++ CLI" Value="public ref class SymmetricSecurityKey abstract : System::IdentityModel::Tokens::SecurityKey" />
  <TypeSignature Language="F#" Value="type SymmetricSecurityKey = class&#xA;    inherit SecurityKey" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IdentityModel.Tokens.SecurityKey</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="350be-101">Представляет базовый класс для всех ключей, созданных с помощью симметричных алгоритмов.</span><span class="sxs-lookup"><span data-stu-id="350be-101">Represents the abstract base class for all keys that are generated using symmetric algorithms.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="350be-102">Обычно этот класс используется инфраструктурой для преобразования XML с помощью симметричного ключа.</span><span class="sxs-lookup"><span data-stu-id="350be-102">Typically, this class is used by the infrastructure to transform XML using a symmetric key.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SymmetricSecurityKey ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SymmetricSecurityKey.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SymmetricSecurityKey();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="350be-103">Инициализирует новый экземпляр класса <see cref="T:System.IdentityModel.Tokens.SymmetricSecurityKey" />.</span><span class="sxs-lookup"><span data-stu-id="350be-103">Initializes a new instance of the <see cref="T:System.IdentityModel.Tokens.SymmetricSecurityKey" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateDerivedKey">
      <MemberSignature Language="C#" Value="public abstract byte[] GenerateDerivedKey (string algorithm, byte[] label, byte[] nonce, int derivedKeyLength, int offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] GenerateDerivedKey(string algorithm, unsigned int8[] label, unsigned int8[] nonce, int32 derivedKeyLength, int32 offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GenerateDerivedKey(System.String,System.Byte[],System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GenerateDerivedKey (algorithm As String, label As Byte(), nonce As Byte(), derivedKeyLength As Integer, offset As Integer) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract cli::array &lt;System::Byte&gt; ^ GenerateDerivedKey(System::String ^ algorithm, cli::array &lt;System::Byte&gt; ^ label, cli::array &lt;System::Byte&gt; ^ nonce, int derivedKeyLength, int offset);" />
      <MemberSignature Language="F#" Value="abstract member GenerateDerivedKey : string * byte[] * byte[] * int * int -&gt; byte[]" Usage="symmetricSecurityKey.GenerateDerivedKey (algorithm, label, nonce, derivedKeyLength, offset)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
        <Parameter Name="label" Type="System.Byte[]" />
        <Parameter Name="nonce" Type="System.Byte[]" />
        <Parameter Name="derivedKeyLength" Type="System.Int32" />
        <Parameter Name="offset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="algorithm"><span data-ttu-id="350be-104">Универсальный код ресурса (URI), представляющий алгоритм шифрования, который используется для создания производного ключа.</span><span class="sxs-lookup"><span data-stu-id="350be-104">A URI that represents the cryptographic algorithm to use to generate the derived key.</span></span></param>
        <param name="label"><span data-ttu-id="350be-105">Массив <see cref="T:System.Byte" />, содержащий параметр метки для алгоритма шифрования.</span><span class="sxs-lookup"><span data-stu-id="350be-105">An array of <see cref="T:System.Byte" /> that contains the label parameter for the cryptographic algorithm.</span></span></param>
        <param name="nonce"><span data-ttu-id="350be-106">Массив <see cref="T:System.Byte" />, содержащий специальное слово, которое используется для создания производного ключа.</span><span class="sxs-lookup"><span data-stu-id="350be-106">An array of <see cref="T:System.Byte" /> that contains the nonce that is used to create a derived key.</span></span></param>
        <param name="derivedKeyLength"><span data-ttu-id="350be-107">Размер производного ключа.</span><span class="sxs-lookup"><span data-stu-id="350be-107">The size of the derived key.</span></span></param>
        <param name="offset"><span data-ttu-id="350be-108">Позиция, в которой расположен производный ключ в массиве байтов, возвращаемом из этого метода.</span><span class="sxs-lookup"><span data-stu-id="350be-108">The position at which the derived key is located in the byte array that is returned from this method.</span></span></param>
        <summary><span data-ttu-id="350be-109">При переопределении в производном классе создается производный ключ с помощью указанного алгоритма шифрования и параметров для текущего ключа.</span><span class="sxs-lookup"><span data-stu-id="350be-109">When overridden in a derived class, generates a derived key using the specified cryptographic algorithm and parameters for the current key.</span></span></summary>
        <returns><span data-ttu-id="350be-110">Массив <see cref="T:System.Byte" />, содержащий производный ключ.</span><span class="sxs-lookup"><span data-stu-id="350be-110">An array of <see cref="T:System.Byte" /> that contains the derived key.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="350be-111">Чтобы указать P-SHA1 в качестве алгоритма шифрования, используйте поле <xref:System.IdentityModel.Tokens.SecurityAlgorithms.Psha1KeyDerivation>.</span><span class="sxs-lookup"><span data-stu-id="350be-111">To specify P-SHA1 as the cryptographic algorithm, use the <xref:System.IdentityModel.Tokens.SecurityAlgorithms.Psha1KeyDerivation> field.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDecryptionTransform">
      <MemberSignature Language="C#" Value="public abstract System.Security.Cryptography.ICryptoTransform GetDecryptionTransform (string algorithm, byte[] iv);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.Cryptography.ICryptoTransform GetDecryptionTransform(string algorithm, unsigned int8[] iv) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GetDecryptionTransform(System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetDecryptionTransform (algorithm As String, iv As Byte()) As ICryptoTransform" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Security::Cryptography::ICryptoTransform ^ GetDecryptionTransform(System::String ^ algorithm, cli::array &lt;System::Byte&gt; ^ iv);" />
      <MemberSignature Language="F#" Value="abstract member GetDecryptionTransform : string * byte[] -&gt; System.Security.Cryptography.ICryptoTransform" Usage="symmetricSecurityKey.GetDecryptionTransform (algorithm, iv)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.ICryptoTransform</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
        <Parameter Name="iv" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="algorithm"><span data-ttu-id="350be-112">Алгоритм шифрования, который расшифровывает текст, например, зашифрованный текст XML.</span><span class="sxs-lookup"><span data-stu-id="350be-112">A cryptographic algorithm that decrypts cipher text, such as encrypted XML.</span></span></param>
        <param name="iv"><span data-ttu-id="350be-113">Массив <see cref="T:System.Byte" />, содержащий вектор инициализации (<see langword="IV" />) для указанного алгоритма.</span><span class="sxs-lookup"><span data-stu-id="350be-113">An array of <see cref="T:System.Byte" /> that contains the initialization vector (<see langword="IV" />) for the specified algorithm.</span></span></param>
        <summary><span data-ttu-id="350be-114">При переопределении в производном классе возвращает преобразование, которое расшифровывает текст с помощью указанного алгоритма шифрования.</span><span class="sxs-lookup"><span data-stu-id="350be-114">When overridden in a derived class, gets a transform that decrypts cipher text using the specified cryptographic algorithm.</span></span></summary>
        <returns><span data-ttu-id="350be-115">Объект <see cref="T:System.Security.Cryptography.ICryptoTransform" />, представляющий преобразование расшифровки.</span><span class="sxs-lookup"><span data-stu-id="350be-115">An <see cref="T:System.Security.Cryptography.ICryptoTransform" /> that represents the decryption transform.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="350be-116">Чтобы указать алгоритм, используйте поля, представляющие алгоритмы расшифровки в классе <xref:System.IdentityModel.Tokens.SecurityAlgorithms>.</span><span class="sxs-lookup"><span data-stu-id="350be-116">Use the fields that represent decryption algorithms in the <xref:System.IdentityModel.Tokens.SecurityAlgorithms> class to specify the algorithm.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEncryptionTransform">
      <MemberSignature Language="C#" Value="public abstract System.Security.Cryptography.ICryptoTransform GetEncryptionTransform (string algorithm, byte[] iv);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.Cryptography.ICryptoTransform GetEncryptionTransform(string algorithm, unsigned int8[] iv) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GetEncryptionTransform(System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetEncryptionTransform (algorithm As String, iv As Byte()) As ICryptoTransform" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Security::Cryptography::ICryptoTransform ^ GetEncryptionTransform(System::String ^ algorithm, cli::array &lt;System::Byte&gt; ^ iv);" />
      <MemberSignature Language="F#" Value="abstract member GetEncryptionTransform : string * byte[] -&gt; System.Security.Cryptography.ICryptoTransform" Usage="symmetricSecurityKey.GetEncryptionTransform (algorithm, iv)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.ICryptoTransform</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
        <Parameter Name="iv" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="algorithm"><span data-ttu-id="350be-117">Алгоритм для шифрования XML.</span><span class="sxs-lookup"><span data-stu-id="350be-117">A cryptographic algorithm that encrypts XML.</span></span></param>
        <param name="iv"><span data-ttu-id="350be-118">Массив <see cref="T:System.Byte" />, содержащий вектор инициализации (<see langword="IV" />) для указанного алгоритма.</span><span class="sxs-lookup"><span data-stu-id="350be-118">An array of <see cref="T:System.Byte" /> that contains the initialization vector (<see langword="IV" />) for the specified algorithm.</span></span></param>
        <summary><span data-ttu-id="350be-119">При переопределении в производном классе возвращает преобразование, которое шифрует XML с помощью указанного алгоритма шифрования.</span><span class="sxs-lookup"><span data-stu-id="350be-119">When overridden in a derived class, gets a transform that encrypts XML using the specified cryptographic algorithm.</span></span></summary>
        <returns><span data-ttu-id="350be-120">Объект <see cref="T:System.Security.Cryptography.ICryptoTransform" />, представляющий преобразование шифрования.</span><span class="sxs-lookup"><span data-stu-id="350be-120">An <see cref="T:System.Security.Cryptography.ICryptoTransform" /> that represents the encryption transform.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="350be-121">Чтобы указать алгоритм, используйте поля, представляющие алгоритмы расшифровки в классе <xref:System.IdentityModel.Tokens.SecurityAlgorithms>.</span><span class="sxs-lookup"><span data-stu-id="350be-121">Use the fields that represent decryption algorithms in the <xref:System.IdentityModel.Tokens.SecurityAlgorithms> class to specify the algorithm.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIVSize">
      <MemberSignature Language="C#" Value="public abstract int GetIVSize (string algorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetIVSize(string algorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GetIVSize(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetIVSize (algorithm As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int GetIVSize(System::String ^ algorithm);" />
      <MemberSignature Language="F#" Value="abstract member GetIVSize : string -&gt; int" Usage="symmetricSecurityKey.GetIVSize algorithm" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="algorithm"><span data-ttu-id="350be-122">Алгоритм шифрования, который используется для получения размера вектора инициализации (<see langword="IV" />).</span><span class="sxs-lookup"><span data-stu-id="350be-122">The cryptographic algorithm to get the size of the initialization vector (<see langword="IV" />).</span></span></param>
        <summary><span data-ttu-id="350be-123">При переопределении в производном классе возвращает размер в битах для вектора инициализации (<see langword="IV" />), который требуется для указанного алгоритма шифрования.</span><span class="sxs-lookup"><span data-stu-id="350be-123">When overridden in a derived class, gets the size, in bits, of the initialization vector (<see langword="IV" />) that is required for the specified cryptographic algorithm.</span></span></summary>
        <returns><span data-ttu-id="350be-124">Размер в битах для вектора инициализации (<see langword="IV" />), который требуется для алгоритма шифрования, указанного в параметре <paramref name="algorithm" />.</span><span class="sxs-lookup"><span data-stu-id="350be-124">The size, in bits, of the initialization vector (<see langword="IV" />) that is required for the cryptographic algorithm specified in the <paramref name="algorithm" /> parameter.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetKeyedHashAlgorithm">
      <MemberSignature Language="C#" Value="public abstract System.Security.Cryptography.KeyedHashAlgorithm GetKeyedHashAlgorithm (string algorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.Cryptography.KeyedHashAlgorithm GetKeyedHashAlgorithm(string algorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GetKeyedHashAlgorithm(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetKeyedHashAlgorithm (algorithm As String) As KeyedHashAlgorithm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Security::Cryptography::KeyedHashAlgorithm ^ GetKeyedHashAlgorithm(System::String ^ algorithm);" />
      <MemberSignature Language="F#" Value="abstract member GetKeyedHashAlgorithm : string -&gt; System.Security.Cryptography.KeyedHashAlgorithm" Usage="symmetricSecurityKey.GetKeyedHashAlgorithm algorithm" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.KeyedHashAlgorithm</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="algorithm"><span data-ttu-id="350be-125">Хэш-алгоритм с ключом, используемый для получения экземпляра.</span><span class="sxs-lookup"><span data-stu-id="350be-125">The keyed hash algorithm to get an instance of.</span></span></param>
        <summary><span data-ttu-id="350be-126">При переопределении в производном классе возвращает экземпляр указанного хэш-алгоритма с ключом.</span><span class="sxs-lookup"><span data-stu-id="350be-126">When overridden in a derived class, gets an instance of the specified keyed hash algorithm.</span></span></summary>
        <returns><span data-ttu-id="350be-127">Объект <see cref="T:System.Security.Cryptography.KeyedHashAlgorithm" />, представляющий хэш-алгоритм с ключом.</span><span class="sxs-lookup"><span data-stu-id="350be-127">A <see cref="T:System.Security.Cryptography.KeyedHashAlgorithm" /> that represents the keyed hash algorithm.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="350be-128">Чтобы указать алгоритм, используйте поля, представляющие хэш-алгоритм с ключом в классе <xref:System.IdentityModel.Tokens.SecurityAlgorithms>.</span><span class="sxs-lookup"><span data-stu-id="350be-128">Use the fields that represent keyed hash algorithms in the <xref:System.IdentityModel.Tokens.SecurityAlgorithms> class to specify the algorithm.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSymmetricAlgorithm">
      <MemberSignature Language="C#" Value="public abstract System.Security.Cryptography.SymmetricAlgorithm GetSymmetricAlgorithm (string algorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.Cryptography.SymmetricAlgorithm GetSymmetricAlgorithm(string algorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GetSymmetricAlgorithm(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetSymmetricAlgorithm (algorithm As String) As SymmetricAlgorithm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Security::Cryptography::SymmetricAlgorithm ^ GetSymmetricAlgorithm(System::String ^ algorithm);" />
      <MemberSignature Language="F#" Value="abstract member GetSymmetricAlgorithm : string -&gt; System.Security.Cryptography.SymmetricAlgorithm" Usage="symmetricSecurityKey.GetSymmetricAlgorithm algorithm" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.SymmetricAlgorithm</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="algorithm"><span data-ttu-id="350be-129">Симметричный алгоритм для получения экземпляра.</span><span class="sxs-lookup"><span data-stu-id="350be-129">The symmetric algorithm to get an instance of.</span></span></param>
        <summary><span data-ttu-id="350be-130">При переопределении в производном классе возвращает экземпляр указанного симметричного алгоритма.</span><span class="sxs-lookup"><span data-stu-id="350be-130">When overridden in a derived class, gets an instance of the specified symmetric algorithm.</span></span></summary>
        <returns><span data-ttu-id="350be-131">Объект <see cref="T:System.Security.Cryptography.SymmetricAlgorithm" />, представляющий симметричный алгоритм.</span><span class="sxs-lookup"><span data-stu-id="350be-131">A <see cref="T:System.Security.Cryptography.SymmetricAlgorithm" /> that represents the symmetric algorithm.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="350be-132">Чтобы указать алгоритм, используйте поля, представляющие симметричные алгоритмы в классе <xref:System.IdentityModel.Tokens.SecurityAlgorithms>.</span><span class="sxs-lookup"><span data-stu-id="350be-132">Use the fields that represent symmetric algorithms in the <xref:System.IdentityModel.Tokens.SecurityAlgorithms> class to specify the algorithm.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSymmetricKey">
      <MemberSignature Language="C#" Value="public abstract byte[] GetSymmetricKey ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] GetSymmetricKey() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GetSymmetricKey" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetSymmetricKey () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract cli::array &lt;System::Byte&gt; ^ GetSymmetricKey();" />
      <MemberSignature Language="F#" Value="abstract member GetSymmetricKey : unit -&gt; byte[]" Usage="symmetricSecurityKey.GetSymmetricKey " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="350be-133">При переопределении в производном классе возвращает байты, представляющие симметричный ключ.</span><span class="sxs-lookup"><span data-stu-id="350be-133">When overridden in a derived class, gets the bytes that represent the symmetric key.</span></span></summary>
        <returns><span data-ttu-id="350be-134">Массив <see cref="T:System.Byte" />, содержащий симметричный ключ.</span><span class="sxs-lookup"><span data-stu-id="350be-134">An array of <see cref="T:System.Byte" /> that contains the symmetric key.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>