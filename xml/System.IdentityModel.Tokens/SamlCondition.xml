<Type Name="SamlCondition" FullName="System.IdentityModel.Tokens.SamlCondition">
  <Metadata><Meta Name="ms.openlocfilehash" Value="65403afd76f5ce78699ddcded9b6f62f37c39f46" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70638026" /></Metadata><TypeSignature Language="C#" Value="public abstract class SamlCondition" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SamlCondition extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Tokens.SamlCondition" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SamlCondition" />
  <TypeSignature Language="C++ CLI" Value="public ref class SamlCondition abstract" />
  <TypeSignature Language="F#" Value="type SamlCondition = class" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Представляет условие, которое необходимо принимать во внимание при оценке действительности утверждений SAML.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Маркеры безопасности <xref:System.IdentityModel.Tokens.SamlSecurityToken> задают утверждения с помощью утверждений SAML и набора условий, которые необходимо принимать во внимание при оценке действительности утверждения SAML. Класс <xref:System.IdentityModel.Tokens.SamlCondition> представляет одно условие. Наличие или отсутствие кэширования утверждения SAML является примером условия, который представлен классом <xref:System.IdentityModel.Tokens.SamlDoNotCacheCondition>.  
  
 Спецификация SAML определяет два условия и допускает расширение набора условий. Два условия, определенные в спецификации SAML, — <xref:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition> и <xref:System.IdentityModel.Tokens.SamlDoNotCacheCondition>. Чтобы определить новое условие, создайте класс, наследуемый от класса <xref:System.IdentityModel.Tokens.SamlCondition>.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IdentityModel.Tokens.SamlSecurityToken" />
    <altmember cref="T:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition" />
    <altmember cref="T:System.IdentityModel.Tokens.SamlDoNotCacheCondition" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SamlCondition ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SamlCondition.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SamlCondition();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.IdentityModel.Tokens.SamlCondition" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public abstract bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Tokens.SamlCondition.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.IdentityModel.Tokens.SamlCondition.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>При переопределении в производном классе возвращает значение, определяющее, являются ли свойства данного экземпляра доступными только для чтения.</summary>
        <value>Значение <see langword="true" />, если свойства этого экземпляра доступны только для чтения; в противном случае — значение <see langword="false" />. Значение по умолчанию — <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Чтобы сделать этот экземпляр класса <xref:System.IdentityModel.Tokens.SamlCondition> доступным только для чтения, вызовите метод <xref:System.IdentityModel.Tokens.SamlCondition.MakeReadOnly%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MakeReadOnly">
      <MemberSignature Language="C#" Value="public abstract void MakeReadOnly ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void MakeReadOnly() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SamlCondition.MakeReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub MakeReadOnly ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void MakeReadOnly();" />
      <MemberSignature Language="F#" Value="abstract member MakeReadOnly : unit -&gt; unit" Usage="samlCondition.MakeReadOnly " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>При переопределении в производном классе делает этот экземпляр доступным только для чтения.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При вызове метода <xref:System.IdentityModel.Tokens.SamlCondition.MakeReadOnly%2A> свойству <xref:System.IdentityModel.Tokens.SamlCondition.IsReadOnly%2A> задается значение `true`, и установка свойств этого экземпляра больше невозможна.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadXml">
      <MemberSignature Language="C#" Value="public abstract void ReadXml (System.Xml.XmlDictionaryReader reader, System.IdentityModel.Tokens.SamlSerializer samlSerializer, System.IdentityModel.Selectors.SecurityTokenSerializer keyInfoSerializer, System.IdentityModel.Selectors.SecurityTokenResolver outOfBandTokenResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReadXml(class System.Xml.XmlDictionaryReader reader, class System.IdentityModel.Tokens.SamlSerializer samlSerializer, class System.IdentityModel.Selectors.SecurityTokenSerializer keyInfoSerializer, class System.IdentityModel.Selectors.SecurityTokenResolver outOfBandTokenResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SamlCondition.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void ReadXml(System::Xml::XmlDictionaryReader ^ reader, System::IdentityModel::Tokens::SamlSerializer ^ samlSerializer, System::IdentityModel::Selectors::SecurityTokenSerializer ^ keyInfoSerializer, System::IdentityModel::Selectors::SecurityTokenResolver ^ outOfBandTokenResolver);" />
      <MemberSignature Language="F#" Value="abstract member ReadXml : System.Xml.XmlDictionaryReader * System.IdentityModel.Tokens.SamlSerializer * System.IdentityModel.Selectors.SecurityTokenSerializer * System.IdentityModel.Selectors.SecurityTokenResolver -&gt; unit" Usage="samlCondition.ReadXml (reader, samlSerializer, keyInfoSerializer, outOfBandTokenResolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlDictionaryReader" />
        <Parameter Name="samlSerializer" Type="System.IdentityModel.Tokens.SamlSerializer" />
        <Parameter Name="keyInfoSerializer" Type="System.IdentityModel.Selectors.SecurityTokenSerializer" />
        <Parameter Name="outOfBandTokenResolver" Type="System.IdentityModel.Selectors.SecurityTokenResolver" />
      </Parameters>
      <Docs>
        <param name="reader">Объект <see cref="T:System.Xml.XmlDictionaryReader" /> для чтения условия.</param>
        <param name="samlSerializer">Объект <see cref="T:System.IdentityModel.Tokens.SamlSerializer" />, способный считывать элементы XML в операторе авторизации SAML, заданном в спецификации SAML.</param>
        <param name="keyInfoSerializer">Объект <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" />, считывающий предложение <see langword="KeyInfo" /> цифровой сигнатуры.</param>
        <param name="outOfBandTokenResolver">Объект <see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" />, определяющий маркер безопасности, создавший цифровую сигнатуру.</param>
        <summary>Чтение условия из указанного средства чтения XML (при переопределении в производном классе).</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteXml">
      <MemberSignature Language="C#" Value="public abstract void WriteXml (System.Xml.XmlDictionaryWriter writer, System.IdentityModel.Tokens.SamlSerializer samlSerializer, System.IdentityModel.Selectors.SecurityTokenSerializer keyInfoSerializer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteXml(class System.Xml.XmlDictionaryWriter writer, class System.IdentityModel.Tokens.SamlSerializer samlSerializer, class System.IdentityModel.Selectors.SecurityTokenSerializer keyInfoSerializer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Tokens.SamlCondition.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteXml(System::Xml::XmlDictionaryWriter ^ writer, System::IdentityModel::Tokens::SamlSerializer ^ samlSerializer, System::IdentityModel::Selectors::SecurityTokenSerializer ^ keyInfoSerializer);" />
      <MemberSignature Language="F#" Value="abstract member WriteXml : System.Xml.XmlDictionaryWriter * System.IdentityModel.Tokens.SamlSerializer * System.IdentityModel.Selectors.SecurityTokenSerializer -&gt; unit" Usage="samlCondition.WriteXml (writer, samlSerializer, keyInfoSerializer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlDictionaryWriter" />
        <Parameter Name="samlSerializer" Type="System.IdentityModel.Tokens.SamlSerializer" />
        <Parameter Name="keyInfoSerializer" Type="System.IdentityModel.Selectors.SecurityTokenSerializer" />
      </Parameters>
      <Docs>
        <param name="writer">Объект <see cref="T:System.Xml.XmlDictionaryWriter" /> для записи условия.</param>
        <param name="samlSerializer">Объект <see cref="T:System.IdentityModel.Tokens.SamlSerializer" />, способный записывать XML-элементы в утверждение SAML.</param>
        <param name="keyInfoSerializer">Объект <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" />, способный записывать предложения <see langword="KeyInfo" />.</param>
        <summary>Запись условия в указанный сериализатор XML (при переопределении в производном классе).</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
